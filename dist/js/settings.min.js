if(angular.module("pascalprecht.translate",["ng"]).run(["$translate",function(e){var a=e.storageKey(),t=e.storage(),n=function(){var n=e.preferredLanguage();angular.isString(n)?e.use(n):t.put(a,e.use())};t?t.get(a)?e.use(t.get(a))["catch"](n):n():angular.isString(e.preferredLanguage())&&e.use(e.preferredLanguage())}]),angular.module("pascalprecht.translate").provider("$translate",["$STORAGE_KEY",function(e){var a,t,n,o,i,r,s,d,l,c,m,u,f,h,p,g={},b=[],v=e,y=[],w=!1,S="translate-cloak",A=!1,k=".",C="2.5.2",T=function(){var e,a,t=window.navigator,n=["language","browserLanguage","systemLanguage","userLanguage"];if(angular.isArray(t.languages))for(e=0;e<t.languages.length;e++)if(a=t.languages[e],a&&a.length)return a;for(e=0;e<n.length;e++)if(a=t[n[e]],a&&a.length)return a;return null};T.displayName="angular-translate/service: getFirstBrowserLanguage";var M=function(){return(T()||"").split("-").join("_")};M.displayName="angular-translate/service: getLocale";var N=function(e,a){for(var t=0,n=e.length;n>t;t++)if(e[t]===a)return t;return-1},x=function(){return this.replace(/^\s+|\s+$/g,"")},E=function(e){for(var a=[],n=angular.lowercase(e),o=0,i=b.length;i>o;o++)a.push(angular.lowercase(b[o]));if(N(a,n)>-1)return e;if(t){var r;for(var s in t){var d=!1,l=Object.prototype.hasOwnProperty.call(t,s)&&angular.lowercase(s)===angular.lowercase(e);if("*"===s.slice(-1)&&(d=s.slice(0,-1)===e.slice(0,s.length-1)),(l||d)&&(r=t[s],N(a,angular.lowercase(r))>-1))return r}}var c=e.split("_");return c.length>1&&N(a,angular.lowercase(c[0]))>-1?c[0]:e},B=function(e,a){if(!e&&!a)return g;if(e&&!a){if(angular.isString(e))return g[e]}else angular.isObject(g[e])||(g[e]={}),angular.extend(g[e],R(a));return this};this.translations=B,this.cloakClassName=function(e){return e?(S=e,this):S};var R=function(e,a,t,n){var o,i,r,s;a||(a=[]),t||(t={});for(o in e)Object.prototype.hasOwnProperty.call(e,o)&&(s=e[o],angular.isObject(s)?R(s,a.concat(o),t,o):(i=a.length?""+a.join(k)+k+o:o,a.length&&o===n&&(r=""+a.join(k),t[r]="@:"+i),t[i]=s));return t};this.addInterpolation=function(e){return y.push(e),this},this.useMessageFormatInterpolation=function(){return this.useInterpolation("$translateMessageFormatInterpolation")},this.useInterpolation=function(e){return c=e,this},this.useSanitizeValueStrategy=function(e){return w=e,this},this.preferredLanguage=function(e){return L(e),this};var L=function(e){return e&&(a=e),a};this.translationNotFoundIndicator=function(e){return this.translationNotFoundIndicatorLeft(e),this.translationNotFoundIndicatorRight(e),this},this.translationNotFoundIndicatorLeft=function(e){return e?(f=e,this):f},this.translationNotFoundIndicatorRight=function(e){return e?(h=e,this):h},this.fallbackLanguage=function(e){return P(e),this};var P=function(e){return e?(angular.isString(e)?(o=!0,n=[e]):angular.isArray(e)&&(o=!1,n=e),angular.isString(a)&&N(n,a)<0&&n.push(a),this):o?n[0]:n};this.use=function(e){if(e){if(!g[e]&&!m)throw new Error("$translateProvider couldn't find translationTable for langKey: '"+e+"'");return i=e,this}return i};var D=function(e){return e?(v=e,void 0):d?d+v:v};this.storageKey=D,this.useUrlLoader=function(e,a){return this.useLoader("$translateUrlLoader",angular.extend({url:e},a))},this.useStaticFilesLoader=function(e){return this.useLoader("$translateStaticFilesLoader",e)},this.useLoader=function(e,a){return m=e,u=a||{},this},this.useLocalStorage=function(){return this.useStorage("$translateLocalStorage")},this.useCookieStorage=function(){return this.useStorage("$translateCookieStorage")},this.useStorage=function(e){return s=e,this},this.storagePrefix=function(e){return e?(d=e,this):e},this.useMissingTranslationHandlerLog=function(){return this.useMissingTranslationHandler("$translateMissingTranslationHandlerLog")},this.useMissingTranslationHandler=function(e){return l=e,this},this.usePostCompiling=function(e){return A=!!e,this},this.determinePreferredLanguage=function(e){var t=e&&angular.isFunction(e)?e():M();return a=b.length?E(t):t,this},this.registerAvailableLanguageKeys=function(e,a){return e?(b=e,a&&(t=a),this):b},this.useLoaderCache=function(e){return e===!1?p=void 0:e===!0?p=!0:"undefined"==typeof e?p="$translationCache":e&&(p=e),this},this.$get=["$log","$injector","$rootScope","$q",function(e,t,d,b){var k,T,M,O=t.get(c||"$translateDefaultInterpolation"),I=!1,$={},H={},K=function(e,t,o){if(angular.isArray(e)){var r=function(e){for(var a={},n=[],i=function(e){var n=b.defer(),i=function(t){a[e]=t,n.resolve([e,t])};return K(e,t,o).then(i,i),n.promise},r=0,s=e.length;s>r;r++)n.push(i(e[r]));return b.all(n).then(function(){return a})};return r(e)}var d=b.defer();e&&(e=x.apply(e));var l=function(){var e=a?H[a]:H[i];if(T=0,s&&!e){var t=k.get(v);if(e=H[t],n&&n.length){var o=N(n,t);T=0===o?1:0,N(n,a)<0&&n.push(a)}}return e}();return l?l.then(function(){q(e,t,o).then(d.resolve,d.reject)},d.reject):q(e,t,o).then(d.resolve,d.reject),d.promise},G=function(e){return f&&(e=[f,e].join(" ")),h&&(e=[e,h].join(" ")),e},F=function(e){i=e,d.$emit("$translateChangeSuccess",{language:e}),s&&k.put(K.storageKey(),i),O.setLocale(i),angular.forEach($,function(e,a){$[a].setLocale(i)}),d.$emit("$translateChangeEnd",{language:e})},U=function(e){if(!e)throw"No language key specified for loading.";var a=b.defer();d.$emit("$translateLoadingStart",{language:e}),I=!0;var n=p;"string"==typeof n&&(n=t.get(n));var o=angular.extend({},u,{key:e,$http:angular.extend({},{cache:n},u.$http)});return t.get(m)(o).then(function(t){var n={};d.$emit("$translateLoadingSuccess",{language:e}),angular.isArray(t)?angular.forEach(t,function(e){angular.extend(n,R(e))}):angular.extend(n,R(t)),I=!1,a.resolve({key:e,table:n}),d.$emit("$translateLoadingEnd",{language:e})},function(e){d.$emit("$translateLoadingError",{language:e}),a.reject(e),d.$emit("$translateLoadingEnd",{language:e})}),a.promise};if(s&&(k=t.get(s),!k.get||!k.put))throw new Error("Couldn't use storage '"+s+"', missing get() or put() method!");angular.isFunction(O.useSanitizeValueStrategy)&&O.useSanitizeValueStrategy(w),y.length&&angular.forEach(y,function(e){var n=t.get(e);n.setLocale(a||i),angular.isFunction(n.useSanitizeValueStrategy)&&n.useSanitizeValueStrategy(w),$[n.getInterpolationIdentifier()]=n});var _=function(e){var a=b.defer();return Object.prototype.hasOwnProperty.call(g,e)?a.resolve(g[e]):H[e]?H[e].then(function(e){B(e.key,e.table),a.resolve(e.table)},a.reject):a.reject(),a.promise},V=function(e,a,t,n){var o=b.defer();return _(e).then(function(r){Object.prototype.hasOwnProperty.call(r,a)?(n.setLocale(e),o.resolve(n.interpolate(r[a],t)),n.setLocale(i)):o.reject()},o.reject),o.promise},z=function(e,a,t,n){var o,r=g[e];return r&&Object.prototype.hasOwnProperty.call(r,a)&&(n.setLocale(e),o=n.interpolate(r[a],t),n.setLocale(i)),o},j=function(e){if(l){var a=t.get(l)(e,i);return void 0!==a?a:e}return e},W=function(e,a,t,o){var i=b.defer();if(e<n.length){var r=n[e];V(r,a,t,o).then(i.resolve,function(){W(e+1,a,t,o).then(i.resolve)})}else i.resolve(j(a));return i.promise},Y=function(e,a,t,o){var i;if(e<n.length){var r=n[e];i=z(r,a,t,o),i||(i=Y(e+1,a,t,o))}return i},J=function(e,a,t){return W(M>0?M:T,e,a,t)},Z=function(e,a,t){return Y(M>0?M:T,e,a,t)},q=function(e,a,t){var o=b.defer(),r=i?g[i]:g,s=t?$[t]:O;if(r&&Object.prototype.hasOwnProperty.call(r,e)){var d=r[e];"@:"===d.substr(0,2)?K(d.substr(2),a,t).then(o.resolve,o.reject):o.resolve(s.interpolate(d,a))}else{var c;l&&!I&&(c=j(e)),i&&n&&n.length?J(e,a,s).then(function(e){o.resolve(e)},function(e){o.reject(G(e))}):l&&!I&&c?o.resolve(c):o.reject(G(e))}return o.promise},Q=function(e,a,t){var o,r=i?g[i]:g,s=t?$[t]:O;if(r&&Object.prototype.hasOwnProperty.call(r,e)){var d=r[e];o="@:"===d.substr(0,2)?Q(d.substr(2),a,t):s.interpolate(d,a)}else{var c;l&&!I&&(c=j(e)),i&&n&&n.length?(T=0,o=Z(e,a,s)):o=l&&!I&&c?c:G(e)}return o};if(K.preferredLanguage=function(e){return e&&L(e),a},K.cloakClassName=function(){return S},K.fallbackLanguage=function(e){if(void 0!==e&&null!==e){if(P(e),m&&n&&n.length)for(var a=0,t=n.length;t>a;a++)H[n[a]]||(H[n[a]]=U(n[a]));K.use(K.use())}return o?n[0]:n},K.useFallbackLanguage=function(e){if(void 0!==e&&null!==e)if(e){var a=N(n,e);a>-1&&(M=a)}else M=0},K.proposedLanguage=function(){return r},K.storage=function(){return k},K.use=function(e){if(!e)return i;var a=b.defer();d.$emit("$translateChangeStart",{language:e});var t=E(e);return t&&(e=t),g[e]||!m||H[e]?(a.resolve(e),F(e)):(r=e,H[e]=U(e).then(function(t){return B(t.key,t.table),a.resolve(t.key),F(t.key),r===e&&(r=void 0),t},function(e){r===e&&(r=void 0),d.$emit("$translateChangeError",{language:e}),a.reject(e),d.$emit("$translateChangeEnd",{language:e})})),a.promise},K.storageKey=function(){return D()},K.isPostCompilingEnabled=function(){return A},K.refresh=function(e){function a(){o.resolve(),d.$emit("$translateRefreshEnd",{language:e})}function t(){o.reject(),d.$emit("$translateRefreshEnd",{language:e})}if(!m)throw new Error("Couldn't refresh translation table, no loader registered!");var o=b.defer();if(d.$emit("$translateRefreshStart",{language:e}),e)g[e]?U(e).then(function(t){B(t.key,t.table),e===i&&F(i),a()},t):t();else{var r=[],s={};if(n&&n.length)for(var l=0,c=n.length;c>l;l++)r.push(U(n[l])),s[n[l]]=!0;i&&!s[i]&&r.push(U(i)),b.all(r).then(function(e){angular.forEach(e,function(e){g[e.key]&&delete g[e.key],B(e.key,e.table)}),i&&F(i),a()})}return o.promise},K.instant=function(e,t,o){if(null===e||angular.isUndefined(e))return e;if(angular.isArray(e)){for(var r={},s=0,d=e.length;d>s;s++)r[e[s]]=K.instant(e[s],t,o);return r}if(angular.isString(e)&&e.length<1)return e;e&&(e=x.apply(e));var c,m=[];a&&m.push(a),i&&m.push(i),n&&n.length&&(m=m.concat(n));for(var u=0,f=m.length;f>u;u++){var h=m[u];if(g[h]&&"undefined"!=typeof g[h][e]&&(c=Q(e,t,o)),"undefined"!=typeof c)break}return c||""===c||(c=O.interpolate(e,t),l&&!I&&(c=j(e))),c},K.versionInfo=function(){return C},K.loaderCache=function(){return p},m&&(angular.equals(g,{})&&K.use(K.use()),n&&n.length))for(var X=function(e){return B(e.key,e.table),d.$emit("$translateChangeEnd",{language:e.key}),e},ea=0,aa=n.length;aa>ea;ea++)H[n[ea]]=U(n[ea]).then(X);return K}]}]),angular.module("pascalprecht.translate").factory("$translateDefaultInterpolation",["$interpolate",function(e){var a,t={},n="default",o=null,i={escaped:function(e){var a={};for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(a[t]=angular.element("<div></div>").text(e[t]).html());return a}},r=function(e){var a;return a=angular.isFunction(i[o])?i[o](e):e};return t.setLocale=function(e){a=e},t.getInterpolationIdentifier=function(){return n},t.useSanitizeValueStrategy=function(e){return o=e,this},t.interpolate=function(a,t){return o&&(t=r(t)),e(a)(t||{})},t}]),angular.module("pascalprecht.translate").constant("$STORAGE_KEY","NG_TRANSLATE_LANG_KEY"),angular.module("pascalprecht.translate").directive("translate",["$translate","$q","$interpolate","$compile","$parse","$rootScope",function(e,a,t,n,o,i){return{restrict:"AE",scope:!0,compile:function(a,r){var s=r.translateValues?r.translateValues:void 0,d=r.translateInterpolation?r.translateInterpolation:void 0,l=a[0].outerHTML.match(/translate-value-+/i),c="^(.*)("+t.startSymbol()+".*"+t.endSymbol()+")(.*)",m="^(.*)"+t.startSymbol()+"(.*)"+t.endSymbol()+"(.*)";return function(a,u,f){a.interpolateParams={},a.preText="",a.postText="";var h={},p=function(e){if(angular.equals(e,"")||!angular.isDefined(e)){var n=u.text().match(c);angular.isArray(n)?(a.preText=n[1],a.postText=n[3],h.translate=t(n[2])(a.$parent),watcherMatches=u.text().match(m),angular.isArray(watcherMatches)&&watcherMatches[2]&&watcherMatches[2].length&&a.$watch(watcherMatches[2],function(e){h.translate=e,w()})):h.translate=u.text().replace(/^\s+|\s+$/g,"")}else h.translate=e;w()},g=function(e){f.$observe(e,function(a){h[e]=a,w()})};f.$observe("translate",function(e){p(e)});for(var b in f)f.hasOwnProperty(b)&&"translateAttr"===b.substr(0,13)&&g(b);if(f.$observe("translateDefault",function(e){a.defaultText=e}),s&&f.$observe("translateValues",function(e){e&&a.$parent.$watch(function(){angular.extend(a.interpolateParams,o(e)(a.$parent))})}),l){var v=function(e){f.$observe(e,function(t){var n=angular.lowercase(e.substr(14,1))+e.substr(15);a.interpolateParams[n]=t})};for(var y in f)Object.prototype.hasOwnProperty.call(f,y)&&"translateValue"===y.substr(0,14)&&"translateValues"!==y&&v(y)}var w=function(){for(var e in h)h.hasOwnProperty(e)&&h[e]&&S(e,h[e],a,a.interpolateParams)},S=function(a,t,n,o){e(t,o,d).then(function(e){A(e,n,!0,a)},function(e){A(e,n,!1,a)})},A=function(a,t,o,i){if("translate"===i){o||"undefined"==typeof t.defaultText||(a=t.defaultText),u.html(t.preText+a+t.postText);var s=e.isPostCompilingEnabled(),d="undefined"!=typeof r.translateCompile,l=d&&"false"!==r.translateCompile;(s&&!d||l)&&n(u.contents())(t)}else{o||"undefined"==typeof t.defaultText||(a=t.defaultText);var c=f.$attr[i].substr(15);u.attr(c,a)}};a.$watch("interpolateParams",w,!0);var k=i.$on("$translateChangeSuccess",w);u.text().length&&p(""),w(),a.$on("$destroy",k)}}}}]),angular.module("pascalprecht.translate").directive("translateCloak",["$rootScope","$translate",function(e,a){return{compile:function(t){var n=function(){t.addClass(a.cloakClassName())},o=function(){t.removeClass(a.cloakClassName())},i=e.$on("$translateChangeEnd",function(){o(),i(),i=null});return n(),function(e,t,i){i.translateCloak&&i.translateCloak.length&&i.$observe("translateCloak",function(e){a(e).then(o,n)})}}}}]),angular.module("pascalprecht.translate").filter("translate",["$parse","$translate",function(e,a){var t=function(t,n,o){return angular.isObject(n)||(n=e(n)(this)),a.instant(t,n,o)};return t.$stateful=!0,t}]),angular.module("pascalprecht.translate").factory("$translateStaticFilesLoader",["$q","$http",function(e,a){return function(t){if(!t||!angular.isString(t.prefix)||!angular.isString(t.suffix))throw new Error("Couldn't load static files, no prefix or suffix specified!");var n=e.defer();return a(angular.extend({url:[t.prefix,t.key,t.suffix].join(""),method:"GET",params:""},t.$http)).success(function(e){n.resolve(e)}).error(function(){n.reject(t.key)}),n.promise}}]),angular.module("pascalprecht.translate").factory("$translateStaticFilesLoader",["$q","$http",function(e,a){function t(e,n){a(angular.extend({url:[e.prefix,e.key.toLowerCase(),e.suffix].join(""),method:"GET",params:""},e.$http)).success(function(e){n.resolve(e)}).error(function(){if(e.key.indexOf("_")>=0){var a=e.key.substr(0,e.key.lastIndexOf("_")),o=angular.extend({},e,{key:a});t(o,n)}else n.resolve("{}")})}return function(a){if(!a||!angular.isString(a.prefix)||!angular.isString(a.suffix))throw new Error('Couldn"t load static files, no prefix or suffix specified!');var n=e.defer();return t(a,n),n.promise}}]),angular.module("risevision.common.i18n",["pascalprecht.translate","risevision.common.i18n.config"]).config(["$translateProvider","LOCALES_PREFIX","LOCALES_SUFIX",function(e,a,t){e.useStaticFilesLoader({prefix:a,suffix:t}),e.determinePreferredLanguage().fallbackLanguage("en")}]),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.affix"),i="object"==typeof a&&a;o||n.data("bs.affix",o=new t(this,i)),"string"==typeof a&&o[a]()})}var t=function(a,n){this.options=e.extend({},t.DEFAULTS,n),this.$target=e(this.options.target).on("scroll.bs.affix.data-api",e.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",e.proxy(this.checkPositionWithEventLoop,this)),this.$element=e(a),this.affixed=this.unpin=this.pinnedOffset=null,this.checkPosition()};t.VERSION="3.2.0",t.RESET="affix affix-top affix-bottom",t.DEFAULTS={offset:0,target:window},t.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(t.RESET).addClass("affix");var e=this.$target.scrollTop(),a=this.$element.offset();return this.pinnedOffset=a.top-e},t.prototype.checkPositionWithEventLoop=function(){setTimeout(e.proxy(this.checkPosition,this),1)},t.prototype.checkPosition=function(){if(this.$element.is(":visible")){var a=e(document).height(),n=this.$target.scrollTop(),o=this.$element.offset(),i=this.options.offset,r=i.top,s=i.bottom;"object"!=typeof i&&(s=r=i),"function"==typeof r&&(r=i.top(this.$element)),"function"==typeof s&&(s=i.bottom(this.$element));var d=null!=this.unpin&&n+this.unpin<=o.top?!1:null!=s&&o.top+this.$element.height()>=a-s?"bottom":null!=r&&r>=n?"top":!1;if(this.affixed!==d){null!=this.unpin&&this.$element.css("top","");var l="affix"+(d?"-"+d:""),c=e.Event(l+".bs.affix");this.$element.trigger(c),c.isDefaultPrevented()||(this.affixed=d,this.unpin="bottom"==d?this.getPinnedOffset():null,this.$element.removeClass(t.RESET).addClass(l).trigger(e.Event(l.replace("affix","affixed"))),"bottom"==d&&this.$element.offset({top:a-this.$element.height()-s}))}}};var n=e.fn.affix;e.fn.affix=a,e.fn.affix.Constructor=t,e.fn.affix.noConflict=function(){return e.fn.affix=n,this},e(window).on("load",function(){e('[data-spy="affix"]').each(function(){var t=e(this),n=t.data();n.offset=n.offset||{},n.offsetBottom&&(n.offset.bottom=n.offsetBottom),n.offsetTop&&(n.offset.top=n.offsetTop),a.call(t,n)})})}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var t=e(this),o=t.data("bs.alert");o||t.data("bs.alert",o=new n(this)),"string"==typeof a&&o[a].call(t)})}var t='[data-dismiss="alert"]',n=function(a){e(a).on("click",t,this.close)};n.VERSION="3.2.0",n.prototype.close=function(a){function t(){i.detach().trigger("closed.bs.alert").remove()}var n=e(this),o=n.attr("data-target");o||(o=n.attr("href"),o=o&&o.replace(/.*(?=#[^\s]*$)/,""));var i=e(o);a&&a.preventDefault(),i.length||(i=n.hasClass("alert")?n:n.parent()),i.trigger(a=e.Event("close.bs.alert")),a.isDefaultPrevented()||(i.removeClass("in"),e.support.transition&&i.hasClass("fade")?i.one("bsTransitionEnd",t).emulateTransitionEnd(150):t())};var o=e.fn.alert;e.fn.alert=a,e.fn.alert.Constructor=n,e.fn.alert.noConflict=function(){return e.fn.alert=o,this},e(document).on("click.bs.alert.data-api",t,n.prototype.close)}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.button"),i="object"==typeof a&&a;o||n.data("bs.button",o=new t(this,i)),"toggle"==a?o.toggle():a&&o.setState(a)})}var t=function(a,n){this.$element=e(a),this.options=e.extend({},t.DEFAULTS,n),this.isLoading=!1};t.VERSION="3.2.0",t.DEFAULTS={loadingText:"loading..."},t.prototype.setState=function(a){var t="disabled",n=this.$element,o=n.is("input")?"val":"html",i=n.data();a+="Text",null==i.resetText&&n.data("resetText",n[o]()),n[o](null==i[a]?this.options[a]:i[a]),setTimeout(e.proxy(function(){"loadingText"==a?(this.isLoading=!0,n.addClass(t).attr(t,t)):this.isLoading&&(this.isLoading=!1,n.removeClass(t).removeAttr(t))},this),0)},t.prototype.toggle=function(){var e=!0,a=this.$element.closest('[data-toggle="buttons"]');if(a.length){var t=this.$element.find("input");"radio"==t.prop("type")&&(t.prop("checked")&&this.$element.hasClass("active")?e=!1:a.find(".active").removeClass("active")),e&&t.prop("checked",!this.$element.hasClass("active")).trigger("change")}e&&this.$element.toggleClass("active")};var n=e.fn.button;e.fn.button=a,e.fn.button.Constructor=t,e.fn.button.noConflict=function(){return e.fn.button=n,this},e(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(t){var n=e(t.target);n.hasClass("btn")||(n=n.closest(".btn")),a.call(n,"toggle"),t.preventDefault()})}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.carousel"),i=e.extend({},t.DEFAULTS,n.data(),"object"==typeof a&&a),r="string"==typeof a?a:i.slide;o||n.data("bs.carousel",o=new t(this,i)),"number"==typeof a?o.to(a):r?o[r]():i.interval&&o.pause().cycle()})}var t=function(a,t){this.$element=e(a).on("keydown.bs.carousel",e.proxy(this.keydown,this)),this.$indicators=this.$element.find(".carousel-indicators"),this.options=t,this.paused=this.sliding=this.interval=this.$active=this.$items=null,"hover"==this.options.pause&&this.$element.on("mouseenter.bs.carousel",e.proxy(this.pause,this)).on("mouseleave.bs.carousel",e.proxy(this.cycle,this))};t.VERSION="3.2.0",t.DEFAULTS={interval:5e3,pause:"hover",wrap:!0},t.prototype.keydown=function(e){switch(e.which){case 37:this.prev();break;case 39:this.next();break;default:return}e.preventDefault()},t.prototype.cycle=function(a){return a||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(e.proxy(this.next,this),this.options.interval)),this},t.prototype.getItemIndex=function(e){return this.$items=e.parent().children(".item"),this.$items.index(e||this.$active)},t.prototype.to=function(a){var t=this,n=this.getItemIndex(this.$active=this.$element.find(".item.active"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){t.to(a)}):n==a?this.pause().cycle():this.slide(a>n?"next":"prev",e(this.$items[a]))},t.prototype.pause=function(a){return a||(this.paused=!0),this.$element.find(".next, .prev").length&&e.support.transition&&(this.$element.trigger(e.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},t.prototype.next=function(){return this.sliding?void 0:this.slide("next")},t.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},t.prototype.slide=function(a,t){var n=this.$element.find(".item.active"),o=t||n[a](),i=this.interval,r="next"==a?"left":"right",s="next"==a?"first":"last",d=this;if(!o.length){if(!this.options.wrap)return;o=this.$element.find(".item")[s]()}if(o.hasClass("active"))return this.sliding=!1;var l=o[0],c=e.Event("slide.bs.carousel",{relatedTarget:l,direction:r});if(this.$element.trigger(c),!c.isDefaultPrevented()){if(this.sliding=!0,i&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var m=e(this.$indicators.children()[this.getItemIndex(o)]);m&&m.addClass("active")}var u=e.Event("slid.bs.carousel",{relatedTarget:l,direction:r});return e.support.transition&&this.$element.hasClass("slide")?(o.addClass(a),o[0].offsetWidth,n.addClass(r),o.addClass(r),n.one("bsTransitionEnd",function(){o.removeClass([a,r].join(" ")).addClass("active"),n.removeClass(["active",r].join(" ")),d.sliding=!1,setTimeout(function(){d.$element.trigger(u)},0)}).emulateTransitionEnd(1e3*n.css("transition-duration").slice(0,-1))):(n.removeClass("active"),o.addClass("active"),this.sliding=!1,this.$element.trigger(u)),i&&this.cycle(),this}};var n=e.fn.carousel;e.fn.carousel=a,e.fn.carousel.Constructor=t,e.fn.carousel.noConflict=function(){return e.fn.carousel=n,this},e(document).on("click.bs.carousel.data-api","[data-slide], [data-slide-to]",function(t){var n,o=e(this),i=e(o.attr("data-target")||(n=o.attr("href"))&&n.replace(/.*(?=#[^\s]+$)/,""));if(i.hasClass("carousel")){var r=e.extend({},i.data(),o.data()),s=o.attr("data-slide-to");s&&(r.interval=!1),a.call(i,r),s&&i.data("bs.carousel").to(s),t.preventDefault()}}),e(window).on("load",function(){e('[data-ride="carousel"]').each(function(){var t=e(this);a.call(t,t.data())})})}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.collapse"),i=e.extend({},t.DEFAULTS,n.data(),"object"==typeof a&&a);!o&&i.toggle&&"show"==a&&(a=!a),o||n.data("bs.collapse",o=new t(this,i)),"string"==typeof a&&o[a]()})}var t=function(a,n){this.$element=e(a),this.options=e.extend({},t.DEFAULTS,n),this.transitioning=null,this.options.parent&&(this.$parent=e(this.options.parent)),this.options.toggle&&this.toggle()};t.VERSION="3.2.0",t.DEFAULTS={toggle:!0},t.prototype.dimension=function(){var e=this.$element.hasClass("width");return e?"width":"height"},t.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var t=e.Event("show.bs.collapse");if(this.$element.trigger(t),!t.isDefaultPrevented()){var n=this.$parent&&this.$parent.find("> .panel > .in");if(n&&n.length){var o=n.data("bs.collapse");if(o&&o.transitioning)return;a.call(n,"hide"),o||n.data("bs.collapse",null)}var i=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[i](0),this.transitioning=1;var r=function(){this.$element.removeClass("collapsing").addClass("collapse in")[i](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!e.support.transition)return r.call(this);var s=e.camelCase(["scroll",i].join("-"));this.$element.one("bsTransitionEnd",e.proxy(r,this)).emulateTransitionEnd(350)[i](this.$element[0][s])}}},t.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var a=e.Event("hide.bs.collapse");if(this.$element.trigger(a),!a.isDefaultPrevented()){var t=this.dimension();this.$element[t](this.$element[t]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse").removeClass("in"),this.transitioning=1;var n=function(){this.transitioning=0,this.$element.trigger("hidden.bs.collapse").removeClass("collapsing").addClass("collapse")};return e.support.transition?(this.$element[t](0).one("bsTransitionEnd",e.proxy(n,this)).emulateTransitionEnd(350),void 0):n.call(this)}}},t.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()};var n=e.fn.collapse;e.fn.collapse=a,e.fn.collapse.Constructor=t,e.fn.collapse.noConflict=function(){return e.fn.collapse=n,this},e(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(t){var n,o=e(this),i=o.attr("data-target")||t.preventDefault()||(n=o.attr("href"))&&n.replace(/.*(?=#[^\s]+$)/,""),r=e(i),s=r.data("bs.collapse"),d=s?"toggle":o.data(),l=o.attr("data-parent"),c=l&&e(l);s&&s.transitioning||(c&&c.find('[data-toggle="collapse"][data-parent="'+l+'"]').not(o).addClass("collapsed"),o[r.hasClass("in")?"addClass":"removeClass"]("collapsed")),a.call(r,d)})}(jQuery),+function(e){"use strict";function a(a){a&&3===a.which||(e(o).remove(),e(i).each(function(){var n=t(e(this)),o={relatedTarget:this};n.hasClass("open")&&(n.trigger(a=e.Event("hide.bs.dropdown",o)),a.isDefaultPrevented()||n.removeClass("open").trigger("hidden.bs.dropdown",o))}))}function t(a){var t=a.attr("data-target");t||(t=a.attr("href"),t=t&&/#[A-Za-z]/.test(t)&&t.replace(/.*(?=#[^\s]*$)/,""));var n=t&&e(t);return n&&n.length?n:a.parent()}function n(a){return this.each(function(){var t=e(this),n=t.data("bs.dropdown");n||t.data("bs.dropdown",n=new r(this)),"string"==typeof a&&n[a].call(t)})}var o=".dropdown-backdrop",i='[data-toggle="dropdown"]',r=function(a){e(a).on("click.bs.dropdown",this.toggle)};r.VERSION="3.2.0",r.prototype.toggle=function(n){var o=e(this);if(!o.is(".disabled, :disabled")){var i=t(o),r=i.hasClass("open");if(a(),!r){"ontouchstart"in document.documentElement&&!i.closest(".navbar-nav").length&&e('<div class="dropdown-backdrop"/>').insertAfter(e(this)).on("click",a);var s={relatedTarget:this};if(i.trigger(n=e.Event("show.bs.dropdown",s)),n.isDefaultPrevented())return;o.trigger("focus"),i.toggleClass("open").trigger("shown.bs.dropdown",s)}return!1}},r.prototype.keydown=function(a){if(/(38|40|27)/.test(a.keyCode)){var n=e(this);if(a.preventDefault(),a.stopPropagation(),!n.is(".disabled, :disabled")){var o=t(n),r=o.hasClass("open");if(!r||r&&27==a.keyCode)return 27==a.which&&o.find(i).trigger("focus"),n.trigger("click");var s=" li:not(.divider):visible a",d=o.find('[role="menu"]'+s+', [role="listbox"]'+s);if(d.length){var l=d.index(d.filter(":focus"));38==a.keyCode&&l>0&&l--,40==a.keyCode&&l<d.length-1&&l++,~l||(l=0),d.eq(l).trigger("focus")}}}};var s=e.fn.dropdown;e.fn.dropdown=n,e.fn.dropdown.Constructor=r,e.fn.dropdown.noConflict=function(){return e.fn.dropdown=s,this},e(document).on("click.bs.dropdown.data-api",a).on("click.bs.dropdown.data-api",".dropdown form",function(e){e.stopPropagation()}).on("click.bs.dropdown.data-api",i,r.prototype.toggle).on("keydown.bs.dropdown.data-api",i+', [role="menu"], [role="listbox"]',r.prototype.keydown)}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.tab");o||n.data("bs.tab",o=new t(this)),"string"==typeof a&&o[a]()})}var t=function(a){this.element=e(a)};t.VERSION="3.2.0",t.prototype.show=function(){var a=this.element,t=a.closest("ul:not(.dropdown-menu)"),n=a.data("target");if(n||(n=a.attr("href"),n=n&&n.replace(/.*(?=#[^\s]*$)/,"")),!a.parent("li").hasClass("active")){var o=t.find(".active:last a")[0],i=e.Event("show.bs.tab",{relatedTarget:o});if(a.trigger(i),!i.isDefaultPrevented()){var r=e(n);this.activate(a.closest("li"),t),this.activate(r,r.parent(),function(){a.trigger({type:"shown.bs.tab",relatedTarget:o})})}}},t.prototype.activate=function(a,t,n){function o(){i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),a.addClass("active"),r?(a[0].offsetWidth,a.addClass("in")):a.removeClass("fade"),a.parent(".dropdown-menu")&&a.closest("li.dropdown").addClass("active"),n&&n()}var i=t.find("> .active"),r=n&&e.support.transition&&i.hasClass("fade");r?i.one("bsTransitionEnd",o).emulateTransitionEnd(150):o(),i.removeClass("in")};var n=e.fn.tab;e.fn.tab=a,e.fn.tab.Constructor=t,e.fn.tab.noConflict=function(){return e.fn.tab=n,this},e(document).on("click.bs.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(t){t.preventDefault(),a.call(e(this),"show")})}(jQuery),+function(e){"use strict";function a(){var e=document.createElement("bootstrap"),a={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var t in a)if(void 0!==e.style[t])return{end:a[t]};return!1}e.fn.emulateTransitionEnd=function(a){var t=!1,n=this;e(this).one("bsTransitionEnd",function(){t=!0});var o=function(){t||e(n).trigger(e.support.transition.end)};return setTimeout(o,a),this},e(function(){e.support.transition=a(),e.support.transition&&(e.event.special.bsTransitionEnd={bindType:e.support.transition.end,delegateType:e.support.transition.end,handle:function(a){return e(a.target).is(this)?a.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(e){"use strict";function a(t,n){var o=e.proxy(this.process,this);this.$body=e("body"),this.$scrollElement=e(t).is("body")?e(window):e(t),this.options=e.extend({},a.DEFAULTS,n),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",o),this.refresh(),this.process()}function t(t){return this.each(function(){var n=e(this),o=n.data("bs.scrollspy"),i="object"==typeof t&&t;o||n.data("bs.scrollspy",o=new a(this,i)),"string"==typeof t&&o[t]()})}a.VERSION="3.2.0",a.DEFAULTS={offset:10},a.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},a.prototype.refresh=function(){var a="offset",t=0;e.isWindow(this.$scrollElement[0])||(a="position",t=this.$scrollElement.scrollTop()),this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight();var n=this;this.$body.find(this.selector).map(function(){var n=e(this),o=n.data("target")||n.attr("href"),i=/^#./.test(o)&&e(o);return i&&i.length&&i.is(":visible")&&[[i[a]().top+t,o]]||null}).sort(function(e,a){return e[0]-a[0]}).each(function(){n.offsets.push(this[0]),n.targets.push(this[1])})},a.prototype.process=function(){var e,a=this.$scrollElement.scrollTop()+this.options.offset,t=this.getScrollHeight(),n=this.options.offset+t-this.$scrollElement.height(),o=this.offsets,i=this.targets,r=this.activeTarget;if(this.scrollHeight!=t&&this.refresh(),a>=n)return r!=(e=i[i.length-1])&&this.activate(e);if(r&&a<=o[0])return r!=(e=i[0])&&this.activate(e);for(e=o.length;e--;)r!=i[e]&&a>=o[e]&&(!o[e+1]||a<=o[e+1])&&this.activate(i[e])},a.prototype.activate=function(a){this.activeTarget=a,e(this.selector).parentsUntil(this.options.target,".active").removeClass("active");var t=this.selector+'[data-target="'+a+'"],'+this.selector+'[href="'+a+'"]',n=e(t).parents("li").addClass("active");
n.parent(".dropdown-menu").length&&(n=n.closest("li.dropdown").addClass("active")),n.trigger("activate.bs.scrollspy")};var n=e.fn.scrollspy;e.fn.scrollspy=t,e.fn.scrollspy.Constructor=a,e.fn.scrollspy.noConflict=function(){return e.fn.scrollspy=n,this},e(window).on("load.bs.scrollspy.data-api",function(){e('[data-spy="scroll"]').each(function(){var a=e(this);t.call(a,a.data())})})}(jQuery),+function(e){"use strict";function a(a,n){return this.each(function(){var o=e(this),i=o.data("bs.modal"),r=e.extend({},t.DEFAULTS,o.data(),"object"==typeof a&&a);i||o.data("bs.modal",i=new t(this,r)),"string"==typeof a?i[a](n):r.show&&i.show(n)})}var t=function(a,t){this.options=t,this.$body=e(document.body),this.$element=e(a),this.$backdrop=this.isShown=null,this.scrollbarWidth=0,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,e.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};t.VERSION="3.2.0",t.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},t.prototype.toggle=function(e){return this.isShown?this.hide():this.show(e)},t.prototype.show=function(a){var t=this,n=e.Event("show.bs.modal",{relatedTarget:a});this.$element.trigger(n),this.isShown||n.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.$body.addClass("modal-open"),this.setScrollbar(),this.escape(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',e.proxy(this.hide,this)),this.backdrop(function(){var n=e.support.transition&&t.$element.hasClass("fade");t.$element.parent().length||t.$element.appendTo(t.$body),t.$element.show().scrollTop(0),n&&t.$element[0].offsetWidth,t.$element.addClass("in").attr("aria-hidden",!1),t.enforceFocus();var o=e.Event("shown.bs.modal",{relatedTarget:a});n?t.$element.find(".modal-dialog").one("bsTransitionEnd",function(){t.$element.trigger("focus").trigger(o)}).emulateTransitionEnd(300):t.$element.trigger("focus").trigger(o)}))},t.prototype.hide=function(a){a&&a.preventDefault(),a=e.Event("hide.bs.modal"),this.$element.trigger(a),this.isShown&&!a.isDefaultPrevented()&&(this.isShown=!1,this.$body.removeClass("modal-open"),this.resetScrollbar(),this.escape(),e(document).off("focusin.bs.modal"),this.$element.removeClass("in").attr("aria-hidden",!0).off("click.dismiss.bs.modal"),e.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",e.proxy(this.hideModal,this)).emulateTransitionEnd(300):this.hideModal())},t.prototype.enforceFocus=function(){e(document).off("focusin.bs.modal").on("focusin.bs.modal",e.proxy(function(e){this.$element[0]===e.target||this.$element.has(e.target).length||this.$element.trigger("focus")},this))},t.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keyup.dismiss.bs.modal",e.proxy(function(e){27==e.which&&this.hide()},this)):this.isShown||this.$element.off("keyup.dismiss.bs.modal")},t.prototype.hideModal=function(){var e=this;this.$element.hide(),this.backdrop(function(){e.$element.trigger("hidden.bs.modal")})},t.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},t.prototype.backdrop=function(a){var t=this,n=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var o=e.support.transition&&n;if(this.$backdrop=e('<div class="modal-backdrop '+n+'" />').appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",e.proxy(function(e){e.target===e.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus.call(this.$element[0]):this.hide.call(this))},this)),o&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!a)return;o?this.$backdrop.one("bsTransitionEnd",a).emulateTransitionEnd(150):a()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var i=function(){t.removeBackdrop(),a&&a()};e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",i).emulateTransitionEnd(150):i()}else a&&a()},t.prototype.checkScrollbar=function(){document.body.clientWidth>=window.innerWidth||(this.scrollbarWidth=this.scrollbarWidth||this.measureScrollbar())},t.prototype.setScrollbar=function(){var e=parseInt(this.$body.css("padding-right")||0,10);this.scrollbarWidth&&this.$body.css("padding-right",e+this.scrollbarWidth)},t.prototype.resetScrollbar=function(){this.$body.css("padding-right","")},t.prototype.measureScrollbar=function(){var e=document.createElement("div");e.className="modal-scrollbar-measure",this.$body.append(e);var a=e.offsetWidth-e.clientWidth;return this.$body[0].removeChild(e),a};var n=e.fn.modal;e.fn.modal=a,e.fn.modal.Constructor=t,e.fn.modal.noConflict=function(){return e.fn.modal=n,this},e(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(t){var n=e(this),o=n.attr("href"),i=e(n.attr("data-target")||o&&o.replace(/.*(?=#[^\s]+$)/,"")),r=i.data("bs.modal")?"toggle":e.extend({remote:!/#/.test(o)&&o},i.data(),n.data());n.is("a")&&t.preventDefault(),i.one("show.bs.modal",function(e){e.isDefaultPrevented()||i.one("hidden.bs.modal",function(){n.is(":visible")&&n.trigger("focus")})}),a.call(i,r,this)})}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.tooltip"),i="object"==typeof a&&a;(o||"destroy"!=a)&&(o||n.data("bs.tooltip",o=new t(this,i)),"string"==typeof a&&o[a]())})}var t=function(e,a){this.type=this.options=this.enabled=this.timeout=this.hoverState=this.$element=null,this.init("tooltip",e,a)};t.VERSION="3.2.0",t.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},t.prototype.init=function(a,t,n){this.enabled=!0,this.type=a,this.$element=e(t),this.options=this.getOptions(n),this.$viewport=this.options.viewport&&e(this.options.viewport.selector||this.options.viewport);for(var o=this.options.trigger.split(" "),i=o.length;i--;){var r=o[i];if("click"==r)this.$element.on("click."+this.type,this.options.selector,e.proxy(this.toggle,this));else if("manual"!=r){var s="hover"==r?"mouseenter":"focusin",d="hover"==r?"mouseleave":"focusout";this.$element.on(s+"."+this.type,this.options.selector,e.proxy(this.enter,this)),this.$element.on(d+"."+this.type,this.options.selector,e.proxy(this.leave,this))}}this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},t.prototype.getDefaults=function(){return t.DEFAULTS},t.prototype.getOptions=function(a){return a=e.extend({},this.getDefaults(),this.$element.data(),a),a.delay&&"number"==typeof a.delay&&(a.delay={show:a.delay,hide:a.delay}),a},t.prototype.getDelegateOptions=function(){var a={},t=this.getDefaults();return this._options&&e.each(this._options,function(e,n){t[e]!=n&&(a[e]=n)}),a},t.prototype.enter=function(a){var t=a instanceof this.constructor?a:e(a.currentTarget).data("bs."+this.type);return t||(t=new this.constructor(a.currentTarget,this.getDelegateOptions()),e(a.currentTarget).data("bs."+this.type,t)),clearTimeout(t.timeout),t.hoverState="in",t.options.delay&&t.options.delay.show?(t.timeout=setTimeout(function(){"in"==t.hoverState&&t.show()},t.options.delay.show),void 0):t.show()},t.prototype.leave=function(a){var t=a instanceof this.constructor?a:e(a.currentTarget).data("bs."+this.type);return t||(t=new this.constructor(a.currentTarget,this.getDelegateOptions()),e(a.currentTarget).data("bs."+this.type,t)),clearTimeout(t.timeout),t.hoverState="out",t.options.delay&&t.options.delay.hide?(t.timeout=setTimeout(function(){"out"==t.hoverState&&t.hide()},t.options.delay.hide),void 0):t.hide()},t.prototype.show=function(){var a=e.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(a);var t=e.contains(document.documentElement,this.$element[0]);if(a.isDefaultPrevented()||!t)return;var n=this,o=this.tip(),i=this.getUID(this.type);this.setContent(),o.attr("id",i),this.$element.attr("aria-describedby",i),this.options.animation&&o.addClass("fade");var r="function"==typeof this.options.placement?this.options.placement.call(this,o[0],this.$element[0]):this.options.placement,s=/\s?auto?\s?/i,d=s.test(r);d&&(r=r.replace(s,"")||"top"),o.detach().css({top:0,left:0,display:"block"}).addClass(r).data("bs."+this.type,this),this.options.container?o.appendTo(this.options.container):o.insertAfter(this.$element);var l=this.getPosition(),c=o[0].offsetWidth,m=o[0].offsetHeight;if(d){var u=r,f=this.$element.parent(),h=this.getPosition(f);r="bottom"==r&&l.top+l.height+m-h.scroll>h.height?"top":"top"==r&&l.top-h.scroll-m<0?"bottom":"right"==r&&l.right+c>h.width?"left":"left"==r&&l.left-c<h.left?"right":r,o.removeClass(u).addClass(r)}var p=this.getCalculatedOffset(r,l,c,m);this.applyPlacement(p,r);var g=function(){n.$element.trigger("shown.bs."+n.type),n.hoverState=null};e.support.transition&&this.$tip.hasClass("fade")?o.one("bsTransitionEnd",g).emulateTransitionEnd(150):g()}},t.prototype.applyPlacement=function(a,t){var n=this.tip(),o=n[0].offsetWidth,i=n[0].offsetHeight,r=parseInt(n.css("margin-top"),10),s=parseInt(n.css("margin-left"),10);isNaN(r)&&(r=0),isNaN(s)&&(s=0),a.top=a.top+r,a.left=a.left+s,e.offset.setOffset(n[0],e.extend({using:function(e){n.css({top:Math.round(e.top),left:Math.round(e.left)})}},a),0),n.addClass("in");var d=n[0].offsetWidth,l=n[0].offsetHeight;"top"==t&&l!=i&&(a.top=a.top+i-l);var c=this.getViewportAdjustedDelta(t,a,d,l);c.left?a.left+=c.left:a.top+=c.top;var m=c.left?2*c.left-o+d:2*c.top-i+l,u=c.left?"left":"top",f=c.left?"offsetWidth":"offsetHeight";n.offset(a),this.replaceArrow(m,n[0][f],u)},t.prototype.replaceArrow=function(e,a,t){this.arrow().css(t,e?50*(1-e/a)+"%":"")},t.prototype.setContent=function(){var e=this.tip(),a=this.getTitle();e.find(".tooltip-inner")[this.options.html?"html":"text"](a),e.removeClass("fade in top bottom left right")},t.prototype.hide=function(){function a(){"in"!=t.hoverState&&n.detach(),t.$element.trigger("hidden.bs."+t.type)}var t=this,n=this.tip(),o=e.Event("hide.bs."+this.type);return this.$element.removeAttr("aria-describedby"),this.$element.trigger(o),o.isDefaultPrevented()?void 0:(n.removeClass("in"),e.support.transition&&this.$tip.hasClass("fade")?n.one("bsTransitionEnd",a).emulateTransitionEnd(150):a(),this.hoverState=null,this)},t.prototype.fixTitle=function(){var e=this.$element;(e.attr("title")||"string"!=typeof e.attr("data-original-title"))&&e.attr("data-original-title",e.attr("title")||"").attr("title","")},t.prototype.hasContent=function(){return this.getTitle()},t.prototype.getPosition=function(a){a=a||this.$element;var t=a[0],n="BODY"==t.tagName;return e.extend({},"function"==typeof t.getBoundingClientRect?t.getBoundingClientRect():null,{scroll:n?document.documentElement.scrollTop||document.body.scrollTop:a.scrollTop(),width:n?e(window).width():a.outerWidth(),height:n?e(window).height():a.outerHeight()},n?{top:0,left:0}:a.offset())},t.prototype.getCalculatedOffset=function(e,a,t,n){return"bottom"==e?{top:a.top+a.height,left:a.left+a.width/2-t/2}:"top"==e?{top:a.top-n,left:a.left+a.width/2-t/2}:"left"==e?{top:a.top+a.height/2-n/2,left:a.left-t}:{top:a.top+a.height/2-n/2,left:a.left+a.width}},t.prototype.getViewportAdjustedDelta=function(e,a,t,n){var o={top:0,left:0};if(!this.$viewport)return o;var i=this.options.viewport&&this.options.viewport.padding||0,r=this.getPosition(this.$viewport);if(/right|left/.test(e)){var s=a.top-i-r.scroll,d=a.top+i-r.scroll+n;s<r.top?o.top=r.top-s:d>r.top+r.height&&(o.top=r.top+r.height-d)}else{var l=a.left-i,c=a.left+i+t;l<r.left?o.left=r.left-l:c>r.width&&(o.left=r.left+r.width-c)}return o},t.prototype.getTitle=function(){var e,a=this.$element,t=this.options;return e=a.attr("data-original-title")||("function"==typeof t.title?t.title.call(a[0]):t.title)},t.prototype.getUID=function(e){do e+=~~(1e6*Math.random());while(document.getElementById(e));return e},t.prototype.tip=function(){return this.$tip=this.$tip||e(this.options.template)},t.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},t.prototype.validate=function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},t.prototype.enable=function(){this.enabled=!0},t.prototype.disable=function(){this.enabled=!1},t.prototype.toggleEnabled=function(){this.enabled=!this.enabled},t.prototype.toggle=function(a){var t=this;a&&(t=e(a.currentTarget).data("bs."+this.type),t||(t=new this.constructor(a.currentTarget,this.getDelegateOptions()),e(a.currentTarget).data("bs."+this.type,t))),t.tip().hasClass("in")?t.leave(t):t.enter(t)},t.prototype.destroy=function(){clearTimeout(this.timeout),this.hide().$element.off("."+this.type).removeData("bs."+this.type)};var n=e.fn.tooltip;e.fn.tooltip=a,e.fn.tooltip.Constructor=t,e.fn.tooltip.noConflict=function(){return e.fn.tooltip=n,this}}(jQuery),+function(e){"use strict";function a(a){return this.each(function(){var n=e(this),o=n.data("bs.popover"),i="object"==typeof a&&a;(o||"destroy"!=a)&&(o||n.data("bs.popover",o=new t(this,i)),"string"==typeof a&&o[a]())})}var t=function(e,a){this.init("popover",e,a)};if(!e.fn.tooltip)throw new Error("Popover requires tooltip.js");t.VERSION="3.2.0",t.DEFAULTS=e.extend({},e.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),t.prototype=e.extend({},e.fn.tooltip.Constructor.prototype),t.prototype.constructor=t,t.prototype.getDefaults=function(){return t.DEFAULTS},t.prototype.setContent=function(){var e=this.tip(),a=this.getTitle(),t=this.getContent();e.find(".popover-title")[this.options.html?"html":"text"](a),e.find(".popover-content").empty()[this.options.html?"string"==typeof t?"html":"append":"text"](t),e.removeClass("fade top bottom left right in"),e.find(".popover-title").html()||e.find(".popover-title").hide()},t.prototype.hasContent=function(){return this.getTitle()||this.getContent()},t.prototype.getContent=function(){var e=this.$element,a=this.options;return e.attr("data-content")||("function"==typeof a.content?a.content.call(e[0]):a.content)},t.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")},t.prototype.tip=function(){return this.$tip||(this.$tip=e(this.options.template)),this.$tip};var n=e.fn.popover;e.fn.popover=a,e.fn.popover.Constructor=t,e.fn.popover.noConflict=function(){return e.fn.popover=n,this}}(jQuery),angular.module("ui.bootstrap",["ui.bootstrap.tpls","ui.bootstrap.transition","ui.bootstrap.collapse","ui.bootstrap.accordion","ui.bootstrap.alert","ui.bootstrap.bindHtml","ui.bootstrap.buttons","ui.bootstrap.carousel","ui.bootstrap.dateparser","ui.bootstrap.position","ui.bootstrap.datepicker","ui.bootstrap.dropdown","ui.bootstrap.modal","ui.bootstrap.pagination","ui.bootstrap.tooltip","ui.bootstrap.popover","ui.bootstrap.progressbar","ui.bootstrap.rating","ui.bootstrap.tabs","ui.bootstrap.timepicker","ui.bootstrap.typeahead"]),angular.module("ui.bootstrap.tpls",["template/accordion/accordion-group.html","template/accordion/accordion.html","template/alert/alert.html","template/carousel/carousel.html","template/carousel/slide.html","template/datepicker/datepicker.html","template/datepicker/day.html","template/datepicker/month.html","template/datepicker/popup.html","template/datepicker/year.html","template/modal/backdrop.html","template/modal/window.html","template/pagination/pager.html","template/pagination/pagination.html","template/tooltip/tooltip-html-unsafe-popup.html","template/tooltip/tooltip-popup.html","template/popover/popover.html","template/progressbar/bar.html","template/progressbar/progress.html","template/progressbar/progressbar.html","template/rating/rating.html","template/tabs/tab.html","template/tabs/tabset.html","template/timepicker/timepicker.html","template/typeahead/typeahead-match.html","template/typeahead/typeahead-popup.html"]),angular.module("ui.bootstrap.transition",[]).factory("$transition",["$q","$timeout","$rootScope",function(e,a,t){function n(e){for(var a in e)if(void 0!==i.style[a])return e[a]}var o=function(n,i,r){r=r||{};var s=e.defer(),d=o[r.animation?"animationEndEventName":"transitionEndEventName"],l=function(){t.$apply(function(){n.unbind(d,l),s.resolve(n)})};return d&&n.bind(d,l),a(function(){angular.isString(i)?n.addClass(i):angular.isFunction(i)?i(n):angular.isObject(i)&&n.css(i),d||s.resolve(n)}),s.promise.cancel=function(){d&&n.unbind(d,l),s.reject("Transition cancelled")},s.promise},i=document.createElement("trans"),r={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"},s={WebkitTransition:"webkitAnimationEnd",MozTransition:"animationend",OTransition:"oAnimationEnd",transition:"animationend"};return o.transitionEndEventName=n(r),o.animationEndEventName=n(s),o}]),angular.module("ui.bootstrap.collapse",["ui.bootstrap.transition"]).directive("collapse",["$transition",function(e){return{link:function(a,t,n){function o(a){function n(){l===o&&(l=void 0)}var o=e(t,a);return l&&l.cancel(),l=o,o.then(n,n),o}function i(){c?(c=!1,r()):(t.removeClass("collapse").addClass("collapsing"),o({height:t[0].scrollHeight+"px"}).then(r))}function r(){t.removeClass("collapsing"),t.addClass("collapse in"),t.css({height:"auto"})}function s(){if(c)c=!1,d(),t.css({height:0});else{t.css({height:t[0].scrollHeight+"px"});{t[0].offsetWidth}t.removeClass("collapse in").addClass("collapsing"),o({height:0}).then(d)}}function d(){t.removeClass("collapsing"),t.addClass("collapse")}var l,c=!0;a.$watch(n.collapse,function(e){e?s():i()})}}}]),angular.module("ui.bootstrap.accordion",["ui.bootstrap.collapse"]).constant("accordionConfig",{closeOthers:!0}).controller("AccordionController",["$scope","$attrs","accordionConfig",function(e,a,t){this.groups=[],this.closeOthers=function(n){var o=angular.isDefined(a.closeOthers)?e.$eval(a.closeOthers):t.closeOthers;o&&angular.forEach(this.groups,function(e){e!==n&&(e.isOpen=!1)})},this.addGroup=function(e){var a=this;this.groups.push(e),e.$on("$destroy",function(){a.removeGroup(e)})},this.removeGroup=function(e){var a=this.groups.indexOf(e);-1!==a&&this.groups.splice(a,1)}}]).directive("accordion",function(){return{restrict:"EA",controller:"AccordionController",transclude:!0,replace:!1,templateUrl:"template/accordion/accordion.html"}}).directive("accordionGroup",function(){return{require:"^accordion",restrict:"EA",transclude:!0,replace:!0,templateUrl:"template/accordion/accordion-group.html",scope:{heading:"@",isOpen:"=?",isDisabled:"=?"},controller:function(){this.setHeading=function(e){this.heading=e}},link:function(e,a,t,n){n.addGroup(e),e.$watch("isOpen",function(a){a&&n.closeOthers(e)}),e.toggleOpen=function(){e.isDisabled||(e.isOpen=!e.isOpen)}}}}).directive("accordionHeading",function(){return{restrict:"EA",transclude:!0,template:"",replace:!0,require:"^accordionGroup",link:function(e,a,t,n,o){n.setHeading(o(e,function(){}))}}}).directive("accordionTransclude",function(){return{require:"^accordionGroup",link:function(e,a,t,n){e.$watch(function(){return n[t.accordionTransclude]},function(e){e&&(a.html(""),a.append(e))})}}}),angular.module("ui.bootstrap.alert",[]).controller("AlertController",["$scope","$attrs",function(e,a){e.closeable="close"in a}]).directive("alert",function(){return{restrict:"EA",controller:"AlertController",templateUrl:"template/alert/alert.html",transclude:!0,replace:!0,scope:{type:"@",close:"&"}}}),angular.module("ui.bootstrap.bindHtml",[]).directive("bindHtmlUnsafe",function(){return function(e,a,t){a.addClass("ng-binding").data("$binding",t.bindHtmlUnsafe),e.$watch(t.bindHtmlUnsafe,function(e){a.html(e||"")})}}),angular.module("ui.bootstrap.buttons",[]).constant("buttonConfig",{activeClass:"active",toggleEvent:"click"}).controller("ButtonsController",["buttonConfig",function(e){this.activeClass=e.activeClass||"active",this.toggleEvent=e.toggleEvent||"click"}]).directive("btnRadio",function(){return{require:["btnRadio","ngModel"],controller:"ButtonsController",link:function(e,a,t,n){var o=n[0],i=n[1];i.$render=function(){a.toggleClass(o.activeClass,angular.equals(i.$modelValue,e.$eval(t.btnRadio)))},a.bind(o.toggleEvent,function(){var n=a.hasClass(o.activeClass);(!n||angular.isDefined(t.uncheckable))&&e.$apply(function(){i.$setViewValue(n?null:e.$eval(t.btnRadio)),i.$render()})})}}}).directive("btnCheckbox",function(){return{require:["btnCheckbox","ngModel"],controller:"ButtonsController",link:function(e,a,t,n){function o(){return r(t.btnCheckboxTrue,!0)}function i(){return r(t.btnCheckboxFalse,!1)}function r(a,t){var n=e.$eval(a);return angular.isDefined(n)?n:t}var s=n[0],d=n[1];d.$render=function(){a.toggleClass(s.activeClass,angular.equals(d.$modelValue,o()))},a.bind(s.toggleEvent,function(){e.$apply(function(){d.$setViewValue(a.hasClass(s.activeClass)?i():o()),d.$render()})})}}}),angular.module("ui.bootstrap.carousel",["ui.bootstrap.transition"]).controller("CarouselController",["$scope","$timeout","$transition",function(e,a,t){function n(){o();var t=+e.interval;!isNaN(t)&&t>=0&&(r=a(i,t))}function o(){r&&(a.cancel(r),r=null)}function i(){s?(e.next(),n()):e.pause()}var r,s,d=this,l=d.slides=e.slides=[],c=-1;d.currentSlide=null;var m=!1;d.select=e.select=function(o,i){function r(){if(!m){if(d.currentSlide&&angular.isString(i)&&!e.noTransition&&o.$element){o.$element.addClass(i);{o.$element[0].offsetWidth}angular.forEach(l,function(e){angular.extend(e,{direction:"",entering:!1,leaving:!1,active:!1})}),angular.extend(o,{direction:i,active:!0,entering:!0}),angular.extend(d.currentSlide||{},{direction:i,leaving:!0}),e.$currentTransition=t(o.$element,{}),function(a,t){e.$currentTransition.then(function(){s(a,t)},function(){s(a,t)})}(o,d.currentSlide)}else s(o,d.currentSlide);d.currentSlide=o,c=u,n()}}function s(a,t){angular.extend(a,{direction:"",active:!0,leaving:!1,entering:!1}),angular.extend(t||{},{direction:"",active:!1,leaving:!1,entering:!1}),e.$currentTransition=null}var u=l.indexOf(o);void 0===i&&(i=u>c?"next":"prev"),o&&o!==d.currentSlide&&(e.$currentTransition?(e.$currentTransition.cancel(),a(r)):r())},e.$on("$destroy",function(){m=!0}),d.indexOfSlide=function(e){return l.indexOf(e)},e.next=function(){var a=(c+1)%l.length;return e.$currentTransition?void 0:d.select(l[a],"next")},e.prev=function(){var a=0>c-1?l.length-1:c-1;return e.$currentTransition?void 0:d.select(l[a],"prev")},e.isActive=function(e){return d.currentSlide===e},e.$watch("interval",n),e.$on("$destroy",o),e.play=function(){s||(s=!0,n())},e.pause=function(){e.noPause||(s=!1,o())},d.addSlide=function(a,t){a.$element=t,l.push(a),1===l.length||a.active?(d.select(l[l.length-1]),1==l.length&&e.play()):a.active=!1},d.removeSlide=function(e){var a=l.indexOf(e);l.splice(a,1),l.length>0&&e.active?a>=l.length?d.select(l[a-1]):d.select(l[a]):c>a&&c--}}]).directive("carousel",[function(){return{restrict:"EA",transclude:!0,replace:!0,controller:"CarouselController",require:"carousel",templateUrl:"template/carousel/carousel.html",scope:{interval:"=",noTransition:"=",noPause:"="}}}]).directive("slide",function(){return{require:"^carousel",restrict:"EA",transclude:!0,replace:!0,templateUrl:"template/carousel/slide.html",scope:{active:"=?"},link:function(e,a,t,n){n.addSlide(e,a),e.$on("$destroy",function(){n.removeSlide(e)}),e.$watch("active",function(a){a&&n.select(e)})}}}),angular.module("ui.bootstrap.dateparser",[]).service("dateParser",["$locale","orderByFilter",function(e,a){function t(e){var t=[],n=e.split("");return angular.forEach(o,function(a,o){var i=e.indexOf(o);if(i>-1){e=e.split(""),n[i]="("+a.regex+")",e[i]="$";for(var r=i+1,s=i+o.length;s>r;r++)n[r]="",e[r]="$";e=e.join(""),t.push({index:i,apply:a.apply})}}),{regex:new RegExp("^"+n.join("")+"$"),map:a(t,"index")}}function n(e,a,t){return 1===a&&t>28?29===t&&(e%4===0&&e%100!==0||e%400===0):3===a||5===a||8===a||10===a?31>t:!0}this.parsers={};var o={yyyy:{regex:"\\d{4}",apply:function(e){this.year=+e}},yy:{regex:"\\d{2}",apply:function(e){this.year=+e+2e3}},y:{regex:"\\d{1,4}",apply:function(e){this.year=+e}},MMMM:{regex:e.DATETIME_FORMATS.MONTH.join("|"),apply:function(a){this.month=e.DATETIME_FORMATS.MONTH.indexOf(a)}},MMM:{regex:e.DATETIME_FORMATS.SHORTMONTH.join("|"),apply:function(a){this.month=e.DATETIME_FORMATS.SHORTMONTH.indexOf(a)}},MM:{regex:"0[1-9]|1[0-2]",apply:function(e){this.month=e-1}},M:{regex:"[1-9]|1[0-2]",apply:function(e){this.month=e-1}},dd:{regex:"[0-2][0-9]{1}|3[0-1]{1}",apply:function(e){this.date=+e}},d:{regex:"[1-2]?[0-9]{1}|3[0-1]{1}",apply:function(e){this.date=+e}},EEEE:{regex:e.DATETIME_FORMATS.DAY.join("|")},EEE:{regex:e.DATETIME_FORMATS.SHORTDAY.join("|")}};this.parse=function(a,o){if(!angular.isString(a)||!o)return a;o=e.DATETIME_FORMATS[o]||o,this.parsers[o]||(this.parsers[o]=t(o));var i=this.parsers[o],r=i.regex,s=i.map,d=a.match(r);if(d&&d.length){for(var l,c={year:1900,month:0,date:1,hours:0},m=1,u=d.length;u>m;m++){var f=s[m-1];f.apply&&f.apply.call(c,d[m])}return n(c.year,c.month,c.date)&&(l=new Date(c.year,c.month,c.date,c.hours)),l}}}]),angular.module("ui.bootstrap.position",[]).factory("$position",["$document","$window",function(e,a){function t(e,t){return e.currentStyle?e.currentStyle[t]:a.getComputedStyle?a.getComputedStyle(e)[t]:e.style[t]}function n(e){return"static"===(t(e,"position")||"static")}var o=function(a){for(var t=e[0],o=a.offsetParent||t;o&&o!==t&&n(o);)o=o.offsetParent;return o||t};return{position:function(a){var t=this.offset(a),n={top:0,left:0},i=o(a[0]);i!=e[0]&&(n=this.offset(angular.element(i)),n.top+=i.clientTop-i.scrollTop,n.left+=i.clientLeft-i.scrollLeft);var r=a[0].getBoundingClientRect();return{width:r.width||a.prop("offsetWidth"),height:r.height||a.prop("offsetHeight"),top:t.top-n.top,left:t.left-n.left}},offset:function(t){var n=t[0].getBoundingClientRect();return{width:n.width||t.prop("offsetWidth"),height:n.height||t.prop("offsetHeight"),top:n.top+(a.pageYOffset||e[0].documentElement.scrollTop),left:n.left+(a.pageXOffset||e[0].documentElement.scrollLeft)}},positionElements:function(e,a,t,n){var o,i,r,s,d=t.split("-"),l=d[0],c=d[1]||"center";o=n?this.offset(e):this.position(e),i=a.prop("offsetWidth"),r=a.prop("offsetHeight");var m={center:function(){return o.left+o.width/2-i/2},left:function(){return o.left},right:function(){return o.left+o.width}},u={center:function(){return o.top+o.height/2-r/2},top:function(){return o.top},bottom:function(){return o.top+o.height}};switch(l){case"right":s={top:u[c](),left:m[l]()};break;case"left":s={top:u[c](),left:o.left-i};break;case"bottom":s={top:u[l](),left:m[c]()};break;default:s={top:o.top-r,left:m[c]()}}return s}}}]),angular.module("ui.bootstrap.datepicker",["ui.bootstrap.dateparser","ui.bootstrap.position"]).constant("datepickerConfig",{formatDay:"dd",formatMonth:"MMMM",formatYear:"yyyy",formatDayHeader:"EEE",formatDayTitle:"MMMM yyyy",formatMonthTitle:"yyyy",datepickerMode:"day",minMode:"day",maxMode:"year",showWeeks:!0,startingDay:0,yearRange:20,minDate:null,maxDate:null}).controller("DatepickerController",["$scope","$attrs","$parse","$interpolate","$timeout","$log","dateFilter","datepickerConfig",function(e,a,t,n,o,i,r,s){var d=this,l={$setViewValue:angular.noop};this.modes=["day","month","year"],angular.forEach(["formatDay","formatMonth","formatYear","formatDayHeader","formatDayTitle","formatMonthTitle","minMode","maxMode","showWeeks","startingDay","yearRange"],function(t,o){d[t]=angular.isDefined(a[t])?8>o?n(a[t])(e.$parent):e.$parent.$eval(a[t]):s[t]}),angular.forEach(["minDate","maxDate"],function(n){a[n]?e.$parent.$watch(t(a[n]),function(e){d[n]=e?new Date(e):null,d.refreshView()}):d[n]=s[n]?new Date(s[n]):null}),e.datepickerMode=e.datepickerMode||s.datepickerMode,e.uniqueId="datepicker-"+e.$id+"-"+Math.floor(1e4*Math.random()),this.activeDate=angular.isDefined(a.initDate)?e.$parent.$eval(a.initDate):new Date,e.isActive=function(a){return 0===d.compare(a.date,d.activeDate)?(e.activeDateId=a.uid,!0):!1},this.init=function(e){l=e,l.$render=function(){d.render()}},this.render=function(){if(l.$modelValue){var e=new Date(l.$modelValue),a=!isNaN(e);a?this.activeDate=e:i.error('Datepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.'),l.$setValidity("date",a)}this.refreshView()},this.refreshView=function(){if(this.element){this._refreshView();var e=l.$modelValue?new Date(l.$modelValue):null;l.$setValidity("date-disabled",!e||this.element&&!this.isDisabled(e))}},this.createDateObject=function(e,a){var t=l.$modelValue?new Date(l.$modelValue):null;return{date:e,label:r(e,a),selected:t&&0===this.compare(e,t),disabled:this.isDisabled(e),current:0===this.compare(e,new Date)}},this.isDisabled=function(t){return this.minDate&&this.compare(t,this.minDate)<0||this.maxDate&&this.compare(t,this.maxDate)>0||a.dateDisabled&&e.dateDisabled({date:t,mode:e.datepickerMode})},this.split=function(e,a){for(var t=[];e.length>0;)t.push(e.splice(0,a));return t},e.select=function(a){if(e.datepickerMode===d.minMode){var t=l.$modelValue?new Date(l.$modelValue):new Date(0,0,0,0,0,0,0);t.setFullYear(a.getFullYear(),a.getMonth(),a.getDate()),l.$setViewValue(t),l.$render()}else d.activeDate=a,e.datepickerMode=d.modes[d.modes.indexOf(e.datepickerMode)-1]},e.move=function(e){var a=d.activeDate.getFullYear()+e*(d.step.years||0),t=d.activeDate.getMonth()+e*(d.step.months||0);d.activeDate.setFullYear(a,t,1),d.refreshView()},e.toggleMode=function(a){a=a||1,e.datepickerMode===d.maxMode&&1===a||e.datepickerMode===d.minMode&&-1===a||(e.datepickerMode=d.modes[d.modes.indexOf(e.datepickerMode)+a])},e.keys={13:"enter",32:"space",33:"pageup",34:"pagedown",35:"end",36:"home",37:"left",38:"up",39:"right",40:"down"};var c=function(){o(function(){d.element[0].focus()},0,!1)};e.$on("datepicker.focus",c),e.keydown=function(a){var t=e.keys[a.which];if(t&&!a.shiftKey&&!a.altKey)if(a.preventDefault(),a.stopPropagation(),"enter"===t||"space"===t){if(d.isDisabled(d.activeDate))return;e.select(d.activeDate),c()}else!a.ctrlKey||"up"!==t&&"down"!==t?(d.handleKeyDown(t,a),d.refreshView()):(e.toggleMode("up"===t?1:-1),c())}}]).directive("datepicker",function(){return{restrict:"EA",replace:!0,templateUrl:"template/datepicker/datepicker.html",scope:{datepickerMode:"=?",dateDisabled:"&"},require:["datepicker","?^ngModel"],controller:"DatepickerController",link:function(e,a,t,n){var o=n[0],i=n[1];i&&o.init(i)}}}).directive("daypicker",["dateFilter",function(e){return{restrict:"EA",replace:!0,templateUrl:"template/datepicker/day.html",require:"^datepicker",link:function(a,t,n,o){function i(e,a){return 1!==a||e%4!==0||e%100===0&&e%400!==0?d[a]:29}function r(e,a){var t=new Array(a),n=new Date(e),o=0;for(n.setHours(12);a>o;)t[o++]=new Date(n),n.setDate(n.getDate()+1);return t}function s(e){var a=new Date(e);a.setDate(a.getDate()+4-(a.getDay()||7));var t=a.getTime();return a.setMonth(0),a.setDate(1),Math.floor(Math.round((t-a)/864e5)/7)+1}a.showWeeks=o.showWeeks,o.step={months:1},o.element=t;var d=[31,28,31,30,31,30,31,31,30,31,30,31];o._refreshView=function(){var t=o.activeDate.getFullYear(),n=o.activeDate.getMonth(),i=new Date(t,n,1),d=o.startingDay-i.getDay(),l=d>0?7-d:-d,c=new Date(i);l>0&&c.setDate(-l+1);for(var m=r(c,42),u=0;42>u;u++)m[u]=angular.extend(o.createDateObject(m[u],o.formatDay),{secondary:m[u].getMonth()!==n,uid:a.uniqueId+"-"+u});a.labels=new Array(7);for(var f=0;7>f;f++)a.labels[f]={abbr:e(m[f].date,o.formatDayHeader),full:e(m[f].date,"EEEE")};if(a.title=e(o.activeDate,o.formatDayTitle),a.rows=o.split(m,7),a.showWeeks){a.weekNumbers=[];for(var h=s(a.rows[0][0].date),p=a.rows.length;a.weekNumbers.push(h++)<p;);}},o.compare=function(e,a){return new Date(e.getFullYear(),e.getMonth(),e.getDate())-new Date(a.getFullYear(),a.getMonth(),a.getDate())},o.handleKeyDown=function(e){var a=o.activeDate.getDate();
if("left"===e)a-=1;else if("up"===e)a-=7;else if("right"===e)a+=1;else if("down"===e)a+=7;else if("pageup"===e||"pagedown"===e){var t=o.activeDate.getMonth()+("pageup"===e?-1:1);o.activeDate.setMonth(t,1),a=Math.min(i(o.activeDate.getFullYear(),o.activeDate.getMonth()),a)}else"home"===e?a=1:"end"===e&&(a=i(o.activeDate.getFullYear(),o.activeDate.getMonth()));o.activeDate.setDate(a)},o.refreshView()}}}]).directive("monthpicker",["dateFilter",function(e){return{restrict:"EA",replace:!0,templateUrl:"template/datepicker/month.html",require:"^datepicker",link:function(a,t,n,o){o.step={years:1},o.element=t,o._refreshView=function(){for(var t=new Array(12),n=o.activeDate.getFullYear(),i=0;12>i;i++)t[i]=angular.extend(o.createDateObject(new Date(n,i,1),o.formatMonth),{uid:a.uniqueId+"-"+i});a.title=e(o.activeDate,o.formatMonthTitle),a.rows=o.split(t,3)},o.compare=function(e,a){return new Date(e.getFullYear(),e.getMonth())-new Date(a.getFullYear(),a.getMonth())},o.handleKeyDown=function(e){var a=o.activeDate.getMonth();if("left"===e)a-=1;else if("up"===e)a-=3;else if("right"===e)a+=1;else if("down"===e)a+=3;else if("pageup"===e||"pagedown"===e){var t=o.activeDate.getFullYear()+("pageup"===e?-1:1);o.activeDate.setFullYear(t)}else"home"===e?a=0:"end"===e&&(a=11);o.activeDate.setMonth(a)},o.refreshView()}}}]).directive("yearpicker",["dateFilter",function(){return{restrict:"EA",replace:!0,templateUrl:"template/datepicker/year.html",require:"^datepicker",link:function(e,a,t,n){function o(e){return parseInt((e-1)/i,10)*i+1}var i=n.yearRange;n.step={years:i},n.element=a,n._refreshView=function(){for(var a=new Array(i),t=0,r=o(n.activeDate.getFullYear());i>t;t++)a[t]=angular.extend(n.createDateObject(new Date(r+t,0,1),n.formatYear),{uid:e.uniqueId+"-"+t});e.title=[a[0].label,a[i-1].label].join(" - "),e.rows=n.split(a,5)},n.compare=function(e,a){return e.getFullYear()-a.getFullYear()},n.handleKeyDown=function(e){var a=n.activeDate.getFullYear();"left"===e?a-=1:"up"===e?a-=5:"right"===e?a+=1:"down"===e?a+=5:"pageup"===e||"pagedown"===e?a+=("pageup"===e?-1:1)*n.step.years:"home"===e?a=o(n.activeDate.getFullYear()):"end"===e&&(a=o(n.activeDate.getFullYear())+i-1),n.activeDate.setFullYear(a)},n.refreshView()}}}]).constant("datepickerPopupConfig",{datepickerPopup:"yyyy-MM-dd",currentText:"Today",clearText:"Clear",closeText:"Done",closeOnDateSelection:!0,appendToBody:!1,showButtonBar:!0}).directive("datepickerPopup",["$compile","$parse","$document","$position","dateFilter","dateParser","datepickerPopupConfig",function(e,a,t,n,o,i,r){return{restrict:"EA",require:"ngModel",scope:{isOpen:"=?",currentText:"@",clearText:"@",closeText:"@",dateDisabled:"&"},link:function(s,d,l,c){function m(e){return e.replace(/([A-Z])/g,function(e){return"-"+e.toLowerCase()})}function u(e){if(e){if(angular.isDate(e)&&!isNaN(e))return c.$setValidity("date",!0),e;if(angular.isString(e)){var a=i.parse(e,f)||new Date(e);return isNaN(a)?(c.$setValidity("date",!1),void 0):(c.$setValidity("date",!0),a)}return c.$setValidity("date",!1),void 0}return c.$setValidity("date",!0),null}var f,h=angular.isDefined(l.closeOnDateSelection)?s.$parent.$eval(l.closeOnDateSelection):r.closeOnDateSelection,p=angular.isDefined(l.datepickerAppendToBody)?s.$parent.$eval(l.datepickerAppendToBody):r.appendToBody;s.showButtonBar=angular.isDefined(l.showButtonBar)?s.$parent.$eval(l.showButtonBar):r.showButtonBar,s.getText=function(e){return s[e+"Text"]||r[e+"Text"]},l.$observe("datepickerPopup",function(e){f=e||r.datepickerPopup,c.$render()});var g=angular.element("<div datepicker-popup-wrap><div datepicker></div></div>");g.attr({"ng-model":"date","ng-change":"dateSelection()"});var b=angular.element(g.children()[0]);l.datepickerOptions&&angular.forEach(s.$parent.$eval(l.datepickerOptions),function(e,a){b.attr(m(a),e)}),s.watchData={},angular.forEach(["minDate","maxDate","datepickerMode"],function(e){if(l[e]){var t=a(l[e]);if(s.$parent.$watch(t,function(a){s.watchData[e]=a}),b.attr(m(e),"watchData."+e),"datepickerMode"===e){var n=t.assign;s.$watch("watchData."+e,function(e,a){e!==a&&n(s.$parent,e)})}}}),l.dateDisabled&&b.attr("date-disabled","dateDisabled({ date: date, mode: mode })"),c.$parsers.unshift(u),s.dateSelection=function(e){angular.isDefined(e)&&(s.date=e),c.$setViewValue(s.date),c.$render(),h&&(s.isOpen=!1,d[0].focus())},d.bind("input change keyup",function(){s.$apply(function(){s.date=c.$modelValue})}),c.$render=function(){var e=c.$viewValue?o(c.$viewValue,f):"";d.val(e),s.date=u(c.$modelValue)};var v=function(e){s.isOpen&&e.target!==d[0]&&s.$apply(function(){s.isOpen=!1})},y=function(e){s.keydown(e)};d.bind("keydown",y),s.keydown=function(e){27===e.which?(e.preventDefault(),e.stopPropagation(),s.close()):40!==e.which||s.isOpen||(s.isOpen=!0)},s.$watch("isOpen",function(e){e?(s.$broadcast("datepicker.focus"),s.position=p?n.offset(d):n.position(d),s.position.top=s.position.top+d.prop("offsetHeight"),t.bind("click",v)):t.unbind("click",v)}),s.select=function(e){if("today"===e){var a=new Date;angular.isDate(c.$modelValue)?(e=new Date(c.$modelValue),e.setFullYear(a.getFullYear(),a.getMonth(),a.getDate())):e=new Date(a.setHours(0,0,0,0))}s.dateSelection(e)},s.close=function(){s.isOpen=!1,d[0].focus()};var w=e(g)(s);g.remove(),p?t.find("body").append(w):d.after(w),s.$on("$destroy",function(){w.remove(),d.unbind("keydown",y),t.unbind("click",v)})}}}]).directive("datepickerPopupWrap",function(){return{restrict:"EA",replace:!0,transclude:!0,templateUrl:"template/datepicker/popup.html",link:function(e,a){a.bind("click",function(e){e.preventDefault(),e.stopPropagation()})}}}),angular.module("ui.bootstrap.dropdown",[]).constant("dropdownConfig",{openClass:"open"}).service("dropdownService",["$document",function(e){var a=null;this.open=function(o){a||(e.bind("click",t),e.bind("keydown",n)),a&&a!==o&&(a.isOpen=!1),a=o},this.close=function(o){a===o&&(a=null,e.unbind("click",t),e.unbind("keydown",n))};var t=function(e){var t=a.getToggleElement();e&&t&&t[0].contains(e.target)||a.$apply(function(){a.isOpen=!1})},n=function(e){27===e.which&&(a.focusToggleElement(),t())}}]).controller("DropdownController",["$scope","$attrs","$parse","dropdownConfig","dropdownService","$animate",function(e,a,t,n,o,i){var r,s=this,d=e.$new(),l=n.openClass,c=angular.noop,m=a.onToggle?t(a.onToggle):angular.noop;this.init=function(n){s.$element=n,a.isOpen&&(r=t(a.isOpen),c=r.assign,e.$watch(r,function(e){d.isOpen=!!e}))},this.toggle=function(e){return d.isOpen=arguments.length?!!e:!d.isOpen},this.isOpen=function(){return d.isOpen},d.getToggleElement=function(){return s.toggleElement},d.focusToggleElement=function(){s.toggleElement&&s.toggleElement[0].focus()},d.$watch("isOpen",function(a,t){i[a?"addClass":"removeClass"](s.$element,l),a?(d.focusToggleElement(),o.open(d)):o.close(d),c(e,a),angular.isDefined(a)&&a!==t&&m(e,{open:!!a})}),e.$on("$locationChangeSuccess",function(){d.isOpen=!1}),e.$on("$destroy",function(){d.$destroy()})}]).directive("dropdown",function(){return{restrict:"CA",controller:"DropdownController",link:function(e,a,t,n){n.init(a)}}}).directive("dropdownToggle",function(){return{restrict:"CA",require:"?^dropdown",link:function(e,a,t,n){if(n){n.toggleElement=a;var o=function(o){o.preventDefault(),a.hasClass("disabled")||t.disabled||e.$apply(function(){n.toggle()})};a.bind("click",o),a.attr({"aria-haspopup":!0,"aria-expanded":!1}),e.$watch(n.isOpen,function(e){a.attr("aria-expanded",!!e)}),e.$on("$destroy",function(){a.unbind("click",o)})}}}}),angular.module("ui.bootstrap.modal",["ui.bootstrap.transition"]).factory("$$stackedMap",function(){return{createNew:function(){var e=[];return{add:function(a,t){e.push({key:a,value:t})},get:function(a){for(var t=0;t<e.length;t++)if(a==e[t].key)return e[t]},keys:function(){for(var a=[],t=0;t<e.length;t++)a.push(e[t].key);return a},top:function(){return e[e.length-1]},remove:function(a){for(var t=-1,n=0;n<e.length;n++)if(a==e[n].key){t=n;break}return e.splice(t,1)[0]},removeTop:function(){return e.splice(e.length-1,1)[0]},length:function(){return e.length}}}}}).directive("modalBackdrop",["$timeout",function(e){return{restrict:"EA",replace:!0,templateUrl:"template/modal/backdrop.html",link:function(a,t,n){a.backdropClass=n.backdropClass||"",a.animate=!1,e(function(){a.animate=!0})}}}]).directive("modalWindow",["$modalStack","$timeout",function(e,a){return{restrict:"EA",scope:{index:"@",animate:"="},replace:!0,transclude:!0,templateUrl:function(e,a){return a.templateUrl||"template/modal/window.html"},link:function(t,n,o){n.addClass(o.windowClass||""),t.size=o.size,a(function(){t.animate=!0,n[0].querySelectorAll("[autofocus]").length||n[0].focus()}),t.close=function(a){var t=e.getTop();t&&t.value.backdrop&&"static"!=t.value.backdrop&&a.target===a.currentTarget&&(a.preventDefault(),a.stopPropagation(),e.dismiss(t.key,"backdrop click"))}}}}]).directive("modalTransclude",function(){return{link:function(e,a,t,n,o){o(e.$parent,function(e){a.empty(),a.append(e)})}}}).factory("$modalStack",["$transition","$timeout","$document","$compile","$rootScope","$$stackedMap",function(e,a,t,n,o,i){function r(){for(var e=-1,a=f.keys(),t=0;t<a.length;t++)f.get(a[t]).value.backdrop&&(e=t);return e}function s(e){var a=t.find("body").eq(0),n=f.get(e).value;f.remove(e),l(n.modalDomEl,n.modalScope,300,function(){n.modalScope.$destroy(),a.toggleClass(u,f.length()>0),d()})}function d(){if(c&&-1==r()){var e=m;l(c,m,150,function(){e.$destroy(),e=null}),c=void 0,m=void 0}}function l(t,n,o,i){function r(){r.done||(r.done=!0,t.remove(),i&&i())}n.animate=!1;var s=e.transitionEndEventName;if(s){var d=a(r,o);t.bind(s,function(){a.cancel(d),r(),n.$apply()})}else a(r)}var c,m,u="modal-open",f=i.createNew(),h={};return o.$watch(r,function(e){m&&(m.index=e)}),t.bind("keydown",function(e){var a;27===e.which&&(a=f.top(),a&&a.value.keyboard&&(e.preventDefault(),o.$apply(function(){h.dismiss(a.key,"escape key press")})))}),h.open=function(e,a){f.add(e,{deferred:a.deferred,modalScope:a.scope,backdrop:a.backdrop,keyboard:a.keyboard});var i=t.find("body").eq(0),s=r();if(s>=0&&!c){m=o.$new(!0),m.index=s;var d=angular.element("<div modal-backdrop></div>");d.attr("backdrop-class",a.backdropClass),c=n(d)(m),i.append(c)}var l=angular.element("<div modal-window></div>");l.attr({"template-url":a.windowTemplateUrl,"window-class":a.windowClass,size:a.size,index:f.length()-1,animate:"animate"}).html(a.content);var h=n(l)(a.scope);f.top().value.modalDomEl=h,i.append(h),i.addClass(u)},h.close=function(e,a){var t=f.get(e);t&&(t.value.deferred.resolve(a),s(e))},h.dismiss=function(e,a){var t=f.get(e);t&&(t.value.deferred.reject(a),s(e))},h.dismissAll=function(e){for(var a=this.getTop();a;)this.dismiss(a.key,e),a=this.getTop()},h.getTop=function(){return f.top()},h}]).provider("$modal",function(){var e={options:{backdrop:!0,keyboard:!0},$get:["$injector","$rootScope","$q","$http","$templateCache","$controller","$modalStack",function(a,t,n,o,i,r,s){function d(e){return e.template?n.when(e.template):o.get(angular.isFunction(e.templateUrl)?e.templateUrl():e.templateUrl,{cache:i}).then(function(e){return e.data})}function l(e){var t=[];return angular.forEach(e,function(e){(angular.isFunction(e)||angular.isArray(e))&&t.push(n.when(a.invoke(e)))}),t}var c={};return c.open=function(a){var o=n.defer(),i=n.defer(),c={result:o.promise,opened:i.promise,close:function(e){s.close(c,e)},dismiss:function(e){s.dismiss(c,e)}};if(a=angular.extend({},e.options,a),a.resolve=a.resolve||{},!a.template&&!a.templateUrl)throw new Error("One of template or templateUrl options is required.");var m=n.all([d(a)].concat(l(a.resolve)));return m.then(function(e){var n=(a.scope||t).$new();n.$close=c.close,n.$dismiss=c.dismiss;var i,d={},l=1;a.controller&&(d.$scope=n,d.$modalInstance=c,angular.forEach(a.resolve,function(a,t){d[t]=e[l++]}),i=r(a.controller,d),a.controllerAs&&(n[a.controllerAs]=i)),s.open(c,{scope:n,deferred:o,content:e[0],backdrop:a.backdrop,keyboard:a.keyboard,backdropClass:a.backdropClass,windowClass:a.windowClass,windowTemplateUrl:a.windowTemplateUrl,size:a.size})},function(e){o.reject(e)}),m.then(function(){i.resolve(!0)},function(){i.reject(!1)}),c},c}]};return e}),angular.module("ui.bootstrap.pagination",[]).controller("PaginationController",["$scope","$attrs","$parse",function(e,a,t){var n=this,o={$setViewValue:angular.noop},i=a.numPages?t(a.numPages).assign:angular.noop;this.init=function(i,r){o=i,this.config=r,o.$render=function(){n.render()},a.itemsPerPage?e.$parent.$watch(t(a.itemsPerPage),function(a){n.itemsPerPage=parseInt(a,10),e.totalPages=n.calculateTotalPages()}):this.itemsPerPage=r.itemsPerPage},this.calculateTotalPages=function(){var a=this.itemsPerPage<1?1:Math.ceil(e.totalItems/this.itemsPerPage);return Math.max(a||0,1)},this.render=function(){e.page=parseInt(o.$viewValue,10)||1},e.selectPage=function(a){e.page!==a&&a>0&&a<=e.totalPages&&(o.$setViewValue(a),o.$render())},e.getText=function(a){return e[a+"Text"]||n.config[a+"Text"]},e.noPrevious=function(){return 1===e.page},e.noNext=function(){return e.page===e.totalPages},e.$watch("totalItems",function(){e.totalPages=n.calculateTotalPages()}),e.$watch("totalPages",function(a){i(e.$parent,a),e.page>a?e.selectPage(a):o.$render()})}]).constant("paginationConfig",{itemsPerPage:10,boundaryLinks:!1,directionLinks:!0,firstText:"First",previousText:"Previous",nextText:"Next",lastText:"Last",rotate:!0}).directive("pagination",["$parse","paginationConfig",function(e,a){return{restrict:"EA",scope:{totalItems:"=",firstText:"@",previousText:"@",nextText:"@",lastText:"@"},require:["pagination","?ngModel"],controller:"PaginationController",templateUrl:"template/pagination/pagination.html",replace:!0,link:function(t,n,o,i){function r(e,a,t){return{number:e,text:a,active:t}}function s(e,a){var t=[],n=1,o=a,i=angular.isDefined(c)&&a>c;i&&(m?(n=Math.max(e-Math.floor(c/2),1),o=n+c-1,o>a&&(o=a,n=o-c+1)):(n=(Math.ceil(e/c)-1)*c+1,o=Math.min(n+c-1,a)));for(var s=n;o>=s;s++){var d=r(s,s,s===e);t.push(d)}if(i&&!m){if(n>1){var l=r(n-1,"...",!1);t.unshift(l)}if(a>o){var u=r(o+1,"...",!1);t.push(u)}}return t}var d=i[0],l=i[1];if(l){var c=angular.isDefined(o.maxSize)?t.$parent.$eval(o.maxSize):a.maxSize,m=angular.isDefined(o.rotate)?t.$parent.$eval(o.rotate):a.rotate;t.boundaryLinks=angular.isDefined(o.boundaryLinks)?t.$parent.$eval(o.boundaryLinks):a.boundaryLinks,t.directionLinks=angular.isDefined(o.directionLinks)?t.$parent.$eval(o.directionLinks):a.directionLinks,d.init(l,a),o.maxSize&&t.$parent.$watch(e(o.maxSize),function(e){c=parseInt(e,10),d.render()});var u=d.render;d.render=function(){u(),t.page>0&&t.page<=t.totalPages&&(t.pages=s(t.page,t.totalPages))}}}}}]).constant("pagerConfig",{itemsPerPage:10,previousText:"« Previous",nextText:"Next »",align:!0}).directive("pager",["pagerConfig",function(e){return{restrict:"EA",scope:{totalItems:"=",previousText:"@",nextText:"@"},require:["pager","?ngModel"],controller:"PaginationController",templateUrl:"template/pagination/pager.html",replace:!0,link:function(a,t,n,o){var i=o[0],r=o[1];r&&(a.align=angular.isDefined(n.align)?a.$parent.$eval(n.align):e.align,i.init(r,e))}}}]),angular.module("ui.bootstrap.tooltip",["ui.bootstrap.position","ui.bootstrap.bindHtml"]).provider("$tooltip",function(){function e(e){var a=/[A-Z]/g,t="-";return e.replace(a,function(e,a){return(a?t:"")+e.toLowerCase()})}var a={placement:"top",animation:!0,popupDelay:0},t={mouseenter:"mouseleave",click:"click",focus:"blur"},n={};this.options=function(e){angular.extend(n,e)},this.setTriggers=function(e){angular.extend(t,e)},this.$get=["$window","$compile","$timeout","$parse","$document","$position","$interpolate",function(o,i,r,s,d,l,c){return function(o,m,u){function f(e){var a=e||h.trigger||u,n=t[a]||a;return{show:a,hide:n}}var h=angular.extend({},a,n),p=e(o),g=c.startSymbol(),b=c.endSymbol(),v="<div "+p+'-popup title="'+g+"tt_title"+b+'" content="'+g+"tt_content"+b+'" placement="'+g+"tt_placement"+b+'" animation="tt_animation" is-open="tt_isOpen"></div>';return{restrict:"EA",scope:!0,compile:function(){var e=i(v);return function(a,t,n){function i(){a.tt_isOpen?u():c()}function c(){(!C||a.$eval(n[m+"Enable"]))&&(a.tt_popupDelay?S||(S=r(p,a.tt_popupDelay,!1),S.then(function(e){e()})):p()())}function u(){a.$apply(function(){g()})}function p(){return S=null,w&&(r.cancel(w),w=null),a.tt_content?(b(),y.css({top:0,left:0,display:"block"}),A?d.find("body").append(y):t.after(y),T(),a.tt_isOpen=!0,a.$digest(),T):angular.noop}function g(){a.tt_isOpen=!1,r.cancel(S),S=null,a.tt_animation?w||(w=r(v,500)):v()}function b(){y&&v(),y=e(a,function(){}),a.$digest()}function v(){w=null,y&&(y.remove(),y=null)}var y,w,S,A=angular.isDefined(h.appendToBody)?h.appendToBody:!1,k=f(void 0),C=angular.isDefined(n[m+"Enable"]),T=function(){var e=l.positionElements(t,y,a.tt_placement,A);e.top+="px",e.left+="px",y.css(e)};a.tt_isOpen=!1,n.$observe(o,function(e){a.tt_content=e,!e&&a.tt_isOpen&&g()}),n.$observe(m+"Title",function(e){a.tt_title=e}),n.$observe(m+"Placement",function(e){a.tt_placement=angular.isDefined(e)?e:h.placement}),n.$observe(m+"PopupDelay",function(e){var t=parseInt(e,10);a.tt_popupDelay=isNaN(t)?h.popupDelay:t});var M=function(){t.unbind(k.show,c),t.unbind(k.hide,u)};n.$observe(m+"Trigger",function(e){M(),k=f(e),k.show===k.hide?t.bind(k.show,i):(t.bind(k.show,c),t.bind(k.hide,u))});var N=a.$eval(n[m+"Animation"]);a.tt_animation=angular.isDefined(N)?!!N:h.animation,n.$observe(m+"AppendToBody",function(e){A=angular.isDefined(e)?s(e)(a):A}),A&&a.$on("$locationChangeSuccess",function(){a.tt_isOpen&&g()}),a.$on("$destroy",function(){r.cancel(w),r.cancel(S),M(),v()})}}}}}]}).directive("tooltipPopup",function(){return{restrict:"EA",replace:!0,scope:{content:"@",placement:"@",animation:"&",isOpen:"&"},templateUrl:"template/tooltip/tooltip-popup.html"}}).directive("tooltip",["$tooltip",function(e){return e("tooltip","tooltip","mouseenter")}]).directive("tooltipHtmlUnsafePopup",function(){return{restrict:"EA",replace:!0,scope:{content:"@",placement:"@",animation:"&",isOpen:"&"},templateUrl:"template/tooltip/tooltip-html-unsafe-popup.html"}}).directive("tooltipHtmlUnsafe",["$tooltip",function(e){return e("tooltipHtmlUnsafe","tooltip","mouseenter")}]),angular.module("ui.bootstrap.popover",["ui.bootstrap.tooltip"]).directive("popoverPopup",function(){return{restrict:"EA",replace:!0,scope:{title:"@",content:"@",placement:"@",animation:"&",isOpen:"&"},templateUrl:"template/popover/popover.html"}}).directive("popover",["$tooltip",function(e){return e("popover","popover","click")}]),angular.module("ui.bootstrap.progressbar",[]).constant("progressConfig",{animate:!0,max:100}).controller("ProgressController",["$scope","$attrs","progressConfig",function(e,a,t){var n=this,o=angular.isDefined(a.animate)?e.$parent.$eval(a.animate):t.animate;this.bars=[],e.max=angular.isDefined(a.max)?e.$parent.$eval(a.max):t.max,this.addBar=function(a,t){o||t.css({transition:"none"}),this.bars.push(a),a.$watch("value",function(t){a.percent=+(100*t/e.max).toFixed(2)}),a.$on("$destroy",function(){t=null,n.removeBar(a)})},this.removeBar=function(e){this.bars.splice(this.bars.indexOf(e),1)}}]).directive("progress",function(){return{restrict:"EA",replace:!0,transclude:!0,controller:"ProgressController",require:"progress",scope:{},templateUrl:"template/progressbar/progress.html"}}).directive("bar",function(){return{restrict:"EA",replace:!0,transclude:!0,require:"^progress",scope:{value:"=",type:"@"},templateUrl:"template/progressbar/bar.html",link:function(e,a,t,n){n.addBar(e,a)}}}).directive("progressbar",function(){return{restrict:"EA",replace:!0,transclude:!0,controller:"ProgressController",scope:{value:"=",type:"@"},templateUrl:"template/progressbar/progressbar.html",link:function(e,a,t,n){n.addBar(e,angular.element(a.children()[0]))}}}),angular.module("ui.bootstrap.rating",[]).constant("ratingConfig",{max:5,stateOn:null,stateOff:null}).controller("RatingController",["$scope","$attrs","ratingConfig",function(e,a,t){var n={$setViewValue:angular.noop};this.init=function(o){n=o,n.$render=this.render,this.stateOn=angular.isDefined(a.stateOn)?e.$parent.$eval(a.stateOn):t.stateOn,this.stateOff=angular.isDefined(a.stateOff)?e.$parent.$eval(a.stateOff):t.stateOff;var i=angular.isDefined(a.ratingStates)?e.$parent.$eval(a.ratingStates):new Array(angular.isDefined(a.max)?e.$parent.$eval(a.max):t.max);e.range=this.buildTemplateObjects(i)},this.buildTemplateObjects=function(e){for(var a=0,t=e.length;t>a;a++)e[a]=angular.extend({index:a},{stateOn:this.stateOn,stateOff:this.stateOff},e[a]);return e},e.rate=function(a){!e.readonly&&a>=0&&a<=e.range.length&&(n.$setViewValue(a),n.$render())},e.enter=function(a){e.readonly||(e.value=a),e.onHover({value:a})},e.reset=function(){e.value=n.$viewValue,e.onLeave()},e.onKeydown=function(a){/(37|38|39|40)/.test(a.which)&&(a.preventDefault(),a.stopPropagation(),e.rate(e.value+(38===a.which||39===a.which?1:-1)))},this.render=function(){e.value=n.$viewValue}}]).directive("rating",function(){return{restrict:"EA",require:["rating","ngModel"],scope:{readonly:"=?",onHover:"&",onLeave:"&"},controller:"RatingController",templateUrl:"template/rating/rating.html",replace:!0,link:function(e,a,t,n){var o=n[0],i=n[1];i&&o.init(i)}}}),angular.module("ui.bootstrap.tabs",[]).controller("TabsetController",["$scope",function(e){var a=this,t=a.tabs=e.tabs=[];a.select=function(e){angular.forEach(t,function(a){a.active&&a!==e&&(a.active=!1,a.onDeselect())}),e.active=!0,e.onSelect()},a.addTab=function(e){t.push(e),1===t.length?e.active=!0:e.active&&a.select(e)},a.removeTab=function(e){var n=t.indexOf(e);if(e.active&&t.length>1){var o=n==t.length-1?n-1:n+1;a.select(t[o])}t.splice(n,1)}}]).directive("tabset",function(){return{restrict:"EA",transclude:!0,replace:!0,scope:{type:"@"},controller:"TabsetController",templateUrl:"template/tabs/tabset.html",link:function(e,a,t){e.vertical=angular.isDefined(t.vertical)?e.$parent.$eval(t.vertical):!1,e.justified=angular.isDefined(t.justified)?e.$parent.$eval(t.justified):!1}}}).directive("tab",["$parse",function(e){return{require:"^tabset",restrict:"EA",replace:!0,templateUrl:"template/tabs/tab.html",transclude:!0,scope:{active:"=?",heading:"@",onSelect:"&select",onDeselect:"&deselect"},controller:function(){},compile:function(a,t,n){return function(a,t,o,i){a.$watch("active",function(e){e&&i.select(a)}),a.disabled=!1,o.disabled&&a.$parent.$watch(e(o.disabled),function(e){a.disabled=!!e}),a.select=function(){a.disabled||(a.active=!0)},i.addTab(a),a.$on("$destroy",function(){i.removeTab(a)}),a.$transcludeFn=n}}}}]).directive("tabHeadingTransclude",[function(){return{restrict:"A",require:"^tab",link:function(e,a){e.$watch("headingElement",function(e){e&&(a.html(""),a.append(e))})}}}]).directive("tabContentTransclude",function(){function e(e){return e.tagName&&(e.hasAttribute("tab-heading")||e.hasAttribute("data-tab-heading")||"tab-heading"===e.tagName.toLowerCase()||"data-tab-heading"===e.tagName.toLowerCase())}return{restrict:"A",require:"^tabset",link:function(a,t,n){var o=a.$eval(n.tabContentTransclude);o.$transcludeFn(o.$parent,function(a){angular.forEach(a,function(a){e(a)?o.headingElement=a:t.append(a)})})}}}),angular.module("ui.bootstrap.timepicker",[]).constant("timepickerConfig",{hourStep:1,minuteStep:1,showMeridian:!0,meridians:null,readonlyInput:!1,mousewheel:!0}).controller("TimepickerController",["$scope","$attrs","$parse","$log","$locale","timepickerConfig",function(e,a,t,n,o,i){function r(){var a=parseInt(e.hours,10),t=e.showMeridian?a>0&&13>a:a>=0&&24>a;return t?(e.showMeridian&&(12===a&&(a=0),e.meridian===p[1]&&(a+=12)),a):void 0}function s(){var a=parseInt(e.minutes,10);return a>=0&&60>a?a:void 0}function d(e){return angular.isDefined(e)&&e.toString().length<2?"0"+e:e}function l(e){c(),h.$setViewValue(new Date(f)),m(e)}function c(){h.$setValidity("time",!0),e.invalidHours=!1,e.invalidMinutes=!1}function m(a){var t=f.getHours(),n=f.getMinutes();e.showMeridian&&(t=0===t||12===t?12:t%12),e.hours="h"===a?t:d(t),e.minutes="m"===a?n:d(n),e.meridian=f.getHours()<12?p[0]:p[1]}function u(e){var a=new Date(f.getTime()+6e4*e);f.setHours(a.getHours(),a.getMinutes()),l()}var f=new Date,h={$setViewValue:angular.noop},p=angular.isDefined(a.meridians)?e.$parent.$eval(a.meridians):i.meridians||o.DATETIME_FORMATS.AMPMS;this.init=function(t,n){h=t,h.$render=this.render;var o=n.eq(0),r=n.eq(1),s=angular.isDefined(a.mousewheel)?e.$parent.$eval(a.mousewheel):i.mousewheel;s&&this.setupMousewheelEvents(o,r),e.readonlyInput=angular.isDefined(a.readonlyInput)?e.$parent.$eval(a.readonlyInput):i.readonlyInput,this.setupInputEvents(o,r)};var g=i.hourStep;a.hourStep&&e.$parent.$watch(t(a.hourStep),function(e){g=parseInt(e,10)});var b=i.minuteStep;a.minuteStep&&e.$parent.$watch(t(a.minuteStep),function(e){b=parseInt(e,10)}),e.showMeridian=i.showMeridian,a.showMeridian&&e.$parent.$watch(t(a.showMeridian),function(a){if(e.showMeridian=!!a,h.$error.time){var t=r(),n=s();angular.isDefined(t)&&angular.isDefined(n)&&(f.setHours(t),l())}else m()}),this.setupMousewheelEvents=function(a,t){var n=function(e){e.originalEvent&&(e=e.originalEvent);var a=e.wheelDelta?e.wheelDelta:-e.deltaY;return e.detail||a>0};a.bind("mousewheel wheel",function(a){e.$apply(n(a)?e.incrementHours():e.decrementHours()),a.preventDefault()}),t.bind("mousewheel wheel",function(a){e.$apply(n(a)?e.incrementMinutes():e.decrementMinutes()),a.preventDefault()})},this.setupInputEvents=function(a,t){if(e.readonlyInput)return e.updateHours=angular.noop,e.updateMinutes=angular.noop,void 0;var n=function(a,t){h.$setViewValue(null),h.$setValidity("time",!1),angular.isDefined(a)&&(e.invalidHours=a),angular.isDefined(t)&&(e.invalidMinutes=t)};e.updateHours=function(){var e=r();angular.isDefined(e)?(f.setHours(e),l("h")):n(!0)},a.bind("blur",function(){!e.invalidHours&&e.hours<10&&e.$apply(function(){e.hours=d(e.hours)})}),e.updateMinutes=function(){var e=s();angular.isDefined(e)?(f.setMinutes(e),l("m")):n(void 0,!0)},t.bind("blur",function(){!e.invalidMinutes&&e.minutes<10&&e.$apply(function(){e.minutes=d(e.minutes)})})},this.render=function(){var e=h.$modelValue?new Date(h.$modelValue):null;isNaN(e)?(h.$setValidity("time",!1),n.error('Timepicker directive: "ng-model" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.')):(e&&(f=e),c(),m())},e.incrementHours=function(){u(60*g)},e.decrementHours=function(){u(60*-g)},e.incrementMinutes=function(){u(b)},e.decrementMinutes=function(){u(-b)},e.toggleMeridian=function(){u(720*(f.getHours()<12?1:-1))}}]).directive("timepicker",function(){return{restrict:"EA",require:["timepicker","?^ngModel"],controller:"TimepickerController",replace:!0,scope:{},templateUrl:"template/timepicker/timepicker.html",link:function(e,a,t,n){var o=n[0],i=n[1];i&&o.init(i,a.find("input"))}}}),angular.module("ui.bootstrap.typeahead",["ui.bootstrap.position","ui.bootstrap.bindHtml"]).factory("typeaheadParser",["$parse",function(e){var a=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+([\s\S]+?)$/;return{parse:function(t){var n=t.match(a);if(!n)throw new Error('Expected typeahead specification in form of "_modelValue_ (as _label_)? for _item_ in _collection_" but got "'+t+'".');return{itemName:n[3],source:e(n[4]),viewMapper:e(n[2]||n[1]),modelMapper:e(n[1])}}}}]).directive("typeahead",["$compile","$parse","$q","$timeout","$document","$position","typeaheadParser",function(e,a,t,n,o,i,r){var s=[9,13,27,38,40];return{require:"ngModel",link:function(d,l,c,m){var u,f=d.$eval(c.typeaheadMinLength)||1,h=d.$eval(c.typeaheadWaitMs)||0,p=d.$eval(c.typeaheadEditable)!==!1,g=a(c.typeaheadLoading).assign||angular.noop,b=a(c.typeaheadOnSelect),v=c.typeaheadInputFormatter?a(c.typeaheadInputFormatter):void 0,y=c.typeaheadAppendToBody?d.$eval(c.typeaheadAppendToBody):!1,w=a(c.ngModel).assign,S=r.parse(c.typeahead),A=d.$new();d.$on("$destroy",function(){A.$destroy()});var k="typeahead-"+A.$id+"-"+Math.floor(1e4*Math.random());l.attr({"aria-autocomplete":"list","aria-expanded":!1,"aria-owns":k});var C=angular.element("<div typeahead-popup></div>");C.attr({id:k,matches:"matches",active:"activeIdx",select:"select(activeIdx)",query:"query",position:"position"}),angular.isDefined(c.typeaheadTemplateUrl)&&C.attr("template-url",c.typeaheadTemplateUrl);var T=function(){A.matches=[],A.activeIdx=-1,l.attr("aria-expanded",!1)},M=function(e){return k+"-option-"+e};A.$watch("activeIdx",function(e){0>e?l.removeAttr("aria-activedescendant"):l.attr("aria-activedescendant",M(e))});var N=function(e){var a={$viewValue:e};g(d,!0),t.when(S.source(d,a)).then(function(t){var n=e===m.$viewValue;if(n&&u)if(t.length>0){A.activeIdx=0,A.matches.length=0;for(var o=0;o<t.length;o++)a[S.itemName]=t[o],A.matches.push({id:M(o),label:S.viewMapper(A,a),model:t[o]});A.query=e,A.position=y?i.offset(l):i.position(l),A.position.top=A.position.top+l.prop("offsetHeight"),l.attr("aria-expanded",!0)}else T();n&&g(d,!1)},function(){T(),g(d,!1)})};T(),A.query=void 0;var x,E=function(e){x=n(function(){N(e)},h)},B=function(){x&&n.cancel(x)};m.$parsers.unshift(function(e){return u=!0,e&&e.length>=f?h>0?(B(),E(e)):N(e):(g(d,!1),B(),T()),p?e:e?(m.$setValidity("editable",!1),void 0):(m.$setValidity("editable",!0),e)}),m.$formatters.push(function(e){var a,t,n={};return v?(n.$model=e,v(d,n)):(n[S.itemName]=e,a=S.viewMapper(d,n),n[S.itemName]=void 0,t=S.viewMapper(d,n),a!==t?a:e)}),A.select=function(e){var a,t,o={};o[S.itemName]=t=A.matches[e].model,a=S.modelMapper(d,o),w(d,a),m.$setValidity("editable",!0),b(d,{$item:t,$model:a,$label:S.viewMapper(d,o)}),T(),n(function(){l[0].focus()},0,!1)},l.bind("keydown",function(e){0!==A.matches.length&&-1!==s.indexOf(e.which)&&(e.preventDefault(),40===e.which?(A.activeIdx=(A.activeIdx+1)%A.matches.length,A.$digest()):38===e.which?(A.activeIdx=(A.activeIdx?A.activeIdx:A.matches.length)-1,A.$digest()):13===e.which||9===e.which?A.$apply(function(){A.select(A.activeIdx)}):27===e.which&&(e.stopPropagation(),T(),A.$digest()))}),l.bind("blur",function(){u=!1});var R=function(e){l[0]!==e.target&&(T(),A.$digest())};o.bind("click",R),d.$on("$destroy",function(){o.unbind("click",R)});var L=e(C)(A);y?o.find("body").append(L):l.after(L)}}}]).directive("typeaheadPopup",function(){return{restrict:"EA",scope:{matches:"=",query:"=",active:"=",position:"=",select:"&"},replace:!0,templateUrl:"template/typeahead/typeahead-popup.html",link:function(e,a,t){e.templateUrl=t.templateUrl,e.isOpen=function(){return e.matches.length>0},e.isActive=function(a){return e.active==a},e.selectActive=function(a){e.active=a},e.selectMatch=function(a){e.select({activeIdx:a})}}}}).directive("typeaheadMatch",["$http","$templateCache","$compile","$parse",function(e,a,t,n){return{restrict:"EA",scope:{index:"=",match:"=",query:"="},link:function(o,i,r){var s=n(r.templateUrl)(o.$parent)||"template/typeahead/typeahead-match.html";e.get(s,{cache:a}).success(function(e){i.replaceWith(t(e.trim())(o))})}}}]).filter("typeaheadHighlight",function(){function e(e){return e.replace(/([.?*+^$[\]\\(){}|-])/g,"\\$1")}return function(a,t){return t?(""+a).replace(new RegExp(e(t),"gi"),"<strong>$&</strong>"):a}}),angular.module("template/accordion/accordion-group.html",[]).run(["$templateCache",function(e){e.put("template/accordion/accordion-group.html",'<div class="panel panel-default">\n  <div class="panel-heading">\n    <h4 class="panel-title">\n      <a class="accordion-toggle" ng-click="toggleOpen()" accordion-transclude="heading"><span ng-class="{\'text-muted\': isDisabled}">{{heading}}</span></a>\n    </h4>\n  </div>\n  <div class="panel-collapse" collapse="!isOpen">\n	  <div class="panel-body" ng-transclude></div>\n  </div>\n</div>')}]),angular.module("template/accordion/accordion.html",[]).run(["$templateCache",function(e){e.put("template/accordion/accordion.html",'<div class="panel-group" ng-transclude></div>')}]),angular.module("template/alert/alert.html",[]).run(["$templateCache",function(e){e.put("template/alert/alert.html",'<div class="alert" ng-class="[\'alert-\' + (type || \'warning\'), closeable ? \'alert-dismissable\' : null]" role="alert">\n    <button ng-show="closeable" type="button" class="close" ng-click="close()">\n        <span aria-hidden="true">&times;</span>\n        <span class="sr-only">Close</span>\n    </button>\n    <div ng-transclude></div>\n</div>\n')
}]),angular.module("template/carousel/carousel.html",[]).run(["$templateCache",function(e){e.put("template/carousel/carousel.html",'<div ng-mouseenter="pause()" ng-mouseleave="play()" class="carousel" ng-swipe-right="prev()" ng-swipe-left="next()">\n    <ol class="carousel-indicators" ng-show="slides.length > 1">\n        <li ng-repeat="slide in slides track by $index" ng-class="{active: isActive(slide)}" ng-click="select(slide)"></li>\n    </ol>\n    <div class="carousel-inner" ng-transclude></div>\n    <a class="left carousel-control" ng-click="prev()" ng-show="slides.length > 1"><span class="glyphicon glyphicon-chevron-left"></span></a>\n    <a class="right carousel-control" ng-click="next()" ng-show="slides.length > 1"><span class="glyphicon glyphicon-chevron-right"></span></a>\n</div>\n')}]),angular.module("template/carousel/slide.html",[]).run(["$templateCache",function(e){e.put("template/carousel/slide.html","<div ng-class=\"{\n    'active': leaving || (active && !entering),\n    'prev': (next || active) && direction=='prev',\n    'next': (next || active) && direction=='next',\n    'right': direction=='prev',\n    'left': direction=='next'\n  }\" class=\"item text-center\" ng-transclude></div>\n")}]),angular.module("template/datepicker/datepicker.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/datepicker.html",'<div ng-switch="datepickerMode" role="application" ng-keydown="keydown($event)">\n  <daypicker ng-switch-when="day" tabindex="0"></daypicker>\n  <monthpicker ng-switch-when="month" tabindex="0"></monthpicker>\n  <yearpicker ng-switch-when="year" tabindex="0"></yearpicker>\n</div>')}]),angular.module("template/datepicker/day.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/day.html",'<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="{{5 + showWeeks}}"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n    <tr>\n      <th ng-show="showWeeks" class="text-center"></th>\n      <th ng-repeat="label in labels track by $index" class="text-center"><small aria-label="{{label.full}}">{{label.abbr}}</small></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-show="showWeeks" class="text-center h6"><em>{{ weekNumbers[$index] }}</em></td>\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default btn-sm" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-muted\': dt.secondary, \'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("template/datepicker/month.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/month.html",'<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("template/datepicker/popup.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/popup.html",'<ul class="dropdown-menu" ng-style="{display: (isOpen && \'block\') || \'none\', top: position.top+\'px\', left: position.left+\'px\'}" ng-keydown="keydown($event)">\n	<li ng-transclude></li>\n	<li ng-if="showButtonBar" style="padding:10px 9px 2px">\n		<span class="btn-group">\n			<button type="button" class="btn btn-sm btn-info" ng-click="select(\'today\')">{{ getText(\'current\') }}</button>\n			<button type="button" class="btn btn-sm btn-danger" ng-click="select(null)">{{ getText(\'clear\') }}</button>\n		</span>\n		<button type="button" class="btn btn-sm btn-success pull-right" ng-click="close()">{{ getText(\'close\') }}</button>\n	</li>\n</ul>\n')}]),angular.module("template/datepicker/year.html",[]).run(["$templateCache",function(e){e.put("template/datepicker/year.html",'<table role="grid" aria-labelledby="{{uniqueId}}-title" aria-activedescendant="{{activeDateId}}">\n  <thead>\n    <tr>\n      <th><button type="button" class="btn btn-default btn-sm pull-left" ng-click="move(-1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-left"></i></button></th>\n      <th colspan="3"><button id="{{uniqueId}}-title" role="heading" aria-live="assertive" aria-atomic="true" type="button" class="btn btn-default btn-sm" ng-click="toggleMode()" tabindex="-1" style="width:100%;"><strong>{{title}}</strong></button></th>\n      <th><button type="button" class="btn btn-default btn-sm pull-right" ng-click="move(1)" tabindex="-1"><i class="glyphicon glyphicon-chevron-right"></i></button></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr ng-repeat="row in rows track by $index">\n      <td ng-repeat="dt in row track by dt.date" class="text-center" role="gridcell" id="{{dt.uid}}" aria-disabled="{{!!dt.disabled}}">\n        <button type="button" style="width:100%;" class="btn btn-default" ng-class="{\'btn-info\': dt.selected, active: isActive(dt)}" ng-click="select(dt.date)" ng-disabled="dt.disabled" tabindex="-1"><span ng-class="{\'text-info\': dt.current}">{{dt.label}}</span></button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n')}]),angular.module("template/modal/backdrop.html",[]).run(["$templateCache",function(e){e.put("template/modal/backdrop.html",'<div class="modal-backdrop fade {{ backdropClass }}"\n     ng-class="{in: animate}"\n     ng-style="{\'z-index\': 1040 + (index && 1 || 0) + index*10}"\n></div>\n')}]),angular.module("template/modal/window.html",[]).run(["$templateCache",function(e){e.put("template/modal/window.html",'<div tabindex="-1" role="dialog" class="modal fade" ng-class="{in: animate}" ng-style="{\'z-index\': 1050 + index*10, display: \'block\'}" ng-click="close($event)">\n    <div class="modal-dialog" ng-class="{\'modal-sm\': size == \'sm\', \'modal-lg\': size == \'lg\'}"><div class="modal-content" modal-transclude></div></div>\n</div>')}]),angular.module("template/pagination/pager.html",[]).run(["$templateCache",function(e){e.put("template/pagination/pager.html",'<ul class="pager">\n  <li ng-class="{disabled: noPrevious(), previous: align}"><a href ng-click="selectPage(page - 1)">{{getText(\'previous\')}}</a></li>\n  <li ng-class="{disabled: noNext(), next: align}"><a href ng-click="selectPage(page + 1)">{{getText(\'next\')}}</a></li>\n</ul>')}]),angular.module("template/pagination/pagination.html",[]).run(["$templateCache",function(e){e.put("template/pagination/pagination.html",'<ul class="pagination">\n  <li ng-if="boundaryLinks" ng-class="{disabled: noPrevious()}"><a href ng-click="selectPage(1)">{{getText(\'first\')}}</a></li>\n  <li ng-if="directionLinks" ng-class="{disabled: noPrevious()}"><a href ng-click="selectPage(page - 1)">{{getText(\'previous\')}}</a></li>\n  <li ng-repeat="page in pages track by $index" ng-class="{active: page.active}"><a href ng-click="selectPage(page.number)">{{page.text}}</a></li>\n  <li ng-if="directionLinks" ng-class="{disabled: noNext()}"><a href ng-click="selectPage(page + 1)">{{getText(\'next\')}}</a></li>\n  <li ng-if="boundaryLinks" ng-class="{disabled: noNext()}"><a href ng-click="selectPage(totalPages)">{{getText(\'last\')}}</a></li>\n</ul>')}]),angular.module("template/tooltip/tooltip-html-unsafe-popup.html",[]).run(["$templateCache",function(e){e.put("template/tooltip/tooltip-html-unsafe-popup.html",'<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" bind-html-unsafe="content"></div>\n</div>\n')}]),angular.module("template/tooltip/tooltip-popup.html",[]).run(["$templateCache",function(e){e.put("template/tooltip/tooltip-popup.html",'<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="tooltip-arrow"></div>\n  <div class="tooltip-inner" ng-bind="content"></div>\n</div>\n')}]),angular.module("template/popover/popover.html",[]).run(["$templateCache",function(e){e.put("template/popover/popover.html",'<div class="popover {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">\n  <div class="arrow"></div>\n\n  <div class="popover-inner">\n      <h3 class="popover-title" ng-bind="title" ng-show="title"></h3>\n      <div class="popover-content" ng-bind="content"></div>\n  </div>\n</div>\n')}]),angular.module("template/progressbar/bar.html",[]).run(["$templateCache",function(e){e.put("template/progressbar/bar.html",'<div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: percent + \'%\'}" aria-valuetext="{{percent | number:0}}%" ng-transclude></div>')}]),angular.module("template/progressbar/progress.html",[]).run(["$templateCache",function(e){e.put("template/progressbar/progress.html",'<div class="progress" ng-transclude></div>')}]),angular.module("template/progressbar/progressbar.html",[]).run(["$templateCache",function(e){e.put("template/progressbar/progressbar.html",'<div class="progress">\n  <div class="progress-bar" ng-class="type && \'progress-bar-\' + type" role="progressbar" aria-valuenow="{{value}}" aria-valuemin="0" aria-valuemax="{{max}}" ng-style="{width: percent + \'%\'}" aria-valuetext="{{percent | number:0}}%" ng-transclude></div>\n</div>')}]),angular.module("template/rating/rating.html",[]).run(["$templateCache",function(e){e.put("template/rating/rating.html",'<span ng-mouseleave="reset()" ng-keydown="onKeydown($event)" tabindex="0" role="slider" aria-valuemin="0" aria-valuemax="{{range.length}}" aria-valuenow="{{value}}">\n    <i ng-repeat="r in range track by $index" ng-mouseenter="enter($index + 1)" ng-click="rate($index + 1)" class="glyphicon" ng-class="$index < value && (r.stateOn || \'glyphicon-star\') || (r.stateOff || \'glyphicon-star-empty\')">\n        <span class="sr-only">({{ $index < value ? \'*\' : \' \' }})</span>\n    </i>\n</span>')}]),angular.module("template/tabs/tab.html",[]).run(["$templateCache",function(e){e.put("template/tabs/tab.html",'<li ng-class="{active: active, disabled: disabled}">\n  <a ng-click="select()" tab-heading-transclude>{{heading}}</a>\n</li>\n')}]),angular.module("template/tabs/tabset.html",[]).run(["$templateCache",function(e){e.put("template/tabs/tabset.html",'<div>\n  <ul class="nav nav-{{type || \'tabs\'}}" ng-class="{\'nav-stacked\': vertical, \'nav-justified\': justified}" ng-transclude></ul>\n  <div class="tab-content">\n    <div class="tab-pane" \n         ng-repeat="tab in tabs" \n         ng-class="{active: tab.active}"\n         tab-content-transclude="tab">\n    </div>\n  </div>\n</div>\n')}]),angular.module("template/timepicker/timepicker.html",[]).run(["$templateCache",function(e){e.put("template/timepicker/timepicker.html",'<table>\n	<tbody>\n		<tr class="text-center">\n			<td><a ng-click="incrementHours()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n			<td>&nbsp;</td>\n			<td><a ng-click="incrementMinutes()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-up"></span></a></td>\n			<td ng-show="showMeridian"></td>\n		</tr>\n		<tr>\n			<td style="width:50px;" class="form-group" ng-class="{\'has-error\': invalidHours}">\n				<input type="text" ng-model="hours" ng-change="updateHours()" class="form-control text-center" ng-mousewheel="incrementHours()" ng-readonly="readonlyInput" maxlength="2">\n			</td>\n			<td>:</td>\n			<td style="width:50px;" class="form-group" ng-class="{\'has-error\': invalidMinutes}">\n				<input type="text" ng-model="minutes" ng-change="updateMinutes()" class="form-control text-center" ng-readonly="readonlyInput" maxlength="2">\n			</td>\n			<td ng-show="showMeridian"><button type="button" class="btn btn-default text-center" ng-click="toggleMeridian()">{{meridian}}</button></td>\n		</tr>\n		<tr class="text-center">\n			<td><a ng-click="decrementHours()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n			<td>&nbsp;</td>\n			<td><a ng-click="decrementMinutes()" class="btn btn-link"><span class="glyphicon glyphicon-chevron-down"></span></a></td>\n			<td ng-show="showMeridian"></td>\n		</tr>\n	</tbody>\n</table>\n')}]),angular.module("template/typeahead/typeahead-match.html",[]).run(["$templateCache",function(e){e.put("template/typeahead/typeahead-match.html",'<a tabindex="-1" bind-html-unsafe="match.label | typeaheadHighlight:query"></a>')}]),angular.module("template/typeahead/typeahead-popup.html",[]).run(["$templateCache",function(e){e.put("template/typeahead/typeahead-popup.html",'<ul class="dropdown-menu" ng-show="isOpen()" ng-style="{top: position.top+\'px\', left: position.left+\'px\'}" style="display: block;" role="listbox" aria-hidden="{{!isOpen()}}">\n    <li ng-repeat="match in matches track by $index" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" ng-click="selectMatch($index)" role="option" id="{{match.id}}">\n        <div typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></div>\n    </li>\n</ul>\n')}]),!jQuery)throw new Error("Bootstrap Form Helpers requires jQuery");var BFHCountriesList={AF:"Afghanistan",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua and Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia and Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",VG:"British Virgin Islands",BN:"Brunei",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",CI:"Côte d'Ivoire",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CK:"Cook Islands",CR:"Costa Rica",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",CD:"Democratic Republic of the Congo",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",TP:"East Timor",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FO:"Faeroe Islands",FK:"Falkland Islands",FJ:"Fiji",FI:"Finland",MK:"Former Yugoslav Republic of Macedonia",FR:"France",FX:"France, Metropolitan",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard and Mc Donald Islands",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran",IQ:"Iraq",IE:"Ireland",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Laos",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macau",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",KP:"North Korea",MP:"Northern Marianas",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestine",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn Islands",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Reunion",RO:"Romania",RU:"Russia",RW:"Rwanda",ST:"São Tomé and Príncipe",SH:"Saint Helena",PM:"St. Pierre and Miquelon",KN:"Saint Kitts and Nevis",LC:"Saint Lucia",VC:"Saint Vincent and the Grenadines",WS:"Samoa",SM:"San Marino",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia and the South Sandwich Islands",KR:"South Korea",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard and Jan Mayen Islands",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syria",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",BS:"The Bahamas",GM:"The Gambia",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad and Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks and Caicos Islands",TV:"Tuvalu",VI:"US Virgin Islands",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Minor Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VA:"Vatican City",VE:"Venezuela",VN:"Vietnam",WF:"Wallis and Futuna Islands",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"},BFHCurrenciesList={AED:{label:"United Arab Emirates dirham",currencyflag:"",symbol:"د.إ"},AFN:{label:"Afghan afghani",currencyflag:"",symbol:"؋"},ALL:{label:"Albanian lek",currencyflag:"",symbol:"L"},AMD:{label:"Armenian dram",currencyflag:"",symbol:"դր"},AOA:{label:"Angolan kwanza",currencyflag:"",symbol:"Kz"},ARS:{label:"Argentine peso",currencyflag:"",symbol:"$"},AUD:{label:"Australian dollar",currencyflag:"AUD",symbol:"$"},AWG:{label:"Aruban florin",currencyflag:"",symbol:"ƒ"},AZN:{label:"Azerbaijani manat",currencyflag:"",symbol:""},BAM:{label:"Bosnia and Herzegovina convertible mark",currencyflag:"",symbol:"KM"},BBD:{label:"Barbadian dollar",currencyflag:"",symbol:"$"},BDT:{label:"Bangladeshi taka",currencyflag:"",symbol:"৳"},BGN:{label:"Bulgarian lev",currencyflag:"",symbol:"лв"},BHD:{label:"Bahraini dinar",currencyflag:"",symbol:".د.ب"},BIF:{label:"Burundian franc",currencyflag:"",symbol:"Fr"},BMD:{label:"Bermudian dollar",currencyflag:"",symbol:"$"},BND:{label:"Brunei dollar",currencyflag:"",symbol:"$"},BOB:{label:"Bolivian boliviano",currencyflag:"",symbol:"Bs"},BRL:{label:"Brazilian real",currencyflag:"",symbol:"R$"},BSD:{label:"Bahamian dollar",currencyflag:"",symbol:"$"},BTN:{label:"Bhutanese ngultrum",currencyflag:"",symbol:"Nu"},BWP:{label:"Botswana pula",currencyflag:"",symbol:"P"},BYR:{label:"Belarusian ruble",currencyflag:"",symbol:"Br"},BZD:{label:"Belize dollar",currencyflag:"",symbol:"$"},CAD:{label:"Canadian dollar",currencyflag:"",symbol:"$"},CDF:{label:"Congolese franc",currencyflag:"",symbol:"Fr"},CHF:{label:"Swiss franc",currencyflag:"CHF",symbol:"Fr"},CLP:{label:"Chilean peso",currencyflag:"",symbol:"$"},CNY:{label:"Chinese yuan",currencyflag:"",symbol:"¥"},COP:{label:"Colombian peso",currencyflag:"",symbol:"$"},CRC:{label:"Costa Rican colón",currencyflag:"",symbol:"₡"},CUP:{label:"Cuban convertible peso",currencyflag:"",symbol:"$"},CVE:{label:"Cape Verdean escudo",currencyflag:"",symbol:"$"},CZK:{label:"Czech koruna",currencyflag:"",symbol:"Kč"},DJF:{label:"Djiboutian franc",currencyflag:"",symbol:"Fr"},DKK:{label:"Danish krone",currencyflag:"DKK",symbol:"kr"},DOP:{label:"Dominican peso",currencyflag:"",symbol:"$"},DZD:{label:"Algerian dinar",currencyflag:"",symbol:"د.ج"},EGP:{label:"Egyptian pound",currencyflag:"",symbol:"ج.م"},ERN:{label:"Eritrean nakfa",currencyflag:"",symbol:"Nfk"},ETB:{label:"Ethiopian birr",currencyflag:"",symbol:"Br"},EUR:{label:"Euro",currencyflag:"EUR",symbol:"€"},FJD:{label:"Fijian dollar",currencyflag:"",symbol:"$"},FKP:{label:"Falkland Islands pound",currencyflag:"",symbol:"£"},GBP:{label:"British pound",currencyflag:"",symbol:"£"},GEL:{label:"Georgian lari",currencyflag:"",symbol:"ლ"},GHS:{label:"Ghana cedi",currencyflag:"",symbol:"₵"},GMD:{label:"Gambian dalasi",currencyflag:"",symbol:"D"},GNF:{label:"Guinean franc",currencyflag:"",symbol:"Fr"},GTQ:{label:"Guatemalan quetzal",currencyflag:"",symbol:"Q"},GYD:{label:"Guyanese dollar",currencyflag:"",symbol:"$"},HKD:{label:"Hong Kong dollar",currencyflag:"",symbol:"$"},HNL:{label:"Honduran lempira",currencyflag:"",symbol:"L"},HRK:{label:"Croatian kuna",currencyflag:"",symbol:"kn"},HTG:{label:"Haitian gourde",currencyflag:"",symbol:"G"},HUF:{label:"Hungarian forint",currencyflag:"",symbol:"Ft"},IDR:{label:"Indonesian rupiah",currencyflag:"",symbol:"Rp"},ILS:{label:"Israeli new shekel",currencyflag:"",symbol:"₪"},IMP:{label:"Manx pound",currencyflag:"",symbol:"£"},INR:{label:"Indian rupee",currencyflag:"",symbol:""},IQD:{label:"Iraqi dinar",currencyflag:"",symbol:"ع.د"},IRR:{label:"Iranian rial",currencyflag:"",symbol:"﷼"},ISK:{label:"Icelandic króna",currencyflag:"",symbol:"kr"},JEP:{label:"Jersey pound",currencyflag:"",symbol:"£"},JMD:{label:"Jamaican dollar",currencyflag:"",symbol:"$"},JOD:{label:"Jordanian dinar",currencyflag:"",symbol:"د.ا"},JPY:{label:"Japanese yen",currencyflag:"",symbol:"¥"},KES:{label:"Kenyan shilling",currencyflag:"",symbol:"Sh"},KGS:{label:"Kyrgyzstani som",currencyflag:"",symbol:"лв"},KHR:{label:"Cambodian riel",currencyflag:"",symbol:"៛"},KMF:{label:"Comorian franc",currencyflag:"",symbol:"Fr"},KPW:{label:"North Korean won",currencyflag:"",symbol:"₩"},KRW:{label:"South Korean won",currencyflag:"",symbol:"₩"},KWD:{label:"Kuwaiti dinar",currencyflag:"",symbol:"د.ك"},KYD:{label:"Cayman Islands dollar",currencyflag:"",symbol:"$"},KZT:{label:"Kazakhstani tenge",currencyflag:"",symbol:"₸"},LAK:{label:"Lao kip",currencyflag:"",symbol:"₭"},LBP:{label:"Lebanese pound",currencyflag:"",symbol:"ل.ل"},LKR:{label:"Sri Lankan rupee",currencyflag:"",symbol:"Rs"},LRD:{label:"Liberian dollar",currencyflag:"",symbol:"$"},LSL:{label:"Lesotho loti",currencyflag:"",symbol:"L"},LTL:{label:"Lithuanian litas",currencyflag:"",symbol:"Lt"},LVL:{label:"Latvian lats",currencyflag:"",symbol:"Ls"},LYD:{label:"Libyan dinar",currencyflag:"",symbol:"ل.د"},MAD:{label:"Moroccan dirham",currencyflag:"",symbol:"د.م."},MDL:{label:"Moldovan leu",currencyflag:"",symbol:"L"},MGA:{label:"Malagasy ariary",currencyflag:"",symbol:"Ar"},MKD:{label:"Macedonian denar",currencyflag:"",symbol:"ден"},MMK:{label:"Burmese kyat",currencyflag:"",symbol:"Ks"},MNT:{label:"Mongolian tögrög",currencyflag:"",symbol:"₮"},MOP:{label:"Macanese pataca",currencyflag:"",symbol:"P"},MRO:{label:"Mauritanian ouguiya",currencyflag:"",symbol:"UM"},MUR:{label:"Mauritian rupee",currencyflag:"",symbol:"Rs"},MVR:{label:"Maldivian rufiyaa",currencyflag:"",symbol:".ރ"},MWK:{label:"Malawian kwacha",currencyflag:"",symbol:"MK"},MXN:{label:"Mexican peso",currencyflag:"",symbol:"$"},MYR:{label:"Malaysian ringgit",currencyflag:"",symbol:"MR"},MZN:{label:"Mozambican metical",currencyflag:"",symbol:"MT"},NAD:{label:"Namibian dollar",currencyflag:"",symbol:"$"},NGN:{label:"Nigerian naira",currencyflag:"",symbol:"₦"},NIO:{label:"Nicaraguan córdoba",currencyflag:"",symbol:"C$"},NOK:{label:"Norwegian krone",currencyflag:"",symbol:"kr"},NPR:{label:"Nepalese rupee",currencyflag:"",symbol:"Rs"},NZD:{label:"New Zealand dollar",currencyflag:"",symbol:"$"},OMR:{label:"Omani rial",currencyflag:"",symbol:"ر.ع."},PAB:{label:"Panamanian balboa",currencyflag:"",symbol:"B/."},PEN:{label:"Peruvian nuevo sol",currencyflag:"",symbol:"S/."},PGK:{label:"Papua New Guinean kina",currencyflag:"",symbol:"K"},PHP:{label:"Philippine peso",currencyflag:"",symbol:"₱"},PKR:{label:"Pakistani rupee",currencyflag:"",symbol:"Rs"},PLN:{label:"Polish złoty",currencyflag:"",symbol:"zł"},PRB:{label:"Transnistrian ruble",currencyflag:"",symbol:"р."},PYG:{label:"Paraguayan guaraní",currencyflag:"",symbol:"₲"},QAR:{label:"Qatari riyal",currencyflag:"",symbol:"ر.ق"},RON:{label:"Romanian leu",currencyflag:"",symbol:"L"},RSD:{label:"Serbian dinar",currencyflag:"",symbol:"дин"},RUB:{label:"Russian ruble",currencyflag:"",symbol:"руб."},RWF:{label:"Rwandan franc",currencyflag:"",symbol:"Fr"},SAR:{label:"Saudi riyal",currencyflag:"",symbol:"ر.س"},SBD:{label:"Solomon Islands dollar",currencyflag:"",symbol:"$"},SCR:{label:"Seychellois rupee",currencyflag:"",symbol:"Rs"},SDG:{label:"Singapore dollar",currencyflag:"",symbol:"$"},SEK:{label:"Swedish krona",currencyflag:"",symbol:"kr"},SGD:{label:"Singapore dollar",currencyflag:"",symbol:"$"},SHP:{label:"Saint Helena pound",currencyflag:"",symbol:"£"},SLL:{label:"Sierra Leonean leone",currencyflag:"",symbol:"Le"},SOS:{label:"Somali shilling",currencyflag:"",symbol:"Sh"},SRD:{label:"Surinamese dollar",currencyflag:"",symbol:"$"},SSP:{label:"South Sudanese pound",currencyflag:"",symbol:"£"},STD:{label:"São Tomé and Príncipe dobra",currencyflag:"",symbol:"Db"},SVC:{label:"Salvadoran colón",currencyflag:"",symbol:"₡"},SYP:{label:"Syrian pound",currencyflag:"",symbol:"£"},SZL:{label:"Swazi lilangeni",currencyflag:"",symbol:"L"},THB:{label:"Thai baht",currencyflag:"",symbol:"฿"},TJS:{label:"Tajikistani somoni",currencyflag:"",symbol:"SM"},TMT:{label:"Turkmenistan manat",currencyflag:"",symbol:"m"},TND:{label:"Tunisian dinar",currencyflag:"",symbol:"د.ت"},TOP:{label:"Tongan paʻanga",currencyflag:"",symbol:"T$"},TRY:{label:"Turkish lira",currencyflag:"",symbol:"&#8378;"},TTD:{label:"Trinidad and Tobago dollar",currencyflag:"",symbol:"$"},TWD:{label:"New Taiwan dollar",currencyflag:"",symbol:"$"},TZS:{label:"Tanzanian shilling",currencyflag:"",symbol:"Sh"},UAH:{label:"Ukrainian hryvnia",currencyflag:"",symbol:"₴"},UGX:{label:"Ugandan shilling",currencyflag:"",symbol:"Sh"},USD:{label:"United States dollar",currencyflag:"",symbol:"$"},UYU:{label:"Uruguayan peso",currencyflag:"",symbol:"$"},UZS:{label:"Uzbekistani som",currencyflag:"",symbol:"лв"},VEF:{label:"Venezuelan bolívar",currencyflag:"",symbol:"Bs F"},VND:{label:"Vietnamese đồng",currencyflag:"",symbol:"₫"},VUV:{label:"Vanuatu vatu",currencyflag:"",symbol:"Vt"},WST:{label:"Samoan tālā",currencyflag:"",symbol:"T"},XAF:{label:"Central African CFA franc",currencyflag:"XAF",symbol:"Fr"},XCD:{label:"East Caribbean dollar",currencyflag:"XCD",symbol:"$"},XOF:{label:"West African CFA franc",currencyflag:"XOF",symbol:"Fr"},XPF:{label:"CFP franc",currencyflag:"XPF",symbol:"Fr"},YER:{label:"Yemeni rial",currencyflag:"",symbol:"﷼"},ZAR:{label:"South African rand",currencyflag:"ZAR",symbol:"R"},ZMW:{label:"Zambian kwacha",currencyflag:"",symbol:"ZK"},ZWL:{label:"Zimbabwean dollar",currencyflag:"",symbol:"$"}},BFHMonthsList=["January","February","March","April","May","June","July","August","September","October","November","December"],BFHDaysList=["SUN","MON","TUE","WED","THU","FRI","SAT"],BFHDayOfWeekStart=0,BFHFontsList={"Andale Mono":'"Andale Mono", AndaleMono, monospace',Arial:'Arial, "Helvetica Neue", Helvetica, sans-serif',"Arial Black":'"Arial Black", "Arial Bold", Gadget, sans-serif',"Arial Narrow":'"Arial Narrow", Arial, sans-serif',"Arial Rounded MT Bold":'"Arial Rounded MT Bold", "Helvetica Rounded", Arial, sans-serif',"Avant Garde":'"Avant Garde", Avantgarde, "Century Gothic", CenturyGothic, "AppleGothic", sans-serif',Baskerville:'Baskerville, "Baskerville Old Face", "Hoefler Text", Garamond, "Times New Roman", serif',"Big Caslon":'"Big Caslon", "Book Antiqua", "Palatino Linotype", Georgia, serif',"Bodoni MT":'"Bodoni MT", Didot, "Didot LT STD", "Hoefler Text", Garamond, "Times New Roman", serif',"Book Antiqua":'"Book Antiqua", Palatino, "Palatino Linotype", "Palatino LT STD", Georgia, serif',"Brush Script MT":'"Brush Script MT", cursive',Calibri:'Calibri, Candara, Segoe, "Segoe UI", Optima, Arial, sans-serif',"Calisto MT":'"Calisto MT", "Bookman Old Style", Bookman, "Goudy Old Style", Garamond, "Hoefler Text", "Bitstream Charter", Georgia, serif',Cambrio:"Cambria, Georgia, serif",Candara:'Candara, Calibri, Segoe, "Segoe UI", Optima, Arial, sans-serif',"Century Gothic":'"Century Gothic", CenturyGothic, AppleGothic, sans-serif',Consolas:"Consolas, monaco, monospace",Copperplate:'Copperplate, "Copperplate Gothic Light", fantasy',"Courier New":'"Courier New", Courier, "Lucida Sans Typewriter", "Lucida Typewriter", monospace',Didot:'Didot, "Didot LT STD", "Hoefler Text", Garamond, "Times New Roman", serif',"Franklin Gothic Medium":'"Franklin Gothic Medium", "Franklin Gothic", "ITC Franklin Gothic", Arial, sans-serif',Futura:'Futura, "Trebuchet MS", Arial, sans-serif',Garamond:'Garamond, Baskerville, "Baskerville Old Face", "Hoefler Text", "Times New Roman", serif',Geneva:"Geneva, Tahoma, Verdana, sans-serif",Georgia:'Georgia, Times, "Times New Roman", serif',"Gill Sans":'"Gill Sans", "Gill Sans MT", Calibri, sans-serif',"Goudy Old Style":'"Goudy Old Style", Garamond, "Big Caslon", "Times New Roman", serif',Helvetica:'"Helvetica Neue", Helvetica, Arial, sans-serif',"Hoefler Text":'"Hoefler Text", "Baskerville old face", Garamond, "Times New Roman", serif',Impact:'Impact, Haettenschweiler, "Franklin Gothic Bold", Charcoal, "Helvetica Inserat", "Bitstream Vera Sans Bold", "Arial Black", sans serif',"Lucida Bright":'"Lucida Bright", Georgia, serif',"Lucida Console":'"Lucida Console", "Lucida Sans Typewriter", Monaco, "Bitstream Vera Sans Mono", monospace',"Lucida Sans Typewriter":'"Lucida Sans Typewriter", "Lucida Console", Monaco, "Bitstream Vera Sans Mono", monospace',"Lucida Grande":'"Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", Geneva, Verdana, sans-serif',Monaco:'Monaco, Consolas, "Lucida Console", monospace',Optima:'Optima, Segoe, "Segoe UI", Candara, Calibri, Arial, sans-serif',Palatino:'Palatino, "Palatino Linotype", "Palatino LT STD", "Book Antiqua", Georgia, serif',Papyrus:"Papyrus, fantasy",Perpetua:'Perpetua, Baskerville, "Big Caslon", "Palatino Linotype", Palatino, "URW Palladio L", "Nimbus Roman No9 L", serif',Rockwell:'Rockwell, "Courier Bold", Courier, Georgia, Times, "Times New Roman", serif',"Rockwell Extra Bold":'"Rockwell Extra Bold", "Rockwell Bold", monospace',"Segoe UI":'"Segoe UI", Frutiger, "Frutiger Linotype',Tahoma:"Tahoma, Verdana, Segoe, sans-serif","Times New Roman":'TimesNewRoman, "Times New Roman", Times, Baskerville, Georgia, serif',"Trebuchet MS":'"Trebuchet MS", "Lucida Grande", "Lucida Sans Unicode", "Lucida Sans", Tahoma, sans-serif',Verdana:"Verdana, Geneva, sans-serif"},BFHFontSizesList={8:"8",9:"9",10:"10",11:"11",12:"12",14:"14",18:"18",24:"24",30:"30",36:"36",48:"48",60:"60",72:"72",96:"96"},BFHGoogleFontsList={kind:"webfonts#webfontList",items:[{kind:"webfonts#webfont",family:"ABeeZee",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Abel",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Abril Fatface",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Aclonica",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Acme",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Actor",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Adamina",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Advent Pro",variants:["100","200","300","regular","500","600","700"],subsets:["latin-ext","latin","greek"]},{kind:"webfonts#webfont",family:"Aguafina Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Akronim",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Aladin",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Aldrich",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Alegreya",variants:["regular","italic","700","700italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Alegreya SC",variants:["regular","italic","700","700italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Alex Brush",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Alfa Slab One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Alice",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Alike",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Alike Angular",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Allan",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Allerta",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Allerta Stencil",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Allura",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Almendra",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Almendra Display",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Almendra SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Amarante",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Amaranth",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Amatic SC",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Amethysta",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Anaheim",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Andada",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Andika",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Angkor",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Annie Use Your Telescope",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Anonymous Pro",variants:["regular","italic","700","700italic"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Antic",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Antic Didone",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Antic Slab",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Anton",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Arapey",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Arbutus",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Arbutus Slab",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Architects Daughter",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Archivo Black",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Archivo Narrow",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Arimo",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Arizonia",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Armata",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Artifika",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Arvo",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Asap",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Asset",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Astloch",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Asul",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Atomic Age",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Aubrey",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Audiowide",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Autour One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Average",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Average Sans",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Averia Gruesa Libre",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Averia Libre",variants:["300","300italic","regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Averia Sans Libre",variants:["300","300italic","regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Averia Serif Libre",variants:["300","300italic","regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bad Script",variants:["regular"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"Balthazar",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bangers",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Basic",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Battambang",variants:["regular","700"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Baumans",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bayon",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Belgrano",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Belleza",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"BenchNine",variants:["300","regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bentham",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Berkshire Swash",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bevan",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bigelow Rules",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bigshot One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bilbo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bilbo Swash Caps",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bitter",variants:["regular","italic","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Black Ops One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bokor",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Bonbon",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Boogaloo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bowlby One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bowlby One SC",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Brawler",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Bree Serif",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bubblegum Sans",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Bubbler One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Buda",variants:["300"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Buenard",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Butcherman",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Butterfly Kids",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cabin",variants:["regular","italic","500","500italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cabin Condensed",variants:["regular","500","600","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cabin Sketch",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Caesar Dressing",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cagliostro",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Calligraffitti",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cambo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Candal",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cantarell",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cantata One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cantora One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Capriola",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cardo",variants:["regular","italic","700"],subsets:["greek-ext","latin-ext","latin","greek"]},{kind:"webfonts#webfont",family:"Carme",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Carrois Gothic",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Carrois Gothic SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Carter One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Caudex",variants:["regular","italic","700","700italic"],subsets:["greek-ext","latin-ext","latin","greek"]},{kind:"webfonts#webfont",family:"Cedarville Cursive",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Ceviche One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Changa One",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Chango",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chau Philomene One",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chela One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chelsea Market",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chenla",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Cherry Cream Soda",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cherry Swash",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chewy",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Chicle",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Chivo",variants:["regular","italic","900","900italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cinzel",variants:["regular","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cinzel Decorative",variants:["regular","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Clicker Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Coda",variants:["regular","800"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Coda Caption",variants:["800"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Codystar",variants:["300","regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Combo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Comfortaa",variants:["300","regular","700"],subsets:["cyrillic","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Coming Soon",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Concert One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Condiment",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Content",variants:["regular","700"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Contrail One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Convergence",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cookie",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Copse",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Corben",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Courgette",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cousine",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Coustard",variants:["regular","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Covered By Your Grace",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Crafty Girls",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Creepster",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Crete Round",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Crimson Text",variants:["regular","italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Croissant One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Crushed",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Cuprum",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cutive",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Cutive Mono",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Damion",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Dancing Script",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Dangrek",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Dawning of a New Day",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Days One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Delius",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Delius Swash Caps",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Delius Unicase",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Della Respira",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Devonshire",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Didact Gothic",variants:["regular"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Diplomata",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Diplomata SC",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Doppio One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Dorsa",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Dosis",variants:["200","300","regular","500","600","700","800"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Dr Sugiyama",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Droid Sans",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Droid Sans Mono",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Droid Serif",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Duru Sans",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Dynalight",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"EB Garamond",variants:["regular"],subsets:["cyrillic","latin-ext","latin","vietnamese","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Eagle Lake",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Eater",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Economica",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Electrolize",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Emblema One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Emilys Candy",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Engagement",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Englebert",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Enriqueta",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Erica One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Esteban",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Euphoria Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ewert",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Exo",variants:["100","100italic","200","200italic","300","300italic","regular","italic","500","500italic","600","600italic","700","700italic","800","800italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Expletus Sans",variants:["regular","italic","500","500italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fanwood Text",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fascinate",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fascinate Inline",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Faster One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fasthand",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Federant",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Federo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Felipa",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Fenix",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Finger Paint",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fjord One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Flamenco",variants:["300","regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Flavors",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fondamento",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Fontdiner Swanky",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Forum",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Francois One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Freckle Face",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Fredericka the Great",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fredoka One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Freehand",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Fresca",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Frijole",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Fugaz One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"GFS Didot",variants:["regular"],subsets:["greek"]},{kind:"webfonts#webfont",family:"GFS Neohellenic",variants:["regular","italic","700","700italic"],subsets:["greek"]},{kind:"webfonts#webfont",family:"Gafata",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Galdeano",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Galindo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gentium Basic",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gentium Book Basic",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Geo",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Geostar",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Geostar Fill",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Germania One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Gilda Display",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Give You Glory",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Glass Antiqua",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Glegoo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gloria Hallelujah",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Goblin One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Gochi Hand",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Gorditas",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Goudy Bookletter 1911",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Graduate",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Gravitas One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Great Vibes",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Griffy",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gruppo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Gudea",variants:["regular","italic","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Habibi",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Hammersmith One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Hanalei",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Hanalei Fill",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Handlee",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Hanuman",variants:["regular","700"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Happy Monkey",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Headland One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Henny Penny",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Herr Von Muellerhoff",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Holtwood One SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Homemade Apple",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Homenaje",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"IM Fell DW Pica",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell DW Pica SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell Double Pica",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell Double Pica SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell English",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell English SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell French Canon",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell French Canon SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell Great Primer",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"IM Fell Great Primer SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Iceberg",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Iceland",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Imprima",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Inconsolata",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Inder",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Indie Flower",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Inika",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Irish Grover",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Istok Web",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Italiana",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Italianno",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Jacques Francois",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Jacques Francois Shadow",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Jim Nightshade",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Jockey One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Jolly Lodger",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Josefin Sans",variants:["100","100italic","300","300italic","regular","italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Josefin Slab",variants:["100","100italic","300","300italic","regular","italic","600","600italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Joti One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Judson",variants:["regular","italic","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Julee",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Julius Sans One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Junge",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Jura",variants:["300","regular","500","600"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Just Another Hand",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Just Me Again Down Here",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Kameron",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Karla",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Kaushan Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Keania One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Kelly Slab",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Kenia",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Khmer",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Kite One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Knewave",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Kotta One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Koulen",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Kranky",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Kreon",variants:["300","regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Kristi",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Krona One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"La Belle Aurore",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lancelot",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lato",variants:["100","100italic","300","300italic","regular","italic","700","700italic","900","900italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"League Script",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Leckerli One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Ledger",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Lekton",variants:["regular","italic","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Lemon",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Life Savers",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Lilita One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Limelight",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Linden Hill",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lobster",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Lobster Two",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Londrina Outline",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Londrina Shadow",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Londrina Sketch",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Londrina Solid",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lora",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Love Ya Like A Sister",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Loved by the King",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lovers Quarrel",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Luckiest Guy",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lusitana",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Lustria",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Macondo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Macondo Swash Caps",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Magra",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Maiden Orange",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mako",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Marcellus",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Marcellus SC",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Marck Script",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Margarine",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Marko One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Marmelad",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Marvel",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mate",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mate SC",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Maven Pro",variants:["regular","500","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"McLaren",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Meddon",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"MedievalSharp",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Medula One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Megrim",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Meie Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Merienda",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Merienda One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Merriweather",variants:["300","regular","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Metal",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Metal Mania",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Metamorphous",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Metrophobic",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Michroma",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Miltonian",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Miltonian Tattoo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Miniver",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Miss Fajardose",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Modern Antiqua",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Molengo",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Molle",variants:["italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Monofett",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Monoton",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Monsieur La Doulaise",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Montaga",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Montez",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Montserrat",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Montserrat Alternates",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Montserrat Subrayada",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Moul",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Moulpali",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Mountains of Christmas",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mouse Memoirs",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mr Bedfort",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mr Dafoe",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mr De Haviland",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mrs Saint Delafield",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Mrs Sheppards",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Muli",variants:["300","300italic","regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Mystery Quest",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Neucha",variants:["regular"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"Neuton",variants:["200","300","regular","italic","700","800"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"News Cycle",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Niconne",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Nixie One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nobile",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nokora",variants:["regular","700"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Norican",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Nosifer",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Nothing You Could Do",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Noticia Text",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin","vietnamese"]},{kind:"webfonts#webfont",family:"Nova Cut",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Flat",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Mono",variants:["regular"],subsets:["latin","greek"]},{kind:"webfonts#webfont",family:"Nova Oval",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Round",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Script",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Slim",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nova Square",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Numans",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Nunito",variants:["300","regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Odor Mean Chey",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Offside",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Old Standard TT",variants:["regular","italic","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Oldenburg",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Oleo Script",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Oleo Script Swash Caps",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Open Sans",variants:["300","300italic","regular","italic","600","600italic","700","700italic","800","800italic"],subsets:["cyrillic","greek-ext","latin-ext","latin","vietnamese","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Open Sans Condensed",variants:["300","300italic","700"],subsets:["cyrillic","greek-ext","latin-ext","latin","vietnamese","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Oranienbaum",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Orbitron",variants:["regular","500","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Oregano",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Orienta",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Original Surfer",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Oswald",variants:["300","regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Over the Rainbow",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Overlock",variants:["regular","italic","700","700italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Overlock SC",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ovo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Oxygen",variants:["300","regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Oxygen Mono",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"PT Mono",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"PT Sans",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"PT Sans Caption",variants:["regular","700"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"PT Sans Narrow",variants:["regular","700"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"PT Serif",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"PT Serif Caption",variants:["regular","italic"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"Pacifico",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Paprika",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Parisienne",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Passero One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Passion One",variants:["regular","700","900"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Patrick Hand",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Patua One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Paytone One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Peralta",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Permanent Marker",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Petit Formal Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Petrona",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Philosopher",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin"]},{kind:"webfonts#webfont",family:"Piedra",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Pinyon Script",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Pirata One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Plaster",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Play",variants:["regular","700"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Playball",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Playfair Display",variants:["regular","italic","700","700italic","900","900italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Playfair Display SC",variants:["regular","italic","700","700italic","900","900italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Podkova",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Poiret One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Poller One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Poly",variants:["regular","italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Pompiere",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Pontano Sans",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Port Lligat Sans",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Port Lligat Slab",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Prata",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Preahvihear",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Press Start 2P",variants:["regular"],subsets:["cyrillic","latin-ext","latin","greek"]},{kind:"webfonts#webfont",family:"Princess Sofia",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Prociono",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Prosto One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Puritan",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Purple Purse",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Quando",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Quantico",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Quattrocento",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Quattrocento Sans",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Questrial",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Quicksand",variants:["300","regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Quintessential",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Qwigley",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Racing Sans One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Radley",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Raleway",variants:["100","200","300","regular","500","600","700","800","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Raleway Dots",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rambla",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rammetto One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ranchers",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rancho",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Rationale",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Redressed",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Reenie Beanie",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Revalia",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ribeye",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ribeye Marrow",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Righteous",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Risque",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rochester",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Rock Salt",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Rokkitt",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Romanesco",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ropa Sans",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rosario",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Rosarivo",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rouge Script",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Ruda",variants:["regular","700","900"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rufina",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ruge Boogie",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ruluko",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rum Raisin",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ruslan Display",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Russo One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Ruthie",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Rye",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sacramento",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sail",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Salsa",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sanchez",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sancreek",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sansita One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sarina",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Satisfy",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Scada",variants:["regular","italic","700","700italic"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Schoolbell",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Seaweed Script",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sevillana",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Seymour One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Shadows Into Light",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Shadows Into Light Two",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Shanti",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Share",variants:["regular","italic","700","700italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Share Tech",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Share Tech Mono",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Shojumaru",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Short Stack",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Siemreap",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Sigmar One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Signika",variants:["300","regular","600","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Signika Negative",variants:["300","regular","600","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Simonetta",variants:["regular","italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sirin Stencil",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Six Caps",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Skranji",variants:["regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Slackey",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Smokum",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Smythe",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sniglet",variants:["800"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Snippet",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Snowburst One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sofadi One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sofia",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sonsie One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Sorts Mill Goudy",variants:["regular","italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Source Code Pro",variants:["200","300","regular","600","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Source Sans Pro",variants:["200","200italic","300","300italic","regular","italic","600","600italic","700","700italic","900","900italic"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Special Elite",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Spicy Rice",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Spinnaker",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Spirax",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Squada One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Stalemate",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Stalinist One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Stardos Stencil",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Stint Ultra Condensed",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Stint Ultra Expanded",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Stoke",variants:["300","regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Strait",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sue Ellen Francisco",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Sunshiney",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Supermercado One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Suwannaphum",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Swanky and Moo Moo",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Syncopate",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Tangerine",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Taprom",variants:["regular"],subsets:["khmer"]},{kind:"webfonts#webfont",family:"Telex",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Tenor Sans",variants:["regular"],subsets:["cyrillic","latin-ext","latin","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Text Me One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"The Girl Next Door",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Tienne",variants:["regular","700","900"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Tinos",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Titan One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Titillium Web",variants:["200","200italic","300","300italic","regular","italic","600","600italic","700","700italic","900"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Trade Winds",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Trocchi",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Trochut",variants:["regular","italic","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Trykker",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Tulpen One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Ubuntu",variants:["300","300italic","regular","italic","500","500italic","700","700italic"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Ubuntu Condensed",variants:["regular"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Ubuntu Mono",variants:["regular","italic","700","700italic"],subsets:["cyrillic","greek-ext","latin-ext","latin","greek","cyrillic-ext"]},{kind:"webfonts#webfont",family:"Ultra",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Uncial Antiqua",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Underdog",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Unica One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"UnifrakturCook",variants:["700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"UnifrakturMaguntia",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Unkempt",variants:["regular","700"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Unlock",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Unna",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"VT323",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vampiro One",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Varela",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Varela Round",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vast Shadow",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vibur",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vidaloka",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Viga",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Voces",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Volkhov",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Vollkorn",variants:["regular","italic","700","700italic"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Voltaire",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Waiting for the Sunrise",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Wallpoet",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Walter Turncoat",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Warnes",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Wellfleet",variants:["regular"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Wire One",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Yanone Kaffeesatz",variants:["200","300","regular","700"],subsets:["latin-ext","latin"]},{kind:"webfonts#webfont",family:"Yellowtail",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Yeseva One",variants:["regular"],subsets:["cyrillic","latin-ext","latin"]},{kind:"webfonts#webfont",family:"Yesteryear",variants:["regular"],subsets:["latin"]},{kind:"webfonts#webfont",family:"Zeyada",variants:["regular"],subsets:["latin"]}]},BFHLanguagesList={om:"Afaan Oromoo",aa:"Afaraf",af:"Afrikaans",ak:"Akan",an:"aragonés",ig:"Asụsụ Igbo",gn:"Avañe'ẽ",ae:"avesta",ay:"aymar aru",az:"azərbaycan dili",id:"Bahasa Indonesia",ms:"bahasa Melayu",bm:"bamanankan",jv:"basa Jawa",su:"Basa Sunda",bi:"Bislama",bs:"bosanski jezik",br:"brezhoneg",ca:"català",ch:"Chamoru",ny:"chiCheŵa",sn:"chiShona",co:"corsu",cy:"Cymraeg",da:"dansk",se:"Davvisámegiella",de:"Deutsch",nv:"Diné bizaad",et:"eesti",na:"Ekakairũ Naoero",en:"English",es:"español",eo:"Esperanto",eu:"euskara",ee:"Eʋegbe",to:"faka Tonga",mg:"fiteny malagasy",fr:"français",fy:"Frysk",ff:"Fulfulde",fo:"føroyskt",ga:"Gaeilge",gv:"Gaelg",sm:"gagana fa'a Samoa",gl:"galego",sq:"gjuha shqipe",gd:"Gàidhlig",ki:"Gĩkũyũ",ha:"Hausa",ho:"Hiri Motu",hr:"hrvatski jezik",io:"Ido",rw:"Ikinyarwanda",rn:"Ikirundi",ia:"Interlingua",nd:"isiNdebele",nr:"isiNdebele",xh:"isiXhosa",zu:"isiZulu",it:"italiano",ik:"Iñupiaq",pl:"polski",mh:"Kajin M̧ajeļ",kl:"kalaallisut",kr:"Kanuri",kw:"Kernewek",kg:"KiKongo",sw:"Kiswahili",ht:"Kreyòl ayisyen",kj:"Kuanyama",ku:"Kurdî",la:"latine",lv:"latviešu valoda",lt:"lietuvių kalba",ro:"limba română",li:"Limburgs",ln:"Lingála",lg:"Luganda",lb:"Lëtzebuergesch",hu:"magyar",mt:"Malti",nl:"Nederlands",no:"Norsk",nb:"Norsk bokmål",nn:"Norsk nynorsk",uz:"O'zbek",oc:"occitan",ie:"Interlingue",hz:"Otjiherero",ng:"Owambo",pt:"português",ty:"Reo Tahiti",rm:"rumantsch grischun",qu:"Runa Simi",sc:"sardu",za:"Saɯ cueŋƅ",st:"Sesotho",tn:"Setswana",ss:"SiSwati",sl:"slovenski jezik",sk:"slovenčina",so:"Soomaaliga",fi:"suomi",sv:"Svenska",mi:"te reo Māori",vi:"Tiếng Việt",lu:"Tshiluba",ve:"Tshivenḓa",tw:"Twi",tk:"Türkmen",tr:"Türkçe",ug:"Uyƣurqə",vo:"Volapük",fj:"vosa Vakaviti",wa:"walon",tl:"Wikang Tagalog",wo:"Wollof",ts:"Xitsonga",yo:"Yorùbá",sg:"yângâ tî sängö",is:"Íslenska",cs:"čeština",el:"ελληνικά",av:"авар мацӀ",ab:"аҧсуа бызшәа",ba:"башҡорт теле",be:"беларуская мова",bg:"български език",os:"ирон æвзаг",kv:"коми кыв",ky:"Кыргызча",mk:"македонски јазик",mn:"монгол",ce:"нохчийн мотт",ru:"Русский язык",sr:"српски језик",tt:"татар теле",tg:"тоҷикӣ",uk:"українська мова",cv:"чӑваш чӗлхи",cu:"ѩзыкъ словѣньскъ",kk:"қазақ тілі",hy:"Հայերեն",yi:"ייִדיש",he:"עברית",ur:"اردو",ar:"العربية",fa:"فارسی",ps:"پښتو",ks:"कश्मीरी",ne:"नेपाली",pi:"पाऴि",bh:"भोजपुरी",mr:"मराठी",sa:"संस्कृतम्",sd:"सिन्धी",hi:"हिन्दी",as:"অসমীয়া",bn:"বাংলা",pa:"ਪੰਜਾਬੀ",gu:"ગુજરાતી",or:"ଓଡ଼ିଆ",ta:"தமிழ்",te:"తెలుగు",kn:"ಕನ್ನಡ",ml:"മലയാളം",si:"සිංහල",th:"ไทย",lo:"ພາສາລາວ",bo:"བོད་ཡིག",dz:"རྫོང་ཁ",my:"ဗမာစာ",ka:"ქართული",ti:"ትግርኛ",am:"አማርኛ",iu:"ᐃᓄᒃᑎᑐᑦ",oj:"ᐊᓂᔑᓈᐯᒧᐎᓐ",cr:"ᓀᐦᐃᔭᐍᐏᐣ",km:"ខ្មែរ",zh:"中文 (Zhōngwén)",ja:"日本語 (にほんご)",ii:"ꆈꌠ꒿ Nuosuhxop",ko:"한국어 (韓國語)"},BFHPhoneFormatList={AF:"+93 0dd ddd dddd",AL:"+355 0dd ddd ddd",DZ:"+213 0ddd dd dd dd",AS:"+1 (ddd) ddd-dddd",AD:"+376 ddddddddd",AO:"+244 ddd ddd ddd",AI:"+1 (ddd) ddd-dddd",AQ:"+672 ddddddddd",AG:"+1 (ddd) ddd-dddd",AR:"+54 ddddddddd",AM:"+374 0dd dddddd",AW:"+297 ddd dddd",AU:"+61 ddd ddd ddd",AT:"+43 0dddd ddddddddd",AZ:"+994 ddddddddd",BH:"+973 ddddddddd",BD:"+880 ddddddddd",BB:"+1 ddddddddd",BY:"+375 ddddddddd",BE:"+32 ddddddddd",BZ:"+501 ddddddddd",BJ:"+229 ddddddddd",BM:"+1 (ddd) ddd-dddd",BT:"+975 ddddddddd",BO:"+591 ddddddddd",BA:"+387 ddddddddd",BW:"+267 ddddddddd",BV:"+0 ddddddddd",BR:"+55 ddddddddd",IO:"+0 ddddddddd",VG:"+1 (ddd) ddd-dddd",BN:"+673 ddddddddd",BG:"+359 ddddddddd",BF:"+226 ddddddddd",BI:"+257 ddddddddd",CI:"+225 ddddddddd",KH:"+855 ddddddddd",CM:"+237 ddddddddd",CA:"+1 (ddd) ddd-dddd",CV:"+238 ddddddddd",KY:"+1 (ddd) ddd-dddd",CF:"+236 ddddddddd",TD:"+235 ddddddddd",CL:"+56 ddddddddd",CN:"+86 ddddddddd",CX:"+61 ddddddddd",CC:"+61 ddddddddd",CO:"+57 ddddddddd",KM:"+269 ddddddddd",CG:"+242 ddddddddd",CK:"+682 ddddddddd",CR:"+506 ddddddddd",HR:"+385 ddddddddd",CU:"+53 ddddddddd",CY:"+357 ddddddddd",CZ:"+420 ddddddddd",CD:"+243 ddddddddd",DK:"+45 ddddddddd",DJ:"+253 ddddddddd",DM:"+1 (ddd) ddd-dddd",DO:"+1 (ddd) ddd-dddd",TL:"+670 ddddddddd",EC:"+593 ddddddddd",EG:"+20 ddddddddd",SV:"+503 ddddddddd",GQ:"+240 ddddddddd",ER:"+291 ddddddddd",EE:"+372 ddddddddd",ET:"+251 ddddddddd",FO:"+298 ddddddddd",FK:"+500 ddddddddd",FJ:"+679 ddddddddd",FI:"+358 ddddddddd",MK:"+389 ddddddddd",FR:"+33 d dd dd dd dd",GF:"+594 ddddddddd",PF:"+689 ddddddddd",TF:"+262 ddddddddd",GA:"+241 ddddddddd",GE:"+995 ddddddddd",DE:"+49 ddddddddd",GH:"+233 ddddddddd",GI:"+350 ddddddddd",GR:"+30 ddddddddd",GL:"+299 ddddddddd",GD:"+1 (ddd) ddd-dddd",GP:"+590 ddddddddd",GU:"+1 (ddd) ddd-dddd",GT:"+502 ddddddddd",GN:"+224 ddddddddd",GW:"+245 ddddddddd",GY:"+592 ddddddddd",HT:"+509 ddddddddd",HM:"+0 ddddddddd",HN:"+504 ddddddddd",HK:"+852 ddddddddd",HU:"+36 ddddddddd",IS:"+354 ddddddddd",IN:"+91 ddddddddd",ID:"+62 ddddddddd",IR:"+98 ddddddddd",IQ:"+964 ddddddddd",IE:"+353 ddddddddd",IL:"+972 ddddddddd",IT:"+39 ddddddddd",JM:"+1 (ddd) ddd-dddd",JP:"+81 ddddddddd",JO:"+962 ddddddddd",KZ:"+7 ddddddddd",KE:"+254 ddddddddd",KI:"+686 ddddddddd",KW:"+965 ddddddddd",KG:"+996 ddddddddd",LA:"+856 ddddddddd",LV:"+371 ddddddddd",LB:"+961 ddddddddd",LS:"+266 ddddddddd",LR:"+231 ddddddddd",LY:"+218 ddddddddd",LI:"+423 ddddddddd",LT:"+370 ddddddddd",LU:"+352 ddddddddd",MO:"+853 ddddddddd",MG:"+261 ddddddddd",MW:"+265 ddddddddd",MY:"+60 ddddddddd",MV:"+960 ddddddddd",ML:"+223 ddddddddd",MT:"+356 ddddddddd",MH:"+692 ddddddddd",MQ:"+596 ddddddddd",MR:"+222 ddddddddd",MU:"+230 ddddddddd",YT:"+262 ddddddddd",MX:"+52 ddddddddd",FM:"+691 ddddddddd",MD:"+373 ddddddddd",MC:"+377 ddddddddd",MN:"+976 ddddddddd",MS:"+1 (ddd) ddd-dddd",MA:"+212 ddddddddd",MZ:"+258 ddddddddd",MM:"+95 ddddddddd",NA:"+264 ddddddddd",NR:"+674 ddddddddd",NP:"+977 ddddddddd",NL:"+31 ddddddddd",AN:"+599 ddddddddd",NC:"+687 ddddddddd",NZ:"+64 ddddddddd",NI:"+505 ddddddddd",NE:"+227 ddddddddd",NG:"+234 ddddddddd",NU:"+683 ddddddddd",NF:"+672 ddddddddd",KP:"+850 ddddddddd",MP:"+1 (ddd) ddd-dddd",NO:"+47 ddddddddd",OM:"+968 ddddddddd",PK:"+92 ddddddddd",PW:"+680 ddddddddd",PA:"+507 ddddddddd",PG:"+675 ddddddddd",PY:"+595 ddddddddd",PE:"+51 ddddddddd",PH:"+63 ddddddddd",PN:"+870 ddddddddd",PL:"+48 ddddddddd",PT:"+351 ddddddddd",PR:"+1 (ddd) ddd-dddd",QA:"+974 ddddddddd",RE:"+262 ddddddddd",RO:"+40 ddddddddd",RU:"+7 ddddddddd",RW:"+250 ddddddddd",ST:"+239 ddddddddd",SH:"+290 ddddddddd",KN:"+1 (ddd) ddd-dddd",LC:"+1 (ddd) ddd-dddd",PM:"+508 ddddddddd",VC:"+1 (ddd) ddd-dddd",WS:"+685 ddddddddd",SM:"+378 ddddddddd",SA:"+966 ddddddddd",SN:"+221 ddddddddd",SC:"+248 ddddddddd",SL:"+232 ddddddddd",SG:"+65 ddddddddd",SK:"+421 ddddddddd",SI:"+386 ddddddddd",SB:"+677 ddddddddd",SO:"+252 ddddddddd",ZA:"+27 ddddddddd",GS:"+0 ddddddddd",KR:"+82 ddddddddd",ES:"+34 ddddddddd",LK:"+94 ddddddddd",SD:"+249 ddddddddd",SR:"+597 ddddddddd",SJ:"+0 ddddddddd",SZ:"+268 ddddddddd",SE:"+46 ddddddddd",CH:"+41 ddddddddd",SY:"+963 ddddddddd",TW:"+886 ddddddddd",TJ:"+992 ddddddddd",TZ:"+255 ddddddddd",TH:"+66 ddddddddd",BS:"+1 (ddd) ddd-dddd",GM:"+220 ddddddddd",TG:"+228 ddddddddd",TK:"+690 ddddddddd",TO:"+676 ddddddddd",TT:"+1 (ddd) ddd-dddd",TN:"+216 ddddddddd",TR:"+90 ddddddddd",TM:"+993 ddddddddd",TC:"+1 (ddd) ddd-dddd",TV:"+688 ddddddddd",VI:"+1 (ddd) ddd-dddd",UG:"+256 ddddddddd",UA:"+380 ddddddddd",AE:"+971 ddddddddd",GB:"+44 (ddd) dddd dddd",US:"+1 (ddd) ddd-dddd",UM:"+0 ddddddddd",UY:"+598 ddddddddd",UZ:"+998 ddddddddd",VU:"+678 ddddddddd",VA:"+39 ddddddddd",VE:"+58 ddddddddd",VN:"+84 ddddddddd",WF:"+681 ddddddddd",EH:"+0 ddddddddd",YE:"+967 ddddddddd",YU:"+0 ddddddddd",ZM:"+260 ddddddddd",ZW:"+263 ddddddddd"},BFHStatesList={AF:{1:{code:"BAL",name:"Balkh"},2:{code:"BAM",name:"Bamian"},3:{code:"BDG",name:"Badghis"},4:{code:"BDS",name:"Badakhshan"},5:{code:"BGL",name:"Baghlan"},6:{code:"FRA",name:"Farah"},7:{code:"FYB",name:"Faryab"},8:{code:"GHA",name:"Ghazni"},9:{code:"GHO",name:"Ghowr"},10:{code:"HEL",name:"Helmand"},11:{code:"HER",name:"Herat"},12:{code:"JOW",name:"Jowzjan"},13:{code:"KAB",name:"Kabul"},14:{code:"KAN",name:"Kandahar"},15:{code:"KAP",name:"Kapisa"},16:{code:"KDZ",name:"Kondoz"},17:{code:"KHO",name:"Khost"},18:{code:"KNR",name:"Konar"},19:{code:"LAG",name:"Laghman"},20:{code:"LOW",name:"Lowgar"},21:{code:"NAN",name:"Nangrahar"},22:{code:"NIM",name:"Nimruz"},23:{code:"NUR",name:"Nurestan"},24:{code:"ORU",name:"Oruzgan"},25:{code:"PAR",name:"Parwan"},26:{code:"PIA",name:"Paktia"},27:{code:"PKA",name:"Paktika"},28:{code:"SAM",name:"Samangan"},29:{code:"SAR",name:"Sar-e Pol"},30:{code:"TAK",name:"Takhar"},31:{code:"WAR",name:"Wardak"},32:{code:"ZAB",name:"Zabol"}},AL:{1:{code:"BR",name:"Berat"},2:{code:"BU",name:"Bulqize"},3:{code:"DI",name:"Diber"},4:{code:"DL",name:"Delvine"},5:{code:"DR",name:"Durres"},6:{code:"DV",name:"Devoll"},7:{code:"EL",name:"Elbasan"},8:{code:"ER",name:"Kolonje"},9:{code:"FR",name:"Fier"},10:{code:"GJ",name:"Gjirokaster"},11:{code:"GR",name:"Gramsh"},12:{code:"HA",name:"Has"},13:{code:"KA",name:"Kavaje"},14:{code:"KB",name:"Kurbin"},15:{code:"KC",name:"Kucove"},16:{code:"KO",name:"Korce"},17:{code:"KR",name:"Kruje"},18:{code:"KU",name:"Kukes"},19:{code:"LB",name:"Librazhd"},20:{code:"LE",name:"Lezhe"},21:{code:"LU",name:"Lushnje"},22:{code:"MK",name:"Mallakaster"},23:{code:"MM",name:"Malesi e Madhe"},24:{code:"MR",name:"Mirdite"},25:{code:"MT",name:"Mat"},26:{code:"PG",name:"Pogradec"},27:{code:"PQ",name:"Peqin"},28:{code:"PR",name:"Permet"},29:{code:"PU",name:"Puke"},30:{code:"SH",name:"Shkoder"},31:{code:"SK",name:"Skrapar"},32:{code:"SR",name:"Sarande"},33:{code:"TE",name:"Tepelene"},34:{code:"TP",name:"Tropoje"},35:{code:"TR",name:"Tirane"},36:{code:"VL",name:"Vlore"}},DZ:{1:{code:"ADE",name:"Ain Defla"},2:{code:"ADR",name:"Adrar"},3:{code:"ALG",name:"Alger"},4:{code:"ANN",name:"Annaba"},5:{code:"ATE",name:"Ain Temouchent"},6:{code:"BAT",name:"Batna"},7:{code:"BBA",name:"Bordj Bou Arreridj"},8:{code:"BEC",name:"Bechar"},9:{code:"BEJ",name:"Bejaia"},10:{code:"BIS",name:"Biskra"},11:{code:"BLI",name:"Blida"},12:{code:"BMD",name:"Boumerdes"},13:{code:"BOA",name:"Bouira"},14:{code:"CHL",name:"Chlef"},15:{code:"CON",name:"Constantine"},16:{code:"DJE",name:"Djelfa"},17:{code:"EBA",name:"El Bayadh"},18:{code:"EOU",name:"El Oued"},19:{code:"ETA",name:"El Tarf"},20:{code:"GHA",name:"Ghardaia"},21:{code:"GUE",name:"Guelma"},22:{code:"ILL",name:"Illizi"},23:{code:"JIJ",name:"Jijel"},24:{code:"KHE",name:"Khenchela"},25:{code:"LAG",name:"Laghouat"},26:{code:"MED",name:"Medea"},27:{code:"MIL",name:"Mila"},28:{code:"MOS",name:"Mostaganem"},29:{code:"MSI",name:"M'Sila"},30:{code:"MUA",name:"Muaskar"},31:{code:"NAA",name:"Naama"},32:{code:"OEB",name:"Oum el-Bouaghi"},33:{code:"ORA",name:"Oran"},34:{code:"OUA",name:"Ouargla"},35:{code:"REL",name:"Relizane"},36:{code:"SAH",name:"Souk Ahras"},37:{code:"SAI",name:"Saida"},38:{code:"SBA",name:"Sidi Bel Abbes"},39:{code:"SET",name:"Setif"},40:{code:"SKI",name:"Skikda"},41:{code:"TAM",name:"Tamanghasset"},42:{code:"TEB",name:"Tebessa"},43:{code:"TIA",name:"Tiaret"},44:{code:"TIN",name:"Tindouf"},45:{code:"TIP",name:"Tipaza"},46:{code:"TIS",name:"Tissemsilt"},47:{code:"TLE",name:"Tlemcen"},48:{code:"TOU",name:"Tizi Ouzou"}},AS:{1:{code:"E",name:"Eastern"},2:{code:"M",name:"Manu'a"},3:{code:"R",name:"Rose Island"},4:{code:"S",name:"Swains Island"},5:{code:"W",name:"Western"}},AD:{1:{code:"ALV",name:"Andorra la Vella"},2:{code:"CAN",name:"Canillo"},3:{code:"ENC",name:"Encamp"},4:{code:"ESE",name:"Escaldes-Engordany"},5:{code:"LMA",name:"La Massana"},6:{code:"ORD",name:"Ordino"},7:{code:"SJL",name:"Sant Julià de Lòria"}},AO:{1:{code:"BGO",name:"Bengo"},2:{code:"BGU",name:"Benguela"},3:{code:"BIE",name:"Bie"},4:{code:"CAB",name:"Cabinda"},5:{code:"CCU",name:"Cuando-Cubango"},6:{code:"CNO",name:"Cuanza Norte"},7:{code:"CUS",name:"Cuanza Sul"},8:{code:"CNN",name:"Cunene"},9:{code:"HUA",name:"Huambo"},10:{code:"HUI",name:"Huila"},11:{code:"LUA",name:"Luanda"},12:{code:"LNO",name:"Lunda Norte"},13:{code:"LSU",name:"Lunda Sul"},14:{code:"MAL",name:"Malange"},15:{code:"MOX",name:"Moxico"},16:{code:"NAM",name:"Namibe"},17:{code:"UIG",name:"Uige"},18:{code:"ZAI",name:"Zaire"}},AI:{1:{code:"ANG",name:"Anguillita"},2:{code:"ANG",name:"Anguila"},3:{code:"DOG",name:"Dog"},4:{code:"LIT",name:"Little Scrub"},5:{code:"PRI",name:"Prickly Pear"},6:{code:"SAN",name:"Sandy"},7:{code:"SCR",name:"Scrub"},8:{code:"SEA",name:"Seal"},9:{code:"SOM",name:"Sombrero"}},AQ:{1:{code:"ASG",name:"Saint George"},2:{code:"ASH",name:"Saint Philip"},3:{code:"ASJ",name:"Saint John"},4:{code:"ASL",name:"Saint Paul"},5:{code:"ASM",name:"Saint Mary"},6:{code:"ASR",name:"Saint Peter"},7:{code:"BAR",name:"Barbuda"},8:{code:"RED",name:"Redonda"}},AR:{1:{code:"AN",name:"Antartida e Islas del Atlantico"},2:{code:"BA",name:"Buenos Aires"},3:{code:"CA",name:"Catamarca"},4:{code:"CH",name:"Chaco"},5:{code:"CU",name:"Chubut"},6:{code:"CO",name:"Cordoba"},7:{code:"CR",name:"Corrientes"},8:{code:"CF",name:"Capital Federal"},9:{code:"ER",name:"Entre Rios"},10:{code:"FO",name:"Formosa"},11:{code:"JU",name:"Jujuy"},12:{code:"LP",name:"La Pampa"},13:{code:"LR",name:"La Rioja"},14:{code:"ME",name:"Mendoza"},15:{code:"MI",name:"Misiones"},16:{code:"NE",name:"Neuquen"},17:{code:"RN",name:"Rio Negro"},18:{code:"SA",name:"Salta"},19:{code:"SJ",name:"San Juan"},20:{code:"SL",name:"San Luis"},21:{code:"SC",name:"Santa Cruz"},22:{code:"SF",name:"Santa Fe"},23:{code:"SD",name:"Santiago del Estero"},24:{code:"TF",name:"Tierra del Fuego"},25:{code:"TU",name:"Tucuman"}},AM:{1:{code:"AGT",name:"Aragatsotn"},2:{code:"ARR",name:"Ararat"},3:{code:"ARM",name:"Armavir"},4:{code:"GEG",name:"Geghark 'unik'"},5:{code:"KOT",name:"Kotayk'"},6:{code:"LOR",name:"Lorri"},7:{code:"SHI",name:"Shirak"},8:{code:"SYU",name:"Syunik'"},9:{code:"TAV",name:"Tavush"},10:{code:"VAY",name:"Vayots' Dzor"},11:{code:"YER",name:"Yerevan"}},AW:{1:{code:"ARU",name:"Aruba"},2:{code:"DRU",name:"Druif Beach"},3:{code:"MAN",name:"Manchebo Beach"},4:{code:"NOO",name:"Noord"},5:{code:"ORA",name:"Oranjestad"},6:{code:"PAL",name:"Palm Beach"},7:{code:"ROO",name:"Rooi Thomas"},8:{code:"SIN",name:"Sint Nicolaas"},9:{code:"SIN",name:"Sint Nicolas"},10:{code:"WAY",name:"Wayaca"}},AU:{1:{code:"ACT",name:"Australian Capital Territory"},2:{code:"NSW",name:"New South Wales"},3:{code:"NT",name:"Northern Territory"},4:{code:"QLD",name:"Queensland"},5:{code:"SA",name:"South Australia"},6:{code:"TAS",name:"Tasmania"},7:{code:"VIC",name:"Victoria"},8:{code:"WA",name:"Western Australia"}},AT:{1:{code:"BUR",name:"Burgenland"},2:{code:"KAR",name:"Krnten"},3:{code:"NOS",name:"Niederöesterreich"},4:{code:"OOS",name:"Oberöesterreich"},5:{code:"SAL",name:"Salzburg"},6:{code:"STE",name:"Steiermark"},7:{code:"TIR",name:"Tirol"},8:{code:"VOR",name:"Vorarlberg"},9:{code:"WIE",name:"Wien"}},AZ:{1:{code:"AB",name:"Ali Bayramli"},2:{code:"ABS",name:"Abseron"},3:{code:"AGC",name:"AgcabAdi"},4:{code:"AGM",name:"Agdam"},5:{code:"AGS",name:"Agdas"},6:{code:"AGA",name:"Agstafa"},7:{code:"AGU",name:"Agsu"},8:{code:"AST",name:"Astara"},9:{code:"BA",name:"Baki"},10:{code:"BAB",name:"BabAk"},11:{code:"BAL",name:"BalakAn"},12:{code:"BAR",name:"BArdA"},13:{code:"BEY",name:"Beylaqan"},14:{code:"BIL",name:"Bilasuvar"},15:{code:"CAB",name:"Cabrayil"},16:{code:"CAL",name:"Calilabab"},17:{code:"CUL",name:"Culfa"},18:{code:"DAS",name:"Daskasan"},19:{code:"DAV",name:"Davaci"},20:{code:"FUZ",name:"Fuzuli"},21:{code:"GA",name:"Ganca"},22:{code:"GAD",name:"Gadabay"},23:{code:"GOR",name:"Goranboy"},24:{code:"GOY",name:"Goycay"},25:{code:"HAC",name:"Haciqabul"},26:{code:"IMI",name:"Imisli"},27:{code:"ISM",name:"Ismayilli"},28:{code:"KAL",name:"Kalbacar"},29:{code:"KUR",name:"Kurdamir"},30:{code:"LA",name:"Lankaran"},31:{code:"LAC",name:"Lacin"},32:{code:"LAN",name:"Lankaran"},33:{code:"LER",name:"Lerik"},34:{code:"MAS",name:"Masalli"},35:{code:"MI",name:"Mingacevir"},36:{code:"NA",name:"Naftalan"},37:{code:"NX",name:"Naxcivan"},38:{code:"NEF",name:"Neftcala"},39:{code:"OGU",name:"Oguz"},40:{code:"ORD",name:"Ordubad"},41:{code:"QAB",name:"Qabala"},42:{code:"QAX",name:"Qax"},43:{code:"QAZ",name:"Qazax"},44:{code:"QOB",name:"Qobustan"},45:{code:"QBA",name:"Quba"},46:{code:"QBI",name:"Qubadli"},47:{code:"QUS",name:"Qusar"},48:{code:"SA",name:"Saki"},49:{code:"SAT",name:"Saatli"},50:{code:"SAB",name:"Sabirabad"},51:{code:"SAD",name:"Sadarak"},52:{code:"SAH",name:"Sahbuz"},53:{code:"SAK",name:"Saki"},54:{code:"SAL",name:"Salyan"},55:{code:"SM",name:"Sumqayit"},56:{code:"SMI",name:"Samaxi"},57:{code:"SKR",name:"Samkir"},58:{code:"SMX",name:"Samux"},59:{code:"SAR",name:"Sarur"},60:{code:"SIY",name:"Siyazan"},61:{code:"SS",name:"Susa"},62:{code:"SUS",name:"Susa"},63:{code:"TAR",name:"Tartar"},64:{code:"TOV",name:"Tovuz"},65:{code:"UCA",name:"Ucar"},66:{code:"XA",name:"Xankandi"},67:{code:"XAC",name:"Xacmaz"},68:{code:"XAN",name:"Xanlar"},69:{code:"XIZ",name:"Xizi"},70:{code:"XCI",name:"Xocali"},71:{code:"XVD",name:"Xocavand"},72:{code:"YAR",name:"Yardimli"},73:{code:"YEV",name:"Yevlax"},74:{code:"ZAN",name:"Zangilan"},75:{code:"ZAQ",name:"Zaqatala"},76:{code:"ZAR",name:"Zardab"}},BS:{1:{code:"ACK",name:"Acklins"},2:{code:"BER",name:"Berry Islands"},3:{code:"BIM",name:"Bimini"},4:{code:"BLK",name:"Black Point"},5:{code:"CAT",name:"Cat Island"},6:{code:"CAB",name:"Central Abaco"},7:{code:"CAN",name:"Central Andros"},8:{code:"CEL",name:"Central Eleuthera"},9:{code:"FRE",name:"City of Freeport"},10:{code:"CRO",name:"Crooked Island"},11:{code:"EGB",name:"East Grand Bahama"},12:{code:"EXU",name:"Exuma"},13:{code:"GRD",name:"Grand Cay"},14:{code:"HAR",name:"Harbour Island"},15:{code:"HOP",name:"Hope Town"},16:{code:"INA",name:"Inagua"},17:{code:"LNG",name:"Long Island"},18:{code:"MAN",name:"Mangrove Cay"},19:{code:"MAY",name:"Mayaguana"},20:{code:"MOO",name:"Moore's Island"},21:{code:"NAB",name:"North Abaco"},22:{code:"NAN",name:"North Andros"},23:{code:"NEL",name:"North Eleuthera"},24:{code:"RAG",name:"Ragged Island"},25:{code:"RUM",name:"Rum Cay"},26:{code:"SAL",name:"San Salvador"},27:{code:"SAB",name:"South Abaco"},28:{code:"SAN",name:"South Andros"},29:{code:"SEL",name:"South Eleuthera"},30:{code:"SWE",name:"Spanish Wells"},31:{code:"WGB",name:"West Grand Bahama"}},BH:{1:{code:"CAP",name:"Capital"},2:{code:"CEN",name:"Central"},3:{code:"MUH",name:"Muharraq"},4:{code:"NOR",name:"Northern"},5:{code:"SOU",name:"Southern"}},BD:{1:{code:"BAR",name:"Barisal"},2:{code:"CHI",name:"Chittagong"},3:{code:"DHA",name:"Dhaka"},4:{code:"KHU",name:"Khulna"},5:{code:"RAJ",name:"Rajshahi"},6:{code:"SYL",name:"Sylhet"}},BB:{1:{code:"CC",name:"Christ Church"},2:{code:"AND",name:"Saint Andrew"},3:{code:"GEO",name:"Saint George"},4:{code:"JAM",name:"Saint James"},5:{code:"JOH",name:"Saint John"},6:{code:"JOS",name:"Saint Joseph"},7:{code:"LUC",name:"Saint Lucy"},8:{code:"MIC",name:"Saint Michael"},9:{code:"PET",name:"Saint Peter"},10:{code:"PHI",name:"Saint Philip"},11:{code:"THO",name:"Saint Thomas"}},BY:{1:{code:"BR",name:"Brestskaya (Brest)"},2:{code:"HO",name:"Homyel'skaya (Homyel')"},3:{code:"HM",name:"Horad Minsk"},4:{code:"HR",name:"Hrodzyenskaya (Hrodna)"},5:{code:"MA",name:"Mahilyowskaya (Mahilyow)"},6:{code:"MI",name:"Minskaya"},7:{code:"VI",name:"Vitsyebskaya (Vitsyebsk)"}},BE:{1:{code:"VAN",name:"Antwerpen"},2:{code:"WBR",name:"Brabant Wallon"},3:{code:"WHT",name:"Hainaut"},4:{code:"WLG",name:"Liege"},5:{code:"VLI",name:"Limburg"},6:{code:"WLX",name:"Luxembourg"},7:{code:"WNA",name:"Namur"},8:{code:"VOV",name:"Oost-Vlaanderen"},9:{code:"VBR",name:"Vlaams Brabant"},10:{code:"VWV",name:"West-Vlaanderen"}},BZ:{1:{code:"BZ",name:"Belize"},2:{code:"CY",name:"Cayo"},3:{code:"CR",name:"Corozal"},4:{code:"OW",name:"Orange Walk"},5:{code:"SC",name:"Stann Creek"},6:{code:"TO",name:"Toledo"}},BJ:{1:{code:"AL",name:"Alibori"},2:{code:"AK",name:"Atakora"},3:{code:"AQ",name:"Atlantique"},4:{code:"BO",name:"Borgou"},5:{code:"CO",name:"Collines"},6:{code:"DO",name:"Donga"},7:{code:"KO",name:"Kouffo"},8:{code:"LI",name:"Littoral"},9:{code:"MO",name:"Mono"},10:{code:"OU",name:"Oueme"},11:{code:"PL",name:"Plateau"},12:{code:"ZO",name:"Zou"}},BM:{1:{code:"DS",name:"Devonshire"},2:{code:"HC",name:"Hamilton City"},3:{code:"HA",name:"Hamilton"},4:{code:"PG",name:"Paget"},5:{code:"PB",name:"Pembroke"},6:{code:"GC",name:"Saint George City"},7:{code:"SG",name:"Saint George's"},8:{code:"SA",name:"Sandys"},9:{code:"SM",name:"Smith's"},10:{code:"SH",name:"Southampton"},11:{code:"WA",name:"Warwick"}},BT:{1:{code:"BUM",name:"Bumthang"},2:{code:"CHU",name:"Chukha"},3:{code:"DAG",name:"Dagana"},4:{code:"GAS",name:"Gasa"},5:{code:"HAA",name:"Haa"},6:{code:"LHU",name:"Lhuntse"},7:{code:"MON",name:"Mongar"},8:{code:"PAR",name:"Paro"},9:{code:"PEM",name:"Pemagatshel"},10:{code:"PUN",name:"Punakha"},11:{code:"SJO",name:"Samdrup Jongkhar"},12:{code:"SAT",name:"Samtse"},13:{code:"SAR",name:"Sarpang"},14:{code:"THI",name:"Thimphu"},15:{code:"TRG",name:"Trashigang"},16:{code:"TRY",name:"Trashiyangste"},17:{code:"TRO",name:"Trongsa"},18:{code:"TSI",name:"Tsirang"},19:{code:"WPH",name:"Wangdue Phodrang"},20:{code:"ZHE",name:"Zhemgang"}},BO:{1:{code:"BEN",name:"Beni"},2:{code:"CHU",name:"Chuquisaca"},3:{code:"COC",name:"Cochabamba"},4:{code:"LPZ",name:"La Paz"},5:{code:"ORU",name:"Oruro"},6:{code:"PAN",name:"Pando"},7:{code:"POT",name:"Potosi"},8:{code:"SCZ",name:"Santa Cruz"},9:{code:"TAR",name:"Tarija"}},BA:{1:{code:"BRO",name:"Brcko district"},2:{code:"FBP",name:"Bosanskopodrinjski Kanton"},3:{code:"FHN",name:"Hercegovacko-neretvanski Kanton"},4:{code:"FPO",name:"Posavski Kanton"},5:{code:"FSA",name:"Kanton Sarajevo"},6:{code:"FSB",name:"Srednjebosanski Kanton"},7:{code:"FTU",name:"Tuzlanski Kanton"},8:{code:"FUS",name:"Unsko-Sanski Kanton"},9:{code:"FZA",name:"Zapadnobosanska"},10:{code:"FZE",name:"Zenicko-Dobojski Kanton"},11:{code:"FZH",name:"Zapadnohercegovacka Zupanija"},12:{code:"SBI",name:"Bijeljina"},13:{code:"SBL",name:"Banja Luka"},14:{code:"SDO",name:"Doboj"},15:{code:"SFO",name:"Foca"},16:{code:"SSR",name:"Sarajevo-Romanija or Sokolac"},17:{code:"STR",name:"Trebinje"},18:{code:"SVL",name:"Vlasenica"}},BW:{1:{code:"CE",name:"Central"},2:{code:"GH",name:"Ghanzi"},3:{code:"KD",name:"Kgalagadi"},4:{code:"KT",name:"Kgatleng"},5:{code:"KW",name:"Kweneng"},6:{code:"NG",name:"Ngamiland"},7:{code:"NE",name:"North East"},8:{code:"NW",name:"North West"},9:{code:"SE",name:"South East"},10:{code:"SO",name:"Southern"}},BR:{1:{code:"AC",name:"Acre"},2:{code:"AL",name:"Alagoas"},3:{code:"AP",name:"Amapa"},4:{code:"AM",name:"Amazonas"},5:{code:"BA",name:"Bahia"},6:{code:"CE",name:"Ceara"},7:{code:"DF",name:"Distrito Federal"},8:{code:"ES",name:"Espirito Santo"},9:{code:"GO",name:"Goias"},10:{code:"MA",name:"Maranhao"},11:{code:"MT",name:"Mato Grosso"},12:{code:"MS",name:"Mato Grosso do Sul"},13:{code:"MG",name:"Minas Gerais"},14:{code:"PA",name:"Para"},15:{code:"PB",name:"Paraiba"},16:{code:"PR",name:"Parana"},17:{code:"PE",name:"Pernambuco"},18:{code:"PI",name:"Piaui"},19:{code:"RJ",name:"Rio de Janeiro"},20:{code:"RN",name:"Rio Grande do Norte"},21:{code:"RS",name:"Rio Grande do Sul"},22:{code:"RO",name:"Rondonia"},23:{code:"RR",name:"Roraima"},24:{code:"SC",name:"Santa Catarina"},25:{code:"SP",name:"Sao Paulo"},26:{code:"SE",name:"Sergipe"},27:{code:"TO",name:"Tocantins"}},IO:{1:{code:"DG",name:"Diego Garcia"},2:{code:"DI",name:"Danger Island"},3:{code:"EA",name:"Eagle Islands"},4:{code:"EG",name:"Egmont Islands"},5:{code:"NI",name:"Nelsons Island"},6:{code:"PB",name:"Peros Banhos"},7:{code:"SI",name:"Salomon Islands"},8:{code:"TB",name:"Three Brothers"}},BN:{1:{code:"BEL",name:"Belait"},2:{code:"BRM",name:"Brunei and Muara"},3:{code:"TEM",name:"Temburong"},4:{code:"TUT",name:"Tutong"}},BG:{1:{code:"BG-01",name:"Blagoevgrad"},2:{code:"BG-02",name:"Burgas"},3:{code:"BG-03",name:"Dobrich"},4:{code:"BG-04",name:"Gabrovo"},5:{code:"BG-05",name:"Haskovo"},6:{code:"BG-06",name:"Kardjali"},7:{code:"BG-07",name:"Kyustendil"},8:{code:"BG-08",name:"Lovech"},9:{code:"BG-09",name:"Montana"},10:{code:"BG-10",name:"Pazardjik"},11:{code:"BG-11",name:"Pernik"},12:{code:"BG-12",name:"Pleven"},13:{code:"BG-13",name:"Plovdiv"},14:{code:"BG-14",name:"Razgrad"},15:{code:"BG-15",name:"Shumen"},16:{code:"BG-16",name:"Silistra"},17:{code:"BG-17",name:"Sliven"},18:{code:"BG-18",name:"Smolyan"},19:{code:"BG-19",name:"Sofia"},20:{code:"BG-20",name:"Sofia - town"},21:{code:"BG-21",name:"Stara Zagora"},22:{code:"BG-22",name:"Targovishte"},23:{code:"BG-23",name:"Varna"},24:{code:"BG-24",name:"Veliko Tarnovo"},25:{code:"BG-25",name:"Vidin"},26:{code:"BG-26",name:"Vratza"},27:{code:"BG-27",name:"Yambol"}},BF:{1:{code:"BAL",name:"Bale"},2:{code:"BAM",name:"Bam"},3:{code:"BAN",name:"Banwa"},4:{code:"BAZ",name:"Bazega"},5:{code:"BOR",name:"Bougouriba"},6:{code:"BLG",name:"Boulgou"},7:{code:"BOK",name:"Boulkiemde"},8:{code:"COM",name:"Comoe"},9:{code:"GAN",name:"Ganzourgou"},10:{code:"GNA",name:"Gnagna"},11:{code:"GOU",name:"Gourma"},12:{code:"HOU",name:"Houet"},13:{code:"IOA",name:"Ioba"},14:{code:"KAD",name:"Kadiogo"},15:{code:"KEN",name:"Kenedougou"},16:{code:"KOD",name:"Komondjari"},17:{code:"KOP",name:"Kompienga"},18:{code:"KOS",name:"Kossi"},19:{code:"KOL",name:"Koulpelogo"},20:{code:"KOT",name:"Kouritenga"},21:{code:"KOW",name:"Kourweogo"},22:{code:"LER",name:"Leraba"},23:{code:"LOR",name:"Loroum"},24:{code:"MOU",name:"Mouhoun"},25:{code:"NAH",name:"Nahouri"},26:{code:"NAM",name:"Namentenga"},27:{code:"NAY",name:"Nayala"},28:{code:"NOU",name:"Noumbiel"},29:{code:"OUB",name:"Oubritenga"},30:{code:"OUD",name:"Oudalan"},31:{code:"PAS",name:"Passore"},32:{code:"PON",name:"Poni"},33:{code:"SAG",name:"Sanguie"},34:{code:"SAM",name:"Sanmatenga"},35:{code:"SEN",name:"Seno"},36:{code:"SIS",name:"Sissili"},37:{code:"SOM",name:"Soum"},38:{code:"SOR",name:"Sourou"},39:{code:"TAP",name:"Tapoa"},40:{code:"TUY",name:"Tuy"},41:{code:"YAG",name:"Yagha"},42:{code:"YAT",name:"Yatenga"},43:{code:"ZIR",name:"Ziro"},44:{code:"ZOD",name:"Zondoma"},45:{code:"ZOW",name:"Zoundweogo"}},BI:{1:{code:"BB",name:"Bubanza"},2:{code:"BJ",name:"Bujumbura"},3:{code:"BR",name:"Bururi"},4:{code:"CA",name:"Cankuzo"},5:{code:"CI",name:"Cibitoke"},6:{code:"GI",name:"Gitega"},7:{code:"KR",name:"Karuzi"},8:{code:"KY",name:"Kayanza"},9:{code:"KI",name:"Kirundo"},10:{code:"MA",name:"Makamba"},11:{code:"MU",name:"Muramvya"},12:{code:"MY",name:"Muyinga"},13:{code:"MW",name:"Mwaro"},14:{code:"NG",name:"Ngozi"},15:{code:"RT",name:"Rutana"},16:{code:"RY",name:"Ruyigi"}},KH:{1:{code:"BA",name:"Battambang"},2:{code:"BM",name:"Banteay Meanchey"},3:{code:"KB",name:"Keb"},4:{code:"KK",name:"Kaoh Kong"},5:{code:"KL",name:"Kandal"},6:{code:"KM",name:"Kampong Cham"},7:{code:"KN",name:"Kampong Chhnang"},8:{code:"KO",name:"Kampong Som"},9:{code:"KP",name:"Kampot"},10:{code:"KR",name:"Kratie"},11:{code:"KT",name:"Kampong Thom"},12:{code:"KU",name:"Kampong Speu"},13:{code:"MK",name:"Mondul Kiri"},14:{code:"OM",name:"Oddar Meancheay"},15:{code:"PA",name:"Pailin"},16:{code:"PG",name:"Prey Veng"},17:{code:"PP",name:"Phnom Penh"},18:{code:"PR",name:"Preah Vihear"},19:{code:"PS",name:"Preah Seihanu (Kompong Som or Si)"},20:{code:"PU",name:"Pursat"},21:{code:"RK",name:"Ratanak Kiri"},22:{code:"SI",name:"Siemreap"},23:{code:"SR",name:"Svay Rieng"},24:{code:"ST",name:"Stung Treng"},25:{code:"TK",name:"Takeo"}},CM:{1:{code:"ADA",name:"Adamawa (Adamaoua)"},2:{code:"CEN",name:"Centre"},3:{code:"EST",name:"East (Est)"},4:{code:"EXN",name:"Extrême-Nord"},5:{code:"LIT",name:"Littoral"},6:{code:"NOR",name:"North (Nord)"},7:{code:"NOT",name:"Northwest (Nord-Ouest)"},8:{code:"OUE",name:"West (Ouest)"},9:{code:"SUD",name:"South (Sud)"},10:{code:"SOU",name:"Southwest (Sud-Ouest)"}},CA:{1:{code:"AB",name:"Alberta"},2:{code:"BC",name:"British Columbia"},3:{code:"MB",name:"Manitoba"},4:{code:"NB",name:"New Brunswick"},5:{code:"NL",name:"Newfoundland and Labrador"},6:{code:"NT",name:"Northwest Territories"},7:{code:"NS",name:"Nova Scotia"},8:{code:"NU",name:"Nunavut"},9:{code:"ON",name:"Ontario"},10:{code:"PE",name:"Prince Edward Island"},11:{code:"QC",name:"Québec"},12:{code:"SK",name:"Saskatchewan"},13:{code:"YT",name:"Yukon Territory"}},CV:{1:{code:"BV",name:"Boa Vista"},2:{code:"BR",name:"Brava"},3:{code:"CS",name:"Calheta de Sao Miguel"},4:{code:"MA",name:"Maio"},5:{code:"MO",name:"Mosteiros"},6:{code:"PA",name:"Paul"},7:{code:"PN",name:"Porto Novo"},8:{code:"PR",name:"Praia"},9:{code:"RG",name:"Ribeira Grande"},10:{code:"SL",name:"Sal"},11:{code:"CA",name:"Santa Catarina"},12:{code:"CR",name:"Santa Cruz"},13:{code:"SD",name:"Sao Domingos"},14:{code:"SF",name:"Sao Filipe"},15:{code:"SN",name:"Sao Nicolau"},16:{code:"SV",name:"Sao Vicente"},17:{code:"TA",name:"Tarrafal"}},KY:{1:{code:"CR",name:"Creek"},2:{code:"EA",name:"Eastern"},3:{code:"ML",name:"Midland"},4:{code:"ST",name:"South Town"},5:{code:"SP",name:"Spot Bay"},6:{code:"SK",name:"Stake Bay"},7:{code:"WD",name:"West End"},8:{code:"WN",name:"Western"}},CF:{1:{code:"BAN",name:"Bangui"},2:{code:"BBA",name:"Bamingui-Bangoran"},3:{code:"BKO",name:"Basse-Kotto"},4:{code:"HKO",name:"Haute-Kotto"},5:{code:"HMB",name:"Haut-Mbomou"},6:{code:"KEM",name:"Kemo"},7:{code:"LOB",name:"Lobaye"},8:{code:"MBO",name:"Mbomou"},9:{code:"MKD",name:"Mambéré-Kadéï"},10:{code:"NGR",name:"Nana-Grebizi"},11:{code:"NMM",name:"Nana-Mambere"},12:{code:"OMP",name:"Ombella-M'Poko"},13:{code:"OPE",name:"Ouham-Pende"},14:{code:"OUH",name:"Ouham"},15:{code:"OUK",name:"Ouaka"},16:{code:"SMB",name:"Sangha-Mbaere"},17:{code:"VAK",name:"Vakaga"}},TD:{1:{code:"BA",name:"Batha"},2:{code:"BI",name:"Biltine"},3:{code:"BE",name:"Borkou-Ennedi-Tibesti"},4:{code:"CB",name:"Chari-Baguirmi"},5:{code:"GU",name:"Guera"},6:{code:"KA",name:"Kanem"},7:{code:"LA",name:"Lac"},8:{code:"LC",name:"Logone Occidental"},9:{code:"LR",name:"Logone Oriental"},10:{code:"MK",name:"Mayo-Kebbi"},11:{code:"MC",name:"Moyen-Chari"},12:{code:"OU",name:"Ouaddai"},13:{code:"SA",name:"Salamat"},14:{code:"TA",name:"Tandjile"}},CL:{1:{code:"AI",name:"Aisen del General Carlos Ibanez"},2:{code:"AN",name:"Antofagasta"},3:{code:"AR",name:"Araucania"},4:{code:"AT",name:"Atacama"},5:{code:"BI",name:"Bio-Bio"},6:{code:"CO",name:"Coquimbo"},7:{code:"LI",name:"Libertador General Bernardo O'Hi"},8:{code:"LL",name:"Los Lagos"},9:{code:"MA",name:"Magallanes y de la Antartica Chi"},10:{code:"ML",name:"Maule"},11:{code:"RM",name:"Region Metropolitana"},12:{code:"TA",name:"Tarapaca"},13:{code:"VS",name:"Valparaiso"}},CN:{1:{code:"AN",name:"Anhui"},2:{code:"BE",name:"Beijing"},3:{code:"CH",name:"Chongqing"},4:{code:"FU",name:"Fujian"},5:{code:"GA",name:"Gansu"},6:{code:"GU",name:"Guangdong"},7:{code:"GX",name:"Guangxi"},8:{code:"GZ",name:"Guizhou"},9:{code:"HA",name:"Hainan"},10:{code:"HB",name:"Hebei"},11:{code:"HL",name:"Heilongjiang"},12:{code:"HE",name:"Henan"},13:{code:"HK",name:"Hong Kong"},14:{code:"HU",name:"Hubei"},15:{code:"HN",name:"Hunan"},16:{code:"IM",name:"Inner Mongolia"},17:{code:"JI",name:"Jiangsu"},18:{code:"JX",name:"Jiangxi"},19:{code:"JL",name:"Jilin"},20:{code:"LI",name:"Liaoning"},21:{code:"MA",name:"Macau"},22:{code:"NI",name:"Ningxia"},23:{code:"SH",name:"Shaanxi"},24:{code:"SA",name:"Shandong"},25:{code:"SG",name:"Shanghai"},26:{code:"SX",name:"Shanxi"},27:{code:"SI",name:"Sichuan"},28:{code:"TI",name:"Tianjin"},29:{code:"XI",name:"Xinjiang"},30:{code:"YU",name:"Yunnan"},31:{code:"ZH",name:"Zhejiang"}},CC:{1:{code:"D",name:"Direction Island"},2:{code:"H",name:"Home Island"},3:{code:"O",name:"Horsburgh Island"},4:{code:"S",name:"South Island"},5:{code:"W",name:"West Island"}},CO:{1:{code:"AMZ",name:"Amazonas"},2:{code:"ANT",name:"Antioquia"},3:{code:"ARA",name:"Arauca"},4:{code:"ATL",name:"Atlantico"},5:{code:"BDC",name:"Bogota D.C."},6:{code:"BOL",name:"Bolivar"},7:{code:"BOY",name:"Boyaca"},8:{code:"CAL",name:"Caldas"},9:{code:"CAQ",name:"Caqueta"},10:{code:"CAS",name:"Casanare"},11:{code:"CAU",name:"Cauca"},12:{code:"CES",name:"Cesar"},13:{code:"CHO",name:"Choco"},14:{code:"COR",name:"Cordoba"},15:{code:"CAM",name:"Cundinamarca"},16:{code:"GNA",name:"Guainia"},17:{code:"GJR",name:"Guajira"},18:{code:"GVR",name:"Guaviare"},19:{code:"HUI",name:"Huila"},20:{code:"MAG",name:"Magdalena"},21:{code:"MET",name:"Meta"},22:{code:"NAR",name:"Narino"},23:{code:"NDS",name:"Norte de Santander"},24:{code:"PUT",name:"Putumayo"},25:{code:"QUI",name:"Quindio"},26:{code:"RIS",name:"Risaralda"},27:{code:"SAP",name:"San Andres y Providencia"},28:{code:"SAN",name:"Santander"},29:{code:"SUC",name:"Sucre"},30:{code:"TOL",name:"Tolima"},31:{code:"VDC",name:"Valle del Cauca"},32:{code:"VAU",name:"Vaupes"},33:{code:"VIC",name:"Vichada"}},KM:{1:{code:"G",name:"Grande Comore"},2:{code:"A",name:"Anjouan"},3:{code:"M",name:"Moheli"}},CG:{1:{code:"BO",name:"Bouenza"},2:{code:"BR",name:"Brazzaville"},3:{code:"CU",name:"Cuvette"},4:{code:"CO",name:"Cuvette-Ouest"},5:{code:"KO",name:"Kouilou"},6:{code:"LE",name:"Lekoumou"},7:{code:"LI",name:"Likouala"},8:{code:"NI",name:"Niari"},9:{code:"PL",name:"Plateaux"},10:{code:"PO",name:"Pool"},11:{code:"SA",name:"Sangha"}},CK:{1:{code:"AI",name:"Aitutaki"},2:{code:"AT",name:"Atiu"},3:{code:"MA",name:"Manuae"},4:{code:"MG",name:"Mangaia"},5:{code:"MK",name:"Manihiki"},6:{code:"MT",name:"Mitiaro"},7:{code:"MU",name:"Mauke"},8:{code:"NI",name:"Nassau Island"},9:{code:"PA",name:"Palmerston"},10:{code:"PE",name:"Penrhyn"},11:{code:"PU",name:"Pukapuka"},12:{code:"RK",name:"Rakahanga"},13:{code:"RR",name:"Rarotonga"},14:{code:"SU",name:"Surwarrow"},15:{code:"TA",name:"Takutea"}},CR:{1:{code:"AL",name:"Alajuela"},2:{code:"CA",name:"Cartago"},3:{code:"GU",name:"Guanacaste"},4:{code:"HE",name:"Heredia"},5:{code:"LI",name:"Limon"},6:{code:"PU",name:"Puntarenas"},7:{code:"SJ",name:"San Jose"}},CI:{1:{code:"ABE",name:"Abengourou"},2:{code:"ABI",name:"Abidjan"},3:{code:"ABO",name:"Aboisso"},4:{code:"ADI",name:"Adiake"},5:{code:"ADZ",name:"Adzope"},6:{code:"AGB",name:"Agboville"},7:{code:"AGN",name:"Agnibilekrou"},8:{code:"ALE",name:"Alepe"},9:{code:"BOC",name:"Bocanda"},10:{code:"BAN",name:"Bangolo"},11:{code:"BEO",name:"Beoumi"},12:{code:"BIA",name:"Biankouma"},13:{code:"BDK",name:"Bondoukou"},14:{code:"BGN",name:"Bongouanou"},15:{code:"BFL",name:"Bouafle"},16:{code:"BKE",name:"Bouake"},17:{code:"BNA",name:"Bouna"},18:{code:"BDL",name:"Boundiali"},19:{code:"DKL",name:"Dabakala"},20:{code:"DBU",name:"Dabou"},21:{code:"DAL",name:"Daloa"},22:{code:"DAN",name:"Danane"},23:{code:"DAO",name:"Daoukro"},24:{code:"DIM",name:"Dimbokro"},25:{code:"DIV",name:"Divo"},26:{code:"DUE",name:"Duekoue"},27:{code:"FER",name:"Ferkessedougou"},28:{code:"GAG",name:"Gagnoa"},29:{code:"GBA",name:"Grand-Bassam"},30:{code:"GLA",name:"Grand-Lahou"},31:{code:"GUI",name:"Guiglo"},32:{code:"ISS",name:"Issia"},33:{code:"JAC",name:"Jacqueville"},34:{code:"KAT",name:"Katiola"},35:{code:"KOR",name:"Korhogo"},36:{code:"LAK",name:"Lakota"},37:{code:"MAN",name:"Man"},38:{code:"MKN",name:"Mankono"},39:{code:"MBA",name:"Mbahiakro"},40:{code:"ODI",name:"Odienne"},41:{code:"OUM",name:"Oume"},42:{code:"SAK",name:"Sakassou"},43:{code:"SPE",name:"San-Pedro"},44:{code:"SAS",name:"Sassandra"},45:{code:"SEG",name:"Seguela"},46:{code:"SIN",name:"Sinfra"},47:{code:"SOU",name:"Soubre"},48:{code:"TAB",name:"Tabou"},49:{code:"TAN",name:"Tanda"},50:{code:"TIE",name:"Tiebissou"},51:{code:"TIN",name:"Tingrela"},52:{code:"TIA",name:"Tiassale"},53:{code:"TBA",name:"Touba"},54:{code:"TLP",name:"Toulepleu"},55:{code:"TMD",name:"Toumodi"},56:{code:"VAV",name:"Vavoua"},57:{code:"YAM",name:"Yamoussoukro"},58:{code:"ZUE",name:"Zuenoula"}},HR:{1:{code:"BB",name:"Bjelovar-Bilogora"},2:{code:"CZ",name:"City of Zagreb"},3:{code:"DN",name:"Dubrovnik-Neretva"},4:{code:"IS",name:"Istra"},5:{code:"KA",name:"Karlovac"},6:{code:"KK",name:"Koprivnica-Krizevci"},7:{code:"KZ",name:"Krapina-Zagorje"},8:{code:"LS",name:"Lika-Senj"},9:{code:"ME",name:"Medimurje"},10:{code:"OB",name:"Osijek-Baranja"},11:{code:"PS",name:"Pozega-Slavonia"},12:{code:"PG",name:"Primorje-Gorski Kotar"},13:{code:"SI",name:"Sibenik"},14:{code:"SM",name:"Sisak-Moslavina"},15:{code:"SB",name:"Slavonski Brod-Posavina"},16:{code:"SD",name:"Split-Dalmatia"},17:{code:"VA",name:"Varazdin"},18:{code:"VP",name:"Virovitica-Podravina"},19:{code:"VS",name:"Vukovar-Srijem"},20:{code:"ZK",name:"Zadar-Knin"},21:{code:"ZA",name:"Zagreb"}},CU:{1:{code:"CA",name:"Camaguey"},2:{code:"CD",name:"Ciego de Avila"},3:{code:"CI",name:"Cienfuegos"},4:{code:"CH",name:"Ciudad de La Habana"},5:{code:"GR",name:"Granma"},6:{code:"GU",name:"Guantanamo"},7:{code:"HO",name:"Holguin"},8:{code:"IJ",name:"Isla de la Juventud"},9:{code:"LH",name:"La Habana"},10:{code:"LT",name:"Las Tunas"},11:{code:"MA",name:"Matanzas"},12:{code:"PR",name:"Pinar del Rio"},13:{code:"SS",name:"Sancti Spiritus"},14:{code:"SC",name:"Santiago de Cuba"},15:{code:"VC",name:"Villa Clara"}},CY:{1:{code:"F",name:"Famagusta"},2:{code:"K",name:"Kyrenia"},3:{code:"A",name:"Larnaca"},4:{code:"I",name:"Limassol"},5:{code:"N",name:"Nicosia"},6:{code:"P",name:"Paphos"}},CZ:{1:{code:"A",name:"Hlavní město Praha"},2:{code:"B",name:"Jihomoravský"},3:{code:"C",name:"Jihočeský"},4:{code:"E",name:"Pardubický"},5:{code:"H",name:"Královéhradecký"},6:{code:"J",name:"Vysočina"},7:{code:"K",name:"Karlovarský"},8:{code:"L",name:"Liberecký"},9:{code:"M",name:"Olomoucký"},10:{code:"P",name:"Plzeňský"},11:{code:"S",name:"Středočeský"},12:{code:"T",name:"Moravskoslezský"},13:{code:"U",name:"Ústecký"},14:{code:"Z",name:"Zlínský"}},DK:{1:{code:"AR",name:"Arhus"},2:{code:"BH",name:"Bornholm"},3:{code:"CO",name:"Copenhagen"},4:{code:"FO",name:"Faroe Islands"},5:{code:"FR",name:"Frederiksborg"},6:{code:"FY",name:"Fyn"},7:{code:"KO",name:"Kobenhavn"},8:{code:"NO",name:"Nordjylland"},9:{code:"RI",name:"Ribe"},10:{code:"RK",name:"Ringkobing"},11:{code:"RO",name:"Roskilde"},12:{code:"SO",name:"Sonderjylland"},13:{code:"ST",name:"Storstrom"},14:{code:"VK",name:"Vejle"},15:{code:"VJ",name:"Vestjælland"},16:{code:"VB",name:"Viborg"}},DJ:{1:{code:"S",name:"'Ali Sabih"},2:{code:"K",name:"Dikhil"},3:{code:"J",name:"Djibouti"},4:{code:"O",name:"Obock"},5:{code:"T",name:"Tadjoura"}},DM:{1:{code:"AND",name:"Saint Andrew Parish"},2:{code:"DAV",name:"Saint David Parish"},3:{code:"GEO",name:"Saint George Parish"},4:{code:"JOH",name:"Saint John Parish"},5:{code:"JOS",name:"Saint Joseph Parish"},6:{code:"LUK",name:"Saint Luke Parish"},7:{code:"MAR",name:"Saint Mark Parish"},8:{code:"PAT",name:"Saint Patrick Parish"},9:{code:"PAU",name:"Saint Paul Parish"},10:{code:"PET",name:"Saint Peter Parish"}},DO:{1:{code:"DN",name:"Distrito Nacional"},2:{code:"AZ",name:"Azua"},3:{code:"BC",name:"Baoruco"},4:{code:"BH",name:"Barahona"},5:{code:"DJ",name:"Dajabon"},6:{code:"DU",name:"Duarte"},7:{code:"EL",name:"Elias Pina"},8:{code:"SY",name:"El Seybo"},9:{code:"ET",name:"Espaillat"},10:{code:"HM",name:"Hato Mayor"},11:{code:"IN",name:"Independencia"},12:{code:"AL",name:"La Altagracia"},13:{code:"RO",name:"La Romana"},14:{code:"VE",name:"La Vega"},15:{code:"MT",name:"Maria Trinidad Sanchez"},16:{code:"MN",name:"Monsenor Nouel"},17:{code:"MC",name:"Monte Cristi"},18:{code:"MP",name:"Monte Plata"},19:{code:"PD",name:"Pedernales"},20:{code:"PR",name:"Peravia (Bani)"},21:{code:"PP",name:"Puerto Plata"},22:{code:"SL",name:"Salcedo"},23:{code:"SM",name:"Samana"},24:{code:"SH",name:"Sanchez Ramirez"},25:{code:"SC",name:"San Cristobal"},26:{code:"JO",name:"San Jose de Ocoa"},27:{code:"SJ",name:"San Juan"},28:{code:"PM",name:"San Pedro de Macoris"},29:{code:"SA",name:"Santiago"},30:{code:"ST",name:"Santiago Rodriguez"},31:{code:"SD",name:"Santo Domingo"},32:{code:"VA",name:"Valverde"}},TP:{1:{code:"AL",name:"Aileu"},2:{code:"AN",name:"Ainaro"},3:{code:"BA",name:"Baucau"},4:{code:"BO",name:"Bobonaro"},5:{code:"CO",name:"Cova Lima"},6:{code:"DI",name:"Dili"},7:{code:"ER",name:"Ermera"},8:{code:"LA",name:"Lautem"},9:{code:"LI",name:"Liquica"},10:{code:"MT",name:"Manatuto"},11:{code:"MF",name:"Manufahi"},12:{code:"OE",name:"Oecussi"},13:{code:"VI",name:"Viqueque"}},EC:{1:{code:"AZU",name:"Azuay"},2:{code:"BOL",name:"Bolivar"},3:{code:"CAN",name:"Cañar"},4:{code:"CAR",name:"Carchi"},5:{code:"CHI",name:"Chimborazo"},6:{code:"COT",name:"Cotopaxi"},7:{code:"EOR",name:"El Oro"},8:{code:"ESM",name:"Esmeraldas"},9:{code:"GPS",name:"Galápagos"},10:{code:"GUA",name:"Guayas"},11:{code:"IMB",name:"Imbabura"},12:{code:"LOJ",name:"Loja"},13:{code:"LRO",name:"Los Ríos"},14:{code:"MAN",name:"Manabí"},15:{code:"MSA",name:"Morona Santiago"},16:{code:"NAP",name:"Napo"},17:{code:"ORE",name:"Orellana"},18:{code:"PAS",name:"Pastaza"},19:{code:"PIC",name:"Pichincha"},20:{code:"SUC",name:"Sucumbíos"},21:{code:"TUN",name:"Tungurahua"},22:{code:"ZCH",name:"Zamora Chinchipe"}},EG:{1:{code:"DHY",name:"Ad Daqahliyah"},2:{code:"BAM",name:"Al Bahr al Ahmar"},3:{code:"BHY",name:"Al Buhayrah"},4:{code:"FYM",name:"Al Fayyum"},5:{code:"GBY",name:"Al Gharbiyah"},6:{code:"IDR",name:"Al Iskandariyah"},7:{code:"IML",name:"Al Isma 'iliyah"},8:{code:"JZH",name:"Al Jizah"},9:{code:"MFY",name:"Al Minufiyah"},10:{code:"MNY",name:"Al Minya"},11:{code:"QHR",name:"Al Qahirah"},12:{code:"QLY",name:"Al Qalyubiyah"},13:{code:"WJD",name:"Al Wadi al Jadid"},14:{code:"SHQ",name:"Ash Sharqiyah"},15:{code:"SWY",name:"As Suways"},16:{code:"ASW",name:"Aswan"},17:{code:"ASY",name:"Asyut"},18:{code:"BSW",name:"Bani Suwayf"},19:{code:"BSD",name:"Bur Sa'id"},20:{code:"DMY",name:"Dumyat"},21:{code:"JNS",name:"Janub Sina'"},22:{code:"KSH",name:"Kafr ash Shaykh"},23:{code:"MAT",name:"Matruh"},24:{code:"QIN",name:"Qina"},25:{code:"SHS",name:"Shamal Sina'"},26:{code:"SUH",name:"Suhaj"}},SV:{1:{code:"AH",name:"Ahuachapan"},2:{code:"CA",name:"Cabanas"},3:{code:"CH",name:"Chalatenango"},4:{code:"CU",name:"Cuscatlan"},5:{code:"LB",name:"La Libertad"},6:{code:"PZ",name:"La Paz"},7:{code:"UN",name:"La Union"},8:{code:"MO",name:"Morazan"},9:{code:"SM",name:"San Miguel"},10:{code:"SS",name:"San Salvador"},11:{code:"SV",name:"San Vicente"},12:{code:"SA",name:"Santa Ana"},13:{code:"SO",name:"Sonsonate"},14:{code:"US",name:"Usulutan"}},GQ:{1:{code:"AN",name:"Provincia Annobon"},2:{code:"BN",name:"Provincia Bioko Norte"},3:{code:"BS",name:"Provincia Bioko Sur"},4:{code:"CS",name:"Provincia Centro Sur"},5:{code:"KN",name:"Provincia Kie-Ntem"},6:{code:"LI",name:"Provincia Litoral"},7:{code:"WN",name:"Provincia Wele-Nzas"}},ER:{1:{code:"MA",name:"Central (Maekel)"},2:{code:"KE",name:"Anseba (Keren)"},3:{code:"DK",name:"Southern Red Sea (Debub-Keih-Bah)"},4:{code:"SK",name:"Northern Red Sea (Semien-Keih-Ba)"},5:{code:"DE",name:"Southern (Debub)"},6:{code:"BR",name:"Gash-Barka (Barentu)"}},EE:{1:{code:"HA",name:"Harjumaa (Tallinn)"},2:{code:"HI",name:"Hiiumaa (Kardla)"},3:{code:"IV",name:"Ida-Virumaa (Johvi)"},4:{code:"JA",name:"Jarvamaa (Paide)"},5:{code:"JO",name:"Jogevamaa (Jogeva)"},6:{code:"LV",name:"Laane-Virumaa (Rakvere)"},7:{code:"LA",name:"Laanemaa (Haapsalu)"},8:{code:"PA",name:"Parnumaa (Parnu)"},9:{code:"PO",name:"Polvamaa (Polva)"},10:{code:"RA",name:"Raplamaa (Rapla)"},11:{code:"SA",name:"Saaremaa (Kuessaare)"},12:{code:"TA",name:"Tartumaa (Tartu)"},13:{code:"VA",name:"Valgamaa (Valga)"},14:{code:"VI",name:"Viljandimaa (Viljandi)"},15:{code:"VO",name:"Vorumaa (Voru)"}},ET:{1:{code:"AF",name:"Afar"},2:{code:"AH",name:"Amhara"},3:{code:"BG",name:"Benishangul-Gumaz"},4:{code:"GB",name:"Gambela"},5:{code:"HR",name:"Hariai"},6:{code:"OR",name:"Oromia"},7:{code:"SM",name:"Somali"},8:{code:"SN",name:"Southern Nations - Nationalities"},9:{code:"TG",name:"Tigray"},10:{code:"AA",name:"Addis Ababa"},11:{code:"DD",name:"Dire Dawa"}},FO:{1:{code:"TÛR",name:"Tûrshavnar Kommuna"},2:{code:"KLA",name:"Klaksvík"},3:{code:"RUN",name:"Runavík"},4:{code:"TVØ",name:"Tvøroyri"},5:{code:"FUG",name:"Fuglafjørður"},6:{code:"SUN",name:"Sunda Kommuna"},7:{code:"VáG",name:"Vágur"},8:{code:"NES",name:"Nes"},9:{code:"VES",name:"Vestmanna"},10:{code:"MIð",name:"Miðvágur"},11:{code:"SØR",name:"Sørvágur"},12:{code:"GØT",name:"Gøtu Kommuna"},13:{code:"SJû",name:"Sjûvar Kommuna"},14:{code:"LEI",name:"Leirvík"},15:{code:"SAN",name:"Sandavágur"},16:{code:"HVA",name:"Hvalba"},17:{code:"EIð",name:"Eiði"},18:{code:"KVí",name:"Kvívík"},19:{code:"SAN",name:"Sandur"},20:{code:"SKO",name:"Skopun"},21:{code:"HVA",name:"Hvannasund"},22:{code:"SUM",name:"Sumba"},23:{code:"VIð",name:"Viðareiði"},24:{code:"POR",name:"Porkeri"},25:{code:"SKá",name:"Skálavík"},26:{code:"KUN",name:"Kunoy"},27:{code:"HÚS",name:"HÚsavík"},28:{code:"HOV",name:"Hov"},29:{code:"FáM",name:"Fámjin"},30:{code:"FUN",name:"Funningur"},31:{code:"HÚS",name:"HÚsar"},32:{code:"SKÚ",name:"SkÚvoy"},33:{code:"SVí",name:"Svínoy"},34:{code:"FUG",name:"Fugloy"}},FJ:{1:{code:"C",name:"Central Division"},2:{code:"E",name:"Eastern Division"},3:{code:"N",name:"Northern Division"},4:{code:"R",name:"Rotuma"},5:{code:"W",name:"Western Division"}},FI:{1:{code:"AL",name:"Ahvenanmaan Laani"},2:{code:"ES",name:"Etela-Suomen Laani"},3:{code:"IS",name:"Ita-Suomen Laani"},4:{code:"LS",name:"Lansi-Suomen Laani"},5:{code:"LA",name:"Lapin Lanani"},6:{code:"OU",name:"Oulun Laani"}},FR:{1:{code:"AL",name:"Alsace"},2:{code:"AQ",name:"Aquitaine"},3:{code:"AU",name:"Auvergne"},4:{code:"BR",name:"Brittany"},5:{code:"BU",name:"Burgundy"},6:{code:"CE",name:"Center Loire Valley"},7:{code:"CH",name:"Champagne"},8:{code:"CO",name:"Corse"},9:{code:"FR",name:"France Comte"},10:{code:"LA",name:"Languedoc Roussillon"},11:{code:"LI",name:"Limousin"},12:{code:"LO",name:"Lorraine"},13:{code:"MI",name:"Midi Pyrenees"},14:{code:"NO",name:"Nord Pas de Calais"},15:{code:"NR",name:"Normandy"},16:{code:"PA",name:"Paris / Ile de France"},17:{code:"PI",name:"Picardie"},18:{code:"PO",name:"Poitou Charente"},19:{code:"PR",name:"Provence"},20:{code:"RH",name:"Rhone Alps"},21:{code:"RI",name:"Riviera"},22:{code:"WE",name:"Western Loire Valley"}},FX:{1:{code:"Et",name:"Etranger"},2:{code:"01",name:"Ain"},3:{code:"02",name:"Aisne"},4:{code:"03",name:"Allier"},5:{code:"04",name:"Alpes de Haute Provence"},6:{code:"05",name:"Hautes-Alpes"},7:{code:"06",name:"Alpes Maritimes"},8:{code:"07",name:"Ardèche"},9:{code:"08",name:"Ardennes"},10:{code:"09",name:"Ariège"},11:{code:"10",name:"Aube"},12:{code:"11",name:"Aude"},13:{code:"12",name:"Aveyron"},14:{code:"13",name:"Bouches du Rhône"},15:{code:"14",name:"Calvados"},16:{code:"15",name:"Cantal"},17:{code:"16",name:"Charente"},18:{code:"17",name:"Charente Maritime"},19:{code:"18",name:"Cher"},20:{code:"19",name:"Corrèze"},21:{code:"2A",name:"Corse du Sud"},22:{code:"2B",name:"Haute Corse"},23:{code:"21",name:"Côte d'or"},24:{code:"22",name:"Côtes d'Armor"},25:{code:"23",name:"Creuse"},26:{code:"24",name:"Dordogne"},27:{code:"25",name:"Doubs"},28:{code:"26",name:"Drôme"},29:{code:"27",name:"Eure"},30:{code:"28",name:"Eure et Loir"},31:{code:"29",name:"Finistère"},32:{code:"30",name:"Gard"},33:{code:"31",name:"Haute Garonne"},34:{code:"32",name:"Gers"},35:{code:"33",name:"Gironde"},36:{code:"34",name:"Hérault"},37:{code:"35",name:"Ille et Vilaine"},38:{code:"36",name:"Indre"},39:{code:"37",name:"Indre et Loire"},40:{code:"38",name:"Isére"},41:{code:"39",name:"Jura"},42:{code:"40",name:"Landes"},43:{code:"41",name:"Loir et Cher"},44:{code:"42",name:"Loire"},45:{code:"43",name:"Haute Loire"},46:{code:"44",name:"Loire Atlantique"},47:{code:"45",name:"Loiret"},48:{code:"46",name:"Lot"},49:{code:"47",name:"Lot et Garonne"},50:{code:"48",name:"Lozère"},51:{code:"49",name:"Maine et Loire"},52:{code:"50",name:"Manche"},53:{code:"51",name:"Marne"},54:{code:"52",name:"Haute Marne"},55:{code:"53",name:"Mayenne"},56:{code:"54",name:"Meurthe et Moselle"},57:{code:"55",name:"Meuse"},58:{code:"56",name:"Morbihan"},59:{code:"57",name:"Moselle"},60:{code:"58",name:"Nièvre"},61:{code:"59",name:"Nord"},62:{code:"60",name:"Oise"},63:{code:"61",name:"Orne"},64:{code:"62",name:"Pas de Calais"},65:{code:"63",name:"Puy de Dôme"},66:{code:"64",name:"Pyrenees Atlantique"},67:{code:"65",name:"Hautes Pyrenees"},68:{code:"66",name:"Pyrenees Orientale"},69:{code:"67",name:"Bas Rhin"},70:{code:"68",name:"Haut Rhin"},71:{code:"69",name:"Rhône"},72:{code:"70",name:"Haute Saône"},73:{code:"71",name:"Saône et Loire"},74:{code:"72",name:"Sarthe"},75:{code:"73",name:"Savoie"},76:{code:"74",name:"Haute Savoie"},77:{code:"75",name:"Paris"},78:{code:"76",name:"Seine Martitime"},79:{code:"77",name:"Seine et Marne"},80:{code:"78",name:"Yvelines"},81:{code:"79",name:"Deux Sèvres"},82:{code:"80",name:"Somme"},83:{code:"81",name:"Tarn"},84:{code:"82",name:"Tarn et Garonne"},85:{code:"83",name:"Var"},86:{code:"84",name:"Vaucluse"},87:{code:"85",name:"Vendée"},88:{code:"86",name:"Vienne"},89:{code:"87",name:"Haute Vienne"},90:{code:"88",name:"Vosges"},91:{code:"89",name:"Yonne"},92:{code:"90",name:"Territoire de Belfort"},93:{code:"91",name:"Essonne"},94:{code:"92",name:"Hauts de Seine"},95:{code:"93",name:"Seine St-Denis"},96:{code:"94",name:"Val de Marne"},97:{code:"95",name:"Val d'oise"}},GF:{1:{code:"AWA",name:"Awala-Yalimapo"},2:{code:"MAN",name:"Mana"},3:{code:"SAI",name:"Saint-Laurent-Du-Maroni"},4:{code:"APA",name:"Apatou"},5:{code:"GRA",name:"Grand-Santi"},6:{code:"PAP",name:"Papaïchton"},7:{code:"SAÜ",name:"SaÜl"},8:{code:"MAR",name:"Maripasoula"},9:{code:"CAM",name:"Camopi"},10:{code:"SAI",name:"Saint-Georges"},11:{code:"OUA",name:"Ouanary"},12:{code:"RéG",name:"Régina"},13:{code:"ROU",name:"Roura"},14:{code:"SAI",name:"Saint-élie"},15:{code:"IRA",name:"Iracoubo"},16:{code:"SIN",name:"Sinnamary"},17:{code:"KOU",name:"Kourou"},18:{code:"MAC",name:"Macouria"},19:{code:"MON",name:"Montsinéry-Tonnegrande"},20:{code:"MAT",name:"Matoury"},21:{code:"CAY",name:"Cayenne"},22:{code:"REM",name:"Remire-Montjoly"}},PF:{1:{code:"M",name:"Archipel des Marquises"},2:{code:"T",name:"Archipel des Tuamotu"},3:{code:"I",name:"Archipel des Tubuai"},4:{code:"V",name:"Iles du Vent"},5:{code:"S",name:"Iles Sous-le-Vent"}},TF:{1:{code:"C",name:"Iles Crozet"},2:{code:"K",name:"Iles Kerguelen"},3:{code:"A",name:"Ile Amsterdam"},4:{code:"P",name:"Ile Saint-Paul"},5:{code:"D",name:"Adelie Land"}},GA:{1:{code:"ES",name:"Estuaire"},2:{code:"HO",name:"Haut-Ogooue"},3:{code:"MO",name:"Moyen-Ogooue"},4:{code:"NG",name:"Ngounie"},5:{code:"NY",name:"Nyanga"},6:{code:"OI",name:"Ogooue-Ivindo"},7:{code:"OL",name:"Ogooue-Lolo"},8:{code:"OM",name:"Ogooue-Maritime"},9:{code:"WN",name:"Woleu-Ntem"}},GM:{1:{code:"BJ",name:"Banjul"},2:{code:"BS",name:"Basse"},3:{code:"BR",name:"Brikama"},4:{code:"JA",name:"Janjangbure"},5:{code:"KA",name:"Kanifeng"},6:{code:"KE",name:"Kerewan"},7:{code:"KU",name:"Kuntaur"},8:{code:"MA",name:"Mansakonko"},9:{code:"LR",name:"Lower River"},10:{code:"CR",name:"Central River"},11:{code:"NB",name:"North Bank"},12:{code:"UR",name:"Upper River"},13:{code:"WE",name:"Western"}},GE:{1:{code:"AB",name:"Abkhazia"},2:{code:"AJ",name:"Ajaria"},3:{code:"GU",name:"Guria"},4:{code:"IM",name:"Imereti"},5:{code:"KA",name:"Kakheti"},6:{code:"KK",name:"Kvemo Kartli"},7:{code:"MM",name:"Mtskheta-Mtianeti"},8:{code:"RL",name:"Racha Lechkhumi and Kvemo Svanet"},9:{code:"SJ",name:"Samtskhe-Javakheti"},10:{code:"SK",name:"Shida Kartli"},11:{code:"SZ",name:"Samegrelo-Zemo Svaneti"},12:{code:"TB",name:"Tbilisi"}},DE:{1:{code:"BAW",name:"Baden-Württemberg"},2:{code:"BAY",name:"Bayern"},3:{code:"BER",name:"Berlin"},4:{code:"BRG",name:"Brandenburg"},5:{code:"BRE",name:"Bremen"},6:{code:"HAM",name:"Hamburg"},7:{code:"HES",name:"Hessen"},8:{code:"MEC",name:"Mecklenburg-Vorpommern"},9:{code:"NDS",name:"Niedersachsen"},10:{code:"NRW",name:"Nordrhein-Westfalen"},11:{code:"RHE",name:"Rheinland-Pfalz"},12:{code:"SAR",name:"Saarland"},13:{code:"SAS",name:"Sachsen"},14:{code:"SAC",name:"Sachsen-Anhalt"},15:{code:"SCN",name:"Schleswig-Holstein"},16:{code:"THE",name:"Thüringen"}},GH:{1:{code:"AS",name:"Ashanti Region"},2:{code:"BA",name:"Brong-Ahafo Region"},3:{code:"CE",name:"Central Region"},4:{code:"EA",name:"Eastern Region"},5:{code:"GA",name:"Greater Accra Region"},6:{code:"NO",name:"Northern Region"},7:{code:"UE",name:"Upper East Region"},8:{code:"UW",name:"Upper West Region"},9:{code:"VO",name:"Volta Region"},10:{code:"WE",name:"Western Region"}},GI:{1:{code:"EAS",name:"East Side"},2:{code:"NOR",name:"North District"},3:{code:"REC",name:"Reclamation Areas"},4:{code:"SAN",name:"Sandpits Area"},5:{code:"SOU",name:"South District"},6:{code:"TOW",name:"Town Area"},7:{code:"UPP",name:"Upper Town"},8:{code:"OTH",name:"Other"}},GR:{1:{code:"AT",name:"Attica"},2:{code:"CN",name:"Central Greece"},3:{code:"CM",name:"Central Macedonia"},4:{code:"CR",name:"Crete"},5:{code:"EM",name:"East Macedonia and Thrace"},6:{code:"EP",name:"Epirus"},7:{code:"II",name:"Ionian Islands"},8:{code:"NA",name:"North Aegean"},9:{code:"PP",name:"Peloponnesos"},10:{code:"SA",name:"South Aegean"},11:{code:"TH",name:"Thessaly"},12:{code:"WG",name:"West Greece"},13:{code:"WM",name:"West Macedonia"}},GL:{1:{code:"A",name:"Avannaa"},2:{code:"T",name:"Tunu"},3:{code:"K",name:"Kitaa"}},86:{1:{code:"A",name:"Saint Andrew"},2:{code:"D",name:"Saint David"},3:{code:"G",name:"Saint George"},4:{code:"J",name:"Saint John"},5:{code:"M",name:"Saint Mark"},6:{code:"P",name:"Saint Patrick"},7:{code:"C",name:"Carriacou"},8:{code:"Q",name:"Petit Martinique"}},GP:{1:{code:"ARR",name:"Arrondissements Of The Guadeloup"},2:{code:"CAN",name:"Cantons Of The Guadeloup Depart"},3:{code:"COM",name:"Communes Of The Guadeloup Depart"}},GU:{1:{code:"AGA",name:"Agana Heights"},2:{code:"AGA",name:"Agat"},3:{code:"ASA",name:"Asan Maina"},4:{code:"BAR",name:"Barrigada"},5:{code:"CHA",name:"Chalan Pago Ordot"},6:{code:"DED",name:"Dededo"},7:{code:"HAG",name:"HagÅtña"},8:{code:"INA",name:"Inarajan"},9:{code:"MAN",name:"Mangilao"},10:{code:"MER",name:"Merizo"},11:{code:"MON",name:"Mongmong Toto Maite"},12:{code:"PIT",name:"Piti"},13:{code:"SAN",name:"Santa Rita"},14:{code:"SIN",name:"Sinajana"},15:{code:"TAL",name:"Talofofo"},16:{code:"TAM",name:"Tamuning"},17:{code:"UMA",name:"Umatac"},18:{code:"YIG",name:"Yigo"},19:{code:"YON",name:"Yona"}},GT:{1:{code:"AV",name:"Alta Verapaz"},2:{code:"BV",name:"Baja Verapaz"},3:{code:"CM",name:"Chimaltenango"},4:{code:"CQ",name:"Chiquimula"},5:{code:"PE",name:"El Peten"},6:{code:"PR",name:"El Progreso"},7:{code:"QC",name:"El Quiche"},8:{code:"ES",name:"Escuintla"},9:{code:"GU",name:"Guatemala"},10:{code:"HU",name:"Huehuetenango"},11:{code:"IZ",name:"Izabal"},12:{code:"JA",name:"Jalapa"},13:{code:"JU",name:"Jutiapa"},14:{code:"QZ",name:"Quetzaltenango"},15:{code:"RE",name:"Retalhuleu"},16:{code:"ST",name:"Sacatepequez"},17:{code:"SM",name:"San Marcos"},18:{code:"SR",name:"Santa Rosa"},19:{code:"SO",name:"Solola"},20:{code:"SU",name:"Suchitepequez"},21:{code:"TO",name:"Totonicapan"},22:{code:"ZA",name:"Zacapa"}},GN:{1:{code:"CNK",name:"Conakry"},2:{code:"BYL",name:"Beyla"},3:{code:"BFA",name:"Boffa"},4:{code:"BOK",name:"Boke"},5:{code:"COY",name:"Coyah"},6:{code:"DBL",name:"Dabola"},7:{code:"DLB",name:"Dalaba"},8:{code:"DGR",name:"Dinguiraye"},9:{code:"DBR",name:"Dubreka"},10:{code:"FRN",name:"Faranah"},11:{code:"FRC",name:"Forecariah"},12:{code:"FRI",name:"Fria"},13:{code:"GAO",name:"Gaoual"},14:{code:"GCD",name:"Gueckedou"},15:{code:"KNK",name:"Kankan"},16:{code:"KRN",name:"Kerouane"},17:{code:"KND",name:"Kindia"},18:{code:"KSD",name:"Kissidougou"},19:{code:"KBA",name:"Koubia"},20:{code:"KDA",name:"Koundara"},21:{code:"KRA",name:"Kouroussa"},22:{code:"LAB",name:"Labe"},23:{code:"LLM",name:"Lelouma"},24:{code:"LOL",name:"Lola"},25:{code:"MCT",name:"Macenta"},26:{code:"MAL",name:"Mali"},27:{code:"MAM",name:"Mamou"},28:{code:"MAN",name:"Mandiana"},29:{code:"NZR",name:"Nzerekore"},30:{code:"PIT",name:"Pita"},31:{code:"SIG",name:"Siguiri"},32:{code:"TLM",name:"Telimele"},33:{code:"TOG",name:"Tougue"},34:{code:"YOM",name:"Yomou"}},GW:{1:{code:"BF",name:"Bafata Region"},2:{code:"BB",name:"Biombo Region"},3:{code:"BS",name:"Bissau Region"},4:{code:"BL",name:"Bolama Region"},5:{code:"CA",name:"Cacheu Region"},6:{code:"GA",name:"Gabu Region"},7:{code:"OI",name:"Oio Region"},8:{code:"QU",name:"Quinara Region"},9:{code:"TO",name:"Tombali Region"}},GY:{1:{code:"BW",name:"Barima-Waini"},2:{code:"CM",name:"Cuyuni-Mazaruni"},3:{code:"DM",name:"Demerara-Mahaica"},4:{code:"EC",name:"East Berbice-Corentyne"},5:{code:"EW",name:"Essequibo Islands-West Demerara"},6:{code:"MB",name:"Mahaica-Berbice"},7:{code:"PM",name:"Pomeroon-Supenaam"},8:{code:"PI",name:"Potaro-Siparuni"},9:{code:"UD",name:"Upper Demerara-Berbice"},10:{code:"UT",name:"Upper Takutu-Upper Essequibo"}},HT:{1:{code:"AR",name:"Artibonite"},2:{code:"CE",name:"Centre"},3:{code:"GA",name:"Grand'Anse"},4:{code:"ND",name:"Nord"},5:{code:"NE",name:"Nord-Est"},6:{code:"NO",name:"Nord-Ouest"},7:{code:"OU",name:"Ouest"},8:{code:"SD",name:"Sud"},9:{code:"SE",name:"Sud-Est"}},HM:{1:{code:"F",name:"Flat Island"},2:{code:"M",name:"McDonald Island"},3:{code:"S",name:"Shag Island"},4:{code:"H",name:"Heard Island"}},HN:{1:{code:"AT",name:"Atlantida"},2:{code:"CH",name:"Choluteca"},3:{code:"CL",name:"Colon"},4:{code:"CM",name:"Comayagua"},5:{code:"CP",name:"Copan"},6:{code:"CR",name:"Cortes"},7:{code:"PA",name:"El Paraiso"},8:{code:"FM",name:"Francisco Morazan"},9:{code:"GD",name:"Gracias a Dios"},10:{code:"IN",name:"Intibuca"},11:{code:"IB",name:"Islas de la Bahia (Bay Islands)"},12:{code:"PZ",name:"La Paz"},13:{code:"LE",name:"Lempira"},14:{code:"OC",name:"Ocotepeque"},15:{code:"OL",name:"Olancho"},16:{code:"SB",name:"Santa Barbara"},17:{code:"VA",name:"Valle"},18:{code:"YO",name:"Yoro"}},HK:{1:{code:"HCW",name:"Central and Western Hong Kong Is"},2:{code:"HEA",name:"Eastern Hong Kong Island"},3:{code:"HSO",name:"Southern Hong Kong Island"},4:{code:"HWC",name:"Wan Chai Hong Kong Island"},5:{code:"KKC",name:"Kowloon City Kowloon"},6:{code:"KKT",name:"Kwun Tong Kowloon"},7:{code:"KSS",name:"Sham Shui Po Kowloon"},8:{code:"KWT",name:"Wong Tai Sin Kowloon"},9:{code:"KYT",name:"Yau Tsim Mong Kowloon"},10:{code:"NIS",name:"Islands New Territories"},11:{code:"NKT",name:"Kwai Tsing New Territories"},12:{code:"NNO",name:"North New Territories"},13:{code:"NSK",name:"Sai Kung New Territories"},14:{code:"NST",name:"Sha Tin New Territories"},15:{code:"NTP",name:"Tai Po New Territories"},16:{code:"NTW",name:"Tsuen Wan New Territories"},17:{code:"NTM",name:"Tuen Mun New Territories"},18:{code:"NYL",name:"Yuen Long New Territories"}},HU:{1:{code:"BK",name:"Bacs-Kiskun"},2:{code:"BA",name:"Baranya"},3:{code:"BE",name:"Bekes"},4:{code:"BS",name:"Bekescsaba"},5:{code:"BZ",name:"Borsod-Abauj-Zemplen"},6:{code:"BU",name:"Budapest"},7:{code:"CS",name:"Csongrad"},8:{code:"DE",name:"Debrecen"},9:{code:"DU",name:"Dunaujvaros"},10:{code:"EG",name:"Eger"},11:{code:"FE",name:"Fejer"},12:{code:"GY",name:"Gyor"},13:{code:"GM",name:"Gyor-Moson-Sopron"},14:{code:"HB",name:"Hajdu-Bihar"},15:{code:"HE",name:"Heves"},16:{code:"HO",name:"Hodmezovasarhely"},17:{code:"JN",name:"Jasz-Nagykun-Szolnok"},18:{code:"KA",name:"Kaposvar"},19:{code:"KE",name:"Kecskemet"},20:{code:"KO",name:"Komarom-Esztergom"},21:{code:"MI",name:"Miskolc"},22:{code:"NA",name:"Nagykanizsa"},23:{code:"NO",name:"Nograd"},24:{code:"NY",name:"Nyiregyhaza"},25:{code:"PE",name:"Pecs"},26:{code:"PS",name:"Pest"},27:{code:"SO",name:"Somogy"},28:{code:"SP",name:"Sopron"},29:{code:"SS",name:"Szabolcs-Szatmar-Bereg"},30:{code:"SZ",name:"Szeged"},31:{code:"SE",name:"Szekesfehervar"},32:{code:"SL",name:"Szolnok"},33:{code:"SM",name:"Szombathely"},34:{code:"TA",name:"Tatabanya"},35:{code:"TO",name:"Tolna"},36:{code:"VA",name:"Vas"},37:{code:"VE",name:"Veszprem"},38:{code:"ZA",name:"Zala"},39:{code:"ZZ",name:"Zalaegerszeg"}},IS:{1:{code:"AL",name:"Austurland"},2:{code:"HF",name:"Hofuoborgarsvaeoi"},3:{code:"NE",name:"Norourland eystra"},4:{code:"NV",name:"Norourland vestra"},5:{code:"SL",name:"Suourland"},6:{code:"SN",name:"Suournes"},7:{code:"VF",name:"Vestfiroir"},8:{code:"VL",name:"Vesturland"}},IN:{1:{code:"AN",name:"Andaman and Nicobar Islands"},2:{code:"AP",name:"Andhra Pradesh"},3:{code:"AR",name:"Arunachal Pradesh"},4:{code:"AS",name:"Assam"},5:{code:"BI",name:"Bihar"},6:{code:"CH",name:"Chandigarh"},7:{code:"DA",name:"Dadra and Nagar Haveli"},8:{code:"DM",name:"Daman and Diu"},9:{code:"DE",name:"Delhi"},10:{code:"GO",name:"Goa"},11:{code:"GU",name:"Gujarat"},12:{code:"HA",name:"Haryana"},13:{code:"HP",name:"Himachal Pradesh"},14:{code:"JA",name:"Jammu and Kashmir"},15:{code:"KA",name:"Karnataka"},16:{code:"KE",name:"Kerala"},17:{code:"LI",name:"Lakshadweep Islands"},18:{code:"MP",name:"Madhya Pradesh"},19:{code:"MA",name:"Maharashtra"},20:{code:"MN",name:"Manipur"},21:{code:"ME",name:"Meghalaya"},22:{code:"MI",name:"Mizoram"},23:{code:"NA",name:"Nagaland"},24:{code:"OR",name:"Orissa"},25:{code:"PO",name:"Pondicherry"},26:{code:"PU",name:"Punjab"},27:{code:"RA",name:"Rajasthan"},28:{code:"SI",name:"Sikkim"},29:{code:"TN",name:"Tamil Nadu"},30:{code:"TR",name:"Tripura"},31:{code:"UP",name:"Uttar Pradesh"},32:{code:"WB",name:"West Bengal"}},ID:{1:{code:"DA",name:"Daista Aceh"},2:{code:"SU",name:"Sumatera Utara"},3:{code:"SB",name:"Sumatera Barat"},4:{code:"SI",name:"Riau"},5:{code:"JA",name:"Jambi"},6:{code:"SS",name:"Sumatera Selatan"},7:{code:"BE",name:"Bengkulu"},8:{code:"LA",name:"Lampung"},9:{code:"JK",name:"Dki Jakarta"},10:{code:"JB",name:"Jawa Barat"},11:{code:"JT",name:"Jawa Tengah"},12:{code:"DY",name:"Daista Yogyakarta"},13:{code:"JT",name:"Jawa Timur"},14:{code:"KB",name:"Kalimantan Barat"},15:{code:"KT",name:"Kalimantan Tengah"},16:{code:"KI",name:"Kalimantan Timur"},17:{code:"KS",name:"Kalimantan Selatan"},18:{code:"BA",name:"Bali"},19:{code:"NB",name:"Nusa Tenggara Barat"},20:{code:"NT",name:"Nusa Tenggara Timur"},21:{code:"SN",name:"Sulawesi Selatan"},22:{code:"ST",name:"Sulawesi Tengah"},23:{code:"SA",name:"Sulawesi Utara"},24:{code:"SG",name:"Sulawesi Tenggara"},25:{code:"MA",name:"Maluku"},26:{code:"MU",name:"Maluku Utara"},27:{code:"IJ",name:"Irian Jaya Timur"},28:{code:"IT",name:"Irian Jaya Tengah"},29:{code:"IB",name:"Irian Jawa Barat"},30:{code:"BT",name:"Banten"},31:{code:"BB",name:"Bangka Belitung"},32:{code:"GO",name:"Gorontalo"}},IR:{1:{code:"ARD",name:"Ardabil"},2:{code:"BSH",name:"Bushehr"},3:{code:"CMB",name:"Chahar Mahaal and Bakhtiari"},4:{code:"EAZ",name:"East Azarbaijan"},5:{code:"EFH",name:"Esfahan"},6:{code:"FAR",name:"Fars"},7:{code:"GIL",name:"Gilan"},8:{code:"GLS",name:"Golestan"},9:{code:"HMD",name:"Hamadan"},10:{code:"HRM",name:"Hormozgan"},11:{code:"ILM",name:"Ilam"},12:{code:"KBA",name:"Kohkiluyeh and Buyer Ahmad"},13:{code:"KRB",name:"Kerman"},14:{code:"KRD",name:"Kurdistan"},15:{code:"KRM",name:"Kermanshah"},16:{code:"KZT",name:"Khuzestan"},17:{code:"LRS",name:"Lorestan"},18:{code:"MKZ",name:"Markazi"},19:{code:"MZD",name:"Mazandaran"},20:{code:"NKH",name:"North Khorasan"},21:{code:"QAZ",name:"Qazvin"},22:{code:"QOM",name:"Qom"},23:{code:"RKH",name:"Razavi Khorasan"},24:{code:"SBL",name:"Sistan and Baluchistan"},25:{code:"SKH",name:"South Khorasan"},26:{code:"SMN",name:"Semnan"},27:{code:"TEH",name:"Tehran"},28:{code:"WEZ",name:"West Azarbaijan"},29:{code:"YZD",name:"Yazd"},30:{code:"ZAN",name:"Zanjan"}},IQ:{1:{code:"AB",name:"Al Anbar"},2:{code:"AL",name:"Arbil"},3:{code:"BA",name:"Al Basrah"},4:{code:"BB",name:"Babil"},5:{code:"BD",name:"Baghdad"},6:{code:"DH",name:"Dahuk"},7:{code:"DQ",name:"Dhi Qar"},8:{code:"DY",name:"Diyala"},9:{code:"KB",name:"Al Karbala"},10:{code:"MU",name:"Al Muthanna"},11:{code:"MY",name:"Maysan"},12:{code:"NJ",name:"An Najaf"},13:{code:"NN",name:"Ninawa"},14:{code:"QA",name:"Al Qadisyah"},15:{code:"SD",name:"Salah ad Din"},16:{code:"SL",name:"As Sulaymaniyah"},17:{code:"TM",name:"At Ta'mim"},18:{code:"WS",name:"Wasit"}},IE:{1:{code:"CA",name:"Carlow"},2:{code:"CV",name:"Cavan"},3:{code:"CL",name:"Clare"},4:{code:"CO",name:"Cork"},5:{code:"DO",name:"Donegal"},6:{code:"DU",name:"Dublin"},7:{code:"GA",name:"Galway"},8:{code:"KE",name:"Kerry"},9:{code:"KI",name:"Kildare"},10:{code:"KL",name:"Kilkenny"},11:{code:"LA",name:"Laois"},12:{code:"LE",name:"Leitrim"},13:{code:"LI",name:"Limerick"},14:{code:"LO",name:"Longford"},15:{code:"LU",name:"Louth"},16:{code:"MA",name:"Mayo"},17:{code:"ME",name:"Meath"},18:{code:"MO",name:"Monaghan"},19:{code:"OF",name:"Offaly"},20:{code:"RO",name:"Roscommon"},21:{code:"SL",name:"Sligo"},22:{code:"TI",name:"Tipperary"},23:{code:"WA",name:"Waterford"},24:{code:"WE",name:"Westmeath"},25:{code:"WX",name:"Wexford"},26:{code:"WI",name:"Wicklow"}},IL:{1:{code:"BS",name:"Be'er Sheva"},2:{code:"BH",name:"Bika'at Hayarden"},3:{code:"EA",name:"Eilat and Arava"},4:{code:"GA",name:"Galil"},5:{code:"HA",name:"Haifa"},6:{code:"JM",name:"Jehuda Mountains"},7:{code:"JE",name:"Jerusalem"},8:{code:"NE",name:"Negev"},10:{code:"SE",name:"Semaria"},11:{code:"SH",name:"Sharon"},12:{code:"TA",name:"Tel Aviv (Gosh Dan)"}},IT:{1:{code:"AG",name:"Agrigento"},2:{code:"AL",name:"Alessandria"},3:{code:"AN",name:"Ancona"},4:{code:"AO",name:"Aosta"},5:{code:"AR",name:"Arezzo"},6:{code:"AP",name:"Ascoli Piceno"},7:{code:"AT",name:"Asti"},8:{code:"AV",name:"Avellino"},9:{code:"BA",name:"Bari"},10:{code:"BL",name:"Belluno"},11:{code:"BN",name:"Benevento"},12:{code:"BG",name:"Bergamo"},13:{code:"BI",name:"Biella"},14:{code:"BO",name:"Bologna"},15:{code:"BZ",name:"Bolzano"},16:{code:"BS",name:"Brescia"},17:{code:"BR",name:"Brindisi"},18:{code:"CA",name:"Cagliari"},19:{code:"CL",name:"Caltanissetta"},20:{code:"CB",name:"Campobasso"},21:{code:"CE",name:"Caserta"},22:{code:"CT",name:"Catania"},23:{code:"CZ",name:"Catanzaro"},24:{code:"CH",name:"Chieti"},25:{code:"CO",name:"Como"},26:{code:"CS",name:"Cosenza"},27:{code:"CR",name:"Cremona"},28:{code:"KR",name:"Crotone"},29:{code:"CN",name:"Cuneo"},30:{code:"EN",name:"Enna"},31:{code:"FE",name:"Ferrara"},32:{code:"FI",name:"Firenze"},33:{code:"FG",name:"Foggia"},34:{code:"FO",name:"Forlì"},35:{code:"FR",name:"Frosinone"},36:{code:"GE",name:"Genova"},37:{code:"GO",name:"Gorizia"},38:{code:"GR",name:"Grosseto"},39:{code:"IM",name:"Imperia"},40:{code:"IS",name:"Isernia"},41:{code:"AQ",name:"Aquila"},42:{code:"SP",name:"La Spezia"},43:{code:"LT",name:"Latina"},44:{code:"LE",name:"Lecce"},45:{code:"LC",name:"Lecco"},46:{code:"LI",name:"Livorno"},47:{code:"LO",name:"Lodi"},48:{code:"LU",name:"Lucca"},49:{code:"MC",name:"Macerata"},50:{code:"MN",name:"Mantova"},51:{code:"MS",name:"Massa-Carrara"},52:{code:"MT",name:"Matera"},53:{code:"ME",name:"Messina"},54:{code:"MI",name:"Milano"},55:{code:"MO",name:"Modena"},56:{code:"NA",name:"Napoli"},57:{code:"NO",name:"Novara"},58:{code:"NU",name:"Nuoro"},59:{code:"OR",name:"Oristano"},60:{code:"PD",name:"Padova"},61:{code:"PA",name:"Palermo"},62:{code:"PR",name:"Parma"},63:{code:"PG",name:"Perugia"},64:{code:"PV",name:"Pavia"},65:{code:"PU",name:"Pesaro Urbino"},66:{code:"PE",name:"Pescara"},67:{code:"PC",name:"Piacenza"},68:{code:"PI",name:"Pisa"},69:{code:"PT",name:"Pistoia"},70:{code:"PN",name:"Pordenone"},71:{code:"PZ",name:"Potenza"},72:{code:"PO",name:"Prato"},73:{code:"RG",name:"Ragusa"},74:{code:"RA",name:"Ravenna"},75:{code:"RC",name:"Reggio Calabria"},76:{code:"RE",name:"Reggio Emilia"},77:{code:"RI",name:"Rieti"},78:{code:"RN",name:"Rimini"},79:{code:"RM",name:"Roma"},80:{code:"RO",name:"Rovigo"},81:{code:"SA",name:"Salerno"},82:{code:"SS",name:"Sassari"},83:{code:"SV",name:"Savona"},84:{code:"SI",name:"Siena"},85:{code:"SR",name:"Siracusa"},86:{code:"SO",name:"Sondrio"},87:{code:"TA",name:"Taranto"},88:{code:"TE",name:"Teramo"},89:{code:"TR",name:"Terni"},90:{code:"TO",name:"Torino"},91:{code:"TP",name:"Trapani"},92:{code:"TN",name:"Trento"},93:{code:"TV",name:"Treviso"},94:{code:"TS",name:"Trieste"},95:{code:"UD",name:"Udine"},96:{code:"VA",name:"Varese"},97:{code:"VE",name:"Venezia"},98:{code:"VB",name:"Verbania"},99:{code:"VC",name:"Vercelli"},100:{code:"VR",name:"Verona"},101:{code:"VV",name:"Vibo Valentia"},102:{code:"VI",name:"Vicenza"},103:{code:"VT",name:"Viterbo"},104:{code:"CI",name:"Carbonia-Iglesias"},105:{code:"VS",name:"Medio Campidano"},106:{code:"OG",name:"Ogliastra"},107:{code:"OT",name:"Olbia-Tempio"},108:{code:"MB",name:"Monza e Brianza"},109:{code:"FM",name:"Fermo"},110:{code:"BT",name:"Barletta-Andria-Trani"}},JM:{1:{code:"CLA",name:"Clarendon Parish"},2:{code:"HAN",name:"Hanover Parish"},3:{code:"KIN",name:"Kingston Parish"},4:{code:"MAN",name:"Manchester Parish"},5:{code:"POR",name:"Portland Parish"},6:{code:"AND",name:"Saint Andrew Parish"},7:{code:"ANN",name:"Saint Ann Parish"},8:{code:"CAT",name:"Saint Catherine Parish"},9:{code:"ELI",name:"Saint Elizabeth Parish"},10:{code:"JAM",name:"Saint James Parish"},11:{code:"MAR",name:"Saint Mary Parish"},12:{code:"THO",name:"Saint Thomas Parish"},13:{code:"TRL",name:"Trelawny Parish"},14:{code:"WML",name:"Westmoreland Parish"}},JP:{1:{code:"AI",name:"Aichi"},2:{code:"AK",name:"Akita"},3:{code:"AO",name:"Aomori"},4:{code:"CH",name:"Chiba"},5:{code:"EH",name:"Ehime"},6:{code:"FK",name:"Fukui"},7:{code:"FU",name:"Fukuoka"},8:{code:"FS",name:"Fukushima"},9:{code:"GI",name:"Gifu"},10:{code:"GU",name:"Gumma"},11:{code:"HI",name:"Hiroshima"},12:{code:"HO",name:"Hokkaido"},13:{code:"HY",name:"Hyogo"},14:{code:"IB",name:"Ibaraki"},15:{code:"IS",name:"Ishikawa"},16:{code:"IW",name:"Iwate"},17:{code:"KA",name:"Kagawa"},18:{code:"KG",name:"Kagoshima"},19:{code:"KN",name:"Kanagawa"},20:{code:"KO",name:"Kochi"},21:{code:"KU",name:"Kumamoto"},22:{code:"KY",name:"Kyoto"},23:{code:"MI",name:"Mie"},24:{code:"MY",name:"Miyagi"},25:{code:"MZ",name:"Miyazaki"},26:{code:"NA",name:"Nagano"},27:{code:"NG",name:"Nagasaki"},28:{code:"NR",name:"Nara"},29:{code:"NI",name:"Niigata"},30:{code:"OI",name:"Oita"},31:{code:"OK",name:"Okayama"},32:{code:"ON",name:"Okinawa"},33:{code:"OS",name:"Osaka"},34:{code:"SA",name:"Saga"},35:{code:"SI",name:"Saitama"},36:{code:"SH",name:"Shiga"},37:{code:"SM",name:"Shimane"},38:{code:"SZ",name:"Shizuoka"},39:{code:"TO",name:"Tochigi"},40:{code:"TS",name:"Tokushima"},41:{code:"TK",name:"Tokyo"},42:{code:"TT",name:"Tottori"},43:{code:"TY",name:"Toyama"},44:{code:"WA",name:"Wakayama"},45:{code:"YA",name:"Yamagata"},46:{code:"YM",name:"Yamaguchi"},47:{code:"YN",name:"Yamanashi"}},JO:{1:{code:"AM",name:"'Amman"},2:{code:"AJ",name:"Ajlun"},3:{code:"AA",name:"Al'Aqabah"},4:{code:"AB",name:"Al Balqa'"},5:{code:"AK",name:"Al Karak"},6:{code:"AL",name:"Al Mafraq"},7:{code:"AT",name:"At Tafilah"},8:{code:"AZ",name:"Az Zarqa'"},9:{code:"IR",name:"Irbid"},10:{code:"JA",name:"Jarash"},11:{code:"MA",name:"Ma'an"},12:{code:"MD",name:"Madaba"}},KZ:{1:{code:"AL",name:"Almaty"},2:{code:"AC",name:"Almaty City"},3:{code:"AM",name:"Aqmola"},4:{code:"AQ",name:"Aqtobe"},5:{code:"AS",name:"Astana City"},6:{code:"AT",name:"Atyrau"},7:{code:"BA",name:"Batys Qazaqstan"},8:{code:"BY",name:"Bayqongyr City"},9:{code:"MA",name:"Mangghystau"},10:{code:"ON",name:"Ongtustik Qazaqstan"},11:{code:"PA",name:"Pavlodar"},12:{code:"QA",name:"Qaraghandy"},13:{code:"QO",name:"Qostanay"},14:{code:"QY",name:"Qyzylorda"},15:{code:"SH",name:"Shyghys Qazaqstan"},16:{code:"SO",name:"Soltustik Qazaqstan"},17:{code:"ZH",name:"Zhambyl"}},KE:{1:{code:"CE",name:"Central"},2:{code:"CO",name:"Coast"},3:{code:"EA",name:"Eastern"},4:{code:"NA",name:"Nairobi Area"},5:{code:"NE",name:"North Eastern"},6:{code:"NY",name:"Nyanza"},7:{code:"RV",name:"Rift Valley"},8:{code:"WE",name:"Western"}},KI:{1:{code:"AG",name:"Abaiang"},2:{code:"AM",name:"Abemama"},3:{code:"AK",name:"Aranuka"},4:{code:"AO",name:"Arorae"},5:{code:"BA",name:"Banaba"},6:{code:"BE",name:"Beru"},7:{code:"bT",name:"Butaritari"},8:{code:"KA",name:"Kanton"},9:{code:"KR",name:"Kiritimati"},10:{code:"KU",name:"Kuria"},11:{code:"MI",name:"Maiana"},12:{code:"MN",name:"Makin"},13:{code:"ME",name:"Marakei"},14:{code:"NI",name:"Nikunau"},15:{code:"NO",name:"Nonouti"},16:{code:"ON",name:"Onotoa"},17:{code:"TT",name:"Tabiteuea"},18:{code:"TR",name:"Tabuaeran"},19:{code:"TM",name:"Tamana"},20:{code:"TW",name:"Tarawa"},21:{code:"TE",name:"Teraina"}},KP:{1:{code:"CHA",name:"Chagang-do"},2:{code:"HAB",name:"Hamgyong-bukto"},3:{code:"HAN",name:"Hamgyong-namdo"},4:{code:"HWB",name:"Hwanghae-bukto"},5:{code:"HWN",name:"Hwanghae-namdo"},6:{code:"KAN",name:"Kangwon-do"},7:{code:"PYB",name:"P'yongan-bukto"},8:{code:"PYN",name:"P'yongan-namdo"},9:{code:"YAN",name:"Ryanggang-do (Yanggang-do)"},10:{code:"NAJ",name:"Rason Directly Governed City"},11:{code:"PYO",name:"P'yongyang Special City"}},KR:{1:{code:"CO",name:"Ch'ungch'ong-bukto"},2:{code:"CH",name:"Ch'ungch'ong-namdo"},3:{code:"CD",name:"Cheju-do"},4:{code:"CB",name:"Cholla-bukto"},5:{code:"CN",name:"Cholla-namdo"},6:{code:"IG",name:"Inch'on-gwangyoksi"},7:{code:"KA",name:"Kangwon-do"},8:{code:"KG",name:"Kwangju-gwangyoksi"},9:{code:"KD",name:"Kyonggi-do"},10:{code:"KB",name:"Kyongsang-bukto"},11:{code:"KN",name:"Kyongsang-namdo"},12:{code:"PG",name:"Pusan-gwangyoksi"},13:{code:"SO",name:"Soul-t'ukpyolsi"},14:{code:"TA",name:"Taegu-gwangyoksi"},15:{code:"TG",name:"Taejon-gwangyoksi"}},KW:{1:{code:"AL",name:"Al'Asimah"},2:{code:"AA",name:"Al Ahmadi"},3:{code:"AF",name:"Al Farwaniyah"},4:{code:"AJ",name:"Al Jahra'"},5:{code:"HA",name:"Hawalli"}},KG:{1:{code:"GB",name:"Bishkek"},2:{code:"B",name:"Batken"},3:{code:"C",name:"Chu"},4:{code:"J",name:"Jalal-Abad"},5:{code:"N",name:"Naryn"},6:{code:"O",name:"Osh"},7:{code:"T",name:"Talas"},8:{code:"Y",name:"Ysyk-Kol"}},LA:{1:{code:"VT",name:"Vientiane"},2:{code:"AT",name:"Attapu"},3:{code:"BK",name:"Bokeo"},4:{code:"BL",name:"Bolikhamxai"},5:{code:"CH",name:"Champasak"},6:{code:"HO",name:"Houaphan"},7:{code:"KH",name:"Khammouan"},8:{code:"LM",name:"Louang Namtha"},9:{code:"LP",name:"Louangphabang"},10:{code:"OU",name:"Oudomxai"},11:{code:"PH",name:"Phongsali"},12:{code:"SL",name:"Salavan"},13:{code:"SV",name:"Savannakhet"},14:{code:"VI",name:"Vientiane"},15:{code:"XA",name:"Xaignabouli"},16:{code:"XE",name:"Xekong"},17:{code:"XI",name:"Xiangkhoang"},18:{code:"XN",name:"Xaisomboun"}},LV:{1:{code:"AIZ",name:"Aizkraukles Rajons"},2:{code:"ALU",name:"Aluksnes Rajons"},3:{code:"BAL",name:"Balvu Rajons"},4:{code:"BAU",name:"Bauskas Rajons"},5:{code:"CES",name:"Cesu Rajons"},6:{code:"DGR",name:"Daugavpils Rajons"},7:{code:"DOB",name:"Dobeles Rajons"},8:{code:"GUL",name:"Gulbenes Rajons"},9:{code:"JEK",name:"Jekabpils Rajons"},10:{code:"JGR",name:"Jelgavas Rajons"},11:{code:"KRA",name:"Kraslavas Rajons"},12:{code:"KUL",name:"Kuldigas Rajons"},13:{code:"LPR",name:"Liepajas Rajons"},14:{code:"LIM",name:"Limbazu Rajons"},15:{code:"LUD",name:"Ludzas Rajons"},16:{code:"MAD",name:"Madonas Rajons"},17:{code:"OGR",name:"Ogres Rajons"},18:{code:"PRE",name:"Preilu Rajons"},19:{code:"RZR",name:"Rezeknes Rajons"},20:{code:"RGR",name:"Rigas Rajons"},21:{code:"SAL",name:"Saldus Rajons"},22:{code:"TAL",name:"Talsu Rajons"},23:{code:"TUK",name:"Tukuma Rajons"},24:{code:"VLK",name:"Valkas Rajons"},25:{code:"VLM",name:"Valmieras Rajons"},26:{code:"VSR",name:"Ventspils Rajons"},27:{code:"DGV",name:"Daugavpils"},28:{code:"JGV",name:"Jelgava"},29:{code:"JUR",name:"Jurmala"},30:{code:"LPK",name:"Liepaja"},31:{code:"RZK",name:"Rezekne"},32:{code:"RGA",name:"Riga"},33:{code:"VSL",name:"Ventspils"}},LB:{1:{code:"BIN",name:"Bint Jbeil"},2:{code:"HAS",name:"Hasbaya"},3:{code:"MAR",name:"Marjeyoun"},4:{code:"NAB",name:"Nabatieh"},5:{code:"BAA",name:"Baalbek"},6:{code:"HER",name:"Hermel"},7:{code:"RAS",name:"Rashaya"},8:{code:"WES",name:"Western Beqaa"},9:{code:"ZAH",name:"Zahle"},10:{code:"AKK",name:"Akkar"},11:{code:"BAT",name:"Batroun"},12:{code:"BSH",name:"Bsharri"},13:{code:"KOU",name:"Koura"},14:{code:"MIN",name:"Miniyeh-Danniyeh"},15:{code:"TRI",name:"Tripoli"},16:{code:"ZGH",name:"Zgharta"},17:{code:"ALE",name:"Aley"},18:{code:"BAA",name:"Baabda"},19:{code:"BYB",name:"Byblos"},20:{code:"CHO",name:"Chouf"},21:{code:"KES",name:"Kesrwan"},22:{code:"MAT",name:"Matn"},23:{code:"JEZ",name:"Jezzine"},24:{code:"SID",name:"Sidon"},25:{code:"TYR",name:"Tyre"}},LS:{1:{code:"BE",name:"Berea"},2:{code:"BB",name:"Butha-Buthe"},3:{code:"LE",name:"Leribe"},4:{code:"MF",name:"Mafeteng"},5:{code:"MS",name:"Maseru"},6:{code:"MH",name:"Mohale's Hoek"},7:{code:"MK",name:"Mokhotlong"},8:{code:"QN",name:"Qacha's Nek"},9:{code:"QT",name:"Quthing"},10:{code:"TT",name:"Thaba-Tseka"}},LR:{1:{code:"BI",name:"Bomi"},2:{code:"BG",name:"Bong"},3:{code:"GB",name:"Grand Bassa"},4:{code:"CM",name:"Grand Cape Mount"},5:{code:"GG",name:"Grand Gedeh"},6:{code:"GK",name:"Grand Kru"},7:{code:"LO",name:"Lofa"},8:{code:"MG",name:"Margibi"},9:{code:"ML",name:"Maryland"},10:{code:"MS",name:"Montserrado"},11:{code:"NB",name:"Nimba"},12:{code:"RC",name:"River Cess"},13:{code:"SN",name:"Sinoe"}},LY:{1:{code:"AJ",name:"Ajdabiya"},2:{code:"AZ",name:"Al 'Aziziyah"},3:{code:"FA",name:"Al Fatih"},4:{code:"JA",name:"Al Jabal al Akhdar"},5:{code:"JU",name:"Al Jufrah"},6:{code:"KH",name:"Al Khums"},7:{code:"KU",name:"Al Kufrah"},8:{code:"NK",name:"An Nuqat al Khams"},9:{code:"AS",name:"Ash Shati'"},10:{code:"AW",name:"Awbari"},11:{code:"ZA",name:"Az Zawiyah"},12:{code:"BA",name:"Banghazi"},13:{code:"DA",name:"Darnah"},14:{code:"GD",name:"Ghadamis"},15:{code:"GY",name:"Gharyan"},16:{code:"MI",name:"Misratah"},17:{code:"MZ",name:"Murzuq"},18:{code:"SB",name:"Sabha"},19:{code:"SW",name:"Sawfajjin"},20:{code:"SU",name:"Surt"},21:{code:"TL",name:"Tarabulus (Tripoli)"},22:{code:"TH",name:"Tarhunah"},23:{code:"TU",name:"Tubruq"},24:{code:"YA",name:"Yafran"},25:{code:"ZL",name:"Zlitan"}},LI:{1:{code:"V",name:"Vaduz"},2:{code:"A",name:"Schaan"},3:{code:"B",name:"Balzers"},4:{code:"N",name:"Triesen"},5:{code:"E",name:"Eschen"},6:{code:"M",name:"Mauren"},7:{code:"T",name:"Triesenberg"},8:{code:"R",name:"Ruggell"},9:{code:"G",name:"Gamprin"},10:{code:"L",name:"Schellenberg"},11:{code:"P",name:"Planken"}},LT:{1:{code:"AL",name:"Alytus"},2:{code:"KA",name:"Kaunas"},3:{code:"KL",name:"Klaipeda"},4:{code:"MA",name:"Marijampole"},5:{code:"PA",name:"Panevezys"},6:{code:"SI",name:"Siauliai"},7:{code:"TA",name:"Taurage"},8:{code:"TE",name:"Telsiai"},9:{code:"UT",name:"Utena"},10:{code:"VI",name:"Vilnius"}},LU:{1:{code:"DD",name:"Diekirch"},2:{code:"DC",name:"Clervaux"},3:{code:"DR",name:"Redange"},4:{code:"DV",name:"Vianden"},5:{code:"DW",name:"Wiltz"},6:{code:"GG",name:"Grevenmacher"},7:{code:"GE",name:"Echternach"},8:{code:"GR",name:"Remich"},9:{code:"LL",name:"Luxembourg"},10:{code:"LC",name:"Capellen"},11:{code:"LE",name:"Esch-sur-Alzette"},12:{code:"LM",name:"Mersch"}},MO:{1:{code:"OLF",name:"Our Lady Fatima Parish"},2:{code:"ANT",name:"St. Anthony Parish"},3:{code:"LAZ",name:"St. Lazarus Parish"},4:{code:"CAT",name:"Cathedral Parish"},5:{code:"LAW",name:"St. Lawrence Parish"}},MK:{1:{code:"AER",name:"Aerodrom"},2:{code:"ARA",name:"Aračinovo"},3:{code:"BER",name:"Berovo"},4:{code:"BIT",name:"Bitola"},5:{code:"BOG",name:"Bogdanci"},6:{code:"BOG",name:"Bogovinje"},7:{code:"BOS",name:"Bosilovo"},8:{code:"BRV",name:"Brvenica"},9:{code:"BUT",name:"Butel"},10:{code:"ČAI",name:"Čair"},11:{code:"ČAš",name:"Čaška"},12:{code:"CEN",name:"Centar"},13:{code:"CEN",name:"Centar Župa"},14:{code:"Češ",name:"Češinovo-Obleš"},15:{code:"ČUČ",name:"Čučer-Sandevo"},16:{code:"DEB",name:"Debar"},17:{code:"DEB",name:"Debarca"},18:{code:"DEL",name:"Delčevo"},19:{code:"DEM",name:"Demir Hisar"},20:{code:"DEM",name:"Demir Kapija"},21:{code:"DOL",name:"Dolneni"},22:{code:"DRU",name:"Drugovo"},23:{code:"GAZ",name:"Gazi Baba"},24:{code:"GEV",name:"Gevgelija"},25:{code:"GJO",name:"Gjorče Petrov"},26:{code:"GOS",name:"Gostivar"},27:{code:"GRA",name:"Gradsko"},28:{code:"ILI",name:"Ilinden"},29:{code:"JEG",name:"Jegunovce"},30:{code:"KAR",name:"Karbinci"},31:{code:"KAR",name:"Karpoš"},32:{code:"KAV",name:"Kavadarci"},33:{code:"KIČ",name:"Kičevo"},34:{code:"KIS",name:"Kisela Voda"},35:{code:"KOč",name:"Kočani"},36:{code:"KON",name:"Konče"},37:{code:"KRA",name:"Kratovo"},38:{code:"KRI",name:"Kriva Palanka"},39:{code:"KRI",name:"Krivogaštani"},40:{code:"KRU",name:"Kruševo"},41:{code:"KUM",name:"Kumanovo"},42:{code:"LIP",name:"Lipkovo"},43:{code:"LOZ",name:"Lozovo"},44:{code:"MAK",name:"Makedonska Kamenica"},45:{code:"MAK",name:"Makedonski Brod"},46:{code:"MAV",name:"Mavrovo and Rostuša"},47:{code:"MOG",name:"Mogila"},48:{code:"NEG",name:"Negotino"},49:{code:"NOV",name:"Novaci"},50:{code:"NOV",name:"Novo Selo"},51:{code:"OHR",name:"Ohrid"},52:{code:"OSL",name:"Oslomej"},53:{code:"PEH",name:"Pehčevo"},54:{code:"PET",name:"Petrovec"},55:{code:"PLA",name:"Plasnica"},56:{code:"PRI",name:"Prilep"},57:{code:"PRO",name:"Probištip"},58:{code:"RAD",name:"Radoviš"},59:{code:"RAN",name:"Rankovce"},60:{code:"RES",name:"Resen"},61:{code:"ROS",name:"Rosoman"},62:{code:"SAR",name:"Saraj"},63:{code:"SOP",name:"Sopište"},64:{code:"STA",name:"Star Dojran"},65:{code:"STA",name:"Staro Nagoričane"},66:{code:"ŠTI",name:"Štip"},67:{code:"STR",name:"Struga"},68:{code:"STR",name:"Strumica"},69:{code:"STU",name:"Studeničani"},70:{code:"ŠUT",name:"Šuto Orizari"},71:{code:"SVE",name:"Sveti Nikole"},72:{code:"TEA",name:"Tearce"},73:{code:"TET",name:"Tetovo"},74:{code:"VAL",name:"Valandovo"},75:{code:"VAS",name:"Vasilevo"},76:{code:"VEL",name:"Veles"},77:{code:"VEV",name:"Vevčani"},78:{code:"VIN",name:"Vinica"},79:{code:"VRA",name:"Vraneštica"},80:{code:"VRA",name:"Vrapčište"},81:{code:"ZAJ",name:"Zajas"},82:{code:"ZEL",name:"Zelenikovo"},83:{code:"ŽEL",name:"Želino"},84:{code:"ZRN",name:"Zrnovci"}},MG:{1:{code:"AN",name:"Antananarivo"},2:{code:"AS",name:"Antsiranana"},3:{code:"FN",name:"Fianarantsoa"},4:{code:"MJ",name:"Mahajanga"},5:{code:"TM",name:"Toamasina"},6:{code:"TL",name:"Toliara"}},MW:{1:{code:"BLK",name:"Balaka"},2:{code:"BLT",name:"Blantyre"},3:{code:"CKW",name:"Chikwawa"},4:{code:"CRD",name:"Chiradzulu"},5:{code:"CTP",name:"Chitipa"},6:{code:"DDZ",name:"Dedza"},7:{code:"DWA",name:"Dowa"},8:{code:"KRG",name:"Karonga"},9:{code:"KSG",name:"Kasungu"},10:{code:"LKM",name:"Likoma"},11:{code:"LLG",name:"Lilongwe"},12:{code:"MCG",name:"Machinga"},13:{code:"MGC",name:"Mangochi"},14:{code:"MCH",name:"Mchinji"},15:{code:"MLJ",name:"Mulanje"},16:{code:"MWZ",name:"Mwanza"},17:{code:"MZM",name:"Mzimba"},18:{code:"NTU",name:"Ntcheu"},19:{code:"NKB",name:"Nkhata Bay"},20:{code:"NKH",name:"Nkhotakota"},21:{code:"NSJ",name:"Nsanje"},22:{code:"NTI",name:"Ntchisi"},23:{code:"PHL",name:"Phalombe"},24:{code:"RMP",name:"Rumphi"},25:{code:"SLM",name:"Salima"},26:{code:"THY",name:"Thyolo"},27:{code:"ZBA",name:"Zomba"}},MY:{1:{code:"Johor",name:"Johor"},2:{code:"Kedah",name:"Kedah"},3:{code:"Kelantan",name:"Kelantan"},4:{code:"Labuan",name:"Labuan"},5:{code:"Melaka",name:"Melaka"},6:{code:"Negeri Sembilan",name:"Negeri Sembilan"},7:{code:"Pahang",name:"Pahang"},8:{code:"Perak",name:"Perak"},9:{code:"Perlis",name:"Perlis"},10:{code:"Pulau Pinang",name:"Pulau Pinang"},11:{code:"Sabah",name:"Sabah"},12:{code:"Sarawak",name:"Sarawak"},13:{code:"Selangor",name:"Selangor"},14:{code:"Terengganu",name:"Terengganu"},15:{code:"Kuala Lumpur",name:"Kuala Lumpur"}},MV:{1:{code:"AAD",name:"Ari Atoll Dheknu"},2:{code:"AAU",name:"Ari Atoll Uthuru"},3:{code:"ADD",name:"Addu"},4:{code:"FAA",name:"Faadhippolhu"},5:{code:"FEA",name:"Felidhe Atoll"},6:{code:"FMU",name:"Fua Mulaku"},7:{code:"HAD",name:"Huvadhu Atoll Dhekunu"},8:{code:"HAU",name:"Huvadhu Atoll Uthuru"},9:{code:"HDH",name:"Hadhdhunmathi"},10:{code:"KLH",name:"Kolhumadulu"},11:{code:"MAA",name:"Male Atoll"},12:{code:"MAD",name:"Maalhosmadulu Dhekunu"},13:{code:"MAU",name:"Maalhosmadulu Uthuru"},14:{code:"MLD",name:"Miladhunmadulu Dhekunu"},15:{code:"MLU",name:"Miladhunmadulu Uthuru"},16:{code:"MUA",name:"Mulaku Atoll"},17:{code:"NAD",name:"Nilandhe Atoll Dhekunu"},18:{code:"NAU",name:"Nilandhe Atoll Uthuru"},19:{code:"THD",name:"Thiladhunmathi Dhekunu"},20:{code:"THU",name:"Thiladhunmathi Uthuru"}},ML:{1:{code:"GA",name:"Gao"},2:{code:"KY",name:"Kayes"},3:{code:"KD",name:"Kidal"},4:{code:"KL",name:"Koulikoro"},5:{code:"MP",name:"Mopti"},6:{code:"SG",name:"Segou"},7:{code:"SK",name:"Sikasso"},8:{code:"TB",name:"Tombouctou"},9:{code:"CD",name:"Bamako Capital District"}},MT:{1:{code:"ATT",name:"Attard"},2:{code:"BAL",name:"Balzan"},3:{code:"BGU",name:"Birgu"},4:{code:"BKK",name:"Birkirkara"},5:{code:"BRZ",name:"Birzebbuga"},6:{code:"BOR",name:"Bormla"},7:{code:"DIN",name:"Dingli"},8:{code:"FGU",name:"Fgura"},9:{code:"FLO",name:"Floriana"},10:{code:"GDJ",name:"Gudja"},11:{code:"GZR",name:"Gzira"},12:{code:"GRG",name:"Gargur"},13:{code:"GXQ",name:"Gaxaq"},14:{code:"HMR",name:"Hamrun"},15:{code:"IKL",name:"Iklin"},16:{code:"ISL",name:"Isla"},17:{code:"KLK",name:"Kalkara"},18:{code:"KRK",name:"Kirkop"},19:{code:"LIJ",name:"Lija"},20:{code:"LUQ",name:"Luqa"},21:{code:"MRS",name:"Marsa"},22:{code:"MKL",name:"Marsaskala"},23:{code:"MXL",name:"Marsaxlokk"},24:{code:"MDN",name:"Mdina"},25:{code:"MEL",name:"Melliea"},26:{code:"MGR",name:"Mgarr"},27:{code:"MST",name:"Mosta"},28:{code:"MQA",name:"Mqabba"},29:{code:"MSI",name:"Msida"},30:{code:"MTF",name:"Mtarfa"},31:{code:"NAX",name:"Naxxar"},32:{code:"PAO",name:"Paola"},33:{code:"PEM",name:"Pembroke"},34:{code:"PIE",name:"Pieta"},35:{code:"QOR",name:"Qormi"},36:{code:"QRE",name:"Qrendi"},37:{code:"RAB",name:"Rabat"},38:{code:"SAF",name:"Safi"},39:{code:"SGI",name:"San Giljan"},40:{code:"SLU",name:"Santa Lucija"},41:{code:"SPB",name:"San Pawl il-Bahar"},42:{code:"SGW",name:"San Gwann"},43:{code:"SVE",name:"Santa Venera"},44:{code:"SIG",name:"Siggiewi"},45:{code:"SLM",name:"Sliema"},46:{code:"SWQ",name:"Swieqi"},47:{code:"TXB",name:"Ta Xbiex"},48:{code:"TRX",name:"Tarxien"},49:{code:"VLT",name:"Valletta"},50:{code:"XGJ",name:"Xgajra"},51:{code:"ZBR",name:"Zabbar"},52:{code:"ZBG",name:"Zebbug"},53:{code:"ZJT",name:"Zejtun"},54:{code:"ZRQ",name:"Zurrieq"},55:{code:"FNT",name:"Fontana"},56:{code:"GHJ",name:"Ghajnsielem"},57:{code:"GHR",name:"Gharb"},58:{code:"GHS",name:"Ghasri"},59:{code:"KRC",name:"Kercem"},60:{code:"MUN",name:"Munxar"},61:{code:"NAD",name:"Nadur"},62:{code:"QAL",name:"Qala"},63:{code:"VIC",name:"Victoria"},64:{code:"SLA",name:"San Lawrenz"},65:{code:"SNT",name:"Sannat"},66:{code:"ZAG",name:"Xagra"},67:{code:"XEW",name:"Xewkija"},68:{code:"ZEB",name:"Zebbug"}},MH:{1:{code:"ALG",name:"Ailinginae"},2:{code:"ALL",name:"Ailinglaplap"},3:{code:"ALK",name:"Ailuk"},4:{code:"ARN",name:"Arno"},5:{code:"AUR",name:"Aur"},6:{code:"BKR",name:"Bikar"},7:{code:"BKN",name:"Bikini"},8:{code:"BKK",name:"Bokak"},9:{code:"EBN",name:"Ebon"},10:{code:"ENT",name:"Enewetak"},11:{code:"EKB",name:"Erikub"},12:{code:"JBT",name:"Jabat"},13:{code:"JLT",name:"Jaluit"},14:{code:"JEM",name:"Jemo"},15:{code:"KIL",name:"Kili"},16:{code:"KWJ",name:"Kwajalein"},17:{code:"LAE",name:"Lae"},18:{code:"LIB",name:"Lib"},19:{code:"LKP",name:"Likiep"},20:{code:"MJR",name:"Majuro"},21:{code:"MLP",name:"Maloelap"},22:{code:"MJT",name:"Mejit"},23:{code:"MIL",name:"Mili"},24:{code:"NMK",name:"Namorik"},25:{code:"NAM",name:"Namu"},26:{code:"RGL",name:"Rongelap"},27:{code:"RGK",name:"Rongrik"},28:{code:"TOK",name:"Toke"},29:{code:"UJA",name:"Ujae"},30:{code:"UJL",name:"Ujelang"},31:{code:"UTK",name:"Utirik"},32:{code:"WTH",name:"Wotho"},33:{code:"WTJ",name:"Wotje"}},MQ:{1:{code:"LAJ",name:"L'Ajoupa-Bouillon"},2:{code:"LES",name:"Les Anses-d'Arlet"},3:{code:"BAS",name:"Basse-Pointe"},4:{code:"BEL",name:"Bellefontaine"},5:{code:"LE",name:"Le Carbet"},6:{code:"CAS",name:"Case-Pilote"},7:{code:"LE",name:"Le Diamant"},8:{code:"DUC",name:"Ducos"},9:{code:"FON",name:"Fonds-Saint-Denis"},10:{code:"FOR",name:"Fort-De-France"},11:{code:"LE",name:"Le François"},12:{code:"GRA",name:"Grand'Rivière"},13:{code:"GRO",name:"Gros-Morne"},14:{code:"LE",name:"Le Lamentin"},15:{code:"LE",name:"Le Lorrain"},16:{code:"MAC",name:"Macouba"},17:{code:"LE",name:"Le Marigot"},18:{code:"LE",name:"Le Marin"},19:{code:"LE",name:"Le Morne-Rouge"},20:{code:"LE",name:"Le Morne-Vert"},21:{code:"LE",name:"Le Prêcheur"},22:{code:"RIV",name:"Rivière-Pilote"},23:{code:"RIV",name:"Rivière-Salée"},24:{code:"LE",name:"Le Robert"},25:{code:"SAI",name:"Sainte-Anne"},26:{code:"SAI",name:"Sainte-Luce"},27:{code:"SAI",name:"Sainte-Marie"},28:{code:"SAI",name:"Saint-Esprit"},29:{code:"SAI",name:"Saint-Joseph"},30:{code:"SAI",name:"Saint-Pierre"},31:{code:"SCH",name:"Schœlcher"},32:{code:"LA",name:"La Trinité"},33:{code:"LES",name:"Les Trois-Îlets"},34:{code:"LE",name:"Le Vauclin"}},MR:{1:{code:"AD",name:"Adrar"},2:{code:"AS",name:"Assaba"},3:{code:"BR",name:"Brakna"},4:{code:"DN",name:"Dakhlet Nouadhibou"},5:{code:"GO",name:"Gorgol"},6:{code:"GM",name:"Guidimaka"},7:{code:"HC",name:"Hodh Ech Chargui"},8:{code:"HG",name:"Hodh El Gharbi"},9:{code:"IN",name:"Inchiri"},10:{code:"TA",name:"Tagant"},11:{code:"TZ",name:"Tiris Zemmour"},12:{code:"TR",name:"Trarza"},13:{code:"NO",name:"Nouakchott"}},MU:{1:{code:"AG",name:"Agalega Islands"},2:{code:"BL",name:"Black River"},3:{code:"BR",name:"Beau Bassin-Rose Hill"},4:{code:"CC",name:"Cargados Carajos Shoals (Saint B)"},5:{code:"CU",name:"Curepipe"},6:{code:"FL",name:"Flacq"},7:{code:"GP",name:"Grand Port"},8:{code:"MO",name:"Moka"},9:{code:"PA",name:"Pamplemousses"},10:{code:"PL",name:"Port Louis"},11:{code:"PU",name:"Port Louis"},12:{code:"PW",name:"Plaines Wilhems"},13:{code:"QB",name:"Quatre Bornes"},14:{code:"RO",name:"Rodrigues"},15:{code:"RR",name:"Riviere du Rempart"},16:{code:"SA",name:"Savanne"},17:{code:"VP",name:"Vacoas-Phoenix"}},YT:{1:{code:"DZA",name:"Dzaoudzi"},2:{code:"PAM",name:"Pamandzi"},3:{code:"MAM",name:"Mamoudzou"},4:{code:"DEM",name:"Dembeni"},5:{code:"BAN",name:"Bandrele"},6:{code:"KAN",name:"Kani-Kéli"},7:{code:"BOU",name:"Bouéni"},8:{code:"CHI",name:"Chirongui"},9:{code:"SAD",name:"Sada"},10:{code:"OUA",name:"Ouangani"},11:{code:"CHI",name:"Chiconi"},12:{code:"TSI",name:"Tsingoni"},13:{code:"MTS",name:"M'Tsangamouji"},14:{code:"ACO",name:"Acoua"},15:{code:"MTS",name:"Mtsamboro"},16:{code:"BAN",name:"Bandraboua"},17:{code:"KOU",name:"Koungou"}},MX:{1:{code:"AGU",name:"Aguascalientes"},2:{code:"BCN",name:"Baja California Norte"},3:{code:"BCS",name:"Baja California Sur"},4:{code:"CAM",name:"Campeche"},5:{code:"CHP",name:"Chiapas"},6:{code:"CHH",name:"Chihuahua"},7:{code:"COA",name:"Coahuila de Zaragoza"},8:{code:"COL",name:"Colima"},9:{code:"DIF",name:"Distrito Federal"},10:{code:"DUR",name:"Durango"},11:{code:"GUA",name:"Guanajuato"},12:{code:"GRO",name:"Guerrero"},13:{code:"HID",name:"Hidalgo"},14:{code:"JAL",name:"Jalisco"},15:{code:"MEX",name:"Mexico"},16:{code:"MIC",name:"Michoacan de Ocampo"},17:{code:"MOR",name:"Morelos"},18:{code:"NAY",name:"Nayarit"},19:{code:"NLE",name:"Nuevo Leon"},20:{code:"OAX",name:"Oaxaca"},21:{code:"PUE",name:"Puebla"},22:{code:"QUE",name:"Queretaro de Arteaga"},23:{code:"ROO",name:"Quintana Roo"},24:{code:"SLP",name:"San Luis Potosi"},25:{code:"SIN",name:"Sinaloa"},26:{code:"SON",name:"Sonora"},27:{code:"TAB",name:"Tabasco"},28:{code:"TAM",name:"Tamaulipas"},29:{code:"TLA",name:"Tlaxcala"},30:{code:"VER",name:"Veracruz-Llave"},31:{code:"YUC",name:"Yucatan"},32:{code:"ZAC",name:"Zacatecas"}},FM:{1:{code:"C",name:"Chuuk"},2:{code:"K",name:"Kosrae"},3:{code:"P",name:"Pohnpei"},4:{code:"Y",name:"Yap"}},MD:{1:{code:"GA",name:"Gagauzia"},2:{code:"CU",name:"Chisinau"},3:{code:"BA",name:"Balti"},4:{code:"CA",name:"Cahul"},5:{code:"ED",name:"Edinet"},6:{code:"LA",name:"Lapusna"},7:{code:"OR",name:"Orhei"},8:{code:"SO",name:"Soroca"},9:{code:"TI",name:"Tighina"},10:{code:"UN",name:"Ungheni"},11:{code:"SN",name:"Stânga Nistrului"}},MC:{1:{code:"FV",name:"Fontvieille"},2:{code:"LC",name:"La Condamine"},3:{code:"MV",name:"Monaco-Ville"},4:{code:"MC",name:"Monte-Carlo"}},MN:{1:{code:"1",name:"Ulanbaatar"},2:{code:"035",name:"Orhon"},3:{code:"037",name:"Darhan uul"},4:{code:"039",name:"Hentiy"},5:{code:"041",name:"Hovsgol"},6:{code:"043",name:"Hovd"},7:{code:"046",name:"Uvs"},8:{code:"047",name:"Tov"},9:{code:"049",name:"Selenge"},10:{code:"051",name:"Suhbaatar"},11:{code:"053",name:"Omnogovi"},12:{code:"055",name:"Ovorhangay"},13:{code:"057",name:"Dzavhan"},14:{code:"059",name:"DundgovL"},15:{code:"061",name:"Dornod"},16:{code:"063",name:"Dornogov"},17:{code:"064",name:"Govi-Sumber"},18:{code:"065",name:"Govi-Altay"},19:{code:"067",name:"Bulgan"},20:{code:"069",name:"Bayanhongor"},21:{code:"071",name:"Bayan-Olgiy"},22:{code:"073",name:"Arhangay"}},MS:{1:{code:"A",name:"Saint Anthony"},2:{code:"G",name:"Saint Georges"},3:{code:"P",name:"Saint Peter"}},MA:{1:{code:"AGD",name:"Agadir"},2:{code:"HOC",name:"Al Hoceima"},3:{code:"AZI",name:"Azilal"},4:{code:"BME",name:"Beni Mellal"},5:{code:"BSL",name:"Ben Slimane"},6:{code:"BLM",name:"Boulemane"},7:{code:"CBL",name:"Casablanca"},8:{code:"CHA",name:"Chaouen"},9:{code:"EJA",name:"El Jadida"},10:{code:"EKS",name:"El Kelaa des Sraghna"},11:{code:"ERA",name:"Er Rachidia"},12:{code:"ESS",name:"Essaouira"},13:{code:"FES",name:"Fes"},14:{code:"FIG",name:"Figuig"},15:{code:"GLM",name:"Guelmim"},16:{code:"IFR",name:"Ifrane"},17:{code:"KEN",name:"Kenitra"},18:{code:"KHM",name:"Khemisset"},19:{code:"KHN",name:"Khenifra"},20:{code:"KHO",name:"Khouribga"},21:{code:"LYN",name:"Laayoune"},22:{code:"LAR",name:"Larache"},23:{code:"MRK",name:"Marrakech"},24:{code:"MKN",name:"Meknes"},25:{code:"NAD",name:"Nador"},26:{code:"ORZ",name:"Ouarzazate"},27:{code:"OUJ",name:"Oujda"},28:{code:"RSA",name:"Rabat-Sale"},29:{code:"SAF",name:"Safi"},30:{code:"SET",name:"Settat"},31:{code:"SKA",name:"Sidi Kacem"},32:{code:"TGR",name:"Tangier"},33:{code:"TAN",name:"Tan-Tan"},34:{code:"TAO",name:"Taounate"},35:{code:"TRD",name:"Taroudannt"},36:{code:"TAT",name:"Tata"},37:{code:"TAZ",name:"Taza"},38:{code:"TET",name:"Tetouan"},39:{code:"TIZ",name:"Tiznit"},40:{code:"ADK",name:"Ad Dakhla"},41:{code:"BJD",name:"Boujdour"},42:{code:"ESM",name:"Es Smara"}},MZ:{1:{code:"CD",name:"Cabo Delgado"},2:{code:"GZ",name:"Gaza"},3:{code:"IN",name:"Inhambane"},4:{code:"MN",name:"Manica"},5:{code:"MC",name:"Maputo (city)"},6:{code:"MP",name:"Maputo"},7:{code:"NA",name:"Nampula"},8:{code:"NI",name:"Niassa"},9:{code:"SO",name:"Sofala"},10:{code:"TE",name:"Tete"},11:{code:"ZA",name:"Zambezia"}},MM:{1:{code:"AY",name:"Ayeyarwady"},2:{code:"BG",name:"Bago"},3:{code:"MG",name:"Magway"},4:{code:"MD",name:"Mandalay"},5:{code:"SG",name:"Sagaing"},6:{code:"TN",name:"Tanintharyi"},7:{code:"YG",name:"Yangon"},8:{code:"CH",name:"Chin State"},9:{code:"KC",name:"Kachin State"},10:{code:"KH",name:"Kayah State"},11:{code:"KN",name:"Kayin State"},12:{code:"MN",name:"Mon State"},13:{code:"RK",name:"Rakhine State"},14:{code:"SH",name:"Shan State"}},NA:{1:{code:"CA",name:"Caprivi"},2:{code:"ER",name:"Erongo"},3:{code:"HA",name:"Hardap"},4:{code:"KR",name:"Karas"},5:{code:"KV",name:"Kavango"},6:{code:"KH",name:"Khomas"},7:{code:"KU",name:"Kunene"},8:{code:"OW",name:"Ohangwena"},9:{code:"OK",name:"Omaheke"},10:{code:"OT",name:"Omusati"},11:{code:"ON",name:"Oshana"},12:{code:"OO",name:"Oshikoto"},13:{code:"OJ",name:"Otjozondjupa"}},NR:{1:{code:"AO",name:"Aiwo"},2:{code:"AA",name:"Anabar"},3:{code:"AT",name:"Anetan"},4:{code:"AI",name:"Anibare"},5:{code:"BA",name:"Baiti"},6:{code:"BO",name:"Boe"},7:{code:"BU",name:"Buada"},8:{code:"DE",name:"Denigomodu"},9:{code:"EW",name:"Ewa"},10:{code:"IJ",name:"Ijuw"},11:{code:"ME",name:"Meneng"},12:{code:"NI",name:"Nibok"},13:{code:"UA",name:"Uaboe"},14:{code:"YA",name:"Yaren"}},NP:{1:{code:"BA",name:"Bagmati"},2:{code:"BH",name:"Bheri"},3:{code:"DH",name:"Dhawalagiri"},4:{code:"GA",name:"Gandaki"},5:{code:"JA",name:"Janakpur"},6:{code:"KA",name:"Karnali"},7:{code:"KO",name:"Kosi"},8:{code:"LU",name:"Lumbini"},9:{code:"MA",name:"Mahakali"},10:{code:"ME",name:"Mechi"},11:{code:"NA",name:"Narayani"},12:{code:"RA",name:"Rapti"},13:{code:"SA",name:"Sagarmatha"},14:{code:"SE",name:"Seti"}},NL:{1:{code:"DR",name:"Drenthe"},2:{code:"FL",name:"Flevoland"},3:{code:"FR",name:"Friesland"},4:{code:"GE",name:"Gelderland"},5:{code:"GR",name:"Groningen"},6:{code:"LI",name:"Limburg"},7:{code:"NB",name:"Noord Brabant"},8:{code:"NH",name:"Noord Holland"},9:{code:"OV",name:"Overijssel"},10:{code:"UT",name:"Utrecht"},11:{code:"ZE",name:"Zeeland"},12:{code:"ZH",name:"Zuid Holland"}},AN:{1:{code:"BON",name:"Bonaire"},2:{code:"CUR",name:"Curaçao"},3:{code:"SAB",name:"Saba"},4:{code:"SEU",name:"Sint Eustatius"},5:{code:"SMA",name:"Sint Maarten"}},NC:{1:{code:"L",name:"Iles Loyaute"},2:{code:"N",name:"Nord"},3:{code:"S",name:"Sud"}},NZ:{1:{code:"AUK",name:"Auckland"},2:{code:"BOP",name:"Bay of Plenty"},3:{code:"CAN",name:"Canterbury"},4:{code:"COR",name:"Coromandel"},5:{code:"GIS",name:"Gisborne"},6:{code:"FIO",name:"Fiordland"},7:{code:"HKB",name:"Hawke's Bay"},8:{code:"MBH",name:"Marlborough"},9:{code:"MWT",name:"Manawatu-Wanganui"},10:{code:"MCM",name:"Mt Cook-Mackenzie"},11:{code:"NSN",name:"Nelson"},12:{code:"NTL",name:"Northland"},13:{code:"OTA",name:"Otago"},14:{code:"STL",name:"Southland"},15:{code:"TKI",name:"Taranaki"},16:{code:"WGN",name:"Wellington"},17:{code:"WKO",name:"Waikato"},18:{code:"WAI",name:"Wairprarapa"},19:{code:"WTC",name:"West Coast"}},NI:{1:{code:"AN",name:"Atlantico Norte"},2:{code:"AS",name:"Atlantico Sur"},3:{code:"BO",name:"Boaco"},4:{code:"CA",name:"Carazo"},5:{code:"CI",name:"Chinandega"},6:{code:"CO",name:"Chontales"},7:{code:"ES",name:"Esteli"},8:{code:"GR",name:"Granada"},9:{code:"JI",name:"Jinotega"},10:{code:"LE",name:"Leon"},11:{code:"MD",name:"Madriz"},12:{code:"MN",name:"Managua"},13:{code:"MS",name:"Masaya"},14:{code:"MT",name:"Matagalpa"},15:{code:"NS",name:"Nuevo Segovia"},16:{code:"RS",name:"Rio San Juan"},17:{code:"RI",name:"Rivas"}},NE:{1:{code:"AG",name:"Agadez"},2:{code:"DF",name:"Diffa"},3:{code:"DS",name:"Dosso"},4:{code:"MA",name:"Maradi"},5:{code:"NM",name:"Niamey"},6:{code:"TH",name:"Tahoua"},7:{code:"TL",name:"Tillaberi"},8:{code:"ZD",name:"Zinder"}},NG:{1:{code:"AB",name:"Abia"},2:{code:"CT",name:"Abuja Federal Capital Territory"},3:{code:"AD",name:"Adamawa"},4:{code:"AK",name:"Akwa Ibom"},5:{code:"AN",name:"Anambra"},6:{code:"BC",name:"Bauchi"},7:{code:"BY",name:"Bayelsa"},8:{code:"BN",name:"Benue"},9:{code:"BO",name:"Borno"},10:{code:"CR",name:"Cross River"},11:{code:"DE",name:"Delta"},12:{code:"EB",name:"Ebonyi"},13:{code:"ED",name:"Edo"},14:{code:"EK",name:"Ekiti"},15:{code:"EN",name:"Enugu"},16:{code:"GO",name:"Gombe"},17:{code:"IM",name:"Imo"},18:{code:"JI",name:"Jigawa"},19:{code:"KD",name:"Kaduna"},20:{code:"KN",name:"Kano"},21:{code:"KT",name:"Katsina"},22:{code:"KE",name:"Kebbi"},23:{code:"KO",name:"Kogi"},24:{code:"KW",name:"Kwara"},25:{code:"LA",name:"Lagos"},26:{code:"NA",name:"Nassarawa"},27:{code:"NI",name:"Niger"},28:{code:"OG",name:"Ogun"},29:{code:"ONG",name:"Ondo"},30:{code:"OS",name:"Osun"},31:{code:"OY",name:"Oyo"},32:{code:"PL",name:"Plateau"},33:{code:"RI",name:"Rivers"},34:{code:"SO",name:"Sokoto"},35:{code:"TA",name:"Taraba"},36:{code:"YO",name:"Yobe"},37:{code:"ZA",name:"Zamfara"}},NU:{1:{code:"MAK",name:"Makefu"},2:{code:"TUA",name:"Tuapa"},3:{code:"NAM",name:"Namukulu"},4:{code:"HIK",name:"Hikutavake"},5:{code:"TOI",name:"Toi"},6:{code:"MUT",name:"Mutalau"},7:{code:"LAK",name:"Lakepa"},8:{code:"LIK",name:"Liku"},9:{code:"HAK",name:"Hakupu"},10:{code:"VAI",name:"Vaiea"},11:{code:"AVA",name:"Avatele"},12:{code:"TAM",name:"Tamakautoga"},13:{code:"ALO",name:"Alofi South"},14:{code:"ALO",name:"Alofi North"}},NF:{1:{code:"NOR",name:"Norfolk Island"}},MP:{1:{code:"N",name:"Northern Islands"},2:{code:"R",name:"Rota"},3:{code:"S",name:"Saipan"},4:{code:"T",name:"Tinian"}},NO:{1:{code:"AK",name:"Akershus"},2:{code:"AA",name:"Aust-Agder"},3:{code:"BU",name:"Buskerud"},4:{code:"FM",name:"Finnmark"},5:{code:"HM",name:"Hedmark"},6:{code:"HL",name:"Hordaland"},7:{code:"MR",name:"Møre og Romsdal"},8:{code:"NL",name:"Nordland"},9:{code:"NT",name:"Nord-Trøndelag"},10:{code:"OP",name:"Oppland"},11:{code:"OL",name:"Oslo"},12:{code:"RL",name:"Rogaland"},13:{code:"SJ",name:"Sogn og Fjordane"},14:{code:"ST",name:"Sør-Trøndelag"},15:{code:"SV",name:"Svalbard"},16:{code:"TM",name:"Telemark"},17:{code:"TR",name:"Troms"},18:{code:"VA",name:"Vest-Agder"},19:{code:"VF",name:"Vestfold"},20:{code:"OF",name:"Østfold"}},OM:{1:{code:"DA",name:"Ad Dakhiliyah"},2:{code:"BA",name:"Al Batinah"},3:{code:"WU",name:"Al Wusta"},4:{code:"SH",name:"Ash Sharqiyah"},5:{code:"ZA",name:"Az Zahirah"},6:{code:"MA",name:"Masqat"},7:{code:"MU",name:"Musandam"},8:{code:"ZU",name:"Zufar"}},PK:{1:{code:"B",name:"Balochistan"},2:{code:"T",name:"Federally Administered Tribal Ar"},3:{code:"I",name:"Islamabad Capital Territory"},4:{code:"N",name:"North-West Frontier"},5:{code:"P",name:"Punjab"},6:{code:"S",name:"Sindh"}},PW:{1:{code:"AM",name:"Aimeliik"},2:{code:"AR",name:"Airai"},3:{code:"AN",name:"Angaur"},4:{code:"HA",name:"Hatohobei"},5:{code:"KA",name:"Kayangel"},6:{code:"KO",name:"Koror"},7:{code:"ME",name:"Melekeok"},8:{code:"NA",name:"Ngaraard"},9:{code:"NG",name:"Ngarchelong"},10:{code:"ND",name:"Ngardmau"},11:{code:"NT",name:"Ngatpang"},12:{code:"NC",name:"Ngchesar"},13:{code:"NR",name:"Ngeremlengui"},14:{code:"NW",name:"Ngiwal"},15:{code:"PE",name:"Peleliu"},16:{code:"SO",name:"Sonsorol"}},PA:{1:{code:"BT",name:"Bocas del Toro"},2:{code:"CH",name:"Chiriqui"},3:{code:"CC",name:"Cocle"},4:{code:"CL",name:"Colon"},5:{code:"DA",name:"Darien"},6:{code:"HE",name:"Herrera"},7:{code:"LS",name:"Los Santos"},8:{code:"PA",name:"Panama"},9:{code:"SB",name:"San Blas"},10:{code:"VG",name:"Veraguas"}},PG:{1:{code:"BV",name:"Bougainville"},2:{code:"CE",name:"Central"},3:{code:"CH",name:"Chimbu"},4:{code:"EH",name:"Eastern Highlands"},5:{code:"EB",name:"East New Britain"},6:{code:"ES",name:"East Sepik"},7:{code:"EN",name:"Enga"},8:{code:"GU",name:"Gulf"},9:{code:"MD",name:"Madang"},10:{code:"MN",name:"Manus"},11:{code:"MB",name:"Milne Bay"},12:{code:"MR",name:"Morobe"},13:{code:"NC",name:"National Capital"},14:{code:"NI",name:"New Ireland"},15:{code:"NO",name:"Northern"},16:{code:"SA",name:"Sandaun"},17:{code:"SH",name:"Southern Highlands"},18:{code:"WE",name:"Western"},19:{code:"WH",name:"Western Highlands"},20:{code:"WB",name:"West New Britain"}},PY:{1:{code:"AG",name:"Alto Paraguay"},2:{code:"AN",name:"Alto Parana"},3:{code:"AM",name:"Amambay"},4:{code:"AS",name:"Asuncion"},5:{code:"BO",name:"Boqueron"},6:{code:"CG",name:"Caaguazu"},7:{code:"CZ",name:"Caazapa"},8:{code:"CN",name:"Canindeyu"},9:{code:"CE",name:"Central"},10:{code:"CC",name:"Concepcion"},11:{code:"CD",name:"Cordillera"},12:{code:"GU",name:"Guaira"},13:{code:"IT",name:"Itapua"},14:{code:"MI",name:"Misiones"},15:{code:"NE",name:"Neembucu"},16:{code:"PA",name:"Paraguari"},17:{code:"PH",name:"Presidente Hayes"},18:{code:"SP",name:"San Pedro"}},PE:{1:{code:"AM",name:"Amazonas"},2:{code:"AN",name:"Ancash"},3:{code:"AP",name:"Apurimac"},4:{code:"AR",name:"Arequipa"},5:{code:"AY",name:"Ayacucho"},6:{code:"CJ",name:"Cajamarca"},7:{code:"CL",name:"Callao"},8:{code:"CU",name:"Cusco"},9:{code:"HV",name:"Huancavelica"},10:{code:"HO",name:"Huanuco"},11:{code:"IC",name:"Ica"},12:{code:"JU",name:"Junin"},13:{code:"LD",name:"La Libertad"},14:{code:"LY",name:"Lambayeque"},15:{code:"LI",name:"Lima"},16:{code:"LO",name:"Loreto"},17:{code:"MD",name:"Madre de Dios"},18:{code:"MO",name:"Moquegua"},19:{code:"PA",name:"Pasco"},20:{code:"PI",name:"Piura"},21:{code:"PU",name:"Puno"},22:{code:"SM",name:"San Martin"},23:{code:"TA",name:"Tacna"},24:{code:"TU",name:"Tumbes"},25:{code:"UC",name:"Ucayali"}},PH:{1:{code:"ABR",name:"Abra"},2:{code:"ANO",name:"Agusan del Norte"},3:{code:"ASU",name:"Agusan del Sur"},4:{code:"AKL",name:"Aklan"},5:{code:"ALB",name:"Albay"},6:{code:"ANT",name:"Antique"},7:{code:"APY",name:"Apayao"},8:{code:"AUR",name:"Aurora"},9:{code:"BAS",name:"Basilan"},10:{code:"BTA",name:"Bataan"},11:{code:"BTE",name:"Batanes"},12:{code:"BTG",name:"Batangas"},13:{code:"BLR",name:"Biliran"},14:{code:"BEN",name:"Benguet"},15:{code:"BOL",name:"Bohol"},16:{code:"BUK",name:"Bukidnon"},17:{code:"BUL",name:"Bulacan"},18:{code:"CAG",name:"Cagayan"},19:{code:"CNO",name:"Camarines Norte"},20:{code:"CSU",name:"Camarines Sur"},21:{code:"CAM",name:"Camiguin"},22:{code:"CAP",name:"Capiz"},23:{code:"CAT",name:"Catanduanes"},24:{code:"CAV",name:"Cavite"},25:{code:"CEB",name:"Cebu"},26:{code:"CMP",name:"Compostela"},27:{code:"DNO",name:"Davao del Norte"},28:{code:"DSU",name:"Davao del Sur"},29:{code:"DOR",name:"Davao Oriental"},30:{code:"ESA",name:"Eastern Samar"},31:{code:"GUI",name:"Guimaras"},32:{code:"IFU",name:"Ifugao"},33:{code:"INO",name:"Ilocos Norte"},34:{code:"ISU",name:"Ilocos Sur"},35:{code:"ILO",name:"Iloilo"},36:{code:"ISA",name:"Isabela"},37:{code:"KAL",name:"Kalinga"},38:{code:"LAG",name:"Laguna"},39:{code:"LNO",name:"Lanao del Norte"},40:{code:"LSU",name:"Lanao del Sur"},41:{code:"UNI",name:"La Union"},42:{code:"LEY",name:"Leyte"},43:{code:"MAG",name:"Maguindanao"},44:{code:"MRN",name:"Marinduque"},45:{code:"MSB",name:"Masbate"},46:{code:"MIC",name:"Mindoro Occidental"},47:{code:"MIR",name:"Mindoro Oriental"},48:{code:"MSC",name:"Misamis Occidental"},49:{code:"MOR",name:"Misamis Oriental"},50:{code:"MOP",name:"Mountain"},51:{code:"NOC",name:"Negros Occidental"},52:{code:"NOR",name:"Negros Oriental"},53:{code:"NCT",name:"North Cotabato"},54:{code:"NSM",name:"Northern Samar"},55:{code:"NEC",name:"Nueva Ecija"},56:{code:"NVZ",name:"Nueva Vizcaya"},57:{code:"PLW",name:"Palawan"},58:{code:"PMP",name:"Pampanga"},59:{code:"PNG",name:"Pangasinan"},60:{code:"QZN",name:"Quezon"},61:{code:"QRN",name:"Quirino"},62:{code:"RIZ",name:"Rizal"},63:{code:"ROM",name:"Romblon"},64:{code:"SMR",name:"Samar"},65:{code:"SRG",name:"Sarangani"},66:{code:"SQJ",name:"Siquijor"},67:{code:"SRS",name:"Sorsogon"},68:{code:"SCO",name:"South Cotabato"},69:{code:"SLE",name:"Southern Leyte"},70:{code:"SKU",name:"Sultan Kudarat"},71:{code:"SLU",name:"Sulu"},72:{code:"SNO",name:"Surigao del Norte"},73:{code:"SSU",name:"Surigao del Sur"},74:{code:"TAR",name:"Tarlac"},75:{code:"TAW",name:"Tawi-Tawi"},76:{code:"ZBL",name:"Zambales"},77:{code:"ZNO",name:"Zamboanga del Norte"},78:{code:"ZSU",name:"Zamboanga del Sur"},79:{code:"ZSI",name:"Zamboanga Sibugay"}},PN:{1:{code:"PIT",name:"Pitcairn Island"}},PL:{1:{code:"DO",name:"Dolnośląskie"},2:{code:"KP",name:"Kujawsko-Pomorskie"},3:{code:"LL",name:"Lubelskie"},4:{code:"LU",name:"Lubuskie"},5:{code:"LO",name:"Łódzkie"},6:{code:"ML",name:"Małopolskie"},7:{code:"MZ",name:"Mazowieckie"},8:{code:"OP",name:"Opolskie"},9:{code:"PP",name:"Podkarpackie"},10:{code:"PL",name:"Podlaskie"},11:{code:"PM",name:"Pomorskie"},12:{code:"SL",name:"Śląskie"},13:{code:"SW",name:"Świętokrzyskie"},14:{code:"WM",name:"Warmińsko-Mazurskie"},15:{code:"WP",name:"Wielkopolskie"},16:{code:"ZA",name:"Zachodniopomorskie"}},PT:{1:{code:"AC",name:"Açores"},2:{code:"AV",name:"Aveiro"},3:{code:"BE",name:"Beja"},4:{code:"BR",name:"Braga"},5:{code:"BA",name:"Bragança"},6:{code:"CB",name:"Castelo Branco"},7:{code:"CO",name:"Coimbra"},8:{code:"EV",name:"évora"},9:{code:"FA",name:"Faro"},10:{code:"GU",name:"Guarda"},12:{code:"LE",name:"Leiria"},13:{code:"LI",name:"Lisboa"},14:{code:"ME",name:"Madeira"},15:{code:"PO",name:"Portalegre"},16:{code:"PR",name:"Porto"},17:{code:"SA",name:"Santarém"},18:{code:"SE",name:"SetÚbal"},19:{code:"VC",name:"Viana do Castelo"},20:{code:"VR",name:"Vila Real"},21:{code:"VI",name:"Viseu"}},PR:{1:{code:"A-A",name:"Añasco"},2:{code:"ADJ",name:"Adjuntas"},3:{code:"AGU",name:"Aguada"},4:{code:"AGU",name:"Aguadilla"},5:{code:"AGU",name:"Aguas Buenas"},6:{code:"AIB",name:"Aibonito"},7:{code:"ARE",name:"Arecibo"},8:{code:"ARR",name:"Arroyo"},9:{code:"BAR",name:"Barceloneta"},10:{code:"BAR",name:"Barranquitas"},11:{code:"BAY",name:"Bayamón"},12:{code:"CAB",name:"Cabo Rojo"},13:{code:"CAG",name:"Caguas"},14:{code:"CAM",name:"Camuy"},15:{code:"CAN",name:"Canóvanas"},16:{code:"CAR",name:"Carolina"},17:{code:"CAT",name:"Cataño"},18:{code:"CAY",name:"Cayey"},19:{code:"CEI",name:"Ceiba"},20:{code:"CIA",name:"Ciales"},21:{code:"CID",name:"Cidra"},22:{code:"COA",name:"Coamo"},23:{code:"COM",name:"Comerío"},24:{code:"COR",name:"Corozal"},25:{code:"CUL",name:"Culebra"},26:{code:"DOR",name:"Dorado"},27:{code:"FAJ",name:"Fajardo"},28:{code:"FLO",name:"Florida"},29:{code:"GUA",name:"Guayama"},30:{code:"GUA",name:"Guayanilla"},31:{code:"GUA",name:"Guaynabo"},32:{code:"GUR",name:"Gurabo"},33:{code:"GU¡",name:"Guánica"},34:{code:"HAT",name:"Hatillo"},35:{code:"HOR",name:"Hormigueros"},36:{code:"HUM",name:"Humacao"},37:{code:"ISA",name:"Isabela"},38:{code:"JAY",name:"Jayuya"},39:{code:"JUA",name:"Juana Díaz"},40:{code:"JUN",name:"Juncos"},41:{code:"LAJ",name:"Lajas"},42:{code:"LAR",name:"Lares"},43:{code:"LAS",name:"Las Marías"},44:{code:"LAS",name:"Las Piedras"},45:{code:"LOÕ",name:"Loíza"},46:{code:"LUQ",name:"Luquillo"},47:{code:"MAN",name:"Manatí"},48:{code:"MAR",name:"Maricao"},49:{code:"MAU",name:"Maunabo"},50:{code:"MAY",name:"Mayagüez"},51:{code:"MOC",name:"Moca"},52:{code:"MOR",name:"Morovis"},53:{code:"NAG",name:"Naguabo"},54:{code:"NAR",name:"Naranjito"},55:{code:"ORO",name:"Orocovis"},56:{code:"PAT",name:"Patillas"},57:{code:"PE-",name:"Peñuelas"},58:{code:"PON",name:"Ponce"},59:{code:"QUE",name:"Quebradillas"},60:{code:"RIN",name:"Rincón"},61:{code:"RIO",name:"Rio Grande"},62:{code:"SAB",name:"Sabana Grande"},63:{code:"SAL",name:"Salinas"},64:{code:"SAN",name:"San Germàn"},65:{code:"SAN",name:"San Juan"},66:{code:"SAN",name:"San Lorenzo"},67:{code:"SAN",name:"San Sebastiàn"},68:{code:"SAN",name:"Santa Isabel"},69:{code:"TOA",name:"Toa Alta"},70:{code:"TOA",name:"Toa Baja"},71:{code:"TRU",name:"Trujillo Alto"},72:{code:"UTU",name:"Utuado"},73:{code:"VEG",name:"Vega Alta"},74:{code:"VEG",name:"Vega Baja"},75:{code:"VIE",name:"Vieques"},76:{code:"VIL",name:"Villalba"},77:{code:"YAB",name:"Yabucoa"},78:{code:"YAU",name:"Yauco"}},QA:{1:{code:"DW",name:"Ad Dawhah"},2:{code:"GW",name:"Al Ghuwayriyah"},3:{code:"JM",name:"Al Jumayliyah"},4:{code:"KR",name:"Al Khawr"},5:{code:"WK",name:"Al Wakrah"},6:{code:"RN",name:"Ar Rayyan"},7:{code:"JB",name:"Jarayan al Batinah"},8:{code:"MS",name:"Madinat ash Shamal"},9:{code:"UD",name:"Umm Sa'id"},10:{code:"UL",name:"Umm Salal"}},RO:{1:{code:"AB",name:"Alba"},2:{code:"AR",name:"Arad"},3:{code:"AG",name:"Arges"},4:{code:"BC",name:"Bacau"},5:{code:"BH",name:"Bihor"},6:{code:"BN",name:"Bistrita-Nasaud"},7:{code:"BT",name:"Botosani"},8:{code:"BV",name:"Brasov"},9:{code:"BR",name:"Braila"},10:{code:"B",name:"Bucuresti"},11:{code:"BZ",name:"Buzau"},12:{code:"CS",name:"Caras-Severin"},13:{code:"CL",name:"Calarasi"},14:{code:"CJ",name:"Cluj"},15:{code:"CT",name:"Constanta"},16:{code:"CV",name:"Covasna"},17:{code:"DB",name:"Dimbovita"},18:{code:"DJ",name:"Dolj"},19:{code:"GL",name:"Galati"},20:{code:"GR",name:"Giurgiu"},21:{code:"GJ",name:"Gorj"},22:{code:"HR",name:"Harghita"},23:{code:"HD",name:"Hunedoara"},24:{code:"IL",name:"Ialomita"},25:{code:"IS",name:"Iasi"},26:{code:"IF",name:"Ilfov"},27:{code:"MM",name:"Maramures"},28:{code:"MH",name:"Mehedinti"},29:{code:"MS",name:"Mures"},30:{code:"NT",name:"Neamt"},31:{code:"OT",name:"Olt"},32:{code:"PH",name:"Prahova"},33:{code:"SM",name:"Satu-Mare"},34:{code:"SJ",name:"Salaj"},35:{code:"SB",name:"Sibiu"},36:{code:"SV",name:"Suceava"},37:{code:"TR",name:"Teleorman"},38:{code:"TM",name:"Timis"},39:{code:"TL",name:"Tulcea"},40:{code:"VS",name:"Vaslui"},41:{code:"VL",name:"Valcea"},42:{code:"VN",name:"Vrancea"}},RU:{1:{code:"AB",name:"Abakan"},2:{code:"AG",name:"Aginskoye"},3:{code:"AN",name:"Anadyr"},4:{code:"AR",name:"Arkahangelsk"},5:{code:"AS",name:"Astrakhan"},6:{code:"BA",name:"Barnaul"},7:{code:"BE",name:"Belgorod"},8:{code:"BI",name:"Birobidzhan"},9:{code:"BL",name:"Blagoveshchensk"},10:{code:"BR",name:"Bryansk"},11:{code:"CH",name:"Cheboksary"},12:{code:"CL",name:"Chelyabinsk"},13:{code:"CR",name:"Cherkessk"},14:{code:"CI",name:"Chita"},15:{code:"DU",name:"Dudinka"},16:{code:"EL",name:"Elista"},17:{code:"GO",name:"Gomo-Altaysk"},18:{code:"GA",name:"Gorno-Altaysk"},19:{code:"GR",name:"Groznyy"},20:{code:"IR",name:"Irkutsk"},21:{code:"IV",name:"Ivanovo"},22:{code:"IZ",name:"Izhevsk"},23:{code:"KA",name:"Kalinigrad"},24:{code:"KL",name:"Kaluga"},25:{code:"KS",name:"Kasnodar"},26:{code:"KZ",name:"Kazan"},27:{code:"KE",name:"Kemerovo"},28:{code:"KH",name:"Khabarovsk"},29:{code:"KM",name:"Khanty-Mansiysk"},30:{code:"KO",name:"Kostroma"},31:{code:"KR",name:"Krasnodar"},32:{code:"KN",name:"Krasnoyarsk"},33:{code:"KU",name:"Kudymkar"},34:{code:"KG",name:"Kurgan"},35:{code:"KK",name:"Kursk"},36:{code:"KY",name:"Kyzyl"},37:{code:"LI",name:"Lipetsk"},38:{code:"MA",name:"Magadan"},39:{code:"MK",name:"Makhachkala"},40:{code:"MY",name:"Maykop"},41:{code:"MO",name:"Moscow"},42:{code:"MU",name:"Murmansk"},43:{code:"NA",name:"Nalchik"},44:{code:"NR",name:"Naryan Mar"},45:{code:"NZ",name:"Nazran"},46:{code:"NI",name:"Nizhniy Novgorod"},47:{code:"NO",name:"Novgorod"},48:{code:"NV",name:"Novosibirsk"},49:{code:"OM",name:"Omsk"},50:{code:"OR",name:"Orel"},51:{code:"OE",name:"Orenburg"},52:{code:"PA",name:"Palana"},53:{code:"PE",name:"Penza"},54:{code:"PR",name:"Perm"},55:{code:"PK",name:"Petropavlovsk-Kamchatskiy"},56:{code:"PT",name:"Petrozavodsk"},57:{code:"PS",name:"Pskov"},58:{code:"RO",name:"Rostov-na-Donu"},59:{code:"RY",name:"Ryazan"},60:{code:"SL",name:"Salekhard"},61:{code:"SA",name:"Samara"},62:{code:"SR",name:"Saransk"},63:{code:"SV",name:"Saratov"},64:{code:"SM",name:"Smolensk"},65:{code:"SP",name:"St. Petersburg"},66:{code:"ST",name:"Stavropol"},67:{code:"SY",name:"Syktyvkar"},68:{code:"TA",name:"Tambov"},69:{code:"TO",name:"Tomsk"},70:{code:"TU",name:"Tula"},71:{code:"TR",name:"Tura"},72:{code:"TV",name:"Tver"},73:{code:"TY",name:"Tyumen"},74:{code:"UF",name:"Ufa"},75:{code:"UL",name:"Ul'yanovsk"},76:{code:"UU",name:"Ulan-Ude"},77:{code:"US",name:"Ust'-Ordynskiy"},78:{code:"VL",name:"Vladikavkaz"},79:{code:"VA",name:"Vladimir"},80:{code:"VV",name:"Vladivostok"},81:{code:"VG",name:"Volgograd"},82:{code:"VD",name:"Vologda"},83:{code:"VO",name:"Voronezh"},84:{code:"VY",name:"Vyatka"},85:{code:"YA",name:"Yakutsk"},86:{code:"YR",name:"Yaroslavl"},87:{code:"YE",name:"Yekaterinburg"},88:{code:"YO",name:"Yoshkar-Ola"}},RW:{1:{code:"BU",name:"Butare"},2:{code:"BY",name:"Byumba"},3:{code:"CY",name:"Cyangugu"},4:{code:"GK",name:"Gikongoro"},5:{code:"GS",name:"Gisenyi"},6:{code:"GT",name:"Gitarama"},7:{code:"KG",name:"Kibungo"},8:{code:"KY",name:"Kibuye"},9:{code:"KR",name:"Kigali Rurale"},10:{code:"KV",name:"Kigali-ville"},11:{code:"RU",name:"Ruhengeri"},12:{code:"UM",name:"Umutara"}},KN:{1:{code:"CCN",name:"Christ Church Nichola Town"},2:{code:"SAS",name:"Saint Anne Sandy Point"},3:{code:"SGB",name:"Saint George Basseterre"},4:{code:"SGG",name:"Saint George Gingerland"},5:{code:"SJW",name:"Saint James Windward"},6:{code:"SJC",name:"Saint John Capesterre"},7:{code:"SJF",name:"Saint John Figtree"},8:{code:"SMC",name:"Saint Mary Cayon"},9:{code:"CAP",name:"Saint Paul Capesterre"},10:{code:"CHA",name:"Saint Paul Charlestown"},11:{code:"SPB",name:"Saint Peter Basseterre"},12:{code:"STL",name:"Saint Thomas Lowland"},13:{code:"STM",name:"Saint Thomas Middle Island"},14:{code:"TPP",name:"Trinity Palmetto Point"}},LC:{1:{code:"AR",name:"Anse-la-Raye"},2:{code:"CA",name:"Castries"},3:{code:"CH",name:"Choiseul"},4:{code:"DA",name:"Dauphin"},5:{code:"DE",name:"Dennery"},6:{code:"GI",name:"Gros-Islet"},7:{code:"LA",name:"Laborie"},8:{code:"MI",name:"Micoud"},9:{code:"PR",name:"Praslin"},10:{code:"SO",name:"Soufriere"},11:{code:"VF",name:"Vieux-Fort"}},VC:{1:{code:"C",name:"Charlotte"},2:{code:"R",name:"Grenadines"},3:{code:"A",name:"Saint Andrew"},4:{code:"D",name:"Saint David"},5:{code:"G",name:"Saint George"},6:{code:"P",name:"Saint Patrick"}},WS:{1:{code:"AN",name:"A'ana"},2:{code:"AI",name:"Aiga-i-le-Tai"},3:{code:"AT",name:"Atua"},4:{code:"FA",name:"Fa'asaleleaga"},5:{code:"GE",name:"Gaga'emauga"},6:{code:"GF",name:"Gagaifomauga"},7:{code:"PA",name:"Palauli"},8:{code:"SA",name:"Satupa'itea"},9:{code:"TU",name:"Tuamasaga"},10:{code:"VF",name:"Va'a-o-Fonoti"},11:{code:"VS",name:"Vaisigano"}},SM:{1:{code:"AC",name:"Acquaviva"},2:{code:"BM",name:"Borgo Maggiore"},3:{code:"CH",name:"Chiesanuova"},4:{code:"DO",name:"Domagnano"},5:{code:"FA",name:"Faetano"},6:{code:"FI",name:"Fiorentino"},7:{code:"MO",name:"Montegiardino"},8:{code:"SM",name:"Citta di San Marino"},9:{code:"SE",name:"Serravalle"}},ST:{1:{code:"S",name:"Sao Tome"},2:{code:"P",name:"Principe"}},SA:{1:{code:"BH",name:"Al Bahah"},2:{code:"HS",name:"Al Hudud ash Shamaliyah"},3:{code:"JF",name:"Al Jawf"},4:{code:"MD",name:"Al Madinah"},5:{code:"QS",name:"Al Qasim"},6:{code:"RD",name:"Ar Riyad"},7:{code:"AQ",name:"Ash Sharqiyah (Eastern)"},8:{code:"AS",name:"'Asir"},9:{code:"HL",name:"Ha'il"},10:{code:"JZ",name:"Jizan"},11:{code:"ML",name:"Makkah"},12:{code:"NR",name:"Najran"},13:{code:"TB",name:"Tabuk"}},SN:{1:{code:"DA",name:"Dakar"},2:{code:"DI",name:"Diourbel"},3:{code:"FA",name:"Fatick"},4:{code:"KA",name:"Kaolack"},5:{code:"KO",name:"Kolda"},6:{code:"LO",name:"Louga"},7:{code:"MA",name:"Matam"},8:{code:"SL",name:"Saint-Louis"},9:{code:"TA",name:"Tambacounda"},10:{code:"TH",name:"Thies"},11:{code:"ZI",name:"Ziguinchor"}},SC:{1:{code:"AP",name:"Anse aux Pins"},2:{code:"AB",name:"Anse Boileau"},3:{code:"AE",name:"Anse Etoile"},4:{code:"AL",name:"Anse Louis"},5:{code:"AR",name:"Anse Royale"},6:{code:"BL",name:"Baie Lazare"},7:{code:"BS",name:"Baie Sainte Anne"},8:{code:"BV",name:"Beau Vallon"},9:{code:"BA",name:"Bel Air"},10:{code:"BO",name:"Bel Ombre"},11:{code:"CA",name:"Cascade"},12:{code:"GL",name:"Glacis"},13:{code:"GM",name:"Grand' Anse (on Mahe)"},14:{code:"GP",name:"Grand' Anse (on Praslin)"},15:{code:"DG",name:"La Digue"},16:{code:"RA",name:"La Riviere Anglaise"},17:{code:"MB",name:"Mont Buxton"},18:{code:"MF",name:"Mont Fleuri"},19:{code:"PL",name:"Plaisance"},20:{code:"PR",name:"Pointe La Rue"},21:{code:"PG",name:"Port Glaud"},22:{code:"SL",name:"Saint Louis"},23:{code:"TA",name:"Takamaka"}},SL:{1:{code:"E",name:"Eastern"},2:{code:"N",name:"Northern"},3:{code:"S",name:"Southern"},4:{code:"W",name:"Western"}},SK:{1:{code:"BA",name:"Banskobystricky"},2:{code:"BR",name:"Bratislavsky"},3:{code:"KO",name:"Kosicky"},4:{code:"NI",name:"Nitriansky"},5:{code:"PR",name:"Presovsky"},6:{code:"TC",name:"Trenciansky"},7:{code:"TV",name:"Trnavsky"},8:{code:"ZI",name:"Zilinsky"}},SI:{1:{code:"4",name:"Štajerska"},2:{code:"2A",name:"Gorenjska"},3:{code:"5",name:"Prekmurje"},4:{code:"3",name:"Koroška"},5:{code:"2B",name:"Notranjska"},6:{code:"1",name:"Primorska"},7:{code:"2C",name:"Dolenjska"},8:{code:"2C",name:"Bela Krajina"}},SB:{1:{code:"CE",name:"Central"},2:{code:"CH",name:"Choiseul"},3:{code:"GC",name:"Guadalcanal"},4:{code:"HO",name:"Honiara"},5:{code:"IS",name:"Isabel"},6:{code:"MK",name:"Makira"},7:{code:"ML",name:"Malaita"},8:{code:"RB",name:"Rennell and Bellona"},9:{code:"TM",name:"Temotu"},10:{code:"WE",name:"Western"}},SO:{1:{code:"AW",name:"Awdal"},2:{code:"BK",name:"Bakool"},3:{code:"BN",name:"Banaadir"},4:{code:"BR",name:"Bari"},5:{code:"BY",name:"Bay"},6:{code:"GA",name:"Galguduud"},7:{code:"GE",name:"Gedo"},8:{code:"HI",name:"Hiiraan"},9:{code:"JD",name:"Jubbada Dhexe"},10:{code:"JH",name:"Jubbada Hoose"},11:{code:"MU",name:"Mudug"},12:{code:"NU",name:"Nugaal"},13:{code:"SA",name:"Sanaag"},14:{code:"SD",name:"Shabeellaha Dhexe"},15:{code:"SH",name:"Shabeellaha Hoose"},16:{code:"SL",name:"Sool"},17:{code:"TO",name:"Togdheer"},18:{code:"WG",name:"Woqooyi Galbeed"}},ZA:{1:{code:"EC",name:"Eastern Cape"},2:{code:"FS",name:"Free State"},3:{code:"GT",name:"Gauteng"},4:{code:"KN",name:"KwaZulu-Natal"},5:{code:"LP",name:"Limpopo"},6:{code:"MP",name:"Mpumalanga"},7:{code:"NW",name:"North West"},8:{code:"NC",name:"Northern Cape"},9:{code:"WC",name:"Western Cape"}},ES:{1:{code:"CA",name:"La Coruña"},2:{code:"AL",name:"Álava"},3:{code:"AB",name:"Albacete"},4:{code:"AC",name:"Alicante"},5:{code:"AM",name:"Almeria"},6:{code:"AS",name:"Asturias"},7:{code:"AV",name:"Ávila"},8:{code:"BJ",name:"Badajoz"},9:{code:"IB",name:"Baleares"},10:{code:"BA",name:"Barcelona"},11:{code:"BU",name:"Burgos"},12:{code:"CC",name:"Cáceres"},13:{code:"CZ",name:"Cádiz"},14:{code:"CT",name:"Cantabria"},15:{code:"CL",name:"Castellón"},16:{code:"CE",name:"Ceuta"},17:{code:"CR",name:"Ciudad Real"},18:{code:"CD",name:"Córdoba"},19:{code:"CU",name:"Cuenca"},20:{code:"GI",name:"Gerona"},21:{code:"GD",name:"Granada"},22:{code:"GJ",name:"Guadalajara"},23:{code:"GP",name:"Guipúzcoa"},24:{code:"HL",name:"Huelva"},25:{code:"HS",name:"Huesca"},26:{code:"JN",name:"Jaén"},27:{code:"RJ",name:"La Rioja"},28:{code:"PM",name:"Las Palmas"},29:{code:"LE",name:"León"},30:{code:"LL",name:"Lérida"},31:{code:"LG",name:"Lugo"},32:{code:"MD",name:"Madrid"},33:{code:"MA",name:"Málaga"},34:{code:"ML",name:"Melilla"},35:{code:"MU",name:"Murcia"},36:{code:"NV",name:"Navarra"},37:{code:"OU",name:"Ourense"},38:{code:"PL",name:"Palencia"},39:{code:"PO",name:"Pontevedra"},40:{code:"SL",name:"Salamanca"},41:{code:"SC",name:"Santa Cruz de Tenerife"},42:{code:"SG",name:"Segovia"},43:{code:"SV",name:"Sevilla"},44:{code:"SO",name:"Soria"},45:{code:"TA",name:"Tarragona"},46:{code:"TE",name:"Teruel"},47:{code:"TO",name:"Toledo"},48:{code:"VC",name:"Valencia"},49:{code:"VD",name:"Valladolid"},50:{code:"VZ",name:"Vizcaya"},51:{code:"ZM",name:"Zamora"},52:{code:"ZR",name:"Zaragoza"}},LK:{1:{code:"CE",name:"Central"},2:{code:"EA",name:"Eastern"},3:{code:"NC",name:"North Central"},4:{code:"NO",name:"Northern"},5:{code:"NW",name:"North Western"},6:{code:"SA",name:"Sabaragamuwa"},7:{code:"SO",name:"Southern"},8:{code:"UV",name:"Uva"},9:{code:"WE",name:"Western"}},SH:{1:{code:"A",name:"Ascension"},2:{code:"S",name:"Saint Helena"},3:{code:"T",name:"Tristan da Cunha"}},PM:{1:{code:"P",name:"Saint Pierre"},2:{code:"M",name:"Miquelon"}},SD:{1:{code:"ANL",name:"A'ali an Nil"},2:{code:"BAM",name:"Al Bahr al Ahmar"},3:{code:"BRT",name:"Al Buhayrat"},4:{code:"JZR",name:"Al Jazirah"},5:{code:"KRT",name:"Al Khartum"},6:{code:"QDR",name:"Al Qadarif"},7:{code:"WDH",name:"Al Wahdah"},8:{code:"ANB",name:"An Nil al Abyad"},9:{code:"ANZ",name:"An Nil al Azraq"},10:{code:"ASH",name:"Ash Shamaliyah"},11:{code:"BJA",name:"Bahr al Jabal"},12:{code:"GIS",name:"Gharb al Istiwa'iyah"},13:{code:"GBG",name:"Gharb Bahr al Ghazal"},14:{code:"GDA",name:"Gharb Darfur"},15:{code:"GKU",name:"Gharb Kurdufan"},16:{code:"JDA",name:"Janub Darfur"},17:{code:"JKU",name:"Janub Kurdufan"},18:{code:"JQL",name:"Junqali"},19:{code:"KSL",name:"Kassala"},20:{code:"NNL",name:"Nahr an Nil"},21:{code:"SBG",name:"Shamal Bahr al Ghazal"},22:{code:"SDA",name:"Shamal Darfur"},23:{code:"SKU",name:"Shamal Kurdufan"},24:{code:"SIS",name:"Sharq al Istiwa'iyah"},25:{code:"SNR",name:"Sinnar"},26:{code:"WRB",name:"Warab"}},SR:{1:{code:"BR",name:"Brokopondo"},2:{code:"CM",name:"Commewijne"},3:{code:"CR",name:"Coronie"},4:{code:"MA",name:"Marowijne"},5:{code:"NI",name:"Nickerie"},6:{code:"PA",name:"Para"},7:{code:"PM",name:"Paramaribo"},9:{code:"SA",name:"Saramacca"},10:{code:"SI",name:"Sipaliwini"},11:{code:"WA",name:"Wanica"}},SZ:{1:{code:"H",name:"Hhohho"},2:{code:"L",name:"Lubombo"},3:{code:"M",name:"Manzini"},4:{code:"S",name:"Shishelweni"}},SE:{1:{code:"K",name:"Blekinge"},2:{code:"W",name:"Dalama"},3:{code:"I",name:"Gotland"},4:{code:"X",name:"Gävleborg"},5:{code:"N",name:"Halland"},6:{code:"Z",name:"Jämtland"},7:{code:"F",name:"Jönköping"},8:{code:"H",name:"Kalmar"},9:{code:"G",name:"Kronoberg"},10:{code:"BD",name:"Norrbotten"},11:{code:"M",name:"Skåne"},12:{code:"AB",name:"Stockholm"},13:{code:"D",name:"Södermanland"},14:{code:"C",name:"Uppsala"},15:{code:"S",name:"Värmland"},16:{code:"AC",name:"Västerbotten"},17:{code:"Y",name:"Västernorrland"},18:{code:"U",name:"Västmanland"},19:{code:"O",name:"Västra Götaland"},20:{code:"T",name:"Örebro"},21:{code:"E",name:"Östergötland"}},CH:{1:{code:"AG",name:"Aargau"},2:{code:"AR",name:"Appenzell Ausserrhoden"},3:{code:"AI",name:"Appenzell Innerrhoden"},4:{code:"BS",name:"Basel-Stadt"},5:{code:"BL",name:"Basel-Landschaft"},6:{code:"BE",name:"Bern"},7:{code:"FR",name:"Fribourg"},8:{code:"GE",name:"Genève"},9:{code:"GL",name:"Glarus"},10:{code:"GR",name:"Graubünden"},11:{code:"JU",name:"Jura"},12:{code:"LU",name:"Lucerne"},13:{code:"NE",name:"Neuchâtel"},14:{code:"NW",name:"Nidwalden"},15:{code:"OW",name:"Obwalden"},16:{code:"SG",name:"St. Gallen"},17:{code:"SH",name:"Schaffhausen"},18:{code:"SZ",name:"Schwyz"},19:{code:"SO",name:"Solothurn"},20:{code:"TG",name:"Thurgau"},21:{code:"TI",name:"Ticino"},22:{code:"UR",name:"Uri"},23:{code:"VS",name:"Valais"},24:{code:"VD",name:"Vaud"},25:{code:"ZG",name:"Zug"},26:{code:"ZH",name:"Zürich"}},SY:{1:{code:"HA",name:"Al Hasakah"},2:{code:"LA",name:"Al Ladhiqiyah"},3:{code:"QU",name:"Al Qunaytirah"},4:{code:"RQ",name:"Ar Raqqah"},5:{code:"SU",name:"As Suwayda"},6:{code:"DA",name:"Dara"},7:{code:"DZ",name:"Dayr az Zawr"},8:{code:"DI",name:"Dimashq"},9:{code:"HL",name:"Halab"},10:{code:"HM",name:"Hamah"},11:{code:"HI",name:"Hims"},12:{code:"ID",name:"Idlib"},13:{code:"RD",name:"Rif Dimashq"},14:{code:"TA",name:"Tartus"}},TW:{1:{code:"CH",name:"Chang-hua"},2:{code:"CI",name:"Chia-i"},3:{code:"HS",name:"Hsin-chu"},4:{code:"HL",name:"Hua-lien"},5:{code:"IL",name:"I-lan"},6:{code:"KH",name:"Kao-hsiung county"},7:{code:"KM",name:"Kin-men"},8:{code:"LC",name:"Lien-chiang"},9:{code:"ML",name:"Miao-li"},10:{code:"NT",name:"Nan-t'ou"},11:{code:"PH",name:"P'eng-hu"},12:{code:"PT",name:"P'ing-tung"},13:{code:"TG",name:"T'ai-chung"},14:{code:"TA",name:"T'ai-nan"},15:{code:"TP",name:"T'ai-pei county"},16:{code:"TT",name:"T'ai-tung"},17:{code:"TY",name:"T'ao-yuan"},18:{code:"YL",name:"Yun-lin"},19:{code:"CC",name:"Chia-i city"},20:{code:"CL",name:"Chi-lung"},21:{code:"HC",name:"Hsin-chu"},22:{code:"TH",name:"T'ai-chung"},23:{code:"TN",name:"T'ai-nan"},24:{code:"KC",name:"Kao-hsiung city"},25:{code:"TC",name:"T'ai-pei city"}},TJ:{1:{code:"GB",name:"Gorno-Badakhstan"},2:{code:"KT",name:"Khatlon"},3:{code:"SU",name:"Sughd"}},TZ:{1:{code:"AR",name:"Arusha"},2:{code:"DS",name:"Dar es Salaam"},3:{code:"DO",name:"Dodoma"},4:{code:"IR",name:"Iringa"},5:{code:"KA",name:"Kagera"},6:{code:"KI",name:"Kigoma"},7:{code:"KJ",name:"Kilimanjaro"},8:{code:"LN",name:"Lindi"},9:{code:"MY",name:"Manyara"},10:{code:"MR",name:"Mara"},11:{code:"MB",name:"Mbeya"},12:{code:"MO",name:"Morogoro"},13:{code:"MT",name:"Mtwara"},14:{code:"MW",name:"Mwanza"},15:{code:"PN",name:"Pemba North"},16:{code:"PS",name:"Pemba South"},17:{code:"PW",name:"Pwani"},18:{code:"RK",name:"Rukwa"},19:{code:"RV",name:"Ruvuma"},20:{code:"SH",name:"Shinyanga"},21:{code:"SI",name:"Singida"},22:{code:"TB",name:"Tabora"},23:{code:"TN",name:"Tanga"},24:{code:"ZC",name:"Zanzibar Central/South"},25:{code:"ZN",name:"Zanzibar North"},26:{code:"ZU",name:"Zanzibar Urban/West"}},TH:{1:{code:"Amnat Charoen",name:"Amnat Charoen"},2:{code:"Ang Thong",name:"Ang Thong"},3:{code:"Ayutthaya",name:"Ayutthaya"},4:{code:"Bangkok",name:"Bangkok"},5:{code:"Buriram",name:"Buriram"},6:{code:"Chachoengsao",name:"Chachoengsao"},7:{code:"Chai Nat",name:"Chai Nat"},8:{code:"Chaiyaphum",name:"Chaiyaphum"},9:{code:"Chanthaburi",name:"Chanthaburi"},10:{code:"Chiang Mai",name:"Chiang Mai"},11:{code:"Chiang Rai",name:"Chiang Rai"},12:{code:"Chon Buri",name:"Chon Buri"},13:{code:"Chumphon",name:"Chumphon"},14:{code:"Kalasin",name:"Kalasin"},15:{code:"Kamphaeng Phet",name:"Kamphaeng Phet"},16:{code:"Kanchanaburi",name:"Kanchanaburi"},17:{code:"Khon Kaen",name:"Khon Kaen"},18:{code:"Krabi",name:"Krabi"},19:{code:"Lampang",name:"Lampang"},20:{code:"Lamphun",name:"Lamphun"},21:{code:"Loei",name:"Loei"},22:{code:"Lop Buri",name:"Lop Buri"},23:{code:"Mae Hong Son",name:"Mae Hong Son"},24:{code:"Maha Sarakham",name:"Maha Sarakham"},25:{code:"Mukdahan",name:"Mukdahan"},26:{code:"Nakhon Nayok",name:"Nakhon Nayok"},27:{code:"Nakhon Pathom",name:"Nakhon Pathom"},28:{code:"Nakhon Phanom",name:"Nakhon Phanom"},29:{code:"Nakhon Ratchasima",name:"Nakhon Ratchasima"},30:{code:"Nakhon Sawan",name:"Nakhon Sawan"},31:{code:"Nakhon Si Thammarat",name:"Nakhon Si Thammarat"},32:{code:"Nan",name:"Nan"},33:{code:"Narathiwat",name:"Narathiwat"},34:{code:"Nong Bua Lamphu",name:"Nong Bua Lamphu"},35:{code:"Nong Khai",name:"Nong Khai"},36:{code:"Nonthaburi",name:"Nonthaburi"},37:{code:"Pathum Thani",name:"Pathum Thani"},38:{code:"Pattani",name:"Pattani"},39:{code:"Phangnga",name:"Phangnga"},40:{code:"Phatthalung",name:"Phatthalung"},41:{code:"Phayao",name:"Phayao"},42:{code:"Phetchabun",name:"Phetchabun"},43:{code:"Phetchaburi",name:"Phetchaburi"},44:{code:"Phichit",name:"Phichit"},45:{code:"Phitsanulok",name:"Phitsanulok"},46:{code:"Phrae",name:"Phrae"},47:{code:"Phuket",name:"Phuket"},48:{code:"Prachin Buri",name:"Prachin Buri"},49:{code:"Prachuap Khiri Khan",name:"Prachuap Khiri Khan"},50:{code:"Ranong",name:"Ranong"},51:{code:"Ratchaburi",name:"Ratchaburi"},52:{code:"Rayong",name:"Rayong"},53:{code:"Roi Et",name:"Roi Et"},54:{code:"Sa Kaeo",name:"Sa Kaeo"},55:{code:"Sakon Nakhon",name:"Sakon Nakhon"},56:{code:"Samut Prakan",name:"Samut Prakan"},57:{code:"Samut Sakhon",name:"Samut Sakhon"},58:{code:"Samut Songkhram",name:"Samut Songkhram"},59:{code:"Sara Buri",name:"Sara Buri"},60:{code:"Satun",name:"Satun"},61:{code:"Sing Buri",name:"Sing Buri"},62:{code:"Sisaket",name:"Sisaket"},63:{code:"Songkhla",name:"Songkhla"},64:{code:"Sukhothai",name:"Sukhothai"},65:{code:"Suphan Buri",name:"Suphan Buri"},66:{code:"Surat Thani",name:"Surat Thani"},67:{code:"Surin",name:"Surin"},68:{code:"Tak",name:"Tak"},69:{code:"Trang",name:"Trang"},70:{code:"Trat",name:"Trat"},71:{code:"Ubon Ratchathani",name:"Ubon Ratchathani"},72:{code:"Udon Thani",name:"Udon Thani"},73:{code:"Uthai Thani",name:"Uthai Thani"},74:{code:"Uttaradit",name:"Uttaradit"},75:{code:"Yala",name:"Yala"},76:{code:"Yasothon",name:"Yasothon"}},TG:{1:{code:"K",name:"Kara"},2:{code:"P",name:"Plateaux"},3:{code:"S",name:"Savanes"},4:{code:"C",name:"Centrale"},5:{code:"M",name:"Maritime"}},TK:{1:{code:"A",name:"Atafu"},2:{code:"F",name:"Fakaofo"},3:{code:"N",name:"Nukunonu"}},TO:{1:{code:"H",name:"Ha'apai"},2:{code:"T",name:"Tongatapu"},3:{code:"V",name:"Vava'u"}},TT:{1:{code:"CT",name:"Couva/Tabaquite/Talparo"},2:{code:"DM",name:"Diego Martin"},3:{code:"MR",name:"Mayaro/Rio Claro"},4:{code:"PD",name:"Penal/Debe"},5:{code:"PT",name:"Princes Town"},6:{code:"SG",name:"Sangre Grande"},7:{code:"SL",name:"San Juan/Laventille"},8:{code:"SI",name:"Siparia"},9:{code:"TP",name:"Tunapuna/Piarco"},10:{code:"PS",name:"Port of Spain"},11:{code:"SF",name:"San Fernando"},12:{code:"AR",name:"Arima"},13:{code:"PF",name:"Point Fortin"},14:{code:"CH",name:"Chaguanas"},15:{code:"TO",name:"Tobago"}},TN:{1:{code:"AR",name:"Ariana"},2:{code:"BJ",name:"Beja"},3:{code:"BA",name:"Ben Arous"},4:{code:"BI",name:"Bizerte"},5:{code:"GB",name:"Gabes"},6:{code:"GF",name:"Gafsa"},7:{code:"JE",name:"Jendouba"},8:{code:"KR",name:"Kairouan"},9:{code:"KS",name:"Kasserine"},10:{code:"KB",name:"Kebili"},11:{code:"KF",name:"Kef"},12:{code:"MH",name:"Mahdia"},13:{code:"MN",name:"Manouba"},14:{code:"ME",name:"Medenine"},15:{code:"MO",name:"Monastir"},16:{code:"NA",name:"Nabeul"},17:{code:"SF",name:"Sfax"},18:{code:"SD",name:"Sidi"},19:{code:"SL",name:"Siliana"},20:{code:"SO",name:"Sousse"},21:{code:"TA",name:"Tataouine"},22:{code:"TO",name:"Tozeur"},23:{code:"TU",name:"Tunis"},24:{code:"ZA",name:"Zaghouan"}},TR:{1:{code:"ADA",name:"Adana"},2:{code:"ADI",name:"Adiyaman"},3:{code:"AFY",name:"Afyonkarahisar"},4:{code:"AGR",name:"Agri"},5:{code:"AKS",name:"Aksaray"},6:{code:"AMA",name:"Amasya"},7:{code:"ANK",name:"Ankara"},8:{code:"ANT",name:"Antalya"},9:{code:"ARD",name:"Ardahan"},10:{code:"ART",name:"Artvin"},11:{code:"AYI",name:"Aydin"},12:{code:"BAL",name:"Balikesir"},13:{code:"BAR",name:"Bartin"},14:{code:"BAT",name:"Batman"},15:{code:"BAY",name:"Bayburt"},16:{code:"BIL",name:"Bilecik"},17:{code:"BIN",name:"Bingol"},18:{code:"BIT",name:"Bitlis"},19:{code:"BOL",name:"Bolu"},20:{code:"BRD",name:"Burdur"},21:{code:"BRS",name:"Bursa"},22:{code:"CKL",name:"Canakkale"},23:{code:"CKR",name:"Cankiri"},24:{code:"COR",name:"Corum"},25:{code:"DEN",name:"Denizli"},26:{code:"DIY",name:"Diyarbakir"},27:{code:"DUZ",name:"Duzce"},28:{code:"EDI",name:"Edirne"},29:{code:"ELA",name:"Elazig"},30:{code:"EZC",name:"Erzincan"},31:{code:"EZR",name:"Erzurum"},32:{code:"ESK",name:"Eskisehir"},33:{code:"GAZ",name:"Gaziantep"},34:{code:"GIR",name:"Giresun"},35:{code:"GMS",name:"Gumushane"},36:{code:"HKR",name:"Hakkari"},37:{code:"HTY",name:"Hatay"},38:{code:"IGD",name:"Igdir"},39:{code:"ISP",name:"Isparta"},40:{code:"IST",name:"Istanbul"},41:{code:"IZM",name:"Izmir"},42:{code:"KAH",name:"Kahramanmaras"},43:{code:"KRB",name:"Karabuk"},44:{code:"KRM",name:"Karaman"},45:{code:"KRS",name:"Kars"},46:{code:"KAS",name:"Kastamonu"},47:{code:"KAY",name:"Kayseri"},48:{code:"KLS",name:"Kilis"},49:{code:"KRK",name:"Kirikkale"},50:{code:"KLR",name:"Kirklareli"},51:{code:"KRH",name:"Kirsehir"},52:{code:"KOC",name:"Kocaeli"},53:{code:"KON",name:"Konya"},54:{code:"KUT",name:"Kutahya"},55:{code:"MAL",name:"Malatya"},56:{code:"MAN",name:"Manisa"},57:{code:"MAR",name:"Mardin"},58:{code:"MER",name:"Mersin"},59:{code:"MUG",name:"Mugla"},60:{code:"MUS",name:"Mus"},61:{code:"NEV",name:"Nevsehir"},62:{code:"NIG",name:"Nigde"},63:{code:"ORD",name:"Ordu"},64:{code:"OSM",name:"Osmaniye"},65:{code:"RIZ",name:"Rize"},66:{code:"SAK",name:"Sakarya"},67:{code:"SAM",name:"Samsun"},68:{code:"SAN",name:"Sanliurfa"},69:{code:"SII",name:"Siirt"},70:{code:"SIN",name:"Sinop"},71:{code:"SIR",name:"Sirnak"},72:{code:"SIV",name:"Sivas"},73:{code:"TEL",name:"Tekirdag"},74:{code:"TOK",name:"Tokat"},75:{code:"TRA",name:"Trabzon"},76:{code:"TUN",name:"Tunceli"},77:{code:"USK",name:"Usak"},78:{code:"VAN",name:"Van"},79:{code:"YAL",name:"Yalova"},80:{code:"YOZ",name:"Yozgat"},81:{code:"ZON",name:"Zonguldak"}},TM:{1:{code:"A",name:"Ahal Welayaty"},2:{code:"B",name:"Balkan Welayaty"},3:{code:"D",name:"Dashhowuz Welayaty"},4:{code:"L",name:"Lebap Welayaty"},5:{code:"M",name:"Mary Welayaty"}},TC:{1:{code:"AC",name:"Ambergris Cays"},2:{code:"DC",name:"Dellis Cay"},3:{code:"FC",name:"French Cay"},4:{code:"LW",name:"Little Water Cay"},5:{code:"RC",name:"Parrot Cay"},6:{code:"PN",name:"Pine Cay"},7:{code:"SL",name:"Salt Cay"},8:{code:"GT",name:"Grand Turk"},9:{code:"SC",name:"South Caicos"},10:{code:"EC",name:"East Caicos"},11:{code:"MC",name:"Middle Caicos"},12:{code:"NC",name:"North Caicos"},13:{code:"PR",name:"Providenciales"},14:{code:"WC",name:"West Caicos"}},TV:{1:{code:"NMG",name:"Nanumanga"},2:{code:"NLK",name:"Niulakita"},3:{code:"NTO",name:"Niutao"},4:{code:"FUN",name:"Funafuti"},5:{code:"NME",name:"Nanumea"},6:{code:"NUI",name:"Nui"},7:{code:"NFT",name:"Nukufetau"},8:{code:"NLL",name:"Nukulaelae"},9:{code:"VAI",name:"Vaitupu"}},UG:{1:{code:"KAL",name:"Kalangala"},2:{code:"KMP",name:"Kampala"},3:{code:"KAY",name:"Kayunga"},4:{code:"KIB",name:"Kiboga"},5:{code:"LUW",name:"Luwero"},6:{code:"MAS",name:"Masaka"},7:{code:"MPI",name:"Mpigi"},8:{code:"MUB",name:"Mubende"},9:{code:"MUK",name:"Mukono"},10:{code:"NKS",name:"Nakasongola"},11:{code:"RAK",name:"Rakai"},12:{code:"SEM",name:"Sembabule"},13:{code:"WAK",name:"Wakiso"},14:{code:"BUG",name:"Bugiri"},15:{code:"BUS",name:"Busia"},16:{code:"IGA",name:"Iganga"},17:{code:"JIN",name:"Jinja"},18:{code:"KAB",name:"Kaberamaido"},19:{code:"KML",name:"Kamuli"},20:{code:"KPC",name:"Kapchorwa"},21:{code:"KTK",name:"Katakwi"},22:{code:"KUM",name:"Kumi"},23:{code:"MAY",name:"Mayuge"},24:{code:"MBA",name:"Mbale"},25:{code:"PAL",name:"Pallisa"},26:{code:"SIR",name:"Sironko"},27:{code:"SOR",name:"Soroti"},28:{code:"TOR",name:"Tororo"},29:{code:"ADJ",name:"Adjumani"},30:{code:"APC",name:"Apac"},31:{code:"ARU",name:"Arua"},32:{code:"GUL",name:"Gulu"},33:{code:"KIT",name:"Kitgum"},34:{code:"KOT",name:"Kotido"},35:{code:"LIR",name:"Lira"},36:{code:"MRT",name:"Moroto"},37:{code:"MOY",name:"Moyo"},38:{code:"NAK",name:"Nakapiripirit"},39:{code:"NEB",name:"Nebbi"},40:{code:"PAD",name:"Pader"},41:{code:"YUM",name:"Yumbe"},42:{code:"BUN",name:"Bundibugyo"},43:{code:"BSH",name:"Bushenyi"},44:{code:"HOI",name:"Hoima"},45:{code:"KBL",name:"Kabale"},46:{code:"KAR",name:"Kabarole"},47:{code:"KAM",name:"Kamwenge"},48:{code:"KAN",name:"Kanungu"},49:{code:"KAS",name:"Kasese"},50:{code:"KBA",name:"Kibaale"},51:{code:"KIS",name:"Kisoro"},52:{code:"KYE",name:"Kyenjojo"},53:{code:"MSN",name:"Masindi"},54:{code:"MBR",name:"Mbarara"},55:{code:"NTU",name:"Ntungamo"},56:{code:"RUK",name:"Rukungiri"}},UA:{1:{code:"CK",name:"Cherkasy"},2:{code:"CH",name:"Chernihiv"},3:{code:"CV",name:"Chernivtsi"},4:{code:"CR",name:"Crimea"},5:{code:"DN",name:"Dnipropetrovs'k"},6:{code:"DO",name:"Donets'k"},7:{code:"IV",name:"Ivano-Frankivs'k"},8:{code:"KL",name:"Kharkiv Kherson"},9:{code:"KM",name:"Khmel'nyts'kyy"},10:{code:"KR",name:"Kirovohrad"},11:{code:"KV",name:"Kiev"},12:{code:"KY",name:"Kyyiv"},13:{code:"LU",name:"Luhans'k"},14:{code:"LV",name:"L'viv"},15:{code:"MY",name:"Mykolayiv"},16:{code:"OD",name:"Odesa"},17:{code:"PO",name:"Poltava"},18:{code:"RI",name:"Rivne"},19:{code:"SE",name:"Sevastopol"},20:{code:"SU",name:"Sumy"},21:{code:"TE",name:"Ternopil'"},22:{code:"VI",name:"Vinnytsya"},23:{code:"VO",name:"Volyn'"},24:{code:"ZK",name:"Zakarpattya"},25:{code:"ZA",name:"Zaporizhzhya"},26:{code:"ZH",name:"Zhytomyr"}},AE:{1:{code:"AZ",name:"Abu Zaby"},2:{code:"AJ",name:"'Ajman"},3:{code:"FU",name:"Al Fujayrah"},4:{code:"SH",name:"Ash Shariqah"},5:{code:"DU",name:"Dubayy"},6:{code:"RK",name:"R'as al Khaymah"},7:{code:"UQ",name:"Umm al Qaywayn"}},GB:{1:{code:"ABN",name:"Aberdeen"},2:{code:"ABNS",name:"Aberdeenshire"},3:{code:"ANG",name:"Anglesey"},4:{code:"AGS",name:"Angus"},5:{code:"ARY",name:"Argyll and Bute"},6:{code:"BEDS",name:"Bedfordshire"},7:{code:"BERKS",name:"Berkshire"},8:{code:"BLA",name:"Blaenau Gwent"},9:{code:"BRI",name:"Bridgend"},10:{code:"BSTL",name:"Bristol"},11:{code:"BUCKS",name:"Buckinghamshire"},12:{code:"CAE",name:"Caerphilly"},13:{code:"CAMBS",name:"Cambridgeshire"},14:{code:"CDF",name:"Cardiff"},15:{code:"CARM",name:"Carmarthenshire"},16:{code:"CDGN",name:"Ceredigion"},17:{code:"CHES",name:"Cheshire"},18:{code:"CLACK",name:"Clackmannanshire"},19:{code:"CON",name:"Conwy"},20:{code:"CORN",name:"Cornwall"},21:{code:"DNBG",name:"Denbighshire"},22:{code:"DERBY",name:"Derbyshire"},23:{code:"DVN",name:"Devon"},24:{code:"DOR",name:"Dorset"},25:{code:"DGL",name:"Dumfries and Galloway"},26:{code:"DUND",name:"Dundee"},27:{code:"DHM",name:"Durham"},28:{code:"ARYE",name:"East Ayrshire"},29:{code:"DUNBE",name:"East Dunbartonshire"},30:{code:"LOTE",name:"East Lothian"},31:{code:"RENE",name:"East Renfrewshire"},32:{code:"ERYS",name:"East Riding of Yorkshire"},33:{code:"SXE",name:"East Sussex"},34:{code:"EDIN",name:"Edinburgh"},35:{code:"ESX",name:"Essex"},36:{code:"FALK",name:"Falkirk"},37:{code:"FFE",name:"Fife"},38:{code:"FLINT",name:"Flintshire"},39:{code:"GLAS",name:"Glasgow"},40:{code:"GLOS",name:"Gloucestershire"},41:{code:"LDN",name:"Greater London"},42:{code:"MCH",name:"Greater Manchester"},43:{code:"GDD",name:"Gwynedd"},44:{code:"HANTS",name:"Hampshire"},45:{code:"HWR",name:"Herefordshire"},46:{code:"HERTS",name:"Hertfordshire"},47:{code:"HLD",name:"Highlands"},48:{code:"IVER",name:"Inverclyde"},49:{code:"IOW",name:"Isle of Wight"},50:{code:"KNT",name:"Kent"},51:{code:"LANCS",name:"Lancashire"},52:{code:"LEICS",name:"Leicestershire"},53:{code:"LINCS",name:"Lincolnshire"},54:{code:"MSY",name:"Merseyside"},55:{code:"MERT",name:"Merthyr Tydfil"},56:{code:"MLOT",name:"Midlothian"},57:{code:"MMOUTH",name:"Monmouthshire"},58:{code:"MORAY",name:"Moray"},59:{code:"NPRTAL",name:"Neath Port Talbot"},60:{code:"NEWPT",name:"Newport"},61:{code:"NOR",name:"Norfolk"},62:{code:"ARYN",name:"North Ayrshire"},63:{code:"LANN",name:"North Lanarkshire"},64:{code:"YSN",name:"North Yorkshire"},65:{code:"NHM",name:"Northamptonshire"},66:{code:"NLD",name:"Northumberland"},67:{code:"NOT",name:"Nottinghamshire"},68:{code:"ORK",name:"Orkney Islands"},69:{code:"OFE",name:"Oxfordshire"},70:{code:"PEM",name:"Pembrokeshire"},71:{code:"PERTH",name:"Perth and Kinross"},72:{code:"PWS",name:"Powys"},73:{code:"REN",name:"Renfrewshire"},74:{code:"RHON",name:"Rhondda Cynon Taff"},75:{code:"RUT",name:"Rutland"},76:{code:"BOR",name:"Scottish Borders"},77:{code:"SHET",name:"Shetland Islands"},78:{code:"SPE",name:"Shropshire"},79:{code:"SOM",name:"Somerset"},80:{code:"ARYS",name:"South Ayrshire"},81:{code:"LANS",name:"South Lanarkshire"},82:{code:"YSS",name:"South Yorkshire"},83:{code:"SFD",name:"Staffordshire"},84:{code:"STIR",name:"Stirling"},85:{code:"SFK",name:"Suffolk"},86:{code:"SRY",name:"Surrey"},87:{code:"SWAN",name:"Swansea"},88:{code:"TORF",name:"Torfaen"},89:{code:"TWR",name:"Tyne and Wear"},90:{code:"VGLAM",name:"Vale of Glamorgan"},91:{code:"WARKS",name:"Warwickshire"},92:{code:"WDUN",name:"West Dunbartonshire"},93:{code:"WLOT",name:"West Lothian"},94:{code:"WMD",name:"West Midlands"},95:{code:"SXW",name:"West Sussex"},96:{code:"YSW",name:"West Yorkshire"},97:{code:"WIL",name:"Western Isles"},98:{code:"WLT",name:"Wiltshire"},99:{code:"WORCS",name:"Worcestershire"},100:{code:"WRX",name:"Wrexham"}},US:{1:{code:"AL",name:"Alabama"},2:{code:"AK",name:"Alaska"},3:{code:"AS",name:"American Samoa"},4:{code:"AZ",name:"Arizona"},5:{code:"AR",name:"Arkansas"},6:{code:"AF",name:"Armed Forces Africa"},7:{code:"AA",name:"Armed Forces Americas"},8:{code:"AC",name:"Armed Forces Canada"},9:{code:"AE",name:"Armed Forces Europe"},10:{code:"AM",name:"Armed Forces Middle East"},11:{code:"AP",name:"Armed Forces Pacific"},12:{code:"CA",name:"California"},13:{code:"CO",name:"Colorado"},14:{code:"CT",name:"Connecticut"},15:{code:"DE",name:"Delaware"},16:{code:"DC",name:"District of Columbia"},17:{code:"FM",name:"Federated States Of Micronesia"},18:{code:"FL",name:"Florida"},19:{code:"GA",name:"Georgia"},20:{code:"GU",name:"Guam"},21:{code:"HI",name:"Hawaii"},22:{code:"ID",name:"Idaho"},23:{code:"IL",name:"Illinois"},24:{code:"IN",name:"Indiana"},25:{code:"IA",name:"Iowa"},26:{code:"KS",name:"Kansas"},27:{code:"KY",name:"Kentucky"},28:{code:"LA",name:"Louisiana"},29:{code:"ME",name:"Maine"},30:{code:"MH",name:"Marshall Islands"},31:{code:"MD",name:"Maryland"},32:{code:"MA",name:"Massachusetts"},33:{code:"MI",name:"Michigan"},34:{code:"MN",name:"Minnesota"},35:{code:"MS",name:"Mississippi"},36:{code:"MO",name:"Missouri"},37:{code:"MT",name:"Montana"},38:{code:"NE",name:"Nebraska"},39:{code:"NV",name:"Nevada"},40:{code:"NH",name:"New Hampshire"},41:{code:"NJ",name:"New Jersey"},42:{code:"NM",name:"New Mexico"},43:{code:"NY",name:"New York"},44:{code:"NC",name:"North Carolina"},45:{code:"ND",name:"North Dakota"},46:{code:"MP",name:"Northern Mariana Islands"},47:{code:"OH",name:"Ohio"},48:{code:"OK",name:"Oklahoma"},49:{code:"OR",name:"Oregon"},50:{code:"PW",name:"Palau"},51:{code:"PA",name:"Pennsylvania"},52:{code:"PR",name:"Puerto Rico"},53:{code:"RI",name:"Rhode Island"},54:{code:"SC",name:"South Carolina"},55:{code:"SD",name:"South Dakota"},56:{code:"TN",name:"Tennessee"},57:{code:"TX",name:"Texas"},58:{code:"UT",name:"Utah"},59:{code:"VT",name:"Vermont"},60:{code:"VI",name:"Virgin Islands"},61:{code:"VA",name:"Virginia"},62:{code:"WA",name:"Washington"},63:{code:"WV",name:"West Virginia"},64:{code:"WI",name:"Wisconsin"},65:{code:"WY",name:"Wyoming"}},UM:{1:{code:"BI",name:"Baker Island"},2:{code:"HI",name:"Howland Island"},3:{code:"JI",name:"Jarvis Island"},4:{code:"JA",name:"Johnston Atoll"},5:{code:"KR",name:"Kingman Reef"},6:{code:"MA",name:"Midway Atoll"},7:{code:"NI",name:"Navassa Island"},8:{code:"PA",name:"Palmyra Atoll"},9:{code:"WI",name:"Wake Island"}},UY:{1:{code:"AR",name:"Artigas"},2:{code:"CA",name:"Canelones"},3:{code:"CL",name:"Cerro Largo"},4:{code:"CO",name:"Colonia"},5:{code:"DU",name:"Durazno"},6:{code:"FS",name:"Flores"},7:{code:"FA",name:"Florida"},8:{code:"LA",name:"Lavalleja"},9:{code:"MA",name:"Maldonado"},10:{code:"MO",name:"Montevideo"},11:{code:"PA",name:"Paysandu"},12:{code:"RN",name:"Rio Negro"},13:{code:"RV",name:"Rivera"},14:{code:"RO",name:"Rocha"},15:{code:"SL",name:"Salto"},16:{code:"SJ",name:"San Jose"},17:{code:"SO",name:"Soriano"},18:{code:"TA",name:"Tacuarembo"},19:{code:"TT",name:"Treinta y Tres"}},UZ:{1:{code:"AN",name:"Andijon"},2:{code:"BU",name:"Buxoro"},3:{code:"FA",name:"Farg'ona"},4:{code:"JI",name:"Jizzax"},5:{code:"NG",name:"Namangan"},6:{code:"NW",name:"Navoiy"},7:{code:"QA",name:"Qashqadaryo"},8:{code:"QR",name:"Qoraqalpog'iston Republikasi"},9:{code:"SA",name:"Samarqand"},10:{code:"SI",name:"Sirdaryo"},11:{code:"SU",name:"Surxondaryo"},12:{code:"TK",name:"Toshkent City"},13:{code:"TO",name:"Toshkent Region"},14:{code:"XO",name:"Xorazm"}},VU:{1:{code:"MA",name:"Malampa"},2:{code:"PE",name:"Penama"},3:{code:"SA",name:"Sanma"},4:{code:"SH",name:"Shefa"},5:{code:"TA",name:"Tafea"},6:{code:"TO",name:"Torba"}},VE:{1:{code:"AM",name:"Amazonas"},2:{code:"AN",name:"Anzoategui"},3:{code:"AP",name:"Apure"},4:{code:"AR",name:"Aragua"},5:{code:"BA",name:"Barinas"},6:{code:"BO",name:"Bolivar"},7:{code:"CA",name:"Carabobo"},8:{code:"CO",name:"Cojedes"},9:{code:"DA",name:"Delta Amacuro"},10:{code:"DF",name:"Dependencias Federales"},11:{code:"DI",name:"Distrito Federal"},12:{code:"FA",name:"Falcon"},13:{code:"GU",name:"Guarico"},14:{code:"LA",name:"Lara"},15:{code:"ME",name:"Merida"},16:{code:"MI",name:"Miranda"},17:{code:"MO",name:"Monagas"},18:{code:"NE",name:"Nueva Esparta"},19:{code:"PO",name:"Portuguesa"},20:{code:"SU",name:"Sucre"},21:{code:"TA",name:"Tachira"},22:{code:"TR",name:"Trujillo"},23:{code:"VA",name:"Vargas"},24:{code:"YA",name:"Yaracuy"},25:{code:"ZU",name:"Zulia"}},VN:{1:{code:"AG",name:"An Giang"},2:{code:"BG",name:"Bac Giang"},3:{code:"BK",name:"Bac Kan"},4:{code:"BL",name:"Bac Lieu"},5:{code:"BC",name:"Bac Ninh"},6:{code:"BR",name:"Ba Ria-Vung Tau"},7:{code:"BN",name:"Ben Tre"},8:{code:"BH",name:"Binh Dinh"},9:{code:"BU",name:"Binh Duong"},10:{code:"BP",name:"Binh Phuoc"},11:{code:"BT",name:"Binh Thuan"},12:{code:"CM",name:"Ca Mau"},13:{code:"CT",name:"Can Tho"},14:{code:"CB",name:"Cao Bang"},15:{code:"DL",name:"Dak Lak"},16:{code:"DG",name:"Dak Nong"},17:{code:"DN",name:"Da Nang"},18:{code:"DB",name:"Dien Bien"},19:{code:"DI",name:"Dong Nai"},20:{code:"DT",name:"Dong Thap"},21:{code:"GL",name:"Gia Lai"},22:{code:"HG",name:"Ha Giang"},23:{code:"HD",name:"Hai Duong"},24:{code:"HP",name:"Hai Phong"},25:{code:"HM",name:"Ha Nam"},26:{code:"HI",name:"Ha Noi"},27:{code:"HT",name:"Ha Tay"},28:{code:"HH",name:"Ha Tinh"},29:{code:"HB",name:"Hoa Binh"},30:{code:"HC",name:"Ho Chin Minh"},31:{code:"HU",name:"Hau Giang"},32:{code:"HY",name:"Hung Yen"}},VI:{1:{code:"C",name:"Saint Croix"},2:{code:"J",name:"Saint John"},3:{code:"T",name:"Saint Thomas"}},WF:{1:{code:"A",name:"Alo"},2:{code:"S",name:"Sigave"},3:{code:"W",name:"Wallis"}},YE:{1:{code:"AB",name:"Abyan"},2:{code:"AD",name:"Adan"},3:{code:"AM",name:"Amran"},4:{code:"BA",name:"Al Bayda"},5:{code:"DA",name:"Ad Dali"},6:{code:"DH",name:"Dhamar"},7:{code:"HD",name:"Hadramawt"},8:{code:"HJ",name:"Hajjah"},9:{code:"HU",name:"Al Hudaydah"},10:{code:"IB",name:"Ibb"},11:{code:"JA",name:"Al Jawf"},12:{code:"LA",name:"Lahij"},13:{code:"MA",name:"Ma'rib"},14:{code:"MR",name:"Al Mahrah"},15:{code:"MW",name:"Al Mahwit"},16:{code:"SD",name:"Sa'dah"},17:{code:"SN",name:"San'a"},18:{code:"SH",name:"Shabwah"},19:{code:"TA",name:"Ta'izz"}},YU:{1:{code:"KOS",name:"Kosovo"},2:{code:"MON",name:"Montenegro"},3:{code:"SER",name:"Serbia"},4:{code:"VOJ",name:"Vojvodina"}},ZR:{1:{code:"BC",name:"Bas-Congo"},2:{code:"BN",name:"Bandundu"},3:{code:"EQ",name:"Equateur"},4:{code:"KA",name:"Katanga"},5:{code:"KE",name:"Kasai-Oriental"},6:{code:"KN",name:"Kinshasa"},7:{code:"KW",name:"Kasai-Occidental"},8:{code:"MA",name:"Maniema"},9:{code:"NK",name:"Nord-Kivu"},10:{code:"OR",name:"Orientale"},11:{code:"SK",name:"Sud-Kivu"}},ZM:{1:{code:"CE",name:"Central"},2:{code:"CB",name:"Copperbelt"},3:{code:"EA",name:"Eastern"},4:{code:"LP",name:"Luapula"},5:{code:"LK",name:"Lusaka"},6:{code:"NO",name:"Northern"},7:{code:"NW",name:"North-Western"},8:{code:"SO",name:"Southern"},9:{code:"WE",name:"Western"}},ZW:{1:{code:"BU",name:"Bulawayo"},2:{code:"HA",name:"Harare"},3:{code:"ML",name:"Manicaland"},4:{code:"MC",name:"Mashonaland Central"},5:{code:"ME",name:"Mashonaland East"},6:{code:"MW",name:"Mashonaland West"},7:{code:"MV",name:"Masvingo"},8:{code:"MN",name:"Matabeleland North"},9:{code:"MS",name:"Matabeleland South"},10:{code:"MD",name:"Midlands"}}},BFHTimePickerDelimiter=":",BFHTimePickerModes={am:"AM",pm:"PM"},BFHTimezonesList={AF:{"Asia/Kabul":"Kabul"},AL:{"Europe/Tirane":"Tirane"},DZ:{"Africa/Algiers":"Algiers"},AS:{"Pacific/Pago_Pago":"Pago Pago"},AD:{"Europe/Andorra":"Andorra"},AO:{"Africa/Luanda":"Luanda"},AI:{"America/Anguilla":"Anguilla"},AQ:{"Antarctica/Casey":"Casey","Antarctica/Davis":"Davis","Antarctica/DumontDUrville":"DumontDUrville","Antarctica/Macquarie":"Macquarie","Antarctica/Mawson":"Mawson","Antarctica/McMurdo":"McMurdo","Antarctica/Palmer":"Palmer","Antarctica/Rothera":"Rothera","Antarctica/South_Pole":"South Pole","Antarctica/Syowa":"Syowa","Antarctica/Vostok":"Vostok"},AG:{"America/Antigua":"Antigua"},AR:{"America/Argentina/Buenos_Aires":"Argentina / Buenos Aires","America/Argentina/Catamarca":"Argentina / Catamarca","America/Argentina/Cordoba":"Argentina / Cordoba","America/Argentina/Jujuy":"Argentina / Jujuy","America/Argentina/La_Rioja":"Argentina / La Rioja","America/Argentina/Mendoza":"Argentina / Mendoza","America/Argentina/Rio_Gallegos":"Argentina / Rio Gallegos","America/Argentina/Salta":"Argentina / Salta","America/Argentina/San_Juan":"Argentina / San Juan","America/Argentina/San_Luis":"Argentina / San Luis","America/Argentina/Tucuman":"Argentina / Tucuman","America/Argentina/Ushuaia":"Argentina / Ushuaia"},AM:{"Asia/Yerevan":"Yerevan"},AW:{"America/Aruba":"Aruba"},AU:{"Australia/Adelaide":"Adelaide","Australia/Brisbane":"Brisbane","Australia/Broken_Hill":"Broken Hill","Australia/Currie":"Currie","Australia/Darwin":"Darwin","Australia/Eucla":"Eucla","Australia/Hobart":"Hobart","Australia/Lindeman":"Lindeman","Australia/Lord_Howe":"Lord Howe","Australia/Melbourne":"Melbourne","Australia/Perth":"Perth","Australia/Sydney":"Sydney"},AT:{"Europe/Vienna":"Vienna"},AZ:{"Asia/Baku":"Baku"},BH:{"Asia/Bahrain":"Bahrain"},BD:{"Asia/Dhaka":"Dhaka"},BB:{"America/Barbados":"Barbados"},BY:{"Europe/Minsk":"Minsk"},BE:{"Europe/Brussels":"Brussels"},BZ:{"America/Belize":"Belize"},BJ:{"Africa/Porto-Novo":"Porto-Novo"},BM:{"Atlantic/Bermuda":"Bermuda"},BT:{"Asia/Thimphu":"Thimphu"},BO:{"America/La_Paz":"La Paz"},BA:{"Europe/Sarajevo":"Sarajevo"},BW:{"Africa/Gaborone":"Gaborone"},BR:{"America/Araguaina":"Araguaina","America/Bahia":"Bahia","America/Belem":"Belem","America/Boa_Vista":"Boa Vista","America/Campo_Grande":"Campo Grande","America/Cuiaba":"Cuiaba","America/Eirunepe":"Eirunepe","America/Fortaleza":"Fortaleza","America/Maceio":"Maceio","America/Manaus":"Manaus","America/Noronha":"Noronha","America/Porto_Velho":"Porto Velho","America/Recife":"Recife","America/Rio_Branco":"Rio Branco","America/Santarem":"Santarem","America/Sao_Paulo":"Sao Paulo"},VG:{"America/Tortola":"Tortola"},BN:{"Asia/Brunei":"Brunei"},BG:{"Europe/Sofia":"Sofia"},BF:{"Africa/Ouagadougou":"Ouagadougou"},BI:{"Africa/Bujumbura":"Bujumbura"},CI:{"Africa/Abidjan":"Abidjan"},KH:{"Asia/Phnom_Penh":"Phnom Penh"},CM:{"Africa/Douala":"Douala"},CA:{"America/Atikokan":"Atikokan","America/Blanc-Sablon":"Blanc-Sablon","America/Cambridge_Bay":"Cambridge Bay","America/Creston":"Creston","America/Dawson":"Dawson","America/Dawson_Creek":"Dawson Creek","America/Edmonton":"Edmonton","America/Glace_Bay":"Glace Bay","America/Goose_Bay":"Goose Bay","America/Halifax":"Halifax","America/Inuvik":"Inuvik","America/Iqaluit":"Iqaluit","America/Moncton":"Moncton","America/Montreal":"Montreal","America/Nipigon":"Nipigon","America/Pangnirtung":"Pangnirtung","America/Rainy_River":"Rainy River","America/Rankin_Inlet":"Rankin Inlet","America/Regina":"Regina","America/Resolute":"Resolute","America/St_Johns":"St Johns","America/Swift_Current":"Swift Current","America/Thunder_Bay":"Thunder Bay","America/Toronto":"Toronto","America/Vancouver":"Vancouver","America/Whitehorse":"Whitehorse","America/Winnipeg":"Winnipeg","America/Yellowknife":"Yellowknife"},CV:{"Atlantic/Cape_Verde":"Cape Verde"},KY:{"America/Cayman":"Cayman"},CF:{"Africa/Bangui":"Bangui"},TD:{"Africa/Ndjamena":"Ndjamena"},CL:{"America/Santiago":"Santiago","Pacific/Easter":"Easter"},CN:{"Asia/Chongqing":"Chongqing","Asia/Harbin":"Harbin","Asia/Kashgar":"Kashgar","Asia/Shanghai":"Shanghai","Asia/Urumqi":"Urumqi"},CO:{"America/Bogota":"Bogota"},KM:{"Indian/Comoro":"Comoro"},CG:{"Africa/Brazzaville":"Brazzaville"},CR:{"America/Costa_Rica":"Costa Rica"},HR:{"Europe/Zagreb":"Zagreb"},CU:{"America/Havana":"Havana"},CY:{"Asia/Nicosia":"Nicosia"},CZ:{"Europe/Prague":"Prague"},CD:{"Africa/Kinshasa":"Kinshasa","Africa/Lubumbashi":"Lubumbashi"},DK:{"Europe/Copenhagen":"Copenhagen"},DJ:{"Africa/Djibouti":"Djibouti"},DM:{"America/Dominica":"Dominica"},DO:{"America/Santo_Domingo":"Santo Domingo"},TP:{},EC:{"America/Guayaquil":"Guayaquil","Pacific/Galapagos":"Galapagos"},EG:{"Africa/Cairo":"Cairo"},SV:{"America/El_Salvador":"El Salvador"},GQ:{"Africa/Malabo":"Malabo"},ER:{"Africa/Asmara":"Asmara"},EE:{"Europe/Tallinn":"Tallinn"},ET:{"Africa/Addis_Ababa":"Addis Ababa"},FO:{"Atlantic/Faroe":"Faroe"},FK:{"Atlantic/Stanley":"Stanley"},FJ:{"Pacific/Fiji":"Fiji"},FI:{"Europe/Helsinki":"Helsinki"},MK:{"Europe/Skopje":"Skopje"},FR:{"Europe/Paris":"Paris"},GA:{"Africa/Libreville":"Libreville"},GE:{"Asia/Tbilisi":"Tbilisi"},DE:{"Europe/Berlin":"Berlin"},GH:{"Africa/Accra":"Accra"},GR:{"Europe/Athens":"Athens"},GL:{"America/Danmarkshavn":"Danmarkshavn","America/Godthab":"Godthab","America/Scoresbysund":"Scoresbysund","America/Thule":"Thule"},GD:{"America/Grenada":"Grenada"},GU:{"Pacific/Guam":"Guam"},GT:{"America/Guatemala":"Guatemala"},GN:{"Africa/Conakry":"Conakry"},GW:{"Africa/Bissau":"Bissau"},GY:{"America/Guyana":"Guyana"},HT:{"America/Port-au-Prince":"Port-au-Prince"},HN:{"America/Tegucigalpa":"Tegucigalpa"},HK:{"Asia/Hong_Kong":"Hong Kong"},HU:{"Europe/Budapest":"Budapest"},IS:{"Atlantic/Reykjavik":"Reykjavik"},IN:{"Asia/Kolkata":"Kolkata"},ID:{"Asia/Jakarta":"Jakarta","Asia/Jayapura":"Jayapura","Asia/Makassar":"Makassar","Asia/Pontianak":"Pontianak"},IR:{"Asia/Tehran":"Tehran"},IQ:{"Asia/Baghdad":"Baghdad"},IE:{"Europe/Dublin":"Dublin"},IL:{"Asia/Jerusalem":"Jerusalem"},IT:{"Europe/Rome":"Rome"},JM:{"America/Jamaica":"Jamaica"},JP:{"Asia/Tokyo":"Tokyo"},JO:{"Asia/Amman":"Amman"},KZ:{"Asia/Almaty":"Almaty","Asia/Aqtau":"Aqtau","Asia/Aqtobe":"Aqtobe","Asia/Oral":"Oral","Asia/Qyzylorda":"Qyzylorda"},KE:{"Africa/Nairobi":"Nairobi"},KI:{"Pacific/Enderbury":"Enderbury","Pacific/Kiritimati":"Kiritimati","Pacific/Tarawa":"Tarawa"},KW:{"Asia/Kuwait":"Kuwait"},KG:{"Asia/Bishkek":"Bishkek"},LA:{"Asia/Vientiane":"Vientiane"},LV:{"Europe/Riga":"Riga"},LB:{"Asia/Beirut":"Beirut"},LS:{"Africa/Maseru":"Maseru"},LR:{"Africa/Monrovia":"Monrovia"},LY:{"Africa/Tripoli":"Tripoli"},LI:{"Europe/Vaduz":"Vaduz"},LT:{"Europe/Vilnius":"Vilnius"},LU:{"Europe/Luxembourg":"Luxembourg"},MO:{"Asia/Macau":"Macau"},MG:{"Indian/Antananarivo":"Antananarivo"},MW:{"Africa/Blantyre":"Blantyre"},MY:{"Asia/Kuala_Lumpur":"Kuala Lumpur","Asia/Kuching":"Kuching"},MV:{"Indian/Maldives":"Maldives"},ML:{"Africa/Bamako":"Bamako"},MT:{"Europe/Malta":"Malta"},MH:{"Pacific/Kwajalein":"Kwajalein","Pacific/Majuro":"Majuro"},MR:{"Africa/Nouakchott":"Nouakchott"},MU:{"Indian/Mauritius":"Mauritius"},MX:{"America/Bahia_Banderas":"Bahia Banderas","America/Cancun":"Cancun","America/Chihuahua":"Chihuahua","America/Hermosillo":"Hermosillo","America/Matamoros":"Matamoros","America/Mazatlan":"Mazatlan","America/Merida":"Merida","America/Mexico_City":"Mexico City","America/Monterrey":"Monterrey","America/Ojinaga":"Ojinaga","America/Santa_Isabel":"Santa Isabel","America/Tijuana":"Tijuana"},FM:{"Pacific/Chuuk":"Chuuk","Pacific/Kosrae":"Kosrae","Pacific/Pohnpei":"Pohnpei"},MD:{"Europe/Chisinau":"Chisinau"},MC:{"Europe/Monaco":"Monaco"},MN:{"Asia/Choibalsan":"Choibalsan","Asia/Hovd":"Hovd","Asia/Ulaanbaatar":"Ulaanbaatar"},ME:{"Europe/Podgorica":"Podgorica"},MS:{"America/Montserrat":"Montserrat"},MA:{"Africa/Casablanca":"Casablanca"},MZ:{"Africa/Maputo":"Maputo"},MM:{"Asia/Rangoon":"Rangoon"},NA:{"Africa/Windhoek":"Windhoek"},NR:{"Pacific/Nauru":"Nauru"},NP:{"Asia/Kathmandu":"Kathmandu"},NL:{"Europe/Amsterdam":"Amsterdam"},AN:{},NZ:{"Pacific/Auckland":"Auckland","Pacific/Chatham":"Chatham"},NI:{"America/Managua":"Managua"},NE:{"Africa/Niamey":"Niamey"},NG:{"Africa/Lagos":"Lagos"},NF:{"Pacific/Norfolk":"Norfolk"},KP:{"Asia/Pyongyang":"Pyongyang"},MP:{"Pacific/Saipan":"Saipan"},NO:{"Europe/Oslo":"Oslo"},OM:{"Asia/Muscat":"Muscat"},PK:{"Asia/Karachi":"Karachi"},PW:{"Pacific/Palau":"Palau"},PA:{"America/Panama":"Panama"},PG:{"Pacific/Port_Moresby":"Port Moresby"},PY:{"America/Asuncion":"Asuncion"},PE:{"America/Lima":"Lima"},PH:{"Asia/Manila":"Manila"},PN:{"Pacific/Pitcairn":"Pitcairn"},PL:{"Europe/Warsaw":"Warsaw"},PT:{"Atlantic/Azores":"Azores","Atlantic/Madeira":"Madeira","Europe/Lisbon":"Lisbon"},PR:{"America/Puerto_Rico":"Puerto Rico"},QA:{"Asia/Qatar":"Qatar"},RO:{"Europe/Bucharest":"Bucharest"},RU:{"Asia/Anadyr":"Anadyr","Asia/Irkutsk":"Irkutsk","Asia/Kamchatka":"Kamchatka","Asia/Krasnoyarsk":"Krasnoyarsk","Asia/Magadan":"Magadan","Asia/Novokuznetsk":"Novokuznetsk","Asia/Novosibirsk":"Novosibirsk","Asia/Omsk":"Omsk","Asia/Sakhalin":"Sakhalin","Asia/Vladivostok":"Vladivostok","Asia/Yakutsk":"Yakutsk","Asia/Yekaterinburg":"Yekaterinburg","Europe/Kaliningrad":"Kaliningrad","Europe/Moscow":"Moscow","Europe/Samara":"Samara","Europe/Volgograd":"Volgograd"},RW:{"Africa/Kigali":"Kigali"},ST:{"Africa/Sao_Tome":"Sao Tome"},SH:{"Atlantic/St_Helena":"St Helena"},KN:{"America/St_Kitts":"St Kitts"},LC:{"America/St_Lucia":"St Lucia"},VC:{"America/St_Vincent":"St Vincent"},WS:{"Pacific/Apia":"Apia"},SM:{"Europe/San_Marino":"San Marino"},SA:{"Asia/Riyadh":"Riyadh"},SN:{"Africa/Dakar":"Dakar"},RS:{"Europe/Belgrade":"Belgrade"},SC:{"Indian/Mahe":"Mahe"},SL:{"Africa/Freetown":"Freetown"},SG:{"Asia/Singapore":"Singapore"},SK:{"Europe/Bratislava":"Bratislava"},SI:{"Europe/Ljubljana":"Ljubljana"},SB:{"Pacific/Guadalcanal":"Guadalcanal"},SO:{"Africa/Mogadishu":"Mogadishu"},ZA:{"Africa/Johannesburg":"Johannesburg"},GS:{"Atlantic/South_Georgia":"South Georgia"},KR:{"Asia/Seoul":"Seoul"},ES:{"Africa/Ceuta":"Ceuta","Atlantic/Canary":"Canary","Europe/Madrid":"Madrid"},LK:{"Asia/Colombo":"Colombo"},SD:{"Africa/Khartoum":"Khartoum"},SR:{"America/Paramaribo":"Paramaribo"},SZ:{"Africa/Mbabane":"Mbabane"},SE:{"Europe/Stockholm":"Stockholm"},CH:{"Europe/Zurich":"Zurich"},SY:{"Asia/Damascus":"Damascus"},TW:{"Asia/Taipei":"Taipei"},TJ:{"Asia/Dushanbe":"Dushanbe"},TZ:{"Africa/Dar_es_Salaam":"Dar es Salaam"},TH:{"Asia/Bangkok":"Bangkok"},BS:{"America/Nassau":"Nassau"},GM:{"Africa/Banjul":"Banjul"},TG:{"Africa/Lome":"Lome"},TO:{"Pacific/Tongatapu":"Tongatapu"},TT:{"America/Port_of_Spain":"Port of Spain"},TN:{"Africa/Tunis":"Tunis"},TR:{"Europe/Istanbul":"Istanbul"},TM:{"Asia/Ashgabat":"Ashgabat"},TC:{"America/Grand_Turk":"Grand Turk"},TV:{"Pacific/Funafuti":"Funafuti"},VI:{"America/St_Thomas":"St Thomas"},UG:{"Africa/Kampala":"Kampala"},UA:{"Europe/Kiev":"Kiev","Europe/Simferopol":"Simferopol","Europe/Uzhgorod":"Uzhgorod","Europe/Zaporozhye":"Zaporozhye"},AE:{"Asia/Dubai":"Dubai"},GB:{"Europe/London":"London"},US:{"America/Adak":"Adak","America/Anchorage":"Anchorage","America/Boise":"Boise","America/Chicago":"Chicago","America/Denver":"Denver","America/Detroit":"Detroit","America/Indiana/Indianapolis":"Indiana / Indianapolis","America/Indiana/Knox":"Indiana / Knox","America/Indiana/Marengo":"Indiana / Marengo","America/Indiana/Petersburg":"Indiana / Petersburg","America/Indiana/Tell_City":"Indiana / Tell City","America/Indiana/Vevay":"Indiana / Vevay","America/Indiana/Vincennes":"Indiana / Vincennes","America/Indiana/Winamac":"Indiana / Winamac","America/Juneau":"Juneau","America/Kentucky/Louisville":"Kentucky / Louisville","America/Kentucky/Monticello":"Kentucky / Monticello","America/Los_Angeles":"Los Angeles","America/Menominee":"Menominee","America/Metlakatla":"Metlakatla","America/New_York":"New York","America/Nome":"Nome","America/North_Dakota/Beulah":"North Dakota / Beulah","America/North_Dakota/Center":"North Dakota / Center","America/North_Dakota/New_Salem":"North Dakota / New Salem","America/Phoenix":"Phoenix","America/Shiprock":"Shiprock","America/Sitka":"Sitka","America/Yakutat":"Yakutat","Pacific/Honolulu":"Honolulu"},UY:{"America/Montevideo":"Montevideo"},UZ:{"Asia/Samarkand":"Samarkand","Asia/Tashkent":"Tashkent"},VU:{"Pacific/Efate":"Efate"},VA:{"Europe/Vatican":"Vatican"},VE:{"America/Caracas":"Caracas"},VN:{"Asia/Ho_Chi_Minh":"Ho Chi Minh"},EH:{"Africa/El_Aaiun":"El Aaiun"},YE:{"Asia/Aden":"Aden"},ZM:{"Africa/Lusaka":"Lusaka"},ZW:{"Africa/Harare":"Harare"}};
+function(e){"use strict";function a(e){var a=e.toString(16);return 1===a.length?"0"+a:a}function t(e,t,n){return"#"+a(e)+a(t)+a(n)}function n(){var a;e(i).each(function(t){return a=o(e(this)),a.hasClass("open")?(a.trigger(t=e.Event("hide.bfhcolorpicker")),t.isDefaultPrevented()?!0:(a.removeClass("open").trigger("hidden.bfhcolorpicker"),void 0)):!0})}function o(e){return e.closest(".bfh-colorpicker")}var i="[data-toggle=bfh-colorpicker]",r=function(a,t){this.options=e.extend({},e.fn.bfhcolorpicker.defaults,t),this.$element=e(a),this.initPopover()};r.prototype={constructor:r,initPalette:function(){var e,a,t;e=this.$element.find("canvas"),a=e[0].getContext("2d"),t=a.createLinearGradient(0,0,e.width(),0),t.addColorStop(0,"rgb(255, 255, 255)"),t.addColorStop(.1,"rgb(255,   0,   0)"),t.addColorStop(.25,"rgb(255,   0, 255)"),t.addColorStop(.4,"rgb(0,     0, 255)"),t.addColorStop(.55,"rgb(0,   255, 255)"),t.addColorStop(.7,"rgb(0,   255,   0)"),t.addColorStop(.85,"rgb(255, 255,   0)"),t.addColorStop(1,"rgb(255,   0,   0)"),a.fillStyle=t,a.fillRect(0,0,a.canvas.width,a.canvas.height),t=a.createLinearGradient(0,0,0,e.height()),t.addColorStop(0,"rgba(255, 255, 255, 1)"),t.addColorStop(.5,"rgba(255, 255, 255, 0)"),t.addColorStop(.5,"rgba(0,     0,   0, 0)"),t.addColorStop(1,"rgba(0,     0,   0, 1)"),a.fillStyle=t,a.fillRect(0,0,a.canvas.width,a.canvas.height)},initPopover:function(){var e,a;e="",a="","right"===this.options.align?a='<span class="input-group-addon"><span class="bfh-colorpicker-icon"></span></span>':e='<span class="input-group-addon"><span class="bfh-colorpicker-icon"></span></span>',this.$element.html('<div class="input-group bfh-colorpicker-toggle" data-toggle="bfh-colorpicker">'+e+'<input type="text" name="'+this.options.name+'" class="'+this.options.input+'" placeholder="'+this.options.placeholder+'" readonly>'+a+'</div><div class="bfh-colorpicker-popover"><canvas class="bfh-colorpicker-palette" width="384" height="256"></canvas></div>'),this.$element.on("click.bfhcolorpicker.data-api touchstart.bfhcolorpicker.data-api",i,r.prototype.toggle).on("mousedown.bfhcolorpicker.data-api","canvas",r.prototype.mouseDown).on("click.bfhcolorpicker.data-api touchstart.bfhcolorpicker.data-api",".bfh-colorpicker-popover",function(){return!1}),this.initPalette(),this.$element.val(this.options.color)},updateVal:function(e,a){var n,o,i,r,s,d,l;s=5,n=this.$element.find("canvas"),o=n[0].getContext("2d"),i=e-n.offset().left,r=a-n.offset().top,i=Math.round(i/s)*s,r=Math.round(r/s)*s,0>i&&(i=0),i>=n.width()&&(i=n.width()-1),0>r&&(r=0),r>n.height()&&(r=n.height()),d=o.getImageData(i,r,1,1),l=t(d.data[0],d.data[1],d.data[2]),l!==this.$element.val()&&(this.$element.val(l),this.$element.trigger("change.bfhcolorpicker"))},mouseDown:function(){var a,t;a=e(this),t=o(a),e(document).on("mousemove.bfhcolorpicker.data-api",{colorpicker:t},r.prototype.mouseMove).one("mouseup.bfhcolorpicker.data-api",{colorpicker:t},r.prototype.mouseUp)},mouseMove:function(e){var a;a=e.data.colorpicker,a.data("bfhcolorpicker").updateVal(e.pageX,e.pageY)},mouseUp:function(a){var t;t=a.data.colorpicker,t.data("bfhcolorpicker").updateVal(a.pageX,a.pageY),e(document).off("mousemove.bfhcolorpicker.data-api"),t.data("bfhcolorpicker").options.close===!0&&n()},toggle:function(a){var t,i,r;if(t=e(this),i=o(t),i.is(".disabled")||void 0!==i.attr("disabled"))return!0;if(r=i.hasClass("open"),n(),!r){if(i.trigger(a=e.Event("show.bfhcolorpicker")),a.isDefaultPrevented())return!0;i.toggleClass("open").trigger("shown.bfhcolorpicker"),t.focus()}return!1}};var s=e.fn.bfhcolorpicker;e.fn.bfhcolorpicker=function(a){return this.each(function(){var t,n,o;t=e(this),n=t.data("bfhcolorpicker"),o="object"==typeof a&&a,this.type="bfhcolorpicker",n||t.data("bfhcolorpicker",n=new r(this,o)),"string"==typeof a&&n[a].call(t)})},e.fn.bfhcolorpicker.Constructor=r,e.fn.bfhcolorpicker.defaults={align:"left",input:"form-control",placeholder:"",name:"",color:"#000000",close:!0},e.fn.bfhcolorpicker.noConflict=function(){return e.fn.bfhcolorpicker=s,this};var d;e.valHooks.div&&(d=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-colorpicker")?e(a).find('input[type="text"]').val():d?d.get(a):void 0},set:function(a,t){if(e(a).hasClass("bfh-colorpicker"))e(a).find(".bfh-colorpicker-icon").css("background-color",t),e(a).find('input[type="text"]').val(t);else if(d)return d.set(a,t)}},e(document).ready(function(){e("div.bfh-colorpicker").each(function(){var a;a=e(this),a.bfhcolorpicker(a.data())})}),e(document).on("click.bfhcolorpicker.data-api",n)}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhcountries.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addCountries(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapCountries(),this.$element.is("span")&&this.displayCountry()};a.prototype={constructor:a,getCountries:function(){var a,t;if(this.options.available){if("string"==typeof this.options.available){t=[],this.options.available=this.options.available.split(",");for(a in BFHCountriesList)BFHCountriesList.hasOwnProperty(a)&&e.inArray(a,this.options.available)>=0&&(t[a]=BFHCountriesList[a])}else t=this.options.available;return t}return BFHCountriesList},addCountries:function(){var e,a,t;e=this.options.country,t=this.getCountries(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in t)t.hasOwnProperty(a)&&this.$element.append('<option value="'+a+'">'+t[a]+"</option>");this.$element.val(e)},addBootstrapCountries:function(){var e,a,t,n,o,i;n=this.options.country,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),i=this.getCountries(),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(o in i)i.hasOwnProperty(o)&&(this.options.flags===!0?t.append('<li><a tabindex="-1" href="#" data-option="'+o+'"><i class="glyphicon bfh-flag-'+o+'"></i>'+i[o]+"</a></li>"):t.append('<li><a tabindex="-1" href="#" data-option="'+o+'">'+i[o]+"</a></li>"));this.$element.val(n)},displayCountry:function(){var e;e=this.options.country,this.options.flags===!0?this.$element.html('<i class="glyphicon bfh-flag-'+e+'"></i> '+BFHCountriesList[e]):this.$element.html(BFHCountriesList[e])}};var t=e.fn.bfhcountries;e.fn.bfhcountries=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhcountries"),i="object"==typeof t&&t,o||n.data("bfhcountries",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhcountries.Constructor=a,e.fn.bfhcountries.defaults={country:"",available:"",flags:!1,blank:!0},e.fn.bfhcountries.noConflict=function(){return e.fn.bfhcountries=t,this},e(document).ready(function(){e("form select.bfh-countries, span.bfh-countries, div.bfh-countries").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhcountries(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhcurrencies.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addCurrencies(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapCurrencies(),this.$element.is("span")&&this.displayCurrency()};a.prototype={constructor:a,getCurrencies:function(){var a,t;if(this.options.available){t=[],this.options.available=this.options.available.split(",");for(a in BFHCurrenciesList)BFHCurrenciesList.hasOwnProperty(a)&&e.inArray(a,this.options.available)>=0&&(t[a]=BFHCurrenciesList[a]);return t}return BFHCurrenciesList},addCurrencies:function(){var e,a,t;e=this.options.currency,t=this.getCurrencies(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in t)t.hasOwnProperty(a)&&this.$element.append('<option value="'+a+'">'+t[a].label+"</option>");this.$element.val(e)},addBootstrapCurrencies:function(){var e,a,t,n,o,i,r;n=this.options.currency,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),i=this.getCurrencies(),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(o in i)i.hasOwnProperty(o)&&(this.options.flags===!0?(r=i[o].currencyflag?i[o].currencyflag:o.substr(0,2),t.append('<li><a tabindex="-1" href="#" data-option="'+o+'"><i class="glyphicon bfh-flag-'+r+'"></i>'+i[o].label+"</a></li>")):t.append('<li><a tabindex="-1" href="#" data-option="'+o+'">'+i[o].label+"</a></li>"));this.$element.val(n)},displayCurrency:function(){var e,a;e=this.options.currency,this.options.flags===!0?(a=BFHCurrenciesList[e].currencyflag?BFHCurrenciesList[e].currencyflag:e.substr(0,2),this.$element.html('<i class="glyphicon bfh-flag-'+a+'"></i> '+BFHCurrenciesList[e].label)):this.$element.html(BFHCurrenciesList[e].label)}};var t=e.fn.bfhcurrencies;e.fn.bfhcurrencies=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhcurrencies"),i="object"==typeof t&&t,o||n.data("bfhcurrencies",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhcurrencies.Constructor=a,e.fn.bfhcurrencies.defaults={currency:"",available:"",flags:!1,blank:!0},e.fn.bfhcurrencies.noConflict=function(){return e.fn.bfhcurrencies=t,this},e(document).ready(function(){e("form select.bfh-currencies, span.bfh-currencies, div.bfh-currencies").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhcurrencies(a.data())})})}(window.jQuery),+function(e){"use strict";function a(e,a){return new Date(a,e,0).getDate()}function t(e,a,t){return new Date(a,e,t).getDay()}function n(e,a,t,n){return a+=1,a=String(a),n=String(n),1===a.length&&(a="0"+a),1===n.length&&(n="0"+n),e.replace("m",a).replace("y",t).replace("d",n)}function o(e,a,t){var n,o,i;n=[{part:"m",position:e.indexOf("m")},{part:"y",position:e.indexOf("y")},{part:"d",position:e.indexOf("d")}],n.sort(function(e,a){return e.position-a.position}),i=a.match(/(\d+)/g);for(o in n)if(n.hasOwnProperty(o)&&n[o].part===t)return Number(i[o]).toString()}function i(){var a;e(s).each(function(t){return a=r(e(this)),a.hasClass("open")?(a.trigger(t=e.Event("hide.bfhdatepicker")),t.isDefaultPrevented()?!0:(a.removeClass("open").trigger("hidden.bfhdatepicker"),void 0)):!0})}function r(e){return e.closest(".bfh-datepicker")}var s="[data-toggle=bfh-datepicker]",d=function(a,t){this.options=e.extend({},e.fn.bfhdatepicker.defaults,t),this.$element=e(a),this.initCalendar()};d.prototype={constructor:d,setDate:function(){var e,a,t;e=this.options.date,t=this.options.format,""===e||"today"===e||void 0===e?(a=new Date,"today"===e&&this.$element.val(n(t,a.getMonth(),a.getFullYear(),a.getDate())),this.$element.data("month",a.getMonth()),this.$element.data("year",a.getFullYear())):(this.$element.val(e),this.$element.data("month",Number(o(t,e,"m")-1)),this.$element.data("year",Number(o(t,e,"y"))))},setDateLimit:function(e,a){var t,n;n=this.options.format,""!==e?(this.$element.data(a+"limit",!0),"today"===e?(t=new Date,this.$element.data(a+"day",t.getDate()),this.$element.data(a+"month",t.getMonth()),this.$element.data(a+"year",t.getFullYear())):(this.$element.data(a+"day",Number(o(n,e,"d"))),this.$element.data(a+"month",Number(o(n,e,"m")-1)),this.$element.data(a+"year",Number(o(n,e,"y"))))):this.$element.data(a+"limit",!1)},initCalendar:function(){var e,a,t;e="",a="",t="",""!==this.options.icon&&("right"===this.options.align?a='<span class="input-group-addon"><i class="'+this.options.icon+'"></i></span>':e='<span class="input-group-addon"><i class="'+this.options.icon+'"></i></span>',t="input-group"),this.$element.html('<div class="'+t+' bfh-datepicker-toggle" data-toggle="bfh-datepicker">'+e+'<input type="text" name="'+this.options.name+'" class="'+this.options.input+'" placeholder="'+this.options.placeholder+'" readonly>'+a+'</div><div class="bfh-datepicker-calendar"><table class="calendar table table-bordered"><thead><tr class="months-header"><th class="month" colspan="4"><a class="previous" href="#"><i class="glyphicon glyphicon-chevron-left"></i></a><span></span><a class="next" href="#"><i class="glyphicon glyphicon-chevron-right"></i></a></th><th class="year" colspan="3"><a class="previous" href="#"><i class="glyphicon glyphicon-chevron-left"></i></a><span></span><a class="next" href="#"><i class="glyphicon glyphicon-chevron-right"></i></a></th></tr><tr class="days-header"></tr></thead><tbody></tbody></table></div>'),this.$element.on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",s,d.prototype.toggle).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar .month > .previous",d.prototype.previousMonth).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar .month > .next",d.prototype.nextMonth).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar .year > .previous",d.prototype.previousYear).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar .year > .next",d.prototype.nextYear).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar td:not(.off)",d.prototype.select).on("click.bfhdatepicker.data-api touchstart.bfhdatepicker.data-api",".bfh-datepicker-calendar > table.calendar",function(){return!1}),this.setDate(),this.setDateLimit(this.options.min,"lower"),this.setDateLimit(this.options.max,"higher"),this.updateCalendar()},updateCalendarHeader:function(e,a,t){var n,o;for(e.find("table > thead > tr > th.month > span").text(BFHMonthsList[a]),e.find("table > thead > tr > th.year > span").text(t),n=e.find("table > thead > tr.days-header"),n.html(""),o=BFHDayOfWeekStart;o<BFHDaysList.length;o+=1)n.append("<th>"+BFHDaysList[o]+"</th>");for(o=0;BFHDayOfWeekStart>o;o+=1)n.append("<th>"+BFHDaysList[o]+"</th>")},checkMinDate:function(e,a,t){var n,o,i,r;return n=this.$element.data("lowerlimit"),n===!0&&(o=this.$element.data("lowerday"),i=this.$element.data("lowermonth"),r=this.$element.data("loweryear"),o>e&&a===i&&t===r||i>a&&t===r||r>t)?!0:!1},checkMaxDate:function(e,a,t){var n,o,i,r;return n=this.$element.data("higherlimit"),n===!0&&(o=this.$element.data("higherday"),i=this.$element.data("highermonth"),r=this.$element.data("higheryear"),e>o&&a===i&&t===r||a>i&&t===r||t>r)?!0:!1},checkToday:function(e,a,t){var n;return n=new Date,e===n.getDate()&&a===n.getMonth()&&t===n.getFullYear()?!0:!1},updateCalendarDays:function(e,n,o){var i,r,s,d,l,c,m;for(i=e.find("table > tbody").html(""),r=a(n,o),s=a(n+1,o),d=t(n,o,1),l=t(n,o,s),c="",m=0;(d-BFHDayOfWeekStart+7)%7>m;m+=1)c+='<td class="off">'+(r-(d-BFHDayOfWeekStart+7)%7+m+1)+"</td>";for(m=1;s>=m;m+=1)c+=this.checkMinDate(m,n,o)?'<td data-day="'+m+'" class="off">'+m+"</td>":this.checkMaxDate(m,n,o)?'<td data-day="'+m+'" class="off">'+m+"</td>":this.checkToday(m,n,o)?'<td data-day="'+m+'" class="today">'+m+"</td>":'<td data-day="'+m+'">'+m+"</td>",t(n,o,m)===(6+BFHDayOfWeekStart)%7&&(i.append("<tr>"+c+"</tr>"),c="");for(m=1;(7-(l+1-BFHDayOfWeekStart+7)%7)%7+1>=m;m+=1)c+='<td class="off">'+m+"</td>",m===(7-(l+1-BFHDayOfWeekStart+7)%7)%7&&i.append("<tr>"+c+"</tr>")},updateCalendar:function(){var e,a,t;e=this.$element.find(".bfh-datepicker-calendar"),a=this.$element.data("month"),t=this.$element.data("year"),this.updateCalendarHeader(e,a,t),this.updateCalendarDays(e,a,t)},previousMonth:function(){var a,t,n;return a=e(this),t=r(a),0===Number(t.data("month"))?(t.data("month",11),t.data("year",Number(t.data("year"))-1)):t.data("month",Number(t.data("month"))-1),n=t.data("bfhdatepicker"),n.updateCalendar(),!1},nextMonth:function(){var a,t,n;return a=e(this),t=r(a),11===Number(t.data("month"))?(t.data("month",0),t.data("year",Number(t.data("year"))+1)):t.data("month",Number(t.data("month"))+1),n=t.data("bfhdatepicker"),n.updateCalendar(),!1},previousYear:function(){var a,t,n;return a=e(this),t=r(a),t.data("year",Number(t.data("year"))-1),n=t.data("bfhdatepicker"),n.updateCalendar(),!1},nextYear:function(){var a,t,n;return a=e(this),t=r(a),t.data("year",Number(t.data("year"))+1),n=t.data("bfhdatepicker"),n.updateCalendar(),!1},select:function(a){var t,o,s,d,l,c;t=e(this),a.preventDefault(),a.stopPropagation(),o=r(t),s=o.data("bfhdatepicker"),d=o.data("month"),l=o.data("year"),c=t.data("day"),o.val(n(s.options.format,d,l,c)),o.trigger("change.bfhdatepicker"),s.options.close===!0&&i()},toggle:function(a){var t,n,o;if(t=e(this),n=r(t),n.is(".disabled")||void 0!==n.attr("disabled"))return!0;if(o=n.hasClass("open"),i(),!o){if(n.trigger(a=e.Event("show.bfhdatepicker")),a.isDefaultPrevented())return!0;n.toggleClass("open").trigger("shown.bfhdatepicker"),t.focus()}return!1}};var l=e.fn.bfhdatepicker;e.fn.bfhdatepicker=function(a){return this.each(function(){var t,n,o;t=e(this),n=t.data("bfhdatepicker"),o="object"==typeof a&&a,this.type="bfhdatepicker",n||t.data("bfhdatepicker",n=new d(this,o)),"string"==typeof a&&n[a].call(t)})},e.fn.bfhdatepicker.Constructor=d,e.fn.bfhdatepicker.defaults={icon:"glyphicon glyphicon-calendar",align:"left",input:"form-control",placeholder:"",name:"",date:"today",format:"m/d/y",min:"",max:"",close:!0},e.fn.bfhdatepicker.noConflict=function(){return e.fn.bfhdatepicker=l,this};var c;e.valHooks.div&&(c=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-datepicker")?e(a).find('input[type="text"]').val():c?c.get(a):void 0},set:function(a,t){if(e(a).hasClass("bfh-datepicker"))e(a).find('input[type="text"]').val(t);else if(c)return c.set(a,t)}},e(document).ready(function(){e("div.bfh-datepicker").each(function(){var a;a=e(this),a.bfhdatepicker(a.data())})}),e(document).on("click.bfhdatepicker.data-api",i)}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhfonts.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addFonts(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapFonts()};a.prototype={constructor:a,getFonts:function(){var a,t;if(this.options.available){t=[],this.options.available=this.options.available.split(",");for(a in BFHFontsList)BFHFontsList.hasOwnProperty(a)&&e.inArray(a,this.options.available)>=0&&(t[a]=BFHFontsList[a]);return t}return BFHFontsList},addFonts:function(){var e,a,t;e=this.options.font,t=this.getFonts(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in t)t.hasOwnProperty(a)&&this.$element.append('<option value="'+a+'">'+a+"</option>");this.options.showCustom&&this.$element.append('<option value="Custom">Use Custom Font</option>'),this.options.showMore&&this.$element.append('<option value="Google">More Fonts...</option>'),this.$element.val(e)},addBootstrapFonts:function(){var e,a,t,n,o,i;n=this.options.font,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),i=this.getFonts(),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(o in i)i.hasOwnProperty(o)&&t.append('<li><a tabindex="-1" href="#" style=\'font-family: '+i[o]+"' data-option=\""+o+'">'+o+"</a></li>");this.options.showCustom&&t.append('<li><a tabindex="-1" href="#" style=\'font-family: Custom\' data-option="Use Custom Font">Use Custom Font</a></li>'),this.options.showMore&&t.append('<li><a tabindex="-1" href="#" style=\'font-family: Google\' data-option="More Fonts...">More Fonts...</a></li>'),this.$element.val(n)}};var t=e.fn.bfhfonts;e.fn.bfhfonts=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhfonts"),i="object"==typeof t&&t,o||n.data("bfhfonts",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhfonts.Constructor=a,e.fn.bfhfonts.defaults={font:"",available:"",blank:!0,showCustom:!1,showMore:!1},e.fn.bfhfonts.noConflict=function(){return e.fn.bfhfonts=t,this},e(document).ready(function(){e("form select.bfh-fonts, span.bfh-fonts, div.bfh-fonts").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhfonts(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhfontsizes.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addFontSizes(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapFontSizes()};a.prototype={constructor:a,getFontsizes:function(){var a,t;if(this.options.available){t=[],this.options.available=this.options.available.split(",");for(a in BFHFontSizesList)BFHFontSizesList.hasOwnProperty(a)&&e.inArray(a,this.options.available)>=0&&(t[a]=BFHFontSizesList[a]);return t}return BFHFontSizesList},addFontSizes:function(){var e,a,t;e=this.options.fontsize,t=this.getFontsizes(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in t)t.hasOwnProperty(a)&&this.$element.append('<option value="'+a+'">'+t[a]+"</option>");this.$element.val(e)},addBootstrapFontSizes:function(){var e,a,t,n,o,i;n=this.options.fontsize,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),i=this.getFontsizes(),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(o in i)i.hasOwnProperty(o)&&t.append('<li><a tabindex="-1" href="#" data-option="'+o+'">'+i[o]+"</a></li>");this.$element.val(n)}};var t=e.fn.bfhfontsizes;e.fn.bfhfontsizes=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhfontsizes"),i="object"==typeof t&&t,o||n.data("bfhfontsizes",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhfontsizes.Constructor=a,e.fn.bfhfontsizes.defaults={fontsize:"",available:"",blank:!0},e.fn.bfhfontsizes.noConflict=function(){return e.fn.bfhfontsizes=t,this},e(document).ready(function(){e("form select.bfh-fontsizes, span.bfh-fontsizes, div.bfh-fontsizes").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhfontsizes(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhgooglefonts.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addFonts(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapFonts()};a.prototype={constructor:a,getFonts:function(){var a,t;if(t=[],this.options.subset)for(a in BFHGoogleFontsList.items)BFHGoogleFontsList.items.hasOwnProperty(a)&&e.inArray(this.options.subset,BFHGoogleFontsList.items[a].subsets)>=0&&(t[BFHGoogleFontsList.items[a].family]={info:BFHGoogleFontsList.items[a],index:parseInt(a,10)});else if(this.options.available){this.options.available=this.options.available.split(",");for(a in BFHGoogleFontsList.items)BFHGoogleFontsList.items.hasOwnProperty(a)&&e.inArray(BFHGoogleFontsList.items[a].family,this.options.available)>=0&&(t[BFHGoogleFontsList.items[a].family]={info:BFHGoogleFontsList.items[a],index:parseInt(a,10)})}else for(a in BFHGoogleFontsList.items)BFHGoogleFontsList.items.hasOwnProperty(a)&&(t[BFHGoogleFontsList.items[a].family]={info:BFHGoogleFontsList.items[a],index:parseInt(a,10)});return t},addFonts:function(){var e,a,t;e=this.options.font,t=this.getFonts(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(a in t)t.hasOwnProperty(a)&&this.$element.append('<option value="'+t[a].info.family+'">'+t[a].info.family+"</option>");this.options.showCustom&&this.$element.append('<option value="Custom">Use Custom Font</option>'),this.options.showMore&&this.$element.append('<option value="Google">More Fonts...</option>'),this.$element.val(e)},addBootstrapFonts:function(){var e,a,t,n,o,i;n=this.options.font,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),i=this.getFonts(),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option="" style="background-image: none;"></a></li>');for(o in i)i.hasOwnProperty(o)&&t.append('<li><a tabindex="-1" href="#" style="background-position: 0 -'+(30*i[o].index-2)+'px;" data-option="'+i[o].info.family+'">'+i[o].info.family+"</a></li>");this.options.showCustom&&t.append('<li><a tabindex="-1" href="#" style=\'font-family: Custom\' data-option="Use Custom Font">Use Custom Font</a></li>'),this.options.showMore&&t.append('<li><a tabindex="-1" href="#" style=\'font-family: Google\' data-option="More Fonts...">More Fonts...</a></li>'),this.$element.val(n)}};var t=e.fn.bfhgooglefonts;e.fn.bfhgooglefonts=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhgooglefonts"),i="object"==typeof t&&t,o||n.data("bfhgooglefonts",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhgooglefonts.Constructor=a,e.fn.bfhgooglefonts.defaults={font:"",available:"",subset:"",blank:!0},e.fn.bfhgooglefonts.noConflict=function(){return e.fn.bfhgooglefonts=t,this},e(document).ready(function(){e("form select.bfh-googlefonts, span.bfh-googlefonts, div.bfh-googlefonts").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhgooglefonts(a.data())})})}(window.jQuery),!function(e){"use strict";var a=function(a,t){var n,o;this.options=e.extend({},e.fn.bfhgooglefontlist.defaults,t),this.$element=e(a),this.familyList={};for(n in BFHGoogleFontsList.items)BFHGoogleFontsList.items.hasOwnProperty(n)&&(o=BFHGoogleFontsList.items[n],this.familyList[o.family]={font:BFHGoogleFontsList.items[n],i:parseInt(n,10)});this.addFonts()};a.prototype={constructor:a,addFonts:function(){var a,t,n,o,i=this;a=this.options.family,this.$element.html("");var r=function(a){a.preventDefault(),i.$element.trigger("select",e(this).data("option"))};for(t in this.familyList)this.familyList.hasOwnProperty(t)&&(o=this.familyList[t],n=e('<a href="#" class="list-group-item" style="background-position: 0 -'+(30*o.i-2)+'px;" data-option="'+o.font.family+'">'+o.font.family+"</a>"),n.bind("click",r),this.$element.append(n))}},e.fn.bfhgooglefontlist=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhgooglefontlist"),i="object"==typeof t&&t,this.type="bfhgooglefontlist",o||n.data("bfhgooglefontlist",o=new a(this,i)),"string"==typeof t&&o[t]()})},e.fn.bfhgooglefontlist.Constructor=a,e.fn.bfhgooglefontlist.defaults={family:""},e(window).on("load",function(){e("div.bfh-googlefontlist").each(function(){var a;a=e(this),a.bfhgooglefontlist(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhlanguages.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addLanguages(),this.$element.is("span")&&this.displayLanguage(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapLanguages()};a.prototype={constructor:a,getLanguages:function(){var e,a,t;if(this.options.available){t=[],this.options.available=this.options.available.split(",");for(a in this.options.available)this.options.available.hasOwnProperty(a)&&(-1!==this.options.available[a].indexOf("_")?(e=this.options.available[a].split("_"),t[e[0]]={name:BFHLanguagesList[e[0]],country:e[1]}):t[this.options.available[a]]=BFHLanguagesList[this.options.available[a]]);return t}return BFHLanguagesList},addLanguages:function(){var e,a,t;e=this.options.language,a=this.getLanguages(),this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(t in a)a.hasOwnProperty(t)&&(a[t].hasOwnProperty("name")?this.$element.append('<option value="'+t+"_"+a[t].country+'">'+a[t].name.toProperCase()+" ("+BFHCountriesList[a[t].country]+")</option>"):this.$element.append('<option value="'+t+'">'+a[t].toProperCase()+"</option>"));this.$element.val(e)},addBootstrapLanguages:function(){var e,a,t,n,o,i;n=this.options.language,e=this.$element.find('input[type="hidden"]'),a=this.$element.find(".bfh-selectbox-option"),t=this.$element.find("[role=option]"),o=this.getLanguages(),t.html(""),this.options.blank===!0&&t.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(i in o)o.hasOwnProperty(i)&&(o[i].hasOwnProperty("name")?this.options.flags===!0?t.append('<li><a tabindex="-1" href="#" data-option="'+i+"_"+o[i].country+'"><i class="glyphicon bfh-flag-'+o[i].country+'"></i>'+o[i].name.toProperCase()+"</a></li>"):t.append('<li><a tabindex="-1" href="#" data-option="'+i+"_"+o[i].country+'">'+o[i].name.toProperCase()+" ("+BFHCountriesList[o[i].country]+")</a></li>"):t.append('<li><a tabindex="-1" href="#" data-option="'+i+'">'+o[i]+"</a></li>"));this.$element.val(n)},displayLanguage:function(){var e;e=this.options.language,-1!==e.indexOf("_")?(e=e.split("_"),this.options.flags===!0?this.$element.html('<i class="glyphicon bfh-flag-'+e[1]+'"></i> '+BFHLanguagesList[e[0]].toProperCase()):this.$element.html(BFHLanguagesList[e[0]].toProperCase()+" ("+BFHCountriesList[e[1]]+")")):this.$element.html(BFHLanguagesList[e].toProperCase())}};var t=e.fn.bfhlanguages;e.fn.bfhlanguages=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhlanguages"),i="object"==typeof t&&t,o||n.data("bfhlanguages",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhlanguages.Constructor=a,e.fn.bfhlanguages.defaults={language:"",available:"",flags:!1,blank:!0},e.fn.bfhlanguages.noConflict=function(){return e.fn.bfhlanguages=t,this},e(document).ready(function(){e("form select.bfh-languages, span.bfh-languages, div.bfh-languages").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhlanguages(a.data())})}),String.prototype.toProperCase=function(){return this.replace(/\w\S*/g,function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()})}}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhnumber.defaults,t),this.$element=e(a),this.initInput()};a.prototype={constructor:a,initInput:function(){this.options.buttons===!0&&(this.$element.wrap('<div class="input-group"></div>'),this.$element.parent().append('<span class="input-group-addon bfh-number-btn inc"><span class="glyphicon glyphicon-chevron-up"></span></span>'),this.$element.parent().append('<span class="input-group-addon bfh-number-btn dec"><span class="glyphicon glyphicon-chevron-down"></span></span>')),this.$element.on("change.bfhnumber.data-api",a.prototype.change),this.options.keyboard===!0&&this.$element.on("keydown.bfhnumber.data-api",a.prototype.keydown),this.options.buttons===!0&&this.$element.parent().on("mousedown.bfhnumber.data-api",".inc",a.prototype.btninc).on("mousedown.bfhnumber.data-api",".dec",a.prototype.btndec),this.formatNumber()},keydown:function(a){var t;if(t=e(this).data("bfhnumber"),t.$element.is(".disabled")||void 0!==t.$element.attr("disabled"))return!0;switch(a.which){case 38:t.increment();break;case 40:t.decrement()}return!0},mouseup:function(e){var a,t,n;a=e.data.btn,t=a.$element.data("timer"),n=a.$element.data("interval"),clearTimeout(t),clearInterval(n)},btninc:function(){var t,n;return t=e(this).parent().find(".bfh-number").data("bfhnumber"),t.$element.is(".disabled")||void 0!==t.$element.attr("disabled")?!0:(t.increment(),n=setTimeout(function(){var e;e=setInterval(function(){t.increment()},80),t.$element.data("interval",e)},750),t.$element.data("timer",n),e(document).one("mouseup",{btn:t},a.prototype.mouseup),!0)},btndec:function(){var t,n;return t=e(this).parent().find(".bfh-number").data("bfhnumber"),t.$element.is(".disabled")||void 0!==t.$element.attr("disabled")?!0:(t.decrement(),n=setTimeout(function(){var e;e=setInterval(function(){t.decrement()},80),t.$element.data("interval",e)},750),t.$element.data("timer",n),e(document).one("mouseup",{btn:t},a.prototype.mouseup),!0)},change:function(){var a;return a=e(this).data("bfhnumber"),a.$element.is(".disabled")||void 0!==a.$element.attr("disabled")?!0:(a.formatNumber(),!0)},increment:function(){var e;e=this.getValue(),e+=1,this.$element.val(e).change()
},decrement:function(){var e;e=this.getValue(),e-=1,this.$element.val(e).change()},getValue:function(){var e;return e=this.$element.val(),"-1"!==e&&(e=String(e).replace(/\D/g,"")),0===String(e).length&&(e=this.options.min),parseInt(e)},formatNumber:function(){var e,a,t,n;if(e=this.getValue(),e>this.options.max&&(e=this.options.wrap===!0?this.options.min:this.options.max),e<this.options.min&&(e=this.options.wrap===!0?this.options.max:this.options.min),this.options.zeros===!0)for(a=String(this.options.max).length,t=String(e).length,n=t;a>n;n+=1)e="0"+e;e!==this.$element.val()&&this.$element.val(e)}};var t=e.fn.bfhnumber;e.fn.bfhnumber=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhnumber"),i="object"==typeof t&&t,o||n.data("bfhnumber",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhnumber.Constructor=a,e.fn.bfhnumber.defaults={min:0,max:9999,zeros:!1,keyboard:!0,buttons:!0,wrap:!1},e.fn.bfhnumber.noConflict=function(){return e.fn.bfhnumber=t,this},e(document).ready(function(){e('form input[type="text"].bfh-number, form input[type="number"].bfh-number').each(function(){var a;a=e(this),a.bfhnumber(a.data())})})}(window.jQuery),+function(e){"use strict";function a(e,a){var t,n,o,i;for(t="",a=String(a).replace(/\D/g,""),n=0,o=0;n<e.length;n+=1)/\d/g.test(e.charAt(n))?e.charAt(n)===a.charAt(o)?(t+=a.charAt(o),o+=1):t+=e.charAt(n):"d"!==e.charAt(n)?(""!==a.charAt(o)||"+"===e.charAt(n))&&(t+=e.charAt(n)):""===a.charAt(o)?t+="":(t+=a.charAt(o),o+=1);return i=e.charAt(t.length),"d"!==i&&(t+=i),t}function t(e){var a,t=0;return document.selection?(e.focus(),a=document.selection.createRange(),a.moveStart("character",-e.value.length),t=a.text.length):(e.selectionStart||0===e.selectionStart)&&(t=e.selectionStart),t}function n(e,a){var t;document.selection?(e.focus(),t=document.selection.createRange(),t.moveStart("character",-e.value.length),t.moveStart("character",a),t.moveEnd("character",0),t.select()):(e.selectionStart||0===e.selectionStart)&&(e.selectionStart=a,e.selectionEnd=a,e.focus())}var o=function(a,t){this.options=e.extend({},e.fn.bfhphone.defaults,t),this.$element=e(a),(this.$element.is('input[type="text"]')||this.$element.is('input[type="tel"]'))&&this.addFormatter(),this.$element.is("span")&&this.displayFormatter()};o.prototype={constructor:o,addFormatter:function(){var a;""!==this.options.country&&(a=e(document).find("#"+this.options.country),0!==a.length?(this.options.format=BFHPhoneFormatList[a.val()],a.on("change",{phone:this},this.changeCountry)):this.options.format=BFHPhoneFormatList[this.options.country]),this.$element.on("keyup.bfhphone.data-api",o.prototype.change),this.loadFormatter()},loadFormatter:function(){var e;e=a(this.options.format,this.$element.val()),this.$element.val(e)},displayFormatter:function(){var e;""!==this.options.country&&(this.options.format=BFHPhoneFormatList[this.options.country]),e=a(this.options.format,this.options.number),this.$element.html(e)},changeCountry:function(a){var t,n;t=e(this),n=a.data.phone,n.$element.val(String(n.$element.val()).replace(/\+\d*/g,"")),n.options.format=BFHPhoneFormatList[t.val()],n.loadFormatter()},change:function(o){var i,r,s,d;return i=e(this).data("bfhphone"),i.$element.is(".disabled")||void 0!==i.$element.attr("disabled")?!0:(r=t(i.$element[0]),s=!1,r===i.$element.val().length&&(s=!0),8===o.which&&"d"!==i.options.format.charAt(i.$element.val().length)&&i.$element.val(String(i.$element.val()).substring(0,i.$element.val().length-1)),d=a(i.options.format,i.$element.val()),d===i.$element.val()?!0:(i.$element.val(d),s&&(r=i.$element.val().length),n(i.$element[0],r),!0))}};var i=e.fn.bfhphone;e.fn.bfhphone=function(a){return this.each(function(){var t,n,i;t=e(this),n=t.data("bfhphone"),i="object"==typeof a&&a,n||t.data("bfhphone",n=new o(this,i)),"string"==typeof a&&n[a].call(t)})},e.fn.bfhphone.Constructor=o,e.fn.bfhphone.defaults={format:"",number:"",country:""},e.fn.bfhphone.noConflict=function(){return e.fn.bfhphone=i,this},e(document).ready(function(){e('form input[type="text"].bfh-phone, form input[type="tel"].bfh-phone, span.bfh-phone').each(function(){var a;a=e(this),a.bfhphone(a.data())})})}(window.jQuery),+function(e){"use strict";function a(){var a;e(n).each(function(n){return a=t(e(this)),a.hasClass("open")?(a.trigger(n=e.Event("hide.bfhselectbox")),n.isDefaultPrevented()?!0:(a.removeClass("open").trigger("hidden.bfhselectbox"),void 0)):!0})}function t(e){return e.closest(".bfh-selectbox")}var n="[data-toggle=bfh-selectbox]",o=function(a,t){this.options=e.extend({},e.fn.bfhselectbox.defaults,t),this.$element=e(a),this.initSelectBox()};o.prototype={constructor:o,initSelectBox:function(){var a;a="",0===this.$element.find(".bfh-selectbox-options").length&&(this.$element.find("div").each(function(){a=a+'<li><a tabindex="-1" href="#" data-option="'+e(this).data("value")+'">'+e(this).html()+"</a></li>"}),this.$element.html('<input type="hidden" name="'+this.options.name+'" value=""><a class="bfh-selectbox-toggle '+this.options.input+'" role="button" data-toggle="bfh-selectbox" href="#"><span class="bfh-selectbox-option"></span><span class="'+this.options.icon+' selectbox-caret"></span></a><div class="bfh-selectbox-options"><div role="listbox"><ul role="option"></ul></div></div>'),this.$element.find("[role=option]").html(a),this.options.filter===!0&&this.$element.find(".bfh-selectbox-options").prepend('<div class="bfh-selectbox-filter-container"><input type="text" class="bfh-selectbox-filter form-control"></div>'),this.$element.val(this.options.value)),this.$element.on("click.bfhselectbox.data-api touchstart.bfhselectbox.data-api",n,o.prototype.toggle).on("keydown.bfhselectbox.data-api",n+", [role=option]",o.prototype.keydown).on("mouseenter.bfhselectbox.data-api","[role=option] > li > a",o.prototype.mouseenter).on("click.bfhselectbox.data-api","[role=option] > li > a",o.prototype.select).on("click.bfhselectbox.data-api",".bfh-selectbox-filter",function(){return!1}).on("propertychange.bfhselectbox.data-api change.bfhselectbox.data-api input.bfhselectbox.data-api paste.bfhselectbox.data-api",".bfh-selectbox-filter",o.prototype.filter)},toggle:function(n){var o,i,r;if(o=e(this),i=t(o),i.is(".disabled")||void 0!==i.attr("disabled"))return!0;if(r=i.hasClass("open"),a(),!r){if(i.trigger(n=e.Event("show.bfhselectbox")),n.isDefaultPrevented())return!0;i.toggleClass("open").trigger("shown.bfhselectbox").find('[role=option] > li > [data-option="'+i.val()+'"]').focus()}return!1},filter:function(){var a,n,o;a=e(this),n=t(a),o=e("[role=option] li a",n),o.hide().filter(function(){return-1!==e(this).text().toUpperCase().indexOf(a.val().toUpperCase())}).show()},keydown:function(a){var i,r,s,d,l;return/(38|40|27)/.test(a.keyCode)?(i=e(this),a.preventDefault(),a.stopPropagation(),s=t(i),d=s.hasClass("open"),!d||d&&27===a.keyCode?(27===a.which&&s.find(n).focus(),i.click()):(r=e("[role=option] li:not(.divider) a:visible",s),r.length?(e("body").off("mouseenter.bfh-selectbox.data-api","[role=option] > li > a",o.prototype.mouseenter),l=r.index(r.filter(":focus")),38===a.keyCode&&l>0&&(l-=1),40===a.keyCode&&l<r.length-1&&(l+=1),l||(l=0),r.eq(l).focus(),e("body").on("mouseenter.bfh-selectbox.data-api","[role=option] > li > a",o.prototype.mouseenter),void 0):!0)):!0},mouseenter:function(){var a;a=e(this),a.focus()},select:function(n){var o,i;return o=e(this),n.preventDefault(),n.stopPropagation(),o.is(".disabled")||void 0!==o.attr("disabled")?!0:(i=t(o),i.val(o.data("option")),i.trigger("change.bfhselectbox"),a(),void 0)}};var i=e.fn.bfhselectbox;e.fn.bfhselectbox=function(a){return this.each(function(){var t,n,i;t=e(this),n=t.data("bfhselectbox"),i="object"==typeof a&&a,this.type="bfhselectbox",n||t.data("bfhselectbox",n=new o(this,i)),"string"==typeof a&&n[a].call(t)})},e.fn.bfhselectbox.Constructor=o,e.fn.bfhselectbox.defaults={icon:"caret",input:"form-control",name:"",value:"",filter:!1},e.fn.bfhselectbox.noConflict=function(){return e.fn.bfhselectbox=i,this};var r;e.valHooks.div&&(r=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-selectbox")?e(a).find('input[type="hidden"]').val():r?r.get(a):void 0},set:function(a,t){var n,o;if(e(a).hasClass("bfh-selectbox"))n=e(a),n.find("li a[data-option='"+t+"']").length>0?o=n.find("li a[data-option='"+t+"']").html():n.find("li a").length>0?o=n.find("li a").eq(0).html():(t="",o=""),n.find('input[type="hidden"]').val(t),n.find(".bfh-selectbox-option").html(o);else if(r)return r.set(a,t)}},e(document).ready(function(){e("div.bfh-selectbox").each(function(){var a;a=e(this),a.bfhselectbox(a.data())})}),e(document).on("click.bfhselectbox.data-api",a)}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhslider.defaults,t),this.$element=e(a),this.initSlider()};a.prototype={constructor:a,initSlider:function(){""===this.options.value&&(this.options.value=this.options.min),this.$element.html('<input type="hidden" name="'+this.options.name+'" value=""><div class="bfh-slider-handle"><div class="bfh-slider-value"></div></div>'),this.$element.find('input[type="hidden"]').val(this.options.value),this.updateHandle(this.options.value),this.$element.on("mousedown.bfhslider.data-api",a.prototype.mouseDown)},updateHandle:function(e){var a,t,n,o;o=this.options.max-this.options.min,t=this.$element.width(),n=this.$element.position().left,a=Math.round((e-this.options.min)*(t-20)/o+n),this.$element.find(".bfh-slider-handle").css("left",a+"px"),this.$element.find(".bfh-slider-value").text(e)},updateVal:function(e){var a,t,n,o,i;return i=this.options.max-this.options.min,a=this.$element.width(),t=this.$element.offset().left,n=t+a,t>e&&(e=t),e+20>n&&(e=n),o=(e-t)/a,o=Math.ceil(o*i+this.options.min),o===this.$element.val()?!0:(this.$element.val(o),this.$element.trigger("change.bfhslider"),void 0)},mouseDown:function(){var t;return t=e(this),t.is(".disabled")||void 0!==t.attr("disabled")?!0:(e(document).on("mousemove.bfhslider.data-api",{slider:t},a.prototype.mouseMove).one("mouseup.bfhslider.data-api",{slider:t},a.prototype.mouseUp),void 0)},mouseMove:function(e){var a;a=e.data.slider,a.data("bfhslider").updateVal(e.pageX)},mouseUp:function(a){var t;t=a.data.slider,t.data("bfhslider").updateVal(a.pageX),e(document).off("mousemove.bfhslider.data-api")}};var t=e.fn.bfhslider;e.fn.bfhslider=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhslider"),i="object"==typeof t&&t,this.type="bfhslider",o||n.data("bfhslider",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhslider.Constructor=a,e.fn.bfhslider.defaults={name:"",value:"",min:0,max:100},e.fn.bfhslider.noConflict=function(){return e.fn.bfhslider=t,this};var n;e.valHooks.div&&(n=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-slider")?e(a).find('input[type="hidden"]').val():n?n.get(a):void 0},set:function(a,t){if(e(a).hasClass("bfh-slider"))e(a).find('input[type="hidden"]').val(t),e(a).data("bfhslider").updateHandle(t);else if(n)return n.set(a,t)}},e(document).ready(function(){e("div.bfh-slider").each(function(){var a;a=e(this),a.bfhslider(a.data())})})}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhstates.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addStates(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapStates(),this.$element.is("span")&&this.displayState()};a.prototype={constructor:a,addStates:function(){var a,t;a=this.options.country,""!==a&&(t=e(document).find("#"+a),0!==t.length&&(a=t.val(),t.on("change",{state:this},this.changeCountry))),this.loadStates(a)},loadStates:function(e){var a,t;a=this.options.state,this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(t in BFHStatesList[e])BFHStatesList[e].hasOwnProperty(t)&&this.$element.append('<option value="'+BFHStatesList[e][t].code+'">'+BFHStatesList[e][t].name+"</option>");this.$element.val(a)},changeCountry:function(a){var t,n,o;t=e(this),n=a.data.state,o=t.val(),n.loadStates(o)},addBootstrapStates:function(){var a,t;a=this.options.country,""!==a&&(t=e(document).find("#"+a),0!==t.length&&(a=t.find('input[type="hidden"]').val(),t.on("change.bfhselectbox",{state:this},this.changeBootstrapCountry))),this.loadBootstrapStates(a)},loadBootstrapStates:function(e){var a,t,n,o,i,r;o=this.options.state,i="",a=this.$element.find('input[type="hidden"]'),t=this.$element.find(".bfh-selectbox-option"),n=this.$element.find("[role=option]"),n.html(""),this.options.blank===!0&&n.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(r in BFHStatesList[e])BFHStatesList[e].hasOwnProperty(r)&&(n.append('<li><a tabindex="-1" href="#" data-option="'+BFHStatesList[e][r].code+'">'+BFHStatesList[e][r].name+"</a></li>"),BFHStatesList[e][r].code===o&&(i=BFHStatesList[e][r].name));this.$element.val(o)},changeBootstrapCountry:function(a){var t,n,o;t=e(this),n=a.data.state,o=t.val(),n.loadBootstrapStates(o)},displayState:function(){var e,a,t,n;e=this.options.country,a=this.options.state,t="";for(n in BFHStatesList[e])if(BFHStatesList[e].hasOwnProperty(n)&&BFHStatesList[e][n].code===a){t=BFHStatesList[e][n].name;break}this.$element.html(t)}};var t=e.fn.bfhstates;e.fn.bfhstates=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhstates"),i="object"==typeof t&&t,o||n.data("bfhstates",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhstates.Constructor=a,e.fn.bfhstates.defaults={country:"",state:"",blank:!0},e.fn.bfhstates.noConflict=function(){return e.fn.bfhstates=t,this},e(document).ready(function(){e("form select.bfh-states, span.bfh-states, div.bfh-states").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhstates(a.data())})})}(window.jQuery),+function(e){"use strict";function a(e,a){return e=String(e),1===e.length&&(e="0"+e),a=String(a),1===a.length&&(a="0"+a),e+BFHTimePickerDelimiter+a}function t(){var a;e(o).each(function(t){return a=n(e(this)),a.hasClass("open")?(a.trigger(t=e.Event("hide.bfhtimepicker")),t.isDefaultPrevented()?!0:(a.removeClass("open").trigger("hidden.bfhtimepicker"),void 0)):!0})}function n(e){return e.closest(".bfh-timepicker")}var o="[data-toggle=bfh-timepicker]",i=function(a,t){this.options=e.extend({},e.fn.bfhtimepicker.defaults,t),this.$element=e(a),this.initPopover()};i.prototype={constructor:i,setTime:function(){var e,t,n,o,i,r,s;e=this.options.time,r="",s="",""===e||"now"===e||void 0===e?(t=new Date,o=t.getHours(),i=t.getMinutes(),"12h"===this.options.mode&&(o>12?(o-=12,r=" "+BFHTimePickerModes.pm,s="pm"):(r=" "+BFHTimePickerModes.am,s="am")),"now"===e&&this.$element.find('.bfh-timepicker-toggle > input[type="text"]').val(a(o,i)+r),this.$element.data("hour",o),this.$element.data("minute",i),this.$element.data("mode",s)):(n=String(e).split(BFHTimePickerDelimiter),o=n[0],i=n[1],"12h"===this.options.mode&&(n=String(i).split(" "),i=n[0],s=n[1]===BFHTimePickerModes.pm?"pm":"am"),this.$element.find('.bfh-timepicker-toggle > input[type="text"]').val(e),this.$element.data("hour",o),this.$element.data("minute",i),this.$element.data("mode",s))},initPopover:function(){var a,t,n,r,s;a="",t="",n="",""!==this.options.icon&&("right"===this.options.align?t='<span class="input-group-addon"><i class="'+this.options.icon+'"></i></span>':a='<span class="input-group-addon"><i class="'+this.options.icon+'"></i></span>',n="input-group"),r="",s="23","12h"===this.options.mode&&(r='<td><div class="bfh-selectbox" data-input="'+this.options.input+'" data-value="am"><div data-value="am">'+BFHTimePickerModes.am+'</div><div data-value="pm">'+BFHTimePickerModes.pm+"</div></div>",s="11"),this.$element.html('<div class="'+n+' bfh-timepicker-toggle" data-toggle="bfh-timepicker">'+a+'<input type="text" name="'+this.options.name+'" class="'+this.options.input+'" placeholder="'+this.options.placeholder+'" readonly>'+t+'</div><div class="bfh-timepicker-popover"><table class="table"><tbody><tr><td class="hour"><input type="text" class="'+this.options.input+' bfh-number"  data-min="0" data-max="'+s+'" data-zeros="true" data-wrap="true"></td><td class="separator">'+BFHTimePickerDelimiter+'</td><td class="minute"><input type="text" class="'+this.options.input+' bfh-number"  data-min="0" data-max="59" data-zeros="true" data-wrap="true"></td>'+r+"</tr></tbody></table></div>"),this.$element.on("click.bfhtimepicker.data-api touchstart.bfhtimepicker.data-api",o,i.prototype.toggle).on("click.bfhtimepicker.data-api touchstart.bfhtimepicker.data-api",".bfh-timepicker-popover > table",function(){return!1}),this.$element.find(".bfh-number").each(function(){var a;a=e(this),a.bfhnumber(a.data()),a.on("change",i.prototype.change)}),this.$element.find(".bfh-selectbox").each(function(){var a;a=e(this),a.bfhselectbox(a.data()),a.on("change.bfhselectbox",i.prototype.change)}),this.setTime(),this.updatePopover()},updatePopover:function(){var e,a,t;e=this.$element.data("hour"),a=this.$element.data("minute"),t=this.$element.data("mode"),this.$element.find(".hour input[type=text]").val(e).change(),this.$element.find(".minute input[type=text]").val(a).change(),this.$element.find(".bfh-selectbox").val(t)},change:function(){var a,t,o,i;return a=e(this),t=n(a),o=t.data("bfhtimepicker"),o&&"undefined"!==o&&(i="","12h"===o.options.mode&&(i=" "+BFHTimePickerModes[t.find(".bfh-selectbox").val()]),t.find('.bfh-timepicker-toggle > input[type="text"]').val(t.find(".hour input[type=text]").val()+BFHTimePickerDelimiter+t.find(".minute input[type=text]").val()+i),t.trigger("change.bfhtimepicker")),!1},toggle:function(a){var o,i,r;if(o=e(this),i=n(o),i.is(".disabled")||void 0!==i.attr("disabled"))return!0;if(r=i.hasClass("open"),t(),!r){if(i.trigger(a=e.Event("show.bfhtimepicker")),a.isDefaultPrevented())return!0;i.toggleClass("open").trigger("shown.bfhtimepicker"),o.focus()}return!1}};var r=e.fn.bfhtimepicker;e.fn.bfhtimepicker=function(a){return this.each(function(){var t,n,o;t=e(this),n=t.data("bfhtimepicker"),o="object"==typeof a&&a,this.type="bfhtimepicker",n||t.data("bfhtimepicker",n=new i(this,o)),"string"==typeof a&&n[a].call(t)})},e.fn.bfhtimepicker.Constructor=i,e.fn.bfhtimepicker.defaults={icon:"glyphicon glyphicon-time",align:"left",input:"form-control",placeholder:"",name:"",time:"now",mode:"24h"},e.fn.bfhtimepicker.noConflict=function(){return e.fn.bfhtimepicker=r,this};var s;e.valHooks.div&&(s=e.valHooks.div),e.valHooks.div={get:function(a){return e(a).hasClass("bfh-timepicker")?e(a).find('.bfh-timepicker-toggle > input[type="text"]').val():s?s.get(a):void 0},set:function(a,t){var n;if(e(a).hasClass("bfh-timepicker"))n=e(a).data("bfhtimepicker"),n.options.time=t,n.setTime(),n.updatePopover();else if(s)return s.set(a,t)}},e(document).ready(function(){e("div.bfh-timepicker").each(function(){var a;a=e(this),a.bfhtimepicker(a.data())})}),e(document).on("click.bfhtimepicker.data-api",t)}(window.jQuery),+function(e){"use strict";var a=function(a,t){this.options=e.extend({},e.fn.bfhtimezones.defaults,t),this.$element=e(a),this.$element.is("select")&&this.addTimezones(),this.$element.hasClass("bfh-selectbox")&&this.addBootstrapTimezones()};a.prototype={constructor:a,addTimezones:function(){var a,t;a=this.options.country,""!==a&&(t=e(document).find("#"+a),0!==t.length&&(a=t.val(),t.on("change",{timezone:this},this.changeCountry))),this.loadTimezones(a)},loadTimezones:function(e){var a,t;a=this.options.timezone,this.$element.html(""),this.options.blank===!0&&this.$element.append('<option value=""></option>');for(t in BFHTimezonesList[e])BFHTimezonesList[e].hasOwnProperty(t)&&this.$element.append('<option value="'+t+'">'+BFHTimezonesList[e][t]+"</option>");this.$element.val(a)},changeCountry:function(a){var t,n,o;t=e(this),n=a.data.timezone,o=t.val(),n.loadTimezones(o)},addBootstrapTimezones:function(){var a,t;a=this.options.country,""!==a&&(t=e(document).find("#"+a),0!==t.length&&(a=t.find('input[type="hidden"]').val(),t.on("change.bfhselectbox",{timezone:this},this.changeBootstrapCountry))),this.loadBootstrapTimezones(a)},loadBootstrapTimezones:function(e){var a,t,n,o,i;o=this.options.timezone,a=this.$element.find('input[type="hidden"]'),t=this.$element.find(".bfh-selectbox-option"),n=this.$element.find("[role=option]"),n.html(""),this.options.blank===!0&&n.append('<li><a tabindex="-1" href="#" data-option=""></a></li>');for(i in BFHTimezonesList[e])BFHTimezonesList[e].hasOwnProperty(i)&&n.append('<li><a tabindex="-1" href="#" data-option="'+i+'">'+BFHTimezonesList[e][i]+"</a></li>");this.$element.val(o)},changeBootstrapCountry:function(a){var t,n,o;t=e(this),n=a.data.timezone,o=t.val(),n.loadBootstrapTimezones(o)}};var t=e.fn.bfhtimezones;e.fn.bfhtimezones=function(t){return this.each(function(){var n,o,i;n=e(this),o=n.data("bfhtimezones"),i="object"==typeof t&&t,o||n.data("bfhtimezones",o=new a(this,i)),"string"==typeof t&&o[t].call(n)})},e.fn.bfhtimezones.Constructor=a,e.fn.bfhtimezones.defaults={country:"",timezone:"",blank:!0},e.fn.bfhtimezones.noConflict=function(){return e.fn.bfhtimezones=t,this},e(document).ready(function(){e("form select.bfh-timezones, div.bfh-timezones").each(function(){var a;a=e(this),a.hasClass("bfh-selectbox")&&a.bfhselectbox(a.data()),a.bfhtimezones(a.data())})})}(window.jQuery),!function(e){e.expr[":"].icontains=function(a,t,n){return e(a).text().toUpperCase().indexOf(n[3].toUpperCase())>=0};var a=function(t,n,o){o&&(o.stopPropagation(),o.preventDefault()),this.$element=e(t),this.$newElement=null,this.$button=null,this.$menu=null,this.$lis=null,this.options=e.extend({},e.fn.selectpicker.defaults,this.$element.data(),"object"==typeof n&&n),null===this.options.title&&(this.options.title=this.$element.attr("title")),this.val=a.prototype.val,this.render=a.prototype.render,this.refresh=a.prototype.refresh,this.setStyle=a.prototype.setStyle,this.selectAll=a.prototype.selectAll,this.deselectAll=a.prototype.deselectAll,this.init()};a.prototype={constructor:a,init:function(){var a=this,t=this.$element.attr("id");this.$element.hide(),this.multiple=this.$element.prop("multiple"),this.autofocus=this.$element.prop("autofocus"),this.$newElement=this.createView(),this.$element.after(this.$newElement),this.$menu=this.$newElement.find("> .dropdown-menu"),this.$button=this.$newElement.find("> button"),this.$searchbox=this.$newElement.find("input"),void 0!==t&&(this.$button.attr("data-id",t),e('label[for="'+t+'"]').click(function(e){e.preventDefault(),a.$button.focus()})),this.checkDisabled(),this.clickListener(),this.options.liveSearch&&this.liveSearchListener(),this.render(),this.liHeight(),this.setStyle(),this.setWidth(),this.options.container&&this.selectPosition(),this.$menu.data("this",this),this.$newElement.data("this",this)},createDropdown:function(){var a=this.multiple?" show-tick":"",t=this.$element.parent().hasClass("input-group")?" input-group-btn":"",n=this.autofocus?" autofocus":"",o=this.options.header?'<div class="popover-title"><button type="button" class="close" aria-hidden="true">&times;</button>'+this.options.header+"</div>":"",i=this.options.liveSearch?'<div class="bootstrap-select-searchbox"><input type="text" class="input-block-level form-control" /></div>':"",r=this.options.actionsBox?'<div class="bs-actionsbox"><div class="btn-group btn-block"><button class="actions-btn bs-select-all btn btn-sm btn-default">Select All</button><button class="actions-btn bs-deselect-all btn btn-sm btn-default">Deselect All</button></div></div>':"",s='<div class="btn-group bootstrap-select'+a+t+'"><button type="button" class="btn dropdown-toggle selectpicker" data-toggle="dropdown"'+n+'><span class="filter-option pull-left"></span>&nbsp;<span class="caret"></span></button><div class="dropdown-menu open">'+o+i+r+'<ul class="dropdown-menu inner selectpicker" role="menu"></ul></div></div>';return e(s)},createView:function(){var e=this.createDropdown(),a=this.createLi();return e.find("ul").append(a),e},reloadLi:function(){this.destroyLi();var e=this.createLi();this.$menu.find("ul").append(e)},destroyLi:function(){this.$menu.find("li").remove()},createLi:function(){var a=this,t=[],n="";return this.$element.find("option").each(function(){var n=e(this),o=n.attr("class")||"",i=n.attr("style")||"",r=n.data("content")?n.data("content"):n.html(),s=void 0!==n.data("subtext")?'<small class="muted text-muted">'+n.data("subtext")+"</small>":"",d=void 0!==n.data("icon")?'<i class="'+a.options.iconBase+" "+n.data("icon")+'"></i> ':"";if(""!==d&&(n.is(":disabled")||n.parent().is(":disabled"))&&(d="<span>"+d+"</span>"),n.data("content")||(r=d+'<span class="text">'+r+s+"</span>"),a.options.hideDisabled&&(n.is(":disabled")||n.parent().is(":disabled")))t.push('<a style="min-height: 0; padding: 0"></a>');else if(n.parent().is("optgroup")&&n.data("divider")!==!0)if(0===n.index()){var l=n.parent().attr("label"),c=void 0!==n.parent().data("subtext")?'<small class="muted text-muted">'+n.parent().data("subtext")+"</small>":"",m=n.parent().data("icon")?'<i class="'+n.parent().data("icon")+'"></i> ':"";l=m+'<span class="text">'+l+c+"</span>",0!==n[0].index?t.push('<div class="div-contain"><div class="divider"></div></div><dt>'+l+"</dt>"+a.createA(r,"opt "+o,i)):t.push("<dt>"+l+"</dt>"+a.createA(r,"opt "+o,i))}else t.push(a.createA(r,"opt "+o,i));else n.data("divider")===!0?t.push('<div class="div-contain"><div class="divider"></div></div>'):e(this).data("hidden")===!0?t.push("<a></a>"):t.push(a.createA(r,o,i))}),e.each(t,function(e,a){var t="<a></a>"===a?'class="hide is-hidden"':"";n+='<li rel="'+e+'"'+t+">"+a+"</li>"}),this.multiple||0!==this.$element.find("option:selected").length||this.options.title||this.$element.find("option").eq(0).prop("selected",!0).attr("selected","selected"),e(n)},createA:function(e,a,t){return'<a tabindex="0" class="'+a+'" style="'+t+'">'+e+'<i class="'+this.options.iconBase+" "+this.options.tickIcon+' icon-ok check-mark"></i></a>'},render:function(a){var t=this;a!==!1&&this.$element.find("option").each(function(a){t.setDisabled(a,e(this).is(":disabled")||e(this).parent().is(":disabled")),t.setSelected(a,e(this).is(":selected"))}),this.tabIndex();var n=this.$element.find("option:selected").map(function(){var a,n=e(this),o=n.data("icon")&&t.options.showIcon?'<i class="'+t.options.iconBase+" "+n.data("icon")+'"></i> ':"";return a=t.options.showSubtext&&n.attr("data-subtext")&&!t.multiple?' <small class="muted text-muted">'+n.data("subtext")+"</small>":"",n.data("content")&&t.options.showContent?n.data("content"):void 0!==n.attr("title")?n.attr("title"):o+n.html()+a}).toArray(),o=this.multiple?n.join(this.options.multipleSeparator):n[0];if(this.multiple&&this.options.selectedTextFormat.indexOf("count")>-1){var i=this.options.selectedTextFormat.split(">"),r=this.options.hideDisabled?":not([disabled])":"";(i.length>1&&n.length>i[1]||1==i.length&&n.length>=2)&&(o=this.options.countSelectedText.replace("{0}",n.length).replace("{1}",this.$element.find('option:not([data-divider="true"]):not([data-hidden="true"])'+r).length))}this.options.title=this.$element.attr("title"),o||(o=void 0!==this.options.title?this.options.title:this.options.noneSelectedText),this.$button.attr("title",e.trim(o)),this.$newElement.find(".filter-option").html(o)},setStyle:function(e,a){this.$element.attr("class")&&this.$newElement.addClass(this.$element.attr("class").replace(/selectpicker|mobile-device/gi,""));var t=e?e:this.options.style;"add"==a?this.$button.addClass(t):"remove"==a?this.$button.removeClass(t):(this.$button.removeClass(this.options.style),this.$button.addClass(t))},liHeight:function(){if(this.options.size!==!1){var e=this.$menu.parent().clone().find("> .dropdown-toggle").prop("autofocus",!1).end().appendTo("body"),a=e.addClass("open").find("> .dropdown-menu"),t=a.find("li > a").outerHeight(),n=this.options.header?a.find(".popover-title").outerHeight():0,o=this.options.liveSearch?a.find(".bootstrap-select-searchbox").outerHeight():0,i=this.options.actionsBox?a.find(".bs-actionsbox").outerHeight():0;e.remove(),this.$newElement.data("liHeight",t).data("headerHeight",n).data("searchHeight",o).data("actionsHeight",i)}},setSize:function(){var a,t,n,o=this,i=this.$menu,r=i.find(".inner"),s=this.$newElement.outerHeight(),d=this.$newElement.data("liHeight"),l=this.$newElement.data("headerHeight"),c=this.$newElement.data("searchHeight"),m=this.$newElement.data("actionsHeight"),u=i.find("li .divider").outerHeight(!0),f=parseInt(i.css("padding-top"))+parseInt(i.css("padding-bottom"))+parseInt(i.css("border-top-width"))+parseInt(i.css("border-bottom-width")),h=this.options.hideDisabled?":not(.disabled)":"",p=e(window),g=f+parseInt(i.css("margin-top"))+parseInt(i.css("margin-bottom"))+2,b=function(){t=o.$newElement.offset().top-p.scrollTop(),n=p.height()-t-s};if(b(),this.options.header&&i.css("padding-top",0),"auto"==this.options.size){var v=function(){var e,s=o.$lis.not(".hide");b(),a=n-g,o.options.dropupAuto&&o.$newElement.toggleClass("dropup",t>n&&a-g<i.height()),o.$newElement.hasClass("dropup")&&(a=t-g),e=s.length+s.find("dt").length>3?3*d+g-2:0,i.css({"max-height":a+"px",overflow:"hidden","min-height":e+l+c+m+"px"}),r.css({"max-height":a-l-c-m-f+"px","overflow-y":"auto","min-height":Math.max(e-f,0)+"px"})};v(),this.$searchbox.off("input.getSize propertychange.getSize").on("input.getSize propertychange.getSize",v),e(window).off("resize.getSize").on("resize.getSize",v),e(window).off("scroll.getSize").on("scroll.getSize",v)}else if(this.options.size&&"auto"!=this.options.size&&i.find("li"+h).length>this.options.size){var y=i.find("li"+h+" > *").filter(":not(.div-contain)").slice(0,this.options.size).last().parent().index(),w=i.find("li").slice(0,y+1).find(".div-contain").length;a=d*this.options.size+w*u+f,o.options.dropupAuto&&this.$newElement.toggleClass("dropup",t>n&&a<i.height()),i.css({"max-height":a+l+c+m+"px",overflow:"hidden"}),r.css({"max-height":a-f+"px","overflow-y":"auto"})}},setWidth:function(){if("auto"==this.options.width){this.$menu.css("min-width","0");var e=this.$newElement.clone().appendTo("body"),a=e.find("> .dropdown-menu").css("width"),t=e.css("width","auto").find("> button").css("width");e.remove(),this.$newElement.css("width",Math.max(parseInt(a),parseInt(t))+"px")}else"fit"==this.options.width?(this.$menu.css("min-width",""),this.$newElement.css("width","").addClass("fit-width")):this.options.width?(this.$menu.css("min-width",""),this.$newElement.css("width",this.options.width)):(this.$menu.css("min-width",""),this.$newElement.css("width",""));this.$newElement.hasClass("fit-width")&&"fit"!==this.options.width&&this.$newElement.removeClass("fit-width")},selectPosition:function(){var a,t,n=this,o="<div />",i=e(o),r=function(e){i.addClass(e.attr("class").replace(/form-control/gi,"")).toggleClass("dropup",e.hasClass("dropup")),a=e.offset(),t=e.hasClass("dropup")?0:e[0].offsetHeight,i.css({top:a.top+t,left:a.left,width:e[0].offsetWidth,position:"absolute"})};this.$newElement.on("click",function(){n.isDisabled()||(r(e(this)),i.appendTo(n.options.container),i.toggleClass("open",!e(this).hasClass("open")),i.append(n.$menu))}),e(window).resize(function(){r(n.$newElement)}),e(window).on("scroll",function(){r(n.$newElement)}),e("html").on("click",function(a){e(a.target).closest(n.$newElement).length<1&&i.removeClass("open")})},mobile:function(){this.$element.addClass("mobile-device").appendTo(this.$newElement),this.options.container&&this.$menu.hide()},refresh:function(){this.$lis=null,this.reloadLi(),this.render(),this.setWidth(),this.setStyle(),this.checkDisabled(),this.liHeight()},update:function(){this.reloadLi(),this.setWidth(),this.setStyle(),this.checkDisabled(),this.liHeight()},setSelected:function(a,t){null==this.$lis&&(this.$lis=this.$menu.find("li")),e(this.$lis[a]).toggleClass("selected",t)},setDisabled:function(a,t){null==this.$lis&&(this.$lis=this.$menu.find("li")),t?e(this.$lis[a]).addClass("disabled").find("a").attr("href","#").attr("tabindex",-1):e(this.$lis[a]).removeClass("disabled").find("a").removeAttr("href").attr("tabindex",0)
},isDisabled:function(){return this.$element.is(":disabled")},checkDisabled:function(){var e=this;this.isDisabled()?this.$button.addClass("disabled").attr("tabindex",-1):(this.$button.hasClass("disabled")&&this.$button.removeClass("disabled"),-1==this.$button.attr("tabindex")&&(this.$element.data("tabindex")||this.$button.removeAttr("tabindex"))),this.$button.click(function(){return!e.isDisabled()})},tabIndex:function(){this.$element.is("[tabindex]")&&(this.$element.data("tabindex",this.$element.attr("tabindex")),this.$button.attr("tabindex",this.$element.data("tabindex")))},clickListener:function(){var a=this;e("body").on("touchstart.dropdown",".dropdown-menu",function(e){e.stopPropagation()}),this.$newElement.on("click",function(){a.setSize(),a.options.liveSearch||a.multiple||setTimeout(function(){a.$menu.find(".selected a").focus()},10)}),this.$menu.on("click","li a",function(t){var n=e(this).parent().index(),o=a.$element.val(),i=a.$element.prop("selectedIndex");if(a.multiple&&t.stopPropagation(),t.preventDefault(),!a.isDisabled()&&!e(this).parent().hasClass("disabled")){var r=a.$element.find("option"),s=r.eq(n),d=s.prop("selected"),l=s.parent("optgroup"),c=a.options.maxOptions,m=l.data("maxOptions")||!1;if(a.multiple){if(s.prop("selected",!d),a.setSelected(n,!d),c!==!1||m!==!1){var u=c<r.filter(":selected").length,f=m<l.find("option:selected").length,h=a.options.maxOptionsText,p=h[0].replace("{n}",c),g=h[1].replace("{n}",m),b=e('<div class="notify"></div>');(c&&u||m&&f)&&(h[2]&&(p=p.replace("{var}",h[2][c>1?0:1]),g=g.replace("{var}",h[2][m>1?0:1])),s.prop("selected",!1),a.$menu.append(b),c&&u&&(b.append(e("<div>"+p+"</div>")),a.$element.trigger("maxReached.bs.select")),m&&f&&(b.append(e("<div>"+g+"</div>")),a.$element.trigger("maxReachedGrp.bs.select")),setTimeout(function(){a.setSelected(n,!1)},10),b.delay(750).fadeOut(300,function(){e(this).remove()}))}}else r.prop("selected",!1),s.prop("selected",!0),a.$menu.find(".selected").removeClass("selected"),a.setSelected(n,!0);a.multiple?a.options.liveSearch&&a.$searchbox.focus():a.$button.focus(),(o!=a.$element.val()&&a.multiple||i!=a.$element.prop("selectedIndex")&&!a.multiple)&&a.$element.change()}}),this.$menu.on("click","li.disabled a, li dt, li .div-contain, .popover-title, .popover-title :not(.close)",function(e){e.target==this&&(e.preventDefault(),e.stopPropagation(),a.options.liveSearch?a.$searchbox.focus():a.$button.focus())}),this.$menu.on("click",".popover-title .close",function(){a.$button.focus()}),this.$searchbox.on("click",function(e){e.stopPropagation()}),this.$menu.on("click",".actions-btn",function(t){a.options.liveSearch?a.$searchbox.focus():a.$button.focus(),t.preventDefault(),t.stopPropagation(),e(this).is(".bs-select-all")?a.selectAll():a.deselectAll(),a.$element.change()}),this.$element.change(function(){a.render(!1)})},liveSearchListener:function(){var a=this,t=e('<li class="no-results"></li>');this.$newElement.on("click.dropdown.data-api",function(){a.$menu.find(".active").removeClass("active"),a.$searchbox.val()&&(a.$searchbox.val(""),a.$lis.not(".is-hidden").removeClass("hide"),t.parent().length&&t.remove()),a.multiple||a.$menu.find(".selected").addClass("active"),setTimeout(function(){a.$searchbox.focus()},10)}),this.$searchbox.on("input propertychange",function(){a.$searchbox.val()?(a.$lis.not(".is-hidden").removeClass("hide").find("a").not(":icontains("+a.$searchbox.val()+")").parent().addClass("hide"),a.$menu.find("li").filter(":visible:not(.no-results)").length?t.parent().length&&t.remove():(t.parent().length&&t.remove(),t.html(a.options.noneResultsText+' "'+a.$searchbox.val()+'"').show(),a.$menu.find("li").last().after(t))):(a.$lis.not(".is-hidden").removeClass("hide"),t.parent().length&&t.remove()),a.$menu.find("li.active").removeClass("active"),a.$menu.find("li").filter(":visible:not(.divider)").eq(0).addClass("active").find("a").focus(),e(this).focus()}),this.$menu.on("mouseenter","a",function(t){a.$menu.find(".active").removeClass("active"),e(t.currentTarget).parent().not(".disabled").addClass("active")}),this.$menu.on("mouseleave","a",function(){a.$menu.find(".active").removeClass("active")})},val:function(e){return void 0!==e?(this.$element.val(e),this.$element.change(),this.$element):this.$element.val()},selectAll:function(){null==this.$lis&&(this.$lis=this.$menu.find("li")),this.$element.find("option:enabled").prop("selected",!0),e(this.$lis).filter(":not(.disabled)").addClass("selected"),this.render(!1)},deselectAll:function(){null==this.$lis&&(this.$lis=this.$menu.find("li")),this.$element.find("option:enabled").prop("selected",!1),e(this.$lis).filter(":not(.disabled)").removeClass("selected"),this.render(!1)},keydown:function(a){var t,n,o,i,r,s,d,l,c,m,u,f,h={32:" ",48:"0",49:"1",50:"2",51:"3",52:"4",53:"5",54:"6",55:"7",56:"8",57:"9",59:";",65:"a",66:"b",67:"c",68:"d",69:"e",70:"f",71:"g",72:"h",73:"i",74:"j",75:"k",76:"l",77:"m",78:"n",79:"o",80:"p",81:"q",82:"r",83:"s",84:"t",85:"u",86:"v",87:"w",88:"x",89:"y",90:"z",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9"};if(t=e(this),o=t.parent(),t.is("input")&&(o=t.parent().parent()),m=o.data("this"),m.options.liveSearch&&(o=t.parent().parent()),m.options.container&&(o=m.$menu),n=e("[role=menu] li:not(.divider) a",o),f=m.$menu.parent().hasClass("open"),!f&&/([0-9]|[A-z])/.test(String.fromCharCode(a.keyCode))&&(m.options.container?m.$newElement.trigger("click"):(m.setSize(),m.$menu.parent().addClass("open"),f=m.$menu.parent().hasClass("open")),m.$searchbox.focus()),m.options.liveSearch&&(/(^9$|27)/.test(a.keyCode)&&f&&0===m.$menu.find(".active").length&&(a.preventDefault(),m.$menu.parent().removeClass("open"),m.$button.focus()),n=e("[role=menu] li:not(.divider):visible",o),t.val()||/(38|40)/.test(a.keyCode)||0===n.filter(".active").length&&(n=m.$newElement.find("li").filter(":icontains("+h[a.keyCode]+")"))),n.length){if(/(38|40)/.test(a.keyCode))i=n.index(n.filter(":focus")),s=n.parent(":not(.disabled):visible").first().index(),d=n.parent(":not(.disabled):visible").last().index(),r=n.eq(i).parent().nextAll(":not(.disabled):visible").eq(0).index(),l=n.eq(i).parent().prevAll(":not(.disabled):visible").eq(0).index(),c=n.eq(r).parent().prevAll(":not(.disabled):visible").eq(0).index(),m.options.liveSearch&&(n.each(function(a){e(this).is(":not(.disabled)")&&e(this).data("index",a)}),i=n.index(n.filter(".active")),s=n.filter(":not(.disabled):visible").first().data("index"),d=n.filter(":not(.disabled):visible").last().data("index"),r=n.eq(i).nextAll(":not(.disabled):visible").eq(0).data("index"),l=n.eq(i).prevAll(":not(.disabled):visible").eq(0).data("index"),c=n.eq(r).prevAll(":not(.disabled):visible").eq(0).data("index")),u=t.data("prevIndex"),38==a.keyCode&&(m.options.liveSearch&&(i-=1),i!=c&&i>l&&(i=l),s>i&&(i=s),i==u&&(i=d)),40==a.keyCode&&(m.options.liveSearch&&(i+=1),-1==i&&(i=0),i!=c&&r>i&&(i=r),i>d&&(i=d),i==u&&(i=s)),t.data("prevIndex",i),m.options.liveSearch?(a.preventDefault(),t.is(".dropdown-toggle")||(n.removeClass("active"),n.eq(i).addClass("active").find("a").focus(),t.focus())):n.eq(i).focus();else if(!t.is("input")){var p,g,b=[];n.each(function(){e(this).parent().is(":not(.disabled)")&&e.trim(e(this).text().toLowerCase()).substring(0,1)==h[a.keyCode]&&b.push(e(this).parent().index())}),p=e(document).data("keycount"),p++,e(document).data("keycount",p),g=e.trim(e(":focus").text().toLowerCase()).substring(0,1),g!=h[a.keyCode]?(p=1,e(document).data("keycount",p)):p>=b.length&&(e(document).data("keycount",0),p>b.length&&(p=1)),n.eq(b[p-1]).focus()}/(13|32|^9$)/.test(a.keyCode)&&f&&(/(32)/.test(a.keyCode)||a.preventDefault(),m.options.liveSearch?/(32)/.test(a.keyCode)||(m.$menu.find(".active a").click(),t.focus()):e(":focus").click(),e(document).data("keycount",0)),(/(^9$|27)/.test(a.keyCode)&&f&&(m.multiple||m.options.liveSearch)||/(27)/.test(a.keyCode)&&!f)&&(m.$menu.parent().removeClass("open"),m.$button.focus())}},hide:function(){this.$newElement.hide()},show:function(){this.$newElement.show()},destroy:function(){this.$newElement.remove(),this.$element.remove()}},e.fn.selectpicker=function(t,n){var o,i=arguments,r=this.each(function(){if(e(this).is("select")){var r=e(this),s=r.data("selectpicker"),d="object"==typeof t&&t;if(s){if(d)for(var l in d)s.options[l]=d[l]}else r.data("selectpicker",s=new a(this,d,n));if("string"==typeof t){var c=t;s[c]instanceof Function?([].shift.apply(i),o=s[c].apply(s,i)):o=s.options[c]}}});return void 0!==o?o:r},e.fn.selectpicker.defaults={style:"btn-default",size:"auto",title:null,selectedTextFormat:"values",noneSelectedText:"Nothing selected",noneResultsText:"No results match",countSelectedText:"{0} of {1} selected",maxOptionsText:["Limit reached ({n} {var} max)","Group limit reached ({n} {var} max)",["items","item"]],width:!1,container:!1,hideDisabled:!1,showSubtext:!1,showIcon:!0,showContent:!0,dropupAuto:!0,header:!1,liveSearch:!1,actionsBox:!1,multipleSeparator:", ",iconBase:"glyphicon",tickIcon:"glyphicon-ok",maxOptions:!1},e(document).data("keycount",0).on("keydown",".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bootstrap-select-searchbox input",a.prototype.keydown).on("focusin.modal",".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bootstrap-select-searchbox input",function(e){e.stopPropagation()})}(window.jQuery);var CONFIG={};if("undefined"==typeof TEMPLATES)var TEMPLATES={};TEMPLATES["font-picker-template.html"]='<!-- Font Family -->\n<!-- Can\'t use an HTML select because the items in the drop-down need to be\n     styled individually. -->\n<div class="bfh-selectbox">\n  <input class="font-family" type="hidden" value="">\n  <button type="button" class="btn btn-default btn-sm dropdown-toggle font-select-btn"\n    data-toggle="bfh-selectbox">\n    <span class="bfh-selectbox-option"></span>\n    <span class="caret selectbox-caret"></span>\n  </button>\n  <div class="bfh-selectbox-options">\n    <div role="listbox">\n      <ul role="option"></ul>\n    </div>\n  </div>\n</div>\n\n<!-- Google Fonts -->\n<div class="google-fonts modal fade" tabindex="-1" role="dialog"\n  aria-hidden="true" data-backdrop="false">\n  <div class="modal-dialog">\n    <div class="modal-content">\n      <div class="modal-header">\n        <button class="close" type="button" aria-hidden="true"\n          data-dismiss="modal">\n          <span>&times;</span><span class="sr-only">Close</span>\n        </button>\n        <h2 class="modal-title">Google Fonts</h2>\n      </div>\n      <div class="modal-body">\n        <div class="list-group bfh-googlefontlist"></div>\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="btn btn-primary btn-fixed-width" data-dismiss="modal">\n          <span data-i18n="cancel">Cancel</span> <i class="fa fa-times fa-white icon-right"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Custom Font -->\n<div class="custom-font modal fade" tabindex="-1" role="dialog"\n  aria-hidden="true" data-backdrop="false">\n  <div class="modal-dialog">\n    <div class="modal-content">\n      <div class="modal-header">\n        <button class="close" type="button" aria-hidden="true"\n          data-dismiss="modal">\n          <span>&times;</span><span class="sr-only">Close</span>\n        </button>\n        <h2 class="modal-title">Custom Font</h2>\n      </div>\n      <div class="modal-body">\n        <div class="custom-font-error alert alert-danger">\n          Unable to validate the URL entered. Please un-check "Validate URL" to bypass validation.\n        </div>\n        <div class="url-field"></div>\n      </div>\n      <div class="modal-footer">\n        <button type="button" class="save-custom-font btn btn-success btn-fixed-width" >\n          <span data-i18n="select">Select</span> <i class="fa fa-check fa-white icon-right"></i>\n        </button>\n        <button type="button" class="btn btn-primary btn-fixed-width" data-dismiss="modal">\n          <span data-i18n="cancel">Cancel</span> <i class="fa fa-times fa-white icon-right"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n';var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Validation=function(){"use strict";function e(e,a){var t=e.value.trim();return s.test(t)?parseFloat(t)>parseFloat(a):!1}function a(e,a){var t=e.value.trim();return s.test(t)?parseFloat(t)<parseFloat(a):!1}function t(e){var a=e.value.trim();return r.test(a)}function n(e){var a=e.value.trim(),t=!1;return"checkbox"===e.type||"radio"===e.type?e.checked===!0&&(t=!0):null!==a&&""!==a&&(t=!0),t}function o(e){var a=e.value.trim();return-1===a.indexOf("://")&&(a="http://"+a),i.test(a)}var i=/^(?:(?:https?|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/i,r=/^(\-|\+)?([0-9]+|Infinity)$/,s=/^\-?[0-9]*\.?[0-9]+$/;return{isGreaterThan:e,isLessThan:a,isValidRequired:n,isValidURL:o,isValidNumber:t}}(),RiseVision.Common.Utilities=function(){function e(e,a){var t="font-family:"+a.font.family+"; ",n="color: "+a.color+"; ",o="font-size: "+a.size+"px; ",i="font-weight: "+(a.bold?"bold":"normal")+"; ",r="font-style: "+(a.italic?"italic":"normal")+"; ",s="text-decoration: "+(a.underline?"underline":"none")+"; ",d="background-color: "+a.highlightColor+"; ";return"."+e+" {"+t+n+o+i+r+s+d+"}"}function a(e){for(var a=document.createElement("style"),t=0,n=e.length;n>t;t++)a.appendChild(document.createTextNode(e[t]));document.head.appendChild(a)}function t(t,i){t.forEach(function(t){t.class&&t.fontSetting&&a([e(t.class,t.fontSetting)]),t.fontSetting.font.type&&("custom"===t.fontSetting.font.type&&t.fontSetting.font.family&&t.fontSetting.font.url?n(t.fontSetting.font.family,t.fontSetting.font.url,i):"google"===t.fontSetting.font.type&&t.fontSetting.font.family&&o(t.fontSetting.font.family,i))})}function n(e,a,t){var n=null,o="font-family: "+e+"; src: url('"+a+"');";t=t||document,n=t.styleSheets[0],null!==n&&n.addRule("@font-face",o)}function o(e,a){var t=document.createElement("link");a=a||document,t.setAttribute("rel","stylesheet"),t.setAttribute("type","text/css"),t.setAttribute("href","https://fonts.googleapis.com/css?family="+e),null!==t&&a.getElementsByTagName("head")[0].appendChild(t)}return{getFontCssStyle:e,addCSSRules:a,loadFonts:t,loadCustomFont:n,loadGoogleFont:o}}(),function(e,a,t,n){"use strict";function o(a,t){function o(){y.append(n["font-picker-template.html"]),w=y.find(".bfh-selectbox"),S=y.find(".font-family"),A=y.find(".custom-font"),k=A.find(".url-field"),C=y.find(".custom-font-error"),w.bfhfonts(t),y.find(".bfh-googlefontlist").bfhgooglefontlist(),k.urlField({url:t["font-url"]}),k=k.data("plugin_urlField"),N=t["font-url"],i(),s(),"function"==typeof t.load&&t.load.call(y)}function i(){var a=!1;M=S.val(),""!==N?(v.loadCustomFont(M,N,T),M=r):null!==M&&(w.find(".bfh-selectbox-options a").each(function(){return e(this).text()===M?(a=!0,!1):void 0}),a||g(M,!0))}function s(){var e=y.find(".google-fonts");w.on("change.bfhselectbox",function(a){"More Fonts..."===a.target.value?e.modal("show"):a.target.value===r?(M=S.val(),C.hide(),A.modal("show")):(M=S.val(),w.trigger("standardFontSelected",[M,y.find("a[data-option='"+M+"']").css("font-family")]))}),y.find(".save-custom-font").on("click",function(){var e="";N=k.getUrl(),e=d(),k.validateUrl()?(v.loadCustomFont(e,N,T),A.modal("hide"),w.trigger("customFontSelected",[e,N])):C.show()}),e.on("select",function(a,t){g(t,!0),e.modal("hide"),M=S.val(),w.trigger("googleFontSelected",t)}),e.find(".close").on("click",function(){w.find(".bfh-selectbox-option").data("option",M).html(M),S.val(M)})}function d(){return N.split("/").pop().split(".")[0]}function l(){var a=w.find("[role=option] li").length,t=w.find("[role=option] li:nth-last-child(2)"),n=w.find("[role=option] li:last"),o=w.find("[role=option] li").slice(0,a-2).sort(function(a,t){var n=e(a).find("a").text(),o=e(t).find("a").text();return n==o?0:o>n?-1:1});w.find("[role=option]").html(o).append(t).append(n)}function c(){return""!==N?d():S.val()}function m(){return y.find("a[data-option='"+S.val()+"']").css("font-family")}function u(){return k.getUrl()}function f(a){var t=a.split(","),n=null,o=!1;e.each(t,function(e,a){return a=a.replace(/'/g,"").trim(),n=w.find("a[data-option='"+a+"']"),1===n.length?(w.find(".bfh-selectbox-option").text(n.text()).data("option",a),S.val(a),o=!0,!1):void 0}),o||(w.find(".bfh-selectbox-option").text(r).data("option",r),S.val(r))}function h(){f("Arial, 'Helvetica Neue', Helvetica, sans-serif")}function p(e){T=e}function g(e,a){var t=w.find("[role=option]");v.loadGoogleFont(e,T),t.prepend("<li class='google-font'><a tabindex='-1' href='#' style='font-family: Google' data-option='"+e+"'>"+e+"</a></li>"),a&&(w.find(".bfh-selectbox-option").data("option",e).html(e),w.find(".font-family").val(e)),l()}function b(e,a){v.loadCustomFont(e,a,T),N=a,M=r}var v=RiseVision.Common.Utilities,y=e(a),w=null,S=null,A=null,k=null,C=null,T=null,M="",N="";return t=e.extend({},{blank:!1,font:"Arial","font-url":"",load:null,showCustom:!0,showMore:!0},t),o(),{getFont:c,getFontStyle:m,getFontURL:u,setFont:f,reset:h,setContentDoc:p,addGoogleFont:g,addCustomFont:b}}var i="fontPicker",r="Use Custom Font";e.fn.fontPicker=function(a){return this.each(function(){e.data(this,"plugin_"+i)||e.data(this,"plugin_"+i,new o(this,a))})}}(jQuery,window,document,TEMPLATES,CONFIG);var CONFIG={};if(function(e){"use strict";function a(a,t){function n(){s.append("<select class='form-control bfh-fontsizes' data-style='btn-default btn-sm'></select>"),s.find(".bfh-fontsizes").bfhfontsizes({fontsize:t["font-size"],blank:t.blank}).selectpicker(),s.find(".bfh-fontsizes").on("change.bfhselectbox",function(){s.trigger("sizeChanged",o())})}function o(){return s.find(".bfh-fontsizes").val()}function i(a){var t=s.find(".bfh-fontsizes");a&&(a=parseInt(a,10),t.find("> .dropdown-menu li").each(function(){e(this).find("span").text()==a?e(this).toggleClass("selected",!0):e(this).toggleClass("selected",!1)}),t.find("> button").attr("title",a),t.find(".filter-option").html(a),t.val(a))}function r(){i(d)}var s=e(a),d="14";return t=e.extend({},{"font-size":d,blank:!1},t),n(),{getFontSize:o,setFontSize:i,reset:r}}var t="fontSizePicker";e.fn.fontSizePicker=function(n){return this.each(function(){e.data(this,"plugin_"+t)||e.data(this,"plugin_"+t,new a(this,n))})}}(jQuery,window,document,CONFIG),function(e,a,t){"use strict";function n(e,t,n,o){for(var i=[],r=0;r<e.length;r++){var s=e[r];if(s){var d=tinycolor(s),l=d.toHsl().l<.5?"sp-thumb-el sp-thumb-dark":"sp-thumb-el sp-thumb-light";l+=tinycolor.equals(t,s)?" sp-thumb-active":"";var c=d.toString(o.preferredFormat||"rgb"),m=b?"background-color:"+d.toRgbString():"filter:"+d.toFilter();i.push('<span title="'+c+'" data-color="'+d.toRgbString()+'" class="'+l+'"><span class="sp-thumb-inner" style="'+m+';" /></span>')}else{var u="sp-clear-display";i.push(a("<div />").append(a('<span data-color="" style="background-color:transparent;" class="'+u+'"></span>').attr("title",o.noColorSelectedText)).html())}}return"<div class='sp-cf "+n+"'>"+i.join("")+"</div>"}function o(){for(var e=0;e<p.length;e++)p[e]&&p[e].hide()}function i(e,t){var n=a.extend({},h,e);return n.callbacks={move:c(n.move,t),change:c(n.change,t),show:c(n.show,t),hide:c(n.hide,t),beforeShow:c(n.beforeShow,t)},"text"===n.type?f=["<div class='sp-replacer text-color-picker'>","<div class='sp-preview'>","<div class='sp-preview-inner'>","<div class='sp-preview-char'>A</div>","</div>","</div>","<b class='caret'></b>","</div>"].join(""):"highlight"===n.type?f=["<div class='sp-replacer highlight-color-picker'>","<div class='sp-preview'>","<div class='sp-preview-inner'>","<img src='http://s3.amazonaws.com/rise-common-test/scripts/spectrum/images/text-highlight.png'>","</div>","</div>","<b class='caret'></b>","</div>"].join(""):"background"===n.type&&(f=["<div class='sp-replacer background-color-picker'>","<div class='sp-preview'>","<div class='sp-preview-inner'></div>","</div>","<b class='caret'></b>","</div>"].join("")),n}function r(r,d){function c(){if(V.showPaletteOnly&&(V.showPalette=!0),V.palette){ca=V.palette.slice(0),ma=a.isArray(ca[0])?ca:[ca],ua={};for(var e=0;e<ma.length;e++)for(var t=0;t<ma[e].length;t++){var n=tinycolor(ma[e][t]).toRgbString();ua[n]=!0}}wa.toggleClass("sp-flat",z),wa.toggleClass("sp-input-disabled",!V.showInput),wa.toggleClass("sp-alpha-enabled",V.showAlpha),wa.toggleClass("sp-clear-enabled",ja),wa.toggleClass("sp-buttons-disabled",!V.showButtons),wa.toggleClass("sp-palette-disabled",!V.showPalette),wa.toggleClass("sp-palette-only",V.showPaletteOnly),wa.toggleClass("sp-initial-disabled",!V.showInitial),wa.addClass(V.className).addClass(V.containerClassName),K()}function h(){function e(e){return e.data&&e.data.ignore?(L(a(e.target).closest(".sp-thumb-el").data("color")),O()):(L(a(e.target).closest(".sp-thumb-el").data("color")),O(),H(!0),B()),!1}if(g&&wa.find("*:not(input)").attr("unselectable","on"),c(),Ia&&va.after($a).hide(),ja||La.hide(),z)va.after(wa).hide();else{var t="parent"===V.appendTo?va.parent():a(V.appendTo);1!==t.length&&(t=a("body")),t.append(wa)}w(),Ha.bind("click.spectrum touchstart.spectrum",function(e){ya||x(),e.stopPropagation(),a(e.target).is("input")||e.preventDefault()}),(va.is(":disabled")||V.disabled===!0)&&_(),wa.click(l),xa.change(N),xa.bind("paste",function(){setTimeout(N,1)}),xa.keydown(function(e){13==e.keyCode&&N()}),Ra[0].innerHTML=V.cancelText+" "+Ra[0].innerHTML,Ra.bind("click.spectrum",function(e){e.stopPropagation(),e.preventDefault(),B("cancel")}),La.attr("title",V.clearText),La.bind("click.spectrum",function(e){e.stopPropagation(),e.preventDefault(),za=!0,O(),z&&H(!0)}),Pa[0].innerHTML=V.chooseText+" "+Pa[0].innerHTML,Pa.bind("click.spectrum",function(e){e.stopPropagation(),e.preventDefault(),D()&&(H(!0),B())}),m(Ma,function(e,a,t){la=e/na,za=!1,t.shiftKey&&(la=Math.round(10*la)/10),O()},T,M),m(ka,function(e,a){ra=parseFloat(a/aa),za=!1,V.showAlpha||(la=1),O()},T,M),m(Sa,function(e,a,t){if(t.shiftKey){if(!ga){var n=sa*Q,o=X-da*X,i=Math.abs(e-n)>Math.abs(a-o);ga=i?"x":"y"}}else ga=null;var r=!ga||"x"===ga,s=!ga||"y"===ga;r&&(sa=parseFloat(e/Q)),s&&(da=parseFloat((X-a)/X)),za=!1,V.showAlpha||(la=1),O()},T,M),Ga?(L(Ga),I(),_a=Ua||tinycolor(Ga).format,S(Ga)):I(),z&&E();var n=g?"mousedown.spectrum":"click.spectrum touchstart.spectrum";Ea.delegate(".sp-thumb-el",n,e),Ba.delegate(".sp-thumb-el:nth-child(1)",n,{ignore:!0},e)}function w(){if(W&&e.localStorage){try{var t=e.localStorage[W].split(",#");t.length>1&&(delete e.localStorage[W],a.each(t,function(e,a){S(a)}))}catch(n){}try{fa=e.localStorage[W].split(";")}catch(n){}}}function S(t){if(j){var n=tinycolor(t).toRgbString();if(!ua[n]&&-1===a.inArray(n,fa))for(fa.push(n);fa.length>ha;)fa.shift();if(W&&e.localStorage)try{e.localStorage[W]=fa.join(";")}catch(o){}}}function A(){var e=[];if(V.showPalette)for(var a=0;a<fa.length;a++){var t=tinycolor(fa[a]).toRgbString();ua[t]||e.push(fa[a])}return e.reverse().slice(0,V.maxSelectionSize)}function k(){var e=P(),t=a.map(ma,function(a,t){return n(a,e,"sp-palette-row sp-palette-row-"+t,V)});w(),fa&&t.push(n(A(),e,"sp-palette-row sp-palette-row-selection",V)),Ea.html(t.join(""))}function C(){if(V.showInitial){var e=Fa,a=P();Ba.html(n([e,a],a,"sp-palette-row-initial",V))}}function T(){(0>=X||0>=Q||0>=aa)&&K(),wa.addClass(pa),ga=null,va.trigger("dragstart.spectrum",[P()])}function M(){wa.removeClass(pa),va.trigger("dragstop.spectrum",[P()])}function N(){var e=xa.val();if(null!==e&&""!==e||!ja){var a=tinycolor(e);a.isValid()?(L(a),H(!0)):xa.addClass("sp-validation-error")}else L(null),H(!0)}function x(){q?B():E()}function E(){var t=a.Event("beforeShow.spectrum");return q?(K(),void 0):(va.trigger(t,[P()]),J.beforeShow(P())===!1||t.isDefaultPrevented()||(o(),q=!0,a(ba).bind("click.spectrum",B),a(e).bind("resize.spectrum",Z),$a.addClass("sp-active"),wa.removeClass("sp-hidden"),K(),I(),Fa=P(),C(),J.show(Fa),va.trigger("show.spectrum",[Fa])),void 0)}function B(t){if((!t||"click"!=t.type||2!=t.button)&&q&&!z){q=!1,a(ba).unbind("click.spectrum",B),a(e).unbind("resize.spectrum",Z),$a.removeClass("sp-active"),wa.addClass("sp-hidden");var n=!tinycolor.equals(P(),Fa);n&&(Va&&"cancel"!==t?H(!0):R()),J.hide(P()),va.trigger("hide.spectrum",[P()])}}function R(){L(Fa,!0)}function L(e,a){if(tinycolor.equals(e,P()))return I(),void 0;var t,n;!e&&ja?za=!0:(za=!1,t=tinycolor(e),n=t.toHsv(),ra=n.h%360/360,sa=n.s,da=n.v,la=n.a),I(),t&&t.isValid()&&!a&&(_a=Ua||t.getFormat())}function P(e){return e=e||{},ja&&za?null:tinycolor.fromRatio({h:ra,s:sa,v:da,a:Math.round(100*la)/100},{format:e.format||_a})}function D(){return!xa.hasClass("sp-validation-error")}function O(){I(),J.move(P()),va.trigger("move.spectrum",[P()])}function I(){xa.removeClass("sp-validation-error"),$();var e=tinycolor.fromRatio({h:ra,s:1,v:1});Sa.css("background-color",e.toHexString());var a=_a;1>la&&(0!==la||"name"!==a)&&("hex"===a||"hex3"===a||"hex6"===a||"name"===a)&&(a="rgb");var t=P({format:a}),n="";if(Ka.removeClass("sp-clear-display"),"text"===V.type?Ka.css("border-color","transparent"):Ka.css("background-color","transparent"),!t&&ja)Ka.addClass("sp-clear-display");else{var o=t.toHexString(),i=t.toRgbString();if(b||1===t.alpha?"text"===V.type?Ka.css("border-color",i):Ka.css("background-color",i):("text"===V.type?Ka.css("border-color","transparent"):Ka.css("background-color","transparent"),Ka.css("filter",t.toFilter())),V.showAlpha){var r=t.toRgb();r.a=0;var s=tinycolor(r).toRgbString(),d="linear-gradient(left, "+s+", "+o+")";g?Ta.css("filter",tinycolor(s).toFilter({gradientType:1},o)):(Ta.css("background","-webkit-"+d),Ta.css("background","-moz-"+d),Ta.css("background","-ms-"+d),Ta.css("background","linear-gradient(to right, "+s+", "+o+")"))}n=t.toString(a)}V.showInput&&xa.val(n),V.showPalette&&k(),C()}function $(){var e=sa,a=da;if(ja&&za)Na.hide(),Ca.hide(),Aa.hide();else{Na.show(),Ca.show(),Aa.show();var t=e*Q,n=X-a*X;t=Math.max(-ea,Math.min(Q-ea,t-ea)),n=Math.max(-ea,Math.min(X-ea,n-ea)),Aa.css({top:n+"px",left:t+"px"});var o=la*na;Na.css({left:o-oa/2+"px"});var i=ra*aa;Ca.css({top:i-ia+"px"})}}function H(e){var a=P(),t="",n=!tinycolor.equals(a,Fa);a&&(t=a.toString(_a),S(a)),Da&&va.val(t),Fa=a,e&&n&&(J.change(a),va.trigger("change",[a]))}function K(){Q=Sa.width(),X=Sa.height(),ea=Aa.height(),ta=ka.width(),aa=ka.height(),ia=Ca.height(),na=Ma.width(),oa=Na.width(),z||(wa.css("position","absolute"),wa.offset(s(wa,Ha))),$(),V.showPalette&&k(),va.trigger("reflow.spectrum")}function G(){va.show(),Ha.unbind("click.spectrum touchstart.spectrum"),wa.remove(),$a.remove(),p[Wa.id]=null}function F(e,n){return e===t?a.extend({},V):n===t?V[e]:(V[e]=n,c(),void 0)}function U(){ya=!1,va.attr("disabled",!1),Ha.removeClass("sp-disabled")}function _(){B(),ya=!0,va.attr("disabled",!0),Ha.addClass("sp-disabled")}var V=i(d,r),z=V.flat,j=V.showSelectionPalette,W=V.localStorageKey,Y=V.theme,J=V.callbacks,Z=u(K,10),q=!1,Q=0,X=0,ea=0,aa=0,ta=0,na=0,oa=0,ia=0,ra=0,sa=0,da=0,la=1,ca=[],ma=[],ua={},fa=V.selectionPalette.slice(0),ha=V.maxSelectionSize,pa="sp-dragging",ga=null,ba=r.ownerDocument,va=(ba.body,a(r)),ya=!1,wa=a(y,ba).addClass(Y),Sa=wa.find(".sp-color"),Aa=wa.find(".sp-dragger"),ka=wa.find(".sp-hue"),Ca=wa.find(".sp-slider"),Ta=wa.find(".sp-alpha-inner"),Ma=wa.find(".sp-alpha"),Na=wa.find(".sp-alpha-handle"),xa=wa.find(".sp-input"),Ea=wa.find(".sp-palette"),Ba=wa.find(".sp-initial"),Ra=wa.find(".sp-cancel"),La=wa.find(".sp-clear"),Pa=wa.find(".sp-choose"),Da=va.is("input"),Oa=Da&&v&&"color"===va.attr("type"),Ia=Da&&!z,$a=Ia?a(f).addClass(Y).addClass(V.className).addClass(V.replacerClassName):a([]),Ha=Ia?$a:va,Ka="text"===V.type?$a.find(".sp-preview"):$a.find(".sp-preview-inner"),Ga=V.color||Da&&va.val(),Fa=!1,Ua=V.preferredFormat,_a=Ua,Va=!V.showButtons||V.clickoutFiresChange,za=!Ga,ja=V.allowEmpty&&!Oa;h();var Wa={show:E,hide:B,toggle:x,reflow:K,option:F,enable:U,disable:_,set:function(e){L(e),H()},get:P,destroy:G,container:wa};return Wa.id=p.push(Wa)-1,Wa}function s(e,t){var n=0,o=e.outerWidth(),i=e.outerHeight(),r=t.outerHeight(),s=e[0].ownerDocument,d=s.documentElement,l=d.clientWidth+a(s).scrollLeft(),c=d.clientHeight+a(s).scrollTop(),m=t.offset();return m.top+=r,m.left-=Math.min(m.left,m.left+o>l&&l>o?Math.abs(m.left+o-l):0),m.top-=Math.min(m.top,m.top+i>c&&c>i?Math.abs(i+r-n):n),m}function d(){}function l(e){e.stopPropagation()}function c(e,a){var t=Array.prototype.slice,n=t.call(arguments,2);return function(){return e.apply(a,n.concat(t.call(arguments)))}}function m(t,n,o,i){function r(e){e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault(),e.returnValue=!1}function s(e){if(m){if(g&&document.documentMode<9&&!e.button)return l();var a=e.originalEvent.touches,o=a?a[0].pageX:e.pageX,i=a?a[0].pageY:e.pageY,s=Math.max(0,Math.min(o-u.left,h)),d=Math.max(0,Math.min(i-u.top,f));p&&r(e),n.apply(t,[s,d,e])}}function d(e){{var n=e.which?3==e.which:2==e.button;e.originalEvent.touches}n||m||o.apply(t,arguments)!==!1&&(m=!0,f=a(t).height(),h=a(t).width(),u=a(t).offset(),a(c).bind(b),a(c.body).addClass("sp-dragging"),p||s(e),r(e))}function l(){m&&(a(c).unbind(b),a(c.body).removeClass("sp-dragging"),i.apply(t,arguments)),m=!1}n=n||function(){},o=o||function(){},i=i||function(){};var c=t.ownerDocument||document,m=!1,u={},f=0,h=0,p="ontouchstart"in e,b={};b.selectstart=r,b.dragstart=r,b["touchmove mousemove"]=s,b["touchend mouseup"]=l,a(t).bind("touchstart mousedown",d)}function u(e,a,t){var n;return function(){var o=this,i=arguments,r=function(){n=null,e.apply(o,i)};t&&clearTimeout(n),(t||!n)&&(n=setTimeout(r,a))}}var f,h={beforeShow:d,move:d,change:d,show:d,hide:d,color:!1,flat:!1,showInput:!1,allowEmpty:!1,showButtons:!0,clickoutFiresChange:!1,showInitial:!1,showPalette:!1,showPaletteOnly:!1,showSelectionPalette:!0,localStorageKey:!1,appendTo:"body",maxSelectionSize:7,cancelText:"cancel",chooseText:"choose",clearText:"Clear Color Selection",noColorSelectedText:"No Color Selected",preferredFormat:!1,className:"",containerClassName:"",replacerClassName:"",type:"text",showAlpha:!1,theme:"sp-light",palette:[["#ffffff","#000000","#ff0000","#ff8000","#ffff00","#008000","#0000ff","#4b0082","#9400d3"]],selectionPalette:[],disabled:!1},p=[],g=!!/msie/i.exec(e.navigator.userAgent),b=function(){function e(e,a){return!!~(""+e).indexOf(a)}var a=document.createElement("div"),t=a.style;return t.cssText="background-color:rgba(0,0,0,.5)",e(t.backgroundColor,"rgba")||e(t.backgroundColor,"hsla")}(),v=function(){var e=a("<input type='color' value='!' />")[0];return"color"===e.type&&"!"!==e.value}(),y=function(){var e="";if(g)for(var a=1;6>=a;a++)e+="<div class='sp-"+a+"'></div>";return["<div class='sp-container sp-hidden'>","<div class='sp-palette-container'>","<div class='sp-palette sp-thumb sp-cf'></div>","</div>","<div class='sp-picker-container'>","<div class='sp-top sp-cf'>","<div class='sp-fill'></div>","<div class='sp-top-inner'>","<div class='sp-color'>","<div class='sp-sat'>","<div class='sp-val'>","<div class='sp-dragger'></div>","</div>","</div>","</div>","<div class='sp-clear sp-clear-display'>","</div>","<div class='sp-hue'>","<div class='sp-slider'></div>",e,"</div>","</div>","<div class='sp-alpha'><div class='sp-alpha-inner'><div class='sp-alpha-handle'></div></div></div>","</div>","<div class='sp-input-container sp-cf'>","<input class='sp-input' type='text' spellcheck='false'  />","</div>","<div class='sp-initial sp-thumb sp-cf'></div>","<div class='sp-button-container sp-cf'>","<button type='button' class='sp-choose'><i class='fa fa-check fa-white '></i></button>","<span class='sp-btn-spacer'/>","<button type='button' class='sp-cancel'><i class='fa fa-times fa-white '></i></button>","</div>","</div>","</div>"].join("")
}(),w="spectrum.id";a.fn.spectrum=function(e){if("string"==typeof e){var t=this,n=Array.prototype.slice.call(arguments,1);return this.each(function(){var o=p[a(this).data(w)];if(o){var i=o[e];if(!i)throw new Error("Spectrum: no such method: '"+e+"'");"get"==e?t=o.get():"container"==e?t=o.container:"option"==e?t=o.option.apply(o,n):"destroy"==e?(o.destroy(),a(this).removeData(w)):i.apply(o,n)}}),t}return this.spectrum("destroy").each(function(){var t=a.extend({},e,a(this).data()),n=r(this,t);a(this).data(w,n.id)})},a.fn.spectrum.load=!0,a.fn.spectrum.loadOpts={},a.fn.spectrum.draggable=m,a.fn.spectrum.defaults=h,a.spectrum={},a.spectrum.localization={},a.spectrum.palettes={},a.fn.spectrum.processNativeColorInputs=function(){v||a("input[type=color]").spectrum({preferredFormat:"hex6"})},function(){function a(e){var a={r:0,g:0,b:0},n=1,i=!1,s=!1;return"string"==typeof e&&(e=w(e)),"object"==typeof e&&(e.hasOwnProperty("r")&&e.hasOwnProperty("g")&&e.hasOwnProperty("b")?(a=t(e.r,e.g,e.b),i=!0,s="%"===String(e.r).substr(-1)?"prgb":"rgb"):e.hasOwnProperty("h")&&e.hasOwnProperty("s")&&e.hasOwnProperty("v")?(e.s=b(e.s),e.v=b(e.v),a=r(e.h,e.s,e.v),i=!0,s="hsv"):e.hasOwnProperty("h")&&e.hasOwnProperty("s")&&e.hasOwnProperty("l")&&(e.s=b(e.s),e.l=b(e.l),a=o(e.h,e.s,e.l),i=!0,s="hsl"),e.hasOwnProperty("a")&&(n=e.a)),n=c(n),{ok:i,format:e.format||s,r:M(255,N(a.r,0)),g:M(255,N(a.g,0)),b:M(255,N(a.b,0)),a:n}}function t(e,a,t){return{r:255*m(e,255),g:255*m(a,255),b:255*m(t,255)}}function n(e,a,t){e=m(e,255),a=m(a,255),t=m(t,255);var n,o,i=N(e,a,t),r=M(e,a,t),s=(i+r)/2;if(i==r)n=o=0;else{var d=i-r;switch(o=s>.5?d/(2-i-r):d/(i+r),i){case e:n=(a-t)/d+(t>a?6:0);break;case a:n=(t-e)/d+2;break;case t:n=(e-a)/d+4}n/=6}return{h:n,s:o,l:s}}function o(e,a,t){function n(e,a,t){return 0>t&&(t+=1),t>1&&(t-=1),1/6>t?e+6*(a-e)*t:.5>t?a:2/3>t?e+(a-e)*(2/3-t)*6:e}var o,i,r;if(e=m(e,360),a=m(a,100),t=m(t,100),0===a)o=i=r=t;else{var s=.5>t?t*(1+a):t+a-t*a,d=2*t-s;o=n(d,s,e+1/3),i=n(d,s,e),r=n(d,s,e-1/3)}return{r:255*o,g:255*i,b:255*r}}function i(e,a,t){e=m(e,255),a=m(a,255),t=m(t,255);var n,o,i=N(e,a,t),r=M(e,a,t),s=i,d=i-r;if(o=0===i?0:d/i,i==r)n=0;else{switch(i){case e:n=(a-t)/d+(t>a?6:0);break;case a:n=(t-e)/d+2;break;case t:n=(e-a)/d+4}n/=6}return{h:n,s:o,v:s}}function r(e,a,t){e=6*m(e,360),a=m(a,100),t=m(t,100);var n=C.floor(e),o=e-n,i=t*(1-a),r=t*(1-o*a),s=t*(1-(1-o)*a),d=n%6,l=[t,r,i,i,s,t][d],c=[s,t,t,r,i,i][d],u=[i,i,s,t,t,r][d];return{r:255*l,g:255*c,b:255*u}}function s(e,a,t,n){var o=[g(T(e).toString(16)),g(T(a).toString(16)),g(T(t).toString(16))];return n&&o[0].charAt(0)==o[0].charAt(1)&&o[1].charAt(0)==o[1].charAt(1)&&o[2].charAt(0)==o[2].charAt(1)?o[0].charAt(0)+o[1].charAt(0)+o[2].charAt(0):o.join("")}function d(e,a,t,n){var o=[g(v(n)),g(T(e).toString(16)),g(T(a).toString(16)),g(T(t).toString(16))];return o.join("")}function l(e){var a={};for(var t in e)e.hasOwnProperty(t)&&(a[e[t]]=t);return a}function c(e){return e=parseFloat(e),(isNaN(e)||0>e||e>1)&&(e=1),e}function m(e,a){h(e)&&(e="100%");var t=p(e);return e=M(a,N(0,parseFloat(e))),t&&(e=parseInt(e*a,10)/100),C.abs(e-a)<1e-6?1:e%a/parseFloat(a)}function u(e){return M(1,N(0,e))}function f(e){return parseInt(e,16)}function h(e){return"string"==typeof e&&-1!=e.indexOf(".")&&1===parseFloat(e)}function p(e){return"string"==typeof e&&-1!=e.indexOf("%")}function g(e){return 1==e.length?"0"+e:""+e}function b(e){return 1>=e&&(e=100*e+"%"),e}function v(e){return Math.round(255*parseFloat(e)).toString(16)}function y(e){return f(e)/255}function w(e){e=e.replace(S,"").replace(A,"").toLowerCase();var a=!1;if(B[e])e=B[e],a=!0;else if("transparent"==e)return{r:0,g:0,b:0,a:0,format:"name"};var t;return(t=L.rgb.exec(e))?{r:t[1],g:t[2],b:t[3]}:(t=L.rgba.exec(e))?{r:t[1],g:t[2],b:t[3],a:t[4]}:(t=L.hsl.exec(e))?{h:t[1],s:t[2],l:t[3]}:(t=L.hsla.exec(e))?{h:t[1],s:t[2],l:t[3],a:t[4]}:(t=L.hsv.exec(e))?{h:t[1],s:t[2],v:t[3]}:(t=L.hex8.exec(e))?{a:y(t[1]),r:f(t[2]),g:f(t[3]),b:f(t[4]),format:a?"name":"hex8"}:(t=L.hex6.exec(e))?{r:f(t[1]),g:f(t[2]),b:f(t[3]),format:a?"name":"hex"}:(t=L.hex3.exec(e))?{r:f(t[1]+""+t[1]),g:f(t[2]+""+t[2]),b:f(t[3]+""+t[3]),format:a?"name":"hex"}:!1}var S=/^[\s,#]+/,A=/\s+$/,k=0,C=Math,T=C.round,M=C.min,N=C.max,x=C.random,E=function P(e,t){if(e=e?e:"",t=t||{},e instanceof P)return e;if(!(this instanceof P))return new P(e,t);var n=a(e);this._r=n.r,this._g=n.g,this._b=n.b,this._a=n.a,this._roundA=T(100*this._a)/100,this._format=t.format||n.format,this._gradientType=t.gradientType,this._r<1&&(this._r=T(this._r)),this._g<1&&(this._g=T(this._g)),this._b<1&&(this._b=T(this._b)),this._ok=n.ok,this._tc_id=k++};E.prototype={isValid:function(){return this._ok},getFormat:function(){return this._format},getAlpha:function(){return this._a},setAlpha:function(e){this._a=c(e),this._roundA=T(100*this._a)/100},toHsv:function(){var e=i(this._r,this._g,this._b);return{h:360*e.h,s:e.s,v:e.v,a:this._a}},toHsvString:function(){var e=i(this._r,this._g,this._b),a=T(360*e.h),t=T(100*e.s),n=T(100*e.v);return 1==this._a?"hsv("+a+", "+t+"%, "+n+"%)":"hsva("+a+", "+t+"%, "+n+"%, "+this._roundA+")"},toHsl:function(){var e=n(this._r,this._g,this._b);return{h:360*e.h,s:e.s,l:e.l,a:this._a}},toHslString:function(){var e=n(this._r,this._g,this._b),a=T(360*e.h),t=T(100*e.s),o=T(100*e.l);return 1==this._a?"hsl("+a+", "+t+"%, "+o+"%)":"hsla("+a+", "+t+"%, "+o+"%, "+this._roundA+")"},toHex:function(e){return s(this._r,this._g,this._b,e)},toHexString:function(e){return"#"+this.toHex(e)},toHex8:function(){return d(this._r,this._g,this._b,this._a)},toHex8String:function(){return"#"+this.toHex8()},toRgb:function(){return{r:T(this._r),g:T(this._g),b:T(this._b),a:this._a}},toRgbString:function(){return 1==this._a?"rgb("+T(this._r)+", "+T(this._g)+", "+T(this._b)+")":"rgba("+T(this._r)+", "+T(this._g)+", "+T(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:T(100*m(this._r,255))+"%",g:T(100*m(this._g,255))+"%",b:T(100*m(this._b,255))+"%",a:this._a}},toPercentageRgbString:function(){return 1==this._a?"rgb("+T(100*m(this._r,255))+"%, "+T(100*m(this._g,255))+"%, "+T(100*m(this._b,255))+"%)":"rgba("+T(100*m(this._r,255))+"%, "+T(100*m(this._g,255))+"%, "+T(100*m(this._b,255))+"%, "+this._roundA+")"},toName:function(){return 0===this._a?"transparent":this._a<1?!1:R[s(this._r,this._g,this._b,!0)]||!1},toFilter:function(e){var a="#"+d(this._r,this._g,this._b,this._a),t=a,n=this._gradientType?"GradientType = 1, ":"";if(e){var o=E(e);t=o.toHex8String()}return"progid:DXImageTransform.Microsoft.gradient("+n+"startColorstr="+a+",endColorstr="+t+")"},toString:function(e){var a=!!e;e=e||this._format;var t=!1,n=this._a<1&&this._a>=0,o=!a&&n&&("hex"===e||"hex6"===e||"hex3"===e||"name"===e);return o?"name"===e&&0===this._a?this.toName():this.toRgbString():("rgb"===e&&(t=this.toRgbString()),"prgb"===e&&(t=this.toPercentageRgbString()),("hex"===e||"hex6"===e)&&(t=this.toHexString()),"hex3"===e&&(t=this.toHexString(!0)),"hex8"===e&&(t=this.toHex8String()),"name"===e&&(t=this.toName()),"hsl"===e&&(t=this.toHslString()),"hsv"===e&&(t=this.toHsvString()),t||this.toHexString())}},E.fromRatio=function(e,a){if("object"==typeof e){var t={};for(var n in e)e.hasOwnProperty(n)&&(t[n]="a"===n?e[n]:b(e[n]));e=t}return E(e,a)},E.equals=function(e,a){return e&&a?E(e).toRgbString()==E(a).toRgbString():!1},E.random=function(){return E.fromRatio({r:x(),g:x(),b:x()})},E.desaturate=function(e,a){a=0===a?0:a||10;var t=E(e).toHsl();return t.s-=a/100,t.s=u(t.s),E(t)},E.saturate=function(e,a){a=0===a?0:a||10;var t=E(e).toHsl();return t.s+=a/100,t.s=u(t.s),E(t)},E.greyscale=function(e){return E.desaturate(e,100)},E.lighten=function(e,a){a=0===a?0:a||10;var t=E(e).toHsl();return t.l+=a/100,t.l=u(t.l),E(t)},E.brighten=function(e,a){a=0===a?0:a||10;var t=E(e).toRgb();return t.r=N(0,M(255,t.r-T(255*-(a/100)))),t.g=N(0,M(255,t.g-T(255*-(a/100)))),t.b=N(0,M(255,t.b-T(255*-(a/100)))),E(t)},E.darken=function(e,a){a=0===a?0:a||10;var t=E(e).toHsl();return t.l-=a/100,t.l=u(t.l),E(t)},E.complement=function(e){var a=E(e).toHsl();return a.h=(a.h+180)%360,E(a)},E.triad=function(e){var a=E(e).toHsl(),t=a.h;return[E(e),E({h:(t+120)%360,s:a.s,l:a.l}),E({h:(t+240)%360,s:a.s,l:a.l})]},E.tetrad=function(e){var a=E(e).toHsl(),t=a.h;return[E(e),E({h:(t+90)%360,s:a.s,l:a.l}),E({h:(t+180)%360,s:a.s,l:a.l}),E({h:(t+270)%360,s:a.s,l:a.l})]},E.splitcomplement=function(e){var a=E(e).toHsl(),t=a.h;return[E(e),E({h:(t+72)%360,s:a.s,l:a.l}),E({h:(t+216)%360,s:a.s,l:a.l})]},E.analogous=function(e,a,t){a=a||6,t=t||30;var n=E(e).toHsl(),o=360/t,i=[E(e)];for(n.h=(n.h-(o*a>>1)+720)%360;--a;)n.h=(n.h+o)%360,i.push(E(n));return i},E.monochromatic=function(e,a){a=a||6;for(var t=E(e).toHsv(),n=t.h,o=t.s,i=t.v,r=[],s=1/a;a--;)r.push(E({h:n,s:o,v:i})),i=(i+s)%1;return r},E.readability=function(e,a){var t=E(e).toRgb(),n=E(a).toRgb(),o=(299*t.r+587*t.g+114*t.b)/1e3,i=(299*n.r+587*n.g+114*n.b)/1e3,r=Math.max(t.r,n.r)-Math.min(t.r,n.r)+Math.max(t.g,n.g)-Math.min(t.g,n.g)+Math.max(t.b,n.b)-Math.min(t.b,n.b);return{brightness:Math.abs(o-i),color:r}},E.readable=function(e,a){var t=E.readability(e,a);return t.brightness>125&&t.color>500},E.mostReadable=function(e,a){for(var t=null,n=0,o=!1,i=0;i<a.length;i++){var r=E.readability(e,a[i]),s=r.brightness>125&&r.color>500,d=3*(r.brightness/125)+r.color/500;(s&&!o||s&&o&&d>n||!s&&!o&&d>n)&&(o=s,n=d,t=E(a[i]))}return t};var B=E.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"},R=E.hexNames=l(B),L=function(){var e="[-\\+]?\\d+%?",a="[-\\+]?\\d*\\.\\d+%?",t="(?:"+a+")|(?:"+e+")",n="[\\s|\\(]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")\\s*\\)?",o="[\\s|\\(]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")[,|\\s]+("+t+")\\s*\\)?";return{rgb:new RegExp("rgb"+n),rgba:new RegExp("rgba"+o),hsl:new RegExp("hsl"+n),hsla:new RegExp("hsla"+o),hsv:new RegExp("hsv"+n),hex3:/^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex8:/^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();e.tinycolor=E}(),a(function(){a.fn.spectrum.load&&a.fn.spectrum.processNativeColorInputs()})}(window,jQuery),angular.module("risevision.widget.common",[]),angular.module("risevision.widget.common").controller("settingsController",["$scope","settingsSaver","settingsGetter","settingsCloser",function(e,a,t,n){e.settings={params:{},additionalParams:{}},e.alerts=[],e.getAdditionalParam=function(a,t){var n=e.settings.additionalParams[a];return angular.isUndefined(n)?t:n},e.setAdditionalParam=function(a,t){e.settings.additionalParams[a]=t},e.loadAdditionalParams=function(){t.getAdditionalParams().then(function(a){e.settings.additionalParams=a,e.$broadcast("loadAdditionalParams",a)},function(e){alert(e)})},e.setAdditionalParams=function(a,t){e.settings.additionalParams[a]=t},e.saveSettings=function(){e.alerts=[],e.$broadcast("collectAdditionalParams"),a.saveSettings(e.settings).then(function(){},function(a){e.alerts=a.alerts})},e.closeSettings=function(){n.closeSettings().then(function(){},function(a){e.alerts=a.alerts})},e.settings.params=t.getParams(),e.loadAdditionalParams()}]).directive("scrollOnAlerts",function(){return{restrict:"A",scope:!1,link:function(e,a){e.$watchCollection("alerts",function(e,t){e.length>0&&0===t.length&&$("body").animate({scrollTop:a.offset().top},"fast")})}}}),angular.module("risevision.widget.common").constant("STORAGE_FILE_URL_BASE","storage.googleapis.com/risemedialibrary-").constant("STORAGE_FOLDER_URL_BASE","googleapis.com/storage/").factory("commonSettings",["$log","STORAGE_FILE_URL_BASE","STORAGE_FOLDER_URL_BASE",function(e,a,t){var n={getStorageUrlData:function(e){function n(e){return-1!==e.indexOf(a)?"file":-1!==e.indexOf(t)?"folder":null}function o(e){var a=e.split("risemedialibrary-");return a[1].slice(0,a[1].indexOf("/"))}var i,r,s,d,l={};if("file"===n(e))i=e.split(a)[1],i=decodeURIComponent(i.slice(i.indexOf("/")+1)),r=i.split("/"),l.companyId=o(e),l.fileName=r.pop(),l.folder=r.length>0?r.join("/"):"",""!==l.folder&&(l.folder+="/");else if("folder"===n(e)){s=e.split("?");for(var c=0;c<s.length;c++)if(d=s[c].split("="),"prefix"===d[0]&&"undefined"!=typeof d[1]&&""!==d[1]){l.companyId=o(e),l.folder=decodeURIComponent(d[1]),l.fileName="";break}}return l}};return n}]),angular.module("risevision.widget.common").factory("gadgetsApi",["$window",function(e){return e.gadgets}]),angular.module("risevision.widget.common").service("i18nLoader",["$window","$q",function(e,a){var t=a.defer();e.i18n.init({fallbackLng:"en",resGetPath:"locales/__ns_____lng__.json"},function(){t.resolve(e.i18n)}),this.get=function(){return t.promise}}]),angular.module("risevision.widget.common").factory("imageValidator",["$q",function(e){var a={isImage:function(a){var t=e.defer(),n=new Image;return n.onload=function(){t.resolve(!0)},n.onerror=function(){t.resolve(!1)},n.src=a,t.promise}};return a}]),angular.module("risevision.widget.common").service("settingsSaver",["$q","$log","gadgetsApi","settingsParser",function(e,a,t,n){function o(e){var a=angular.copy(e);return delete a.params.id,delete a.params.companyId,delete a.params.rsW,delete a.params.rsH,a}this.saveSettings=function(i,r){var s=e.defer(),d=[],l="";i=o(i),r&&(d=r(i)),d.length>0&&(a.debug("Validation failed.",d),s.reject({alerts:d})),i.params.hasOwnProperty("layoutURL")&&(l+=i.params.layoutURL+"?",delete i.params.layoutURL),l+=n.encodeParams(i.params);var c=n.encodeAdditionalParams(i.additionalParams);return t.rpc.call("","rscmd_saveSettings",function(e){a.debug("encoded settings",JSON.stringify(e)),a.debug("Settings saved. ",i),s.resolve(e)},{params:l,additionalParams:c}),s.promise}}]).service("settingsGetter",["$q","gadgetsApi","$log","settingsParser","$window","defaultSettings",function(e,a,t,n,o,i){this.getAdditionalParams=function(){var o=e.defer(),r=i.additionalParams||{};return a.rpc.call("","rscmd_getAdditionalParams",function(e){e=e?n.parseAdditionalParams(e):{},t.debug("getAdditionalParams returns ",e),o.resolve(angular.extend(r,e))}),o.promise},this.getParams=function(){var e=i.params||{};return angular.extend(e,n.parseParams(o.location.search))}}]).service("settingsParser",[function(){function e(e){return 0===e.indexOf("up_")?e.slice(3):null}this.parseAdditionalParams=function(e){return e?JSON.parse(e):{}},this.encodeAdditionalParams=function(e){return JSON.stringify(e)},this.encodeParams=function(e){var a=[];for(var t in e)if(e.hasOwnProperty(t)){var n;n="object"==typeof e[t]?JSON.stringify(e[t]):e[t],a.push("up_"+encodeURIComponent(t)+"="+encodeURIComponent(n))}return a.join("&")},this.parseParams=function(a){"?"===a[0]&&(a=a.slice(1));for(var t={},n=a.split("&"),o=0;o<n.length;o++){var i=n[o].split("="),r=e(decodeURIComponent(i[0]));if(r)try{t[r]=JSON.parse(decodeURIComponent(i[1]))}catch(s){t[r]=decodeURIComponent(i[1])}}return t}}]).service("settingsCloser",["$q","$log","gadgetsApi",function(e,a,t){this.closeSettings=function(){var a=e.defer();return t.rpc.call("","rscmd_closeSettings",function(){a.resolve(!0)}),a.promise}}]).value("defaultSettings",{}),function(e){"use strict";e.module("risevision.widget.common.visualization",[]).factory("visualizationApi",["$q","$window",function(e,a){var t,n=e.defer(),o={get:function(){return t||(t=n.promise,a.google.visualization?n.resolve(a.google.visualization):a.google.setOnLoadCallback(function(){n.resolve(a.google.visualization)})),t}};return o}])}(angular),"undefined"==typeof TEMPLATES)var TEMPLATES={};if(TEMPLATES["alignment.html"]='<div class="btn-group alignment">\n  <button type="button" class="btn btn-default btn-sm btn-alignment dropdown-toggle"\n    data-toggle="dropdown" data-wysihtml5-command-value="left">\n    <i class="fa fa-align-left"></i>\n    <span class="caret"></span>\n  </button>\n  <div class="dropdown-menu" role="menu">\n    <div class="btn-group">\n      <button type="button" class="btn btn-default btn-sm" data-wysihtml5-command="alignment"\n        data-wysihtml5-command-value="left" tabindex="-1">\n        <i class="fa fa-align-left"></i>\n      </button>\n      <button type="button" class="btn btn-default btn-sm" data-wysihtml5-command="alignment"\n        data-wysihtml5-command-value="center" tabindex="-1">\n        <i class="fa fa-align-center"></i>\n      </button>\n      <button type="button" class="btn btn-default btn-sm" data-wysihtml5-command="alignment"\n        data-wysihtml5-command-value="right" tabindex="-1">\n        <i class="fa fa-align-right"></i>\n      </button>\n      <button type="button" class="btn btn-default btn-sm" data-wysihtml5-command="alignment"\n        data-wysihtml5-command-value="justify" tabindex="-1">\n        <i class="fa fa-align-justify"></i>\n      </button>\n    </div>\n  </div>\n</div>\n',function(e,a,t,n){"use strict";function o(a,t){function o(){d.append(n["alignment.html"]),l=d.find(".btn-alignment"),r(t.align),d.find(".dropdown-menu button").on("click",function(){var a=e(this).data("wysihtml5-command-value");r(a),d.trigger("alignmentChanged",a)})}function i(){return l.data("wysihtml5-command-value")}function r(e){var a=d.find(".btn-alignment .fa"),t=a.attr("class").match(/fa-align-[a-z]+/g),n="fa-align-"+e;t&&t.length>0&&a.removeClass(t[0]),a.addClass(n),l.data("wysihtml5-command-value",e)}function s(){r(c)}var d=e(a),l=null,c="left";return t=e.extend({},{align:c},t),o(),{getAlignment:i,setAlignment:r,reset:s}}var i="alignment";e.fn.alignment=function(a){return this.each(function(){e.data(this,"plugin_"+i)||e.data(this,"plugin_"+i,new o(this,a))})}}(jQuery,window,document,TEMPLATES),"undefined"==typeof WIDGET_SETTINGS_UI_CONFIG)var WIDGET_SETTINGS_UI_CONFIG={};if("undefined"==typeof TEMPLATES)var TEMPLATES={};if(TEMPLATES["font-style.html"]='<div class="btn-group">\n  <a class="btn btn-sm btn-default bold" data-wysihtml5-command="bold" title="CTRL+B" tabindex="-1">B</a>\n  <a class="btn btn-sm btn-default italic" data-wysihtml5-command="italic" title="CTRL+I" tabindex="-1">I</a>\n  <a class="btn btn-sm btn-default underline" data-wysihtml5-command="underline" title="CTRL+U" tabindex="-1">U</a>\n</div>\n',function(e,a,t,n){"use strict";function o(a,t){function o(){g.append(n["font-style.html"]),b=g.find(".bold"),v=g.find(".italic"),y=g.find(".underline"),h({bold:t.bold,italic:t.italic,underline:t.underline}),g.find(".btn").on("click",function(){var a=!e(this).hasClass("active");r(e(this),a),g.trigger("styleChanged",[e(this).attr("data-wysihtml5-command"),a])})}function i(e){return e.hasClass("active")}function r(e,a){a?e.addClass("active"):e.removeClass("active")}function s(){return i(b)}function d(e){r(b,e)}function l(){return i(v)}function c(e){r(v,e)}function m(){return i(y)}function u(e){r(y,e)}function f(){return{bold:s(),italic:l(),underline:m()}}function h(e){r(b,e.bold),r(v,e.italic),r(y,e.underline)}function p(){h(w)}var g=e(a),b=null,v=null,y=null,w={bold:!1,italic:!1,underline:!1};return t=e.extend({},w,t),o(),{isBold:s,isItalic:l,isUnderline:m,setBold:d,setItalic:c,setUnderline:u,getStyles:f,setStyles:h,reset:p}}var i="fontStyle";e.fn.fontStyle=function(a){return this.each(function(){e.data(this,"plugin_"+i)||e.data(this,"plugin_"+i,new o(this,a))})}}(jQuery,window,document,TEMPLATES),"undefined"==typeof WIDGET_SETTINGS_UI_CONFIG)var WIDGET_SETTINGS_UI_CONFIG={};if("undefined"==typeof TEMPLATES)var TEMPLATES={};if(TEMPLATES["url-field-template.html"]='<div class="form-group validate-url">\n  <div class="checkbox">\n    <label>\n      <input name="validate-url" type="checkbox" value="validate-url" checked="checked"> Validate URL\n    </label>\n  </div>\n</div>\n<div class="form-group">\n  <label>URL</label>\n  <input name="url" type="text" class="form-control" />\n</div>\n',function(e,a,t,n){"use strict";function o(a,t){function o(){return e.trim(c.val())}function i(e){return-1===e.indexOf("://")&&(e="http://"+e),f.test(e)}function r(e){"string"==typeof e&&c&&c.val(e)}function s(){if(!h)return!0;var e=i(o());return e||m.is(":visible")||m.show(),e}function d(){l.append(n["url-field-template.html"]),c=l.find("input[name='url']"),m=l.find("div.validate-url"),u=l.find("input[name='validate-url']"),m.hide(),r(t.url),u.on("click",function(){h=e(this).is(":checked")})}var l=e(a),c=null,m=null,u=null,f=/^(?:(?:https?|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/i,h=!0;return t=e.extend({},{url:"http://"},t),d(),{setUrl:r,getUrl:o,validateUrl:s}}var i="urlField";e.fn.urlField=function(a){return this.each(function(){e.data(this,"plugin_"+i)||e.data(this,"plugin_"+i,new o(this,a))})}}(jQuery,window,document,TEMPLATES),"undefined"==typeof WIDGET_SETTINGS_UI_CONFIG)var WIDGET_SETTINGS_UI_CONFIG={};!function(){"use strict";angular.module("risevision.widget.common.tooltip",["ui.bootstrap"]).directive("rvTooltip",[function(){return{restrict:"A",link:function(e,a){a.addClass("fa"),a.addClass("fa-question-circle"),a.addClass("fa-lg")}}}])}(),function(){"use strict";angular.module("risevision.widget.common.scroll-setting",["risevision.common.i18n","risevision.widget.common.tooltip"]).directive("scrollSetting",["$templateCache",function(e){return{restrict:"E",scope:{scroll:"="},template:e.get("_angular/scroll-setting/scroll-setting.html"),transclude:!1,link:function(e){e.defaultSetting={by:"none",speed:"medium",pause:5,pud:10},e.defaults=function(e){if(e)for(var a=1,t=arguments.length;t>a;a++){var n=arguments[a];for(var o in n)void 0===e[o]&&(e[o]=n[o])}return e},e.$watch("scroll",function(a){e.defaults(a,e.defaultSetting)})}}}])}(),function(e){try{e=angular.module("risevision.widget.common.scroll-setting")}catch(a){e=angular.module("risevision.widget.common.scroll-setting",[])}e.run(["$templateCache",function(e){"use strict";e.put("_angular/scroll-setting/scroll-setting.html",'<div class="row">\n  <div class="col-md-3">\n    <div class="form-group">\n      <label class="control-label">{{"scroll.heading" | translate}}</label>\n      <select id="scroll-by" ng-model="scroll.by" class="form-control">\n        <option value="none">{{\'scroll.by.none\' | translate}}</option>\n        <option value="continuous">{{\'scroll.by.continuous\' | translate}}</option>\n        <option value="page">{{\'scroll.by.page\' | translate}}</option>\n      </select>\n    </div>\n  </div>\n  <div class="col-md-3" ng-show="scroll.by != \'none\'">\n    <div class="form-group">\n      <label class="control-label">{{\'scroll.speed.label\' | translate}}</label>\n      <select id="scroll-speed" ng-model="scroll.speed" class="form-control">\n        <option value="slowest">{{\'scroll.speed.slowest\' | translate}}</option>\n        <option value="slow">{{\'scroll.speed.slow\' | translate}}</option>\n        <option value="medium">{{\'scroll.speed.medium\' | translate}}</option>\n        <option value="fast">{{\'scroll.speed.fast\' | translate}}</option>\n        <option value="fastest">{{\'scroll.speed.fastest\' | translate}}</option>\n      </select>\n    </div>\n  </div>\n  <div class="col-md-3" ng-show="scroll.by != \'none\'">\n    <div class="form-group">\n      <label class="control-label">{{\'scroll.pause.label\' | translate}}</label>\n      <div class="input-group">\n        <input id="scroll-pause" type="number" ng-model="scroll.pause" class="form-control" />\n        <span class="input-group-addon">{{\'common.units.seconds\' | translate}}</span>\n      </div>\n    </div>\n  </div>\n  <div class="col-md-3" ng-show="scroll.by != \'none\'">\n    <div class="form-group">\n      <label class="control-label">{{\'scroll.pud.label\' | translate}}</label>\n      <span popover="{{\'scroll.pud.tooltip\' | translate}}" popover-trigger="click"\n        popover-placement="right" rv-tooltip></span>\n      <div class="input-group">\n        <input id="scroll-pud" type="number" ng-model="scroll.pud" class="form-control" />\n        <span class="input-group-addon">{{\'common.units.seconds\' | translate}}</span>\n      </div>\n    </div>\n  </div>\n</div>\n')}])}(),function(){"use strict";angular.module("risevision.widget.common.widget-button-toolbar",["risevision.common.i18n"]).directive("widgetButtonToolbar",["$templateCache",function(e){return{restrict:"E",scope:{help:"@",contribute:"@",save:"&",cancel:"&",disableSave:"&"},template:e.get("_angular/widget-button-toolbar/widget-button-toolbar.html"),link:function(e,a,t){e.helpRef="",e.contributeRef="","undefined"!=typeof t.help&&""!==t.help&&(e.helpRef=t.help),"undefined"!=typeof t.contribute&&""!==t.contribute&&(e.contributeRef=t.contribute)}}}])}(),function(e){try{e=angular.module("risevision.widget.common.widget-button-toolbar")}catch(a){e=angular.module("risevision.widget.common.widget-button-toolbar",[])}e.run(["$templateCache",function(e){"use strict";e.put("_angular/widget-button-toolbar/widget-button-toolbar.html",'<div class="btn-toolbar sticky-buttons">\n  <button id="save" class="btn btn-primary btn-fixed-width" type="button" ng-click="save()" ng-disabled="disableSave()">\n    <span>{{"common.save" | translate}}</span>\n    <i class="fa fa-white fa-check fa-lg icon-right"></i>\n  </button>\n  <button id="cancel" class="btn btn-default btn-fixed-width" type="button" ng-click="cancel()">\n    <span>{{"common.cancel" | translate}}</span>\n    <i class="fa fa-white fa-times fa-lg icon-right"></i>\n  </button>\n  <a type="button" class="btn btn-rv-help btn-fixed-width" target="_blank" href={{helpRef}} ng-if="helpRef !== \'\'">\n    <span>{{"common.help" | translate}}</span>\n    <i class="fa fa-question-circle fa-lg icon-right"></i>\n  </a>\n  <a type="button" class="btn btn-rv-help btn-fixed-width" target="_blank" href={{contributeRef}} ng-if="contributeRef !== \'\'">\n    <span>{{"common.contribute" | translate}}</span>\n    <i class="fa fa-github fa-lg icon-right"></i>\n  </a>\n</div>\n')}])}();var wysihtml5={version:"0.4.0pre",commands:{},dom:{},quirks:{},toolbar:{},lang:{},selection:{},views:{},INVISIBLE_SPACE:"﻿",EMPTY_FUNCTION:function(){},ELEMENT_NODE:1,TEXT_NODE:3,BACKSPACE_KEY:8,ENTER_KEY:13,ESCAPE_KEY:27,SPACE_KEY:32,DELETE_KEY:46};window.rangy=function(){function e(e,a){var t=typeof e[a];return t==m||!(t!=c||!e[a])||"unknown"==t}function a(e,a){return!(typeof e[a]!=c||!e[a])}function t(e,a){return typeof e[a]!=u}function n(e){return function(a,t){for(var n=t.length;n--;)if(!e(a,t[n]))return!1;return!0}}function o(e){return e&&b(e,g)&&y(e,p)}function i(e){window.alert("Rangy not supported in your browser. Reason: "+e),w.initialized=!0,w.supported=!1}function r(e){var a="Rangy warning: "+e;w.config.alertOnWarn?window.alert(a):typeof window.console!=u&&typeof window.console.log!=u&&window.console.log(a)}function s(){if(!w.initialized){var t,n=!1,r=!1;e(document,"createRange")&&(t=document.createRange(),b(t,h)&&y(t,f)&&(n=!0),t.detach());var s=a(document,"body")?document.body:document.getElementsByTagName("body")[0];s&&e(s,"createTextRange")&&(t=s.createTextRange(),o(t)&&(r=!0)),n||r||i("Neither Range nor TextRange are implemented"),w.initialized=!0,w.features={implementsDomRange:n,implementsTextRange:r};for(var d=A.concat(S),l=0,c=d.length;c>l;++l)try{d[l](w)}catch(m){a(window,"console")&&e(window.console,"log")&&window.console.log("Init listener threw an exception. Continuing.",m)}}}function d(e){e=e||window,s();for(var a=0,t=k.length;t>a;++a)k[a](e)}function l(e){this.name=e,this.initialized=!1,this.supported=!1}var c="object",m="function",u="undefined",f=["startContainer","startOffset","endContainer","endOffset","collapsed","commonAncestorContainer","START_TO_START","START_TO_END","END_TO_START","END_TO_END"],h=["setStart","setStartBefore","setStartAfter","setEnd","setEndBefore","setEndAfter","collapse","selectNode","selectNodeContents","compareBoundaryPoints","deleteContents","extractContents","cloneContents","insertNode","surroundContents","cloneRange","toString","detach"],p=["boundingHeight","boundingLeft","boundingTop","boundingWidth","htmlText","text"],g=["collapse","compareEndPoints","duplicate","getBookmark","moveToBookmark","moveToElementText","parentElement","pasteHTML","select","setEndPoint","getBoundingClientRect"],b=n(e),v=n(a),y=n(t),w={version:"1.2.2",initialized:!1,supported:!0,util:{isHostMethod:e,isHostObject:a,isHostProperty:t,areHostMethods:b,areHostObjects:v,areHostProperties:y,isTextRange:o},features:{},modules:{},config:{alertOnWarn:!1,preferTextRange:!1}};w.fail=i,w.warn=r,{}.hasOwnProperty?w.util.extend=function(e,a){for(var t in a)a.hasOwnProperty(t)&&(e[t]=a[t])}:i("hasOwnProperty not supported");var S=[],A=[];w.init=s,w.addInitListener=function(e){w.initialized?e(w):S.push(e)};var k=[];w.addCreateMissingNativeApiListener=function(e){k.push(e)},w.createMissingNativeApi=d,l.prototype.fail=function(e){throw this.initialized=!0,this.supported=!1,new Error("Module '"+this.name+"' failed to load: "+e)},l.prototype.warn=function(e){w.warn("Module "+this.name+": "+e)},l.prototype.createError=function(e){return new Error("Error in Rangy "+this.name+" module: "+e)},w.createModule=function(e,a){var t=new l(e);w.modules[e]=t,A.push(function(e){a(e,t),t.initialized=!0,t.supported=!0
})},w.requireModules=function(e){for(var a,t,n=0,o=e.length;o>n;++n){if(t=e[n],a=w.modules[t],!(a&&a instanceof l))throw new Error("Module '"+t+"' not found");if(!a.supported)throw new Error("Module '"+t+"' not supported")}};var C=!1,T=function(){C||(C=!0,w.initialized||s())};return typeof window==u?(i("No window found"),void 0):typeof document==u?(i("No document found"),void 0):(e(document,"addEventListener")&&document.addEventListener("DOMContentLoaded",T,!1),e(window,"addEventListener")?window.addEventListener("load",T,!1):e(window,"attachEvent")?window.attachEvent("onload",T):i("Window does not have required addEventListener or attachEvent method"),w)}(),rangy.createModule("DomUtil",function(e,a){function t(e){var a;return typeof e.namespaceURI==T||null===(a=e.namespaceURI)||"http://www.w3.org/1999/xhtml"==a}function n(e){var a=e.parentNode;return 1==a.nodeType?a:null}function o(e){for(var a=0;e=e.previousSibling;)a++;return a}function i(e){var a;return l(e)?e.length:(a=e.childNodes)?a.length:0}function r(e,a){var t,n=[];for(t=e;t;t=t.parentNode)n.push(t);for(t=a;t;t=t.parentNode)if(E(n,t))return t;return null}function s(e,a,t){for(var n=t?a:a.parentNode;n;){if(n===e)return!0;n=n.parentNode}return!1}function d(e,a,t){for(var n,o=t?e:e.parentNode;o;){if(n=o.parentNode,n===a)return o;o=n}return null}function l(e){var a=e.nodeType;return 3==a||4==a||8==a}function c(e,a){var t=a.nextSibling,n=a.parentNode;return t?n.insertBefore(e,t):n.appendChild(e),e}function m(e,a){var t=e.cloneNode(!1);return t.deleteData(0,a),e.deleteData(a,e.length-a),c(t,e),t}function u(e){if(9==e.nodeType)return e;if(typeof e.ownerDocument!=T)return e.ownerDocument;if(typeof e.document!=T)return e.document;if(e.parentNode)return u(e.parentNode);throw new Error("getDocument: no document found for node")}function f(e){var a=u(e);if(typeof a.defaultView!=T)return a.defaultView;if(typeof a.parentWindow!=T)return a.parentWindow;throw new Error("Cannot get a window object for node")}function h(e){if(typeof e.contentDocument!=T)return e.contentDocument;if(typeof e.contentWindow!=T)return e.contentWindow.document;throw new Error("getIframeWindow: No Document object found for iframe element")}function p(e){if(typeof e.contentWindow!=T)return e.contentWindow;if(typeof e.contentDocument!=T)return e.contentDocument.defaultView;throw new Error("getIframeWindow: No Window object found for iframe element")}function g(e){return M.isHostObject(e,"body")?e.body:e.getElementsByTagName("body")[0]}function b(e){for(var a;a=e.parentNode;)e=a;return e}function v(e,a,t,n){var i,s,l,c,m;if(e==t)return a===n?0:n>a?-1:1;if(i=d(t,e,!0))return a<=o(i)?-1:1;if(i=d(e,t,!0))return o(i)<n?-1:1;if(s=r(e,t),l=e===s?s:d(e,s,!0),c=t===s?s:d(t,s,!0),l===c)throw new Error("comparePoints got to case 4 and childA and childB are the same!");for(m=s.firstChild;m;){if(m===l)return-1;if(m===c)return 1;m=m.nextSibling}throw new Error("Should not be here!")}function y(e){for(var a,t=u(e).createDocumentFragment();a=e.firstChild;)t.appendChild(a);return t}function w(e){if(!e)return"[No node]";if(l(e))return'"'+e.data+'"';if(1==e.nodeType){var a=e.id?' id="'+e.id+'"':"";return"<"+e.nodeName+a+">["+e.childNodes.length+"]"}return e.nodeName}function S(e){this.root=e,this._next=e}function A(e){return new S(e)}function k(e,a){this.node=e,this.offset=a}function C(e){this.code=this[e],this.codeName=e,this.message="DOMException: "+this.codeName}var T="undefined",M=e.util;M.areHostMethods(document,["createDocumentFragment","createElement","createTextNode"])||a.fail("document missing a Node creation method"),M.isHostMethod(document,"getElementsByTagName")||a.fail("document missing getElementsByTagName method");var N=document.createElement("div");M.areHostMethods(N,["insertBefore","appendChild","cloneNode"]||!M.areHostObjects(N,["previousSibling","nextSibling","childNodes","parentNode"]))||a.fail("Incomplete Element implementation"),M.isHostProperty(N,"innerHTML")||a.fail("Element is missing innerHTML property");var x=document.createTextNode("test");M.areHostMethods(x,["splitText","deleteData","insertData","appendData","cloneNode"]||!M.areHostObjects(N,["previousSibling","nextSibling","childNodes","parentNode"])||!M.areHostProperties(x,["data"]))||a.fail("Incomplete Text Node implementation");var E=function(e,a){for(var t=e.length;t--;)if(e[t]===a)return!0;return!1};S.prototype={_current:null,hasNext:function(){return!!this._next},next:function(){var e,a,t=this._current=this._next;if(this._current)if(e=t.firstChild)this._next=e;else{for(a=null;t!==this.root&&!(a=t.nextSibling);)t=t.parentNode;this._next=a}return this._current},detach:function(){this._current=this._next=this.root=null}},k.prototype={equals:function(e){return this.node===e.node&this.offset==e.offset},inspect:function(){return"[DomPosition("+w(this.node)+":"+this.offset+")]"}},C.prototype={INDEX_SIZE_ERR:1,HIERARCHY_REQUEST_ERR:3,WRONG_DOCUMENT_ERR:4,NO_MODIFICATION_ALLOWED_ERR:7,NOT_FOUND_ERR:8,NOT_SUPPORTED_ERR:9,INVALID_STATE_ERR:11},C.prototype.toString=function(){return this.message},e.dom={arrayContains:E,isHtmlNamespace:t,parentElement:n,getNodeIndex:o,getNodeLength:i,getCommonAncestor:r,isAncestorOf:s,getClosestAncestorIn:d,isCharacterDataNode:l,insertAfter:c,splitDataNode:m,getDocument:u,getWindow:f,getIframeWindow:p,getIframeDocument:h,getBody:g,getRootContainer:b,comparePoints:v,inspectNode:w,fragmentFromNodeChildren:y,createIterator:A,DomPosition:k},e.DOMException=C}),rangy.createModule("DomRange",function(e){function a(e,a){return 3!=e.nodeType&&(I.isAncestorOf(e,a.startContainer,!0)||I.isAncestorOf(e,a.endContainer,!0))}function t(e){return I.getDocument(e.startContainer)}function n(e,a,t){var n=e._listeners[a];if(n)for(var o=0,i=n.length;i>o;++o)n[o].call(e,{target:e,args:t})}function o(e){return new $(e.parentNode,I.getNodeIndex(e))}function i(e){return new $(e.parentNode,I.getNodeIndex(e)+1)}function r(e,a,t){var n=11==e.nodeType?e.firstChild:e;return I.isCharacterDataNode(a)?t==a.length?I.insertAfter(e,a):a.parentNode.insertBefore(e,0==t?a:I.splitDataNode(a,t)):t>=a.childNodes.length?a.appendChild(e):a.insertBefore(e,a.childNodes[t]),n}function s(e){for(var a,n,o,i=t(e.range).createDocumentFragment();n=e.next();){if(a=e.isPartiallySelectedSubtree(),n=n.cloneNode(!a),a&&(o=e.getSubtreeIterator(),n.appendChild(s(o)),o.detach(!0)),10==n.nodeType)throw new H("HIERARCHY_REQUEST_ERR");i.appendChild(n)}return i}function d(e,a,t){var n,o;t=t||{stop:!1};for(var i,r;i=e.next();)if(e.isPartiallySelectedSubtree()){if(a(i)===!1)return t.stop=!0,void 0;if(r=e.getSubtreeIterator(),d(r,a,t),r.detach(!0),t.stop)return}else for(n=I.createIterator(i);o=n.next();)if(a(o)===!1)return t.stop=!0,void 0}function l(e){for(var a;e.next();)e.isPartiallySelectedSubtree()?(a=e.getSubtreeIterator(),l(a),a.detach(!0)):e.remove()}function c(e){for(var a,n,o=t(e.range).createDocumentFragment();a=e.next();){if(e.isPartiallySelectedSubtree()?(a=a.cloneNode(!1),n=e.getSubtreeIterator(),a.appendChild(c(n)),n.detach(!0)):e.remove(),10==a.nodeType)throw new H("HIERARCHY_REQUEST_ERR");o.appendChild(a)}return o}function m(e,a,t){var n,o=!(!a||!a.length),i=!!t;o&&(n=new RegExp("^("+a.join("|")+")$"));var r=[];return d(new f(e,!1),function(e){o&&!n.test(e.nodeType)||i&&!t(e)||r.push(e)}),r}function u(e){var a="undefined"==typeof e.getName?"Range":e.getName();return"["+a+"("+I.inspectNode(e.startContainer)+":"+e.startOffset+", "+I.inspectNode(e.endContainer)+":"+e.endOffset+")]"}function f(e,a){if(this.range=e,this.clonePartiallySelectedTextNodes=a,!e.collapsed){this.sc=e.startContainer,this.so=e.startOffset,this.ec=e.endContainer,this.eo=e.endOffset;var t=e.commonAncestorContainer;this.sc===this.ec&&I.isCharacterDataNode(this.sc)?(this.isSingleCharacterDataNode=!0,this._first=this._last=this._next=this.sc):(this._first=this._next=this.sc!==t||I.isCharacterDataNode(this.sc)?I.getClosestAncestorIn(this.sc,t,!0):this.sc.childNodes[this.so],this._last=this.ec!==t||I.isCharacterDataNode(this.ec)?I.getClosestAncestorIn(this.ec,t,!0):this.ec.childNodes[this.eo-1])}}function h(e){this.code=this[e],this.codeName=e,this.message="RangeException: "+this.codeName}function p(e,a,t){this.nodes=m(e,a,t),this._next=this.nodes[0],this._position=0}function g(e){return function(a,t){for(var n,o=t?a:a.parentNode;o;){if(n=o.nodeType,I.arrayContains(e,n))return o;o=o.parentNode}return null}}function b(e,a){if(W(e,a))throw new h("INVALID_NODE_TYPE_ERR")}function v(e){if(!e.startContainer)throw new H("INVALID_STATE_ERR")}function y(e,a){if(!I.arrayContains(a,e.nodeType))throw new h("INVALID_NODE_TYPE_ERR")}function w(e,a){if(0>a||a>(I.isCharacterDataNode(e)?e.length:e.childNodes.length))throw new H("INDEX_SIZE_ERR")}function S(e,a){if(z(e,!0)!==z(a,!0))throw new H("WRONG_DOCUMENT_ERR")}function A(e){if(j(e,!0))throw new H("NO_MODIFICATION_ALLOWED_ERR")}function k(e,a){if(!e)throw new H(a)}function C(e){return!I.arrayContains(G,e.nodeType)&&!z(e,!0)}function T(e,a){return a<=(I.isCharacterDataNode(e)?e.length:e.childNodes.length)}function M(e){if(v(e),C(e.startContainer)||C(e.endContainer)||!T(e.startContainer,e.startOffset)||!T(e.endContainer,e.endOffset))throw new Error("Range error: Range is no longer valid after DOM mutation ("+e.inspect()+")")}function N(){}function x(e){e.START_TO_START=X,e.START_TO_END=ea,e.END_TO_END=aa,e.END_TO_START=ta,e.NODE_BEFORE=na,e.NODE_AFTER=oa,e.NODE_BEFORE_AND_AFTER=ia,e.NODE_INSIDE=ra}function E(e){x(e),x(e.prototype)}function B(e,a){return function(){M(this);var t,n,o=this.startContainer,r=this.startOffset,s=this.commonAncestorContainer,l=new f(this,!0);o!==s&&(t=I.getClosestAncestorIn(o,s,!0),n=i(t),o=n.node,r=n.offset),d(l,A),l.reset();var c=e(l);return l.detach(),a(this,o,r,o,r),c}}function R(t,n,r){function s(e,a){return function(t){v(this),y(t,K),y(V(t),G);var n=(e?o:i)(t);(a?d:m)(this,n.node,n.offset)}}function d(e,a,t){var o=e.endContainer,i=e.endOffset;(a!==e.startContainer||t!==e.startOffset)&&((V(a)!=V(o)||1==I.comparePoints(a,t,o,i))&&(o=a,i=t),n(e,a,t,o,i))}function m(e,a,t){var o=e.startContainer,i=e.startOffset;(a!==e.endContainer||t!==e.endOffset)&&((V(a)!=V(o)||-1==I.comparePoints(a,t,o,i))&&(o=a,i=t),n(e,o,i,a,t))}function u(e,a,t){(a!==e.startContainer||t!==e.startOffset||a!==e.endContainer||t!==e.endOffset)&&n(e,a,t,a,t)}t.prototype=new N,e.util.extend(t.prototype,{setStart:function(e,a){v(this),b(e,!0),w(e,a),d(this,e,a)},setEnd:function(e,a){v(this),b(e,!0),w(e,a),m(this,e,a)},setStartBefore:s(!0,!0),setStartAfter:s(!1,!0),setEndBefore:s(!0,!1),setEndAfter:s(!1,!1),collapse:function(e){M(this),e?n(this,this.startContainer,this.startOffset,this.startContainer,this.startOffset):n(this,this.endContainer,this.endOffset,this.endContainer,this.endOffset)},selectNodeContents:function(e){v(this),b(e,!0),n(this,e,0,e,I.getNodeLength(e))},selectNode:function(e){v(this),b(e,!1),y(e,K);var a=o(e),t=i(e);n(this,a.node,a.offset,t.node,t.offset)},extractContents:B(c,n),deleteContents:B(l,n),canSurroundContents:function(){M(this),A(this.startContainer),A(this.endContainer);var e=new f(this,!0),t=e._first&&a(e._first,this)||e._last&&a(e._last,this);return e.detach(),!t},detach:function(){r(this)},splitBoundaries:function(){M(this);var e=this.startContainer,a=this.startOffset,t=this.endContainer,o=this.endOffset,i=e===t;I.isCharacterDataNode(t)&&o>0&&o<t.length&&I.splitDataNode(t,o),I.isCharacterDataNode(e)&&a>0&&a<e.length&&(e=I.splitDataNode(e,a),i?(o-=a,t=e):t==e.parentNode&&o>=I.getNodeIndex(e)&&o++,a=0),n(this,e,a,t,o)},normalizeBoundaries:function(){M(this);var e=this.startContainer,a=this.startOffset,t=this.endContainer,o=this.endOffset,i=function(e){var a=e.nextSibling;a&&a.nodeType==e.nodeType&&(t=e,o=e.length,e.appendData(a.data),a.parentNode.removeChild(a))},r=function(n){var i=n.previousSibling;if(i&&i.nodeType==n.nodeType){e=n;var r=n.length;if(a=i.length,n.insertData(0,i.data),i.parentNode.removeChild(i),e==t)o+=a,t=e;else if(t==n.parentNode){var s=I.getNodeIndex(n);o==s?(t=n,o=r):o>s&&o--}}},s=!0;if(I.isCharacterDataNode(t))t.length==o&&i(t);else{if(o>0){var d=t.childNodes[o-1];d&&I.isCharacterDataNode(d)&&i(d)}s=!this.collapsed}if(s){if(I.isCharacterDataNode(e))0==a&&r(e);else if(a<e.childNodes.length){var l=e.childNodes[a];l&&I.isCharacterDataNode(l)&&r(l)}}else e=t,a=o;n(this,e,a,t,o)},collapseToPoint:function(e,a){v(this),b(e,!0),w(e,a),u(this,e,a)}}),E(t)}function L(e){e.collapsed=e.startContainer===e.endContainer&&e.startOffset===e.endOffset,e.commonAncestorContainer=e.collapsed?e.startContainer:I.getCommonAncestor(e.startContainer,e.endContainer)}function P(e,a,t,o,i){var r=e.startContainer!==a||e.startOffset!==t,s=e.endContainer!==o||e.endOffset!==i;e.startContainer=a,e.startOffset=t,e.endContainer=o,e.endOffset=i,L(e),n(e,"boundarychange",{startMoved:r,endMoved:s})}function D(e){v(e),e.startContainer=e.startOffset=e.endContainer=e.endOffset=null,e.collapsed=e.commonAncestorContainer=null,n(e,"detach",null),e._listeners=null}function O(e){this.startContainer=e,this.startOffset=0,this.endContainer=e,this.endOffset=0,this._listeners={boundarychange:[],detach:[]},L(this)}e.requireModules(["DomUtil"]);var I=e.dom,$=I.DomPosition,H=e.DOMException;f.prototype={_current:null,_next:null,_first:null,_last:null,isSingleCharacterDataNode:!1,reset:function(){this._current=null,this._next=this._first},hasNext:function(){return!!this._next},next:function(){var e=this._current=this._next;return e&&(this._next=e!==this._last?e.nextSibling:null,I.isCharacterDataNode(e)&&this.clonePartiallySelectedTextNodes&&(e===this.ec&&(e=e.cloneNode(!0)).deleteData(this.eo,e.length-this.eo),this._current===this.sc&&(e=e.cloneNode(!0)).deleteData(0,this.so))),e},remove:function(){var e,a,t=this._current;!I.isCharacterDataNode(t)||t!==this.sc&&t!==this.ec?t.parentNode&&t.parentNode.removeChild(t):(e=t===this.sc?this.so:0,a=t===this.ec?this.eo:t.length,e!=a&&t.deleteData(e,a-e))},isPartiallySelectedSubtree:function(){var e=this._current;return a(e,this.range)},getSubtreeIterator:function(){var e;if(this.isSingleCharacterDataNode)e=this.range.cloneRange(),e.collapse();else{e=new O(t(this.range));var a=this._current,n=a,o=0,i=a,r=I.getNodeLength(a);I.isAncestorOf(a,this.sc,!0)&&(n=this.sc,o=this.so),I.isAncestorOf(a,this.ec,!0)&&(i=this.ec,r=this.eo),P(e,n,o,i,r)}return new f(e,this.clonePartiallySelectedTextNodes)},detach:function(e){e&&this.range.detach(),this.range=this._current=this._next=this._first=this._last=this.sc=this.so=this.ec=this.eo=null}},h.prototype={BAD_BOUNDARYPOINTS_ERR:1,INVALID_NODE_TYPE_ERR:2},h.prototype.toString=function(){return this.message},p.prototype={_current:null,hasNext:function(){return!!this._next},next:function(){return this._current=this._next,this._next=this.nodes[++this._position],this._current},detach:function(){this._current=this._next=this.nodes=null}};var K=[1,3,4,5,7,8,10],G=[2,9,11],F=[5,6,10,12],U=[1,3,4,5,7,8,10,11],_=[1,3,4,5,7,8],V=I.getRootContainer,z=g([9,11]),j=g(F),W=g([6,10,12]),Y=document.createElement("style"),J=!1;try{Y.innerHTML="<b>x</b>",J=3==Y.firstChild.nodeType}catch(Z){}e.features.htmlParsingConforms=J;var q=J?function(e){var a=this.startContainer,t=I.getDocument(a);if(!a)throw new H("INVALID_STATE_ERR");var n=null;return 1==a.nodeType?n=a:I.isCharacterDataNode(a)&&(n=I.parentElement(a)),n=null===n||"HTML"==n.nodeName&&I.isHtmlNamespace(I.getDocument(n).documentElement)&&I.isHtmlNamespace(n)?t.createElement("body"):n.cloneNode(!1),n.innerHTML=e,I.fragmentFromNodeChildren(n)}:function(e){v(this);var a=t(this),n=a.createElement("body");return n.innerHTML=e,I.fragmentFromNodeChildren(n)},Q=["startContainer","startOffset","endContainer","endOffset","collapsed","commonAncestorContainer"],X=0,ea=1,aa=2,ta=3,na=0,oa=1,ia=2,ra=3;N.prototype={attachListener:function(e,a){this._listeners[e].push(a)},compareBoundaryPoints:function(e,a){M(this),S(this.startContainer,a.startContainer);var t,n,o,i,r=e==ta||e==X?"start":"end",s=e==ea||e==X?"start":"end";return t=this[r+"Container"],n=this[r+"Offset"],o=a[s+"Container"],i=a[s+"Offset"],I.comparePoints(t,n,o,i)},insertNode:function(e){if(M(this),y(e,U),A(this.startContainer),I.isAncestorOf(e,this.startContainer,!0))throw new H("HIERARCHY_REQUEST_ERR");var a=r(e,this.startContainer,this.startOffset);this.setStartBefore(a)},cloneContents:function(){M(this);var e,a;if(this.collapsed)return t(this).createDocumentFragment();if(this.startContainer===this.endContainer&&I.isCharacterDataNode(this.startContainer))return e=this.startContainer.cloneNode(!0),e.data=e.data.slice(this.startOffset,this.endOffset),a=t(this).createDocumentFragment(),a.appendChild(e),a;var n=new f(this,!0);return e=s(n),n.detach(),e},canSurroundContents:function(){M(this),A(this.startContainer),A(this.endContainer);var e=new f(this,!0),t=e._first&&a(e._first,this)||e._last&&a(e._last,this);return e.detach(),!t},surroundContents:function(e){if(y(e,_),!this.canSurroundContents())throw new h("BAD_BOUNDARYPOINTS_ERR");var a=this.extractContents();if(e.hasChildNodes())for(;e.lastChild;)e.removeChild(e.lastChild);r(e,this.startContainer,this.startOffset),e.appendChild(a),this.selectNode(e)},cloneRange:function(){M(this);for(var e,a=new O(t(this)),n=Q.length;n--;)e=Q[n],a[e]=this[e];return a},toString:function(){M(this);var e=this.startContainer;if(e===this.endContainer&&I.isCharacterDataNode(e))return 3==e.nodeType||4==e.nodeType?e.data.slice(this.startOffset,this.endOffset):"";var a=[],t=new f(this,!0);return d(t,function(e){(3==e.nodeType||4==e.nodeType)&&a.push(e.data)}),t.detach(),a.join("")},compareNode:function(e){M(this);var a=e.parentNode,t=I.getNodeIndex(e);if(!a)throw new H("NOT_FOUND_ERR");var n=this.comparePoint(a,t),o=this.comparePoint(a,t+1);return 0>n?o>0?ia:na:o>0?oa:ra},comparePoint:function(e,a){return M(this),k(e,"HIERARCHY_REQUEST_ERR"),S(e,this.startContainer),I.comparePoints(e,a,this.startContainer,this.startOffset)<0?-1:I.comparePoints(e,a,this.endContainer,this.endOffset)>0?1:0},createContextualFragment:q,toHtml:function(){M(this);var e=t(this).createElement("div");return e.appendChild(this.cloneContents()),e.innerHTML},intersectsNode:function(e,a){if(M(this),k(e,"NOT_FOUND_ERR"),I.getDocument(e)!==t(this))return!1;var n=e.parentNode,o=I.getNodeIndex(e);k(n,"NOT_FOUND_ERR");var i=I.comparePoints(n,o,this.endContainer,this.endOffset),r=I.comparePoints(n,o+1,this.startContainer,this.startOffset);return a?0>=i&&r>=0:0>i&&r>0},isPointInRange:function(e,a){return M(this),k(e,"HIERARCHY_REQUEST_ERR"),S(e,this.startContainer),I.comparePoints(e,a,this.startContainer,this.startOffset)>=0&&I.comparePoints(e,a,this.endContainer,this.endOffset)<=0},intersectsRange:function(e,a){if(M(this),t(e)!=t(this))throw new H("WRONG_DOCUMENT_ERR");var n=I.comparePoints(this.startContainer,this.startOffset,e.endContainer,e.endOffset),o=I.comparePoints(this.endContainer,this.endOffset,e.startContainer,e.startOffset);return a?0>=n&&o>=0:0>n&&o>0},intersection:function(e){if(this.intersectsRange(e)){var a=I.comparePoints(this.startContainer,this.startOffset,e.startContainer,e.startOffset),t=I.comparePoints(this.endContainer,this.endOffset,e.endContainer,e.endOffset),n=this.cloneRange();return-1==a&&n.setStart(e.startContainer,e.startOffset),1==t&&n.setEnd(e.endContainer,e.endOffset),n}return null},union:function(e){if(this.intersectsRange(e,!0)){var a=this.cloneRange();return-1==I.comparePoints(e.startContainer,e.startOffset,this.startContainer,this.startOffset)&&a.setStart(e.startContainer,e.startOffset),1==I.comparePoints(e.endContainer,e.endOffset,this.endContainer,this.endOffset)&&a.setEnd(e.endContainer,e.endOffset),a}throw new h("Ranges do not intersect")},containsNode:function(e,a){return a?this.intersectsNode(e,!1):this.compareNode(e)==ra},containsNodeContents:function(e){return this.comparePoint(e,0)>=0&&this.comparePoint(e,I.getNodeLength(e))<=0},containsRange:function(e){return this.intersection(e).equals(e)},containsNodeText:function(e){var a=this.cloneRange();a.selectNode(e);var t=a.getNodes([3]);if(t.length>0){a.setStart(t[0],0);var n=t.pop();a.setEnd(n,n.length);var o=this.containsRange(a);return a.detach(),o}return this.containsNodeContents(e)},createNodeIterator:function(e,a){return M(this),new p(this,e,a)},getNodes:function(e,a){return M(this),m(this,e,a)},getDocument:function(){return t(this)},collapseBefore:function(e){v(this),this.setEndBefore(e),this.collapse(!1)},collapseAfter:function(e){v(this),this.setStartAfter(e),this.collapse(!0)},getName:function(){return"DomRange"},equals:function(e){return O.rangesEqual(this,e)},inspect:function(){return u(this)}},R(O,P,D),e.rangePrototype=N.prototype,O.rangeProperties=Q,O.RangeIterator=f,O.copyComparisonConstants=E,O.createPrototypeRange=R,O.inspect=u,O.getRangeDocument=t,O.rangesEqual=function(e,a){return e.startContainer===a.startContainer&&e.startOffset===a.startOffset&&e.endContainer===a.endContainer&&e.endOffset===a.endOffset},e.DomRange=O,e.RangeException=h}),rangy.createModule("WrappedRange",function(e){function a(e){var a=e.parentElement(),t=e.duplicate();t.collapse(!0);var n=t.parentElement();t=e.duplicate(),t.collapse(!1);var o=t.parentElement(),i=n==o?n:r.getCommonAncestor(n,o);return i==a?i:r.getCommonAncestor(a,i)}function t(e){return 0==e.compareEndPoints("StartToEnd",e)}function n(e,a,t,n){var o=e.duplicate();o.collapse(t);var i=o.parentElement();if(r.isAncestorOf(a,i,!0)||(i=a),!i.canHaveHTML)return new s(i.parentNode,r.getNodeIndex(i));var d,l,c,m,u,f=r.getDocument(i).createElement("span"),h=t?"StartToStart":"StartToEnd";do i.insertBefore(f,f.previousSibling),o.moveToElementText(f);while((d=o.compareEndPoints(h,e))>0&&f.previousSibling);if(u=f.nextSibling,-1==d&&u&&r.isCharacterDataNode(u)){o.setEndPoint(t?"EndToStart":"EndToEnd",e);var p;if(/[\r\n]/.test(u.data)){var g=o.duplicate(),b=g.text.replace(/\r\n/g,"\r").length;for(p=g.moveStart("character",b);-1==(d=g.compareEndPoints("StartToEnd",g));)p++,g.moveStart("character",1)}else p=o.text.length;m=new s(u,p)}else l=(n||!t)&&f.previousSibling,c=(n||t)&&f.nextSibling,m=c&&r.isCharacterDataNode(c)?new s(c,0):l&&r.isCharacterDataNode(l)?new s(l,l.length):new s(i,r.getNodeIndex(f));return f.parentNode.removeChild(f),m}function o(e,a){var t,n,o,i,s=e.offset,d=r.getDocument(e.node),l=d.body.createTextRange(),c=r.isCharacterDataNode(e.node);return c?(t=e.node,n=t.parentNode):(i=e.node.childNodes,t=s<i.length?i[s]:null,n=e.node),o=d.createElement("span"),o.innerHTML="&#feff;",t?n.insertBefore(o,t):n.appendChild(o),l.moveToElementText(o),l.collapse(!a),n.removeChild(o),c&&l[a?"moveStart":"moveEnd"]("character",s),l}e.requireModules(["DomUtil","DomRange"]);var i,r=e.dom,s=r.DomPosition,d=e.DomRange;if(!e.features.implementsDomRange||e.features.implementsTextRange&&e.config.preferTextRange){if(e.features.implementsTextRange){i=function(e){this.textRange=e,this.refresh()},i.prototype=new d(document),i.prototype.refresh=function(){var e,o,i=a(this.textRange);t(this.textRange)?o=e=n(this.textRange,i,!0,!0):(e=n(this.textRange,i,!0,!1),o=n(this.textRange,i,!1,!1)),this.setStart(e.node,e.offset),this.setEnd(o.node,o.offset)},d.copyComparisonConstants(i);var l=function(){return this}();"undefined"==typeof l.Range&&(l.Range=i),e.createNativeRange=function(e){return e=e||document,e.body.createTextRange()}}}else!function(){function a(e){for(var a,t=c.length;t--;)a=c[t],e[a]=e.nativeRange[a]}function t(e,a,t,n,o){var i=e.startContainer!==a||e.startOffset!=t,r=e.endContainer!==n||e.endOffset!=o;(i||r)&&(e.setEnd(n,o),e.setStart(a,t))}function n(e){e.nativeRange.detach(),e.detached=!0;for(var a,t=c.length;t--;)a=c[t],e[a]=null}var o,s,l,c=d.rangeProperties;i=function(e){if(!e)throw new Error("Range must be specified");this.nativeRange=e,a(this)},d.createPrototypeRange(i,t,n),o=i.prototype,o.selectNode=function(e){this.nativeRange.selectNode(e),a(this)},o.deleteContents=function(){this.nativeRange.deleteContents(),a(this)},o.extractContents=function(){var e=this.nativeRange.extractContents();return a(this),e},o.cloneContents=function(){return this.nativeRange.cloneContents()},o.surroundContents=function(e){this.nativeRange.surroundContents(e),a(this)},o.collapse=function(e){this.nativeRange.collapse(e),a(this)},o.cloneRange=function(){return new i(this.nativeRange.cloneRange())},o.refresh=function(){a(this)},o.toString=function(){return this.nativeRange.toString()};var m=document.createTextNode("test");r.getBody(document).appendChild(m);var u=document.createRange();u.setStart(m,0),u.setEnd(m,0);try{u.setStart(m,1),s=!0,o.setStart=function(e,t){this.nativeRange.setStart(e,t),a(this)},o.setEnd=function(e,t){this.nativeRange.setEnd(e,t),a(this)},l=function(e){return function(t){this.nativeRange[e](t),a(this)}}}catch(f){s=!1,o.setStart=function(e,t){try{this.nativeRange.setStart(e,t)}catch(n){this.nativeRange.setEnd(e,t),this.nativeRange.setStart(e,t)}a(this)},o.setEnd=function(e,t){try{this.nativeRange.setEnd(e,t)}catch(n){this.nativeRange.setStart(e,t),this.nativeRange.setEnd(e,t)}a(this)},l=function(e,t){return function(n){try{this.nativeRange[e](n)}catch(o){this.nativeRange[t](n),this.nativeRange[e](n)}a(this)}}}o.setStartBefore=l("setStartBefore","setEndBefore"),o.setStartAfter=l("setStartAfter","setEndAfter"),o.setEndBefore=l("setEndBefore","setStartBefore"),o.setEndAfter=l("setEndAfter","setStartAfter"),u.selectNodeContents(m),o.selectNodeContents=u.startContainer==m&&u.endContainer==m&&0==u.startOffset&&u.endOffset==m.length?function(e){this.nativeRange.selectNodeContents(e),a(this)}:function(e){this.setStart(e,0),this.setEnd(e,d.getEndOffset(e))},u.selectNodeContents(m),u.setEnd(m,3);var h=document.createRange();h.selectNodeContents(m),h.setEnd(m,4),h.setStart(m,2),o.compareBoundaryPoints=-1==u.compareBoundaryPoints(u.START_TO_END,h)&1==u.compareBoundaryPoints(u.END_TO_START,h)?function(e,a){return a=a.nativeRange||a,e==a.START_TO_END?e=a.END_TO_START:e==a.END_TO_START&&(e=a.START_TO_END),this.nativeRange.compareBoundaryPoints(e,a)}:function(e,a){return this.nativeRange.compareBoundaryPoints(e,a.nativeRange||a)},e.util.isHostMethod(u,"createContextualFragment")&&(o.createContextualFragment=function(e){return this.nativeRange.createContextualFragment(e)}),r.getBody(document).removeChild(m),u.detach(),h.detach()}(),e.createNativeRange=function(e){return e=e||document,e.createRange()};e.features.implementsTextRange&&(i.rangeToTextRange=function(e){if(e.collapsed){var a=o(new s(e.startContainer,e.startOffset),!0);return a}var t=o(new s(e.startContainer,e.startOffset),!0),n=o(new s(e.endContainer,e.endOffset),!1),i=r.getDocument(e.startContainer).body.createTextRange();return i.setEndPoint("StartToStart",t),i.setEndPoint("EndToEnd",n),i}),i.prototype.getName=function(){return"WrappedRange"},e.WrappedRange=i,e.createRange=function(a){return a=a||document,new i(e.createNativeRange(a))},e.createRangyRange=function(e){return e=e||document,new d(e)},e.createIframeRange=function(a){return e.createRange(r.getIframeDocument(a))},e.createIframeRangyRange=function(a){return e.createRangyRange(r.getIframeDocument(a))},e.addCreateMissingNativeApiListener(function(a){var t=a.document;"undefined"==typeof t.createRange&&(t.createRange=function(){return e.createRange(this)}),t=a=null})}),rangy.createModule("WrappedSelection",function(e,a){function t(e){return(e||window).getSelection()}function n(e){return(e||window).document.selection}function o(e,a,t){var n=t?"end":"start",o=t?"start":"end";e.anchorNode=a[n+"Container"],e.anchorOffset=a[n+"Offset"],e.focusNode=a[o+"Container"],e.focusOffset=a[o+"Offset"]}function i(e){var a=e.nativeSelection;e.anchorNode=a.anchorNode,e.anchorOffset=a.anchorOffset,e.focusNode=a.focusNode,e.focusOffset=a.focusOffset}function r(e){e.anchorNode=e.focusNode=null,e.anchorOffset=e.focusOffset=0,e.rangeCount=0,e.isCollapsed=!0,e._ranges.length=0}function s(a){var t;return a instanceof C?(t=a._selectionNativeRange,t||(t=e.createNativeRange(A.getDocument(a.startContainer)),t.setEnd(a.endContainer,a.endOffset),t.setStart(a.startContainer,a.startOffset),a._selectionNativeRange=t,a.attachListener("detach",function(){this._selectionNativeRange=null}))):a instanceof T?t=a.nativeRange:e.features.implementsDomRange&&a instanceof A.getWindow(a.startContainer).Range&&(t=a),t}function d(e){if(!e.length||1!=e[0].nodeType)return!1;for(var a=1,t=e.length;t>a;++a)if(!A.isAncestorOf(e[0],e[a]))return!1;return!0}function l(e){var a=e.getNodes();if(!d(a))throw new Error("getSingleElementFromRange: range "+e.inspect()+" did not consist of a single element");return a[0]}function c(e){return!!e&&"undefined"!=typeof e.text}function m(e,a){var t=new T(a);e._ranges=[t],o(e,t,!1),e.rangeCount=1,e.isCollapsed=t.collapsed}function u(a){if(a._ranges.length=0,"None"==a.docSelection.type)r(a);else{var t=a.docSelection.createRange();if(c(t))m(a,t);else{a.rangeCount=t.length;for(var n,i=A.getDocument(t.item(0)),s=0;s<a.rangeCount;++s)n=e.createRange(i),n.selectNode(t.item(s)),a._ranges.push(n);a.isCollapsed=1==a.rangeCount&&a._ranges[0].collapsed,o(a,a._ranges[a.rangeCount-1],!1)}}}function f(e,a){for(var t=e.docSelection.createRange(),n=l(a),o=A.getDocument(t.item(0)),i=A.getBody(o).createControlRange(),r=0,s=t.length;s>r;++r)i.add(t.item(r));try{i.add(n)}catch(d){throw new Error("addRange(): Element within the specified Range could not be added to control selection (does it have layout?)")}i.select(),u(e)}function h(e,a,t){this.nativeSelection=e,this.docSelection=a,this._ranges=[],this.win=t,this.refresh()}function p(e,a){for(var t,n=A.getDocument(a[0].startContainer),o=A.getBody(n).createControlRange(),i=0;rangeCount>i;++i){t=l(a[i]);try{o.add(t)}catch(r){throw new Error("setRanges(): Element within the one of the specified Ranges could not be added to control selection (does it have layout?)")}}o.select(),u(e)}function g(e,a){if(e.anchorNode&&A.getDocument(e.anchorNode)!==A.getDocument(a))throw new M("WRONG_DOCUMENT_ERR")}function b(e){var a=[],t=new N(e.anchorNode,e.anchorOffset),n=new N(e.focusNode,e.focusOffset),o="function"==typeof e.getName?e.getName():"Selection";if("undefined"!=typeof e.rangeCount)for(var i=0,r=e.rangeCount;r>i;++i)a[i]=C.inspect(e.getRangeAt(i));return"["+o+"(Ranges: "+a.join(", ")+")(anchor: "+t.inspect()+", focus: "+n.inspect()+"]"}e.requireModules(["DomUtil","DomRange","WrappedRange"]),e.config.checkSelectionRanges=!0;var v,y,w="boolean",S="_rangySelection",A=e.dom,k=e.util,C=e.DomRange,T=e.WrappedRange,M=e.DOMException,N=A.DomPosition,x="Control",E=e.util.isHostMethod(window,"getSelection"),B=e.util.isHostObject(document,"selection"),R=B&&(!E||e.config.preferTextRange);R?(v=n,e.isSelectionValid=function(e){var a=(e||window).document,t=a.selection;return"None"!=t.type||A.getDocument(t.createRange().parentElement())==a}):E?(v=t,e.isSelectionValid=function(){return!0}):a.fail("Neither document.selection or window.getSelection() detected."),e.getNativeSelection=v;var L=v(),P=e.createNativeRange(document),D=A.getBody(document),O=k.areHostObjects(L,["anchorNode","focusNode"]&&k.areHostProperties(L,["anchorOffset","focusOffset"]));e.features.selectionHasAnchorAndFocus=O;var I=k.isHostMethod(L,"extend");e.features.selectionHasExtend=I;var $="number"==typeof L.rangeCount;e.features.selectionHasRangeCount=$;var H=!1,K=!0;k.areHostMethods(L,["addRange","getRangeAt","removeAllRanges"])&&"number"==typeof L.rangeCount&&e.features.implementsDomRange&&!function(){var e=document.createElement("iframe");D.appendChild(e);var a=A.getIframeDocument(e);a.open(),a.write("<html><head></head><body>12</body></html>"),a.close();var t=A.getIframeWindow(e).getSelection(),n=a.documentElement,o=n.lastChild,i=o.firstChild,r=a.createRange();r.setStart(i,1),r.collapse(!0),t.addRange(r),K=1==t.rangeCount,t.removeAllRanges();var s=r.cloneRange();r.setStart(i,0),s.setEnd(i,2),t.addRange(r),t.addRange(s),H=2==t.rangeCount,r.detach(),s.detach(),D.removeChild(e)}(),e.features.selectionSupportsMultipleRanges=H,e.features.collapsedNonEditableSelectionsSupported=K;var G,F=!1;D&&k.isHostMethod(D,"createControlRange")&&(G=D.createControlRange(),k.areHostProperties(G,["item","add"])&&(F=!0)),e.features.implementsControlRange=F,y=O?function(e){return e.anchorNode===e.focusNode&&e.anchorOffset===e.focusOffset
}:function(e){return e.rangeCount?e.getRangeAt(e.rangeCount-1).collapsed:!1};var U;k.isHostMethod(L,"getRangeAt")?U=function(e,a){try{return e.getRangeAt(a)}catch(t){return null}}:O&&(U=function(a){var t=A.getDocument(a.anchorNode),n=e.createRange(t);return n.setStart(a.anchorNode,a.anchorOffset),n.setEnd(a.focusNode,a.focusOffset),n.collapsed!==this.isCollapsed&&(n.setStart(a.focusNode,a.focusOffset),n.setEnd(a.anchorNode,a.anchorOffset)),n}),e.getSelection=function(e){e=e||window;var a=e[S],t=v(e),o=B?n(e):null;return a?(a.nativeSelection=t,a.docSelection=o,a.refresh(e)):(a=new h(t,o,e),e[S]=a),a},e.getIframeSelection=function(a){return e.getSelection(A.getIframeWindow(a))};var _=h.prototype;if(!R&&O&&k.areHostMethods(L,["removeAllRanges","addRange"])){_.removeAllRanges=function(){this.nativeSelection.removeAllRanges(),r(this)};var V=function(a,t){var n=C.getRangeDocument(t),o=e.createRange(n);o.collapseToPoint(t.endContainer,t.endOffset),a.nativeSelection.addRange(s(o)),a.nativeSelection.extend(t.startContainer,t.startOffset),a.refresh()};_.addRange=$?function(a,t){if(F&&B&&this.docSelection.type==x)f(this,a);else if(t&&I)V(this,a);else{var n;if(H?n=this.rangeCount:(this.removeAllRanges(),n=0),this.nativeSelection.addRange(s(a)),this.rangeCount=this.nativeSelection.rangeCount,this.rangeCount==n+1){if(e.config.checkSelectionRanges){var i=U(this.nativeSelection,this.rangeCount-1);i&&!C.rangesEqual(i,a)&&(a=new T(i))}this._ranges[this.rangeCount-1]=a,o(this,a,W(this.nativeSelection)),this.isCollapsed=y(this)}else this.refresh()}}:function(e,a){a&&I?V(this,e):(this.nativeSelection.addRange(s(e)),this.refresh())},_.setRanges=function(e){if(F&&e.length>1)p(this,e);else{this.removeAllRanges();for(var a=0,t=e.length;t>a;++a)this.addRange(e[a])}}}else{if(!(k.isHostMethod(L,"empty")&&k.isHostMethod(P,"select")&&F&&R))return a.fail("No means of selecting a Range or TextRange was found"),!1;_.removeAllRanges=function(){try{if(this.docSelection.empty(),"None"!=this.docSelection.type){var e;if(this.anchorNode)e=A.getDocument(this.anchorNode);else if(this.docSelection.type==x){var a=this.docSelection.createRange();a.length&&(e=A.getDocument(a.item(0)).body.createTextRange())}if(e){var t=e.body.createTextRange();t.select(),this.docSelection.empty()}}}catch(n){}r(this)},_.addRange=function(e){this.docSelection.type==x?f(this,e):(T.rangeToTextRange(e).select(),this._ranges[0]=e,this.rangeCount=1,this.isCollapsed=this._ranges[0].collapsed,o(this,e,!1))},_.setRanges=function(e){this.removeAllRanges();var a=e.length;a>1?p(this,e):a&&this.addRange(e[0])}}_.getRangeAt=function(e){if(0>e||e>=this.rangeCount)throw new M("INDEX_SIZE_ERR");return this._ranges[e]};var z;if(R)z=function(a){var t;e.isSelectionValid(a.win)?t=a.docSelection.createRange():(t=A.getBody(a.win.document).createTextRange(),t.collapse(!0)),a.docSelection.type==x?u(a):c(t)?m(a,t):r(a)};else if(k.isHostMethod(L,"getRangeAt")&&"number"==typeof L.rangeCount)z=function(a){if(F&&B&&a.docSelection.type==x)u(a);else if(a._ranges.length=a.rangeCount=a.nativeSelection.rangeCount,a.rangeCount){for(var t=0,n=a.rangeCount;n>t;++t)a._ranges[t]=new e.WrappedRange(a.nativeSelection.getRangeAt(t));o(a,a._ranges[a.rangeCount-1],W(a.nativeSelection)),a.isCollapsed=y(a)}else r(a)};else{if(!O||typeof L.isCollapsed!=w||typeof P.collapsed!=w||!e.features.implementsDomRange)return a.fail("No means of obtaining a Range or TextRange from the user's selection was found"),!1;z=function(e){var a,t=e.nativeSelection;t.anchorNode?(a=U(t,0),e._ranges=[a],e.rangeCount=1,i(e),e.isCollapsed=y(e)):r(e)}}_.refresh=function(e){var a=e?this._ranges.slice(0):null;if(z(this),e){var t=a.length;if(t!=this._ranges.length)return!1;for(;t--;)if(!C.rangesEqual(a[t],this._ranges[t]))return!1;return!0}};var j=function(e,a){var t=e.getAllRanges(),n=!1;e.removeAllRanges();for(var o=0,i=t.length;i>o;++o)n||a!==t[o]?e.addRange(t[o]):n=!0;e.rangeCount||r(e)};_.removeRange=F?function(e){if(this.docSelection.type==x){for(var a,t=this.docSelection.createRange(),n=l(e),o=A.getDocument(t.item(0)),i=A.getBody(o).createControlRange(),r=!1,s=0,d=t.length;d>s;++s)a=t.item(s),a!==n||r?i.add(t.item(s)):r=!0;i.select(),u(this)}else j(this,e)}:function(e){j(this,e)};var W;!R&&O&&e.features.implementsDomRange?(W=function(e){var a=!1;return e.anchorNode&&(a=1==A.comparePoints(e.anchorNode,e.anchorOffset,e.focusNode,e.focusOffset)),a},_.isBackwards=function(){return W(this)}):W=_.isBackwards=function(){return!1},_.toString=function(){for(var e=[],a=0,t=this.rangeCount;t>a;++a)e[a]=""+this._ranges[a];return e.join("")},_.collapse=function(a,t){g(this,a);var n=e.createRange(A.getDocument(a));n.collapseToPoint(a,t),this.removeAllRanges(),this.addRange(n),this.isCollapsed=!0},_.collapseToStart=function(){if(!this.rangeCount)throw new M("INVALID_STATE_ERR");var e=this._ranges[0];this.collapse(e.startContainer,e.startOffset)},_.collapseToEnd=function(){if(!this.rangeCount)throw new M("INVALID_STATE_ERR");var e=this._ranges[this.rangeCount-1];this.collapse(e.endContainer,e.endOffset)},_.selectAllChildren=function(a){g(this,a);var t=e.createRange(A.getDocument(a));t.selectNodeContents(a),this.removeAllRanges(),this.addRange(t)},_.deleteFromDocument=function(){if(F&&B&&this.docSelection.type==x){for(var e,a=this.docSelection.createRange();a.length;)e=a.item(0),a.remove(e),e.parentNode.removeChild(e);this.refresh()}else if(this.rangeCount){var t=this.getAllRanges();this.removeAllRanges();for(var n=0,o=t.length;o>n;++n)t[n].deleteContents();this.addRange(t[o-1])}},_.getAllRanges=function(){return this._ranges.slice(0)},_.setSingleRange=function(e){this.setRanges([e])},_.containsNode=function(e,a){for(var t=0,n=this._ranges.length;n>t;++t)if(this._ranges[t].containsNode(e,a))return!0;return!1},_.toHtml=function(){var e="";if(this.rangeCount){for(var a=C.getRangeDocument(this._ranges[0]).createElement("div"),t=0,n=this._ranges.length;n>t;++t)a.appendChild(this._ranges[t].cloneContents());e=a.innerHTML}return e},_.getName=function(){return"WrappedSelection"},_.inspect=function(){return b(this)},_.detach=function(){this.win[S]=null,this.win=this.anchorNode=this.focusNode=null},h.inspect=b,e.Selection=h,e.selectionPrototype=_,e.addCreateMissingNativeApiListener(function(a){"undefined"==typeof a.getSelection&&(a.getSelection=function(){return e.getSelection(this)}),a=null})});var Base=function(){};Base.extend=function(e,a){var t=Base.prototype.extend;Base._prototyping=!0;var n=new this;t.call(n,e),n.base=function(){},delete Base._prototyping;var o=n.constructor,i=n.constructor=function(){if(!Base._prototyping)if(this._constructing||this.constructor==i)this._constructing=!0,o.apply(this,arguments),delete this._constructing;else if(null!=arguments[0])return(arguments[0].extend||t).call(arguments[0],n)};return i.ancestor=this,i.extend=this.extend,i.forEach=this.forEach,i.implement=this.implement,i.prototype=n,i.toString=this.toString,i.valueOf=function(e){return"object"==e?i:o.valueOf()},t.call(i,a),"function"==typeof i.init&&i.init(),i},Base.prototype={extend:function(e,a){if(arguments.length>1){var t=this[e];if(t&&"function"==typeof a&&(!t.valueOf||t.valueOf()!=a.valueOf())&&/\bbase\b/.test(a)){var n=a.valueOf();a=function(){var e=this.base||Base.prototype.base;this.base=t;var a=n.apply(this,arguments);return this.base=e,a},a.valueOf=function(e){return"object"==e?a:n},a.toString=Base.toString}this[e]=a}else if(e){var o=Base.prototype.extend;Base._prototyping||"function"==typeof this||(o=this.extend||o);for(var i={toSource:null},r=["constructor","toString","valueOf"],s=Base._prototyping?0:1;d=r[s++];)e[d]!=i[d]&&o.call(this,d,e[d]);for(var d in e)i[d]||o.call(this,d,e[d])}return this}},Base=Base.extend({constructor:function(){this.extend(arguments[0])}},{ancestor:Object,version:"1.1",forEach:function(e,a,t){for(var n in e)void 0===this.prototype[n]&&a.call(t,e[n],n,e)},implement:function(){for(var e=0;e<arguments.length;e++)"function"==typeof arguments[e]?arguments[e](this.prototype):this.prototype.extend(arguments[e]);return this},toString:function(){return String(this.valueOf())}}),wysihtml5.browser=function(){function e(e){return+(/ipad|iphone|ipod/.test(e)&&e.match(/ os (\d+).+? like mac os x/)||[,0])[1]}function a(e){return+(e.match(/android (\d+)/)||[,0])[1]}var t=navigator.userAgent,n=document.createElement("div"),o=-1!==t.indexOf("MSIE")&&-1===t.indexOf("Opera"),i=-1!==t.indexOf("Gecko")&&-1===t.indexOf("KHTML"),r=-1!==t.indexOf("AppleWebKit/"),s=-1!==t.indexOf("Chrome/"),d=-1!==t.indexOf("Opera/");return{USER_AGENT:t,supported:function(){var t=this.USER_AGENT.toLowerCase(),o="contentEditable"in n,i=document.execCommand&&document.queryCommandSupported&&document.queryCommandState,r=document.querySelector&&document.querySelectorAll,s=this.isIos()&&e(t)<5||this.isAndroid()&&a(t)<4||-1!==t.indexOf("opera mobi")||-1!==t.indexOf("hpwos/");return o&&i&&r&&!s},isTouchDevice:function(){return this.supportsEvent("touchmove")},isIos:function(){return/ipad|iphone|ipod/i.test(this.USER_AGENT)},isAndroid:function(){return-1!==this.USER_AGENT.indexOf("Android")},supportsSandboxedIframes:function(){return o},throwsMixedContentWarningWhenIframeSrcIsEmpty:function(){return!("querySelector"in document)},displaysCaretInEmptyContentEditableCorrectly:function(){return o},hasCurrentStyleProperty:function(){return"currentStyle"in n},hasHistoryIssue:function(){return i&&"Mac"===navigator.platform.substr(0,3)},insertsLineBreaksOnReturn:function(){return i},supportsPlaceholderAttributeOn:function(e){return"placeholder"in e},supportsEvent:function(e){return"on"+e in n||function(){return n.setAttribute("on"+e,"return;"),"function"==typeof n["on"+e]}()},supportsEventsInIframeCorrectly:function(){return!d},supportsHTML5Tags:function(e){var a=e.createElement("div"),t="<article>foo</article>";return a.innerHTML=t,a.innerHTML.toLowerCase()===t},supportsCommand:function(){var e={formatBlock:o,insertUnorderedList:o||r,insertOrderedList:o||r},a={insertHTML:i};return function(t,n){var o=e[n];if(!o){try{return t.queryCommandSupported(n)}catch(i){}try{return t.queryCommandEnabled(n)}catch(r){return!!a[n]}}return!1}}(),doesAutoLinkingInContentEditable:function(){return o},canDisableAutoLinking:function(){return this.supportsCommand(document,"AutoUrlDetect")},clearsContentEditableCorrectly:function(){return i||d||r},supportsGetAttributeCorrectly:function(){var e=document.createElement("td");return"1"!=e.getAttribute("rowspan")},canSelectImagesInContentEditable:function(){return i||o||d},autoScrollsToCaret:function(){return!r},autoClosesUnclosedTags:function(){var e,a,t=n.cloneNode(!1);return t.innerHTML="<p><div></div>",a=t.innerHTML.toLowerCase(),e="<p></p><div></div>"===a||"<p><div></div></p>"===a,this.autoClosesUnclosedTags=function(){return e},e},supportsNativeGetElementsByClassName:function(){return-1!==String(document.getElementsByClassName).indexOf("[native code]")},supportsSelectionModify:function(){return"getSelection"in window&&"modify"in window.getSelection()},needsSpaceAfterLineBreak:function(){return d},supportsSpeechApiOn:function(e){var a=t.match(/Chrome\/(\d+)/)||[,0];return a[1]>=11&&("onwebkitspeechchange"in e||"speech"in e)},crashesWhenDefineProperty:function(e){return o&&("XMLHttpRequest"===e||"XDomainRequest"===e)},doesAsyncFocus:function(){return o},hasProblemsSettingCaretAfterImg:function(){return o},hasUndoInContextMenu:function(){return i||s||d},hasInsertNodeIssue:function(){return d},hasIframeFocusIssue:function(){return o},createsNestedInvalidMarkupAfterPaste:function(){return r}}}(),wysihtml5.lang.array=function(e){return{contains:function(a){if(e.indexOf)return-1!==e.indexOf(a);for(var t=0,n=e.length;n>t;t++)if(e[t]===a)return!0;return!1},without:function(a){a=wysihtml5.lang.array(a);for(var t=[],n=0,o=e.length;o>n;n++)a.contains(e[n])||t.push(e[n]);return t},get:function(){for(var a=0,t=e.length,n=[];t>a;a++)n.push(e[a]);return n}}},wysihtml5.lang.Dispatcher=Base.extend({on:function(e,a){return this.events=this.events||{},this.events[e]=this.events[e]||[],this.events[e].push(a),this},off:function(e,a){this.events=this.events||{};var t,n,o=0;if(e){for(t=this.events[e]||[],n=[];o<t.length;o++)t[o]!==a&&a&&n.push(t[o]);this.events[e]=n}else this.events={};return this},fire:function(e,a){this.events=this.events||{};for(var t=this.events[e]||[],n=0;n<t.length;n++)t[n].call(this,a);return this},observe:function(){return this.on.apply(this,arguments)},stopObserving:function(){return this.off.apply(this,arguments)}}),wysihtml5.lang.object=function(e){return{merge:function(a){for(var t in a)e[t]=a[t];return this},get:function(){return e},clone:function(){var a,t={};for(a in e)t[a]=e[a];return t},isArray:function(){return"[object Array]"===Object.prototype.toString.call(e)}}},function(){var e=/^\s+/,a=/\s+$/,t=/[&<>"]/g,n={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;"};wysihtml5.lang.string=function(o){return o=String(o),{trim:function(){return o.replace(e,"").replace(a,"")},interpolate:function(e){for(var a in e)o=this.replace("#{"+a+"}").by(e[a]);return o},replace:function(e){return{by:function(a){return o.split(e).join(a)}}},escapeHTML:function(){return o.replace(t,function(e){return n[e]})}}}}(),function(e){function a(e){return i(e)?e:(e===e.ownerDocument.documentElement&&(e=e.ownerDocument.body),r(e))}function t(e){return e.replace(d,function(e,a){var t=(a.match(l)||[])[1]||"",n=m[t];a=a.replace(l,""),a.split(n).length>a.split(t).length&&(a+=t,t="");var o=a,i=a;return a.length>c&&(i=i.substr(0,c)+"..."),"www."===o.substr(0,4)&&(o="http://"+o),'<a href="'+o+'">'+i+"</a>"+t})}function n(e){var a=e._wysihtml5_tempElement;return a||(a=e._wysihtml5_tempElement=e.createElement("div")),a}function o(a){var o=a.parentNode,i=e.lang.string(a.data).escapeHTML(),r=n(o.ownerDocument);for(r.innerHTML="<span></span>"+t(i),r.removeChild(r.firstChild);r.firstChild;)o.insertBefore(r.firstChild,a);o.removeChild(a)}function i(e){for(var a;e.parentNode;){if(e=e.parentNode,a=e.nodeName,s.contains(a))return!0;if("body"===a)return!1}return!1}function r(a){if(!s.contains(a.nodeName)){if(a.nodeType===e.TEXT_NODE&&a.data.match(d))return o(a),void 0;for(var t=e.lang.array(a.childNodes).get(),n=t.length,i=0;n>i;i++)r(t[i]);return a}}var s=e.lang.array(["CODE","PRE","A","SCRIPT","HEAD","TITLE","STYLE"]),d=/((https?:\/\/|www\.)[^\s<]{3,})/gi,l=/([^\w\/\-](,?))$/i,c=100,m={")":"(","]":"[","}":"{"};e.dom.autoLink=a,e.dom.autoLink.URL_REG_EXP=d}(wysihtml5),function(e){var a=e.dom;a.addClass=function(e,t){var n=e.classList;return n?n.add(t):(a.hasClass(e,t)||(e.className+=" "+t),void 0)},a.removeClass=function(e,a){var t=e.classList;return t?t.remove(a):(e.className=e.className.replace(new RegExp("(^|\\s+)"+a+"(\\s+|$)")," "),void 0)},a.hasClass=function(e,a){var t=e.classList;if(t)return t.contains(a);var n=e.className;return n.length>0&&(n==a||new RegExp("(^|\\s)"+a+"(\\s|$)").test(n))}}(wysihtml5),wysihtml5.dom.contains=function(){var e=document.documentElement;return e.contains?function(e,a){return a.nodeType!==wysihtml5.ELEMENT_NODE&&(a=a.parentNode),e!==a&&e.contains(a)}:e.compareDocumentPosition?function(e,a){return!!(16&e.compareDocumentPosition(a))}:void 0}(),wysihtml5.dom.convertToList=function(){function e(e,a){var t=e.createElement("li");return a.appendChild(t),t}function a(e,a){return e.createElement(a)}function t(t,n){if("UL"===t.nodeName||"OL"===t.nodeName||"MENU"===t.nodeName)return t;var o,i,r,s,d,l,c,m,u,f=t.ownerDocument,h=a(f,n),p=t.querySelectorAll("br"),g=p.length;for(u=0;g>u;u++)for(s=p[u];(d=s.parentNode)&&d!==t&&d.lastChild===s;){if("block"===wysihtml5.dom.getStyle("display").from(d)){d.removeChild(s);break}wysihtml5.dom.insert(s).after(s.parentNode)}for(o=wysihtml5.lang.array(t.childNodes).get(),i=o.length,u=0;i>u;u++)m=m||e(f,h),r=o[u],l="block"===wysihtml5.dom.getStyle("display").from(r),c="BR"===r.nodeName,l?(m=m.firstChild?e(f,h):m,m.appendChild(r),m=null):c?m=m.firstChild?null:m:m.appendChild(r);return 0===o.length&&e(f,h),t.parentNode.replaceChild(h,t),h}return t}(),wysihtml5.dom.copyAttributes=function(e){return{from:function(a){return{to:function(t){for(var n,o=0,i=e.length;i>o;o++)n=e[o],"undefined"!=typeof a[n]&&""!==a[n]&&(t[n]=a[n]);return{andTo:arguments.callee}}}}}},function(e){var a=["-webkit-box-sizing","-moz-box-sizing","-ms-box-sizing","box-sizing"],t=function(a){return n(a)?parseInt(e.getStyle("width").from(a),10)<a.offsetWidth:!1},n=function(t){for(var n=0,o=a.length;o>n;n++)if("border-box"===e.getStyle(a[n]).from(t))return a[n]};e.copyStyles=function(n){return{from:function(o){t(o)&&(n=wysihtml5.lang.array(n).without(a));for(var i,r="",s=n.length,d=0;s>d;d++)i=n[d],r+=i+":"+e.getStyle(i).from(o)+";";return{to:function(a){return e.setStyles(r).on(a),{andTo:arguments.callee}}}}}}}(wysihtml5.dom),function(e){e.dom.delegate=function(a,t,n,o){return e.dom.observe(a,n,function(n){for(var i=n.target,r=e.lang.array(a.querySelectorAll(t));i&&i!==a;){if(r.contains(i)){o.call(i,n);break}i=i.parentNode}})}}(wysihtml5),wysihtml5.dom.getAsDom=function(){var e=function(e,a){var t=a.createElement("div");t.style.display="none",a.body.appendChild(t);try{t.innerHTML=e}catch(n){}return a.body.removeChild(t),t},a=function(e){if(!e._wysihtml5_supportsHTML5Tags){for(var a=0,n=t.length;n>a;a++)e.createElement(t[a]);e._wysihtml5_supportsHTML5Tags=!0}},t=["abbr","article","aside","audio","bdi","canvas","command","datalist","details","figcaption","figure","footer","header","hgroup","keygen","mark","meter","nav","output","progress","rp","rt","ruby","svg","section","source","summary","time","track","video","wbr"];return function(t,n){n=n||document;var o;return"object"==typeof t&&t.nodeType?(o=n.createElement("div"),o.appendChild(t)):wysihtml5.browser.supportsHTML5Tags(n)?(o=n.createElement("div"),o.innerHTML=t):(a(n),o=e(t,n)),o}}(),wysihtml5.dom.getParentElement=function(){function e(e,a){return a&&a.length?"string"==typeof a?e===a:wysihtml5.lang.array(a).contains(e):!0}function a(e){return e.nodeType===wysihtml5.ELEMENT_NODE}function t(e,a,t){var n=(e.className||"").match(t)||[];return a?n[n.length-1]===a:!!n.length}function n(a,t,n){for(;n--&&a&&"BODY"!==a.nodeName;){if(e(a.nodeName,t))return a;a=a.parentNode}return null}function o(n,o,i,r,s){for(;s--&&n&&"BODY"!==n.nodeName;){if(a(n)&&e(n.nodeName,o)&&t(n,i,r))return n;n=n.parentNode}return null}return function(e,a,t){return t=t||50,a.className||a.classRegExp?o(e,a.nodeName,a.className,a.classRegExp,t):n(e,a.nodeName,t)}}(),wysihtml5.dom.getStyle=function(){function e(e){return e.replace(t,function(e){return e.charAt(1).toUpperCase()})}var a={"float":"styleFloat"in document.createElement("div").style?"styleFloat":"cssFloat"},t=/\-[a-z]/g;return function(t){return{from:function(n){if(n.nodeType===wysihtml5.ELEMENT_NODE){var o=n.ownerDocument,i=a[t]||e(t),r=n.style,s=n.currentStyle,d=r[i];if(d)return d;if(s)try{return s[i]}catch(l){}var c,m,u=o.defaultView||o.parentWindow,f=("height"===t||"width"===t)&&"TEXTAREA"===n.nodeName;return u.getComputedStyle?(f&&(c=r.overflow,r.overflow="hidden"),m=u.getComputedStyle(n,null).getPropertyValue(t),f&&(r.overflow=c||""),m):void 0}}}}}(),wysihtml5.dom.hasElementWithTagName=function(){function e(e){return e._wysihtml5_identifier||(e._wysihtml5_identifier=t++)}var a={},t=1;return function(t,n){var o=e(t)+":"+n,i=a[o];return i||(i=a[o]=t.getElementsByTagName(n)),i.length>0}}(),function(e){function a(e){return e._wysihtml5_identifier||(e._wysihtml5_identifier=n++)}var t={},n=1;e.dom.hasElementWithClassName=function(n,o){if(!e.browser.supportsNativeGetElementsByClassName())return!!n.querySelector("."+o);var i=a(n)+":"+o,r=t[i];return r||(r=t[i]=n.getElementsByClassName(o)),r.length>0}}(wysihtml5),wysihtml5.dom.insert=function(e){return{after:function(a){a.parentNode.insertBefore(e,a.nextSibling)},before:function(a){a.parentNode.insertBefore(e,a)},into:function(a){a.appendChild(e)}}},wysihtml5.dom.insertCSS=function(e){return e=e.join("\n"),{into:function(a){var t=a.createElement("style");t.type="text/css",t.styleSheet?t.styleSheet.cssText=e:t.appendChild(a.createTextNode(e));var n=a.querySelector("head link");if(n)return n.parentNode.insertBefore(t,n),void 0;var o=a.querySelector("head");o&&o.appendChild(t)}}},wysihtml5.dom.observe=function(e,a,t){a="string"==typeof a?[a]:a;for(var n,o,i=0,r=a.length;r>i;i++)o=a[i],e.addEventListener?e.addEventListener(o,t,!1):(n=function(a){"target"in a||(a.target=a.srcElement),a.preventDefault=a.preventDefault||function(){this.returnValue=!1},a.stopPropagation=a.stopPropagation||function(){this.cancelBubble=!0},t.call(e,a)},e.attachEvent("on"+o,n));return{stop:function(){for(var o,i=0,r=a.length;r>i;i++)o=a[i],e.removeEventListener?e.removeEventListener(o,t,!1):e.detachEvent("on"+o,n)}}},wysihtml5.dom.parse=function(){function e(e,t,n,o){wysihtml5.lang.object(m).merge(c).merge(t).get(),n=n||e.ownerDocument||document;var i,r,s,d=n.createDocumentFragment(),l="string"==typeof e;for(i=l?wysihtml5.dom.getAsDom(e,n):e;i.firstChild;)s=i.firstChild,r=a(s,o),i.removeChild(s),r&&d.appendChild(r);return i.innerHTML="",i.appendChild(d),l?wysihtml5.quirks.getCorrectInnerHTML(i):i}function a(e,t){var n,o,i,r=e.nodeType,l=e.childNodes,c=l.length,m=s[r],u=0;if(o=m&&m(e),!o)return null;for(u=0;c>u;u++)i=a(l[u],t),i&&o.appendChild(i);if(t&&o.nodeName.toLowerCase()===d&&(!o.childNodes.length||!o.attributes.length)){for(n=o.ownerDocument.createDocumentFragment();o.firstChild;)n.appendChild(o.firstChild);return n}return o}function t(e){var a,t,o=m.tags,i=e.nodeName.toLowerCase(),r=e.scopeName;if(e._wysihtml5)return null;if(e._wysihtml5=1,"wysihtml5-temp"===e.className)return null;if(r&&"HTML"!=r&&(i=r+":"+i),"outerHTML"in e&&(wysihtml5.browser.autoClosesUnclosedTags()||"P"!==e.nodeName||"</p>"===e.outerHTML.slice(-4).toLowerCase()||(i="div")),i in o){if(a=o[i],!a||a.remove)return null;a="string"==typeof a?{rename_tag:a}:a}else{if(!e.firstChild)return null;a={rename_tag:d}}return t=e.ownerDocument.createElement(a.rename_tag||i),n(e,t,a),e=null,t}function n(e,a,t){var n,i,r,s,d,c,u,f={},g=t.set_class,b=t.add_class,v=t.set_attributes,y=t.check_attributes,w=m.classes,S=0,A=[],k=[],C=[],T=[];if(v&&(f=wysihtml5.lang.object(v).clone()),y)for(d in y)u=h[y[d]],u&&(c=u(o(e,d)),"string"==typeof c&&(f[d]=c));if(g&&A.push(g),b)for(d in b)u=p[b[d]],u&&(s=u(o(e,d)),"string"==typeof s&&A.push(s));for(w["_wysihtml5-temp-placeholder"]=1,T=e.getAttribute("class"),T&&(A=A.concat(T.split(l))),n=A.length;n>S;S++)r=A[S],k.push(r);for(i=k.length;i--;)r=k[i],wysihtml5.lang.array(C).contains(r)||C.unshift(r);C.length&&(f["class"]=C.join(" "));for(d in f)try{a.setAttribute(d,f[d])}catch(M){}f.src&&("undefined"!=typeof f.width&&a.setAttribute("width",f.width),"undefined"!=typeof f.height&&a.setAttribute("height",f.height))}function o(e,a){a=a.toLowerCase();var t=e.nodeName;if("IMG"==t&&"src"==a&&i(e)===!0)return e.src;if(u&&"outerHTML"in e){var n=e.outerHTML.toLowerCase(),o=-1!=n.indexOf(" "+a+"=");return o?e.getAttribute(a):null}return e.getAttribute(a)}function i(e){try{return e.complete&&!e.mozMatchesSelector(":-moz-broken")}catch(a){if(e.complete&&"complete"===e.readyState)return!0}}function r(e){var a=e.nextSibling;if(!a||a.nodeType!==wysihtml5.TEXT_NODE){var t=e.data.replace(f,"");return e.ownerDocument.createTextNode(t)}a.data=e.data+a.data}var s={1:t,3:r},d="span",l=/\s+/,c={tags:{},classes:{}},m={},u=!wysihtml5.browser.supportsGetAttributeCorrectly(),f=/\uFEFF/g,h={url:function(){var e=/^https?:\/\//i;return function(a){return a&&a.match(e)?a.replace(e,function(e){return e.toLowerCase()}):null}}(),src:function(){var e=/^(\/|https?:\/\/)/i;return function(a){return a&&a.match(e)?a.replace(e,function(e){return e.toLowerCase()}):null}}(),href:function(){var e=/^(\/|https?:\/\/|mailto:)/i;return function(a){return a&&a.match(e)?a.replace(e,function(e){return e.toLowerCase()}):null}}(),alt:function(){var e=/[^ a-z0-9_\-]/gi;return function(a){return a?a.replace(e,""):""}}(),numbers:function(){var e=/\D/g;return function(a){return a=(a||"").replace(e,""),a||null}}()},p={align_img:function(){var e={left:"wysiwyg-float-left",right:"wysiwyg-float-right"};return function(a){return e[String(a).toLowerCase()]}}(),align_text:function(){var e={left:"wysiwyg-text-align-left",right:"wysiwyg-text-align-right",center:"wysiwyg-text-align-center",justify:"wysiwyg-text-align-justify"};return function(a){return e[String(a).toLowerCase()]}}(),clear_br:function(){var e={left:"wysiwyg-clear-left",right:"wysiwyg-clear-right",both:"wysiwyg-clear-both",all:"wysiwyg-clear-both"};return function(a){return e[String(a).toLowerCase()]}}(),size_font:function(){var e={1:"wysiwyg-font-size-xx-small",2:"wysiwyg-font-size-small",3:"wysiwyg-font-size-medium",4:"wysiwyg-font-size-large",5:"wysiwyg-font-size-x-large",6:"wysiwyg-font-size-xx-large",7:"wysiwyg-font-size-xx-large","-":"wysiwyg-font-size-smaller","+":"wysiwyg-font-size-larger"};return function(a){return e[String(a).charAt(0)]}}()};return e}(),wysihtml5.dom.removeEmptyTextNodes=function(e){for(var a,t=wysihtml5.lang.array(e.childNodes).get(),n=t.length,o=0;n>o;o++)a=t[o],a.nodeType===wysihtml5.TEXT_NODE&&""===a.data&&a.parentNode.removeChild(a)},wysihtml5.dom.renameElement=function(e,a){for(var t,n=e.ownerDocument.createElement(a);t=e.firstChild;)n.appendChild(t);return wysihtml5.dom.copyAttributes(["align","className"]).from(e).to(n),e.parentNode.replaceChild(n,e),n},wysihtml5.dom.replaceWithChildNodes=function(e){if(e.parentNode){if(!e.firstChild)return e.parentNode.removeChild(e),void 0;for(var a=e.ownerDocument.createDocumentFragment();e.firstChild;)a.appendChild(e.firstChild);e.parentNode.replaceChild(a,e),e=a=null}},function(e){function a(a){return"block"===e.getStyle("display").from(a)}function t(e){return"BR"===e.nodeName}function n(e){var a=e.ownerDocument.createElement("br");e.appendChild(a)}function o(e,o){if(e.nodeName.match(/^(MENU|UL|OL)$/)){var i,r,s,d,l,c,m=e.ownerDocument,u=m.createDocumentFragment(),f=e.previousElementSibling||e.previousSibling;if(o)for(f&&!a(f)&&n(u);c=e.firstElementChild||e.firstChild;){for(r=c.lastChild;i=c.firstChild;)s=i===r,d=s&&!a(i)&&!t(i),u.appendChild(i),d&&n(u);c.parentNode.removeChild(c)}else for(;c=e.firstElementChild||e.firstChild;){if(c.querySelector&&c.querySelector("div, p, ul, ol, menu, blockquote, h1, h2, h3, h4, h5, h6"))for(;i=c.firstChild;)u.appendChild(i);else{for(l=m.createElement("p");i=c.firstChild;)l.appendChild(i);u.appendChild(l)}c.parentNode.removeChild(c)}e.parentNode.replaceChild(u,e)}}e.resolveList=o}(wysihtml5.dom),function(e){var a=document,t=["parent","top","opener","frameElement","frames","localStorage","globalStorage","sessionStorage","indexedDB"],n=["open","close","openDialog","showModalDialog","alert","confirm","prompt","openDatabase","postMessage","XMLHttpRequest","XDomainRequest"],o=["referrer","write","open","close"];e.dom.Sandbox=Base.extend({constructor:function(a,t){this.callback=a||e.EMPTY_FUNCTION,this.config=e.lang.object({}).merge(t).get(),this.iframe=this._createIframe()},insertInto:function(e){"string"==typeof e&&(e=a.getElementById(e)),e.appendChild(this.iframe)},getIframe:function(){return this.iframe},getWindow:function(){this._readyError()},getDocument:function(){this._readyError()},destroy:function(){var e=this.getIframe();e.parentNode.removeChild(e)},_readyError:function(){throw new Error("wysihtml5.Sandbox: Sandbox iframe isn't loaded yet")},_createIframe:function(){var t=this,n=a.createElement("iframe");return n.className="wysihtml5-sandbox",e.dom.setAttributes({security:"restricted",allowtransparency:"true",frameborder:0,width:0,height:0,marginwidth:0,marginheight:0}).on(n),e.browser.throwsMixedContentWarningWhenIframeSrcIsEmpty()&&(n.src="javascript:'<html></html>'"),n.onload=function(){n.onreadystatechange=n.onload=null,t._onLoadIframe(n)},n.onreadystatechange=function(){/loaded|complete/.test(n.readyState)&&(n.onreadystatechange=n.onload=null,t._onLoadIframe(n))},n},_onLoadIframe:function(i){if(e.dom.contains(a.documentElement,i)){var r=this,s=i.contentWindow,d=i.contentWindow.document,l=a.characterSet||a.charset||"utf-8",c=this._getHtml({charset:l,stylesheets:this.config.stylesheets});if(d.open("text/html","replace"),d.write(c),d.close(),this.getWindow=function(){return i.contentWindow},this.getDocument=function(){return i.contentWindow.document},s.onerror=function(e,a,t){throw new Error("wysihtml5.Sandbox: "+e,a,t)},!e.browser.supportsSandboxedIframes()){var m,u;for(m=0,u=t.length;u>m;m++)this._unset(s,t[m]);for(m=0,u=n.length;u>m;m++)this._unset(s,n[m],e.EMPTY_FUNCTION);for(m=0,u=o.length;u>m;m++)this._unset(d,o[m]);this._unset(d,"cookie","",!0)}this.loaded=!0,setTimeout(function(){r.callback(r)},0)}},_getHtml:function(a){var t,n=a.stylesheets,o="",i=0;if(n="string"==typeof n?[n]:n)for(t=n.length;t>i;i++)o+='<link rel="stylesheet" href="'+n[i]+'">';return a.stylesheets=o,e.lang.string('<!DOCTYPE html><html><head><meta charset="#{charset}">#{stylesheets}</head><body></body></html>').interpolate(a)},_unset:function(a,t,n,o){try{a[t]=n}catch(i){}try{a.__defineGetter__(t,function(){return n})}catch(i){}if(o)try{a.__defineSetter__(t,function(){})}catch(i){}if(!e.browser.crashesWhenDefineProperty(t))try{var r={get:function(){return n}};o&&(r.set=function(){}),Object.defineProperty(a,t,r)}catch(i){}}})}(wysihtml5),function(){var e={className:"class"};wysihtml5.dom.setAttributes=function(a){return{on:function(t){for(var n in a)t.setAttribute(e[n]||n,a[n])}}}}(),wysihtml5.dom.setStyles=function(e){return{on:function(a){var t=a.style;if("string"==typeof e)return t.cssText+=";"+e,void 0;for(var n in e)"float"===n?(t.cssFloat=e[n],t.styleFloat=e[n]):t[n]=e[n]}}},function(e){e.simulatePlaceholder=function(a,t,n){var o="placeholder",i=function(){t.hasPlaceholderSet()&&t.clear(),t.placeholderSet=!1,e.removeClass(t.element,o)},r=function(){t.isEmpty()&&(t.placeholderSet=!0,t.setValue(n),e.addClass(t.element,o))};a.on("set_placeholder",r).on("unset_placeholder",i).on("focus:composer",i).on("paste:composer",i).on("blur:composer",r),r()}}(wysihtml5.dom),function(e){var a=document.documentElement;"textContent"in a?(e.setTextContent=function(e,a){e.textContent=a},e.getTextContent=function(e){return e.textContent}):"innerText"in a?(e.setTextContent=function(e,a){e.innerText=a},e.getTextContent=function(e){return e.innerText}):(e.setTextContent=function(e,a){e.nodeValue=a},e.getTextContent=function(e){return e.nodeValue})}(wysihtml5.dom),wysihtml5.quirks.cleanPastedHTML=function(){function e(e,t,n){t=t||a,n=n||e.ownerDocument||document;var o,i,r,s,d,l="string"==typeof e,c=0;o=l?wysihtml5.dom.getAsDom(e,n):e;for(d in t)for(r=o.querySelectorAll(d),i=t[d],s=r.length;s>c;c++)i(r[c]);return r=e=t=null,l?o.innerHTML:o}var a={"a u":wysihtml5.dom.replaceWithChildNodes};return e}(),wysihtml5.quirks.ensureProperClearing=function(){var e=function(){var e=this;setTimeout(function(){var a=e.innerHTML.toLowerCase();("<p>&nbsp;</p>"==a||"<p>&nbsp;</p><p>&nbsp;</p>"==a)&&(e.innerHTML="")},0)};return function(a){wysihtml5.dom.observe(a.element,["cut","keydown"],e)}}(),function(e){var a="%7E";e.quirks.getCorrectInnerHTML=function(t){var n=t.innerHTML;if(-1===n.indexOf(a))return n;var o,i,r,s,d=t.querySelectorAll("[href*='~'], [src*='~']");for(s=0,r=d.length;r>s;s++)o=d[s].href||d[s].src,i=e.lang.string(o).replace("~").by(a),n=e.lang.string(n).replace(i).by(o);return n}}(wysihtml5),function(e){var a="wysihtml5-quirks-redraw";e.quirks.redraw=function(t){e.dom.addClass(t,a),e.dom.removeClass(t,a);try{var n=t.ownerDocument;n.execCommand("italic",!1,null),n.execCommand("italic",!1,null)}catch(o){}}}(wysihtml5),function(e){function a(e){var a=0;if(e.parentNode)do a+=e.offsetTop||0,e=e.offsetParent;while(e);return a}var t=e.dom;e.Selection=Base.extend({constructor:function(e){window.rangy.init(),this.editor=e,this.composer=e.composer,this.doc=this.composer.doc},getBookmark:function(){var e=this.getRange();return e&&e.cloneRange()},setBookmark:function(e){e&&this.setSelection(e)},setBefore:function(e){var a=rangy.createRange(this.doc);
return a.setStartBefore(e),a.setEndBefore(e),this.setSelection(a)},setAfter:function(e){var a=rangy.createRange(this.doc);return a.setStartAfter(e),a.setEndAfter(e),this.setSelection(a)},selectNode:function(a,n){var o=rangy.createRange(this.doc),i=a.nodeType===e.ELEMENT_NODE,r="canHaveHTML"in a?a.canHaveHTML:"IMG"!==a.nodeName,s=i?a.innerHTML:a.data,d=""===s||s===e.INVISIBLE_SPACE,l=t.getStyle("display").from(a),c="block"===l||"list-item"===l;if(d&&i&&r&&!n)try{a.innerHTML=e.INVISIBLE_SPACE}catch(m){}r?o.selectNodeContents(a):o.selectNode(a),r&&d&&i?o.collapse(c):r&&d&&(o.setStartAfter(a),o.setEndAfter(a)),this.setSelection(o)},getSelectedNode:function(e){var a,t;return e&&this.doc.selection&&"Control"===this.doc.selection.type&&(t=this.doc.selection.createRange(),t&&t.length)?t.item(0):(a=this.getSelection(this.doc),a.focusNode===a.anchorNode?a.focusNode:(t=this.getRange(this.doc),t?t.commonAncestorContainer:this.doc.body))},executeAndRestore:function(a,n){var o,i,r,s,d,l=this.doc.body,c=n&&l.scrollTop,m=n&&l.scrollLeft,u="_wysihtml5-temp-placeholder",f='<span class="'+u+'">'+e.INVISIBLE_SPACE+"</span>",h=this.getRange(this.doc);if(!h)return a(l,l),void 0;e.browser.hasInsertNodeIssue()?this.doc.execCommand("insertHTML",!1,f):(s=h.createContextualFragment(f),h.insertNode(s));try{a(h.startContainer,h.endContainer)}catch(p){setTimeout(function(){throw p},0)}o=this.doc.querySelector("."+u),o?(d=rangy.createRange(this.doc),r=o.nextSibling,e.browser.hasInsertNodeIssue()&&r&&"BR"===r.nodeName?(i=this.doc.createTextNode(e.INVISIBLE_SPACE),t.insert(i).after(o),d.setStartBefore(i),d.setEndBefore(i)):(d.selectNode(o),d.deleteContents()),this.setSelection(d)):l.focus(),n&&(l.scrollTop=c,l.scrollLeft=m);try{o.parentNode.removeChild(o)}catch(g){}},executeAndRestoreSimple:function(e){var a,t,n,o,i,r=this.getRange(),s=this.doc.body;if(!r)return e(s,s),void 0;o=r.getNodes([3]),t=o[0]||r.startContainer,n=o[o.length-1]||r.endContainer,i={collapsed:r.collapsed,startContainer:t,startOffset:t===r.startContainer?r.startOffset:0,endContainer:n,endOffset:n===r.endContainer?r.endOffset:n.length};try{e(r.startContainer,r.endContainer)}catch(d){setTimeout(function(){throw d},0)}a=rangy.createRange(this.doc);try{a.setStart(i.startContainer,i.startOffset)}catch(l){}try{a.setEnd(i.endContainer,i.endOffset)}catch(c){}try{this.setSelection(a)}catch(m){}},set:function(e,a){var t=rangy.createRange(this.doc);t.setStart(e,a||0),this.setSelection(t)},insertHTML:function(e){var a=rangy.createRange(this.doc),t=a.createContextualFragment(e),n=t.lastChild;this.insertNode(t),n&&this.setAfter(n)},insertNode:function(e){var a=this.getRange();a&&a.insertNode(e)},surround:function(e){var a=this.getRange();if(a)try{a.surroundContents(e),this.selectNode(e)}catch(t){e.appendChild(a.extractContents()),a.insertNode(e)}},scrollIntoView:function(){var t,n=this.doc,o=5,i=n.documentElement.scrollHeight>n.documentElement.offsetHeight,r=n._wysihtml5ScrollIntoViewElement=n._wysihtml5ScrollIntoViewElement||function(){var a=n.createElement("span");return a.innerHTML=e.INVISIBLE_SPACE,a}();i&&(this.insertNode(r),t=a(r),r.parentNode.removeChild(r),t>=n.body.scrollTop+n.documentElement.offsetHeight-o&&(n.body.scrollTop=t))},selectLine:function(){e.browser.supportsSelectionModify()?this._selectLine_W3C():this.doc.selection&&this._selectLine_MSIE()},_selectLine_W3C:function(){var e=this.doc.defaultView,a=e.getSelection();a.modify("extend","left","lineboundary"),a.modify("extend","right","lineboundary")},_selectLine_MSIE:function(){var e,a,t,n,o,i=this.doc.selection.createRange(),r=i.boundingTop,s=this.doc.body.scrollWidth;if(i.moveToPoint){for(0===r&&(t=this.doc.createElement("span"),this.insertNode(t),r=t.offsetTop,t.parentNode.removeChild(t)),r+=1,n=-10;s>n;n+=2)try{i.moveToPoint(n,r);break}catch(d){}for(e=r,a=this.doc.selection.createRange(),o=s;o>=0;o--)try{a.moveToPoint(o,e);break}catch(l){}i.setEndPoint("EndToEnd",a),i.select()}},getText:function(){var e=this.getSelection();return e?e.toString():""},getNodes:function(e,a){var t=this.getRange();return t?t.getNodes([e],a):[]},getRange:function(){var e=this.getSelection();return e&&e.rangeCount&&e.getRangeAt(0)},getSelection:function(){return rangy.getSelection(this.doc.defaultView||this.doc.parentWindow)},setSelection:function(e){var a=this.doc.defaultView||this.doc.parentWindow,t=rangy.getSelection(a);return t.setSingleRange(e)}})}(wysihtml5),function(e,a){function t(e,a,t){if(!e.className)return!1;var n=e.className.match(t)||[];return n[n.length-1]===a}function n(e,a,t){e.className?(o(e,t),e.className+=" "+a):e.className=a}function o(e,a){e.className&&(e.className=e.className.replace(a,""))}function i(e,a){return e.className.replace(f," ")==a.className.replace(f," ")}function r(e){for(var a=e.parentNode;e.firstChild;)a.insertBefore(e.firstChild,e);a.removeChild(e)}function s(e,a){if(e.attributes.length!=a.attributes.length)return!1;for(var t,n,o,i=0,r=e.attributes.length;r>i;++i)if(t=e.attributes[i],o=t.name,"class"!=o){if(n=a.attributes.getNamedItem(o),t.specified!=n.specified)return!1;if(t.specified&&t.nodeValue!==n.nodeValue)return!1}return!0}function d(e,t){return a.dom.isCharacterDataNode(e)?0==t?!!e.previousSibling:t==e.length?!!e.nextSibling:!0:t>0&&t<e.childNodes.length}function l(e,t,n){var o;if(a.dom.isCharacterDataNode(t)&&(0==n?(n=a.dom.getNodeIndex(t),t=t.parentNode):n==t.length?(n=a.dom.getNodeIndex(t)+1,t=t.parentNode):o=a.dom.splitDataNode(t,n)),!o){o=t.cloneNode(!1),o.id&&o.removeAttribute("id");for(var i;i=t.childNodes[n];)o.appendChild(i);a.dom.insertAfter(o,t)}return t==e?o:l(e,o.parentNode,a.dom.getNodeIndex(o))}function c(a){this.isElementMerge=a.nodeType==e.ELEMENT_NODE,this.firstTextNode=this.isElementMerge?a.lastChild:a,this.textNodes=[this.firstTextNode]}function m(e,a,t,n,o){this.tagNames=e||[u],this.cssClass=a||"",this.similarClassRegExp=t,this.normalize=n,this.attrs=o||[],this.applyToAnyTagName=!1}var u="span",f=/\s+/g;c.prototype={doMerge:function(){for(var e,a,t,n=[],o=0,i=this.textNodes.length;i>o;++o)e=this.textNodes[o],a=e.parentNode,n[o]=e.data,o&&(a.removeChild(e),a.hasChildNodes()||a.parentNode.removeChild(a));return this.firstTextNode.data=t=n.join(""),t},getLength:function(){for(var e=this.textNodes.length,a=0;e--;)a+=this.textNodes[e].length;return a},toString:function(){for(var e=[],a=0,t=this.textNodes.length;t>a;++a)e[a]="'"+this.textNodes[a].data+"'";return"[Merge("+e.join(",")+")]"}},m.prototype={getAncestorWithClass:function(n){for(var o;n;){if(o=this.cssClass?t(n,this.cssClass,this.similarClassRegExp):!0,n.nodeType==e.ELEMENT_NODE&&a.dom.arrayContains(this.tagNames,n.tagName.toLowerCase())&&o)return n;n=n.parentNode}return!1},postApply:function(e,a){for(var t,n,o,i=e[0],r=e[e.length-1],s=[],d=i,l=r,m=0,u=r.length,f=0,h=e.length;h>f;++f)n=e[f],o=this.getAdjacentMergeableTextNode(n.parentNode,!1),o?(t||(t=new c(o),s.push(t)),t.textNodes.push(n),n===i&&(d=t.firstTextNode,m=d.length),n===r&&(l=t.firstTextNode,u=t.getLength())):t=null;var p=this.getAdjacentMergeableTextNode(r.parentNode,!0);if(p&&(t||(t=new c(r),s.push(t)),t.textNodes.push(p)),s.length){for(f=0,h=s.length;h>f;++f)s[f].doMerge();a.setStart(d,m),a.setEnd(l,u)}},getAdjacentMergeableTextNode:function(a,t){var n,o=a.nodeType==e.TEXT_NODE,i=o?a.parentNode:a,r=t?"nextSibling":"previousSibling";if(o){if(n=a[r],n&&n.nodeType==e.TEXT_NODE)return n}else if(n=i[r],n&&this.areElementsMergeable(a,n))return n[t?"firstChild":"lastChild"];return null},areElementsMergeable:function(e,t){return a.dom.arrayContains(this.tagNames,(e.tagName||"").toLowerCase())&&a.dom.arrayContains(this.tagNames,(t.tagName||"").toLowerCase())&&i(e,t)&&s(e,t)},createContainer:function(e){var a=e.createElement(this.tagNames[0]);if(this.cssClass&&(a.className=this.cssClass),this.attrs)for(var t=0;t<this.attrs.length;t++)a.setAttribute(this.attrs[t].name,this.attrs[t].value);return a},applyToTextNode:function(e){var t=e.parentNode;if(1==t.childNodes.length&&a.dom.arrayContains(this.tagNames,t.tagName.toLowerCase())){if(this.cssClass&&n(t,this.cssClass,this.similarClassRegExp),this.attrs)for(var o=0;o<this.attrs.length;o++)t.removeAttribute(this.attrs[o].name),t.setAttribute(this.attrs[o].name,this.attrs[o].value)}else{var i=this.createContainer(a.dom.getDocument(e));if("div"===this.tagNames[0]&&e.nextSibling){var r=e.nextSibling;1===r.nodeType&&"br"===r.nodeName.toLowerCase()&&e.parentNode.removeChild(r)}e.parentNode.insertBefore(i,e),i.appendChild(e)}},isRemovable:function(t){return a.dom.arrayContains(this.tagNames,t.tagName.toLowerCase())&&e.lang.string(t.className).trim()==this.cssClass},undoToTextNode:function(e,a,t){if(!a.containsNode(t)){var n=a.cloneRange();n.selectNode(t),n.isPointInRange(a.endContainer,a.endOffset)&&d(a.endContainer,a.endOffset)&&(l(t,a.endContainer,a.endOffset),a.setEndAfter(t)),n.isPointInRange(a.startContainer,a.startOffset)&&d(a.startContainer,a.startOffset)&&(t=l(t,a.startContainer,a.startOffset))}this.similarClassRegExp&&o(t,this.similarClassRegExp),this.isRemovable(t)&&r(t)},applyToRange:function(a){var t=a.getNodes([e.TEXT_NODE]);if(!t.length)try{var n=this.createContainer(a.endContainer.ownerDocument);return a.surroundContents(n),this.selectNode(a,n),void 0}catch(o){}if(a.splitBoundaries(),t=a.getNodes([e.TEXT_NODE]),t.length){for(var i,r=0,s=t.length;s>r;++r)i=t[r],this.getAncestorWithClass(i)||this.applyToTextNode(i);a.setStart(t[0],0),i=t[t.length-1],a.setEnd(i,i.length),this.normalize&&this.postApply(t,a)}},undoToRange:function(a){var t,n,o=a.getNodes([e.TEXT_NODE]);if(o.length)a.splitBoundaries(),o=a.getNodes([e.TEXT_NODE]);else{var i=a.endContainer.ownerDocument,r=i.createTextNode(e.INVISIBLE_SPACE);a.insertNode(r),a.selectNode(r),o=[r]}for(var s=0,d=o.length;d>s;++s)t=o[s],n=this.getAncestorWithClass(t),n&&this.undoToTextNode(t,a,n);1==d?this.selectNode(a,o[0]):(a.setStart(o[0],0),t=o[o.length-1],a.setEnd(t,t.length),this.normalize&&this.postApply(o,a))},selectNode:function(a,t){var n=t.nodeType===e.ELEMENT_NODE,o="canHaveHTML"in t?t.canHaveHTML:!0,i=n?t.innerHTML:t.data,r=""===i||i===e.INVISIBLE_SPACE;if(r&&n&&o)try{t.innerHTML=e.INVISIBLE_SPACE}catch(s){}a.selectNodeContents(t),r&&n?a.collapse(!1):r&&(a.setStartAfter(t),a.setEndAfter(t))},getTextSelectedByRange:function(e,a){var t=a.cloneRange();t.selectNodeContents(e);var n=t.intersection(a),o=n?n.toString():"";return t.detach(),o},isAppliedToRange:function(a){var t,n=[],o=a.getNodes([e.TEXT_NODE]);if(!o.length)return t=this.getAncestorWithClass(a.startContainer),t?[t]:!1;for(var i,r=0,s=o.length;s>r;++r){if(i=this.getTextSelectedByRange(o[r],a),t=this.getAncestorWithClass(o[r]),""!=i&&!t)return!1;n.push(t)}return n},toggleRange:function(e){this.isAppliedToRange(e)?this.undoToRange(e):this.applyToRange(e)}},e.selection.HTMLApplier=m}(wysihtml5,rangy),wysihtml5.Commands=Base.extend({constructor:function(e){this.editor=e,this.composer=e.composer,this.doc=this.composer.doc},support:function(e){return wysihtml5.browser.supportsCommand(this.doc,e)},exec:function(e,a){var t=wysihtml5.commands[e],n=wysihtml5.lang.array(arguments).get(),o=t&&t.exec,i=null;if(this.editor.fire("beforecommand:composer"),o)n.unshift(this.composer),i=o.apply(t,n);else try{i=this.doc.execCommand(e,!1,a)}catch(r){}return this.editor.fire("aftercommand:composer"),i},state:function(e){var a=wysihtml5.commands[e],t=wysihtml5.lang.array(arguments).get(),n=a&&a.state;if(n)return t.unshift(this.composer),n.apply(a,t);try{return this.doc.queryCommandState(e)}catch(o){return!1}}}),function(e){var a=/(align-(left|center|right)|justify)/g;e.commands.alignment={exec:function(t,n,o){return"justify"===o?e.commands.formatInline.exec(t,n,"div","justify",a):e.commands.formatInline.exec(t,n,"div","align-"+o,a)},state:function(t,n,o){return"justify"===o?e.commands.formatInline.state(t,n,"div","justify",a):e.commands.formatInline.state(t,n,"div","align-"+o,a)}}}(wysihtml5),function(e){var a=/wysiwyg-background-color-[0-9\-]+/g;e.commands.backgroundColor={exec:function(e,t,n,o){var i="wysiwyg-background-color-"+n.r+"-"+n.g+"-"+n.b+"-"+n.a.toString().replace(".","-"),r=document.createElement("style"),s=editor.composer.doc.body,d=s.classList;r.type="text/css",r.innerHTML="."+i+" { background-color: rgba("+n.r+", "+n.g+", "+n.b+", "+n.a+") !important; }",e.iframe.contentDocument.getElementsByTagName("head")[0].appendChild(r);for(var l=0;l<d.length;l++)d[l].match(a)&&s.classList.remove(d[l]);for(l=0;l<o.length;l++)s.setAttribute(o[l].name,o[l].value);s.classList.add(i)},state:function(){}}}(wysihtml5),wysihtml5.commands.bold={exec:function(e,a){return wysihtml5.commands.formatInline.exec(e,a,"b")},state:function(e,a){return wysihtml5.commands.formatInline.state(e,a,"b")}},function(e){var a=/wysiwyg-background-color-[0-9\-]+/g;e.commands.clear={exec:function(e){var t=e.doc.body,n=t.classList;t.innerHTML="";for(var o=0;o<n.length;o++)n[o].match(a)&&t.classList.remove(n[o])},state:function(){}}}(wysihtml5),function(e){function a(e,a){for(var t,n,o,r=a.length,s=0;r>s;s++)t=a[s],n=i.getParentElement(t,{nodeName:"code"}),o=i.getTextContent(t),o.match(i.autoLink.URL_REG_EXP)&&!n?n=i.renameElement(t,"code"):i.replaceWithChildNodes(t)}function t(a,t){var r,s,d,l,c,m,u,f,h,p=a.doc,g="_wysihtml5-temp-"+ +new Date,b=/non-matching-class/g,v=0;for(e.commands.formatInline.exec(a,n,o,g,b),s=p.querySelectorAll(o+"."+g),r=s.length;r>v;v++){d=s[v],d.removeAttribute("class");for(h in t)d.setAttribute(h,t[h])}m=d,1===r&&(u=i.getTextContent(d),l=!!d.querySelector("*"),c=""===u||u===e.INVISIBLE_SPACE,!l&&c&&(i.setTextContent(d,t.text||d.href),f=p.createTextNode(" "),a.selection.setAfter(d),i.insert(f).after(d),m=f)),a.selection.setAfter(m)}var n,o="A",i=e.dom;e.commands.createLink={exec:function(e,n,o){var i=this.state(e,n);i?e.selection.executeAndRestore(function(){a(e,i)}):(o="object"==typeof o?o:{href:o},t(e,o))},state:function(a,t){return e.commands.formatInline.state(a,t,"A")}}}(wysihtml5),function(e){var a=/wysiwyg-font-family-[a-z\-]+/g;e.commands.customFont={exec:function(t,n,o,i){var r="wysiwyg-font-family-"+o.replace(/ /g,"-").toLowerCase(),s=document.createElement("style");return s.type="text/css",s.innerHTML="."+r+" { font-family: '"+o+"', serif; }",t.iframe.contentDocument.getElementsByTagName("head")[0].appendChild(s),e.commands.formatInline.exec(t,n,"span",r,a,i)},state:function(t,n,o,i){var r="wysiwyg-font-family-"+o.replace(/ /g,"-").toLowerCase();return e.commands.formatInline.state(t,n,"span",r,a,i)}}}(wysihtml5),function(e){var a=/wysiwyg-font-size-[0-9a-z\-]+/g;e.commands.fontSize={exec:function(t,n,o){return e.commands.formatInline.exec(t,n,"span","wysiwyg-font-size-"+o,a)},state:function(t,n,o){return e.commands.formatInline.state(t,n,"span","wysiwyg-font-size-"+o,a)}}}(wysihtml5),function(e){var a=/wysiwyg-color-[0-9a-z]+/g;e.commands.foreColor={exec:function(t,n,o){return e.commands.formatInline.exec(t,n,"span","wysiwyg-color-"+o,a)},state:function(t,n,o){return e.commands.formatInline.state(t,n,"span","wysiwyg-color-"+o,a)}}}(wysihtml5),function(e){function a(e,a,n){e.className?(t(e,n),e.className+=" "+a):e.className=a}function t(e,a){e.className=e.className.replace(a,"")}function n(a){return a.nodeType===e.TEXT_NODE&&!e.lang.string(a.data).trim()}function o(e){for(var a=e.previousSibling;a&&n(a);)a=a.previousSibling;return a}function i(e){for(var a=e.nextSibling;a&&n(a);)a=a.nextSibling;return a}function r(e){var a=e.ownerDocument,t=i(e),n=o(e);t&&!c(t)&&e.parentNode.insertBefore(a.createElement("br"),t),n&&!c(n)&&e.parentNode.insertBefore(a.createElement("br"),e)}function s(e){var a=i(e),t=o(e);a&&l(a)&&a.parentNode.removeChild(a),t&&l(t)&&t.parentNode.removeChild(t)}function d(e){var a=e.lastChild;a&&l(a)&&a.parentNode.removeChild(a)}function l(e){return"BR"===e.nodeName}function c(e){return l(e)?!0:"block"===h.getStyle("display").from(e)?!0:!1}function m(a,t,n,o){if(o)var i=h.observe(a,"DOMNodeInserted",function(a){var t,n=a.target;n.nodeType===e.ELEMENT_NODE&&(t=h.getStyle("display").from(n),"inline"!==t.substr(0,6)&&(n.className+=" "+o))});a.execCommand(t,!1,n),i&&i.stop()}function u(a,t){a.selection.selectLine(),a.selection.surround(t),s(t),d(t),a.selection.selectNode(t,e.browser.displaysCaretInEmptyContentEditableCorrectly())}function f(a){return!!e.lang.string(a.className).trim()}var h=e.dom,p=["H1","H2","H3","H4","H5","H6","P","BLOCKQUOTE","DIV"];e.commands.formatBlock={exec:function(n,o,i,s,d){var l,c=n.doc,g=this.state(n,o,i,s,d),b=n.config.useLineBreaks,v=b?"DIV":"P";return i="string"==typeof i?i.toUpperCase():i,g?(n.selection.executeAndRestoreSimple(function(){d&&t(g,d);var e=f(g);e||!b&&"P"!==i?h.renameElement(g,"P"===i?"DIV":v):(r(g),h.replaceWithChildNodes(g))}),void 0):(null===i||e.lang.array(p).contains(i))&&(l=n.selection.getSelectedNode(),g=h.getParentElement(l,{nodeName:p}))?(n.selection.executeAndRestore(function(){i&&(g=h.renameElement(g,i)),s&&a(g,s,d)}),void 0):n.commands.support(o)?(m(c,o,i||v,s),void 0):(g=c.createElement(i||v),s&&(g.className=s),u(n,g),void 0)},state:function(e,a,t,n,o){t="string"==typeof t?t.toUpperCase():t;var i=e.selection.getSelectedNode();return h.getParentElement(i,{nodeName:t,className:n,classRegExp:o})}}}(wysihtml5),function(e){function a(e){var a=n[e];return a?[e.toLowerCase(),a.toLowerCase()]:[e.toLowerCase()]}function t(t,n,i,r){var s=t+":"+n;return o[s]||(o[s]=new e.selection.HTMLApplier(a(t),n,i,!0,r)),o[s]}var n={strong:"b",em:"i",b:"strong",i:"em"},o={};e.commands.formatInline={exec:function(e,a,n,o,i,r){var s=e.selection.getRange();return s?(t(n,o,i,r).toggleRange(s),e.selection.setSelection(s),void 0):!1},state:function(a,o,i,r,s,d){var l,c=a.doc,m=n[i]||i;return e.dom.hasElementWithTagName(c,i)||e.dom.hasElementWithTagName(c,m)?r&&!e.dom.hasElementWithClassName(c,r)?!1:(l=a.selection.getRange(),l?t(i,r,s,d).isAppliedToRange(l):!1):!1}}}(wysihtml5),function(e){var a=/wysiwyg-font-family-[a-z\-]+/g;e.commands.googleFont={exec:function(t,n,o,i){var r="wysiwyg-font-family-"+o.replace(/ /g,"-").toLowerCase(),s=document.createElement("style");return s.type="text/css",s.innerHTML="."+r+" { font-family: '"+o+"', serif; }",t.iframe.contentDocument.getElementsByTagName("head")[0].appendChild(s),e.commands.formatInline.exec(t,n,"span",r,a,i)},state:function(t,n,o,i){var r="wysiwyg-font-family-"+o.replace(/ /g,"-").toLowerCase();return e.commands.formatInline.state(t,n,"span",r,a,i)}}}(wysihtml5),function(e){var a=/wysiwyg-highlight-color-[0-9\-]+/g;e.commands.highlightColor={exec:function(t,n,o,i){var r="wysiwyg-highlight-color-"+o.r+"-"+o.g+"-"+o.b+"-"+o.a.toString().replace(".","-"),s=document.createElement("style");return s.type="text/css",s.innerHTML="."+r+" { background-color: rgba("+o.r+", "+o.g+", "+o.b+", "+o.a+"); }",t.iframe.contentDocument.getElementsByTagName("head")[0].appendChild(s),e.commands.formatInline.exec(t,n,"span",r,a,i)},state:function(t,n,o,i){var r="wysiwyg-highlight-color-"+o.r+"-"+o.g+"-"+o.b+"-"+o.a.toString().replace(".","-");return e.commands.formatInline.state(t,n,"span",r,a,i)}}}(wysihtml5),wysihtml5.commands.insertHTML={exec:function(e,a,t){e.commands.support(a)?e.doc.execCommand(a,!1,t):e.selection.insertHTML(t)},state:function(){return!1}},function(e){var a="IMG";e.commands.insertImage={exec:function(t,n,o){o="object"==typeof o?o:{src:o};var i,r,s=t.doc,d=this.state(t);if(d)return t.selection.setBefore(d),r=d.parentNode,r.removeChild(d),e.dom.removeEmptyTextNodes(r),"A"!==r.nodeName||r.firstChild||(t.selection.setAfter(r),r.parentNode.removeChild(r)),e.quirks.redraw(t.element),void 0;d=s.createElement(a);for(var l in o)d.setAttribute("className"===l?"class":l,o[l]);t.selection.insertNode(d),e.browser.hasProblemsSettingCaretAfterImg()?(i=s.createTextNode(e.INVISIBLE_SPACE),t.selection.insertNode(i),t.selection.setAfter(i)):t.selection.setAfter(d)},state:function(t){var n,o,i,r=t.doc;return e.dom.hasElementWithTagName(r,a)?(n=t.selection.getSelectedNode())?n.nodeName===a?n:n.nodeType!==e.ELEMENT_NODE?!1:(o=t.selection.getText(),(o=e.lang.string(o).trim())?!1:(i=t.selection.getNodes(e.ELEMENT_NODE,function(e){return"IMG"===e.nodeName}),1!==i.length?!1:i[0])):!1:!1}}}(wysihtml5),function(e){var a="<br>"+(e.browser.needsSpaceAfterLineBreak()?" ":"");e.commands.insertLineBreak={exec:function(t,n){t.commands.support(n)?(t.doc.execCommand(n,!1,null),e.browser.autoScrollsToCaret()||t.selection.scrollIntoView()):t.commands.exec("insertHTML",a)},state:function(){return!1}}}(wysihtml5),wysihtml5.commands.insertOrderedList={exec:function(e,a){var t,n,o=e.doc,i=e.selection.getSelectedNode(),r=wysihtml5.dom.getParentElement(i,{nodeName:"OL"}),s=wysihtml5.dom.getParentElement(i,{nodeName:"UL"}),d="_wysihtml5-temp-"+(new Date).getTime();return r||s||!e.commands.support(a)?(r?e.selection.executeAndRestore(function(){wysihtml5.dom.resolveList(r,e.config.useLineBreaks)}):s?e.selection.executeAndRestore(function(){wysihtml5.dom.renameElement(s,"ol")}):(e.commands.exec("formatBlock","div",d),n=o.querySelector("."+d),t=""===n.innerHTML||n.innerHTML===wysihtml5.INVISIBLE_SPACE||"<br>"===n.innerHTML,e.selection.executeAndRestore(function(){r=wysihtml5.dom.convertToList(n,"ol")}),t&&e.selection.selectNode(r.querySelector("li"),!0)),void 0):(o.execCommand(a,!1,null),void 0)},state:function(e){var a=e.selection.getSelectedNode();return wysihtml5.dom.getParentElement(a,{nodeName:"OL"})}},wysihtml5.commands.insertUnorderedList={exec:function(e,a){var t,n,o=e.doc,i=e.selection.getSelectedNode(),r=wysihtml5.dom.getParentElement(i,{nodeName:"UL"}),s=wysihtml5.dom.getParentElement(i,{nodeName:"OL"}),d="_wysihtml5-temp-"+(new Date).getTime();return r||s||!e.commands.support(a)?(r?e.selection.executeAndRestore(function(){wysihtml5.dom.resolveList(r,e.config.useLineBreaks)}):s?e.selection.executeAndRestore(function(){wysihtml5.dom.renameElement(s,"ul")}):(e.commands.exec("formatBlock","div",d),n=o.querySelector("."+d),t=""===n.innerHTML||n.innerHTML===wysihtml5.INVISIBLE_SPACE||"<br>"===n.innerHTML,e.selection.executeAndRestore(function(){r=wysihtml5.dom.convertToList(n,"ul")}),t&&e.selection.selectNode(r.querySelector("li"),!0)),void 0):(o.execCommand(a,!1,null),void 0)},state:function(e){var a=e.selection.getSelectedNode();return wysihtml5.dom.getParentElement(a,{nodeName:"UL"})}},wysihtml5.commands.italic={exec:function(e,a){return wysihtml5.commands.formatInline.exec(e,a,"i")},state:function(e,a){return wysihtml5.commands.formatInline.state(e,a,"i")}},function(e){var a="wysiwyg-text-align-center",t=/wysiwyg-text-align-[0-9a-z]+/g;e.commands.justifyCenter={exec:function(n){return e.commands.formatBlock.exec(n,"formatBlock",null,a,t)},state:function(n){return e.commands.formatBlock.state(n,"formatBlock",null,a,t)}}}(wysihtml5),function(e){var a="wysiwyg-text-align-left",t=/wysiwyg-text-align-[0-9a-z]+/g;e.commands.justifyLeft={exec:function(n){return e.commands.formatBlock.exec(n,"formatBlock",null,a,t)},state:function(n){return e.commands.formatBlock.state(n,"formatBlock",null,a,t)}}}(wysihtml5),function(e){var a="wysiwyg-text-align-right",t=/wysiwyg-text-align-[0-9a-z]+/g;e.commands.justifyRight={exec:function(n){return e.commands.formatBlock.exec(n,"formatBlock",null,a,t)},state:function(n){return e.commands.formatBlock.state(n,"formatBlock",null,a,t)}}}(wysihtml5),function(e){var a="wysiwyg-text-align-justify",t=/wysiwyg-text-align-[0-9a-z]+/g;e.commands.justifyFull={exec:function(n){return e.commands.formatBlock.exec(n,"formatBlock",null,a,t)},state:function(n){return e.commands.formatBlock.state(n,"formatBlock",null,a,t)}}}(wysihtml5),function(e){var a=/wysiwyg-line-height-[0-9\-]+/g;e.commands.lineHeight={exec:function(t,n,o,i){return e.commands.formatInline.exec(t,n,"span","wysiwyg-line-height-"+o,a,i)},state:function(t,n,o,i){return e.commands.formatInline.state(t,n,"span","wysiwyg-line-height-"+o,a,i)}}}(wysihtml5),wysihtml5.commands.redo={exec:function(e){return e.undoManager.redo()},state:function(){return!1}},function(e){var a=/wysiwyg-font-family-[a-z\-]+/g;e.commands.standardFont={exec:function(t,n,o,i,r){var s="wysiwyg-font-family-"+o.replace(/ /g,"-").toLowerCase(),d=document.createElement("style");return d.type="text/css",d.innerHTML="."+s+" { font-family: "+i+"; }",t.iframe.contentDocument.getElementsByTagName("head")[0].appendChild(d),e.commands.formatInline.exec(t,n,"span",s,a,r)},state:function(t,n,o,i,r){var s="wysiwyg-font-family-"+o.replace(/ /g,"-").toLowerCase();return e.commands.formatInline.state(t,n,"span",s,a,r)}}}(wysihtml5),function(e){var a=/wysiwyg-text-color-[0-9\-]+/g;e.commands.textColor={exec:function(t,n,o,i){var r="wysiwyg-text-color-"+o.r+"-"+o.g+"-"+o.b+"-"+o.a.toString().replace(".","-"),s=document.createElement("style");return s.type="text/css",s.innerHTML="."+r+" { color: rgba("+o.r+", "+o.g+", "+o.b+", "+o.a+"); }",t.iframe.contentDocument.getElementsByTagName("head")[0].appendChild(s),e.commands.formatInline.exec(t,n,"span",r,a,i)},state:function(t,n,o,i){var r="wysiwyg-text-color-"+o.r+"-"+o.g+"-"+o.b+"-"+o.a.toString().replace(".","-");return e.commands.formatInline.state(t,n,"span",r,a,i)}}}(wysihtml5),wysihtml5.commands.underline={exec:function(e,a){return wysihtml5.commands.formatInline.exec(e,a,"u")},state:function(e,a){return wysihtml5.commands.formatInline.state(e,a,"u")}},wysihtml5.commands.undo={exec:function(e){return e.undoManager.undo()},state:function(){return!1}},function(e){function a(e){for(var a;a=e.querySelector("._wysihtml5-temp");)a.parentNode.removeChild(a)}var t=90,n=89,o=8,i=46,r=25,s="data-wysihtml5-selection-node",d="data-wysihtml5-selection-offset",l='<span id="_wysihtml5-undo" class="_wysihtml5-temp">'+e.INVISIBLE_SPACE+"</span>",c='<span id="_wysihtml5-redo" class="_wysihtml5-temp">'+e.INVISIBLE_SPACE+"</span>",m=e.dom;e.UndoManager=e.lang.Dispatcher.extend({constructor:function(e){this.editor=e,this.composer=e.composer,this.element=this.composer.element,this.position=0,this.historyStr=[],this.historyDom=[],this.transact(),this._observe()},_observe:function(){var r,s=this,d=this.composer.sandbox.getDocument();if(m.observe(this.element,"keydown",function(e){if(!e.altKey&&(e.ctrlKey||e.metaKey)){var a=e.keyCode,o=a===t&&!e.shiftKey,i=a===t&&e.shiftKey||a===n;o?(s.undo(),e.preventDefault()):i&&(s.redo(),e.preventDefault())}}),m.observe(this.element,"keydown",function(e){var a=e.keyCode;a!==r&&(r=a,(a===o||a===i)&&s.transact())}),e.browser.hasUndoInContextMenu()){var u,f,h=function(){a(d),clearInterval(u)};m.observe(this.element,"contextmenu",function(){h(),s.composer.selection.executeAndRestoreSimple(function(){s.element.lastChild&&s.composer.selection.setAfter(s.element.lastChild),d.execCommand("insertHTML",!1,l),d.execCommand("insertHTML",!1,c),d.execCommand("undo",!1,null)}),u=setInterval(function(){d.getElementById("_wysihtml5-redo")?(h(),s.redo()):d.getElementById("_wysihtml5-undo")||(h(),s.undo())},400),f||(f=!0,m.observe(document,"mousedown",h),m.observe(d,["mousedown","paste","cut","copy"],h))})}this.editor.on("newword:composer",function(){s.transact()}).on("beforecommand:composer",function(){s.transact()})},transact:function(){var a=this.historyStr[this.position-1],t=this.composer.getValue();if(t!==a){var n=this.historyStr.length=this.historyDom.length=this.position;n>r&&(this.historyStr.shift(),this.historyDom.shift(),this.position--),this.position++;var o,i,l=this.composer.selection.getRange(),c=l.startContainer||this.element,m=l.startOffset||0;c.nodeType===e.ELEMENT_NODE?o=c:(o=c.parentNode,i=this.getChildNodeIndex(o,c)),o.setAttribute(d,m),"undefined"!=typeof i&&o.setAttribute(s,i);var u=this.element.cloneNode(!!t);this.historyDom.push(u),this.historyStr.push(t),o.removeAttribute(d),o.removeAttribute(s)}},undo:function(){this.transact(),this.undoPossible()&&(this.set(this.historyDom[--this.position-1]),this.editor.fire("undo:composer"))},redo:function(){this.redoPossible()&&(this.set(this.historyDom[++this.position-1]),this.editor.fire("redo:composer"))},undoPossible:function(){return this.position>1},redoPossible:function(){return this.position<this.historyStr.length},set:function(e){this.element.innerHTML="";for(var a=0,t=e.childNodes,n=e.childNodes.length;n>a;a++)this.element.appendChild(t[a].cloneNode(!0));var o,i,r;e.hasAttribute(d)?(o=e.getAttribute(d),r=e.getAttribute(s),i=this.element):(i=this.element.querySelector("["+d+"]")||this.element,o=i.getAttribute(d),r=i.getAttribute(s),i.removeAttribute(d),i.removeAttribute(s)),null!==r&&(i=this.getChildNodeByIndex(i,+r)),this.composer.selection.set(i,o)},getChildNodeIndex:function(e,a){for(var t=0,n=e.childNodes,o=n.length;o>t;t++)if(n[t]===a)return t},getChildNodeByIndex:function(e,a){return e.childNodes[a]}})}(wysihtml5),wysihtml5.views.View=Base.extend({constructor:function(e,a,t){this.parent=e,this.element=a,this.config=t,this._observeViewChange()},_observeViewChange:function(){var e=this;this.parent.on("beforeload",function(){e.parent.on("change_view",function(a){a===e.name?(e.parent.currentView=e,e.show(),setTimeout(function(){e.focus()},0)):e.hide()})})},focus:function(){if(this.element.ownerDocument.querySelector(":focus")!==this.element)try{this.element.focus()}catch(e){}},hide:function(){this.element.style.display="none"},show:function(){this.element.style.display=""},disable:function(){this.element.setAttribute("disabled","disabled")},enable:function(){this.element.removeAttribute("disabled")}}),function(e){var a=e.dom,t=e.browser;e.views.Composer=e.views.View.extend({name:"composer",CARET_HACK:"<br>",constructor:function(e,a,t){this.base(e,a,t),this.textarea=this.parent.textarea,this._initSandbox()},clear:function(){this.element.innerHTML=t.displaysCaretInEmptyContentEditableCorrectly()?"":this.CARET_HACK},getValue:function(a){var t=this.isEmpty()?"":e.quirks.getCorrectInnerHTML(this.element);return a&&(t=this.parent.parse(t)),t},setValue:function(e,a){a&&(e=this.parent.parse(e));try{this.element.innerHTML=e}catch(t){this.element.innerText=e}},show:function(){this.iframe.style.display=this._displayStyle||"",this.textarea.element.disabled||(this.disable(),this.enable())},hide:function(){this._displayStyle=a.getStyle("display").from(this.iframe),"none"===this._displayStyle&&(this._displayStyle=null),this.iframe.style.display="none"},disable:function(){this.parent.fire("disable:composer"),this.element.removeAttribute("contentEditable")},enable:function(){this.parent.fire("enable:composer"),this.element.setAttribute("contentEditable","true")},focus:function(a){e.browser.doesAsyncFocus()&&this.hasPlaceholderSet()&&this.clear(),this.base();var t=this.element.lastChild;a&&t&&("BR"===t.nodeName?this.selection.setBefore(this.element.lastChild):this.selection.setAfter(this.element.lastChild))},getTextContent:function(){return a.getTextContent(this.element)},hasPlaceholderSet:function(){return this.getTextContent()==this.textarea.element.getAttribute("placeholder")&&this.placeholderSet},isEmpty:function(){var e=this.element.innerHTML.toLowerCase();return""===e||"<br>"===e||"<p></p>"===e||"<p><br></p>"===e||this.hasPlaceholderSet()},_initSandbox:function(){var e=this;this.sandbox=new a.Sandbox(function(){e._create()},{stylesheets:this.config.stylesheets}),this.iframe=this.sandbox.getIframe();var t=this.textarea.element;if(a.insert(this.iframe).after(t),t.form){var n=document.createElement("input");n.type="hidden",n.name="_wysihtml5_mode",n.value=1,a.insert(n).after(t)}},_create:function(){var n=this;this.doc=this.sandbox.getDocument(),this.element=this.doc.body,this.textarea=this.parent.textarea,this.element.innerHTML=this.textarea.getValue(!0),this.selection=new e.Selection(this.parent),this.commands=new e.Commands(this.parent),a.copyAttributes(["className","spellcheck","title","lang","dir","accessKey"]).from(this.textarea.element).to(this.element),a.addClass(this.element,this.config.composerClassName),this.config.style&&this.style(),this.observe();var o=this.config.name;o&&(a.addClass(this.element,o),a.addClass(this.iframe,o)),this.enable(),this.textarea.element.disabled&&this.disable();
var i="string"==typeof this.config.placeholder?this.config.placeholder:this.textarea.element.getAttribute("placeholder");i&&a.simulatePlaceholder(this.parent,this,i),this.commands.exec("styleWithCSS",!1),this._initAutoLinking(),this._initObjectResizing(),this._initUndoManager(),this._initLineBreaking(),!this.textarea.element.hasAttribute("autofocus")&&document.querySelector(":focus")!=this.textarea.element||t.isIos()||setTimeout(function(){n.focus(!0)},100),t.clearsContentEditableCorrectly()||e.quirks.ensureProperClearing(this),this.initSync&&this.config.sync&&this.initSync(),this.textarea.hide(),this.parent.fire("beforeload").fire("load")},_initAutoLinking:function(){var n=this,o=t.canDisableAutoLinking(),i=t.doesAutoLinkingInContentEditable();if(o&&this.commands.exec("autoUrlDetect",!1),this.config.autoLink){(!i||i&&o)&&(this.parent.on("newword:composer",function(){a.getTextContent(n.element).match(a.autoLink.URL_REG_EXP)&&n.selection.executeAndRestore(function(e,t){a.autoLink(t.parentNode)})}),a.observe(this.element,"blur",function(){a.autoLink(n.element)}));var r=this.sandbox.getDocument().getElementsByTagName("a"),s=a.autoLink.URL_REG_EXP,d=function(t){var n=e.lang.string(a.getTextContent(t)).trim();return"www."===n.substr(0,4)&&(n="http://"+n),n};a.observe(this.element,"keydown",function(e){if(r.length){var t,o=n.selection.getSelectedNode(e.target.ownerDocument),i=a.getParentElement(o,{nodeName:"A"},4);i&&(t=d(i),setTimeout(function(){var e=d(i);e!==t&&e.match(s)&&i.setAttribute("href",e)},0))}})}},_initObjectResizing:function(){if(this.commands.exec("enableObjectResizing",!0),t.supportsEvent("resizeend")){var n=["width","height"],o=n.length,i=this.element;a.observe(i,"resizeend",function(a){var t,r=a.target||a.srcElement,s=r.style,d=0;if("IMG"===r.nodeName){for(;o>d;d++)t=n[d],s[t]&&(r.setAttribute(t,parseInt(s[t],10)),s[t]="");e.quirks.redraw(i)}})}},_initUndoManager:function(){this.undoManager=new e.UndoManager(this.parent)},_initLineBreaking:function(){function n(e){var t=a.getParentElement(e,{nodeName:["P","DIV"]},2);t&&o.selection.executeAndRestore(function(){o.config.useLineBreaks?a.replaceWithChildNodes(t):"P"!==t.nodeName&&a.renameElement(t,"p")})}var o=this,i=["LI","P","H1","H2","H3","H4","H5","H6"],r=["UL","OL","MENU"];this.config.useLineBreaks||a.observe(this.element,["focus","keydown"],function(){if(o.isEmpty()){var e=o.doc.createElement("P");o.element.innerHTML="",o.element.appendChild(e),t.displaysCaretInEmptyContentEditableCorrectly()?o.selection.selectNode(e,!0):(e.innerHTML="<br>",o.selection.setBefore(e.firstChild))}}),t.createsNestedInvalidMarkupAfterPaste()&&a.observe(this.element,"paste",function(){var a=o.doc.createTextNode(e.INVISIBLE_SPACE);o.selection.insertNode(a)}),a.observe(this.doc,"keydown",function(t){var s=t.keyCode;if(!t.shiftKey&&(s===e.ENTER_KEY||s===e.BACKSPACE_KEY)){var d=a.getParentElement(o.selection.getSelectedNode(),{nodeName:i},4);return d?(setTimeout(function(){var t,i=o.selection.getSelectedNode();if("LI"===d.nodeName){if(!i)return;t=a.getParentElement(i,{nodeName:r},2),t||n(i)}s===e.ENTER_KEY&&d.nodeName.match(/^H[1-6]$/)&&n(i)},0),void 0):(o.config.useLineBreaks&&s===e.ENTER_KEY&&!e.browser.insertsLineBreaksOnReturn()&&(o.commands.exec("insertLineBreak"),t.preventDefault()),void 0)}})}})}(wysihtml5),function(e){var a=e.dom,t=document,n=window,o=t.createElement("div"),i=["background-color","color","cursor","font-family","font-size","font-style","font-variant","font-weight","line-height","letter-spacing","text-align","text-decoration","text-indent","text-rendering","word-break","word-wrap","word-spacing"],r=["background-color","border-collapse","border-bottom-color","border-bottom-style","border-bottom-width","border-left-color","border-left-style","border-left-width","border-right-color","border-right-style","border-right-width","border-top-color","border-top-style","border-top-width","clear","display","float","margin-bottom","margin-left","margin-right","margin-top","outline-color","outline-offset","outline-width","outline-style","padding-left","padding-right","padding-top","padding-bottom","position","top","left","right","bottom","z-index","vertical-align","text-align","-webkit-box-sizing","-moz-box-sizing","-ms-box-sizing","box-sizing","-webkit-box-shadow","-moz-box-shadow","-ms-box-shadow","box-shadow","-webkit-border-top-right-radius","-moz-border-radius-topright","border-top-right-radius","-webkit-border-bottom-right-radius","-moz-border-radius-bottomright","border-bottom-right-radius","-webkit-border-bottom-left-radius","-moz-border-radius-bottomleft","border-bottom-left-radius","-webkit-border-top-left-radius","-moz-border-radius-topleft","border-top-left-radius","width","height"],s=["html                 { height: 100%; }","body                 { height: 100%; padding: 1px 0 0 0; margin: -1px 0 0 0; }","body > p:first-child { margin-top: 0; }","._wysihtml5-temp     { display: none; }",e.browser.isGecko?"body.placeholder { color: graytext !important; }":"body.placeholder { color: #a9a9a9 !important; }","img:-moz-broken      { -moz-force-broken-image-icon: 1; height: 24px; width: 24px; }"],d=function(e){if(e.setActive)try{e.setActive()}catch(o){}else{var i=e.style,r=t.documentElement.scrollTop||t.body.scrollTop,s=t.documentElement.scrollLeft||t.body.scrollLeft,d={position:i.position,top:i.top,left:i.left,WebkitUserSelect:i.WebkitUserSelect};a.setStyles({position:"absolute",top:"-99999px",left:"-99999px",WebkitUserSelect:"none"}).on(e),e.focus(),a.setStyles(d).on(e),n.scrollTo&&n.scrollTo(s,r)}};e.views.Composer.prototype.style=function(){var n,l=this,c=t.querySelector(":focus"),m=this.textarea.element,u=m.hasAttribute("placeholder"),f=u&&m.getAttribute("placeholder"),h=m.style.display,p=m.disabled;this.focusStylesHost=o.cloneNode(!1),this.blurStylesHost=o.cloneNode(!1),this.disabledStylesHost=o.cloneNode(!1),u&&m.removeAttribute("placeholder"),m===c&&m.blur(),m.disabled=!1,m.style.display=n="none",(m.getAttribute("rows")&&"auto"===a.getStyle("height").from(m)||m.getAttribute("cols")&&"auto"===a.getStyle("width").from(m))&&(m.style.display=n=h),a.copyStyles(r).from(m).to(this.iframe).andTo(this.blurStylesHost),a.copyStyles(i).from(m).to(this.element).andTo(this.blurStylesHost),a.insertCSS(s).into(this.element.ownerDocument),m.disabled=!0,a.copyStyles(r).from(m).to(this.disabledStylesHost),a.copyStyles(i).from(m).to(this.disabledStylesHost),m.disabled=p,m.style.display=h,d(m),m.style.display=n,a.copyStyles(r).from(m).to(this.focusStylesHost),a.copyStyles(i).from(m).to(this.focusStylesHost),m.style.display=h,a.copyStyles(["display"]).from(m).to(this.iframe);var g=e.lang.array(r).without(["display"]);return c?c.focus():m.blur(),u&&m.setAttribute("placeholder",f),this.parent.on("focus:composer",function(){a.copyStyles(g).from(l.focusStylesHost).to(l.iframe),a.copyStyles(i).from(l.focusStylesHost).to(l.element)}),this.parent.on("blur:composer",function(){a.copyStyles(g).from(l.blurStylesHost).to(l.iframe),a.copyStyles(i).from(l.blurStylesHost).to(l.element)}),this.parent.observe("disable:composer",function(){a.copyStyles(g).from(l.disabledStylesHost).to(l.iframe),a.copyStyles(i).from(l.disabledStylesHost).to(l.element)}),this.parent.observe("enable:composer",function(){a.copyStyles(g).from(l.blurStylesHost).to(l.iframe),a.copyStyles(i).from(l.blurStylesHost).to(l.element)}),this}}(wysihtml5),function(e){var a=e.dom,t=e.browser,n={66:"bold",73:"italic",85:"underline"};e.views.Composer.prototype.observe=function(){var o=this,i=this.getValue(),r=this.sandbox.getIframe(),s=this.element,d=t.supportsEventsInIframeCorrectly()?s:this.sandbox.getWindow(),l=["drop","paste"];a.observe(r,"DOMNodeRemoved",function(){clearInterval(c),o.parent.fire("destroy:composer")});var c=setInterval(function(){a.contains(document.documentElement,r)||(clearInterval(c),o.parent.fire("destroy:composer"))},250);a.observe(d,"focus",function(){o.parent.fire("focus").fire("focus:composer"),setTimeout(function(){i=o.getValue()},0)}),a.observe(d,"blur",function(){i!==o.getValue()&&o.parent.fire("change").fire("change:composer"),o.parent.fire("blur").fire("blur:composer")}),a.observe(s,"dragenter",function(){o.parent.fire("unset_placeholder")}),a.observe(s,l,function(){setTimeout(function(){o.parent.fire("paste").fire("paste:composer")},0)}),a.observe(s,"keyup",function(a){var t=a.keyCode;(t===e.SPACE_KEY||t===e.ENTER_KEY)&&o.parent.fire("newword:composer")}),this.parent.on("paste:composer",function(){setTimeout(function(){o.parent.fire("newword:composer")},0)}),t.canSelectImagesInContentEditable()||a.observe(s,"mousedown",function(e){var a=e.target;"IMG"===a.nodeName&&(o.selection.selectNode(a),e.preventDefault())}),t.hasHistoryIssue()&&t.supportsSelectionModify()&&a.observe(s,"keydown",function(e){if(e.metaKey||e.ctrlKey){var a=e.keyCode,t=s.ownerDocument.defaultView,n=t.getSelection();(37===a||39===a)&&(37===a&&(n.modify("extend","left","lineboundary"),e.shiftKey||n.collapseToStart()),39===a&&(n.modify("extend","right","lineboundary"),e.shiftKey||n.collapseToEnd()),e.preventDefault())}}),a.observe(s,"keydown",function(e){var a=e.keyCode,t=n[a];(e.ctrlKey||e.metaKey)&&!e.altKey&&t&&(o.commands.exec(t),e.preventDefault())}),a.observe(s,"keydown",function(a){var t,n=o.selection.getSelectedNode(!0),i=a.keyCode;!n||"IMG"!==n.nodeName||i!==e.BACKSPACE_KEY&&i!==e.DELETE_KEY||(t=n.parentNode,t.removeChild(n),"A"!==t.nodeName||t.firstChild||t.parentNode.removeChild(t),setTimeout(function(){e.quirks.redraw(s)},0),a.preventDefault())}),t.hasIframeFocusIssue()&&(a.observe(this.iframe,"focus",function(){setTimeout(function(){o.doc.querySelector(":focus")!==o.element&&o.focus()},0)}),a.observe(this.element,"blur",function(){setTimeout(function(){o.selection.getSelection().removeAllRanges()},0)}));var m={IMG:"Image: ",A:"Link: "};a.observe(s,"mouseover",function(e){var a,t=e.target,n=t.nodeName;if("A"===n||"IMG"===n){var o=t.hasAttribute("title");o||(a=m[n]+(t.getAttribute("href")||t.getAttribute("src")),t.setAttribute("title",a))}})}}(wysihtml5),function(e){var a=400;e.views.Synchronizer=Base.extend({constructor:function(e,a,t){this.editor=e,this.textarea=a,this.composer=t,this._observe()},fromComposerToTextarea:function(a){this.textarea.setValue(e.lang.string(this.composer.getValue()).trim(),a)},fromTextareaToComposer:function(e){var a=this.textarea.getValue();a?this.composer.setValue(a,e):(this.composer.clear(),this.editor.fire("set_placeholder"))},sync:function(e){"textarea"===this.editor.currentView.name?this.fromTextareaToComposer(e):this.fromComposerToTextarea(e)},_observe:function(){var t,n=this,o=this.textarea.element.form,i=function(){t=setInterval(function(){n.fromComposerToTextarea()},a)},r=function(){clearInterval(t),t=null};i(),o&&(e.dom.observe(o,"submit",function(){n.sync(!0)}),e.dom.observe(o,"reset",function(){setTimeout(function(){n.fromTextareaToComposer()},0)})),this.editor.on("change_view",function(e){"composer"!==e||t?"textarea"===e&&(n.fromComposerToTextarea(!0),r()):(n.fromTextareaToComposer(!0),i())}),this.editor.on("destroy:composer",r)}})}(wysihtml5),wysihtml5.views.Textarea=wysihtml5.views.View.extend({name:"textarea",constructor:function(e,a,t){this.base(e,a,t),this._observe()},clear:function(){this.element.value=""},getValue:function(e){var a=this.isEmpty()?"":this.element.value;return e&&(a=this.parent.parse(a)),a},setValue:function(e,a){a&&(e=this.parent.parse(e)),this.element.value=e},hasPlaceholderSet:function(){var e=wysihtml5.browser.supportsPlaceholderAttributeOn(this.element),a=this.element.getAttribute("placeholder")||null,t=this.element.value,n=!t;return e&&n||t===a},isEmpty:function(){return!wysihtml5.lang.string(this.element.value).trim()||this.hasPlaceholderSet()},_observe:function(){var e=this.element,a=this.parent,t={focusin:"focus",focusout:"blur"},n=wysihtml5.browser.supportsEvent("focusin")?["focusin","focusout","change"]:["focus","blur","change"];a.on("beforeload",function(){wysihtml5.dom.observe(e,n,function(e){var n=t[e.type]||e.type;a.fire(n).fire(n+":textarea")}),wysihtml5.dom.observe(e,["paste","drop"],function(){setTimeout(function(){a.fire("paste").fire("paste:textarea")},0)})})}}),function(e){var a=e.dom,t="wysihtml5-command-dialog-opened",n="input, select, textarea",o="[data-wysihtml5-dialog-field]",i="data-wysihtml5-dialog-field";e.toolbar.Dialog=e.lang.Dispatcher.extend({constructor:function(e,a){this.link=e,this.container=a},_observe:function(){if(!this._observed){var o=this,i=function(e){var a=o._serialize();a==o.elementToChange?o.fire("edit",a):o.fire("save",a),o.hide(),e.preventDefault(),e.stopPropagation()};a.observe(o.link,"click",function(){a.hasClass(o.link,t)&&setTimeout(function(){o.hide()},0)}),a.observe(this.container,"keydown",function(a){var t=a.keyCode;t===e.ENTER_KEY&&i(a),t===e.ESCAPE_KEY&&(o.fire("cancel"),o.hide())}),a.delegate(this.container,"[data-wysihtml5-dialog-action=save]","click",i),a.delegate(this.container,"[data-wysihtml5-dialog-action=cancel]","click",function(e){o.fire("cancel"),o.hide(),e.preventDefault(),e.stopPropagation()});for(var r=this.container.querySelectorAll(n),s=0,d=r.length,l=function(){clearInterval(o.interval)};d>s;s++)a.observe(r[s],"change",l);this._observed=!0}},_serialize:function(){for(var e=this.elementToChange||{},a=this.container.querySelectorAll(o),t=a.length,n=0;t>n;n++)e[a[n].getAttribute(i)]=a[n].value;return e},_interpolate:function(e){for(var a,t,n,r=document.querySelector(":focus"),s=this.container.querySelectorAll(o),d=s.length,l=0;d>l;l++)a=s[l],a!==r&&(e&&"hidden"===a.type||(t=a.getAttribute(i),n=this.elementToChange?this.elementToChange[t]||"":a.defaultValue,a.value=n))},show:function(e){if(!a.hasClass(this.link,t)){var o=this,i=this.container.querySelector(n);if(this.elementToChange=e,this._observe(),this._interpolate(),e&&(this.interval=setInterval(function(){o._interpolate(!0)},500)),a.addClass(this.link,t),this.container.style.display="",this.fire("show"),i&&!e)try{i.focus()}catch(r){}}},hide:function(){clearInterval(this.interval),this.elementToChange=null,a.removeClass(this.link,t),this.container.style.display="none",this.fire("hide")}})}(wysihtml5),function(e){var a=e.dom,t={position:"relative"},n={left:0,margin:0,opacity:0,overflow:"hidden",padding:0,position:"absolute",top:0,zIndex:1},o={cursor:"inherit",fontSize:"50px",height:"50px",marginTop:"-25px",outline:0,padding:0,position:"absolute",right:"-4px",top:"50%"},i={"x-webkit-speech":"",speech:""};e.toolbar.Speech=function(r,s){var d=document.createElement("input");if(!e.browser.supportsSpeechApiOn(d))return s.style.display="none",void 0;var l=r.editor.textarea.element.getAttribute("lang");l&&(i.lang=l);var c=document.createElement("div");e.lang.object(n).merge({width:s.offsetWidth+"px",height:s.offsetHeight+"px"}),a.insert(d).into(c),a.insert(c).into(s),a.setStyles(o).on(d),a.setAttributes(i).on(d),a.setStyles(n).on(c),a.setStyles(t).on(s);var m="onwebkitspeechchange"in d?"webkitspeechchange":"speechchange";a.observe(d,m,function(){r.execCommand("insertText",d.value),d.value=""}),a.observe(d,"click",function(e){a.hasClass(s,"wysihtml5-command-disabled")&&e.preventDefault(),e.stopPropagation()})}}(wysihtml5),function(e){var a="wysihtml5-command-disabled",t="wysihtml5-commands-disabled",n="wysihtml5-command-active",o="wysihtml5-action-active",i=e.dom;e.toolbar.Toolbar=Base.extend({constructor:function(a,t){this.editor=a,this.container="string"==typeof t?document.getElementById(t):t,this.composer=a.composer,this._getLinks("command"),this._getLinks("action"),this._observe(),this.show();for(var n=this.container.querySelectorAll("[data-wysihtml5-command=insertSpeech]"),o=n.length,i=0;o>i;i++)new e.toolbar.Speech(this,n[i])},_getLinks:function(a){for(var t,n,o,i,r,s=this[a+"Links"]=e.lang.array(this.container.querySelectorAll("[data-wysihtml5-"+a+"]")).get(),d=s.length,l=0,c=this[a+"Mapping"]={};d>l;l++)t=s[l],o=t.getAttribute("data-wysihtml5-"+a),i=t.getAttribute("data-wysihtml5-"+a+"-value"),n=this.container.querySelector("[data-wysihtml5-"+a+"-group='"+o+"']"),r=this._getDialog(t,o),c[o+":"+i]={link:t,group:n,name:o,value:i,dialog:r,state:!1}},_getDialog:function(a,t){var n,o,i=this,r=this.container.querySelector("[data-wysihtml5-dialog='"+t+"']");return r&&(n=new e.toolbar.Dialog(a,r),n.on("show",function(){o=i.composer.selection.getBookmark(),i.editor.fire("show:dialog",{command:t,dialogContainer:r,commandLink:a})}),n.on("save",function(e){o&&i.composer.selection.setBookmark(o),i._execCommand(t,e),i.editor.fire("save:dialog",{command:t,dialogContainer:r,commandLink:a})}),n.on("cancel",function(){i.editor.focus(!1),i.editor.fire("cancel:dialog",{command:t,dialogContainer:r,commandLink:a})})),n},execCommand:function(e,a){if(!this.commandsDisabled){var t=this.commandMapping[e+":"+a];t&&t.dialog&&!t.state?t.dialog.show():this._execCommand(e,a)}},_execCommand:function(e,a){this.editor.focus(!1),this.composer.commands.exec(e,a),this._updateLinkStates()},execAction:function(e){var a=this.editor;"change_view"===e&&(a.currentView===a.textarea?a.fire("change_view","composer"):a.fire("change_view","textarea"))},_observe:function(){for(var e=this,a=this.editor,n=this.container,o=this.commandLinks.concat(this.actionLinks),r=o.length,s=0;r>s;s++)"A"===o[s].nodeName?i.setAttributes({href:"javascript:;",unselectable:"on"}).on(o[s]):i.setAttributes({unselectable:"on"}).on(o[s]);i.delegate(n,"[data-wysihtml5-command], [data-wysihtml5-action]","mousedown",function(e){e.preventDefault()}),i.delegate(n,"[data-wysihtml5-command]","click",function(a){var t=this,n=t.getAttribute("data-wysihtml5-command"),o=t.getAttribute("data-wysihtml5-command-value");e.execCommand(n,o),a.preventDefault()}),i.delegate(n,"[data-wysihtml5-action]","click",function(a){var t=this.getAttribute("data-wysihtml5-action");e.execAction(t),a.preventDefault()}),a.on("focus:composer",function(){e.bookmark=null,clearInterval(e.interval),e.interval=setInterval(function(){e._updateLinkStates()},500)}),a.on("blur:composer",function(){clearInterval(e.interval)}),a.on("destroy:composer",function(){clearInterval(e.interval)}),a.on("change_view",function(a){setTimeout(function(){e.commandsDisabled="composer"!==a,e._updateLinkStates(),e.commandsDisabled?i.addClass(n,t):i.removeClass(n,t)},0)})},_updateLinkStates:function(){var t,r,s,d,l=this.commandMapping,c=this.actionMapping;for(t in l)d=l[t],this.commandsDisabled?(r=!1,i.removeClass(d.link,n),d.group&&i.removeClass(d.group,n),d.dialog&&d.dialog.hide()):(r=this.composer.commands.state(d.name,d.value),e.lang.object(r).isArray()&&(r=1===r.length?r[0]:!0),i.removeClass(d.link,a),d.group&&i.removeClass(d.group,a)),d.state!==r&&(d.state=r,r?(i.addClass(d.link,n),d.group&&i.addClass(d.group,n),d.dialog&&("object"==typeof r?d.dialog.show(r):d.dialog.hide())):(i.removeClass(d.link,n),d.group&&i.removeClass(d.group,n),d.dialog&&d.dialog.hide()));for(t in c)s=c[t],"change_view"===s.name&&(s.state=this.editor.currentView===this.editor.textarea,s.state?i.addClass(s.link,o):i.removeClass(s.link,o))},show:function(){this.container.style.display=""},hide:function(){this.container.style.display="none"}})}(wysihtml5),function(e){var a,t={name:a,style:!0,toolbar:a,autoLink:!0,parserRules:{tags:{br:{},span:{},div:{},p:{}},classes:{}},parser:e.dom.parse,composerClassName:"wysihtml5-editor",bodyClassName:"wysihtml5-supported",useLineBreaks:!0,stylesheets:[],placeholderText:a,supportTouchDevices:!0,cleanUp:!0};e.Editor=e.lang.Dispatcher.extend({constructor:function(a,n){if(this.textareaElement="string"==typeof a?document.getElementById(a):a,this.config=e.lang.object({}).merge(t).merge(n).get(),this.textarea=new e.views.Textarea(this,this.textareaElement,this.config),this.currentView=this.textarea,this._isCompatible=e.browser.supported(),!this._isCompatible||!this.config.supportTouchDevices&&e.browser.isTouchDevice()){var o=this;return setTimeout(function(){o.fire("beforeload").fire("load")},0),void 0}e.dom.addClass(document.body,this.config.bodyClassName),this.composer=new e.views.Composer(this,this.textareaElement,this.config),this.currentView=this.composer,"function"==typeof this.config.parser&&this._initParser(),this.on("beforeload",function(){this.synchronizer=new e.views.Synchronizer(this,this.textarea,this.composer),this.config.toolbar&&(this.toolbar=new e.toolbar.Toolbar(this,this.config.toolbar))});try{console.log("Heya! This page is using wysihtml5 for rich text editing. Check out https://github.com/xing/wysihtml5")}catch(i){}},isCompatible:function(){return this._isCompatible},clear:function(){return this.currentView.clear(),this},getValue:function(e){return this.currentView.getValue(e)},setValue:function(e,a){return this.fire("unset_placeholder"),e?(this.currentView.setValue(e,a),this):this.clear()},focus:function(e){return this.currentView.focus(e),this},disable:function(){return this.currentView.disable(),this},enable:function(){return this.currentView.enable(),this},isEmpty:function(){return this.currentView.isEmpty()},hasPlaceholderSet:function(){return this.currentView.hasPlaceholderSet()},parse:function(a){var t=this.config.parser(a,this.config.parserRules,this.composer.sandbox.getDocument(),this.config.cleanUp);return"object"==typeof a&&e.quirks.redraw(a),t},_initParser:function(){this.on("paste:composer",function(){var a=!0,t=this;t.composer.selection.executeAndRestore(function(){e.quirks.cleanPastedHTML(t.composer.element),t.parse(t.composer.element)},a)})}})}(wysihtml5),!function(e,a){"use strict";var t={alignment:function(){return"<li><div class='alignment'></div></li>"},font:function(){return"<li><div class='font-picker'></div></li>"},"font-size":function(){return"<li><div class='font-size-picker'></div></li>"},"line-height":function(e){return"<li><div class='line-height btn-group'><button type='button' class='btn btn-default btn-sm dropdown-toggle'data-toggle='dropdown' data-wysihtml5-command-value='1'><i class='glyphicon glyphicon-text-height'></i><span class='caret'></span></button><ul class='dropdown-menu' role='menu'><li><a data-wysihtml5-command-value='1' tabindex='-1'>"+e.line_height.single+"</a></li><li><a data-wysihtml5-command-value='1-15' tabindex='-1'>1.15</a></li><li><a data-wysihtml5-command-value='1-5' tabindex='-1'>1.5</a></li><li><a data-wysihtml5-command-value='2' tabindex='-1'>"+e.line_height.double+"</a></li></ul></div></li>"},"text-color":function(){return"<li><input class='text-color' type='color'></li>"},"highlight-color":function(){return"<li><input class='highlight-color' type='color'></li>"},"background-color":function(){return"<li><input class='background-color' type='color'></li>"},clear:function(){return"<li><a class='clear btn btn-sm btn-default' data-wysihtml5-command='clear' title='Clear' tabindex='-1'><span class='glyphicon glyphicon-file'></span></a></li>"},"font-styles":function(e,a){var t=a&&a.size?" btn-"+a.size:"";return"<li class='dropdown'><a class='btn dropdown-toggle "+t+" btn-default' data-toggle='dropdown' href='#'><i class='glyphicon glyphicon-font'></i>&nbsp;<span class='current-font'>"+e.font_styles.normal+"</span>&nbsp;<b class='caret'></b></a><ul class='dropdown-menu' role='menu'><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='div' tabindex='-1'>"+e.font_styles.normal+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h1' tabindex='-1'>"+e.font_styles.h1+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h2' tabindex='-1'>"+e.font_styles.h2+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h3' tabindex='-1'>"+e.font_styles.h3+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h4'>"+e.font_styles.h4+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h5'>"+e.font_styles.h5+"</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h6'>"+e.font_styles.h6+"</a></li></ul></li>"},emphasis:function(){return"<li><div class='emphasis'><div></li>"},lists:function(e,a){var t=a&&a.size?" btn-"+a.size:"";return"<li><div class='btn-group'><a class='btn "+t+" btn-default' data-wysihtml5-command='insertUnorderedList' title='"+e.lists.unordered+"' tabindex='-1'><i class='glyphicon glyphicon-list'></i></a><a class='btn "+t+" btn-default' data-wysihtml5-command='insertOrderedList' title='"+e.lists.ordered+"' tabindex='-1'><i class='glyphicon glyphicon-th-list'></i></a><a class='btn "+t+" btn-default' data-wysihtml5-command='Outdent' title='"+e.lists.outdent+"' tabindex='-1'><i class='glyphicon glyphicon-indent-right'></i></a><a class='btn -"+t+" btn-default' data-wysihtml5-command='Indent' title='"+e.lists.indent+"' tabindex='-1'><i class='glyphicon glyphicon-indent-left'></i></a></div></li>"},link:function(e,a){var t=a&&a.size?" btn-"+a.size:"";return"<li><div class='bootstrap-wysihtml5-insert-link-modal modal fade'><div class='modal-dialog'><div class='modal-content'><div class='modal-header'><a class='close' data-dismiss='modal'>&times;</a><h4>"+e.link.insert+"</h4></div><div class='modal-body'><input value='http://' class='bootstrap-wysihtml5-insert-link-url form-control'><label class='checkbox'> <input type='checkbox' class='bootstrap-wysihtml5-insert-link-target' checked>"+e.link.target+"</label></div><div class='modal-footer'><button class='btn btn-default' data-dismiss='modal'>"+e.link.cancel+"</button><button href='#' class='btn btn-primary' data-dismiss='modal'>"+e.link.insert+"</button></div></div></div></div><a class='btn "+t+" btn-default' data-wysihtml5-command='createLink' title='"+e.link.insert+"' tabindex='-1'><i class='glyphicon glyphicon-share'></i></a></li>"},image:function(e,a){var t=a&&a.size?" btn-"+a.size:"";return"<li><div class='bootstrap-wysihtml5-insert-image-modal modal fade'><div class='modal-dialog'><div class='modal-content'><div class='modal-header'><a class='close' data-dismiss='modal'>&times;</a><h4>"+e.image.insert+"</h4></div><div class='modal-body'><input value='http://' class='bootstrap-wysihtml5-insert-image-url form-control'></div><div class='modal-footer'><button class='btn btn-default' data-dismiss='modal'>"+e.image.cancel+"</button><button class='btn btn-primary' data-dismiss='modal'>"+e.image.insert+"</button></div></div></div></div><a class='btn "+t+" btn-default' data-wysihtml5-command='insertImage' title='"+e.image.insert+"' tabindex='-1'><i class='glyphicon glyphicon-picture'></i></a></li>"},html:function(e,a){var t=a&&a.size?" btn-"+a.size:"";return"<li><div class='btn-group'><a class='btn "+t+" btn-default' data-wysihtml5-action='change_view' title='"+e.html.edit+"' tabindex='-1'><i class='glyphicon glyphicon-pencil'></i></a></div></li>"},color:function(e,a){var t=a&&a.size?" btn-"+a.size:"";return"<li class='dropdown'><a class='btn dropdown-toggle "+t+" btn-default' data-toggle='dropdown' href='#' tabindex='-1'><span class='current-color'>"+e.colours.black+"</span>&nbsp;<b class='caret'></b></a><ul class='dropdown-menu'><li><div class='wysihtml5-colors' data-wysihtml5-command-value='black'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='black'>"+e.colours.black+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='silver'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='silver'>"+e.colours.silver+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='gray'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='gray'>"+e.colours.gray+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='maroon'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='maroon'>"+e.colours.maroon+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='red'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='red'>"+e.colours.red+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='purple'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='purple'>"+e.colours.purple+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='green'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='green'>"+e.colours.green+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='olive'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='olive'>"+e.colours.olive+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='navy'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='navy'>"+e.colours.navy+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='blue'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='blue'>"+e.colours.blue+"</a></li><li><div class='wysihtml5-colors' data-wysihtml5-command-value='orange'></div><a class='wysihtml5-colors-title' data-wysihtml5-command='foreColor' data-wysihtml5-command-value='orange'>"+e.colours.orange+"</a></li></ul></li>"}},n=function(e,a,n){return t[e](a,n)},o=function(a,n){this.el=a;var o=n||r;for(var i in o.customTemplates)t[i]=o.customTemplates[i];this.toolbar=this.createToolbar(a,o),this.editor=this.createEditor(n),window.editor=this.editor,e(window).trigger("editorLoaded"),e("iframe.wysihtml5-sandbox").each(function(a,t){e(t.contentWindow).off("focus.wysihtml5").on({"focus.wysihtml5":function(){e("li.dropdown").removeClass("open")}})})};o.prototype={constructor:o,createEditor:function(t){t=t||{},t=e.extend(!0,{},t),t.toolbar=this.toolbar[0];var n=new a.Editor(this.el[0],t);if(t&&t.events)for(var o in t.events)n.on(o,t.events[o]);return n},createToolbar:function(a,t){var o=this,i=e("<ul/>",{"class":"wysihtml5-toolbar",style:"display:none"}),d=t.locale||r.locale||"en";for(var l in r){var c=!1;void 0!==t[l]?t[l]===!0&&(c=!0):c=r[l],c===!0&&(i.append(n(l,s[d],t)),"html"===l&&this.initHtml(i),"link"===l&&this.initInsertLink(i),"image"===l&&this.initInsertImage(i),"alignment"===l&&this.initAlignment(i),"clear"===l&&this.initClear(i),"font"===l&&this.initFont(i),"font-size"===l&&this.initFontSize(i),"emphasis"===l&&this.initEmphasis(i),"text-color"===l&&this.initColorPicker(i,{elem:".text-color",type:"text",color:"#000",command:"textColor",attribute:"data-text-color"}),"highlight-color"===l&&this.initColorPicker(i,{elem:".highlight-color",type:"highlight",color:"#fff",command:"highlightColor",attribute:"data-highlight-color"}),"background-color"===l&&this.initColorPicker(i,{elem:".background-color",type:"background",color:"#fff",command:"backgroundColor",attribute:"data-background-color"}))}if(t.toolbar)for(l in t.toolbar)i.append(t.toolbar[l]);return i.find("a[data-wysihtml5-command='formatBlock']").click(function(a){var t=a.target||a.srcElement,n=e(t);o.toolbar.find(".current-font").text(n.html())}),i.find("a[data-wysihtml5-command='foreColor']").click(function(a){var t=a.target||a.srcElement,n=e(t);o.toolbar.find(".current-color").text(n.html())}),i.find(".line-height").on("shown.bs.dropdown",function(a){var t=e(a.target),n=t.find("button").data("wysihtml5-command-value");setTimeout(function(){t.find("a[data-wysihtml5-command-value='"+n+"']").focus()},0)}),i.find(".line-height a").click(function(a){var t=a.target||a.srcElement,n=e(t),r=n.data("wysihtml5-command-value");i.find(".line-height button").data("wysihtml5-command-value",r),o.editor.composer.commands.exec("lineHeight",r,[{name:"data-line-height",value:r}])}),this.el.before(i),i},initHtml:function(e){var a="a[data-wysihtml5-action='change_view']";e.find(a).click(function(){e.find("a.btn").not(a).toggleClass("disabled")})},initInsertImage:function(a){var t,n=this,o=a.find(".bootstrap-wysihtml5-insert-image-modal"),i=o.find(".bootstrap-wysihtml5-insert-image-url"),r=o.find(".btn-primary"),s=i.val(),d=function(){var e=i.val();
i.val(s),n.editor.currentView.element.focus(),t&&(n.editor.composer.selection.setBookmark(t),t=null),n.editor.composer.commands.exec("insertImage",e)};i.keypress(function(e){13==e.which&&(d(),o.modal("hide"))}),r.click(d),o.on("shown",function(){i.focus()}),o.on("hide",function(){n.editor.currentView.element.focus()}),a.find("a[data-wysihtml5-command=insertImage]").click(function(){var a=e(this).hasClass("wysihtml5-command-active");return a?!0:(n.editor.currentView.element.focus(!1),t=n.editor.composer.selection.getBookmark(),o.appendTo("body").modal("show"),o.on("click.dismiss.modal",'[data-dismiss="modal"]',function(e){e.stopPropagation()}),!1)})},initInsertLink:function(a){var t,n=this,o=a.find(".bootstrap-wysihtml5-insert-link-modal"),i=o.find(".bootstrap-wysihtml5-insert-link-url"),r=o.find(".bootstrap-wysihtml5-insert-link-target"),s=o.find(".btn-primary"),d=i.val(),l=function(){var e=i.val();i.val(d),n.editor.currentView.element.focus(),t&&(n.editor.composer.selection.setBookmark(t),t=null);var a=r.prop("checked");n.editor.composer.commands.exec("createLink",{href:e,target:a?"_blank":"_self",rel:a?"nofollow":""})};i.keypress(function(e){13==e.which&&(l(),o.modal("hide"))}),s.click(l),o.on("shown",function(){i.focus()}),o.on("hide",function(){n.editor.currentView.element.focus()}),a.find("a[data-wysihtml5-command=createLink]").click(function(){var a=e(this).hasClass("wysihtml5-command-active");return a?!0:(n.editor.currentView.element.focus(!1),t=n.editor.composer.selection.getBookmark(),o.appendTo("body").modal("show"),o.on("click.dismiss.modal",'[data-dismiss="modal"]',function(e){e.stopPropagation()}),!1)})},initAlignment:function(e){e.find(".alignment").alignment()},initClear:function(e){e.find(".clear").on("click",function(){var a=tinycolor("#fff"),t=a.toRgb();e.find(".font-picker").data("plugin_fontPicker").reset(),e.find(".font-size-picker").data("plugin_fontSizePicker").reset(),e.find(".emphasis").data("plugin_fontStyle").reset(),e.find(".alignment").data("plugin_alignment").reset(),e.find(".line-height a[data-wysihtml5-command-value='1']").trigger("click"),e.find(".text-color").spectrum("set","#000"),e.find(".highlight-color").spectrum("set","#fff"),e.find(".background-color").spectrum("set","#fff"),self.editor.composer.commands.exec("backgroundColor",t,[{name:"data-background-color",value:a.toRgbString()}])})},initFont:function(a){e(window).on("editorLoaded",function(){a.find(".font-picker").data("plugin_fontPicker").setContentDoc(self.editor.composer.iframe.contentDocument)}),a.find(".font-picker").fontPicker({}).on("standardFontSelected",function(e,a,t){self.editor.composer.commands.exec("standardFont",a,t,[{name:"data-standard-font",value:a},{name:"data-standard-font-family",value:t}]),self.editor.focus()}).on("googleFontSelected",function(e,a){self.editor.composer.commands.exec("googleFont",a,[{name:"data-google-font",value:a}]),self.editor.focus()}).on("customFontSelected",function(e,a,t){self.editor.composer.commands.exec("customFont",a,[{name:"data-custom-font",value:a},{name:"data-custom-font-url",value:t}]),self.editor.focus()})},initFontSize:function(e){e.find(".font-size-picker").fontSizePicker().on("sizeChanged",function(e,a){self.editor.composer.commands.exec("fontSize",a),self.editor.focus()})},initEmphasis:function(e){e.find(".emphasis").fontStyle()},initColorPicker:function(e,a){e.find(a.elem).spectrum({cancelText:"Cancel",chooseText:"Apply",clickoutFiresChange:!0,color:a.color,preferredFormat:"hex",showAlpha:!0,showInput:!0,type:a.type,change:function(e){var t=e.toRgb();self.editor.composer.commands.exec(a.command,t,[{name:a.attribute,value:e.toRgbString()}]),self.editor.focus()}})}};var i={resetDefaults:function(){e.fn.wysihtml5.defaultOptions=e.extend(!0,{},e.fn.wysihtml5.defaultOptionsCache)},bypassDefaults:function(a){return this.each(function(){var t=e(this);t.data("wysihtml5",new o(t,a))})},shallowExtend:function(a){var t=e.extend({},e.fn.wysihtml5.defaultOptions,a||{},e(this).data()),n=this;return i.bypassDefaults.apply(n,[t])},deepExtend:function(a){var t=e.extend(!0,{},e.fn.wysihtml5.defaultOptions,a||{}),n=this;return i.bypassDefaults.apply(n,[t])},init:function(e){var a=this;return i.shallowExtend.apply(a,[e])}};e.fn.wysihtml5=function(a){return i[a]?i[a].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof a&&a?(e.error("Method "+a+" does not exist on jQuery.wysihtml5"),void 0):i.init.apply(this,arguments)},e.fn.wysihtml5.Constructor=o;var r=e.fn.wysihtml5.defaultOptions={font:!0,"font-size":!0,emphasis:!0,alignment:!0,"line-height":!0,"highlight-color":!0,"text-color":!0,"background-color":!0,clear:!0,color:!1,"font-styles":!1,html:!1,image:!1,link:!1,lists:!1,size:"sm",events:{},parserRules:{classes:{"wysiwyg-color-silver":1,"wysiwyg-color-gray":1,"wysiwyg-color-white":1,"wysiwyg-color-maroon":1,"wysiwyg-color-red":1,"wysiwyg-color-purple":1,"wysiwyg-color-fuchsia":1,"wysiwyg-color-green":1,"wysiwyg-color-lime":1,"wysiwyg-color-olive":1,"wysiwyg-color-yellow":1,"wysiwyg-color-navy":1,"wysiwyg-color-blue":1,"wysiwyg-color-teal":1,"wysiwyg-color-aqua":1,"wysiwyg-color-orange":1,"align-left":1,"align-center":1,"align-right":1,justify:1},tags:{b:{},i:{},br:{},ol:{},ul:{},li:{},h1:{},h2:{},h3:{},h4:{},h5:{},h6:{},blockquote:{},u:1,img:{check_attributes:{width:"numbers",alt:"alt",src:"url",height:"numbers"}},a:{check_attributes:{href:"url",target:"alt",rel:"alt"}},span:1,div:1,code:1,pre:1}},stylesheets:["./css/bootstrap3-wysiwyg5-color.css"],locale:"en"};"undefined"==typeof e.fn.wysihtml5.defaultOptionsCache&&(e.fn.wysihtml5.defaultOptionsCache=e.extend(!0,{},e.fn.wysihtml5.defaultOptions));var s=e.fn.wysihtml5.locale={en:{font_styles:{normal:"Normal text",h1:"Heading 1",h2:"Heading 2",h3:"Heading 3",h4:"Heading 4",h5:"Heading 5",h6:"Heading 6"},emphasis:{bold:"Bold",italic:"Italic",underline:"Underline"},lists:{unordered:"Unordered list",ordered:"Ordered list",outdent:"Outdent",indent:"Indent"},link:{insert:"Insert link",cancel:"Cancel",target:"Open link in new window"},image:{insert:"Insert image",cancel:"Cancel"},html:{edit:"Edit HTML"},colours:{black:"Black",silver:"Silver",gray:"Grey",maroon:"Maroon",red:"Red",purple:"Purple",green:"Green",olive:"Olive",navy:"Navy",blue:"Blue",orange:"Orange"},line_height:{single:"Single","double":"Double"}}}}(window.jQuery,window.wysihtml5),!function(){"use strict";angular.module("risevision.widget.common.wysihtml5",[]).directive("wysihtml5",function(){function e(e,n){var u=null,f=null;$(n).wysihtml5({stylesheets:e.stylesheets}),o=$(".font-picker"),i=$(".background-color"),r=$(".text-color"),s=$(".highlight-color"),l=$("#editable").data("wysihtml5").editor,e.$on("loadAdditionalParams",function(e,t){m=!0,d=t,l.setValue(t.data),t.background&&(u=tinycolor(t.background),f=u.toRgb(),i.spectrum("set",u),l.composer.commands.exec("backgroundColor",f,[{name:"data-background-color",value:u.toRgbString()}])),a()}),e.$on("collectAdditionalParams",function(){u=l.composer.doc.body.getAttribute("data-background-color"),e.$parent.setAdditionalParam("data",l.getValue()),e.$parent.setAdditionalParam("background",u?u:"")}),l.on("load",function(){c=!0,t(),a()})}function a(){var e,a,t,n,i;c&&m&&$.each($("<div/>").html(d.data).find("span").addBack(),function(){t=$(this).attr("data-standard-font"),n=$(this).attr("data-google-font"),i=$(this).attr("data-custom-font"),e=$(this).attr("data-text-color"),a=$(this).attr("data-highlight-color"),t&&l.composer.commands.exec("standardFont",t,$(this).attr("data-standard-font-family")),n&&(o.data("plugin_fontPicker").addGoogleFont(n,!1),l.composer.commands.exec("googleFont",n)),i&&(RiseVision.Common.Utilities.loadCustomFont(i,$(this).attr("data-custom-font-url"),l.composer.iframe.contentDocument),l.composer.commands.exec("customFont",i,$(this).attr("data-custom-font-url"))),e&&(r.spectrum("set",e),l.composer.commands.exec("textColor",r.spectrum("get").toRgb())),a&&(s.spectrum("set",a),l.composer.commands.exec("highlightColor",s.spectrum("get").toRgb()))})}function t(){var e=null,a=null,t=!1,i=!1,d=!1,c="",m="",u="",f="",h="",p="",g=$(".emphasis"),b=$(".font-size-picker"),v=$(".alignment");$(".font-picker").on("show.bfhselectbox",function(){n()}),$(".font-size-picker, .line-height, .alignment").on("show.bs.dropdown",function(){n()}),$(".text-color, .highlight-color, .background-color").on("beforeShow",function(){n()}),$(".wysihtml5-sandbox").contents().find("body").on("click",function(){n(),e=l.composer.selection.getSelectedNode(),e&&3===e.nodeType&&(a=e.parentNode,a&&1===a.nodeType&&("body"!==a.tagName.toLowerCase()?(t="bold"===window.getComputedStyle(a,null).getPropertyValue("font-weight")?!0:!1,i="italic"===window.getComputedStyle(a,null).getPropertyValue("font-style")?!0:!1,d=-1!==window.getComputedStyle(a,null).getPropertyValue("text-decoration").indexOf("underline")?!0:!1,g.data("plugin_fontStyle").setStyles({bold:t,italic:i,underline:d}),c=window.getComputedStyle(a,null).getPropertyValue("font-family"),c&&o.data("plugin_fontPicker").setFont(c),m=window.getComputedStyle(a,null).getPropertyValue("font-size"),m&&b.data("plugin_fontSizePicker").setFontSize(m),u=window.getComputedStyle(a,null).getPropertyValue("text-align"),u=-1===$.inArray(u,["left","center","right","justify"])?"left":u,u&&v.data("plugin_alignment").setAlignment(u),f=$(a).data("line-height")?$(a).data("line-height"):1,$(".line-height button").data("wysihtml5-command-value",f),h=window.getComputedStyle(a,null).getPropertyValue("color"),p=window.getComputedStyle(a,null).getPropertyValue("background-color"),h&&r.spectrum("set",h),p&&s.spectrum("set",p)):(o.data("plugin_fontPicker").reset(),b.data("plugin_fontSizePicker").reset(),g.data("plugin_fontStyle").reset(),v.data("plugin_alignment").reset(),$(".line-height button").data("wysihtml5-command-value","1"),r.spectrum("set","#000"),s.spectrum("set","#fff"))))})}function n(){$(".open.alignment, .font-picker .open.bfh-selectbox, .font-size-picker .open.bfh-fontsizes, .open.line-height").removeClass("open"),$(".text-color").spectrum("hide"),$(".highlight-color").spectrum("hide"),$(".background-color").spectrum("hide")}var o,i,r,s,d,l=null,c=!1,m=!1;return{restrict:"A",scope:{stylesheets:"=",background:"=",data:"="},link:e}})}();var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Utilities=function(){function e(e,a){var t="font-family:"+a.font.family+"; ",n="color: "+a.color+"; ",o="font-size: "+a.size+"px; ",i="font-weight: "+(a.bold?"bold":"normal")+"; ",r="font-style: "+(a.italic?"italic":"normal")+"; ",s="text-decoration: "+(a.underline?"underline":"none")+"; ",d="background-color: "+a.highlightColor+"; ";return"."+e+" {"+t+n+o+i+r+s+d+"}"}function a(e){for(var a=document.createElement("style"),t=0,n=e.length;n>t;t++)a.appendChild(document.createTextNode(e[t]));document.head.appendChild(a)}function t(t,i){t.forEach(function(t){t.class&&t.fontSetting&&a([e(t.class,t.fontSetting)]),t.fontSetting.font.type&&("custom"===t.fontSetting.font.type&&t.fontSetting.font.family&&t.fontSetting.font.url?n(t.fontSetting.font.family,t.fontSetting.font.url,i):"google"===t.fontSetting.font.type&&t.fontSetting.font.family&&o(t.fontSetting.font.family,i))})}function n(e,a,t){var n=null,o="font-family: "+e+"; src: url('"+a+"');";t=t||document,n=t.styleSheets[0],null!==n&&n.addRule("@font-face",o)}function o(e,a){var t=document.createElement("link");a=a||document,t.setAttribute("rel","stylesheet"),t.setAttribute("type","text/css"),t.setAttribute("href","https://fonts.googleapis.com/css?family="+e),null!==t&&a.getElementsByTagName("head")[0].appendChild(t)}function i(e){for(var a=e.length,t=[],n=0;a>n;n++)t[n]=new Image,t[n].src=e[n]}function r(e){for(var a,t=window.location.search.substring(1),n=t.split("&"),o=0;o<n.length;o++)if(a=n[o].split("="),a[0]==e)return decodeURIComponent(a[1]);return""}return{getQueryParameter:r,getFontCssStyle:e,addCSSRules:a,loadFonts:t,loadCustomFont:n,loadGoogleFont:o,preloadImages:i}}(),angular.module("risevision.widget.text.config",[]).constant("stylesheets","../dist/css/editor.min.css"),angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json"),angular.module("risevision.widget.text.settings",["risevision.common.i18n","risevision.widget.text.config","risevision.widget.common","risevision.widget.common.scroll-setting","risevision.widget.common.tooltip","risevision.widget.common.widget-button-toolbar","risevision.widget.common.wysihtml5"]),angular.module("risevision.widget.text.settings").controller("textSettingsController",["$scope","stylesheets",function(e,a){e.stylesheets=[a]}]).value("defaultSettings",{params:{},additionalParams:{data:"",background:"",scroll:{}}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL3NldHRpbmdzLm1pbi5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwicnVuIiwiJHRyYW5zbGF0ZSIsImtleSIsInN0b3JhZ2VLZXkiLCJzdG9yYWdlIiwiZmFsbGJhY2tGcm9tSW5jb3JyZWN0U3RvcmFnZVZhbHVlIiwicHJlZmVycmVkIiwicHJlZmVycmVkTGFuZ3VhZ2UiLCJpc1N0cmluZyIsInVzZSIsInB1dCIsImdldCIsInByb3ZpZGVyIiwiJFNUT1JBR0VfS0VZIiwiJHByZWZlcnJlZExhbmd1YWdlIiwiJGxhbmd1YWdlS2V5QWxpYXNlcyIsIiRmYWxsYmFja0xhbmd1YWdlIiwiJGZhbGxiYWNrV2FzU3RyaW5nIiwiJHVzZXMiLCIkbmV4dExhbmciLCIkc3RvcmFnZUZhY3RvcnkiLCIkc3RvcmFnZVByZWZpeCIsIiRtaXNzaW5nVHJhbnNsYXRpb25IYW5kbGVyRmFjdG9yeSIsIiRpbnRlcnBvbGF0aW9uRmFjdG9yeSIsIiRsb2FkZXJGYWN0b3J5IiwiJGxvYWRlck9wdGlvbnMiLCIkbm90Rm91bmRJbmRpY2F0b3JMZWZ0IiwiJG5vdEZvdW5kSW5kaWNhdG9yUmlnaHQiLCJsb2FkZXJDYWNoZSIsIiR0cmFuc2xhdGlvblRhYmxlIiwiJGF2YWlsYWJsZUxhbmd1YWdlS2V5cyIsIiRzdG9yYWdlS2V5IiwiJGludGVycG9sYXRvckZhY3RvcmllcyIsIiRpbnRlcnBvbGF0aW9uU2FuaXRpemF0aW9uU3RyYXRlZ3kiLCIkY2xvYWtDbGFzc05hbWUiLCIkcG9zdENvbXBpbGluZ0VuYWJsZWQiLCJORVNURURfT0JKRUNUX0RFTElNSVRFUiIsInZlcnNpb24iLCJnZXRGaXJzdEJyb3dzZXJMYW5ndWFnZSIsImkiLCJsYW5ndWFnZSIsIm5hdiIsIndpbmRvdyIsIm5hdmlnYXRvciIsImJyb3dzZXJMYW5ndWFnZVByb3BlcnR5S2V5cyIsImlzQXJyYXkiLCJsYW5ndWFnZXMiLCJsZW5ndGgiLCJkaXNwbGF5TmFtZSIsImdldExvY2FsZSIsInNwbGl0Iiwiam9pbiIsImluZGV4T2YiLCJhcnJheSIsInNlYXJjaEVsZW1lbnQiLCJsZW4iLCJ0cmltIiwidGhpcyIsInJlcGxhY2UiLCJuZWdvdGlhdGVMb2NhbGUiLCJhdmFpbCIsImxvY2FsZSIsImxvd2VyY2FzZSIsIm4iLCJwdXNoIiwiYWxpYXMiLCJsYW5nS2V5QWxpYXMiLCJoYXNXaWxkY2FyZEtleSIsImhhc0V4YWN0S2V5IiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2xpY2UiLCJwYXJ0cyIsInRyYW5zbGF0aW9ucyIsImxhbmdLZXkiLCJ0cmFuc2xhdGlvblRhYmxlIiwiaXNPYmplY3QiLCJleHRlbmQiLCJmbGF0T2JqZWN0IiwiY2xvYWtDbGFzc05hbWUiLCJuYW1lIiwiZGF0YSIsInBhdGgiLCJyZXN1bHQiLCJwcmV2S2V5Iiwia2V5V2l0aFBhdGgiLCJrZXlXaXRoU2hvcnRQYXRoIiwidmFsIiwiY29uY2F0IiwiYWRkSW50ZXJwb2xhdGlvbiIsImZhY3RvcnkiLCJ1c2VNZXNzYWdlRm9ybWF0SW50ZXJwb2xhdGlvbiIsInVzZUludGVycG9sYXRpb24iLCJ1c2VTYW5pdGl6ZVZhbHVlU3RyYXRlZ3kiLCJ2YWx1ZSIsInNldHVwUHJlZmVycmVkTGFuZ3VhZ2UiLCJ0cmFuc2xhdGlvbk5vdEZvdW5kSW5kaWNhdG9yIiwiaW5kaWNhdG9yIiwidHJhbnNsYXRpb25Ob3RGb3VuZEluZGljYXRvckxlZnQiLCJ0cmFuc2xhdGlvbk5vdEZvdW5kSW5kaWNhdG9yUmlnaHQiLCJmYWxsYmFja0xhbmd1YWdlIiwiZmFsbGJhY2tTdGFjayIsIkVycm9yIiwidXNlVXJsTG9hZGVyIiwidXJsIiwib3B0aW9ucyIsInVzZUxvYWRlciIsInVzZVN0YXRpY0ZpbGVzTG9hZGVyIiwibG9hZGVyRmFjdG9yeSIsInVzZUxvY2FsU3RvcmFnZSIsInVzZVN0b3JhZ2UiLCJ1c2VDb29raWVTdG9yYWdlIiwic3RvcmFnZUZhY3RvcnkiLCJzdG9yYWdlUHJlZml4IiwicHJlZml4IiwidXNlTWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlckxvZyIsInVzZU1pc3NpbmdUcmFuc2xhdGlvbkhhbmRsZXIiLCJ1c2VQb3N0Q29tcGlsaW5nIiwiZGV0ZXJtaW5lUHJlZmVycmVkTGFuZ3VhZ2UiLCJmbiIsImlzRnVuY3Rpb24iLCJyZWdpc3RlckF2YWlsYWJsZUxhbmd1YWdlS2V5cyIsImxhbmd1YWdlS2V5cyIsImFsaWFzZXMiLCJ1c2VMb2FkZXJDYWNoZSIsImNhY2hlIiwidW5kZWZpbmVkIiwiJGdldCIsIiRsb2ciLCIkaW5qZWN0b3IiLCIkcm9vdFNjb3BlIiwiJHEiLCJTdG9yYWdlIiwiZmFsbGJhY2tJbmRleCIsInN0YXJ0RmFsbGJhY2tJdGVyYXRpb24iLCJkZWZhdWx0SW50ZXJwb2xhdG9yIiwicGVuZGluZ0xvYWRlciIsImludGVycG9sYXRvckhhc2hNYXAiLCJsYW5nUHJvbWlzZXMiLCJ0cmFuc2xhdGlvbklkIiwiaW50ZXJwb2xhdGVQYXJhbXMiLCJpbnRlcnBvbGF0aW9uSWQiLCJ0cmFuc2xhdGVBbGwiLCJ0cmFuc2xhdGlvbklkcyIsInJlc3VsdHMiLCJwcm9taXNlcyIsInRyYW5zbGF0ZSIsImRlZmVycmVkIiwiZGVmZXIiLCJyZWdhcmRsZXNzIiwicmVzb2x2ZSIsInRoZW4iLCJwcm9taXNlIiwiYyIsImFsbCIsImFwcGx5IiwicHJvbWlzZVRvV2FpdEZvciIsImluZGV4IiwiZGV0ZXJtaW5lVHJhbnNsYXRpb24iLCJyZWplY3QiLCJhcHBseU5vdEZvdW5kSW5kaWNhdG9ycyIsInVzZUxhbmd1YWdlIiwiJGVtaXQiLCJzZXRMb2NhbGUiLCJmb3JFYWNoIiwiaW50ZXJwb2xhdG9yIiwiaWQiLCJsb2FkQXN5bmMiLCJsb2FkZXJPcHRpb25zIiwiJGh0dHAiLCJ0YWJsZSIsImludGVycG9sYXRvckZhY3RvcnkiLCJnZXRJbnRlcnBvbGF0aW9uSWRlbnRpZmllciIsImdldFRyYW5zbGF0aW9uVGFibGUiLCJnZXRGYWxsYmFja1RyYW5zbGF0aW9uIiwiSW50ZXJwb2xhdG9yIiwiaW50ZXJwb2xhdGUiLCJnZXRGYWxsYmFja1RyYW5zbGF0aW9uSW5zdGFudCIsInRyYW5zbGF0ZUJ5SGFuZGxlciIsInJlc3VsdFN0cmluZyIsInJlc29sdmVGb3JGYWxsYmFja0xhbmd1YWdlIiwiZmFsbGJhY2tMYW5ndWFnZUluZGV4IiwicmVzb2x2ZUZvckZhbGxiYWNrTGFuZ3VhZ2VJbnN0YW50IiwiZmFsbGJhY2tUcmFuc2xhdGlvbiIsImZhbGxiYWNrVHJhbnNsYXRpb25JbnN0YW50IiwidHJhbnNsYXRpb24iLCJzdWJzdHIiLCJtaXNzaW5nVHJhbnNsYXRpb25IYW5kbGVyVHJhbnNsYXRpb24iLCJfdHJhbnNsYXRpb25JZCIsImRldGVybWluZVRyYW5zbGF0aW9uSW5zdGFudCIsInVzZUZhbGxiYWNrTGFuZ3VhZ2UiLCJsYW5nS2V5UG9zaXRpb24iLCJwcm9wb3NlZExhbmd1YWdlIiwiYWxpYXNlZEtleSIsImlzUG9zdENvbXBpbGluZ0VuYWJsZWQiLCJyZWZyZXNoIiwidGFibGVzIiwibG9hZGluZ0tleXMiLCJ0YWJsZURhdGEiLCJpbnN0YW50IiwiaXNVbmRlZmluZWQiLCJwb3NzaWJsZUxhbmdLZXlzIiwiaiIsImQiLCJwb3NzaWJsZUxhbmdLZXkiLCJ2ZXJzaW9uSW5mbyIsImVxdWFscyIsInByb2Nlc3NBc3luY1Jlc3VsdCIsIiRpbnRlcnBvbGF0ZSIsIiRsb2NhbGUiLCIkdHJhbnNsYXRlSW50ZXJwb2xhdG9yIiwiJGlkZW50aWZpZXIiLCIkc2FuaXRpemVWYWx1ZVN0cmF0ZWd5Iiwic2FuaXRpemVWYWx1ZVN0cmF0ZWdpZXMiLCJlc2NhcGVkIiwicGFyYW1zIiwiZWxlbWVudCIsInRleHQiLCJodG1sIiwic2FuaXRpemVQYXJhbXMiLCJzdHJpbmciLCJjb25zdGFudCIsImRpcmVjdGl2ZSIsIiRjb21waWxlIiwiJHBhcnNlIiwicmVzdHJpY3QiLCJzY29wZSIsImNvbXBpbGUiLCJ0RWxlbWVudCIsInRBdHRyIiwidHJhbnNsYXRlVmFsdWVzRXhpc3QiLCJ0cmFuc2xhdGVWYWx1ZXMiLCJ0cmFuc2xhdGVJbnRlcnBvbGF0aW9uIiwidHJhbnNsYXRlVmFsdWVFeGlzdCIsIm91dGVySFRNTCIsIm1hdGNoIiwiaW50ZXJwb2xhdGVSZWdFeHAiLCJzdGFydFN5bWJvbCIsImVuZFN5bWJvbCIsIndhdGNoZXJSZWdFeHAiLCJpRWxlbWVudCIsImlBdHRyIiwicHJlVGV4dCIsInBvc3RUZXh0Iiwib2JzZXJ2ZUVsZW1lbnRUcmFuc2xhdGlvbiIsImlzRGVmaW5lZCIsImludGVycG9sYXRlTWF0Y2hlcyIsIiRwYXJlbnQiLCJ3YXRjaGVyTWF0Y2hlcyIsIiR3YXRjaCIsIm5ld1ZhbHVlIiwidXBkYXRlVHJhbnNsYXRpb25zIiwib2JzZXJ2ZUF0dHJpYnV0ZVRyYW5zbGF0aW9uIiwidHJhbnNsYXRlQXR0ciIsIiRvYnNlcnZlIiwiZGVmYXVsdFRleHQiLCJvYnNlcnZlVmFsdWVBdHRyaWJ1dGUiLCJhdHRyTmFtZSIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyIiwidXBkYXRlVHJhbnNsYXRpb24iLCJhcHBseVRyYW5zbGF0aW9uIiwic3VjY2Vzc2Z1bCIsImdsb2JhbGx5RW5hYmxlZCIsImxvY2FsbHlEZWZpbmVkIiwidHJhbnNsYXRlQ29tcGlsZSIsImxvY2FsbHlFbmFibGVkIiwiY29udGVudHMiLCIkYXR0ciIsInVuYmluZCIsIiRvbiIsImFwcGx5Q2xvYWsiLCJhZGRDbGFzcyIsInJlbW92ZUNsb2FrIiwicmVtb3ZlQ2xhc3MiLCJyZW1vdmVMaXN0ZW5lciIsInRyYW5zbGF0ZUNsb2FrIiwiZmlsdGVyIiwidHJhbnNsYXRlRmlsdGVyIiwiaW50ZXJwb2xhdGlvbiIsIiRzdGF0ZWZ1bCIsInN1ZmZpeCIsIm1ldGhvZCIsInN1Y2Nlc3MiLCJlcnJvciIsImxvYWRUcmFuc2xhdGlvbkZpbGUiLCJ0b0xvd2VyQ2FzZSIsImxhc3RJbmRleE9mIiwib3B0cyIsImNvbmZpZyIsIiR0cmFuc2xhdGVQcm92aWRlciIsIkxPQ0FMRVNfUFJFRklYIiwiTE9DQUxFU19TVUZJWCIsIiQiLCJQbHVnaW4iLCJvcHRpb24iLCJlYWNoIiwiJHRoaXMiLCJBZmZpeCIsIkRFRkFVTFRTIiwiJHRhcmdldCIsInRhcmdldCIsIm9uIiwicHJveHkiLCJjaGVja1Bvc2l0aW9uIiwiY2hlY2tQb3NpdGlvbldpdGhFdmVudExvb3AiLCIkZWxlbWVudCIsImFmZml4ZWQiLCJ1bnBpbiIsInBpbm5lZE9mZnNldCIsIlZFUlNJT04iLCJSRVNFVCIsIm9mZnNldCIsImdldFBpbm5lZE9mZnNldCIsInNjcm9sbFRvcCIsInBvc2l0aW9uIiwidG9wIiwic2V0VGltZW91dCIsImlzIiwic2Nyb2xsSGVpZ2h0IiwiZG9jdW1lbnQiLCJoZWlnaHQiLCJvZmZzZXRUb3AiLCJvZmZzZXRCb3R0b20iLCJib3R0b20iLCJhZmZpeCIsImNzcyIsImFmZml4VHlwZSIsImUiLCJFdmVudCIsInRyaWdnZXIiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJvbGQiLCJDb25zdHJ1Y3RvciIsIm5vQ29uZmxpY3QiLCIkc3B5IiwialF1ZXJ5IiwiQWxlcnQiLCJkaXNtaXNzIiwiZWwiLCJjbG9zZSIsInJlbW92ZUVsZW1lbnQiLCJkZXRhY2giLCJyZW1vdmUiLCJzZWxlY3RvciIsInByZXZlbnREZWZhdWx0IiwiaGFzQ2xhc3MiLCJwYXJlbnQiLCJzdXBwb3J0IiwidHJhbnNpdGlvbiIsIm9uZSIsImVtdWxhdGVUcmFuc2l0aW9uRW5kIiwiYWxlcnQiLCJCdXR0b24iLCJ0b2dnbGUiLCJzZXRTdGF0ZSIsImlzTG9hZGluZyIsImxvYWRpbmdUZXh0Iiwic3RhdGUiLCIkZWwiLCJyZXNldFRleHQiLCJyZW1vdmVBdHRyIiwiY2hhbmdlZCIsImNsb3Nlc3QiLCIkaW5wdXQiLCJmaW5kIiwicHJvcCIsInRvZ2dsZUNsYXNzIiwiYnV0dG9uIiwiJGJ0biIsIkNhcm91c2VsIiwiYWN0aW9uIiwic2xpZGUiLCJ0byIsImludGVydmFsIiwicGF1c2UiLCJjeWNsZSIsImtleWRvd24iLCIkaW5kaWNhdG9ycyIsInBhdXNlZCIsInNsaWRpbmciLCIkYWN0aXZlIiwiJGl0ZW1zIiwid3JhcCIsIndoaWNoIiwicHJldiIsIm5leHQiLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJnZXRJdGVtSW5kZXgiLCJpdGVtIiwiY2hpbGRyZW4iLCJwb3MiLCJ0aGF0IiwiYWN0aXZlSW5kZXgiLCJlbmQiLCJ0eXBlIiwiJG5leHQiLCJpc0N5Y2xpbmciLCJkaXJlY3Rpb24iLCJmYWxsYmFjayIsInJlbGF0ZWRUYXJnZXQiLCJzbGlkZUV2ZW50IiwiJG5leHRJbmRpY2F0b3IiLCJzbGlkRXZlbnQiLCJvZmZzZXRXaWR0aCIsImNhcm91c2VsIiwiaHJlZiIsInNsaWRlSW5kZXgiLCIkY2Fyb3VzZWwiLCJDb2xsYXBzZSIsInRyYW5zaXRpb25pbmciLCJkaW1lbnNpb24iLCJoYXNXaWR0aCIsInNob3ciLCJzdGFydEV2ZW50IiwiYWN0aXZlcyIsImhhc0RhdGEiLCJjb21wbGV0ZSIsInNjcm9sbFNpemUiLCJjYW1lbENhc2UiLCJoaWRlIiwib2Zmc2V0SGVpZ2h0IiwiY29sbGFwc2UiLCJub3QiLCJjbGVhck1lbnVzIiwiYmFja2Ryb3AiLCJnZXRQYXJlbnQiLCJ0ZXN0IiwiRHJvcGRvd24iLCJpc0FjdGl2ZSIsImRvY3VtZW50RWxlbWVudCIsImluc2VydEFmdGVyIiwia2V5Q29kZSIsInN0b3BQcm9wYWdhdGlvbiIsImRlc2MiLCJlcSIsImRyb3Bkb3duIiwiVGFiIiwiJHVsIiwicHJldmlvdXMiLCJhY3RpdmF0ZSIsImNvbnRhaW5lciIsImNhbGxiYWNrIiwidGFiIiwidHJhbnNpdGlvbkVuZCIsImNyZWF0ZUVsZW1lbnQiLCJ0cmFuc0VuZEV2ZW50TmFtZXMiLCJXZWJraXRUcmFuc2l0aW9uIiwiTW96VHJhbnNpdGlvbiIsIk9UcmFuc2l0aW9uIiwic3R5bGUiLCJkdXJhdGlvbiIsImNhbGxlZCIsImV2ZW50Iiwic3BlY2lhbCIsImJzVHJhbnNpdGlvbkVuZCIsImJpbmRUeXBlIiwiZGVsZWdhdGVUeXBlIiwiaGFuZGxlIiwiaGFuZGxlT2JqIiwiaGFuZGxlciIsImFyZ3VtZW50cyIsIlNjcm9sbFNweSIsInByb2Nlc3MiLCIkYm9keSIsIiRzY3JvbGxFbGVtZW50Iiwib2Zmc2V0cyIsInRhcmdldHMiLCJhY3RpdmVUYXJnZXQiLCJnZXRTY3JvbGxIZWlnaHQiLCJNYXRoIiwibWF4Iiwib2Zmc2V0TWV0aG9kIiwib2Zmc2V0QmFzZSIsImlzV2luZG93Iiwic2VsZiIsIm1hcCIsIiRocmVmIiwic29ydCIsImEiLCJiIiwibWF4U2Nyb2xsIiwicGFyZW50c1VudGlsIiwiYWN0aXZlIiwicGFyZW50cyIsInNjcm9sbHNweSIsIl9yZWxhdGVkVGFyZ2V0IiwiTW9kYWwiLCJib2R5IiwiJGJhY2tkcm9wIiwiaXNTaG93biIsInNjcm9sbGJhcldpZHRoIiwicmVtb3RlIiwibG9hZCIsImtleWJvYXJkIiwiY2hlY2tTY3JvbGxiYXIiLCJzZXRTY3JvbGxiYXIiLCJlc2NhcGUiLCJhcHBlbmRUbyIsImVuZm9yY2VGb2N1cyIsInJlc2V0U2Nyb2xsYmFyIiwib2ZmIiwiaGlkZU1vZGFsIiwiaGFzIiwicmVtb3ZlQmFja2Ryb3AiLCJhbmltYXRlIiwiZG9BbmltYXRlIiwiY3VycmVudFRhcmdldCIsImZvY3VzIiwiY2FsbGJhY2tSZW1vdmUiLCJjbGllbnRXaWR0aCIsImlubmVyV2lkdGgiLCJtZWFzdXJlU2Nyb2xsYmFyIiwiYm9keVBhZCIsInBhcnNlSW50Iiwic2Nyb2xsRGl2IiwiY2xhc3NOYW1lIiwiYXBwZW5kIiwicmVtb3ZlQ2hpbGQiLCJtb2RhbCIsInNob3dFdmVudCIsIlRvb2x0aXAiLCJlbmFibGVkIiwidGltZW91dCIsImhvdmVyU3RhdGUiLCJpbml0IiwiYW5pbWF0aW9uIiwicGxhY2VtZW50IiwidGVtcGxhdGUiLCJ0aXRsZSIsImRlbGF5Iiwidmlld3BvcnQiLCJwYWRkaW5nIiwiZ2V0T3B0aW9ucyIsIiR2aWV3cG9ydCIsInRyaWdnZXJzIiwiZXZlbnRJbiIsImV2ZW50T3V0IiwiZW50ZXIiLCJsZWF2ZSIsIl9vcHRpb25zIiwiZml4VGl0bGUiLCJnZXREZWZhdWx0cyIsImdldERlbGVnYXRlT3B0aW9ucyIsImRlZmF1bHRzIiwib2JqIiwiY29uc3RydWN0b3IiLCJjbGVhclRpbWVvdXQiLCJoYXNDb250ZW50IiwiaW5Eb20iLCJjb250YWlucyIsIiR0aXAiLCJ0aXAiLCJ0aXBJZCIsImdldFVJRCIsInNldENvbnRlbnQiLCJhdXRvVG9rZW4iLCJhdXRvUGxhY2UiLCJsZWZ0IiwiZGlzcGxheSIsImdldFBvc2l0aW9uIiwiYWN0dWFsV2lkdGgiLCJhY3R1YWxIZWlnaHQiLCJvcmdQbGFjZW1lbnQiLCJwYXJlbnREaW0iLCJzY3JvbGwiLCJyaWdodCIsIndpZHRoIiwiY2FsY3VsYXRlZE9mZnNldCIsImdldENhbGN1bGF0ZWRPZmZzZXQiLCJhcHBseVBsYWNlbWVudCIsIm1hcmdpblRvcCIsIm1hcmdpbkxlZnQiLCJpc05hTiIsInNldE9mZnNldCIsInVzaW5nIiwicHJvcHMiLCJyb3VuZCIsImRlbHRhIiwiZ2V0Vmlld3BvcnRBZGp1c3RlZERlbHRhIiwiYXJyb3dEZWx0YSIsImFycm93UG9zaXRpb24iLCJhcnJvd09mZnNldFBvc2l0aW9uIiwicmVwbGFjZUFycm93IiwiYXJyb3ciLCJnZXRUaXRsZSIsIiRlIiwiaXNCb2R5IiwidGFnTmFtZSIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIm91dGVyV2lkdGgiLCJvdXRlckhlaWdodCIsInZpZXdwb3J0UGFkZGluZyIsInZpZXdwb3J0RGltZW5zaW9ucyIsInRvcEVkZ2VPZmZzZXQiLCJib3R0b21FZGdlT2Zmc2V0IiwibGVmdEVkZ2VPZmZzZXQiLCJyaWdodEVkZ2VPZmZzZXQiLCJvIiwicmFuZG9tIiwiZ2V0RWxlbWVudEJ5SWQiLCIkYXJyb3ciLCJ2YWxpZGF0ZSIsInBhcmVudE5vZGUiLCJlbmFibGUiLCJkaXNhYmxlIiwidG9nZ2xlRW5hYmxlZCIsImRlc3Ryb3kiLCJyZW1vdmVEYXRhIiwidG9vbHRpcCIsIlBvcG92ZXIiLCJjb250ZW50IiwiZ2V0Q29udGVudCIsImVtcHR5IiwicG9wb3ZlciIsIiR0aW1lb3V0IiwiZmluZEVuZEV2ZW50TmFtZSIsImVuZEV2ZW50TmFtZXMiLCJ0cmFuc0VsZW1lbnQiLCIkdHJhbnNpdGlvbiIsImVuZEV2ZW50TmFtZSIsInRyYW5zaXRpb25FbmRIYW5kbGVyIiwiJGFwcGx5IiwiYmluZCIsImNhbmNlbCIsInRyYW5zaXRpb25FbmRFdmVudE5hbWVzIiwiYW5pbWF0aW9uRW5kRXZlbnROYW1lcyIsInRyYW5zaXRpb25FbmRFdmVudE5hbWUiLCJhbmltYXRpb25FbmRFdmVudE5hbWUiLCJsaW5rIiwiYXR0cnMiLCJkb1RyYW5zaXRpb24iLCJjaGFuZ2UiLCJuZXdUcmFuc2l0aW9uRG9uZSIsImN1cnJlbnRUcmFuc2l0aW9uIiwibmV3VHJhbnNpdGlvbiIsImV4cGFuZCIsImluaXRpYWxBbmltU2tpcCIsImV4cGFuZERvbmUiLCJjb2xsYXBzZURvbmUiLCJzaG91bGRDb2xsYXBzZSIsImNsb3NlT3RoZXJzIiwiY29udHJvbGxlciIsIiRzY29wZSIsIiRhdHRycyIsImFjY29yZGlvbkNvbmZpZyIsImdyb3VwcyIsIm9wZW5Hcm91cCIsIiRldmFsIiwiZ3JvdXAiLCJpc09wZW4iLCJhZGRHcm91cCIsImdyb3VwU2NvcGUiLCJyZW1vdmVHcm91cCIsInNwbGljZSIsInRyYW5zY2x1ZGUiLCJ0ZW1wbGF0ZVVybCIsInJlcXVpcmUiLCJoZWFkaW5nIiwiaXNEaXNhYmxlZCIsInNldEhlYWRpbmciLCJhY2NvcmRpb25DdHJsIiwidG9nZ2xlT3BlbiIsImFjY29yZGlvbkdyb3VwQ3RybCIsImFjY29yZGlvblRyYW5zY2x1ZGUiLCJjbG9zZWFibGUiLCJiaW5kSHRtbFVuc2FmZSIsImFjdGl2ZUNsYXNzIiwidG9nZ2xlRXZlbnQiLCJidXR0b25Db25maWciLCJjdHJscyIsImJ1dHRvbnNDdHJsIiwibmdNb2RlbEN0cmwiLCIkcmVuZGVyIiwiJG1vZGVsVmFsdWUiLCJidG5SYWRpbyIsInVuY2hlY2thYmxlIiwiJHNldFZpZXdWYWx1ZSIsImdldFRydWVWYWx1ZSIsImdldENoZWNrYm94VmFsdWUiLCJidG5DaGVja2JveFRydWUiLCJnZXRGYWxzZVZhbHVlIiwiYnRuQ2hlY2tib3hGYWxzZSIsImF0dHJpYnV0ZVZhbHVlIiwiZGVmYXVsdFZhbHVlIiwicmVzdGFydFRpbWVyIiwicmVzZXRUaW1lciIsImN1cnJlbnRUaW1lb3V0IiwidGltZXJGbiIsImlzUGxheWluZyIsInNsaWRlcyIsImN1cnJlbnRJbmRleCIsImN1cnJlbnRTbGlkZSIsImRlc3Ryb3llZCIsInNlbGVjdCIsIm5leHRTbGlkZSIsImdvTmV4dCIsIm5vVHJhbnNpdGlvbiIsImVudGVyaW5nIiwibGVhdmluZyIsIiRjdXJyZW50VHJhbnNpdGlvbiIsImN1cnJlbnQiLCJ0cmFuc2l0aW9uRG9uZSIsIm5leHRJbmRleCIsImluZGV4T2ZTbGlkZSIsIm5ld0luZGV4IiwicGxheSIsIm5vUGF1c2UiLCJhZGRTbGlkZSIsInJlbW92ZVNsaWRlIiwiY2Fyb3VzZWxDdHJsIiwic2VydmljZSIsIm9yZGVyQnlGaWx0ZXIiLCJjcmVhdGVQYXJzZXIiLCJmb3JtYXQiLCJyZWdleCIsImZvcm1hdENvZGVUb1JlZ2V4IiwiY29kZSIsIlJlZ0V4cCIsImlzVmFsaWQiLCJ5ZWFyIiwibW9udGgiLCJkYXRlIiwicGFyc2VycyIsInl5eXkiLCJ5eSIsInkiLCJNTU1NIiwiREFURVRJTUVfRk9STUFUUyIsIk1PTlRIIiwiTU1NIiwiU0hPUlRNT05USCIsIk1NIiwiTSIsImRkIiwiRUVFRSIsIkRBWSIsIkVFRSIsIlNIT1JUREFZIiwicGFyc2UiLCJpbnB1dCIsInBhcnNlciIsImR0IiwiZmllbGRzIiwiaG91cnMiLCJtYXBwZXIiLCJEYXRlIiwiJGRvY3VtZW50IiwiJHdpbmRvdyIsImdldFN0eWxlIiwiY3NzcHJvcCIsImN1cnJlbnRTdHlsZSIsImdldENvbXB1dGVkU3R5bGUiLCJpc1N0YXRpY1Bvc2l0aW9uZWQiLCJwYXJlbnRPZmZzZXRFbCIsImRvY0RvbUVsIiwib2Zmc2V0UGFyZW50IiwiZWxCQ1IiLCJvZmZzZXRQYXJlbnRCQ1IiLCJvZmZzZXRQYXJlbnRFbCIsImNsaWVudFRvcCIsImNsaWVudExlZnQiLCJzY3JvbGxMZWZ0IiwiYm91bmRpbmdDbGllbnRSZWN0IiwicGFnZVlPZmZzZXQiLCJwYWdlWE9mZnNldCIsInBvc2l0aW9uRWxlbWVudHMiLCJob3N0RWwiLCJ0YXJnZXRFbCIsInBvc2l0aW9uU3RyIiwiYXBwZW5kVG9Cb2R5IiwiaG9zdEVsUG9zIiwidGFyZ2V0RWxXaWR0aCIsInRhcmdldEVsSGVpZ2h0IiwidGFyZ2V0RWxQb3MiLCJwb3NpdGlvblN0clBhcnRzIiwicG9zMCIsInBvczEiLCJzaGlmdFdpZHRoIiwiY2VudGVyIiwic2hpZnRIZWlnaHQiLCJmb3JtYXREYXkiLCJmb3JtYXRNb250aCIsImZvcm1hdFllYXIiLCJmb3JtYXREYXlIZWFkZXIiLCJmb3JtYXREYXlUaXRsZSIsImZvcm1hdE1vbnRoVGl0bGUiLCJkYXRlcGlja2VyTW9kZSIsIm1pbk1vZGUiLCJtYXhNb2RlIiwic2hvd1dlZWtzIiwic3RhcnRpbmdEYXkiLCJ5ZWFyUmFuZ2UiLCJtaW5EYXRlIiwibWF4RGF0ZSIsImRhdGVGaWx0ZXIiLCJkYXRlcGlja2VyQ29uZmlnIiwibm9vcCIsIm1vZGVzIiwicmVmcmVzaFZpZXciLCJ1bmlxdWVJZCIsIiRpZCIsImZsb29yIiwiYWN0aXZlRGF0ZSIsImluaXREYXRlIiwiZGF0ZU9iamVjdCIsImNvbXBhcmUiLCJhY3RpdmVEYXRlSWQiLCJ1aWQiLCJuZ01vZGVsQ3RybF8iLCJyZW5kZXIiLCIkc2V0VmFsaWRpdHkiLCJfcmVmcmVzaFZpZXciLCJjcmVhdGVEYXRlT2JqZWN0IiwibW9kZWwiLCJsYWJlbCIsInNlbGVjdGVkIiwiZGlzYWJsZWQiLCJkYXRlRGlzYWJsZWQiLCJtb2RlIiwiYXJyIiwic2l6ZSIsImFycmF5cyIsInNldEZ1bGxZZWFyIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJtb3ZlIiwic3RlcCIsInllYXJzIiwibW9udGhzIiwidG9nZ2xlTW9kZSIsImtleXMiLDEzLDMyLDMzLDM0LDM1LDM2LDM3LDM4LDM5LDQwLCJmb2N1c0VsZW1lbnQiLCJldnQiLCJzaGlmdEtleSIsImFsdEtleSIsImN0cmxLZXkiLCJoYW5kbGVLZXlEb3duIiwiZGF0ZXBpY2tlckN0cmwiLCJjdHJsIiwiZ2V0RGF5c0luTW9udGgiLCJEQVlTX0lOX01PTlRIIiwiZ2V0RGF0ZXMiLCJzdGFydERhdGUiLCJkYXRlcyIsIkFycmF5Iiwic2V0SG91cnMiLCJzZXREYXRlIiwiZ2V0SVNPODYwMVdlZWtOdW1iZXIiLCJjaGVja0RhdGUiLCJnZXREYXkiLCJ0aW1lIiwiZ2V0VGltZSIsInNldE1vbnRoIiwiZmlyc3REYXlPZk1vbnRoIiwiZGlmZmVyZW5jZSIsIm51bURpc3BsYXllZEZyb21QcmV2aW91c01vbnRoIiwiZmlyc3REYXRlIiwiZGF5cyIsInNlY29uZGFyeSIsImxhYmVscyIsImFiYnIiLCJmdWxsIiwicm93cyIsIndlZWtOdW1iZXJzIiwid2Vla051bWJlciIsIm51bVdlZWtzIiwiZGF0ZTEiLCJkYXRlMiIsIm1pbiIsImdldFN0YXJ0aW5nWWVhciIsInJhbmdlIiwic3RhcnQiLCJkYXRlcGlja2VyUG9wdXAiLCJjdXJyZW50VGV4dCIsImNsZWFyVGV4dCIsImNsb3NlVGV4dCIsImNsb3NlT25EYXRlU2VsZWN0aW9uIiwic2hvd0J1dHRvbkJhciIsIiRwb3NpdGlvbiIsImRhdGVQYXJzZXIiLCJkYXRlcGlja2VyUG9wdXBDb25maWciLCJuZ01vZGVsIiwiY2FtZWx0b0Rhc2giLCIkMSIsInBhcnNlRGF0ZSIsInZpZXdWYWx1ZSIsImlzRGF0ZSIsImRhdGVGb3JtYXQiLCJkYXRlcGlja2VyQXBwZW5kVG9Cb2R5IiwiZ2V0VGV4dCIsInBvcHVwRWwiLCJuZy1tb2RlbCIsIm5nLWNoYW5nZSIsImRhdGVwaWNrZXJFbCIsImRhdGVwaWNrZXJPcHRpb25zIiwid2F0Y2hEYXRhIiwiZ2V0QXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwiYXNzaWduIiwib2xkdmFsdWUiLCIkcGFyc2VycyIsInVuc2hpZnQiLCJkYXRlU2VsZWN0aW9uIiwiJHZpZXdWYWx1ZSIsImRvY3VtZW50Q2xpY2tCaW5kIiwiJGJyb2FkY2FzdCIsInRvZGF5IiwiJHBvcHVwIiwiYWZ0ZXIiLCJvcGVuQ2xhc3MiLCJvcGVuU2NvcGUiLCJvcGVuIiwiZHJvcGRvd25TY29wZSIsImNsb3NlRHJvcGRvd24iLCJlc2NhcGVLZXlCaW5kIiwidG9nZ2xlRWxlbWVudCIsImdldFRvZ2dsZUVsZW1lbnQiLCJmb2N1c1RvZ2dsZUVsZW1lbnQiLCJkcm9wZG93bkNvbmZpZyIsImRyb3Bkb3duU2VydmljZSIsIiRhbmltYXRlIiwiZ2V0SXNPcGVuIiwiJG5ldyIsInNldElzT3BlbiIsInRvZ2dsZUludm9rZXIiLCJvblRvZ2dsZSIsIndhc09wZW4iLCIkZGVzdHJveSIsImRyb3Bkb3duQ3RybCIsInRvZ2dsZURyb3Bkb3duIiwiYXJpYS1oYXNwb3B1cCIsImFyaWEtZXhwYW5kZWQiLCJjcmVhdGVOZXciLCJzdGFjayIsImFkZCIsImlkeCIsInJlbW92ZVRvcCIsImJhY2tkcm9wQ2xhc3MiLCIkbW9kYWxTdGFjayIsInRBdHRycyIsIndpbmRvd0NsYXNzIiwicXVlcnlTZWxlY3RvckFsbCIsImdldFRvcCIsIiR0cmFuc2NsdWRlIiwiY2xvbmUiLCIkJHN0YWNrZWRNYXAiLCJiYWNrZHJvcEluZGV4IiwidG9wQmFja2Ryb3BJbmRleCIsIm9wZW5lZCIsIm9wZW5lZFdpbmRvd3MiLCJyZW1vdmVNb2RhbFdpbmRvdyIsIm1vZGFsSW5zdGFuY2UiLCJtb2RhbFdpbmRvdyIsInJlbW92ZUFmdGVyQW5pbWF0ZSIsIm1vZGFsRG9tRWwiLCJtb2RhbFNjb3BlIiwiT1BFTkVEX01PREFMX0NMQVNTIiwiY2hlY2tSZW1vdmVCYWNrZHJvcCIsImJhY2tkcm9wRG9tRWwiLCJiYWNrZHJvcFNjb3BlUmVmIiwiYmFja2Ryb3BTY29wZSIsImRvbUVsIiwiZW11bGF0ZVRpbWUiLCJkb25lIiwiYWZ0ZXJBbmltYXRpbmciLCJuZXdCYWNrZHJvcEluZGV4IiwiY3VyckJhY2tkcm9wSW5kZXgiLCJhbmd1bGFyQmFja2dyb3VuZERvbUVsIiwiYW5ndWxhckRvbUVsIiwidGVtcGxhdGUtdXJsIiwid2luZG93VGVtcGxhdGVVcmwiLCJ3aW5kb3ctY2xhc3MiLCJyZWFzb24iLCJkaXNtaXNzQWxsIiwidG9wTW9kYWwiLCIkbW9kYWxQcm92aWRlciIsIiR0ZW1wbGF0ZUNhY2hlIiwiJGNvbnRyb2xsZXIiLCJnZXRUZW1wbGF0ZVByb21pc2UiLCJ3aGVuIiwiZ2V0UmVzb2x2ZVByb21pc2VzIiwicmVzb2x2ZXMiLCJwcm9taXNlc0FyciIsImludm9rZSIsIiRtb2RhbCIsIm1vZGFsT3B0aW9ucyIsIm1vZGFsUmVzdWx0RGVmZXJyZWQiLCJtb2RhbE9wZW5lZERlZmVycmVkIiwidGVtcGxhdGVBbmRSZXNvbHZlUHJvbWlzZSIsInRwbEFuZFZhcnMiLCIkY2xvc2UiLCIkZGlzbWlzcyIsImN0cmxJbnN0YW5jZSIsImN0cmxMb2NhbHMiLCJyZXNvbHZlSXRlciIsIiRtb2RhbEluc3RhbmNlIiwiY29udHJvbGxlckFzIiwic2V0TnVtUGFnZXMiLCJudW1QYWdlcyIsIml0ZW1zUGVyUGFnZSIsInRvdGFsUGFnZXMiLCJjYWxjdWxhdGVUb3RhbFBhZ2VzIiwiY2VpbCIsInRvdGFsSXRlbXMiLCJwYWdlIiwic2VsZWN0UGFnZSIsIm5vUHJldmlvdXMiLCJub05leHQiLCJib3VuZGFyeUxpbmtzIiwiZGlyZWN0aW9uTGlua3MiLCJmaXJzdFRleHQiLCJwcmV2aW91c1RleHQiLCJuZXh0VGV4dCIsImxhc3RUZXh0Iiwicm90YXRlIiwicGFnaW5hdGlvbkNvbmZpZyIsIm1ha2VQYWdlIiwibnVtYmVyIiwiZ2V0UGFnZXMiLCJjdXJyZW50UGFnZSIsInBhZ2VzIiwic3RhcnRQYWdlIiwiZW5kUGFnZSIsImlzTWF4U2l6ZWQiLCJtYXhTaXplIiwicHJldmlvdXNQYWdlU2V0IiwibmV4dFBhZ2VTZXQiLCJwYWdpbmF0aW9uQ3RybCIsIm9yaWdpbmFsUmVuZGVyIiwiYWxpZ24iLCJwYWdlckNvbmZpZyIsInNuYWtlX2Nhc2UiLCJyZWdleHAiLCJzZXBhcmF0b3IiLCJsZXR0ZXIiLCJkZWZhdWx0T3B0aW9ucyIsInBvcHVwRGVsYXkiLCJ0cmlnZ2VyTWFwIiwibW91c2VlbnRlciIsImNsaWNrIiwiZ2xvYmFsT3B0aW9ucyIsInNldFRyaWdnZXJzIiwiZGVmYXVsdFRyaWdnZXJTaG93IiwiZ2V0VHJpZ2dlcnMiLCJkaXJlY3RpdmVOYW1lIiwic3RhcnRTeW0iLCJlbmRTeW0iLCJ0b29sdGlwTGlua2VyIiwidG9nZ2xlVG9vbHRpcEJpbmQiLCJ0dF9pc09wZW4iLCJoaWRlVG9vbHRpcEJpbmQiLCJzaG93VG9vbHRpcEJpbmQiLCJoYXNFbmFibGVFeHAiLCJ0dF9wb3B1cERlbGF5IiwicG9wdXBUaW1lb3V0IiwicmVwb3NpdGlvbiIsInRyYW5zaXRpb25UaW1lb3V0IiwidHRfY29udGVudCIsImNyZWF0ZVRvb2x0aXAiLCJwb3NpdGlvblRvb2x0aXAiLCIkZGlnZXN0IiwidHRfYW5pbWF0aW9uIiwicmVtb3ZlVG9vbHRpcCIsInR0UG9zaXRpb24iLCJ0dF9wbGFjZW1lbnQiLCJ0dF90aXRsZSIsInVucmVnaXN0ZXJUcmlnZ2VycyIsIiR0b29sdGlwIiwicHJvZ3Jlc3NDb25maWciLCJiYXJzIiwiYWRkQmFyIiwiYmFyIiwicGVyY2VudCIsInRvRml4ZWQiLCJyZW1vdmVCYXIiLCJwcm9ncmVzc0N0cmwiLCJzdGF0ZU9uIiwic3RhdGVPZmYiLCJyYXRpbmdDb25maWciLCJyYXRpbmdTdGF0ZXMiLCJidWlsZFRlbXBsYXRlT2JqZWN0cyIsInN0YXRlcyIsInJhdGUiLCJyZWFkb25seSIsIm9uSG92ZXIiLCJyZXNldCIsIm9uTGVhdmUiLCJvbktleWRvd24iLCJyYXRpbmdDdHJsIiwidGFicyIsInNlbGVjdGVkVGFiIiwib25EZXNlbGVjdCIsIm9uU2VsZWN0IiwiYWRkVGFiIiwicmVtb3ZlVGFiIiwibmV3QWN0aXZlSW5kZXgiLCJ2ZXJ0aWNhbCIsImp1c3RpZmllZCIsImVsbSIsInRhYnNldEN0cmwiLCIkdHJhbnNjbHVkZUZuIiwiaXNUYWJIZWFkaW5nIiwibm9kZSIsImhhc0F0dHJpYnV0ZSIsInRhYkNvbnRlbnRUcmFuc2NsdWRlIiwiaGVhZGluZ0VsZW1lbnQiLCJob3VyU3RlcCIsIm1pbnV0ZVN0ZXAiLCJzaG93TWVyaWRpYW4iLCJtZXJpZGlhbnMiLCJyZWFkb25seUlucHV0IiwibW91c2V3aGVlbCIsInRpbWVwaWNrZXJDb25maWciLCJnZXRIb3Vyc0Zyb21UZW1wbGF0ZSIsInZhbGlkIiwibWVyaWRpYW4iLCJnZXRNaW51dGVzRnJvbVRlbXBsYXRlIiwibWludXRlcyIsInBhZCIsInRvU3RyaW5nIiwia2V5Ym9hcmRDaGFuZ2UiLCJtYWtlVmFsaWQiLCJ1cGRhdGVUZW1wbGF0ZSIsImludmFsaWRIb3VycyIsImludmFsaWRNaW51dGVzIiwiZ2V0SG91cnMiLCJnZXRNaW51dGVzIiwiYWRkTWludXRlcyIsIkFNUE1TIiwiaW5wdXRzIiwiaG91cnNJbnB1dEVsIiwibWludXRlc0lucHV0RWwiLCJzZXR1cE1vdXNld2hlZWxFdmVudHMiLCJzZXR1cElucHV0RXZlbnRzIiwiJGVycm9yIiwiaXNTY3JvbGxpbmdVcCIsIm9yaWdpbmFsRXZlbnQiLCJ3aGVlbERlbHRhIiwiZGVsdGFZIiwiZGV0YWlsIiwiaW5jcmVtZW50SG91cnMiLCJkZWNyZW1lbnRIb3VycyIsImluY3JlbWVudE1pbnV0ZXMiLCJkZWNyZW1lbnRNaW51dGVzIiwidXBkYXRlSG91cnMiLCJ1cGRhdGVNaW51dGVzIiwiaW52YWxpZGF0ZSIsInNldE1pbnV0ZXMiLCJ0b2dnbGVNZXJpZGlhbiIsInRpbWVwaWNrZXJDdHJsIiwiVFlQRUFIRUFEX1JFR0VYUCIsIml0ZW1OYW1lIiwic291cmNlIiwidmlld01hcHBlciIsIm1vZGVsTWFwcGVyIiwidHlwZWFoZWFkUGFyc2VyIiwiSE9UX0tFWVMiLCJvcmlnaW5hbFNjb3BlIiwibW9kZWxDdHJsIiwiaGFzRm9jdXMiLCJtaW5TZWFyY2giLCJ0eXBlYWhlYWRNaW5MZW5ndGgiLCJ3YWl0VGltZSIsInR5cGVhaGVhZFdhaXRNcyIsImlzRWRpdGFibGUiLCJ0eXBlYWhlYWRFZGl0YWJsZSIsImlzTG9hZGluZ1NldHRlciIsInR5cGVhaGVhZExvYWRpbmciLCJvblNlbGVjdENhbGxiYWNrIiwidHlwZWFoZWFkT25TZWxlY3QiLCJpbnB1dEZvcm1hdHRlciIsInR5cGVhaGVhZElucHV0Rm9ybWF0dGVyIiwidHlwZWFoZWFkQXBwZW5kVG9Cb2R5IiwiJHNldE1vZGVsVmFsdWUiLCJwYXJzZXJSZXN1bHQiLCJ0eXBlYWhlYWQiLCJwb3B1cElkIiwiYXJpYS1hdXRvY29tcGxldGUiLCJhcmlhLW93bnMiLCJwb3BVcEVsIiwibWF0Y2hlcyIsInF1ZXJ5IiwidHlwZWFoZWFkVGVtcGxhdGVVcmwiLCJyZXNldE1hdGNoZXMiLCJhY3RpdmVJZHgiLCJnZXRNYXRjaElkIiwiZ2V0TWF0Y2hlc0FzeW5jIiwiaW5wdXRWYWx1ZSIsImxvY2FscyIsIm9uQ3VycmVudFJlcXVlc3QiLCJ0aW1lb3V0UHJvbWlzZSIsInNjaGVkdWxlU2VhcmNoV2l0aFRpbWVvdXQiLCJjYW5jZWxQcmV2aW91c1RpbWVvdXQiLCIkZm9ybWF0dGVycyIsIm1vZGVsVmFsdWUiLCJjYW5kaWRhdGVWaWV3VmFsdWUiLCJlbXB0eVZpZXdWYWx1ZSIsIiRpdGVtIiwiJG1vZGVsIiwiJGxhYmVsIiwiZGlzbWlzc0NsaWNrSGFuZGxlciIsIm1hdGNoSWR4Iiwic2VsZWN0QWN0aXZlIiwic2VsZWN0TWF0Y2giLCJ0cGxVcmwiLCJ0cGxDb250ZW50IiwicmVwbGFjZVdpdGgiLCJlc2NhcGVSZWdleHAiLCJxdWVyeVRvRXNjYXBlIiwibWF0Y2hJdGVtIiwiQkZIQ291bnRyaWVzTGlzdCIsIkFGIiwiQUwiLCJEWiIsIkFTIiwiQUQiLCJBTyIsIkFJIiwiQVEiLCJBRyIsIkFSIiwiQU0iLCJBVyIsIkFVIiwiQVQiLCJBWiIsIkJIIiwiQkQiLCJCQiIsIkJZIiwiQkUiLCJCWiIsIkJKIiwiQk0iLCJCVCIsIkJPIiwiQkEiLCJCVyIsIkJWIiwiQlIiLCJJTyIsIlZHIiwiQk4iLCJCRyIsIkJGIiwiQkkiLCJDSSIsIktIIiwiQ00iLCJDQSIsIkNWIiwiS1kiLCJDRiIsIlREIiwiQ0wiLCJDTiIsIkNYIiwiQ0MiLCJDTyIsIktNIiwiQ0ciLCJDSyIsIkNSIiwiSFIiLCJDVSIsIkNZIiwiQ1oiLCJDRCIsIkRLIiwiREoiLCJETSIsIkRPIiwiVFAiLCJFQyIsIkVHIiwiU1YiLCJHUSIsIkVSIiwiRUUiLCJFVCIsIkZPIiwiRksiLCJGSiIsIkZJIiwiTUsiLCJGUiIsIkZYIiwiR0YiLCJQRiIsIlRGIiwiR0EiLCJHRSIsIkRFIiwiR0giLCJHSSIsIkdSIiwiR0wiLCJHRCIsIkdQIiwiR1UiLCJHVCIsIkdOIiwiR1ciLCJHWSIsIkhUIiwiSE0iLCJITiIsIkhLIiwiSFUiLCJJUyIsIklOIiwiSUQiLCJJUiIsIklRIiwiSUUiLCJJTCIsIklUIiwiSk0iLCJKUCIsIkpPIiwiS1oiLCJLRSIsIktJIiwiS1ciLCJLRyIsIkxBIiwiTFYiLCJMQiIsIkxTIiwiTFIiLCJMWSIsIkxJIiwiTFQiLCJMVSIsIk1PIiwiTUciLCJNVyIsIk1ZIiwiTVYiLCJNTCIsIk1UIiwiTUgiLCJNUSIsIk1SIiwiTVUiLCJZVCIsIk1YIiwiRk0iLCJNRCIsIk1DIiwiTU4iLCJNRSIsIk1TIiwiTUEiLCJNWiIsIk5BIiwiTlIiLCJOUCIsIk5MIiwiQU4iLCJOQyIsIk5aIiwiTkkiLCJORSIsIk5HIiwiTlUiLCJORiIsIktQIiwiTVAiLCJOTyIsIk9NIiwiUEsiLCJQVyIsIlBTIiwiUEEiLCJQRyIsIlBZIiwiUEUiLCJQSCIsIlBOIiwiUEwiLCJQVCIsIlBSIiwiUUEiLCJSRSIsIlJPIiwiUlUiLCJSVyIsIlNUIiwiU0giLCJQTSIsIktOIiwiTEMiLCJWQyIsIldTIiwiU00iLCJTQSIsIlNOIiwiUlMiLCJTQyIsIlNMIiwiU0ciLCJTSyIsIlNJIiwiU0IiLCJTTyIsIlpBIiwiR1MiLCJLUiIsIkVTIiwiTEsiLCJTRCIsIlNSIiwiU0oiLCJTWiIsIlNFIiwiQ0giLCJTWSIsIlRXIiwiVEoiLCJUWiIsIlRIIiwiQlMiLCJHTSIsIlRHIiwiVEsiLCJUTyIsIlRUIiwiVE4iLCJUUiIsIlRNIiwiVEMiLCJUViIsIlZJIiwiVUciLCJVQSIsIkFFIiwiR0IiLCJVUyIsIlVNIiwiVVkiLCJVWiIsIlZVIiwiVkEiLCJWRSIsIlZOIiwiV0YiLCJFSCIsIllFIiwiWk0iLCJaVyIsIkJGSEN1cnJlbmNpZXNMaXN0IiwiQUVEIiwiY3VycmVuY3lmbGFnIiwic3ltYm9sIiwiQUZOIiwiQUxMIiwiQU1EIiwiQU9BIiwiQVJTIiwiQVVEIiwiQVdHIiwiQVpOIiwiQkFNIiwiQkJEIiwiQkRUIiwiQkdOIiwiQkhEIiwiQklGIiwiQk1EIiwiQk5EIiwiQk9CIiwiQlJMIiwiQlNEIiwiQlROIiwiQldQIiwiQllSIiwiQlpEIiwiQ0FEIiwiQ0RGIiwiQ0hGIiwiQ0xQIiwiQ05ZIiwiQ09QIiwiQ1JDIiwiQ1VQIiwiQ1ZFIiwiQ1pLIiwiREpGIiwiREtLIiwiRE9QIiwiRFpEIiwiRUdQIiwiRVJOIiwiRVRCIiwiRVVSIiwiRkpEIiwiRktQIiwiR0JQIiwiR0VMIiwiR0hTIiwiR01EIiwiR05GIiwiR1RRIiwiR1lEIiwiSEtEIiwiSE5MIiwiSFJLIiwiSFRHIiwiSFVGIiwiSURSIiwiSUxTIiwiSU1QIiwiSU5SIiwiSVFEIiwiSVJSIiwiSVNLIiwiSkVQIiwiSk1EIiwiSk9EIiwiSlBZIiwiS0VTIiwiS0dTIiwiS0hSIiwiS01GIiwiS1BXIiwiS1JXIiwiS1dEIiwiS1lEIiwiS1pUIiwiTEFLIiwiTEJQIiwiTEtSIiwiTFJEIiwiTFNMIiwiTFRMIiwiTFZMIiwiTFlEIiwiTUFEIiwiTURMIiwiTUdBIiwiTUtEIiwiTU1LIiwiTU5UIiwiTU9QIiwiTVJPIiwiTVVSIiwiTVZSIiwiTVdLIiwiTVhOIiwiTVlSIiwiTVpOIiwiTkFEIiwiTkdOIiwiTklPIiwiTk9LIiwiTlBSIiwiTlpEIiwiT01SIiwiUEFCIiwiUEVOIiwiUEdLIiwiUEhQIiwiUEtSIiwiUExOIiwiUFJCIiwiUFlHIiwiUUFSIiwiUk9OIiwiUlNEIiwiUlVCIiwiUldGIiwiU0FSIiwiU0JEIiwiU0NSIiwiU0RHIiwiU0VLIiwiU0dEIiwiU0hQIiwiU0xMIiwiU09TIiwiU1JEIiwiU1NQIiwiU1REIiwiU1ZDIiwiU1lQIiwiU1pMIiwiVEhCIiwiVEpTIiwiVE1UIiwiVE5EIiwiVE9QIiwiVFJZIiwiVFREIiwiVFdEIiwiVFpTIiwiVUFIIiwiVUdYIiwiVVNEIiwiVVlVIiwiVVpTIiwiVkVGIiwiVk5EIiwiVlVWIiwiV1NUIiwiWEFGIiwiWENEIiwiWE9GIiwiWFBGIiwiWUVSIiwiWkFSIiwiWk1XIiwiWldMIiwiQkZITW9udGhzTGlzdCIsIkJGSERheXNMaXN0IiwiQkZIRGF5T2ZXZWVrU3RhcnQiLCJCRkhGb250c0xpc3QiLCJBbmRhbGUgTW9ubyIsIkFyaWFsIiwiQXJpYWwgQmxhY2siLCJBcmlhbCBOYXJyb3ciLCJBcmlhbCBSb3VuZGVkIE1UIEJvbGQiLCJBdmFudCBHYXJkZSIsIkJhc2tlcnZpbGxlIiwiQmlnIENhc2xvbiIsIkJvZG9uaSBNVCIsIkJvb2sgQW50aXF1YSIsIkJydXNoIFNjcmlwdCBNVCIsIkNhbGlicmkiLCJDYWxpc3RvIE1UIiwiQ2FtYnJpbyIsIkNhbmRhcmEiLCJDZW50dXJ5IEdvdGhpYyIsIkNvbnNvbGFzIiwiQ29wcGVycGxhdGUiLCJDb3VyaWVyIE5ldyIsIkRpZG90IiwiRnJhbmtsaW4gR290aGljIE1lZGl1bSIsIkZ1dHVyYSIsIkdhcmFtb25kIiwiR2VuZXZhIiwiR2VvcmdpYSIsIkdpbGwgU2FucyIsIkdvdWR5IE9sZCBTdHlsZSIsIkhlbHZldGljYSIsIkhvZWZsZXIgVGV4dCIsIkltcGFjdCIsIkx1Y2lkYSBCcmlnaHQiLCJMdWNpZGEgQ29uc29sZSIsIkx1Y2lkYSBTYW5zIFR5cGV3cml0ZXIiLCJMdWNpZGEgR3JhbmRlIiwiTW9uYWNvIiwiT3B0aW1hIiwiUGFsYXRpbm8iLCJQYXB5cnVzIiwiUGVycGV0dWEiLCJSb2Nrd2VsbCIsIlJvY2t3ZWxsIEV4dHJhIEJvbGQiLCJTZWdvZSBVSSIsIlRhaG9tYSIsIlRpbWVzIE5ldyBSb21hbiIsIlRyZWJ1Y2hldCBNUyIsIlZlcmRhbmEiLCJCRkhGb250U2l6ZXNMaXN0Iiw4LDksMTAsMTEsMTIsMTQsMTgsMjQsMzAsNDgsNjAsNzIsOTYsIkJGSEdvb2dsZUZvbnRzTGlzdCIsImtpbmQiLCJpdGVtcyIsImZhbWlseSIsInZhcmlhbnRzIiwic3Vic2V0cyIsIkJGSExhbmd1YWdlc0xpc3QiLCJvbSIsImFhIiwiYWYiLCJhayIsImFuIiwiaWciLCJnbiIsImFlIiwiYXkiLCJheiIsIm1zIiwiYm0iLCJqdiIsInN1IiwiYmkiLCJicyIsImJyIiwiY2EiLCJjaCIsIm55Iiwic24iLCJjbyIsImN5IiwiZGEiLCJzZSIsImRlIiwibnYiLCJldCIsIm5hIiwiZW4iLCJlcyIsImVvIiwiZXUiLCJlZSIsIm1nIiwiZnIiLCJmeSIsImZmIiwiZm8iLCJnYSIsImd2Iiwic20iLCJnbCIsInNxIiwiZ2QiLCJraSIsImhhIiwiaG8iLCJociIsImlvIiwicnciLCJybiIsImlhIiwibmQiLCJuciIsInhoIiwienUiLCJpdCIsImlrIiwicGwiLCJtaCIsImtsIiwia3IiLCJrdyIsImtnIiwic3ciLCJodCIsImtqIiwia3UiLCJsYSIsImx2IiwibHQiLCJybyIsImxpIiwibG4iLCJsZyIsImxiIiwiaHUiLCJtdCIsIm5sIiwibm8iLCJuYiIsIm5uIiwidXoiLCJvYyIsImllIiwiaHoiLCJuZyIsInB0IiwidHkiLCJybSIsInF1Iiwic2MiLCJ6YSIsInN0IiwidG4iLCJzcyIsInNsIiwic2siLCJzbyIsImZpIiwic3YiLCJtaSIsInZpIiwibHUiLCJ2ZSIsInR3IiwidGsiLCJ0ciIsInVnIiwidm8iLCJmaiIsIndhIiwidGwiLCJ3byIsInRzIiwieW8iLCJzZyIsImNzIiwiYXYiLCJhYiIsImJhIiwiYmUiLCJiZyIsIm9zIiwia3YiLCJreSIsIm1rIiwibW4iLCJjZSIsInJ1Iiwic3IiLCJ0dCIsInRnIiwidWsiLCJjdiIsImN1Iiwia2siLCJoeSIsInlpIiwiaGUiLCJ1ciIsImFyIiwiZmEiLCJwcyIsImtzIiwibmUiLCJwaSIsImJoIiwibXIiLCJzYSIsInNkIiwiaGkiLCJhcyIsImJuIiwicGEiLCJndSIsIm9yIiwidGEiLCJ0ZSIsImtuIiwibWwiLCJzaSIsInRoIiwibG8iLCJibyIsImR6IiwibXkiLCJrYSIsInRpIiwiYW0iLCJpdSIsIm9qIiwiY3IiLCJrbSIsInpoIiwiamEiLCJpaSIsImtvIiwiQkZIUGhvbmVGb3JtYXRMaXN0IiwiVEwiLCJZVSIsIkJGSFN0YXRlc0xpc3QiLCIxIiwiMiIsIjMiLCI0IiwiNSIsIjYiLCI3IiwiMTUiLCIxNiIsIjE3IiwiMTkiLCIyMCIsIjIxIiwiMjIiLCIyMyIsIjI1IiwiMjYiLCIyNyIsIjI4IiwiMjkiLCIzMSIsIjQxIiwiNDIiLCI0MyIsIjQ0IiwiNDUiLCI0NiIsIjQ3IiwiNDkiLCI1MCIsIjUxIiwiNTIiLCI1MyIsIjU0IiwiNTUiLCI1NiIsIjU3IiwiNTgiLCI1OSIsIjYxIiwiNjIiLCI2MyIsIjY0IiwiNjUiLCI2NiIsIjY3IiwiNjgiLCI2OSIsIjcwIiwiNzEiLCI3MyIsIjc0IiwiNzUiLCI3NiIsIjc3IiwiNzgiLCI3OSIsIjgwIiwiODEiLCI4MiIsIjgzIiwiODQiLCI4NSIsIjg2IiwiODciLCI4OCIsIjg5IiwiOTAiLCI5MSIsIjkyIiwiOTMiLCI5NCIsIjk1IiwiOTciLCI5OCIsIjk5IiwiMTAwIiwiMTAxIiwiMTAyIiwiMTAzIiwiMTA0IiwiMTA1IiwiMTA2IiwiMTA3IiwiMTA4IiwiMTA5IiwiMTEwIiwiWlIiLCJCRkhUaW1lUGlja2VyRGVsaW1pdGVyIiwiQkZIVGltZVBpY2tlck1vZGVzIiwicG0iLCJCRkhUaW1lem9uZXNMaXN0IiwiQXNpYS9LYWJ1bCIsIkV1cm9wZS9UaXJhbmUiLCJBZnJpY2EvQWxnaWVycyIsIlBhY2lmaWMvUGFnb19QYWdvIiwiRXVyb3BlL0FuZG9ycmEiLCJBZnJpY2EvTHVhbmRhIiwiQW1lcmljYS9Bbmd1aWxsYSIsIkFudGFyY3RpY2EvQ2FzZXkiLCJBbnRhcmN0aWNhL0RhdmlzIiwiQW50YXJjdGljYS9EdW1vbnREVXJ2aWxsZSIsIkFudGFyY3RpY2EvTWFjcXVhcmllIiwiQW50YXJjdGljYS9NYXdzb24iLCJBbnRhcmN0aWNhL01jTXVyZG8iLCJBbnRhcmN0aWNhL1BhbG1lciIsIkFudGFyY3RpY2EvUm90aGVyYSIsIkFudGFyY3RpY2EvU291dGhfUG9sZSIsIkFudGFyY3RpY2EvU3lvd2EiLCJBbnRhcmN0aWNhL1Zvc3RvayIsIkFtZXJpY2EvQW50aWd1YSIsIkFtZXJpY2EvQXJnZW50aW5hL0J1ZW5vc19BaXJlcyIsIkFtZXJpY2EvQXJnZW50aW5hL0NhdGFtYXJjYSIsIkFtZXJpY2EvQXJnZW50aW5hL0NvcmRvYmEiLCJBbWVyaWNhL0FyZ2VudGluYS9KdWp1eSIsIkFtZXJpY2EvQXJnZW50aW5hL0xhX1Jpb2phIiwiQW1lcmljYS9BcmdlbnRpbmEvTWVuZG96YSIsIkFtZXJpY2EvQXJnZW50aW5hL1Jpb19HYWxsZWdvcyIsIkFtZXJpY2EvQXJnZW50aW5hL1NhbHRhIiwiQW1lcmljYS9BcmdlbnRpbmEvU2FuX0p1YW4iLCJBbWVyaWNhL0FyZ2VudGluYS9TYW5fTHVpcyIsIkFtZXJpY2EvQXJnZW50aW5hL1R1Y3VtYW4iLCJBbWVyaWNhL0FyZ2VudGluYS9Vc2h1YWlhIiwiQXNpYS9ZZXJldmFuIiwiQW1lcmljYS9BcnViYSIsIkF1c3RyYWxpYS9BZGVsYWlkZSIsIkF1c3RyYWxpYS9CcmlzYmFuZSIsIkF1c3RyYWxpYS9Ccm9rZW5fSGlsbCIsIkF1c3RyYWxpYS9DdXJyaWUiLCJBdXN0cmFsaWEvRGFyd2luIiwiQXVzdHJhbGlhL0V1Y2xhIiwiQXVzdHJhbGlhL0hvYmFydCIsIkF1c3RyYWxpYS9MaW5kZW1hbiIsIkF1c3RyYWxpYS9Mb3JkX0hvd2UiLCJBdXN0cmFsaWEvTWVsYm91cm5lIiwiQXVzdHJhbGlhL1BlcnRoIiwiQXVzdHJhbGlhL1N5ZG5leSIsIkV1cm9wZS9WaWVubmEiLCJBc2lhL0Jha3UiLCJBc2lhL0JhaHJhaW4iLCJBc2lhL0RoYWthIiwiQW1lcmljYS9CYXJiYWRvcyIsIkV1cm9wZS9NaW5zayIsIkV1cm9wZS9CcnVzc2VscyIsIkFtZXJpY2EvQmVsaXplIiwiQWZyaWNhL1BvcnRvLU5vdm8iLCJBdGxhbnRpYy9CZXJtdWRhIiwiQXNpYS9UaGltcGh1IiwiQW1lcmljYS9MYV9QYXoiLCJFdXJvcGUvU2FyYWpldm8iLCJBZnJpY2EvR2Fib3JvbmUiLCJBbWVyaWNhL0FyYWd1YWluYSIsIkFtZXJpY2EvQmFoaWEiLCJBbWVyaWNhL0JlbGVtIiwiQW1lcmljYS9Cb2FfVmlzdGEiLCJBbWVyaWNhL0NhbXBvX0dyYW5kZSIsIkFtZXJpY2EvQ3VpYWJhIiwiQW1lcmljYS9FaXJ1bmVwZSIsIkFtZXJpY2EvRm9ydGFsZXphIiwiQW1lcmljYS9NYWNlaW8iLCJBbWVyaWNhL01hbmF1cyIsIkFtZXJpY2EvTm9yb25oYSIsIkFtZXJpY2EvUG9ydG9fVmVsaG8iLCJBbWVyaWNhL1JlY2lmZSIsIkFtZXJpY2EvUmlvX0JyYW5jbyIsIkFtZXJpY2EvU2FudGFyZW0iLCJBbWVyaWNhL1Nhb19QYXVsbyIsIkFtZXJpY2EvVG9ydG9sYSIsIkFzaWEvQnJ1bmVpIiwiRXVyb3BlL1NvZmlhIiwiQWZyaWNhL091YWdhZG91Z291IiwiQWZyaWNhL0J1anVtYnVyYSIsIkFmcmljYS9BYmlkamFuIiwiQXNpYS9QaG5vbV9QZW5oIiwiQWZyaWNhL0RvdWFsYSIsIkFtZXJpY2EvQXRpa29rYW4iLCJBbWVyaWNhL0JsYW5jLVNhYmxvbiIsIkFtZXJpY2EvQ2FtYnJpZGdlX0JheSIsIkFtZXJpY2EvQ3Jlc3RvbiIsIkFtZXJpY2EvRGF3c29uIiwiQW1lcmljYS9EYXdzb25fQ3JlZWsiLCJBbWVyaWNhL0VkbW9udG9uIiwiQW1lcmljYS9HbGFjZV9CYXkiLCJBbWVyaWNhL0dvb3NlX0JheSIsIkFtZXJpY2EvSGFsaWZheCIsIkFtZXJpY2EvSW51dmlrIiwiQW1lcmljYS9JcWFsdWl0IiwiQW1lcmljYS9Nb25jdG9uIiwiQW1lcmljYS9Nb250cmVhbCIsIkFtZXJpY2EvTmlwaWdvbiIsIkFtZXJpY2EvUGFuZ25pcnR1bmciLCJBbWVyaWNhL1JhaW55X1JpdmVyIiwiQW1lcmljYS9SYW5raW5fSW5sZXQiLCJBbWVyaWNhL1JlZ2luYSIsIkFtZXJpY2EvUmVzb2x1dGUiLCJBbWVyaWNhL1N0X0pvaG5zIiwiQW1lcmljYS9Td2lmdF9DdXJyZW50IiwiQW1lcmljYS9UaHVuZGVyX0JheSIsIkFtZXJpY2EvVG9yb250byIsIkFtZXJpY2EvVmFuY291dmVyIiwiQW1lcmljYS9XaGl0ZWhvcnNlIiwiQW1lcmljYS9XaW5uaXBlZyIsIkFtZXJpY2EvWWVsbG93a25pZmUiLCJBdGxhbnRpYy9DYXBlX1ZlcmRlIiwiQW1lcmljYS9DYXltYW4iLCJBZnJpY2EvQmFuZ3VpIiwiQWZyaWNhL05kamFtZW5hIiwiQW1lcmljYS9TYW50aWFnbyIsIlBhY2lmaWMvRWFzdGVyIiwiQXNpYS9DaG9uZ3FpbmciLCJBc2lhL0hhcmJpbiIsIkFzaWEvS2FzaGdhciIsIkFzaWEvU2hhbmdoYWkiLCJBc2lhL1VydW1xaSIsIkFtZXJpY2EvQm9nb3RhIiwiSW5kaWFuL0NvbW9ybyIsIkFmcmljYS9CcmF6emF2aWxsZSIsIkFtZXJpY2EvQ29zdGFfUmljYSIsIkV1cm9wZS9aYWdyZWIiLCJBbWVyaWNhL0hhdmFuYSIsIkFzaWEvTmljb3NpYSIsIkV1cm9wZS9QcmFndWUiLCJBZnJpY2EvS2luc2hhc2EiLCJBZnJpY2EvTHVidW1iYXNoaSIsIkV1cm9wZS9Db3BlbmhhZ2VuIiwiQWZyaWNhL0RqaWJvdXRpIiwiQW1lcmljYS9Eb21pbmljYSIsIkFtZXJpY2EvU2FudG9fRG9taW5nbyIsIkFtZXJpY2EvR3VheWFxdWlsIiwiUGFjaWZpYy9HYWxhcGFnb3MiLCJBZnJpY2EvQ2Fpcm8iLCJBbWVyaWNhL0VsX1NhbHZhZG9yIiwiQWZyaWNhL01hbGFibyIsIkFmcmljYS9Bc21hcmEiLCJFdXJvcGUvVGFsbGlubiIsIkFmcmljYS9BZGRpc19BYmFiYSIsIkF0bGFudGljL0Zhcm9lIiwiQXRsYW50aWMvU3RhbmxleSIsIlBhY2lmaWMvRmlqaSIsIkV1cm9wZS9IZWxzaW5raSIsIkV1cm9wZS9Ta29wamUiLCJFdXJvcGUvUGFyaXMiLCJBZnJpY2EvTGlicmV2aWxsZSIsIkFzaWEvVGJpbGlzaSIsIkV1cm9wZS9CZXJsaW4iLCJBZnJpY2EvQWNjcmEiLCJFdXJvcGUvQXRoZW5zIiwiQW1lcmljYS9EYW5tYXJrc2hhdm4iLCJBbWVyaWNhL0dvZHRoYWIiLCJBbWVyaWNhL1Njb3Jlc2J5c3VuZCIsIkFtZXJpY2EvVGh1bGUiLCJBbWVyaWNhL0dyZW5hZGEiLCJQYWNpZmljL0d1YW0iLCJBbWVyaWNhL0d1YXRlbWFsYSIsIkFmcmljYS9Db25ha3J5IiwiQWZyaWNhL0Jpc3NhdSIsIkFtZXJpY2EvR3V5YW5hIiwiQW1lcmljYS9Qb3J0LWF1LVByaW5jZSIsIkFtZXJpY2EvVGVndWNpZ2FscGEiLCJBc2lhL0hvbmdfS29uZyIsIkV1cm9wZS9CdWRhcGVzdCIsIkF0bGFudGljL1JleWtqYXZpayIsIkFzaWEvS29sa2F0YSIsIkFzaWEvSmFrYXJ0YSIsIkFzaWEvSmF5YXB1cmEiLCJBc2lhL01ha2Fzc2FyIiwiQXNpYS9Qb250aWFuYWsiLCJBc2lhL1RlaHJhbiIsIkFzaWEvQmFnaGRhZCIsIkV1cm9wZS9EdWJsaW4iLCJBc2lhL0plcnVzYWxlbSIsIkV1cm9wZS9Sb21lIiwiQW1lcmljYS9KYW1haWNhIiwiQXNpYS9Ub2t5byIsIkFzaWEvQW1tYW4iLCJBc2lhL0FsbWF0eSIsIkFzaWEvQXF0YXUiLCJBc2lhL0FxdG9iZSIsIkFzaWEvT3JhbCIsIkFzaWEvUXl6eWxvcmRhIiwiQWZyaWNhL05haXJvYmkiLCJQYWNpZmljL0VuZGVyYnVyeSIsIlBhY2lmaWMvS2lyaXRpbWF0aSIsIlBhY2lmaWMvVGFyYXdhIiwiQXNpYS9LdXdhaXQiLCJBc2lhL0Jpc2hrZWsiLCJBc2lhL1ZpZW50aWFuZSIsIkV1cm9wZS9SaWdhIiwiQXNpYS9CZWlydXQiLCJBZnJpY2EvTWFzZXJ1IiwiQWZyaWNhL01vbnJvdmlhIiwiQWZyaWNhL1RyaXBvbGkiLCJFdXJvcGUvVmFkdXoiLCJFdXJvcGUvVmlsbml1cyIsIkV1cm9wZS9MdXhlbWJvdXJnIiwiQXNpYS9NYWNhdSIsIkluZGlhbi9BbnRhbmFuYXJpdm8iLCJBZnJpY2EvQmxhbnR5cmUiLCJBc2lhL0t1YWxhX0x1bXB1ciIsIkFzaWEvS3VjaGluZyIsIkluZGlhbi9NYWxkaXZlcyIsIkFmcmljYS9CYW1ha28iLCJFdXJvcGUvTWFsdGEiLCJQYWNpZmljL0t3YWphbGVpbiIsIlBhY2lmaWMvTWFqdXJvIiwiQWZyaWNhL05vdWFrY2hvdHQiLCJJbmRpYW4vTWF1cml0aXVzIiwiQW1lcmljYS9CYWhpYV9CYW5kZXJhcyIsIkFtZXJpY2EvQ2FuY3VuIiwiQW1lcmljYS9DaGlodWFodWEiLCJBbWVyaWNhL0hlcm1vc2lsbG8iLCJBbWVyaWNhL01hdGFtb3JvcyIsIkFtZXJpY2EvTWF6YXRsYW4iLCJBbWVyaWNhL01lcmlkYSIsIkFtZXJpY2EvTWV4aWNvX0NpdHkiLCJBbWVyaWNhL01vbnRlcnJleSIsIkFtZXJpY2EvT2ppbmFnYSIsIkFtZXJpY2EvU2FudGFfSXNhYmVsIiwiQW1lcmljYS9UaWp1YW5hIiwiUGFjaWZpYy9DaHV1ayIsIlBhY2lmaWMvS29zcmFlIiwiUGFjaWZpYy9Qb2hucGVpIiwiRXVyb3BlL0NoaXNpbmF1IiwiRXVyb3BlL01vbmFjbyIsIkFzaWEvQ2hvaWJhbHNhbiIsIkFzaWEvSG92ZCIsIkFzaWEvVWxhYW5iYWF0YXIiLCJFdXJvcGUvUG9kZ29yaWNhIiwiQW1lcmljYS9Nb250c2VycmF0IiwiQWZyaWNhL0Nhc2FibGFuY2EiLCJBZnJpY2EvTWFwdXRvIiwiQXNpYS9SYW5nb29uIiwiQWZyaWNhL1dpbmRob2VrIiwiUGFjaWZpYy9OYXVydSIsIkFzaWEvS2F0aG1hbmR1IiwiRXVyb3BlL0Ftc3RlcmRhbSIsIlBhY2lmaWMvQXVja2xhbmQiLCJQYWNpZmljL0NoYXRoYW0iLCJBbWVyaWNhL01hbmFndWEiLCJBZnJpY2EvTmlhbWV5IiwiQWZyaWNhL0xhZ29zIiwiUGFjaWZpYy9Ob3Jmb2xrIiwiQXNpYS9QeW9uZ3lhbmciLCJQYWNpZmljL1NhaXBhbiIsIkV1cm9wZS9Pc2xvIiwiQXNpYS9NdXNjYXQiLCJBc2lhL0thcmFjaGkiLCJQYWNpZmljL1BhbGF1IiwiQW1lcmljYS9QYW5hbWEiLCJQYWNpZmljL1BvcnRfTW9yZXNieSIsIkFtZXJpY2EvQXN1bmNpb24iLCJBbWVyaWNhL0xpbWEiLCJBc2lhL01hbmlsYSIsIlBhY2lmaWMvUGl0Y2Fpcm4iLCJFdXJvcGUvV2Fyc2F3IiwiQXRsYW50aWMvQXpvcmVzIiwiQXRsYW50aWMvTWFkZWlyYSIsIkV1cm9wZS9MaXNib24iLCJBbWVyaWNhL1B1ZXJ0b19SaWNvIiwiQXNpYS9RYXRhciIsIkV1cm9wZS9CdWNoYXJlc3QiLCJBc2lhL0FuYWR5ciIsIkFzaWEvSXJrdXRzayIsIkFzaWEvS2FtY2hhdGthIiwiQXNpYS9LcmFzbm95YXJzayIsIkFzaWEvTWFnYWRhbiIsIkFzaWEvTm92b2t1em5ldHNrIiwiQXNpYS9Ob3Zvc2liaXJzayIsIkFzaWEvT21zayIsIkFzaWEvU2FraGFsaW4iLCJBc2lhL1ZsYWRpdm9zdG9rIiwiQXNpYS9ZYWt1dHNrIiwiQXNpYS9ZZWthdGVyaW5idXJnIiwiRXVyb3BlL0thbGluaW5ncmFkIiwiRXVyb3BlL01vc2NvdyIsIkV1cm9wZS9TYW1hcmEiLCJFdXJvcGUvVm9sZ29ncmFkIiwiQWZyaWNhL0tpZ2FsaSIsIkFmcmljYS9TYW9fVG9tZSIsIkF0bGFudGljL1N0X0hlbGVuYSIsIkFtZXJpY2EvU3RfS2l0dHMiLCJBbWVyaWNhL1N0X0x1Y2lhIiwiQW1lcmljYS9TdF9WaW5jZW50IiwiUGFjaWZpYy9BcGlhIiwiRXVyb3BlL1Nhbl9NYXJpbm8iLCJBc2lhL1JpeWFkaCIsIkFmcmljYS9EYWthciIsIkV1cm9wZS9CZWxncmFkZSIsIkluZGlhbi9NYWhlIiwiQWZyaWNhL0ZyZWV0b3duIiwiQXNpYS9TaW5nYXBvcmUiLCJFdXJvcGUvQnJhdGlzbGF2YSIsIkV1cm9wZS9ManVibGphbmEiLCJQYWNpZmljL0d1YWRhbGNhbmFsIiwiQWZyaWNhL01vZ2FkaXNodSIsIkFmcmljYS9Kb2hhbm5lc2J1cmciLCJBdGxhbnRpYy9Tb3V0aF9HZW9yZ2lhIiwiQXNpYS9TZW91bCIsIkFmcmljYS9DZXV0YSIsIkF0bGFudGljL0NhbmFyeSIsIkV1cm9wZS9NYWRyaWQiLCJBc2lhL0NvbG9tYm8iLCJBZnJpY2EvS2hhcnRvdW0iLCJBbWVyaWNhL1BhcmFtYXJpYm8iLCJBZnJpY2EvTWJhYmFuZSIsIkV1cm9wZS9TdG9ja2hvbG0iLCJFdXJvcGUvWnVyaWNoIiwiQXNpYS9EYW1hc2N1cyIsIkFzaWEvVGFpcGVpIiwiQXNpYS9EdXNoYW5iZSIsIkFmcmljYS9EYXJfZXNfU2FsYWFtIiwiQXNpYS9CYW5na29rIiwiQW1lcmljYS9OYXNzYXUiLCJBZnJpY2EvQmFuanVsIiwiQWZyaWNhL0xvbWUiLCJQYWNpZmljL1RvbmdhdGFwdSIsIkFtZXJpY2EvUG9ydF9vZl9TcGFpbiIsIkFmcmljYS9UdW5pcyIsIkV1cm9wZS9Jc3RhbmJ1bCIsIkFzaWEvQXNoZ2FiYXQiLCJBbWVyaWNhL0dyYW5kX1R1cmsiLCJQYWNpZmljL0Z1bmFmdXRpIiwiQW1lcmljYS9TdF9UaG9tYXMiLCJBZnJpY2EvS2FtcGFsYSIsIkV1cm9wZS9LaWV2IiwiRXVyb3BlL1NpbWZlcm9wb2wiLCJFdXJvcGUvVXpoZ29yb2QiLCJFdXJvcGUvWmFwb3Jvemh5ZSIsIkFzaWEvRHViYWkiLCJFdXJvcGUvTG9uZG9uIiwiQW1lcmljYS9BZGFrIiwiQW1lcmljYS9BbmNob3JhZ2UiLCJBbWVyaWNhL0JvaXNlIiwiQW1lcmljYS9DaGljYWdvIiwiQW1lcmljYS9EZW52ZXIiLCJBbWVyaWNhL0RldHJvaXQiLCJBbWVyaWNhL0luZGlhbmEvSW5kaWFuYXBvbGlzIiwiQW1lcmljYS9JbmRpYW5hL0tub3giLCJBbWVyaWNhL0luZGlhbmEvTWFyZW5nbyIsIkFtZXJpY2EvSW5kaWFuYS9QZXRlcnNidXJnIiwiQW1lcmljYS9JbmRpYW5hL1RlbGxfQ2l0eSIsIkFtZXJpY2EvSW5kaWFuYS9WZXZheSIsIkFtZXJpY2EvSW5kaWFuYS9WaW5jZW5uZXMiLCJBbWVyaWNhL0luZGlhbmEvV2luYW1hYyIsIkFtZXJpY2EvSnVuZWF1IiwiQW1lcmljYS9LZW50dWNreS9Mb3Vpc3ZpbGxlIiwiQW1lcmljYS9LZW50dWNreS9Nb250aWNlbGxvIiwiQW1lcmljYS9Mb3NfQW5nZWxlcyIsIkFtZXJpY2EvTWVub21pbmVlIiwiQW1lcmljYS9NZXRsYWthdGxhIiwiQW1lcmljYS9OZXdfWW9yayIsIkFtZXJpY2EvTm9tZSIsIkFtZXJpY2EvTm9ydGhfRGFrb3RhL0JldWxhaCIsIkFtZXJpY2EvTm9ydGhfRGFrb3RhL0NlbnRlciIsIkFtZXJpY2EvTm9ydGhfRGFrb3RhL05ld19TYWxlbSIsIkFtZXJpY2EvUGhvZW5peCIsIkFtZXJpY2EvU2hpcHJvY2siLCJBbWVyaWNhL1NpdGthIiwiQW1lcmljYS9ZYWt1dGF0IiwiUGFjaWZpYy9Ib25vbHVsdSIsIkFtZXJpY2EvTW9udGV2aWRlbyIsIkFzaWEvU2FtYXJrYW5kIiwiQXNpYS9UYXNoa2VudCIsIlBhY2lmaWMvRWZhdGUiLCJFdXJvcGUvVmF0aWNhbiIsIkFtZXJpY2EvQ2FyYWNhcyIsIkFzaWEvSG9fQ2hpX01pbmgiLCJBZnJpY2EvRWxfQWFpdW4iLCJBc2lhL0FkZW4iLCJBZnJpY2EvTHVzYWthIiwiQWZyaWNhL0hhcmFyZSIsImNvbXBvbmVudFRvSGV4IiwiaGV4IiwicmdiVG9IZXgiLCJyIiwiZyIsIkJGSENvbG9yUGlja2VyIiwiYmZoY29sb3JwaWNrZXIiLCJpbml0UG9wb3ZlciIsImluaXRQYWxldHRlIiwiJGNhbnZhcyIsImNvbnRleHQiLCJncmFkaWVudCIsImdldENvbnRleHQiLCJjcmVhdGVMaW5lYXJHcmFkaWVudCIsImFkZENvbG9yU3RvcCIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwiY2FudmFzIiwiaWNvbkxlZnQiLCJpY29uUmlnaHQiLCJwbGFjZWhvbGRlciIsIm1vdXNlRG93biIsImNvbG9yIiwidXBkYXRlVmFsIiwicG9zaXRpb25YIiwicG9zaXRpb25ZIiwiY29sb3JYIiwiY29sb3JZIiwic25hcHBpbmVzcyIsImltYWdlRGF0YSIsIm5ld0NvbG9yIiwiZ2V0SW1hZ2VEYXRhIiwiY29sb3JwaWNrZXIiLCJtb3VzZU1vdmUiLCJtb3VzZVVwIiwicGFnZVgiLCJwYWdlWSIsIm9yaWdIb29rIiwidmFsSG9va3MiLCJkaXYiLCJzZXQiLCJyZWFkeSIsIiRjb2xvcnBpY2tlciIsIkJGSENvdW50cmllcyIsImJmaGNvdW50cmllcyIsImFkZENvdW50cmllcyIsImFkZEJvb3RzdHJhcENvdW50cmllcyIsImRpc3BsYXlDb3VudHJ5IiwiZ2V0Q291bnRyaWVzIiwiY291bnRyeSIsImNvdW50cmllcyIsImF2YWlsYWJsZSIsImluQXJyYXkiLCJibGFuayIsIiR0b2dnbGUiLCIkb3B0aW9ucyIsImZsYWdzIiwiJGNvdW50cmllcyIsImJmaHNlbGVjdGJveCIsIkJGSEN1cnJlbmNpZXMiLCJiZmhjdXJyZW5jaWVzIiwiYWRkQ3VycmVuY2llcyIsImFkZEJvb3RzdHJhcEN1cnJlbmNpZXMiLCJkaXNwbGF5Q3VycmVuY3kiLCJnZXRDdXJyZW5jaWVzIiwiY3VycmVuY3kiLCJjdXJyZW5jaWVzIiwiZmxhZyIsIiRjdXJyZW5jaWVzIiwiZ2V0TnVtRGF5c0luTW9udGgiLCJnZXREYXlPZldlZWsiLCJkYXkiLCJmb3JtYXREYXRlIiwiU3RyaW5nIiwiZ2V0RGF0ZVBhcnQiLCJwYXJ0IiwicGFydFBvc2l0aW9ucyIsInBhcnRQb3NpdGlvbiIsIk51bWJlciIsIkJGSERhdGVQaWNrZXIiLCJiZmhkYXRlcGlja2VyIiwiaW5pdENhbGVuZGFyIiwic2V0RGF0ZUxpbWl0IiwibGltaXRQcmVmaXgiLCJpY29uQWRkb24iLCJpY29uIiwicHJldmlvdXNNb250aCIsIm5leHRNb250aCIsInByZXZpb3VzWWVhciIsIm5leHRZZWFyIiwidXBkYXRlQ2FsZW5kYXIiLCJ1cGRhdGVDYWxlbmRhckhlYWRlciIsIiRjYWxlbmRhciIsIiRkYXlzSGVhZGVyIiwiY2hlY2tNaW5EYXRlIiwibG93ZXJsaW1pdCIsImxvd2VyZGF5IiwibG93ZXJtb250aCIsImxvd2VyeWVhciIsImNoZWNrTWF4RGF0ZSIsImhpZ2hlcmxpbWl0IiwiaGlnaGVyZGF5IiwiaGlnaGVybW9udGgiLCJoaWdoZXJ5ZWFyIiwiY2hlY2tUb2RheSIsInVwZGF0ZUNhbGVuZGFyRGF5cyIsIiRkYXlzIiwibnVtRGF5c1ByZXZpb3VzTW9udGgiLCJudW1EYXlzQ3VycmVudE1vbnRoIiwiZmlyc3REYXkiLCJsYXN0RGF5Iiwicm93IiwiJGRhdGVQaWNrZXIiLCIkZGF0ZXBpY2tlciIsIkJGSEZvbnRzIiwiYmZoZm9udHMiLCJhZGRGb250cyIsImFkZEJvb3RzdHJhcEZvbnRzIiwiZ2V0Rm9udHMiLCJmb250IiwiZm9udHMiLCJzaG93Q3VzdG9tIiwic2hvd01vcmUiLCIkZm9udHMiLCJCRkhGb250U2l6ZXMiLCJiZmhmb250c2l6ZXMiLCJhZGRGb250U2l6ZXMiLCJhZGRCb290c3RyYXBGb250U2l6ZXMiLCJnZXRGb250c2l6ZXMiLCJmb250c2l6ZSIsImZvbnRzaXplcyIsIiRmb250U2l6ZXMiLCJCRkhHb29nbGVGb250cyIsImJmaGdvb2dsZWZvbnRzIiwic3Vic2V0IiwiaW5mbyIsIiRnb29nbGVGb250cyIsIkJGSEdvb2dsZUZvbnRMaXN0IiwiYmZoZ29vZ2xlZm9udGxpc3QiLCJmYW1pbHlMaXN0IiwiZiIsImVudHJ5IiwiYmluZE1lIiwiJGdvb2dsZUZvbnRMaXN0IiwiQkZITGFuZ3VhZ2VzIiwiYmZobGFuZ3VhZ2VzIiwiYWRkTGFuZ3VhZ2VzIiwiZGlzcGxheUxhbmd1YWdlIiwiYWRkQm9vdHN0cmFwTGFuZ3VhZ2VzIiwiZ2V0TGFuZ3VhZ2VzIiwidG9Qcm9wZXJDYXNlIiwiJGxhbmd1YWdlcyIsInR4dCIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwiQkZITnVtYmVyIiwiYmZobnVtYmVyIiwiaW5pdElucHV0IiwiYnV0dG9ucyIsImJ0bmluYyIsImJ0bmRlYyIsImZvcm1hdE51bWJlciIsImluY3JlbWVudCIsImRlY3JlbWVudCIsIm1vdXNldXAiLCJ0aW1lciIsImJ0biIsImdldFZhbHVlIiwibWF4TGVuZ3RoIiwiemVybyIsInplcm9zIiwiJG51bWJlciIsImZvcm1hdHRlZE51bWJlciIsImluZGV4Rm9ybWF0IiwiaW5kZXhOdW1iZXIiLCJsYXN0Q2hhcmFjdGVyIiwiZ2V0Q3Vyc29yUG9zaXRpb24iLCJzZWxlY3Rpb24iLCJjcmVhdGVSYW5nZSIsIm1vdmVTdGFydCIsInNlbGVjdGlvblN0YXJ0Iiwic2V0Q3Vyc29yUG9zaXRpb24iLCJtb3ZlRW5kIiwic2VsZWN0aW9uRW5kIiwiQkZIUGhvbmUiLCJiZmhwaG9uZSIsImFkZEZvcm1hdHRlciIsImRpc3BsYXlGb3JtYXR0ZXIiLCIkY291bnRyeSIsInBob25lIiwiY2hhbmdlQ291bnRyeSIsImxvYWRGb3JtYXR0ZXIiLCIkcGhvbmUiLCJjdXJzb3JQb3NpdGlvbiIsImN1cnNvckVuZCIsInN1YnN0cmluZyIsIkJGSFNlbGVjdEJveCIsImluaXRTZWxlY3RCb3giLCJwcmVwZW5kIiwiJHNlbGVjdGJveCIsIkJGSFNsaWRlciIsImJmaHNsaWRlciIsImluaXRTbGlkZXIiLCJ1cGRhdGVIYW5kbGUiLCJzcGFuIiwic2xpZGVyIiwiJHNsaWRlciIsIkJGSFN0YXRlcyIsImJmaHN0YXRlcyIsImFkZFN0YXRlcyIsImFkZEJvb3RzdHJhcFN0YXRlcyIsImRpc3BsYXlTdGF0ZSIsImxvYWRTdGF0ZXMiLCIkc3RhdGUiLCJjaGFuZ2VCb290c3RyYXBDb3VudHJ5IiwibG9hZEJvb3RzdHJhcFN0YXRlcyIsInN0YXRlQ29kZSIsInN0YXRlTmFtZSIsIiRzdGF0ZXMiLCJmb3JtYXRUaW1lIiwiaG91ciIsIm1pbnV0ZSIsIkJGSFRpbWVQaWNrZXIiLCJiZmh0aW1lcGlja2VyIiwic2V0VGltZSIsInRpbWVQYXJ0cyIsImN1cnJlbnRNb2RlIiwibW9kZUFkZG9uIiwibW9kZU1heCIsInVwZGF0ZVBvcG92ZXIiLCIkdGltZVBpY2tlciIsIiR0aW1lcGlja2VyIiwiQkZIVGltZXpvbmVzIiwiYmZodGltZXpvbmVzIiwiYWRkVGltZXpvbmVzIiwiYWRkQm9vdHN0cmFwVGltZXpvbmVzIiwidGltZXpvbmUiLCJsb2FkVGltZXpvbmVzIiwiJHRpbWV6b25lIiwibG9hZEJvb3RzdHJhcFRpbWV6b25lcyIsIiR0aW1lem9uZXMiLCJleHByIiwiaWNvbnRhaW5zIiwiJG5ld0VsZW1lbnQiLCIkYnV0dG9uIiwiJG1lbnUiLCIkbGlzIiwic2VsZWN0cGlja2VyIiwic2V0U3R5bGUiLCJzZWxlY3RBbGwiLCJkZXNlbGVjdEFsbCIsIm11bHRpcGxlIiwiYXV0b2ZvY3VzIiwiY3JlYXRlVmlldyIsIiRzZWFyY2hib3giLCJjaGVja0Rpc2FibGVkIiwiY2xpY2tMaXN0ZW5lciIsImxpdmVTZWFyY2giLCJsaXZlU2VhcmNoTGlzdGVuZXIiLCJsaUhlaWdodCIsInNldFdpZHRoIiwic2VsZWN0UG9zaXRpb24iLCJjcmVhdGVEcm9wZG93biIsImgiLCJoZWFkZXIiLCJhY3Rpb25zQm94IiwiY3JlYXRlTGkiLCJyZWxvYWRMaSIsImRlc3Ryb3lMaSIsIm0iLCJrIiwiaWNvbkJhc2UiLCJoaWRlRGlzYWJsZWQiLCJsIiwiY3JlYXRlQSIsInRpY2tJY29uIiwic2V0RGlzYWJsZWQiLCJzZXRTZWxlY3RlZCIsInRhYkluZGV4Iiwic2hvd0ljb24iLCJzaG93U3VidGV4dCIsInNob3dDb250ZW50IiwidG9BcnJheSIsIm11bHRpcGxlU2VwYXJhdG9yIiwic2VsZWN0ZWRUZXh0Rm9ybWF0IiwiY291bnRTZWxlY3RlZFRleHQiLCJub25lU2VsZWN0ZWRUZXh0Iiwic2V0U2l6ZSIsInEiLCJ2IiwidCIsInUiLCJzIiwicCIsIngiLCJ3IiwiZHJvcHVwQXV0byIsIm1heC1oZWlnaHQiLCJvdmVyZmxvdyIsIm1pbi1oZWlnaHQiLCJvdmVyZmxvdy15IiwibGFzdCIsInJlc2l6ZSIsIm1vYmlsZSIsInVwZGF0ZSIsIm1heE9wdGlvbnMiLCJtYXhPcHRpb25zVGV4dCIsImZhZGVPdXQiLCJub25lUmVzdWx0c1RleHQiLCJmcm9tQ2hhckNvZGUiLCJmaXJzdCIsIm5leHRBbGwiLCJwcmV2QWxsIiwiRnVuY3Rpb24iLCJzaGlmdCIsIkNPTkZJRyIsIlRFTVBMQVRFUyIsIlJpc2VWaXNpb24iLCJDb21tb24iLCJWYWxpZGF0aW9uIiwiZ3JlYXRlclRoYW4iLCJwYXJhbSIsImRlY2ltYWxSZWdleCIsInBhcnNlRmxvYXQiLCJsZXNzVGhhbiIsIm51bWVyaWMiLCJudW1lcmljUmVnZXgiLCJyZXF1aXJlZCIsImNoZWNrZWQiLCJ1cmxSZWdFeHAiLCJpc0dyZWF0ZXJUaGFuIiwiaXNMZXNzVGhhbiIsImlzVmFsaWRSZXF1aXJlZCIsImlzVmFsaWRVUkwiLCJpc1ZhbGlkTnVtYmVyIiwiVXRpbGl0aWVzIiwiZ2V0Rm9udENzc1N0eWxlIiwiZm9udE9iaiIsIndlaWdodCIsImJvbGQiLCJpdGFsaWMiLCJ1bmRlcmxpbmUiLCJoaWdobGlnaHQiLCJoaWdobGlnaHRDb2xvciIsImFkZENTU1J1bGVzIiwicnVsZXMiLCJhcHBlbmRDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiaGVhZCIsImxvYWRGb250cyIsInNldHRpbmdzIiwiY29udGVudERvYyIsImNsYXNzIiwiZm9udFNldHRpbmciLCJsb2FkQ3VzdG9tRm9udCIsImxvYWRHb29nbGVGb250Iiwic2hlZXQiLCJydWxlIiwic3R5bGVTaGVldHMiLCJhZGRSdWxlIiwic3R5bGVzaGVldCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiX2luaXQiLCIkc2VsZWN0Qm94IiwiJGZhbWlseSIsIiRjdXN0b21Gb250IiwiJGN1c3RvbUZvbnRVcmxGaWVsZCIsIiRjdXN0b21Gb250RXJyb3IiLCJ1cmxGaWVsZCIsImN1c3RvbUZvbnRVUkwiLCJfbG9hZEZvbnQiLCJfYmluZCIsImZvdW5kIiwiY3VycmVudEZvbnQiLCJ1dGlscyIsImNvbnRlbnREb2N1bWVudCIsIkNVU1RPTV9GT05UX1RFWFQiLCJhZGRHb29nbGVGb250IiwiZm9udEZhbWlseSIsImdldFVybCIsIl9nZXRDdXN0b21Gb250TmFtZSIsInZhbGlkYXRlVXJsIiwicG9wIiwiX3NvcnRGb250TGlzdCIsImN1c3RvbUZvbnQiLCJtb3JlRm9udHMiLCJzb3J0ZWRGb250cyIsInNlY29uZCIsImdldEZvbnQiLCJnZXRGb250U3R5bGUiLCJnZXRGb250VVJMIiwic2V0Rm9udCIsIiRlbGVtIiwic2V0Q29udGVudERvY3VtZW50IiwiaXNTZWxlY3RlZCIsImFkZEN1c3RvbUZvbnQiLCJmb250VXJsIiwiZm9udC11cmwiLCJzZXRDb250ZW50RG9jIiwiX3BsdWdpbk5hbWUiLCJmb250UGlja2VyIiwiZ2V0U2l6ZSIsIiRzZWxlY3RFbGVtIiwiZGVmYXVsdFNpemUiLCJmb250LXNpemUiLCJnZXRGb250U2l6ZSIsInNldEZvbnRTaXplIiwiZm9udFNpemVQaWNrZXIiLCJwYWxldHRlVGVtcGxhdGUiLCJ0aW55IiwidGlueWNvbG9yIiwidG9Ic2wiLCJmb3JtYXR0ZWRTdHJpbmciLCJwcmVmZXJyZWRGb3JtYXQiLCJzd2F0Y2hTdHlsZSIsInJnYmFTdXBwb3J0IiwidG9SZ2JTdHJpbmciLCJ0b0ZpbHRlciIsImNscyIsIm5vQ29sb3JTZWxlY3RlZFRleHQiLCJoaWRlQWxsIiwic3BlY3RydW1zIiwiaW5zdGFuY2VPcHRpb25zIiwiY2FsbGJhY2tDb250ZXh0IiwiZGVmYXVsdE9wdHMiLCJjYWxsYmFja3MiLCJiZWZvcmVTaG93IiwicmVwbGFjZUlucHV0Iiwic3BlY3RydW0iLCJhcHBseU9wdGlvbnMiLCJzaG93UGFsZXR0ZU9ubHkiLCJzaG93UGFsZXR0ZSIsInBhbGV0dGUiLCJwYWxldHRlQXJyYXkiLCJwYWxldHRlTG9va3VwIiwicmdiIiwiZmxhdCIsInNob3dJbnB1dCIsInNob3dBbHBoYSIsImFsbG93RW1wdHkiLCJzaG93QnV0dG9ucyIsInNob3dJbml0aWFsIiwiY29udGFpbmVyQ2xhc3NOYW1lIiwicmVmbG93IiwiaW5pdGlhbGl6ZSIsInBhbGV0dGVFbGVtZW50Q2xpY2siLCJpZ25vcmUiLCJ1cGRhdGVPcmlnaW5hbElucHV0Iiwic2hvdWxkUmVwbGFjZSIsImJvdW5kRWxlbWVudCIsInJlcGxhY2VyIiwiY2xlYXJCdXR0b24iLCJ1cGRhdGVTZWxlY3Rpb25QYWxldHRlRnJvbVN0b3JhZ2UiLCJvZmZzZXRFbGVtZW50IiwidGV4dElucHV0Iiwic2V0RnJvbVRleHRJbnB1dCIsImNhbmNlbEJ1dHRvbiIsImlubmVySFRNTCIsImNhbmNlbFRleHQiLCJpc0VtcHR5IiwiY2hvb3NlQnV0dG9uIiwiY2hvb3NlVGV4dCIsImRyYWdnYWJsZSIsImFscGhhU2xpZGVyIiwiZHJhZ1giLCJkcmFnWSIsImN1cnJlbnRBbHBoYSIsImFscGhhV2lkdGgiLCJkcmFnU3RhcnQiLCJkcmFnU3RvcCIsImN1cnJlbnRIdWUiLCJzbGlkZUhlaWdodCIsImRyYWdnZXIiLCJzaGlmdE1vdmVtZW50RGlyZWN0aW9uIiwib2xkRHJhZ1giLCJjdXJyZW50U2F0dXJhdGlvbiIsImRyYWdXaWR0aCIsIm9sZERyYWdZIiwiZHJhZ0hlaWdodCIsImN1cnJlbnRWYWx1ZSIsImZ1cnRoZXJGcm9tWCIsImFicyIsInNldFNhdHVyYXRpb24iLCJzZXRWYWx1ZSIsImluaXRpYWxDb2xvciIsInVwZGF0ZVVJIiwiY3VycmVudFByZWZlcnJlZEZvcm1hdCIsImFkZENvbG9yVG9TZWxlY3Rpb25QYWxldHRlIiwicGFsZXR0ZUV2ZW50IiwicGFsZXR0ZUNvbnRhaW5lciIsImRlbGVnYXRlIiwiaW5pdGlhbENvbG9yQ29udGFpbmVyIiwibG9jYWxTdG9yYWdlS2V5IiwibG9jYWxTdG9yYWdlIiwib2xkUGFsZXR0ZSIsInNlbGVjdGlvblBhbGV0dGUiLCJzaG93U2VsZWN0aW9uUGFsZXR0ZSIsIm1heFNlbGVjdGlvblNpemUiLCJnZXRVbmlxdWVTZWxlY3Rpb25QYWxldHRlIiwidW5pcXVlIiwicmV2ZXJzZSIsImRyYXdQYWxldHRlIiwiY3VycmVudENvbG9yIiwiZHJhd0luaXRpYWwiLCJpbml0aWFsIiwiY29sb3JPblNob3ciLCJkcmFnZ2luZ0NsYXNzIiwidmlzaWJsZSIsImRvYyIsImNvbG9ySGFzQ2hhbmdlZCIsImNsaWNrb3V0RmlyZXNDaGFuZ2UiLCJyZXZlcnQiLCJpZ25vcmVGb3JtYXRDaGFuZ2UiLCJuZXdIc3YiLCJ0b0hzdiIsImdldEZvcm1hdCIsImZyb21SYXRpbyIsInVwZGF0ZUhlbHBlckxvY2F0aW9ucyIsImZsYXRDb2xvciIsInRvSGV4U3RyaW5nIiwicmVhbENvbG9yIiwiZGlzcGxheUNvbG9yIiwicHJldmlld0VsZW1lbnQiLCJyZWFsSGV4IiwicmVhbFJnYiIsImFscGhhIiwidG9SZ2IiLCJyZWFsQWxwaGEiLCJhbHBoYVNsaWRlcklubmVyIiwiZ3JhZGllbnRUeXBlIiwiYWxwaGFTbGlkZUhlbHBlciIsInNsaWRlSGVscGVyIiwiZHJhZ0hlbHBlciIsImRyYWdIZWxwZXJIZWlnaHQiLCJhbHBoYVgiLCJhbHBoYVNsaWRlSGVscGVyV2lkdGgiLCJzbGlkZVkiLCJzbGlkZUhlbHBlckhlaWdodCIsImZpcmVDYWxsYmFjayIsImhhc0NoYW5nZWQiLCJpc0lucHV0Iiwic2xpZGVXaWR0aCIsImdldE9mZnNldCIsInNwZWN0Iiwib3B0aW9uTmFtZSIsIm9wdGlvblZhbHVlIiwidGhlbWUiLCJ0aHJvdHRsZSIsIm93bmVyRG9jdW1lbnQiLCJtYXJrdXAiLCJpc0lucHV0VHlwZUNvbG9yIiwiaW5wdXRUeXBlQ29sb3JTdXBwb3J0IiwicmVwbGFjZXJDbGFzc05hbWUiLCJwaWNrZXIiLCJleHRyYVkiLCJkcFdpZHRoIiwiZHBIZWlnaHQiLCJpbnB1dEhlaWdodCIsImRvY0VsZW0iLCJ2aWV3V2lkdGgiLCJ2aWV3SGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwiZnVuYyIsImFyZ3MiLCJvbm1vdmUiLCJvbnN0YXJ0Iiwib25zdG9wIiwicHJldmVudCIsInJldHVyblZhbHVlIiwiZHJhZ2dpbmciLCJkb2N1bWVudE1vZGUiLCJzdG9wIiwidG91Y2hlcyIsIm1heFdpZHRoIiwibWF4SGVpZ2h0IiwiaGFzVG91Y2giLCJyaWdodGNsaWNrIiwiZHVyaW5nRHJhZ0V2ZW50cyIsIndhaXQiLCJkZWJvdW5jZSIsInRocm90dGxlciIsImV4ZWMiLCJ1c2VyQWdlbnQiLCJzdHIiLCJlbGVtIiwiY3NzVGV4dCIsImJhY2tncm91bmRDb2xvciIsImNvbG9ySW5wdXQiLCJncmFkaWVudEZpeCIsImRhdGFJRCIsImxvYWRPcHRzIiwibG9jYWxpemF0aW9uIiwicGFsZXR0ZXMiLCJwcm9jZXNzTmF0aXZlQ29sb3JJbnB1dHMiLCJpbnB1dFRvUkdCIiwib2siLCJzdHJpbmdJbnB1dFRvT2JqZWN0IiwicmdiVG9SZ2IiLCJjb252ZXJ0VG9QZXJjZW50YWdlIiwiaHN2VG9SZ2IiLCJoc2xUb1JnYiIsImJvdW5kQWxwaGEiLCJtYXRoTWluIiwibWF0aE1heCIsImJvdW5kMDEiLCJyZ2JUb0hzbCIsImh1ZTJyZ2IiLCJyZ2JUb0hzdiIsIm1hdGgiLCJtb2QiLCJhbGxvdzNDaGFyIiwicGFkMiIsIm1hdGhSb3VuZCIsInJnYmFUb0hleCIsImNvbnZlcnREZWNpbWFsVG9IZXgiLCJmbGlwIiwiZmxpcHBlZCIsImlzT25lUG9pbnRaZXJvIiwicHJvY2Vzc1BlcmNlbnQiLCJpc1BlcmNlbnRhZ2UiLCJjbGFtcDAxIiwicGFyc2VJbnRGcm9tSGV4IiwiY29udmVydEhleFRvRGVjaW1hbCIsInRyaW1MZWZ0IiwidHJpbVJpZ2h0IiwibmFtZWQiLCJuYW1lcyIsIm1hdGNoZXJzIiwicmdiYSIsImhzbCIsImhzbGEiLCJoc3YiLCJoZXg4IiwiaGV4NiIsImhleDMiLCJ0aW55Q291bnRlciIsIm1hdGhSYW5kb20iLCJfciIsIl9nIiwiX2IiLCJfYSIsIl9yb3VuZEEiLCJfZm9ybWF0IiwiX2dyYWRpZW50VHlwZSIsIl9vayIsIl90Y19pZCIsImdldEFscGhhIiwic2V0QWxwaGEiLCJ0b0hzdlN0cmluZyIsInRvSHNsU3RyaW5nIiwidG9IZXgiLCJ0b0hleDgiLCJ0b0hleDhTdHJpbmciLCJ0b1BlcmNlbnRhZ2VSZ2IiLCJ0b1BlcmNlbnRhZ2VSZ2JTdHJpbmciLCJ0b05hbWUiLCJoZXhOYW1lcyIsInNlY29uZENvbG9yIiwiaGV4OFN0cmluZyIsInNlY29uZEhleDhTdHJpbmciLCJmb3JtYXRTZXQiLCJoYXNBbHBoYSIsIm5lZWRzQWxwaGFGb3JtYXQiLCJjb2xvcjEiLCJjb2xvcjIiLCJkZXNhdHVyYXRlIiwiYW1vdW50Iiwic2F0dXJhdGUiLCJncmV5c2NhbGUiLCJsaWdodGVuIiwiYnJpZ2h0ZW4iLCJkYXJrZW4iLCJjb21wbGVtZW50IiwidHJpYWQiLCJ0ZXRyYWQiLCJzcGxpdGNvbXBsZW1lbnQiLCJhbmFsb2dvdXMiLCJzbGljZXMiLCJyZXQiLCJtb25vY2hyb21hdGljIiwibW9kaWZpY2F0aW9uIiwicmVhZGFiaWxpdHkiLCJicmlnaHRuZXNzQSIsImJyaWdodG5lc3NCIiwiY29sb3JEaWZmIiwiYnJpZ2h0bmVzcyIsInJlYWRhYmxlIiwibW9zdFJlYWRhYmxlIiwiYmFzZUNvbG9yIiwiY29sb3JMaXN0IiwiYmVzdENvbG9yIiwiYmVzdFNjb3JlIiwiYmVzdElzUmVhZGFibGUiLCJzY29yZSIsImFsaWNlYmx1ZSIsImFudGlxdWV3aGl0ZSIsImFxdWEiLCJhcXVhbWFyaW5lIiwiYXp1cmUiLCJiZWlnZSIsImJpc3F1ZSIsImJsYWNrIiwiYmxhbmNoZWRhbG1vbmQiLCJibHVlIiwiYmx1ZXZpb2xldCIsImJyb3duIiwiYnVybHl3b29kIiwiYnVybnRzaWVubmEiLCJjYWRldGJsdWUiLCJjaGFydHJldXNlIiwiY2hvY29sYXRlIiwiY29yYWwiLCJjb3JuZmxvd2VyYmx1ZSIsImNvcm5zaWxrIiwiY3JpbXNvbiIsImN5YW4iLCJkYXJrYmx1ZSIsImRhcmtjeWFuIiwiZGFya2dvbGRlbnJvZCIsImRhcmtncmF5IiwiZGFya2dyZWVuIiwiZGFya2dyZXkiLCJkYXJra2hha2kiLCJkYXJrbWFnZW50YSIsImRhcmtvbGl2ZWdyZWVuIiwiZGFya29yYW5nZSIsImRhcmtvcmNoaWQiLCJkYXJrcmVkIiwiZGFya3NhbG1vbiIsImRhcmtzZWFncmVlbiIsImRhcmtzbGF0ZWJsdWUiLCJkYXJrc2xhdGVncmF5IiwiZGFya3NsYXRlZ3JleSIsImRhcmt0dXJxdW9pc2UiLCJkYXJrdmlvbGV0IiwiZGVlcHBpbmsiLCJkZWVwc2t5Ymx1ZSIsImRpbWdyYXkiLCJkaW1ncmV5IiwiZG9kZ2VyYmx1ZSIsImZpcmVicmljayIsImZsb3JhbHdoaXRlIiwiZm9yZXN0Z3JlZW4iLCJmdWNoc2lhIiwiZ2FpbnNib3JvIiwiZ2hvc3R3aGl0ZSIsImdvbGQiLCJnb2xkZW5yb2QiLCJncmF5IiwiZ3JlZW4iLCJncmVlbnllbGxvdyIsImdyZXkiLCJob25leWRldyIsImhvdHBpbmsiLCJpbmRpYW5yZWQiLCJpbmRpZ28iLCJpdm9yeSIsImtoYWtpIiwibGF2ZW5kZXIiLCJsYXZlbmRlcmJsdXNoIiwibGF3bmdyZWVuIiwibGVtb25jaGlmZm9uIiwibGlnaHRibHVlIiwibGlnaHRjb3JhbCIsImxpZ2h0Y3lhbiIsImxpZ2h0Z29sZGVucm9keWVsbG93IiwibGlnaHRncmF5IiwibGlnaHRncmVlbiIsImxpZ2h0Z3JleSIsImxpZ2h0cGluayIsImxpZ2h0c2FsbW9uIiwibGlnaHRzZWFncmVlbiIsImxpZ2h0c2t5Ymx1ZSIsImxpZ2h0c2xhdGVncmF5IiwibGlnaHRzbGF0ZWdyZXkiLCJsaWdodHN0ZWVsYmx1ZSIsImxpZ2h0eWVsbG93IiwibGltZSIsImxpbWVncmVlbiIsImxpbmVuIiwibWFnZW50YSIsIm1hcm9vbiIsIm1lZGl1bWFxdWFtYXJpbmUiLCJtZWRpdW1ibHVlIiwibWVkaXVtb3JjaGlkIiwibWVkaXVtcHVycGxlIiwibWVkaXVtc2VhZ3JlZW4iLCJtZWRpdW1zbGF0ZWJsdWUiLCJtZWRpdW1zcHJpbmdncmVlbiIsIm1lZGl1bXR1cnF1b2lzZSIsIm1lZGl1bXZpb2xldHJlZCIsIm1pZG5pZ2h0Ymx1ZSIsIm1pbnRjcmVhbSIsIm1pc3R5cm9zZSIsIm1vY2Nhc2luIiwibmF2YWpvd2hpdGUiLCJuYXZ5Iiwib2xkbGFjZSIsIm9saXZlIiwib2xpdmVkcmFiIiwib3JhbmdlIiwib3JhbmdlcmVkIiwib3JjaGlkIiwicGFsZWdvbGRlbnJvZCIsInBhbGVncmVlbiIsInBhbGV0dXJxdW9pc2UiLCJwYWxldmlvbGV0cmVkIiwicGFwYXlhd2hpcCIsInBlYWNocHVmZiIsInBlcnUiLCJwaW5rIiwicGx1bSIsInBvd2RlcmJsdWUiLCJwdXJwbGUiLCJyZWQiLCJyb3N5YnJvd24iLCJyb3lhbGJsdWUiLCJzYWRkbGVicm93biIsInNhbG1vbiIsInNhbmR5YnJvd24iLCJzZWFncmVlbiIsInNlYXNoZWxsIiwic2llbm5hIiwic2lsdmVyIiwic2t5Ymx1ZSIsInNsYXRlYmx1ZSIsInNsYXRlZ3JheSIsInNsYXRlZ3JleSIsInNub3ciLCJzcHJpbmdncmVlbiIsInN0ZWVsYmx1ZSIsInRhbiIsInRlYWwiLCJ0aGlzdGxlIiwidG9tYXRvIiwidHVycXVvaXNlIiwidmlvbGV0Iiwid2hlYXQiLCJ3aGl0ZSIsIndoaXRlc21va2UiLCJ5ZWxsb3ciLCJ5ZWxsb3dncmVlbiIsIkNTU19JTlRFR0VSIiwiQ1NTX05VTUJFUiIsIkNTU19VTklUIiwiUEVSTUlTU0lWRV9NQVRDSDMiLCJQRVJNSVNTSVZFX01BVENINCIsInNldHRpbmdzU2F2ZXIiLCJzZXR0aW5nc0dldHRlciIsInNldHRpbmdzQ2xvc2VyIiwiYWRkaXRpb25hbFBhcmFtcyIsImFsZXJ0cyIsImdldEFkZGl0aW9uYWxQYXJhbSIsImRlZmF1bHRWYWwiLCJzZXRBZGRpdGlvbmFsUGFyYW0iLCJsb2FkQWRkaXRpb25hbFBhcmFtcyIsImdldEFkZGl0aW9uYWxQYXJhbXMiLCJlcnIiLCJzZXRBZGRpdGlvbmFsUGFyYW1zIiwic2F2ZVNldHRpbmdzIiwiY2xvc2VTZXR0aW5ncyIsImdldFBhcmFtcyIsIiRlbG0iLCIkd2F0Y2hDb2xsZWN0aW9uIiwibmV3QWxlcnRzIiwib2xkQWxlcnRzIiwiU1RPUkFHRV9GSUxFX1VSTF9CQVNFIiwiU1RPUkFHRV9GT0xERVJfVVJMX0JBU0UiLCJnZXRTdG9yYWdlVXJsRGF0YSIsImdldFN0b3JhZ2VUeXBlIiwic3RvcmFnZVVybCIsImdldENvbXBhbnlJZCIsInBhaXIiLCJkZWNvZGVVUklDb21wb25lbnQiLCJjb21wYW55SWQiLCJmaWxlTmFtZSIsImZvbGRlciIsImdhZGdldHMiLCJpMThuIiwiZmFsbGJhY2tMbmciLCJyZXNHZXRQYXRoIiwiaXNJbWFnZSIsInNyYyIsImltYWdlIiwiSW1hZ2UiLCJvbmxvYWQiLCJvbmVycm9yIiwiZ2FkZ2V0c0FwaSIsInNldHRpbmdzUGFyc2VyIiwicHJvY2Vzc1NldHRpbmdzIiwibmV3U2V0dGluZ3MiLCJjb3B5IiwicnNXIiwicnNIIiwidmFsaWRhdG9yIiwiZGVidWciLCJsYXlvdXRVUkwiLCJlbmNvZGVQYXJhbXMiLCJhZGRpdGlvbmFsUGFyYW1zU3RyIiwiZW5jb2RlQWRkaXRpb25hbFBhcmFtcyIsInJwYyIsIkpTT04iLCJzdHJpbmdpZnkiLCJkZWZhdWx0U2V0dGluZ3MiLCJkZWZhdWx0QWRkaXRpb25hbFBhcmFtcyIsInBhcnNlQWRkaXRpb25hbFBhcmFtcyIsImRlZmF1bHRQYXJhbXMiLCJwYXJzZVBhcmFtcyIsImxvY2F0aW9uIiwic2VhcmNoIiwic3RyaXBQcmVmaXgiLCJlbmNvZGVVUklDb21wb25lbnQiLCJwYXJhbXNTdHIiLCJ2YXJzIiwiZ29vZ2xlIiwidmlzdWFsaXphdGlvbiIsInNldE9uTG9hZENhbGxiYWNrIiwiJGJ0bkFsaWdubWVudCIsInNldEFsaWdubWVudCIsImFsaWdubWVudCIsImdldEFsaWdubWVudCIsIiRwcmltYXJ5SWNvbiIsImN1cnJlbnRDbGFzcyIsIm5ld0NsYXNzIiwiZGVmYXVsdEFsaWdubWVudCIsIldJREdFVF9TRVRUSU5HU19VSV9DT05GSUciLCIkYm9sZCIsIiRpdGFsaWMiLCIkdW5kZXJsaW5lIiwic2V0U3R5bGVzIiwiX3NldFN0eWxlIiwiX2dldFN0eWxlIiwiJHN0eWxlRWxlbSIsImlzQm9sZCIsInNldEJvbGQiLCJpc0l0YWxpYyIsInNldEl0YWxpYyIsImlzVW5kZXJsaW5lIiwic2V0VW5kZXJsaW5lIiwiZ2V0U3R5bGVzIiwic3R5bGVzIiwiZm9udFN0eWxlIiwiX2dldFVybCIsIiR1cmxJbnAiLCJfdGVzdFVybCIsIl9zZXRVcmwiLCJfdmFsaWRhdGVVcmwiLCJkb1ZhbGlkYXRpb24iLCIkdmFsaWRhdGVVcmxDdG4iLCIkdmFsaWRhdGVVcmxDQiIsInNldFVybCIsImRlZmF1bHRTZXR0aW5nIiwiYnkiLCJzcGVlZCIsInB1ZCIsImhlbHAiLCJjb250cmlidXRlIiwic2F2ZSIsImRpc2FibGVTYXZlIiwiaGVscFJlZiIsImNvbnRyaWJ1dGVSZWYiLCJ3eXNpaHRtbDUiLCJjb21tYW5kcyIsImRvbSIsInF1aXJrcyIsInRvb2xiYXIiLCJsYW5nIiwidmlld3MiLCJJTlZJU0lCTEVfU1BBQ0UiLCJFTVBUWV9GVU5DVElPTiIsIkVMRU1FTlRfTk9ERSIsIlRFWFRfTk9ERSIsIkJBQ0tTUEFDRV9LRVkiLCJFTlRFUl9LRVkiLCJFU0NBUEVfS0VZIiwiU1BBQ0VfS0VZIiwiREVMRVRFX0tFWSIsImlzSG9zdE1ldGhvZCIsIkZVTkNUSU9OIiwiT0JKRUNUIiwiaXNIb3N0T2JqZWN0IiwiaXNIb3N0UHJvcGVydHkiLCJVTkRFRklORUQiLCJjcmVhdGVNdWx0aXBsZVByb3BlcnR5VGVzdCIsInRlc3RGdW5jIiwiaXNUZXh0UmFuZ2UiLCJhcmVIb3N0TWV0aG9kcyIsInRleHRSYW5nZU1ldGhvZHMiLCJhcmVIb3N0UHJvcGVydGllcyIsInRleHRSYW5nZVByb3BlcnRpZXMiLCJmYWlsIiwiYXBpIiwiaW5pdGlhbGl6ZWQiLCJzdXBwb3J0ZWQiLCJ3YXJuIiwibXNnIiwid2FybmluZ01lc3NhZ2UiLCJhbGVydE9uV2FybiIsImNvbnNvbGUiLCJsb2ciLCJ0ZXN0UmFuZ2UiLCJpbXBsZW1lbnRzRG9tUmFuZ2UiLCJpbXBsZW1lbnRzVGV4dFJhbmdlIiwiZG9tUmFuZ2VNZXRob2RzIiwiZG9tUmFuZ2VQcm9wZXJ0aWVzIiwiY3JlYXRlVGV4dFJhbmdlIiwiZmVhdHVyZXMiLCJhbGxMaXN0ZW5lcnMiLCJtb2R1bGVJbml0aWFsaXplcnMiLCJpbml0TGlzdGVuZXJzIiwiZXgiLCJjcmVhdGVNaXNzaW5nTmF0aXZlQXBpIiwid2luIiwiY3JlYXRlTWlzc2luZ05hdGl2ZUFwaUxpc3RlbmVycyIsIk1vZHVsZSIsImFyZUhvc3RPYmplY3RzIiwidXRpbCIsIm1vZHVsZXMiLCJwcmVmZXJUZXh0UmFuZ2UiLCJhZGRJbml0TGlzdGVuZXIiLCJsaXN0ZW5lciIsImFkZENyZWF0ZU1pc3NpbmdOYXRpdmVBcGlMaXN0ZW5lciIsImNyZWF0ZUVycm9yIiwiY3JlYXRlTW9kdWxlIiwiaW5pdEZ1bmMiLCJyZXF1aXJlTW9kdWxlcyIsIm1vZHVsZU5hbWUiLCJkb2NSZWFkeSIsImxvYWRIYW5kbGVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImF0dGFjaEV2ZW50IiwicmFuZ3kiLCJpc0h0bWxOYW1lc3BhY2UiLCJucyIsIm5hbWVzcGFjZVVSSSIsIlVOREVGIiwicGFyZW50RWxlbWVudCIsIm5vZGVUeXBlIiwiZ2V0Tm9kZUluZGV4IiwicHJldmlvdXNTaWJsaW5nIiwiZ2V0Tm9kZUxlbmd0aCIsImNoaWxkTm9kZXMiLCJpc0NoYXJhY3RlckRhdGFOb2RlIiwiZ2V0Q29tbW9uQW5jZXN0b3IiLCJub2RlMSIsIm5vZGUyIiwiYW5jZXN0b3JzIiwiYXJyYXlDb250YWlucyIsImlzQW5jZXN0b3JPZiIsImFuY2VzdG9yIiwiZGVzY2VuZGFudCIsInNlbGZJc0FuY2VzdG9yIiwiZ2V0Q2xvc2VzdEFuY2VzdG9ySW4iLCJwcmVjZWRpbmdOb2RlIiwibmV4dE5vZGUiLCJuZXh0U2libGluZyIsImluc2VydEJlZm9yZSIsInNwbGl0RGF0YU5vZGUiLCJuZXdOb2RlIiwiY2xvbmVOb2RlIiwiZGVsZXRlRGF0YSIsImdldERvY3VtZW50IiwiZ2V0V2luZG93IiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJnZXRJZnJhbWVEb2N1bWVudCIsImlmcmFtZUVsIiwiY29udGVudFdpbmRvdyIsImdldElmcmFtZVdpbmRvdyIsImdldEJvZHkiLCJnZXRSb290Q29udGFpbmVyIiwiY29tcGFyZVBvaW50cyIsIm5vZGVBIiwib2Zmc2V0QSIsIm5vZGVCIiwib2Zmc2V0QiIsIm5vZGVDIiwicm9vdCIsImNoaWxkQSIsImNoaWxkQiIsImZpcnN0Q2hpbGQiLCJmcmFnbWVudEZyb21Ob2RlQ2hpbGRyZW4iLCJjaGlsZCIsImZyYWdtZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImluc3BlY3ROb2RlIiwiaWRBdHRyIiwibm9kZU5hbWUiLCJOb2RlSXRlcmF0b3IiLCJfbmV4dCIsImNyZWF0ZUl0ZXJhdG9yIiwiRG9tUG9zaXRpb24iLCJET01FeGNlcHRpb24iLCJjb2RlTmFtZSIsIm1lc3NhZ2UiLCJ0ZXh0Tm9kZSIsIl9jdXJyZW50IiwiaGFzTmV4dCIsImluc3BlY3QiLCJJTkRFWF9TSVpFX0VSUiIsIkhJRVJBUkNIWV9SRVFVRVNUX0VSUiIsIldST05HX0RPQ1VNRU5UX0VSUiIsIk5PX01PRElGSUNBVElPTl9BTExPV0VEX0VSUiIsIk5PVF9GT1VORF9FUlIiLCJOT1RfU1VQUE9SVEVEX0VSUiIsIklOVkFMSURfU1RBVEVfRVJSIiwiaXNOb25UZXh0UGFydGlhbGx5U2VsZWN0ZWQiLCJzdGFydENvbnRhaW5lciIsImVuZENvbnRhaW5lciIsImdldFJhbmdlRG9jdW1lbnQiLCJkaXNwYXRjaEV2ZW50IiwibGlzdGVuZXJzIiwiX2xpc3RlbmVycyIsImdldEJvdW5kYXJ5QmVmb3JlTm9kZSIsImdldEJvdW5kYXJ5QWZ0ZXJOb2RlIiwiaW5zZXJ0Tm9kZUF0UG9zaXRpb24iLCJmaXJzdE5vZGVJbnNlcnRlZCIsImNsb25lU3VidHJlZSIsIml0ZXJhdG9yIiwicGFydGlhbGx5U2VsZWN0ZWQiLCJzdWJJdGVyYXRvciIsImZyYWciLCJpc1BhcnRpYWxseVNlbGVjdGVkU3VidHJlZSIsImdldFN1YnRyZWVJdGVyYXRvciIsIml0ZXJhdGVTdWJ0cmVlIiwicmFuZ2VJdGVyYXRvciIsIml0ZXJhdG9yU3RhdGUiLCJzdWJSYW5nZUl0ZXJhdG9yIiwiZGVsZXRlU3VidHJlZSIsImV4dHJhY3RTdWJ0cmVlIiwiZ2V0Tm9kZXNJblJhbmdlIiwibm9kZVR5cGVzIiwiZmlsdGVyTm9kZVR5cGVzIiwiZmlsdGVyRXhpc3RzIiwibm9kZXMiLCJSYW5nZUl0ZXJhdG9yIiwiZ2V0TmFtZSIsInN0YXJ0T2Zmc2V0IiwiZW5kT2Zmc2V0IiwiY2xvbmVQYXJ0aWFsbHlTZWxlY3RlZFRleHROb2RlcyIsImNvbGxhcHNlZCIsImVjIiwiY29tbW9uQW5jZXN0b3JDb250YWluZXIiLCJpc1NpbmdsZUNoYXJhY3RlckRhdGFOb2RlIiwiX2ZpcnN0IiwiX2xhc3QiLCJSYW5nZUV4Y2VwdGlvbiIsIlJhbmdlTm9kZUl0ZXJhdG9yIiwiX3Bvc2l0aW9uIiwiY3JlYXRlQW5jZXN0b3JGaW5kZXIiLCJhc3NlcnROb0RvY1R5cGVOb3RhdGlvbkVudGl0eUFuY2VzdG9yIiwiYWxsb3dTZWxmIiwiZ2V0RG9jVHlwZU5vdGF0aW9uRW50aXR5QW5jZXN0b3IiLCJhc3NlcnROb3REZXRhY2hlZCIsImFzc2VydFZhbGlkTm9kZVR5cGUiLCJpbnZhbGlkVHlwZXMiLCJhc3NlcnRWYWxpZE9mZnNldCIsImFzc2VydFNhbWVEb2N1bWVudE9yRnJhZ21lbnQiLCJnZXREb2N1bWVudE9yRnJhZ21lbnRDb250YWluZXIiLCJhc3NlcnROb2RlTm90UmVhZE9ubHkiLCJnZXRSZWFkb25seUFuY2VzdG9yIiwiYXNzZXJ0Tm9kZSIsImlzT3JwaGFuIiwicm9vdENvbnRhaW5lck5vZGVUeXBlcyIsImlzVmFsaWRPZmZzZXQiLCJhc3NlcnRSYW5nZVZhbGlkIiwiUmFuZ2VQcm90b3R5cGUiLCJjb3B5Q29tcGFyaXNvbkNvbnN0YW50c1RvT2JqZWN0IiwiU1RBUlRfVE9fU1RBUlQiLCJzMnMiLCJTVEFSVF9UT19FTkQiLCJzMmUiLCJFTkRfVE9fRU5EIiwiZTJlIiwiRU5EX1RPX1NUQVJUIiwiZTJzIiwiTk9ERV9CRUZPUkUiLCJuX2IiLCJOT0RFX0FGVEVSIiwibl9hIiwiTk9ERV9CRUZPUkVfQU5EX0FGVEVSIiwibl9iX2EiLCJOT0RFX0lOU0lERSIsIm5faSIsImNvcHlDb21wYXJpc29uQ29uc3RhbnRzIiwiY3JlYXRlUmFuZ2VDb250ZW50UmVtb3ZlciIsInJlbW92ZXIiLCJib3VuZGFyeVVwZGF0ZXIiLCJib3VuZGFyeSIsImNyZWF0ZVByb3RvdHlwZVJhbmdlIiwiZGV0YWNoZXIiLCJjcmVhdGVCZWZvcmVBZnRlck5vZGVTZXR0ZXIiLCJpc0JlZm9yZSIsImlzU3RhcnQiLCJiZWZvcmVBZnRlck5vZGVUeXBlcyIsInNldFJhbmdlU3RhcnQiLCJzZXRSYW5nZUVuZCIsInNldFJhbmdlU3RhcnRBbmRFbmQiLCJzZXRTdGFydCIsInNldEVuZCIsInNldFN0YXJ0QmVmb3JlIiwic2V0U3RhcnRBZnRlciIsInNldEVuZEJlZm9yZSIsInNldEVuZEFmdGVyIiwic2VsZWN0Tm9kZUNvbnRlbnRzIiwic2VsZWN0Tm9kZSIsImV4dHJhY3RDb250ZW50cyIsImRlbGV0ZUNvbnRlbnRzIiwiY2FuU3Vycm91bmRDb250ZW50cyIsImJvdW5kYXJpZXNJbnZhbGlkIiwic3BsaXRCb3VuZGFyaWVzIiwic3RhcnRFbmRTYW1lIiwibm9ybWFsaXplQm91bmRhcmllcyIsIm1lcmdlRm9yd2FyZCIsInNpYmxpbmciLCJhcHBlbmREYXRhIiwibWVyZ2VCYWNrd2FyZCIsIm5vZGVMZW5ndGgiLCJpbnNlcnREYXRhIiwibm9kZUluZGV4Iiwibm9ybWFsaXplU3RhcnQiLCJlbmROb2RlIiwic3RhcnROb2RlIiwiY29sbGFwc2VUb1BvaW50IiwidXBkYXRlQ29sbGFwc2VkQW5kQ29tbW9uQW5jZXN0b3IiLCJ1cGRhdGVCb3VuZGFyaWVzIiwic3RhcnRNb3ZlZCIsImVuZE1vdmVkIiwiUmFuZ2UiLCJib3VuZGFyeWNoYW5nZSIsInN1YlJhbmdlIiwiY2xvbmVSYW5nZSIsImRldGFjaFJhbmdlIiwiQkFEX0JPVU5EQVJZUE9JTlRTX0VSUiIsIklOVkFMSURfTk9ERV9UWVBFX0VSUiIsInJlYWRvbmx5Tm9kZVR5cGVzIiwiaW5zZXJ0YWJsZU5vZGVUeXBlcyIsInN1cnJvdW5kTm9kZVR5cGVzIiwic3R5bGVFbCIsImh0bWxQYXJzaW5nQ29uZm9ybXMiLCJjcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQiLCJmcmFnbWVudFN0ciIsInJhbmdlUHJvcGVydGllcyIsImF0dGFjaExpc3RlbmVyIiwiY29tcGFyZUJvdW5kYXJ5UG9pbnRzIiwiaG93IiwicHJlZml4QSIsInByZWZpeEIiLCJpbnNlcnROb2RlIiwiY2xvbmVDb250ZW50cyIsInN1cnJvdW5kQ29udGVudHMiLCJoYXNDaGlsZE5vZGVzIiwibGFzdENoaWxkIiwidGV4dEJpdHMiLCJjb21wYXJlTm9kZSIsInN0YXJ0Q29tcGFyaXNvbiIsImNvbXBhcmVQb2ludCIsImVuZENvbXBhcmlzb24iLCJ0b0h0bWwiLCJpbnRlcnNlY3RzTm9kZSIsInRvdWNoaW5nSXNJbnRlcnNlY3RpbmciLCJpc1BvaW50SW5SYW5nZSIsImludGVyc2VjdHNSYW5nZSIsImludGVyc2VjdGlvbiIsImludGVyc2VjdGlvblJhbmdlIiwidW5pb24iLCJ1bmlvblJhbmdlIiwiY29udGFpbnNOb2RlIiwiYWxsb3dQYXJ0aWFsIiwiY29udGFpbnNOb2RlQ29udGVudHMiLCJjb250YWluc1JhbmdlIiwiY29udGFpbnNOb2RlVGV4dCIsIm5vZGVSYW5nZSIsInRleHROb2RlcyIsImdldE5vZGVzIiwibGFzdFRleHROb2RlIiwiY3JlYXRlTm9kZUl0ZXJhdG9yIiwiY29sbGFwc2VCZWZvcmUiLCJjb2xsYXBzZUFmdGVyIiwicmFuZ2VzRXF1YWwiLCJyYW5nZVByb3RvdHlwZSIsInIxIiwicjIiLCJEb21SYW5nZSIsImdldFRleHRSYW5nZUNvbnRhaW5lckVsZW1lbnQiLCJ0ZXh0UmFuZ2UiLCJwYXJlbnRFbCIsImR1cGxpY2F0ZSIsInN0YXJ0RWwiLCJlbmRFbCIsInN0YXJ0RW5kQ29udGFpbmVyIiwidGV4dFJhbmdlSXNDb2xsYXBzZWQiLCJjb21wYXJlRW5kUG9pbnRzIiwiZ2V0VGV4dFJhbmdlQm91bmRhcnlQb3NpdGlvbiIsIndob2xlUmFuZ2VDb250YWluZXJFbGVtZW50IiwiaXNDb2xsYXBzZWQiLCJ3b3JraW5nUmFuZ2UiLCJjb250YWluZXJFbGVtZW50IiwiY2FuSGF2ZUhUTUwiLCJjb21wYXJpc29uIiwicHJldmlvdXNOb2RlIiwiYm91bmRhcnlQb3NpdGlvbiIsImJvdW5kYXJ5Tm9kZSIsIndvcmtpbmdOb2RlIiwid29ya2luZ0NvbXBhcmlzb25UeXBlIiwibW92ZVRvRWxlbWVudFRleHQiLCJzZXRFbmRQb2ludCIsInRlbXBSYW5nZSIsInJhbmdlTGVuZ3RoIiwiY3JlYXRlQm91bmRhcnlUZXh0UmFuZ2UiLCJib3VuZGFyeVBhcmVudCIsImJvdW5kYXJ5T2Zmc2V0Iiwibm9kZUlzRGF0YU5vZGUiLCJXcmFwcGVkUmFuZ2UiLCJyYW5nZUNvbnRhaW5lckVsZW1lbnQiLCJnbG9iYWxPYmoiLCJjcmVhdGVOYXRpdmVSYW5nZSIsInVwZGF0ZVJhbmdlUHJvcGVydGllcyIsIm5hdGl2ZVJhbmdlIiwidXBkYXRlTmF0aXZlUmFuZ2UiLCJkZXRhY2hlZCIsInJhbmdlUHJvdG8iLCJjYW5TZXRSYW5nZVN0YXJ0QWZ0ZXJFbmQiLCJ0ZXN0VGV4dE5vZGUiLCJvcHBvc2l0ZU5hbWUiLCJnZXRFbmRPZmZzZXQiLCJyYW5nZTIiLCJyYW5nZVRvVGV4dFJhbmdlIiwic3RhcnRSYW5nZSIsImVuZFJhbmdlIiwiY3JlYXRlUmFuZ3lSYW5nZSIsImNyZWF0ZUlmcmFtZVJhbmdlIiwiY3JlYXRlSWZyYW1lUmFuZ3lSYW5nZSIsImdldFdpblNlbGVjdGlvbiIsIndpblBhcmFtIiwiZ2V0U2VsZWN0aW9uIiwiZ2V0RG9jU2VsZWN0aW9uIiwidXBkYXRlQW5jaG9yQW5kRm9jdXNGcm9tUmFuZ2UiLCJzZWwiLCJiYWNrd2FyZHMiLCJhbmNob3JQcmVmaXgiLCJmb2N1c1ByZWZpeCIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsInVwZGF0ZUFuY2hvckFuZEZvY3VzRnJvbU5hdGl2ZVNlbGVjdGlvbiIsIm5hdGl2ZVNlbCIsIm5hdGl2ZVNlbGVjdGlvbiIsInVwZGF0ZUVtcHR5U2VsZWN0aW9uIiwicmFuZ2VDb3VudCIsIl9yYW5nZXMiLCJnZXROYXRpdmVSYW5nZSIsIl9zZWxlY3Rpb25OYXRpdmVSYW5nZSIsInJhbmdlQ29udGFpbnNTaW5nbGVFbGVtZW50IiwicmFuZ2VOb2RlcyIsImdldFNpbmdsZUVsZW1lbnRGcm9tUmFuZ2UiLCJ1cGRhdGVGcm9tVGV4dFJhbmdlIiwid3JhcHBlZFJhbmdlIiwidXBkYXRlQ29udHJvbFNlbGVjdGlvbiIsImRvY1NlbGVjdGlvbiIsImNvbnRyb2xSYW5nZSIsImFkZFJhbmdlVG9Db250cm9sU2VsZWN0aW9uIiwicmFuZ2VFbGVtZW50IiwibmV3Q29udHJvbFJhbmdlIiwiY3JlYXRlQ29udHJvbFJhbmdlIiwiV3JhcHBlZFNlbGVjdGlvbiIsImNyZWF0ZUNvbnRyb2xTZWxlY3Rpb24iLCJyYW5nZXMiLCJhc3NlcnROb2RlSW5TYW1lRG9jdW1lbnQiLCJyYW5nZUluc3BlY3RzIiwiYW5jaG9yIiwiZ2V0UmFuZ2VBdCIsImNoZWNrU2VsZWN0aW9uUmFuZ2VzIiwic2VsZWN0aW9uSXNDb2xsYXBzZWQiLCJCT09MRUFOIiwid2luZG93UHJvcGVydHlOYW1lIiwiQ09OVFJPTCIsImltcGxlbWVudHNXaW5HZXRTZWxlY3Rpb24iLCJpbXBsZW1lbnRzRG9jU2VsZWN0aW9uIiwidXNlRG9jdW1lbnRTZWxlY3Rpb24iLCJpc1NlbGVjdGlvblZhbGlkIiwiZ2V0TmF0aXZlU2VsZWN0aW9uIiwidGVzdFNlbGVjdGlvbiIsInNlbGVjdGlvbkhhc0FuY2hvckFuZEZvY3VzIiwic2VsZWN0aW9uSGFzRXh0ZW5kIiwic2VsZWN0aW9uSGFzUmFuZ2VDb3VudCIsInNlbGVjdGlvblN1cHBvcnRzTXVsdGlwbGVSYW5nZXMiLCJjb2xsYXBzZWROb25FZGl0YWJsZVNlbGVjdGlvbnNTdXBwb3J0ZWQiLCJpZnJhbWUiLCJpZnJhbWVEb2MiLCJ3cml0ZSIsImRvY0VsIiwiaWZyYW1lQm9keSIsImFkZFJhbmdlIiwicmVtb3ZlQWxsUmFuZ2VzIiwidGVzdENvbnRyb2xSYW5nZSIsImltcGxlbWVudHNDb250cm9sUmFuZ2UiLCJnZXRTZWxlY3Rpb25SYW5nZUF0IiwiZG9jU2VsIiwiZ2V0SWZyYW1lU2VsZWN0aW9uIiwic2VsUHJvdG8iLCJhZGRSYW5nZUJhY2t3YXJkcyIsInByZXZpb3VzUmFuZ2VDb3VudCIsInNlbGVjdGlvbklzQmFja3dhcmRzIiwic2V0UmFuZ2VzIiwicmVmcmVzaFNlbGVjdGlvbiIsImNoZWNrRm9yQ2hhbmdlcyIsIm9sZFJhbmdlcyIsInJlbW92ZVJhbmdlTWFudWFsbHkiLCJnZXRBbGxSYW5nZXMiLCJyZW1vdmVkIiwicmVtb3ZlUmFuZ2UiLCJpc0JhY2t3YXJkcyIsInJhbmdlVGV4dHMiLCJjb2xsYXBzZVRvU3RhcnQiLCJjb2xsYXBzZVRvRW5kIiwic2VsZWN0QWxsQ2hpbGRyZW4iLCJkZWxldGVGcm9tRG9jdW1lbnQiLCJzZXRTaW5nbGVSYW5nZSIsIlNlbGVjdGlvbiIsInNlbGVjdGlvblByb3RvdHlwZSIsIkJhc2UiLCJfaW5zdGFuY2UiLCJfc3RhdGljIiwiX3Byb3RvdHlwaW5nIiwicHJvdG8iLCJiYXNlIiwia2xhc3MiLCJfY29uc3RydWN0aW5nIiwiaW1wbGVtZW50IiwidmFsdWVPZiIsInRvU291cmNlIiwiaGlkZGVuIiwib2JqZWN0IiwiYmxvY2siLCJicm93c2VyIiwiaW9zVmVyc2lvbiIsImFuZHJvaWRWZXJzaW9uIiwidGVzdEVsZW1lbnQiLCJpc0lFIiwiaXNHZWNrbyIsImlzV2ViS2l0IiwiaXNDaHJvbWUiLCJpc09wZXJhIiwiVVNFUl9BR0VOVCIsImhhc0NvbnRlbnRFZGl0YWJsZVN1cHBvcnQiLCJoYXNFZGl0aW5nQXBpU3VwcG9ydCIsImV4ZWNDb21tYW5kIiwicXVlcnlDb21tYW5kU3VwcG9ydGVkIiwicXVlcnlDb21tYW5kU3RhdGUiLCJoYXNRdWVyeVNlbGVjdG9yU3VwcG9ydCIsInF1ZXJ5U2VsZWN0b3IiLCJpc0luY29tcGF0aWJsZU1vYmlsZUJyb3dzZXIiLCJpc0lvcyIsImlzQW5kcm9pZCIsImlzVG91Y2hEZXZpY2UiLCJzdXBwb3J0c0V2ZW50Iiwic3VwcG9ydHNTYW5kYm94ZWRJZnJhbWVzIiwidGhyb3dzTWl4ZWRDb250ZW50V2FybmluZ1doZW5JZnJhbWVTcmNJc0VtcHR5IiwiZGlzcGxheXNDYXJldEluRW1wdHlDb250ZW50RWRpdGFibGVDb3JyZWN0bHkiLCJoYXNDdXJyZW50U3R5bGVQcm9wZXJ0eSIsImhhc0hpc3RvcnlJc3N1ZSIsInBsYXRmb3JtIiwiaW5zZXJ0c0xpbmVCcmVha3NPblJldHVybiIsInN1cHBvcnRzUGxhY2Vob2xkZXJBdHRyaWJ1dGVPbiIsImV2ZW50TmFtZSIsInN1cHBvcnRzRXZlbnRzSW5JZnJhbWVDb3JyZWN0bHkiLCJzdXBwb3J0c0hUTUw1VGFncyIsImh0bWw1Iiwic3VwcG9ydHNDb21tYW5kIiwiYnVnZ3lDb21tYW5kcyIsImZvcm1hdEJsb2NrIiwiaW5zZXJ0VW5vcmRlcmVkTGlzdCIsImluc2VydE9yZGVyZWRMaXN0IiwiaW5zZXJ0SFRNTCIsImNvbW1hbmQiLCJpc0J1Z2d5IiwiZTEiLCJxdWVyeUNvbW1hbmRFbmFibGVkIiwiZTIiLCJkb2VzQXV0b0xpbmtpbmdJbkNvbnRlbnRFZGl0YWJsZSIsImNhbkRpc2FibGVBdXRvTGlua2luZyIsImNsZWFyc0NvbnRlbnRFZGl0YWJsZUNvcnJlY3RseSIsInN1cHBvcnRzR2V0QXR0cmlidXRlQ29ycmVjdGx5IiwidGQiLCJjYW5TZWxlY3RJbWFnZXNJbkNvbnRlbnRFZGl0YWJsZSIsImF1dG9TY3JvbGxzVG9DYXJldCIsImF1dG9DbG9zZXNVbmNsb3NlZFRhZ3MiLCJjbG9uZWRUZXN0RWxlbWVudCIsInN1cHBvcnRzTmF0aXZlR2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJzdXBwb3J0c1NlbGVjdGlvbk1vZGlmeSIsIm5lZWRzU3BhY2VBZnRlckxpbmVCcmVhayIsInN1cHBvcnRzU3BlZWNoQXBpT24iLCJjaHJvbWVWZXJzaW9uIiwiY3Jhc2hlc1doZW5EZWZpbmVQcm9wZXJ0eSIsInByb3BlcnR5IiwiZG9lc0FzeW5jRm9jdXMiLCJoYXNQcm9ibGVtc1NldHRpbmdDYXJldEFmdGVySW1nIiwiaGFzVW5kb0luQ29udGV4dE1lbnUiLCJoYXNJbnNlcnROb2RlSXNzdWUiLCJoYXNJZnJhbWVGb2N1c0lzc3VlIiwiY3JlYXRlc05lc3RlZEludmFsaWRNYXJrdXBBZnRlclBhc3RlIiwibmVlZGxlIiwid2l0aG91dCIsImFycmF5VG9TdWJzdHJhY3QiLCJuZXdBcnIiLCJuZXdBcnJheSIsIkRpc3BhdGNoZXIiLCJldmVudHMiLCJoYW5kbGVycyIsIm5ld0hhbmRsZXJzIiwiZmlyZSIsInBheWxvYWQiLCJvYnNlcnZlIiwic3RvcE9ic2VydmluZyIsIm1lcmdlIiwib3RoZXJPYmoiLCJuZXdPYmoiLCJXSElURV9TUEFDRV9TVEFSVCIsIldISVRFX1NQQUNFX0VORCIsIkVOVElUWV9SRUdfRVhQIiwiRU5USVRZX01BUCIsIiYiLCI8IiwiPiIsIlwiIiwiZXNjYXBlSFRNTCIsImF1dG9MaW5rIiwiX2hhc1BhcmVudFRoYXRTaG91bGRCZUlnbm9yZWQiLCJfcGFyc2VOb2RlIiwiX2NvbnZlcnRVcmxzVG9MaW5rcyIsIlVSTF9SRUdfRVhQIiwicHVuY3R1YXRpb24iLCJUUkFJTElOR19DSEFSX1JFR19FWFAiLCJvcGVuaW5nIiwiQlJBQ0tFVFMiLCJyZWFsVXJsIiwiZGlzcGxheVVybCIsIk1BWF9ESVNQTEFZX0xFTkdUSCIsIl9nZXRUZW1wRWxlbWVudCIsInRlbXBFbGVtZW50IiwiX3d5c2lodG1sNV90ZW1wRWxlbWVudCIsIl93cmFwTWF0Y2hlc0luTm9kZSIsIm5vZGVWYWx1ZSIsIklHTk9SRV9VUkxTX0lOIiwiY2hpbGROb2Rlc0xlbmd0aCIsIikiLCJdIiwifSIsImNsYXNzTGlzdCIsImVsZW1lbnRDbGFzc05hbWUiLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImNvbnZlcnRUb0xpc3QiLCJfY3JlYXRlTGlzdEl0ZW0iLCJsaXN0IiwibGlzdEl0ZW0iLCJfY3JlYXRlTGlzdCIsImxpc3RUeXBlIiwiY2hpbGROb2RlIiwibGluZUJyZWFrIiwiaXNCbG9ja0VsZW1lbnQiLCJpc0xpbmVCcmVhayIsImN1cnJlbnRMaXN0SXRlbSIsImxpbmVCcmVha3MiLCJsaW5lQnJlYWtzTGVuZ3RoIiwiZnJvbSIsImluc2VydCIsInJlcGxhY2VDaGlsZCIsImNvcHlBdHRyaWJ1dGVzIiwiYXR0cmlidXRlc1RvQ29weSIsImVsZW1lbnRUb0NvcHlGcm9tIiwiZWxlbWVudFRvQ29weVRvIiwiYXR0cmlidXRlIiwiYW5kVG8iLCJjYWxsZWUiLCJCT1hfU0laSU5HX1BST1BFUlRJRVMiLCJzaG91bGRJZ25vcmVCb3hTaXppbmdCb3JkZXJCb3giLCJoYXNCb3hTaXppbmdCb3JkZXJCb3giLCJjb3B5U3R5bGVzIiwic3R5bGVzVG9Db3B5IiwiZ2V0QXNEb20iLCJfaW5uZXJIVE1MU2hpdiIsIl9lbnN1cmVIVE1MNUNvbXBhdGliaWxpdHkiLCJfd3lzaWh0bWw1X3N1cHBvcnRzSFRNTDVUYWdzIiwiSFRNTDVfRUxFTUVOVFMiLCJnZXRQYXJlbnRFbGVtZW50IiwiX2lzU2FtZU5vZGVOYW1lIiwiZGVzaXJlZE5vZGVOYW1lcyIsIl9pc0VsZW1lbnQiLCJfaGFzQ2xhc3NOYW1lIiwiY2xhc3NSZWdFeHAiLCJjbGFzc05hbWVzIiwiX2dldFBhcmVudEVsZW1lbnRXaXRoTm9kZU5hbWUiLCJsZXZlbHMiLCJfZ2V0UGFyZW50RWxlbWVudFdpdGhOb2RlTmFtZUFuZENsYXNzTmFtZSIsIm1hdGNoaW5nU2V0IiwiY2FtZWxpemUiLCJSRUdfRVhQX0NBTUVMSVpFIiwic3R5bGVQcm9wZXJ0eU1hcHBpbmciLCJmbG9hdCIsImNhbWVsaXplZFByb3BlcnR5Iiwic3R5bGVWYWx1ZSIsIm9yaWdpbmFsT3ZlcmZsb3ciLCJuZWVkc092ZXJmbG93UmVzZXQiLCJnZXRQcm9wZXJ0eVZhbHVlIiwiaGFzRWxlbWVudFdpdGhUYWdOYW1lIiwiX2dldERvY3VtZW50SWRlbnRpZmllciIsIl93eXNpaHRtbDVfaWRlbnRpZmllciIsIkRPQ1VNRU5UX0lERU5USUZJRVIiLCJMSVZFX0NBQ0hFIiwiY2FjaGVFbnRyeSIsImhhc0VsZW1lbnRXaXRoQ2xhc3NOYW1lIiwiZWxlbWVudFRvSW5zZXJ0IiwiYmVmb3JlIiwiaW50byIsImluc2VydENTUyIsInN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJldmVudE5hbWVzIiwiaGFuZGxlcldyYXBwZXIiLCJzcmNFbGVtZW50IiwiY2FuY2VsQnViYmxlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImRldGFjaEV2ZW50IiwiZWxlbWVudE9ySHRtbCIsImNsZWFuVXAiLCJjdXJyZW50UnVsZXMiLCJkZWZhdWx0UnVsZXMiLCJfY29udmVydCIsImdldENvcnJlY3RJbm5lckhUTUwiLCJvbGROb2RlIiwibmV3Q2hpbGQiLCJvbGROb2RlVHlwZSIsIm9sZENoaWxkcyIsIm9sZENoaWxkc0xlbmd0aCIsIk5PREVfVFlQRV9NQVBQSU5HIiwiREVGQVVMVF9OT0RFX05BTUUiLCJhdHRyaWJ1dGVzIiwiX2hhbmRsZUVsZW1lbnQiLCJ0YWdSdWxlcyIsInRhZ3MiLCJzY29wZU5hbWUiLCJfd3lzaWh0bWw1IiwicmVuYW1lX3RhZyIsIl9oYW5kbGVBdHRyaWJ1dGVzIiwiY2xhc3Nlc0xlbmd0aCIsIm5ld0NsYXNzZXNMZW5ndGgiLCJuZXdBdHRyaWJ1dGVWYWx1ZSIsInNldENsYXNzIiwic2V0X2NsYXNzIiwiYWRkX2NsYXNzIiwic2V0QXR0cmlidXRlcyIsInNldF9hdHRyaWJ1dGVzIiwiY2hlY2tBdHRyaWJ1dGVzIiwiY2hlY2tfYXR0cmlidXRlcyIsImFsbG93ZWRDbGFzc2VzIiwiY2xhc3NlcyIsIm5ld0NsYXNzZXMiLCJuZXdVbmlxdWVDbGFzc2VzIiwib2xkQ2xhc3NlcyIsImF0dHJpYnV0ZUNoZWNrTWV0aG9kcyIsIl9nZXRBdHRyaWJ1dGUiLCJhZGRDbGFzc01ldGhvZHMiLCJXSElURV9TUEFDRV9SRUdfRVhQIiwiX2lzTG9hZGVkSW1hZ2UiLCJIQVNfR0VUX0FUVFJJQlVURV9CVUciLCJtb3pNYXRjaGVzU2VsZWN0b3IiLCJyZWFkeVN0YXRlIiwiX2hhbmRsZVRleHQiLCJJTlZJU0lCTEVfU1BBQ0VfUkVHX0VYUCIsIlJFR19FWFAiLCJhbHQiLCJudW1iZXJzIiwiYWxpZ25faW1nIiwibWFwcGluZyIsImFsaWduX3RleHQiLCJqdXN0aWZ5IiwiY2xlYXJfYnIiLCJib3RoIiwic2l6ZV9mb250IiwiLSIsIisiLCJyZW1vdmVFbXB0eVRleHROb2RlcyIsInJlbmFtZUVsZW1lbnQiLCJuZXdOb2RlTmFtZSIsIm5ld0VsZW1lbnQiLCJyZXBsYWNlV2l0aENoaWxkTm9kZXMiLCJfaXNCbG9ja0VsZW1lbnQiLCJfaXNMaW5lQnJlYWsiLCJfYXBwZW5kTGluZUJyZWFrIiwicmVzb2x2ZUxpc3QiLCJ1c2VMaW5lQnJlYWtzIiwiaXNMYXN0Q2hpbGQiLCJzaG91bGRBcHBlbmRMaW5lQnJlYWsiLCJwYXJhZ3JhcGgiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJ3aW5kb3dQcm9wZXJ0aWVzIiwid2luZG93UHJvcGVydGllczIiLCJkb2N1bWVudFByb3BlcnRpZXMiLCJTYW5kYm94IiwicmVhZHlDYWxsYmFjayIsIl9jcmVhdGVJZnJhbWUiLCJpbnNlcnRJbnRvIiwiZ2V0SWZyYW1lIiwiX3JlYWR5RXJyb3IiLCJzZWN1cml0eSIsImFsbG93dHJhbnNwYXJlbmN5IiwiZnJhbWVib3JkZXIiLCJtYXJnaW53aWR0aCIsIm1hcmdpbmhlaWdodCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsIl9vbkxvYWRJZnJhbWUiLCJpZnJhbWVXaW5kb3ciLCJpZnJhbWVEb2N1bWVudCIsImNoYXJzZXQiLCJjaGFyYWN0ZXJTZXQiLCJzYW5kYm94SHRtbCIsIl9nZXRIdG1sIiwic3R5bGVzaGVldHMiLCJlcnJvck1lc3NhZ2UiLCJsaW5lTnVtYmVyIiwiX3Vuc2V0IiwibG9hZGVkIiwidGVtcGxhdGVWYXJzIiwic2V0dGVyIiwiX19kZWZpbmVHZXR0ZXJfXyIsIl9fZGVmaW5lU2V0dGVyX18iLCJkZWZpbmVQcm9wZXJ0eSIsImNzc0Zsb2F0Iiwic3R5bGVGbG9hdCIsInNpbXVsYXRlUGxhY2Vob2xkZXIiLCJlZGl0b3IiLCJ2aWV3IiwicGxhY2Vob2xkZXJUZXh0IiwiQ0xBU1NfTkFNRSIsInVuc2V0IiwiaGFzUGxhY2Vob2xkZXJTZXQiLCJjbGVhciIsInBsYWNlaG9sZGVyU2V0Iiwic2V0VGV4dENvbnRlbnQiLCJ0ZXh0Q29udGVudCIsImdldFRleHRDb250ZW50IiwiaW5uZXJUZXh0IiwiY2xlYW5QYXN0ZWRIVE1MIiwibWF0Y2hlc0xlbmd0aCIsImEgdSIsImVuc3VyZVByb3BlckNsZWFyaW5nIiwiY2xlYXJJZk5lY2Vzc2FyeSIsImNvbXBvc2VyIiwiVElMREVfRVNDQVBFRCIsInVybFRvU2VhcmNoIiwiZWxlbWVudHNXaXRoVGlsZGUiLCJyZWRyYXciLCJfZ2V0Q3VtdWxhdGl2ZU9mZnNldFRvcCIsImdldEJvb2ttYXJrIiwiZ2V0UmFuZ2UiLCJzZXRCb29rbWFyayIsImJvb2ttYXJrIiwic2V0U2VsZWN0aW9uIiwic2V0QmVmb3JlIiwic2V0QWZ0ZXIiLCJhdm9pZEludmlzaWJsZVNwYWNlIiwiaXNFbGVtZW50IiwiZGlzcGxheVN0eWxlIiwiZ2V0U2VsZWN0ZWROb2RlIiwiZXhlY3V0ZUFuZFJlc3RvcmUiLCJyZXN0b3JlU2Nyb2xsUG9zaXRpb24iLCJjYXJldFBsYWNlaG9sZGVyIiwibmV3Q2FyZXRQbGFjZWhvbGRlciIsIm5ld1JhbmdlIiwib2xkU2Nyb2xsVG9wIiwib2xkU2Nyb2xsTGVmdCIsInBsYWNlaG9sZGVySHRtbCIsImV4ZWN1dGVBbmRSZXN0b3JlU2ltcGxlIiwiZmlyc3ROb2RlIiwibGFzdE5vZGUiLCJyYW5nZUJhY2t1cCIsImUzIiwic3Vycm91bmQiLCJzY3JvbGxJbnRvVmlldyIsInRvbGVyYW5jZSIsImhhc1Njcm9sbEJhcnMiLCJfd3lzaWh0bWw1U2Nyb2xsSW50b1ZpZXdFbGVtZW50Iiwic2VsZWN0TGluZSIsIl9zZWxlY3RMaW5lX1czQyIsIl9zZWxlY3RMaW5lX01TSUUiLCJtb2RpZnkiLCJyYW5nZUJvdHRvbSIsInJhbmdlRW5kIiwibWVhc3VyZU5vZGUiLCJyYW5nZVRvcCIsImJvdW5kaW5nVG9wIiwic2Nyb2xsV2lkdGgiLCJtb3ZlVG9Qb2ludCIsImNzc0NsYXNzIiwicmVnRXhwIiwibWF0Y2hpbmdDbGFzc05hbWVzIiwiaGFzU2FtZUNsYXNzZXMiLCJlbDEiLCJlbDIiLCJSRUdfRVhQX1dISVRFX1NQQUNFIiwicmVwbGFjZVdpdGhPd25DaGlsZHJlbiIsImVsZW1lbnRzSGF2ZVNhbWVOb25DbGFzc0F0dHJpYnV0ZXMiLCJhdHRyMSIsImF0dHIyIiwiZ2V0TmFtZWRJdGVtIiwic3BlY2lmaWVkIiwiaXNTcGxpdFBvaW50Iiwic3BsaXROb2RlQXQiLCJkZXNjZW5kYW50Tm9kZSIsImRlc2NlbmRhbnRPZmZzZXQiLCJyZW1vdmVBdHRyaWJ1dGUiLCJNZXJnZSIsImlzRWxlbWVudE1lcmdlIiwiZmlyc3RUZXh0Tm9kZSIsIkhUTUxBcHBsaWVyIiwidGFnTmFtZXMiLCJzaW1pbGFyQ2xhc3NSZWdFeHAiLCJub3JtYWxpemUiLCJkZWZhdWx0VGFnTmFtZSIsImFwcGx5VG9BbnlUYWdOYW1lIiwiZG9NZXJnZSIsImdldExlbmd0aCIsImdldEFuY2VzdG9yV2l0aENsYXNzIiwiY3NzQ2xhc3NNYXRjaCIsInBvc3RBcHBseSIsImN1cnJlbnRNZXJnZSIsInByZWNlZGluZ1RleHROb2RlIiwibWVyZ2VzIiwicmFuZ2VTdGFydE5vZGUiLCJyYW5nZUVuZE5vZGUiLCJyYW5nZVN0YXJ0T2Zmc2V0IiwicmFuZ2VFbmRPZmZzZXQiLCJnZXRBZGphY2VudE1lcmdlYWJsZVRleHROb2RlIiwibmV4dFRleHROb2RlIiwiZm9yd2FyZCIsImFkamFjZW50Tm9kZSIsImlzVGV4dE5vZGUiLCJwcm9wTmFtZSIsImFyZUVsZW1lbnRzTWVyZ2VhYmxlIiwiY3JlYXRlQ29udGFpbmVyIiwiYXBwbHlUb1RleHROb2RlIiwiaXNSZW1vdmFibGUiLCJ1bmRvVG9UZXh0Tm9kZSIsImFuY2VzdG9yV2l0aENsYXNzIiwiYW5jZXN0b3JSYW5nZSIsImFwcGx5VG9SYW5nZSIsInVuZG9Ub1JhbmdlIiwiZ2V0VGV4dFNlbGVjdGVkQnlSYW5nZSIsImlzQXBwbGllZFRvUmFuZ2UiLCJzZWxlY3RlZFRleHQiLCJ0b2dnbGVSYW5nZSIsIkNvbW1hbmRzIiwiZm9ybWF0SW5saW5lIiwiX3JlbW92ZUZvcm1hdCIsImFuY2hvcnMiLCJjb2RlRWxlbWVudCIsImhhc0VsZW1lbnRDaGlsZCIsImVsZW1lbnRUb1NldENhcmV0QWZ0ZXIiLCJ3aGl0ZVNwYWNlIiwidGVtcENsYXNzIiwidGVtcENsYXNzUmVnRXhwIiwidW5kZWYiLCJOT0RFX05BTUUiLCJjcmVhdGVMaW5rIiwiZm9udFNpemUiLCJmb3JlQ29sb3IiLCJfYWRkQ2xhc3MiLCJfcmVtb3ZlQ2xhc3MiLCJfaXNCbGFua1RleHROb2RlIiwiX2dldFByZXZpb3VzU2libGluZ1RoYXRJc05vdEJsYW5rIiwiX2dldE5leHRTaWJsaW5nVGhhdElzTm90QmxhbmsiLCJfYWRkTGluZUJyZWFrQmVmb3JlQW5kQWZ0ZXIiLCJfaXNMaW5lQnJlYWtPckJsb2NrRWxlbWVudCIsIl9yZW1vdmVMaW5lQnJlYWtCZWZvcmVBbmRBZnRlciIsIl9yZW1vdmVMYXN0Q2hpbGRJZkxpbmVCcmVhayIsIl9leGVjQ29tbWFuZCIsImV2ZW50TGlzdGVuZXIiLCJfc2VsZWN0TGluZUFuZFdyYXAiLCJfaGFzQ2xhc3NlcyIsIkJMT0NLX0VMRU1FTlRTX0dST1VQIiwic2VsZWN0ZWROb2RlIiwiYmxvY2tFbGVtZW50IiwiZGVmYXVsdE5vZGVOYW1lIiwiaGFzQ2xhc3NlcyIsIl9nZXRUYWdOYW1lcyIsIkFMSUFTX01BUFBJTkciLCJfZ2V0QXBwbGllciIsImlkZW50aWZpZXIiLCJodG1sQXBwbGllciIsInN0cm9uZyIsImVtIiwiYWxpYXNUYWdOYW1lIiwiZ29vZ2xlRm9udCIsImluc2VydEltYWdlIiwiaW1hZ2VzSW5TZWxlY3Rpb24iLCJMSU5FX0JSRUFLIiwiaW5zZXJ0TGluZUJyZWFrIiwib3RoZXJMaXN0IiwidGVtcENsYXNzTmFtZSIsImp1c3RpZnlDZW50ZXIiLCJqdXN0aWZ5TGVmdCIsImp1c3RpZnlSaWdodCIsImp1c3RpZnlGdWxsIiwibGluZUhlaWdodCIsInJlZG8iLCJ1bmRvTWFuYWdlciIsInN0YW5kYXJkRm9udCIsInRleHRDb2xvciIsInVuZG8iLCJjbGVhblRlbXBFbGVtZW50cyIsIlpfS0VZIiwiWV9LRVkiLCJNQVhfSElTVE9SWV9FTlRSSUVTIiwiREFUQV9BVFRSX05PREUiLCJEQVRBX0FUVFJfT0ZGU0VUIiwiVU5ET19IVE1MIiwiUkVET19IVE1MIiwiVW5kb01hbmFnZXIiLCJoaXN0b3J5U3RyIiwiaGlzdG9yeURvbSIsInRyYW5zYWN0IiwiX29ic2VydmUiLCJsYXN0S2V5Iiwic2FuZGJveCIsIm1ldGFLZXkiLCJpc1VuZG8iLCJpc1JlZG8iLCJvYnNlcnZlZCIsInByZXZpb3VzSHRtbCIsImN1cnJlbnRIdG1sIiwiZ2V0Q2hpbGROb2RlSW5kZXgiLCJ1bmRvUG9zc2libGUiLCJyZWRvUG9zc2libGUiLCJoaXN0b3J5RW50cnkiLCJnZXRDaGlsZE5vZGVCeUluZGV4IiwiVmlldyIsInRleHRhcmVhRWxlbWVudCIsIl9vYnNlcnZlVmlld0NoYW5nZSIsImN1cnJlbnRWaWV3IiwiQ29tcG9zZXIiLCJDQVJFVF9IQUNLIiwidGV4dGFyZWEiLCJfaW5pdFNhbmRib3giLCJfZGlzcGxheVN0eWxlIiwic2V0VG9FbmQiLCJfY3JlYXRlIiwiZm9ybSIsImhpZGRlbkZpZWxkIiwiY29tcG9zZXJDbGFzc05hbWUiLCJfaW5pdEF1dG9MaW5raW5nIiwiX2luaXRPYmplY3RSZXNpemluZyIsIl9pbml0VW5kb01hbmFnZXIiLCJfaW5pdExpbmVCcmVha2luZyIsImluaXRTeW5jIiwic3luYyIsInN1cHBvcnRzRGlzYWJsaW5nT2ZBdXRvTGlua2luZyIsInN1cHBvcnRzQXV0b0xpbmtpbmciLCJsaW5rcyIsIm5ld1RleHRDb250ZW50IiwicHJvcGVydGllcyIsInByb3BlcnRpZXNMZW5ndGgiLCJhZGp1c3QiLCJVU0VfTkFUSVZFX0xJTkVfQlJFQUtfSU5TSURFX1RBR1MiLCJMSVNUX1RBR1MiLCJpbnZpc2libGVTcGFjZSIsIkhPU1RfVEVNUExBVEUiLCJURVhUX0ZPUk1BVFRJTkciLCJCT1hfRk9STUFUVElORyIsIkFERElUSU9OQUxfQ1NTX1JVTEVTIiwiZm9jdXNXaXRob3V0U2Nyb2xsaW5nIiwic2V0QWN0aXZlIiwiZWxlbWVudFN0eWxlIiwib3JpZ2luYWxTY3JvbGxUb3AiLCJvcmlnaW5hbFNjcm9sbExlZnQiLCJvcmlnaW5hbFN0eWxlcyIsIldlYmtpdFVzZXJTZWxlY3QiLCJzY3JvbGxUbyIsImRpc3BsYXlWYWx1ZUZvckNvcHlpbmciLCJvcmlnaW5hbEFjdGl2ZUVsZW1lbnQiLCJoYXNQbGFjZWhvbGRlciIsIm9yaWdpbmFsUGxhY2Vob2xkZXIiLCJvcmlnaW5hbERpc3BsYXlWYWx1ZSIsIm9yaWdpbmFsRGlzYWJsZWQiLCJmb2N1c1N0eWxlc0hvc3QiLCJibHVyU3R5bGVzSG9zdCIsImRpc2FibGVkU3R5bGVzSG9zdCIsImJsdXIiLCJib3hGb3JtYXR0aW5nU3R5bGVzIiwic2hvcnRjdXRzIiwiZm9jdXNCbHVyRWxlbWVudCIsInBhc3RlRXZlbnRzIiwiZG9tTm9kZVJlbW92ZWRJbnRlcnZhbCIsInRpdGxlUHJlZml4ZXMiLCJJTUciLCJBIiwiaGFzVGl0bGUiLCJJTlRFUlZBTCIsIlN5bmNocm9uaXplciIsImZyb21Db21wb3NlclRvVGV4dGFyZWEiLCJzaG91bGRQYXJzZUh0bWwiLCJmcm9tVGV4dGFyZWFUb0NvbXBvc2VyIiwidGV4dGFyZWFWYWx1ZSIsInN0YXJ0SW50ZXJ2YWwiLCJzdG9wSW50ZXJ2YWwiLCJUZXh0YXJlYSIsInN1cHBvcnRzUGxhY2Vob2xkZXIiLCJldmVudE1hcHBpbmciLCJmb2N1c2luIiwiZm9jdXNvdXQiLCJDTEFTU19OQU1FX09QRU5FRCIsIlNFTEVDVE9SX0ZPUk1fRUxFTUVOVFMiLCJTRUxFQ1RPUl9GSUVMRFMiLCJBVFRSSUJVVEVfRklFTERTIiwiRGlhbG9nIiwiX29ic2VydmVkIiwiY2FsbGJhY2tXcmFwcGVyIiwiX3NlcmlhbGl6ZSIsImVsZW1lbnRUb0NoYW5nZSIsImZvcm1FbGVtZW50cyIsIl9jbGVhckludGVydmFsIiwiX2ludGVycG9sYXRlIiwiYXZvaWRIaWRkZW5GaWVsZHMiLCJmaWVsZCIsImZpZWxkTmFtZSIsImZvY3VzZWRFbGVtZW50IiwiZmlyc3RGaWVsZCIsImxpbmtTdHlsZXMiLCJ3cmFwcGVyU3R5bGVzIiwibWFyZ2luIiwib3BhY2l0eSIsInpJbmRleCIsImlucHV0U3R5bGVzIiwiY3Vyc29yIiwib3V0bGluZSIsImlucHV0QXR0cmlidXRlcyIsIngtd2Via2l0LXNwZWVjaCIsInNwZWVjaCIsIlNwZWVjaCIsIndyYXBwZXIiLCJDTEFTU19OQU1FX0NPTU1BTkRfRElTQUJMRUQiLCJDTEFTU19OQU1FX0NPTU1BTkRTX0RJU0FCTEVEIiwiQ0xBU1NfTkFNRV9DT01NQU5EX0FDVElWRSIsIkNMQVNTX05BTUVfQUNUSU9OX0FDVElWRSIsIlRvb2xiYXIiLCJfZ2V0TGlua3MiLCJzcGVlY2hJbnB1dExpbmtzIiwiZGlhbG9nIiwiX2dldERpYWxvZyIsImNhcmV0Qm9va21hcmsiLCJkaWFsb2dFbGVtZW50IiwiZGlhbG9nQ29udGFpbmVyIiwiY29tbWFuZExpbmsiLCJjb21tYW5kVmFsdWUiLCJjb21tYW5kc0Rpc2FibGVkIiwiY29tbWFuZE9iaiIsImNvbW1hbmRNYXBwaW5nIiwiX3VwZGF0ZUxpbmtTdGF0ZXMiLCJleGVjQWN0aW9uIiwiY29tbWFuZExpbmtzIiwiYWN0aW9uTGlua3MiLCJ1bnNlbGVjdGFibGUiLCJhY3Rpb25NYXBwaW5nIiwiZGVmYXVsdENvbmZpZyIsInBhcnNlclJ1bGVzIiwiYm9keUNsYXNzTmFtZSIsInN1cHBvcnRUb3VjaERldmljZXMiLCJFZGl0b3IiLCJfaXNDb21wYXRpYmxlIiwiX2luaXRQYXJzZXIiLCJzeW5jaHJvbml6ZXIiLCJpc0NvbXBhdGlibGUiLCJodG1sT3JFbGVtZW50Iiwia2VlcFNjcm9sbFBvc2l0aW9uIiwibGluZS1oZWlnaHQiLCJsaW5lX2hlaWdodCIsInNpbmdsZSIsImRvdWJsZSIsInRleHQtY29sb3IiLCJoaWdobGlnaHQtY29sb3IiLCJiYWNrZ3JvdW5kLWNvbG9yIiwiZm9udC1zdHlsZXMiLCJmb250X3N0eWxlcyIsIm5vcm1hbCIsImgxIiwiaDIiLCJoMyIsImg0IiwiaDUiLCJoNiIsImVtcGhhc2lzIiwibGlzdHMiLCJ1bm9yZGVyZWQiLCJvcmRlcmVkIiwib3V0ZGVudCIsImluZGVudCIsImVkaXQiLCJjb2xvdXJzIiwiY3VzdG9tVGVtcGxhdGVzIiwiY3JlYXRlVG9vbGJhciIsImNyZWF0ZUVkaXRvciIsImZvY3VzLnd5c2lodG1sNSIsImluaXRIdG1sIiwiaW5pdEluc2VydExpbmsiLCJpbml0SW5zZXJ0SW1hZ2UiLCJpbml0QWxpZ25tZW50IiwiaW5pdENsZWFyIiwiaW5pdEZvbnQiLCJpbml0Rm9udFNpemUiLCJpbml0RW1waGFzaXMiLCJpbml0Q29sb3JQaWNrZXIiLCJrZXlwcmVzcyIsInJlbCIsInJlc2V0RGVmYXVsdHMiLCJkZWZhdWx0T3B0aW9uc0NhY2hlIiwiYnlwYXNzRGVmYXVsdHMiLCJzaGFsbG93RXh0ZW5kIiwiZGVlcEV4dGVuZCIsInd5c2l3eWctY29sb3Itc2lsdmVyIiwid3lzaXd5Zy1jb2xvci1ncmF5Iiwid3lzaXd5Zy1jb2xvci13aGl0ZSIsInd5c2l3eWctY29sb3ItbWFyb29uIiwid3lzaXd5Zy1jb2xvci1yZWQiLCJ3eXNpd3lnLWNvbG9yLXB1cnBsZSIsInd5c2l3eWctY29sb3ItZnVjaHNpYSIsInd5c2l3eWctY29sb3ItZ3JlZW4iLCJ3eXNpd3lnLWNvbG9yLWxpbWUiLCJ3eXNpd3lnLWNvbG9yLW9saXZlIiwid3lzaXd5Zy1jb2xvci15ZWxsb3ciLCJ3eXNpd3lnLWNvbG9yLW5hdnkiLCJ3eXNpd3lnLWNvbG9yLWJsdWUiLCJ3eXNpd3lnLWNvbG9yLXRlYWwiLCJ3eXNpd3lnLWNvbG9yLWFxdWEiLCJ3eXNpd3lnLWNvbG9yLW9yYW5nZSIsImFsaWduLWxlZnQiLCJhbGlnbi1jZW50ZXIiLCJhbGlnbi1yaWdodCIsIm9sIiwidWwiLCJibG9ja3F1b3RlIiwiaW1nIiwicHJlIiwiYmFja2dyb3VuZCIsImFkZEJhY2siLCJwcmVsb2FkSW1hZ2VzIiwidXJscyIsImltYWdlcyIsImdldFF1ZXJ5UGFyYW1ldGVyIl0sIm1hcHBpbmdzIjoiQUEwOFFBLEdBOTdRQUEsUUFBUUMsT0FBTywwQkFBMkIsT0FFekNDLEtBQUssYUFBYyxTQUFVQyxHQUU1QixHQUFJQyxHQUFNRCxFQUFXRSxhQUNqQkMsRUFBVUgsRUFBV0csVUFFckJDLEVBQW9DLFdBQ3RDLEdBQUlDLEdBQVlMLEVBQVdNLG1CQUN2QlQsU0FBUVUsU0FBU0YsR0FDbkJMLEVBQVdRLElBQUlILEdBSWZGLEVBQVFNLElBQUlSLEVBQUtELEVBQVdRLE9BSTVCTCxHQUNHQSxFQUFRTyxJQUFJVCxHQUdmRCxFQUFXUSxJQUFJTCxFQUFRTyxJQUFJVCxJQUFNLFNBQVNHLEdBRjFDQSxJQUlPUCxRQUFRVSxTQUFTUCxFQUFXTSxzQkFDckNOLEVBQVdRLElBQUlSLEVBQVdNLHdCQWE5QlQsUUFBUUMsT0FBTywwQkFBMEJhLFNBQVMsY0FBZSxlQUFnQixTQUFVQyxHQUV6RixHQUNJQyxHQUVBQyxFQUNBQyxFQUNBQyxFQUNBQyxFQUNBQyxFQUNBQyxFQUVBQyxFQUNBQyxFQUNBQyxFQUdBQyxFQUVBQyxFQUNBQyxFQUNBQyxFQUdBQyxFQXRCQUMsS0FFQUMsS0FPQUMsRUFBY2xCLEVBSWRtQixLQUNBQyxHQUFxQyxFQUVyQ0MsRUFBa0Isa0JBSWxCQyxHQUF3QixFQUN4QkMsRUFBMEIsSUFHMUJDLEVBQVUsUUFHVkMsRUFBMEIsV0FDNUIsR0FFSUMsR0FDQUMsRUFIQUMsRUFBTUMsT0FBT0MsVUFDYkMsR0FBK0IsV0FBWSxrQkFBbUIsaUJBQWtCLGVBS3BGLElBQUk5QyxRQUFRK0MsUUFBUUosRUFBSUssV0FDdEIsSUFBS1AsRUFBSSxF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TkMsR0FBTSxVQUNOQyxHQUFNLGFBQ05DLEdBQU0sV0FDTkMsR0FBTSxVQUNOQyxHQUFNLFVBQ05DLEdBQU0sU0FDTkMsR0FBTSxRQUNOQyxHQUFNLFVBQ05DLEdBQU0sU0FDTkMsR0FBTSxVQUNOQyxHQUFNLHlCQUNOQyxHQUFNLFdBQ05DLEdBQU0sZ0JBQ05DLEdBQU0sU0FDTkMsR0FBTSxpQ0FDTkMsR0FBTSx5QkFDTkMsR0FBTSxTQUNOQyxHQUFNLFdBQ05DLEdBQU0sZUFDTkMsR0FBTSxVQUNOQyxHQUFNLGdCQUNOQyxHQUFNLFdBQ05DLEdBQU0sV0FDTkMsR0FBTSxTQUNOQyxHQUFNLGFBQ05DLEdBQU0saUJBQ05DLEdBQU0sMkJBQ05DLEdBQU0sT0FDTkMsR0FBTSxRQUNOQyxHQUFNLFFBQ05DLEdBQU0sbUJBQ05DLEdBQU0sMEJBQ05DLEdBQU0sV0FDTkMsR0FBTSxVQUNOQyxHQUFNLFFBQ05DLEdBQU0sZUFDTkMsR0FBTSxhQUNOQyxHQUFNLFVBQ05DLEdBQU0sT0FDTkMsR0FBTSxTQUNOQyxHQUFNLGlCQUNOQyxHQUFNLG1DQUNOQyxHQUFNLFVBQ05DLEdBQU0sV0FDTkMsR0FBTSxXQUNOQyxHQUFNLHFCQUNOQyxHQUFNLGFBQ05DLEdBQU0sVUFDTkMsR0FBTSxRQUNOQyxHQUFNLGNBQ05DLEdBQU0sb0JBQ05DLEdBQU0sVUFDTkMsR0FBTSxVQUNOQyxHQUFNLFdBQ05DLEdBQU0saUJBQ05DLEdBQU0sbUJBQ05DLEdBQU0sT0FDTkMsR0FBTSxVQUNOQyxHQUFNLHdDQUNOQyxHQUFNLFNBQ05DLEdBQU0sdUJBQ05DLEdBQU0sZ0JBQ05DLEdBQU0sbUJBQ05DLEdBQU0sOEJBQ05DLEdBQU0sUUFDTkMsR0FBTSxVQUNOQyxHQUFNLFVBQ05DLEdBQU0sUUFDTkMsR0FBTSxZQUNOQyxHQUFNLFNBQ05DLEdBQU0sWUFDTkMsR0FBTSxVQUNOQyxHQUFNLGFBQ05DLEdBQU0sT0FDTkMsR0FBTSxZQUNOQyxHQUFNLFNBQ05DLEdBQU0sZ0JBQ05DLEdBQU0sU0FDTkMsR0FBTSxRQUNOQyxHQUFNLDhC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QUNKQyxHQUFJLEtBQ0pDLEdBQUksTUF1QkRDLG9CQUNGQyxLQUFRLHVCQUNSQyxRQUVJRCxLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsVUFDQSxVQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsT0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZ0JBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsT0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsYUFDVkMsVUFDRSxNQUNBLE1BQ0EsTUFDQSxVQUNBLE1BQ0EsTUFDQSxPQUVGQyxTQUNFLFlBQ0EsUUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGtCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxXQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLFlBQ0EsTUFDQSxhQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxjQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLFlBQ0EsTUFDQSxhQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGdCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxnQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxVQUNBLE9BRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGtCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE1BQ0EsYUFFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsbUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxXQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLGFBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFVBQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FDQSxZQUNBLFFBQ0Esa0JBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsMkJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGdCQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLGFBRUZDLFNBQ0UsV0FDQSxZQUNBLFlBQ0EsUUFDQSxRQUNBLGtCQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxVQUNBLFVBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsc0JBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGdCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGlCQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLGFBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE1BQ0EsYUFFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxXQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxPQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLGFBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxPQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLGFBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsT0FDVkMsVUFDRSxVQUNBLE9BRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxlQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHNCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGVBQ1ZDLFVBQ0UsTUFDQSxZQUNBLFVBQ0EsU0FDQSxNQUNBLGFBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxvQkFDVkMsVUFDRSxNQUNBLFlBQ0EsVUFDQSxTQUNBLE1BQ0EsYUFFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHFCQUNWQyxVQUNFLE1BQ0EsWUFDQSxVQUNBLFNBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsYUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLE1BQ0EsVUFDQSxPQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxrQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxnQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxjQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLG1CQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE9BRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGdCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGdCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsaUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxPQUNWQyxVQUNFLE9BRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFVBQ0EsT0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsYUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxpQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLFlBQ0EsTUFDQSxZQUNBLE1BQ0EsYUFFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGtCQUNWQyxVQUNFLFVBQ0EsTUFDQSxNQUNBLE9BRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxlQUNWQyxVQUNFLFVBQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGtCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxpQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxVQUNBLFNBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxjQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxVQUNBLFNBQ0EsT0FFRkMsU0FDRSxZQUNBLFlBQ0EsUUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGlCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxvQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsYUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxVQUNBLFNBQ0EsTUFDQSxhQUVGQyxTQUNFLFlBQ0EsWUFDQSxRQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUscUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsVUFDQSxVQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxxQkFDVkMsVUFDRSxVQUNBLFVBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsaUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsb0JBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGVBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE1BQ0EsYUFFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsVUFDQSxNQUNBLE9BRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxvQkFDVkMsVUFDRSxVQUNBLE1BQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGlCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLE9BQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZUFDVkMsVUFDRSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxNQUNBLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxNQUNBLFVBQ0EsT0FFRkMsU0FDRSxXQUNBLFlBQ0EsUUFDQSxRQUNBLGtCQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFVBQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLGFBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxXQUNWQyxVQUNFLFVBQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHdCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxlQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxjQUNWQyxVQUNFLFVBQ0EsVUFFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZUFDVkMsVUFDRSxVQUNBLFNBQ0EsTUFDQSxZQUNBLE1BQ0EsYUFFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGdCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE1BQ0EsYUFFRkMsU0FDRSxXQUNBLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsaUJBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsdUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLG9CQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxpQkFDVkMsVUFDRSxVQUNBLE9BRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxnQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsYUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxnQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBQ0EsWUFDQSxZQUNBLFFBQ0EsUUFDQSxrQkFJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsYUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLE1BQ0EsTUFDQSxVQUNBLE1BQ0EsTUFDQSxNQUNBLE9BRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsYUFDVkMsVUFDRSxVQUNBLE9BRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxrQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxVQUNBLFNBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUNBLFlBQ0EsUUFDQSxhQUNBLGtCQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLGFBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGtCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsTUFDVkMsVUFDRSxNQUNBLFlBQ0EsTUFDQSxZQUNBLE1BQ0EsWUFDQSxVQUNBLFNBQ0EsTUFDQSxZQUNBLE1BQ0EsWUFDQSxNQUNBLFlBQ0EsTUFDQSxZQUNBLE1BQ0EsYUFFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZ0JBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE1BQ0EsWUFDQSxNQUNBLFlBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZUFDVkMsVUFDRSxVQUNBLFVBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxtQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsYUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsTUFDQSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsYUFDVkMsVUFDRSxVQUNBLFVBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLG1CQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FDQSxZQUNBLFFBQ0Esa0JBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxlQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHVCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxjQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxXQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGtCQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLGFBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZ0JBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE1BQ0EsYUFFRkMsU0FDRSxZQUNB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RkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLDBCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxpQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZUFDVkMsVUFDRSxNQUNBLFlBQ0EsTUFDQSxZQUNBLFVBQ0EsU0FDQSxNQUNBLFlBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZUFDVkMsVUFDRSxNQUNBLFlBQ0EsTUFDQSxZQUNBLFVBQ0EsU0FDQSxNQUNBLFlBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFVBQ0EsU0FDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsa0JBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsT0FDVkMsVUFDRSxNQUNBLFVBQ0EsTUFDQSxPQUVGQyxTQUNFLFdBQ0EsWUFDQSxZQUNBLFFBQ0EsUUFDQSxrQkFJRkosS0FBUSxtQkFDUkUsT0FBVSxvQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsMEJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxVQUNBLFNBQ0EsTUFDQSxhQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxpQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUNBLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxXQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxNQUNBLFVBQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsa0JBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLE9BQ1ZDLFVBQ0UsTUFDQSxZQUNBLE1BQ0EsWUFDQSxVQUNBLFNBQ0EsTUFDQSxZQUNBLE1BQ0EsYUFFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGdCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxlQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FDQSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxVQUNBLFNBQ0EsT0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxVQUNBLFVBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FDQSxZQUNBLFFBQ0Esa0JBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxVQUNBLFNBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsbUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGtCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxrQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsaUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLE9BQ1ZDLFVBQ0UsVUFDQSxTQUNBLE1BQ0EsYUFFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHdCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxvQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsaUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxVQUNBLE9BRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxxQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxVQUNBLE9BRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGdCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxPQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBQ0EsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBQ0EsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE1BQ0EsYUFFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLE9BQ1ZDLFVBQ0UsVUFDQSxVQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxVQUNBLE1BQ0EsTUFDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxnQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxjQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxlQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxlQUNWQyxVQUNFLE1BQ0EsVUFDQSxNQUNBLE9BRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxjQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsbUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGlCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGlCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxVQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxXQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSx1QkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFVBQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHdCQUNWQyxVQUNFLFVBQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHVCQUNWQyxVQUNFLFVBQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLE9BQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHlCQUNWQyxVQUNFLFVBQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGdCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxpQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxzQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxnQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxPQUNWQyxVQUNFLE1BQ0EsWUFDQSxVQUNBLFVBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxnQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsTUFDQSxNQUNBLFVBQ0EsU0FDQSxNQUNBLE9BRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE1BQ0EsYUFFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHVCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxlQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLGFBRUZDLFNBQ0UsWUFDQSxRQUNBLGdCQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxRQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsYUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxNQUNBLFVBQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGlCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxrQkFDVkMsVUFDRSxVQUNBLFNBQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxVQUNBLE9BRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHlCQUNWQyxVQUNFLFVBQ0EsT0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxNQUNBLFlBQ0EsVUFDQSxTQUNBLE1BQ0EsWUFDQSxNQUNBLFlBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBQ0EsWUFDQSxZQUNBLFFBQ0EsYUFDQSxRQUNBLGtCQUlGSixLQUFRLG1CQUNSRSxPQUFVLHNCQUNWQyxVQUNFLE1BQ0EsWUFDQSxPQUVGQyxTQUNFLFdBQ0EsWUFDQSxZQUNBLFFBQ0EsYUFDQSxRQUNBLGtCQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUNBLFlBQ0EsUUFDQSxrQkFJRkosS0FBUSxtQkFDUkUsT0FBVSxXQUNWQyxVQUNFLFVBQ0EsTUFDQSxNQUNBLE9BRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFVBQ0EsVUFFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxrQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxNQUNBLFVBQ0EsT0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsbUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE1BQ0EsWUFDQSxNQUNBLGFBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsTUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxNQUNBLFVBQ0EsT0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FDQSxZQUNBLFFBQ0Esa0JBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxVQUNBLFNBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBQ0EsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGtCQUNWQyxVQUNFLFVBQ0EsT0FFRkMsU0FDRSxXQUNBLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxpQkFDVkMsVUFDRSxVQUNBLE9BRUZDLFNBQ0UsV0FDQSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxVQUNBLFNBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxtQkFDVkMsVUFDRSxVQUNBLFVBRUZDLFNBQ0UsV0FDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxjQUNWQyxVQUNFLFVBQ0EsTUFDQSxPQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxlQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsbUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHNCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE1BQ0EsYUFFRkMsU0FDRSxXQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxnQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsYUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLE9BQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFdBQ0EsWUFDQSxZQUNBLFFBQ0EsUUFDQSxrQkFJRkosS0FBUSxtQkFDUkUsT0FBVSxXQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLG1CQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLFlBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBQ0EsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHNCQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLFlBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBQ0EsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsYUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBQ0EsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLE9BQ1ZDLFVBQ0UsVUFDQSxVQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxtQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsbUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGlCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FDQSxZQUNBLFFBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxpQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxXQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FDQSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxVQUNBLFNBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE1BQ0EsYUFFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGVBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxvQkFDVkMsVUFDRSxVQUNBLFNBQ0EsTUFDQSxhQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLE1BQ0EsVUFDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsaUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxrQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFVBQ0EsVUFFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxNQUNBLE1BQ0EsTUFDQSxVQUNBLE1BQ0EsTUFDQSxNQUNBLE1BQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxVQUNBLFNBQ0EsTUFDQSxhQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxlQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZ0JBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxnQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxVQUNBLE9BRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsVUFDQSxVQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLGFBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxXQUNWQyxVQUNFLFVBQ0EsVUFFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsT0FDVkMsVUFDRSxVQUNBLE1BQ0EsT0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxVQUNBLE9BRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGlCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FDQSxZQUNBLFFBQ0Esa0JBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBQ0EsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsTUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLE9BQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsVUFDQSxVQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxXQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxVQUNBLFNBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBQ0EsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGlCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBQ0EsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHFCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSx5QkFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLGFBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGtCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsTUFDQSxVQUNBLE1BQ0EsT0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsbUJBQ1ZDLFVBQ0UsTUFDQSxVQUNBLE1BQ0EsT0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxVQUNBLFNBQ0EsTUFDQSxhQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxnQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsV0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsVUFDVkMsVUFDRSxVQUNBLE9BRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGdCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsbUJBQ1ZDLFVBQ0UsVUFDQSxVQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxrQkFDVkMsVUFDRSxNQUNBLE1BQ0EsVUFDQSxNQUNBLE1BQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGtCQUNWQyxVQUNFLE1BQ0EsWUFDQSxNQUNBLFlBQ0EsVUFDQSxTQUNBLE1BQ0EsWUFDQSxNQUNBLFlBQ0EsTUFDQSxhQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxnQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsYUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGdCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FDQSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsa0JBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsd0JBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsdUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxNQUNBLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLHNCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxZQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxtQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUscUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxVQUNBLE9BRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxRQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxhQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FDQSxZQUNBLFFBQ0Esa0JBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxxQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxVQUNBLE1BQ0EsT0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE1BQ0EsYUFFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFlBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsZ0JBQ1ZDLFVBQ0UsTUFDQSxZQUNBLE1BQ0EsWUFDQSxVQUNBLFNBQ0EsTUFDQSxZQUNBLE1BQ0EsWUFDQSxPQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxjQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsVUFDQSxTQUNBLE9BRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxVQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFNBQ1ZDLFVBQ0UsTUFDQSxZQUNBLFVBQ0EsU0FDQSxNQUNBLFlBQ0EsTUFDQSxhQUVGQyxTQUNFLFdBQ0EsWUFDQSxZQUNBLFFBQ0EsUUFDQSxrQkFJRkosS0FBUSxtQkFDUkUsT0FBVSxtQkFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBQ0EsWUFDQSxZQUNBLFFBQ0EsUUFDQSxrQkFJRkosS0FBUSxtQkFDUkUsT0FBVSxjQUNWQyxVQUNFLFVBQ0EsU0FDQSxNQUNBLGFBRUZDLFNBQ0UsV0FDQSxZQUNBLFlBQ0EsUUFDQSxRQUNBLGtCQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGlCQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxXQUNWQyxVQUNFLFdBRUZDLFNBQ0UsV0FDQSxZQUNBLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsWUFDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxpQkFDVkMsVUFDRSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUscUJBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFVBQ1ZDLFVBQ0UsVUFDQSxPQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsU0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsT0FDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsUUFDVkMsVUFDRSxXQUVGQyxTQUNFLFdBSUZKLEtBQVEsbUJBQ1JFLE9BQVUsY0FDVkMsVUFDRSxXQUVGQyxTQUNFLFlBQ0EsV0FJRkosS0FBUSxtQkFDUkUsT0FBVSxTQUNWQyxVQUNFLFdBRUZDLFNBQ0UsWUFDQSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGVBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLGNBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFFBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLFdBQ1ZDLFVBQ0UsV0FFRkMsU0FDRSxXQUlGSixLQUFRLG1CQUNSRSxPQUFVLE9B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QixHQUFNLGlCQUNOQyxHQUFNLGdCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLG9CQUNORSxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGdCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGdCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLG9CQUNOQyxHQUFNLGlCQUNOQyxHQUFNLG9CQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGVBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0sZ0JBQ05DLEdBQU0saUJBQ05DLEdBQU0sZ0JBQ05DLEdBQU0sZ0JBQ05DLEdBQU0sZ0JBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0sZ0JBQ05DLEdBQU0sb0JBQ05DLEdBQU0sZ0JBQ05DLEdBQU0saUJBQ05DLEdBQU0sZUFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxnQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxnQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkUsR0FBTSxvQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTjFuQixHQUFNLGdCQUNOMm5CLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0sZ0JBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0sZ0JBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0sb0JBQ05DLEdBQU0sZ0JBQ05DLEdBQU0saUJBQ05DLEdBQU0sZ0JBQ05DLEdBQU0saUJBQ05FLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0sZ0JBQ05DLEdBQU0sZ0JBQ05DLEdBQU0saUJBQ05DLEdBQU0sZ0JBQ05DLEdBQU0saUJBQ05DLEdBQU0sb0JBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0sZ0JBQ05DLEdBQU0sZUFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkUsR0FBTSxvQkFDTkMsR0FBTSxvQkFDTkYsR0FBTSxpQkFDTkcsR0FBTSxvQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkUsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxnQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxpQkFDTkMsR0FBTSxnQkFDTkMsR0FBTSxlQUNOQyxHQUFNLGdCQUNOQyxHQUFNLGdCQUNOQyxHQUFNLGdCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGlCQUNOQyxHQUFNLGVBQ05DLEdBQU0saUJBQ05DLEdBQU0sZ0JBQ05DLEdBQU0sZ0JBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0sZ0JBQ05DLEdBQU0sb0JBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05DLEdBQU0saUJBQ05D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QUk4bkcsT0FDaEJpdkMsRUFBTy8ySSxHQUFHNG5HLElBQU1rdkMsRUFBSzkySSxHQUl6QixRQUFTZzNJLEdBQWtCcnlELEdBS3pCLElBQUssR0FGSHVpQixHQUZFNytELEVBQVFsb0MsT0FBT21wRyxTQUFTQyxPQUFPMXNCLFVBQVUsR0FDM0M4c0IsRUFBT3RoRSxFQUFNMW5DLE1BQU0sS0FHWlgsRUFBSSxFQUFHQSxFQUFJMnBHLEVBQUtucEcsT0FBUVIsSUFHL0IsR0FGQWtuRyxFQUFPeUMsRUFBSzNwRyxHQUFHVyxNQUFNLEtBRWpCdW1HLEVBQUssSUFBTXZpQixFQUNiLE1BQU93aUIsb0JBQW1CRCxFQUFLLEdBSW5DLE9BQU8sR0FHVCxPQUNFOHZDLGtCQUFtQkEsRUFDbkJ0eEQsZ0JBQWtCQSxFQUNsQlEsWUFBa0JBLEVBQ2xCSyxVQUFrQkEsRUFDbEJLLGVBQWtCQSxFQUNsQkMsZUFBa0JBLEVBQ2xCZ3dELGNBQWtCQSxNQU10QnQ1SSxRQUFRQyxPQUFPLG9DQUNaZ08sU0FBUyxjQUFlLDhCQUUzQmpPLFFBQVFDLE9BQU8sb0NBQ1pnTyxTQUFTLGlCQUFrQix3QkFDM0JBLFNBQVMsZ0JBQWlCLFNBRTdCak8sUUFBUUMsT0FBTyxtQ0FDYix5QkFDQSxnQ0FDQSwyQkFDQSwwQ0FDQSxtQ0FDQSxpREFDQSx1Q0FHRkQsUUFBUUMsT0FBTyxtQ0FDWnNvQixXQUFXLDBCQUEyQixTQUFVLGNBQy9DLFNBQVVDLEVBQVFvMkcsR0FDaEJwMkcsRUFBT28yRyxhQUFlQSxNQUd6QjE0SCxNQUFNLG1CQUNMeUgsVUFDQTA2RixrQkFDRWhqRyxLQUFRLEdBQ1IrekksV0FBYyxHQUNkMTFIIiwiZmlsZSI6ImpzL3NldHRpbmdzLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogYW5ndWxhci10cmFuc2xhdGUgLSB2Mi41LjIgLSAyMDE0LTEyLTEwXG4gKiBodHRwOi8vZ2l0aHViLmNvbS9hbmd1bGFyLXRyYW5zbGF0ZS9hbmd1bGFyLXRyYW5zbGF0ZVxuICogQ29weXJpZ2h0IChjKSAyMDE0IDsgTGljZW5zZWQgTUlUXG4gKi9cbi8qKlxuICogQG5nZG9jIG92ZXJ2aWV3XG4gKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGUgbWFpbiBtb2R1bGUgd2hpY2ggaG9sZHMgZXZlcnl0aGluZyB0b2dldGhlci5cbiAqL1xuYW5ndWxhci5tb2R1bGUoJ3Bhc2NhbHByZWNodC50cmFuc2xhdGUnLCBbJ25nJ10pXG5cbi5ydW4oWyckdHJhbnNsYXRlJywgZnVuY3Rpb24gKCR0cmFuc2xhdGUpIHtcblxuICB2YXIga2V5ID0gJHRyYW5zbGF0ZS5zdG9yYWdlS2V5KCksXG4gICAgICBzdG9yYWdlID0gJHRyYW5zbGF0ZS5zdG9yYWdlKCk7XG5cbiAgdmFyIGZhbGxiYWNrRnJvbUluY29ycmVjdFN0b3JhZ2VWYWx1ZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBwcmVmZXJyZWQgPSAkdHJhbnNsYXRlLnByZWZlcnJlZExhbmd1YWdlKCk7XG4gICAgaWYgKGFuZ3VsYXIuaXNTdHJpbmcocHJlZmVycmVkKSkge1xuICAgICAgJHRyYW5zbGF0ZS51c2UocHJlZmVycmVkKTtcbiAgICAgIC8vICR0cmFuc2xhdGUudXNlKCkgd2lsbCBhbHNvIHJlbWVtYmVyIHRoZSBsYW5ndWFnZS5cbiAgICAgIC8vIFNvLCB3ZSBkb24ndCBuZWVkIHRvIGNhbGwgc3RvcmFnZS5wdXQoKSBoZXJlLlxuICAgIH0gZWxzZSB7XG4gICAgICBzdG9yYWdlLnB1dChrZXksICR0cmFuc2xhdGUudXNlKCkpO1xuICAgIH1cbiAgfTtcblxuICBpZiAoc3RvcmFnZSkge1xuICAgIGlmICghc3RvcmFnZS5nZXQoa2V5KSkge1xuICAgICAgZmFsbGJhY2tGcm9tSW5jb3JyZWN0U3RvcmFnZVZhbHVlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICR0cmFuc2xhdGUudXNlKHN0b3JhZ2UuZ2V0KGtleSkpWydjYXRjaCddKGZhbGxiYWNrRnJvbUluY29ycmVjdFN0b3JhZ2VWYWx1ZSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKGFuZ3VsYXIuaXNTdHJpbmcoJHRyYW5zbGF0ZS5wcmVmZXJyZWRMYW5ndWFnZSgpKSkge1xuICAgICR0cmFuc2xhdGUudXNlKCR0cmFuc2xhdGUucHJlZmVycmVkTGFuZ3VhZ2UoKSk7XG4gIH1cbn1dKTtcblxuLyoqXG4gKiBAbmdkb2Mgb2JqZWN0XG4gKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlclxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogJHRyYW5zbGF0ZVByb3ZpZGVyIGFsbG93cyBkZXZlbG9wZXJzIHRvIHJlZ2lzdGVyIHRyYW5zbGF0aW9uLXRhYmxlcywgYXN5bmNocm9ub3VzIGxvYWRlcnNcbiAqIGFuZCBzaW1pbGFyIHRvIGNvbmZpZ3VyZSB0cmFuc2xhdGlvbiBiZWhhdmlvciBkaXJlY3RseSBpbnNpZGUgb2YgYSBtb2R1bGUuXG4gKlxuICovXG5hbmd1bGFyLm1vZHVsZSgncGFzY2FscHJlY2h0LnRyYW5zbGF0ZScpLnByb3ZpZGVyKCckdHJhbnNsYXRlJywgWyckU1RPUkFHRV9LRVknLCBmdW5jdGlvbiAoJFNUT1JBR0VfS0VZKSB7XG5cbiAgdmFyICR0cmFuc2xhdGlvblRhYmxlID0ge30sXG4gICAgICAkcHJlZmVycmVkTGFuZ3VhZ2UsXG4gICAgICAkYXZhaWxhYmxlTGFuZ3VhZ2VLZXlzID0gW10sXG4gICAgICAkbGFuZ3VhZ2VLZXlBbGlhc2VzLFxuICAgICAgJGZhbGxiYWNrTGFuZ3VhZ2UsXG4gICAgICAkZmFsbGJhY2tXYXNTdHJpbmcsXG4gICAgICAkdXNlcyxcbiAgICAgICRuZXh0TGFuZyxcbiAgICAgICRzdG9yYWdlRmFjdG9yeSxcbiAgICAgICRzdG9yYWdlS2V5ID0gJFNUT1JBR0VfS0VZLFxuICAgICAgJHN0b3JhZ2VQcmVmaXgsXG4gICAgICAkbWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlckZhY3RvcnksXG4gICAgICAkaW50ZXJwb2xhdGlvbkZhY3RvcnksXG4gICAgICAkaW50ZXJwb2xhdG9yRmFjdG9yaWVzID0gW10sXG4gICAgICAkaW50ZXJwb2xhdGlvblNhbml0aXphdGlvblN0cmF0ZWd5ID0gZmFsc2UsXG4gICAgICAkbG9hZGVyRmFjdG9yeSxcbiAgICAgICRjbG9ha0NsYXNzTmFtZSA9ICd0cmFuc2xhdGUtY2xvYWsnLFxuICAgICAgJGxvYWRlck9wdGlvbnMsXG4gICAgICAkbm90Rm91bmRJbmRpY2F0b3JMZWZ0LFxuICAgICAgJG5vdEZvdW5kSW5kaWNhdG9yUmlnaHQsXG4gICAgICAkcG9zdENvbXBpbGluZ0VuYWJsZWQgPSBmYWxzZSxcbiAgICAgIE5FU1RFRF9PQkpFQ1RfREVMSU1JVEVSID0gJy4nLFxuICAgICAgbG9hZGVyQ2FjaGU7XG5cbiAgdmFyIHZlcnNpb24gPSAnMi41LjInO1xuXG4gIC8vIHRyaWVzIHRvIGRldGVybWluZSB0aGUgYnJvd3NlcnMgbGFuZ3VhZ2VcbiAgdmFyIGdldEZpcnN0QnJvd3Nlckxhbmd1YWdlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBuYXYgPSB3aW5kb3cubmF2aWdhdG9yLFxuICAgICAgICBicm93c2VyTGFuZ3VhZ2VQcm9wZXJ0eUtleXMgPSBbJ2xhbmd1YWdlJywgJ2Jyb3dzZXJMYW5ndWFnZScsICdzeXN0ZW1MYW5ndWFnZScsICd1c2VyTGFuZ3VhZ2UnXSxcbiAgICAgICAgaSxcbiAgICAgICAgbGFuZ3VhZ2U7XG5cbiAgICAvLyBzdXBwb3J0IGZvciBIVE1MIDUuMSBcIm5hdmlnYXRvci5sYW5ndWFnZXNcIlxuICAgIGlmIChhbmd1bGFyLmlzQXJyYXkobmF2Lmxhbmd1YWdlcykpIHtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuYXYubGFuZ3VhZ2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxhbmd1YWdlID0gbmF2Lmxhbmd1YWdlc1tpXTtcbiAgICAgICAgaWYgKGxhbmd1YWdlICYmIGxhbmd1YWdlLmxlbmd0aCkge1xuICAgICAgICAgIHJldHVybiBsYW5ndWFnZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIHN1cHBvcnQgZm9yIG90aGVyIHdlbGwga25vd24gcHJvcGVydGllcyBpbiBicm93c2Vyc1xuICAgIGZvciAoaSA9IDA7IGkgPCBicm93c2VyTGFuZ3VhZ2VQcm9wZXJ0eUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGxhbmd1YWdlID0gbmF2W2Jyb3dzZXJMYW5ndWFnZVByb3BlcnR5S2V5c1tpXV07XG4gICAgICBpZiAobGFuZ3VhZ2UgJiYgbGFuZ3VhZ2UubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBsYW5ndWFnZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcbiAgZ2V0Rmlyc3RCcm93c2VyTGFuZ3VhZ2UuZGlzcGxheU5hbWUgPSAnYW5ndWxhci10cmFuc2xhdGUvc2VydmljZTogZ2V0Rmlyc3RCcm93c2VyTGFuZ3VhZ2UnO1xuXG4gIC8vIHRyaWVzIHRvIGRldGVybWluZSB0aGUgYnJvd3NlcnMgbG9jYWxlXG4gIHZhciBnZXRMb2NhbGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIChnZXRGaXJzdEJyb3dzZXJMYW5ndWFnZSgpIHx8ICcnKS5zcGxpdCgnLScpLmpvaW4oJ18nKTtcbiAgfTtcbiAgZ2V0TG9jYWxlLmRpc3BsYXlOYW1lID0gJ2FuZ3VsYXItdHJhbnNsYXRlL3NlcnZpY2U6IGdldExvY2FsZSc7XG5cbiAgLyoqXG4gICAqIEBuYW1lIGluZGV4T2ZcbiAgICogQHByaXZhdGVcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIGluZGV4T2YgcG9seWZpbGwuIEtpbmRhIHNvcnRhLlxuICAgKlxuICAgKiBAcGFyYW0ge2FycmF5fSBhcnJheSBBcnJheSB0byBzZWFyY2ggaW4uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBzZWFyY2hFbGVtZW50IEVsZW1lbnQgdG8gc2VhcmNoIGZvci5cbiAgICpcbiAgICogQHJldHVybnMge2ludH0gSW5kZXggb2Ygc2VhcmNoIGVsZW1lbnQuXG4gICAqL1xuICB2YXIgaW5kZXhPZiA9IGZ1bmN0aW9uKGFycmF5LCBzZWFyY2hFbGVtZW50KSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGFycmF5Lmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBpZiAoYXJyYXlbaV0gPT09IHNlYXJjaEVsZW1lbnQpIHtcbiAgICAgICAgcmV0dXJuIGk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAtMTtcbiAgfTtcblxuICAvKipcbiAgICogQG5hbWUgdHJpbVxuICAgKiBAcHJpdmF0ZVxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogdHJpbSBwb2x5ZmlsbFxuICAgKlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgc3RyaW5nIHN0cmlwcGVkIG9mIHdoaXRlc3BhY2UgZnJvbSBib3RoIGVuZHNcbiAgICovXG4gIHZhciB0cmltID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMucmVwbGFjZSgvXlxccyt8XFxzKyQvZywgJycpO1xuICB9O1xuXG4gIHZhciBuZWdvdGlhdGVMb2NhbGUgPSBmdW5jdGlvbiAocHJlZmVycmVkKSB7XG5cbiAgICB2YXIgYXZhaWwgPSBbXSxcbiAgICAgICAgbG9jYWxlID0gYW5ndWxhci5sb3dlcmNhc2UocHJlZmVycmVkKSxcbiAgICAgICAgaSA9IDAsXG4gICAgICAgIG4gPSAkYXZhaWxhYmxlTGFuZ3VhZ2VLZXlzLmxlbmd0aDtcblxuICAgIGZvciAoOyBpIDwgbjsgaSsrKSB7XG4gICAgICBhdmFpbC5wdXNoKGFuZ3VsYXIubG93ZXJjYXNlKCRhdmFpbGFibGVMYW5ndWFnZUtleXNbaV0pKTtcbiAgICB9XG5cbiAgICBpZiAoaW5kZXhPZihhdmFpbCwgbG9jYWxlKSA+IC0xKSB7XG4gICAgICByZXR1cm4gcHJlZmVycmVkO1xuICAgIH1cblxuICAgIGlmICgkbGFuZ3VhZ2VLZXlBbGlhc2VzKSB7XG4gICAgICB2YXIgYWxpYXM7XG4gICAgICBmb3IgKHZhciBsYW5nS2V5QWxpYXMgaW4gJGxhbmd1YWdlS2V5QWxpYXNlcykge1xuICAgICAgICB2YXIgaGFzV2lsZGNhcmRLZXkgPSBmYWxzZTtcbiAgICAgICAgdmFyIGhhc0V4YWN0S2V5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKCRsYW5ndWFnZUtleUFsaWFzZXMsIGxhbmdLZXlBbGlhcykgJiZcbiAgICAgICAgICBhbmd1bGFyLmxvd2VyY2FzZShsYW5nS2V5QWxpYXMpID09PSBhbmd1bGFyLmxvd2VyY2FzZShwcmVmZXJyZWQpO1xuXG4gICAgICAgIGlmIChsYW5nS2V5QWxpYXMuc2xpY2UoLTEpID09PSAnKicpIHtcbiAgICAgICAgICBoYXNXaWxkY2FyZEtleSA9IGxhbmdLZXlBbGlhcy5zbGljZSgwLCAtMSkgPT09IHByZWZlcnJlZC5zbGljZSgwLCBsYW5nS2V5QWxpYXMubGVuZ3RoLTEpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChoYXNFeGFjdEtleSB8fCBoYXNXaWxkY2FyZEtleSkge1xuICAgICAgICAgIGFsaWFzID0gJGxhbmd1YWdlS2V5QWxpYXNlc1tsYW5nS2V5QWxpYXNdO1xuICAgICAgICAgIGlmIChpbmRleE9mKGF2YWlsLCBhbmd1bGFyLmxvd2VyY2FzZShhbGlhcykpID4gLTEpIHtcbiAgICAgICAgICAgIHJldHVybiBhbGlhcztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgcGFydHMgPSBwcmVmZXJyZWQuc3BsaXQoJ18nKTtcblxuICAgIGlmIChwYXJ0cy5sZW5ndGggPiAxICYmIGluZGV4T2YoYXZhaWwsIGFuZ3VsYXIubG93ZXJjYXNlKHBhcnRzWzBdKSkgPiAtMSkge1xuICAgICAgcmV0dXJuIHBhcnRzWzBdO1xuICAgIH1cblxuICAgIC8vIElmIGV2ZXJ5dGhpbmcgZmFpbHMsIGp1c3QgcmV0dXJuIHRoZSBwcmVmZXJyZWQsIHVuY2hhbmdlZC5cbiAgICByZXR1cm4gcHJlZmVycmVkO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjdHJhbnNsYXRpb25zXG4gICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlclxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogUmVnaXN0ZXJzIGEgbmV3IHRyYW5zbGF0aW9uIHRhYmxlIGZvciBzcGVjaWZpYyBsYW5ndWFnZSBrZXkuXG4gICAqXG4gICAqIFRvIHJlZ2lzdGVyIGEgdHJhbnNsYXRpb24gdGFibGUgZm9yIHNwZWNpZmljIGxhbmd1YWdlLCBwYXNzIGEgZGVmaW5lZCBsYW5ndWFnZVxuICAgKiBrZXkgYXMgZmlyc3QgcGFyYW1ldGVyLlxuICAgKlxuICAgKiA8cHJlPlxuICAgKiAgLy8gcmVnaXN0ZXIgdHJhbnNsYXRpb24gdGFibGUgZm9yIGxhbmd1YWdlOiAnZGVfREUnXG4gICAqICAkdHJhbnNsYXRlUHJvdmlkZXIudHJhbnNsYXRpb25zKCdkZV9ERScsIHtcbiAgICogICAgJ0dSRUVUSU5HJzogJ0hhbGxvIFdlbHQhJ1xuICAgKiAgfSk7XG4gICAqXG4gICAqICAvLyByZWdpc3RlciBhbm90aGVyIG9uZVxuICAgKiAgJHRyYW5zbGF0ZVByb3ZpZGVyLnRyYW5zbGF0aW9ucygnZW5fVVMnLCB7XG4gICAqICAgICdHUkVFVElORyc6ICdIZWxsbyB3b3JsZCEnXG4gICAqICB9KTtcbiAgICogPC9wcmU+XG4gICAqXG4gICAqIFdoZW4gcmVnaXN0ZXJpbmcgbXVsdGlwbGUgdHJhbnNsYXRpb24gdGFibGVzIGZvciBmb3IgdGhlIHNhbWUgbGFuZ3VhZ2Uga2V5LFxuICAgKiB0aGUgYWN0dWFsIHRyYW5zbGF0aW9uIHRhYmxlIGdldHMgZXh0ZW5kZWQuIFRoaXMgYWxsb3dzIHlvdSB0byBkZWZpbmUgbW9kdWxlXG4gICAqIHNwZWNpZmljIHRyYW5zbGF0aW9uIHdoaWNoIG9ubHkgZ2V0IGFkZGVkLCBvbmNlIGEgc3BlY2lmaWMgbW9kdWxlIGlzIGxvYWRlZCBpblxuICAgKiB5b3VyIGFwcC5cbiAgICpcbiAgICogSW52b2tpbmcgdGhpcyBtZXRob2Qgd2l0aCBubyBhcmd1bWVudHMgcmV0dXJucyB0aGUgdHJhbnNsYXRpb24gdGFibGUgd2hpY2ggd2FzXG4gICAqIHJlZ2lzdGVyZWQgd2l0aCBubyBsYW5ndWFnZSBrZXkuIEludm9raW5nIGl0IHdpdGggYSBsYW5ndWFnZSBrZXkgcmV0dXJucyB0aGVcbiAgICogcmVsYXRlZCB0cmFuc2xhdGlvbiB0YWJsZS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleSBBIGxhbmd1YWdlIGtleS5cbiAgICogQHBhcmFtIHtvYmplY3R9IHRyYW5zbGF0aW9uVGFibGUgQSBwbGFpbiBvbGQgSmF2YVNjcmlwdCBvYmplY3QgdGhhdCByZXByZXNlbnRzIGEgdHJhbnNsYXRpb24gdGFibGUuXG4gICAqXG4gICAqL1xuICB2YXIgdHJhbnNsYXRpb25zID0gZnVuY3Rpb24gKGxhbmdLZXksIHRyYW5zbGF0aW9uVGFibGUpIHtcblxuICAgIGlmICghbGFuZ0tleSAmJiAhdHJhbnNsYXRpb25UYWJsZSkge1xuICAgICAgcmV0dXJuICR0cmFuc2xhdGlvblRhYmxlO1xuICAgIH1cblxuICAgIGlmIChsYW5nS2V5ICYmICF0cmFuc2xhdGlvblRhYmxlKSB7XG4gICAgICBpZiAoYW5ndWxhci5pc1N0cmluZyhsYW5nS2V5KSkge1xuICAgICAgICByZXR1cm4gJHRyYW5zbGF0aW9uVGFibGVbbGFuZ0tleV07XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICghYW5ndWxhci5pc09iamVjdCgkdHJhbnNsYXRpb25UYWJsZVtsYW5nS2V5XSkpIHtcbiAgICAgICAgJHRyYW5zbGF0aW9uVGFibGVbbGFuZ0tleV0gPSB7fTtcbiAgICAgIH1cbiAgICAgIGFuZ3VsYXIuZXh0ZW5kKCR0cmFuc2xhdGlvblRhYmxlW2xhbmdLZXldLCBmbGF0T2JqZWN0KHRyYW5zbGF0aW9uVGFibGUpKTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgdGhpcy50cmFuc2xhdGlvbnMgPSB0cmFuc2xhdGlvbnM7XG5cbiAgLyoqXG4gICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlciNjbG9ha0NsYXNzTmFtZVxuICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXJcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIExldCdzIHlvdSBjaGFuZ2UgdGhlIGNsYXNzIG5hbWUgZm9yIGB0cmFuc2xhdGUtY2xvYWtgIGRpcmVjdGl2ZS5cbiAgICogRGVmYXVsdCBjbGFzcyBuYW1lIGlzIGB0cmFuc2xhdGUtY2xvYWtgLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZSB0cmFuc2xhdGUtY2xvYWsgY2xhc3MgbmFtZVxuICAgKi9cbiAgdGhpcy5jbG9ha0NsYXNzTmFtZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgaWYgKCFuYW1lKSB7XG4gICAgICByZXR1cm4gJGNsb2FrQ2xhc3NOYW1lO1xuICAgIH1cbiAgICAkY2xvYWtDbGFzc05hbWUgPSBuYW1lO1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAbmFtZSBmbGF0T2JqZWN0XG4gICAqIEBwcml2YXRlXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBGbGF0cyBhbiBvYmplY3QuIFRoaXMgZnVuY3Rpb24gaXMgdXNlZCB0byBmbGF0dGVuIGdpdmVuIHRyYW5zbGF0aW9uIGRhdGEgd2l0aFxuICAgKiBuYW1lc3BhY2VzLCBzbyB0aGV5IGFyZSBsYXRlciBhY2Nlc3NpYmxlIHZpYSBkb3Qgbm90YXRpb24uXG4gICAqL1xuICB2YXIgZmxhdE9iamVjdCA9IGZ1bmN0aW9uIChkYXRhLCBwYXRoLCByZXN1bHQsIHByZXZLZXkpIHtcbiAgICB2YXIga2V5LCBrZXlXaXRoUGF0aCwga2V5V2l0aFNob3J0UGF0aCwgdmFsO1xuXG4gICAgaWYgKCFwYXRoKSB7XG4gICAgICBwYXRoID0gW107XG4gICAgfVxuICAgIGlmICghcmVzdWx0KSB7XG4gICAgICByZXN1bHQgPSB7fTtcbiAgICB9XG4gICAgZm9yIChrZXkgaW4gZGF0YSkge1xuICAgICAgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZGF0YSwga2V5KSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIHZhbCA9IGRhdGFba2V5XTtcbiAgICAgIGlmIChhbmd1bGFyLmlzT2JqZWN0KHZhbCkpIHtcbiAgICAgICAgZmxhdE9iamVjdCh2YWwsIHBhdGguY29uY2F0KGtleSksIHJlc3VsdCwga2V5KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGtleVdpdGhQYXRoID0gcGF0aC5sZW5ndGggPyAoJycgKyBwYXRoLmpvaW4oTkVTVEVEX09CSkVDVF9ERUxJTUlURVIpICsgTkVTVEVEX09CSkVDVF9ERUxJTUlURVIgKyBrZXkpIDoga2V5O1xuICAgICAgICBpZihwYXRoLmxlbmd0aCAmJiBrZXkgPT09IHByZXZLZXkpe1xuICAgICAgICAgIC8vIENyZWF0ZSBzaG9ydGN1dCBwYXRoIChmb28uYmFyID09IGZvby5iYXIuYmFyKVxuICAgICAgICAgIGtleVdpdGhTaG9ydFBhdGggPSAnJyArIHBhdGguam9pbihORVNURURfT0JKRUNUX0RFTElNSVRFUik7XG4gICAgICAgICAgLy8gTGluayBpdCB0byBvcmlnaW5hbCBwYXRoXG4gICAgICAgICAgcmVzdWx0W2tleVdpdGhTaG9ydFBhdGhdID0gJ0A6JyArIGtleVdpdGhQYXRoO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdFtrZXlXaXRoUGF0aF0gPSB2YWw7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgLyoqXG4gICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlciNhZGRJbnRlcnBvbGF0aW9uXG4gICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlclxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogQWRkcyBpbnRlcnBvbGF0aW9uIHNlcnZpY2VzIHRvIGFuZ3VsYXItdHJhbnNsYXRlLCBzbyBpdCBjYW4gbWFuYWdlIHRoZW0uXG4gICAqXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBmYWN0b3J5IEludGVycG9sYXRpb24gc2VydmljZSBmYWN0b3J5XG4gICAqL1xuICB0aGlzLmFkZEludGVycG9sYXRpb24gPSBmdW5jdGlvbiAoZmFjdG9yeSkge1xuICAgICRpbnRlcnBvbGF0b3JGYWN0b3JpZXMucHVzaChmYWN0b3J5KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICAvKipcbiAgICogQG5nZG9jIGZ1bmN0aW9uXG4gICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZVByb3ZpZGVyI3VzZU1lc3NhZ2VGb3JtYXRJbnRlcnBvbGF0aW9uXG4gICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlclxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogVGVsbHMgYW5ndWxhci10cmFuc2xhdGUgdG8gdXNlIGludGVycG9sYXRpb24gZnVuY3Rpb25hbGl0eSBvZiBtZXNzYWdlZm9ybWF0LmpzLlxuICAgKiBUaGlzIGlzIHVzZWZ1bCB3aGVuIGhhdmluZyBoaWdoIGxldmVsIHBsdXJhbGl6YXRpb24gYW5kIGdlbmRlciBzZWxlY3Rpb24uXG4gICAqL1xuICB0aGlzLnVzZU1lc3NhZ2VGb3JtYXRJbnRlcnBvbGF0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLnVzZUludGVycG9sYXRpb24oJyR0cmFuc2xhdGVNZXNzYWdlRm9ybWF0SW50ZXJwb2xhdGlvbicpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjdXNlSW50ZXJwb2xhdGlvblxuICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXJcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIFRlbGxzIGFuZ3VsYXItdHJhbnNsYXRlIHdoaWNoIGludGVycG9sYXRpb24gc3R5bGUgdG8gdXNlIGFzIGRlZmF1bHQsIGFwcGxpY2F0aW9uLXdpZGUuXG4gICAqIFNpbXBseSBwYXNzIGEgZmFjdG9yeS9zZXJ2aWNlIG5hbWUuIFRoZSBpbnRlcnBvbGF0aW9uIHNlcnZpY2UgaGFzIHRvIGltcGxlbWVudFxuICAgKiB0aGUgY29ycmVjdCBpbnRlcmZhY2UuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBmYWN0b3J5IEludGVycG9sYXRpb24gc2VydmljZSBuYW1lLlxuICAgKi9cbiAgdGhpcy51c2VJbnRlcnBvbGF0aW9uID0gZnVuY3Rpb24gKGZhY3RvcnkpIHtcbiAgICAkaW50ZXJwb2xhdGlvbkZhY3RvcnkgPSBmYWN0b3J5O1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjdXNlU2FuaXRpemVTdHJhdGVneVxuICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXJcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIFNpbXBseSBzZXRzIGEgc2FuaXRhdGlvbiBzdHJhdGVneSB0eXBlLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdmFsdWUgU3RyYXRlZ3kgdHlwZS5cbiAgICovXG4gIHRoaXMudXNlU2FuaXRpemVWYWx1ZVN0cmF0ZWd5ID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgJGludGVycG9sYXRpb25TYW5pdGl6YXRpb25TdHJhdGVneSA9IHZhbHVlO1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gLyoqXG4gICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlciNwcmVmZXJyZWRMYW5ndWFnZVxuICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXJcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIFRlbGxzIHRoZSBtb2R1bGUgd2hpY2ggb2YgdGhlIHJlZ2lzdGVyZWQgdHJhbnNsYXRpb24gdGFibGVzIHRvIHVzZSBmb3IgdHJhbnNsYXRpb25cbiAgICogYXQgaW5pdGlhbCBzdGFydHVwIGJ5IHBhc3NpbmcgYSBsYW5ndWFnZSBrZXkuIFNpbWlsYXIgdG8gYCR0cmFuc2xhdGVQcm92aWRlciN1c2VgXG4gICAqIG9ubHkgdGhhdCBpdCBzYXlzIHdoaWNoIGxhbmd1YWdlIHRvICoqcHJlZmVyKiouXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBsYW5nS2V5IEEgbGFuZ3VhZ2Uga2V5LlxuICAgKlxuICAgKi9cbiAgdGhpcy5wcmVmZXJyZWRMYW5ndWFnZSA9IGZ1bmN0aW9uKGxhbmdLZXkpIHtcbiAgICBzZXR1cFByZWZlcnJlZExhbmd1YWdlKGxhbmdLZXkpO1xuICAgIHJldHVybiB0aGlzO1xuXG4gIH07XG4gIHZhciBzZXR1cFByZWZlcnJlZExhbmd1YWdlID0gZnVuY3Rpb24gKGxhbmdLZXkpIHtcbiAgICBpZiAobGFuZ0tleSkge1xuICAgICAgJHByZWZlcnJlZExhbmd1YWdlID0gbGFuZ0tleTtcbiAgICB9XG4gICAgcmV0dXJuICRwcmVmZXJyZWRMYW5ndWFnZTtcbiAgfTtcbiAgLyoqXG4gICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlciN0cmFuc2xhdGlvbk5vdEZvdW5kSW5kaWNhdG9yXG4gICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlclxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogU2V0cyBhbiBpbmRpY2F0b3Igd2hpY2ggaXMgdXNlZCB3aGVuIGEgdHJhbnNsYXRpb24gaXNuJ3QgZm91bmQuIEUuZy4gd2hlblxuICAgKiBzZXR0aW5nIHRoZSBpbmRpY2F0b3IgYXMgJ1gnIGFuZCBvbmUgdHJpZXMgdG8gdHJhbnNsYXRlIGEgdHJhbnNsYXRpb24gaWRcbiAgICogY2FsbGVkIGBOT1RfRk9VTkRgLCB0aGlzIHdpbGwgcmVzdWx0IGluIGBYIE5PVF9GT1VORCBYYC5cbiAgICpcbiAgICogSW50ZXJuYWxseSB0aGlzIG1ldGhvZHMgc2V0cyBhIGxlZnQgaW5kaWNhdG9yIGFuZCBhIHJpZ2h0IGluZGljYXRvciB1c2luZ1xuICAgKiBgJHRyYW5zbGF0ZVByb3ZpZGVyLnRyYW5zbGF0aW9uTm90Rm91bmRJbmRpY2F0b3JMZWZ0KClgIGFuZFxuICAgKiBgJHRyYW5zbGF0ZVByb3ZpZGVyLnRyYW5zbGF0aW9uTm90Rm91bmRJbmRpY2F0b3JSaWdodCgpYC5cbiAgICpcbiAgICogKipOb3RlKio6IFRoZXNlIG1ldGhvZHMgYXV0b21hdGljYWxseSBhZGQgYSB3aGl0ZXNwYWNlIGJldHdlZW4gdGhlIGluZGljYXRvcnNcbiAgICogYW5kIHRoZSB0cmFuc2xhdGlvbiBpZC5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGluZGljYXRvciBBbiBpbmRpY2F0b3IsIGNvdWxkIGJlIGFueSBzdHJpbmcuXG4gICAqL1xuICB0aGlzLnRyYW5zbGF0aW9uTm90Rm91bmRJbmRpY2F0b3IgPSBmdW5jdGlvbiAoaW5kaWNhdG9yKSB7XG4gICAgdGhpcy50cmFuc2xhdGlvbk5vdEZvdW5kSW5kaWNhdG9yTGVmdChpbmRpY2F0b3IpO1xuICAgIHRoaXMudHJhbnNsYXRpb25Ob3RGb3VuZEluZGljYXRvclJpZ2h0KGluZGljYXRvcik7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgLyoqXG4gICAqIG5nZG9jIGZ1bmN0aW9uXG4gICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZVByb3ZpZGVyI3RyYW5zbGF0aW9uTm90Rm91bmRJbmRpY2F0b3JMZWZ0XG4gICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlclxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogU2V0cyBhbiBpbmRpY2F0b3Igd2hpY2ggaXMgdXNlZCB3aGVuIGEgdHJhbnNsYXRpb24gaXNuJ3QgZm91bmQgbGVmdCB0byB0aGVcbiAgICogdHJhbnNsYXRpb24gaWQuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpbmRpY2F0b3IgQW4gaW5kaWNhdG9yLlxuICAgKi9cbiAgdGhpcy50cmFuc2xhdGlvbk5vdEZvdW5kSW5kaWNhdG9yTGVmdCA9IGZ1bmN0aW9uIChpbmRpY2F0b3IpIHtcbiAgICBpZiAoIWluZGljYXRvcikge1xuICAgICAgcmV0dXJuICRub3RGb3VuZEluZGljYXRvckxlZnQ7XG4gICAgfVxuICAgICRub3RGb3VuZEluZGljYXRvckxlZnQgPSBpbmRpY2F0b3I7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgLyoqXG4gICAqIG5nZG9jIGZ1bmN0aW9uXG4gICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZVByb3ZpZGVyI3RyYW5zbGF0aW9uTm90Rm91bmRJbmRpY2F0b3JMZWZ0XG4gICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlclxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogU2V0cyBhbiBpbmRpY2F0b3Igd2hpY2ggaXMgdXNlZCB3aGVuIGEgdHJhbnNsYXRpb24gaXNuJ3QgZm91bmQgcmlnaHQgdG8gdGhlXG4gICAqIHRyYW5zbGF0aW9uIGlkLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gaW5kaWNhdG9yIEFuIGluZGljYXRvci5cbiAgICovXG4gIHRoaXMudHJhbnNsYXRpb25Ob3RGb3VuZEluZGljYXRvclJpZ2h0ID0gZnVuY3Rpb24gKGluZGljYXRvcikge1xuICAgIGlmICghaW5kaWNhdG9yKSB7XG4gICAgICByZXR1cm4gJG5vdEZvdW5kSW5kaWNhdG9yUmlnaHQ7XG4gICAgfVxuICAgICRub3RGb3VuZEluZGljYXRvclJpZ2h0ID0gaW5kaWNhdG9yO1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjZmFsbGJhY2tMYW5ndWFnZVxuICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXJcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIFRlbGxzIHRoZSBtb2R1bGUgd2hpY2ggb2YgdGhlIHJlZ2lzdGVyZWQgdHJhbnNsYXRpb24gdGFibGVzIHRvIHVzZSB3aGVuIG1pc3NpbmcgdHJhbnNsYXRpb25zXG4gICAqIGF0IGluaXRpYWwgc3RhcnR1cCBieSBwYXNzaW5nIGEgbGFuZ3VhZ2Uga2V5LiBTaW1pbGFyIHRvIGAkdHJhbnNsYXRlUHJvdmlkZXIjdXNlYFxuICAgKiBvbmx5IHRoYXQgaXQgc2F5cyB3aGljaCBsYW5ndWFnZSB0byAqKmZhbGxiYWNrKiouXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfHxhcnJheX0gbGFuZ0tleSBBIGxhbmd1YWdlIGtleS5cbiAgICpcbiAgICovXG4gIHRoaXMuZmFsbGJhY2tMYW5ndWFnZSA9IGZ1bmN0aW9uIChsYW5nS2V5KSB7XG4gICAgZmFsbGJhY2tTdGFjayhsYW5nS2V5KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICB2YXIgZmFsbGJhY2tTdGFjayA9IGZ1bmN0aW9uIChsYW5nS2V5KSB7XG4gICAgaWYgKGxhbmdLZXkpIHtcbiAgICAgIGlmIChhbmd1bGFyLmlzU3RyaW5nKGxhbmdLZXkpKSB7XG4gICAgICAgICRmYWxsYmFja1dhc1N0cmluZyA9IHRydWU7XG4gICAgICAgICRmYWxsYmFja0xhbmd1YWdlID0gWyBsYW5nS2V5IF07XG4gICAgICB9IGVsc2UgaWYgKGFuZ3VsYXIuaXNBcnJheShsYW5nS2V5KSkge1xuICAgICAgICAkZmFsbGJhY2tXYXNTdHJpbmcgPSBmYWxzZTtcbiAgICAgICAgJGZhbGxiYWNrTGFuZ3VhZ2UgPSBsYW5nS2V5O1xuICAgICAgfVxuICAgICAgaWYgKGFuZ3VsYXIuaXNTdHJpbmcoJHByZWZlcnJlZExhbmd1YWdlKSAgJiYgaW5kZXhPZigkZmFsbGJhY2tMYW5ndWFnZSwgJHByZWZlcnJlZExhbmd1YWdlKSA8IDApIHtcbiAgICAgICAgJGZhbGxiYWNrTGFuZ3VhZ2UucHVzaCgkcHJlZmVycmVkTGFuZ3VhZ2UpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKCRmYWxsYmFja1dhc1N0cmluZykge1xuICAgICAgICByZXR1cm4gJGZhbGxiYWNrTGFuZ3VhZ2VbMF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gJGZhbGxiYWNrTGFuZ3VhZ2U7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjdXNlXG4gICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlclxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogU2V0IHdoaWNoIHRyYW5zbGF0aW9uIHRhYmxlIHRvIHVzZSBmb3IgdHJhbnNsYXRpb24gYnkgZ2l2ZW4gbGFuZ3VhZ2Uga2V5LiBXaGVuXG4gICAqIHRyeWluZyB0byAndXNlJyBhIGxhbmd1YWdlIHdoaWNoIGlzbid0IHByb3ZpZGVkLCBpdCdsbCB0aHJvdyBhbiBlcnJvci5cbiAgICpcbiAgICogWW91IGFjdHVhbGx5IGRvbid0IGhhdmUgdG8gdXNlIHRoaXMgbWV0aG9kIHNpbmNlIGAkdHJhbnNsYXRlUHJvdmlkZXIjcHJlZmVycmVkTGFuZ3VhZ2VgXG4gICAqIGRvZXMgdGhlIGpvYiB0b28uXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBsYW5nS2V5IEEgbGFuZ3VhZ2Uga2V5LlxuICAgKi9cbiAgdGhpcy51c2UgPSBmdW5jdGlvbiAobGFuZ0tleSkge1xuICAgIGlmIChsYW5nS2V5KSB7XG4gICAgICBpZiAoISR0cmFuc2xhdGlvblRhYmxlW2xhbmdLZXldICYmICghJGxvYWRlckZhY3RvcnkpKSB7XG4gICAgICAgIC8vIG9ubHkgdGhyb3cgYW4gZXJyb3IsIHdoZW4gbm90IGxvYWRpbmcgdHJhbnNsYXRpb24gZGF0YSBhc3luY2hyb25vdXNseVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCIkdHJhbnNsYXRlUHJvdmlkZXIgY291bGRuJ3QgZmluZCB0cmFuc2xhdGlvblRhYmxlIGZvciBsYW5nS2V5OiAnXCIgKyBsYW5nS2V5ICsgXCInXCIpO1xuICAgICAgfVxuICAgICAgJHVzZXMgPSBsYW5nS2V5O1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJldHVybiAkdXNlcztcbiAgfTtcblxuIC8qKlxuICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjc3RvcmFnZUtleVxuICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXJcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIFRlbGxzIHRoZSBtb2R1bGUgd2hpY2gga2V5IG11c3QgcmVwcmVzZW50IHRoZSBjaG9vc2VkIGxhbmd1YWdlIGJ5IGEgdXNlciBpbiB0aGUgc3RvcmFnZS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleSBBIGtleSBmb3IgdGhlIHN0b3JhZ2UuXG4gICAqL1xuICB2YXIgc3RvcmFnZUtleSA9IGZ1bmN0aW9uKGtleSkge1xuICAgIGlmICgha2V5KSB7XG4gICAgICBpZiAoJHN0b3JhZ2VQcmVmaXgpIHtcbiAgICAgICAgcmV0dXJuICRzdG9yYWdlUHJlZml4ICsgJHN0b3JhZ2VLZXk7XG4gICAgICB9XG4gICAgICByZXR1cm4gJHN0b3JhZ2VLZXk7XG4gICAgfVxuICAgICRzdG9yYWdlS2V5ID0ga2V5O1xuICB9O1xuXG4gIHRoaXMuc3RvcmFnZUtleSA9IHN0b3JhZ2VLZXk7XG5cbiAgLyoqXG4gICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlciN1c2VVcmxMb2FkZXJcbiAgICogQG1ldGhvZE9mIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZVByb3ZpZGVyXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBUZWxscyBhbmd1bGFyLXRyYW5zbGF0ZSB0byB1c2UgYCR0cmFuc2xhdGVVcmxMb2FkZXJgIGV4dGVuc2lvbiBzZXJ2aWNlIGFzIGxvYWRlci5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHVybCBVcmxcbiAgICogQHBhcmFtIHtPYmplY3Q9fSBvcHRpb25zIE9wdGlvbmFsIGNvbmZpZ3VyYXRpb24gb2JqZWN0XG4gICAqL1xuICB0aGlzLnVzZVVybExvYWRlciA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy51c2VMb2FkZXIoJyR0cmFuc2xhdGVVcmxMb2FkZXInLCBhbmd1bGFyLmV4dGVuZCh7IHVybDogdXJsIH0sIG9wdGlvbnMpKTtcbiAgfTtcblxuICAvKipcbiAgICogQG5nZG9jIGZ1bmN0aW9uXG4gICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZVByb3ZpZGVyI3VzZVN0YXRpY0ZpbGVzTG9hZGVyXG4gICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlclxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogVGVsbHMgYW5ndWxhci10cmFuc2xhdGUgdG8gdXNlIGAkdHJhbnNsYXRlU3RhdGljRmlsZXNMb2FkZXJgIGV4dGVuc2lvbiBzZXJ2aWNlIGFzIGxvYWRlci5cbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3Q9fSBvcHRpb25zIE9wdGlvbmFsIGNvbmZpZ3VyYXRpb24gb2JqZWN0XG4gICAqL1xuICB0aGlzLnVzZVN0YXRpY0ZpbGVzTG9hZGVyID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy51c2VMb2FkZXIoJyR0cmFuc2xhdGVTdGF0aWNGaWxlc0xvYWRlcicsIG9wdGlvbnMpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjdXNlTG9hZGVyXG4gICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlclxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogVGVsbHMgYW5ndWxhci10cmFuc2xhdGUgdG8gdXNlIGFueSBvdGhlciBzZXJ2aWNlIGFzIGxvYWRlci5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGxvYWRlckZhY3RvcnkgRmFjdG9yeSBuYW1lIHRvIHVzZVxuICAgKiBAcGFyYW0ge09iamVjdD19IG9wdGlvbnMgT3B0aW9uYWwgY29uZmlndXJhdGlvbiBvYmplY3RcbiAgICovXG4gIHRoaXMudXNlTG9hZGVyID0gZnVuY3Rpb24gKGxvYWRlckZhY3RvcnksIG9wdGlvbnMpIHtcbiAgICAkbG9hZGVyRmFjdG9yeSA9IGxvYWRlckZhY3Rvcnk7XG4gICAgJGxvYWRlck9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjdXNlTG9jYWxTdG9yYWdlXG4gICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlclxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogVGVsbHMgYW5ndWxhci10cmFuc2xhdGUgdG8gdXNlIGAkdHJhbnNsYXRlTG9jYWxTdG9yYWdlYCBzZXJ2aWNlIGFzIHN0b3JhZ2UgbGF5ZXIuXG4gICAqXG4gICAqL1xuICB0aGlzLnVzZUxvY2FsU3RvcmFnZSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy51c2VTdG9yYWdlKCckdHJhbnNsYXRlTG9jYWxTdG9yYWdlJyk7XG4gIH07XG5cbiAgLyoqXG4gICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlciN1c2VDb29raWVTdG9yYWdlXG4gICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlclxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogVGVsbHMgYW5ndWxhci10cmFuc2xhdGUgdG8gdXNlIGAkdHJhbnNsYXRlQ29va2llU3RvcmFnZWAgc2VydmljZSBhcyBzdG9yYWdlIGxheWVyLlxuICAgKi9cbiAgdGhpcy51c2VDb29raWVTdG9yYWdlID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLnVzZVN0b3JhZ2UoJyR0cmFuc2xhdGVDb29raWVTdG9yYWdlJyk7XG4gIH07XG5cbiAgLyoqXG4gICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlciN1c2VTdG9yYWdlXG4gICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlclxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogVGVsbHMgYW5ndWxhci10cmFuc2xhdGUgdG8gdXNlIGN1c3RvbSBzZXJ2aWNlIGFzIHN0b3JhZ2UgbGF5ZXIuXG4gICAqL1xuICB0aGlzLnVzZVN0b3JhZ2UgPSBmdW5jdGlvbiAoc3RvcmFnZUZhY3RvcnkpIHtcbiAgICAkc3RvcmFnZUZhY3RvcnkgPSBzdG9yYWdlRmFjdG9yeTtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICAvKipcbiAgICogQG5nZG9jIGZ1bmN0aW9uXG4gICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZVByb3ZpZGVyI3N0b3JhZ2VQcmVmaXhcbiAgICogQG1ldGhvZE9mIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZVByb3ZpZGVyXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBTZXRzIHByZWZpeCBmb3Igc3RvcmFnZSBrZXkuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwcmVmaXggU3RvcmFnZSBrZXkgcHJlZml4XG4gICAqL1xuICB0aGlzLnN0b3JhZ2VQcmVmaXggPSBmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgaWYgKCFwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXg7XG4gICAgfVxuICAgICRzdG9yYWdlUHJlZml4ID0gcHJlZml4O1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjdXNlTWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlckxvZ1xuICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXJcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIFRlbGxzIGFuZ3VsYXItdHJhbnNsYXRlIHRvIHVzZSBidWlsdC1pbiBsb2cgaGFuZGxlciB3aGVuIHRyeWluZyB0byB0cmFuc2xhdGVcbiAgICogYSB0cmFuc2xhdGlvbiBJZCB3aGljaCBkb2Vzbid0IGV4aXN0LlxuICAgKlxuICAgKiBUaGlzIGlzIGFjdHVhbGx5IGEgc2hvcnRjdXQgbWV0aG9kIGZvciBgdXNlTWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlcigpYC5cbiAgICpcbiAgICovXG4gIHRoaXMudXNlTWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlckxvZyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy51c2VNaXNzaW5nVHJhbnNsYXRpb25IYW5kbGVyKCckdHJhbnNsYXRlTWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlckxvZycpO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjdXNlTWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlclxuICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXJcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIEV4cGVjdHMgYSBmYWN0b3J5IG5hbWUgd2hpY2ggbGF0ZXIgZ2V0cyBpbnN0YW50aWF0ZWQgd2l0aCBgJGluamVjdG9yYC5cbiAgICogVGhpcyBtZXRob2QgY2FuIGJlIHVzZWQgdG8gdGVsbCBhbmd1bGFyLXRyYW5zbGF0ZSB0byB1c2UgYSBjdXN0b21cbiAgICogbWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlci4gSnVzdCBidWlsZCBhIGZhY3Rvcnkgd2hpY2ggcmV0dXJucyBhIGZ1bmN0aW9uXG4gICAqIGFuZCBleHBlY3RzIGEgdHJhbnNsYXRpb24gaWQgYXMgYXJndW1lbnQuXG4gICAqXG4gICAqIEV4YW1wbGU6XG4gICAqIDxwcmU+XG4gICAqICBhcHAuY29uZmlnKGZ1bmN0aW9uICgkdHJhbnNsYXRlUHJvdmlkZXIpIHtcbiAgICogICAgJHRyYW5zbGF0ZVByb3ZpZGVyLnVzZU1pc3NpbmdUcmFuc2xhdGlvbkhhbmRsZXIoJ2N1c3RvbUhhbmRsZXInKTtcbiAgICogIH0pO1xuICAgKlxuICAgKiAgYXBwLmZhY3RvcnkoJ2N1c3RvbUhhbmRsZXInLCBmdW5jdGlvbiAoZGVwMSwgZGVwMikge1xuICAgKiAgICByZXR1cm4gZnVuY3Rpb24gKHRyYW5zbGF0aW9uSWQpIHtcbiAgICogICAgICAvLyBzb21ldGhpbmcgd2l0aCB0cmFuc2xhdGlvbklkIGFuZCBkZXAxIGFuZCBkZXAyXG4gICAqICAgIH07XG4gICAqICB9KTtcbiAgICogPC9wcmU+XG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBmYWN0b3J5IEZhY3RvcnkgbmFtZVxuICAgKi9cbiAgdGhpcy51c2VNaXNzaW5nVHJhbnNsYXRpb25IYW5kbGVyID0gZnVuY3Rpb24gKGZhY3RvcnkpIHtcbiAgICAkbWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlckZhY3RvcnkgPSBmYWN0b3J5O1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjdXNlUG9zdENvbXBpbGluZ1xuICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXJcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIElmIHBvc3QgY29tcGlsaW5nIGlzIGVuYWJsZWQsIGFsbCB0cmFuc2xhdGVkIHZhbHVlcyB3aWxsIGJlIHByb2Nlc3NlZFxuICAgKiBhZ2FpbiB3aXRoIEFuZ3VsYXJKUycgJGNvbXBpbGUuXG4gICAqXG4gICAqIEV4YW1wbGU6XG4gICAqIDxwcmU+XG4gICAqICBhcHAuY29uZmlnKGZ1bmN0aW9uICgkdHJhbnNsYXRlUHJvdmlkZXIpIHtcbiAgICogICAgJHRyYW5zbGF0ZVByb3ZpZGVyLnVzZVBvc3RDb21waWxpbmcodHJ1ZSk7XG4gICAqICB9KTtcbiAgICogPC9wcmU+XG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBmYWN0b3J5IEZhY3RvcnkgbmFtZVxuICAgKi9cbiAgdGhpcy51c2VQb3N0Q29tcGlsaW5nID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgJHBvc3RDb21waWxpbmdFbmFibGVkID0gISghdmFsdWUpO1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjZGV0ZXJtaW5lUHJlZmVycmVkTGFuZ3VhZ2VcbiAgICogQG1ldGhvZE9mIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZVByb3ZpZGVyXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBUZWxscyBhbmd1bGFyLXRyYW5zbGF0ZSB0byB0cnkgdG8gZGV0ZXJtaW5lIG9uIGl0cyBvd24gd2hpY2ggbGFuZ3VhZ2Uga2V5XG4gICAqIHRvIHNldCBhcyBwcmVmZXJyZWQgbGFuZ3VhZ2UuIFdoZW4gYGZuYCBpcyBnaXZlbiwgYW5ndWxhci10cmFuc2xhdGUgdXNlcyBpdFxuICAgKiB0byBkZXRlcm1pbmUgYSBsYW5ndWFnZSBrZXksIG90aGVyd2lzZSBpdCB1c2VzIHRoZSBidWlsdC1pbiBgZ2V0TG9jYWxlKClgXG4gICAqIG1ldGhvZC5cbiAgICpcbiAgICogVGhlIGBnZXRMb2NhbGUoKWAgcmV0dXJucyBhIGxhbmd1YWdlIGtleSBpbiB0aGUgZm9ybWF0IGBbbGFuZ11fW2NvdW50cnldYCBvclxuICAgKiBgW2xhbmddYCBkZXBlbmRpbmcgb24gd2hhdCB0aGUgYnJvd3NlciBwcm92aWRlcy5cbiAgICpcbiAgICogVXNlIHRoaXMgbWV0aG9kIGF0IHlvdXIgb3duIHJpc2ssIHNpbmNlIG5vdCBhbGwgYnJvd3NlcnMgcmV0dXJuIGEgdmFsaWRcbiAgICogbG9jYWxlLlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdD19IGZuIEZ1bmN0aW9uIHRvIGRldGVybWluZSBhIGJyb3dzZXIncyBsb2NhbGVcbiAgICovXG4gIHRoaXMuZGV0ZXJtaW5lUHJlZmVycmVkTGFuZ3VhZ2UgPSBmdW5jdGlvbiAoZm4pIHtcblxuICAgIHZhciBsb2NhbGUgPSAoZm4gJiYgYW5ndWxhci5pc0Z1bmN0aW9uKGZuKSkgPyBmbigpIDogZ2V0TG9jYWxlKCk7XG5cbiAgICBpZiAoISRhdmFpbGFibGVMYW5ndWFnZUtleXMubGVuZ3RoKSB7XG4gICAgICAkcHJlZmVycmVkTGFuZ3VhZ2UgPSBsb2NhbGU7XG4gICAgfSBlbHNlIHtcbiAgICAgICRwcmVmZXJyZWRMYW5ndWFnZSA9IG5lZ290aWF0ZUxvY2FsZShsb2NhbGUpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjcmVnaXN0ZXJBdmFpbGFibGVMYW5ndWFnZUtleXNcbiAgICogQG1ldGhvZE9mIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZVByb3ZpZGVyXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBSZWdpc3RlcnMgYSBzZXQgb2YgbGFuZ3VhZ2Uga2V5cyB0aGUgYXBwIHdpbGwgd29yayB3aXRoLiBVc2UgdGhpcyBtZXRob2QgaW5cbiAgICogY29tYmluYXRpb24gd2l0aFxuICAgKiB7QGxpbmsgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjZGV0ZXJtaW5lUHJlZmVycmVkTGFuZ3VhZ2UgZGV0ZXJtaW5lUHJlZmVycmVkTGFuZ3VhZ2V9LlxuICAgKiBXaGVuIGF2YWlsYWJsZSBsYW5ndWFnZXMga2V5cyBhcmUgcmVnaXN0ZXJlZCwgYW5ndWxhci10cmFuc2xhdGVcbiAgICogdHJpZXMgdG8gZmluZCB0aGUgYmVzdCBmaXR0aW5nIGxhbmd1YWdlIGtleSBkZXBlbmRpbmcgb24gdGhlIGJyb3dzZXJzIGxvY2FsZSxcbiAgICogY29uc2lkZXJpbmcgeW91ciBsYW5ndWFnZSBrZXkgY29udmVudGlvbi5cbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IGxhbmd1YWdlS2V5cyBBcnJheSBvZiBsYW5ndWFnZSBrZXlzIHRoZSB5b3VyIGFwcCB3aWxsIHVzZVxuICAgKiBAcGFyYW0ge29iamVjdD19IGFsaWFzZXMgQWxpYXMgbWFwLlxuICAgKi9cbiAgdGhpcy5yZWdpc3RlckF2YWlsYWJsZUxhbmd1YWdlS2V5cyA9IGZ1bmN0aW9uIChsYW5ndWFnZUtleXMsIGFsaWFzZXMpIHtcbiAgICBpZiAobGFuZ3VhZ2VLZXlzKSB7XG4gICAgICAkYXZhaWxhYmxlTGFuZ3VhZ2VLZXlzID0gbGFuZ3VhZ2VLZXlzO1xuICAgICAgaWYgKGFsaWFzZXMpIHtcbiAgICAgICAgJGxhbmd1YWdlS2V5QWxpYXNlcyA9IGFsaWFzZXM7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgcmV0dXJuICRhdmFpbGFibGVMYW5ndWFnZUtleXM7XG4gIH07XG5cbiAgLyoqXG4gICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlciN1c2VMb2FkZXJDYWNoZVxuICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXJcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIFJlZ2lzdGVycyBhIGNhY2hlIGZvciBpbnRlcm5hbCAkaHR0cCBiYXNlZCBsb2FkZXJzLlxuICAgKiB7QGxpbmsgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlUHJvdmlkZXIjZGV0ZXJtaW5lUHJlZmVycmVkTGFuZ3VhZ2UgZGV0ZXJtaW5lUHJlZmVycmVkTGFuZ3VhZ2V9LlxuICAgKiBXaGVuIGZhbHNlIHRoZSBjYWNoZSB3aWxsIGJlIGRpc2FibGVkIChkZWZhdWx0KS4gV2hlbiB0cnVlIG9yIHVuZGVmaW5lZFxuICAgKiB0aGUgY2FjaGUgd2lsbCBiZSBhIGRlZmF1bHQgKHNlZSAkY2FjaGVGYWN0b3J5KS4gV2hlbiBhbiBvYmplY3QgaXQgd2lsbFxuICAgKiBiZSB0cmVhdCBhcyBhIGNhY2hlIG9iamVjdCBpdHNlbGY6IHRoZSB1c2FnZSBpcyAkaHR0cCh7Y2FjaGU6IGNhY2hlfSlcbiAgICpcbiAgICogQHBhcmFtIHtvYmplY3R9IGNhY2hlIGJvb2xlYW4sIHN0cmluZyBvciBjYWNoZS1vYmplY3RcbiAgICovXG4gIHRoaXMudXNlTG9hZGVyQ2FjaGUgPSBmdW5jdGlvbiAoY2FjaGUpIHtcbiAgICBpZiAoY2FjaGUgPT09IGZhbHNlKSB7XG4gICAgICAvLyBkaXNhYmxlIGNhY2hlXG4gICAgICBsb2FkZXJDYWNoZSA9IHVuZGVmaW5lZDtcbiAgICB9IGVsc2UgaWYgKGNhY2hlID09PSB0cnVlKSB7XG4gICAgICAvLyBlbmFibGUgY2FjaGUgdXNpbmcgQUpTIGRlZmF1bHRzXG4gICAgICBsb2FkZXJDYWNoZSA9IHRydWU7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YoY2FjaGUpID09PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gZW5hYmxlIGNhY2hlIHVzaW5nIGRlZmF1bHRcbiAgICAgIGxvYWRlckNhY2hlID0gJyR0cmFuc2xhdGlvbkNhY2hlJztcbiAgICB9IGVsc2UgaWYgKGNhY2hlKSB7XG4gICAgICAvLyBlbmFibGUgY2FjaGUgdXNpbmcgZ2l2ZW4gb25lIChzZWUgJGNhY2hlRmFjdG9yeSlcbiAgICAgIGxvYWRlckNhY2hlID0gY2FjaGU7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIC8qKlxuICAgKiBAbmdkb2Mgb2JqZWN0XG4gICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZVxuICAgKiBAcmVxdWlyZXMgJGludGVycG9sYXRlXG4gICAqIEByZXF1aXJlcyAkbG9nXG4gICAqIEByZXF1aXJlcyAkcm9vdFNjb3BlXG4gICAqIEByZXF1aXJlcyAkcVxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogVGhlIGAkdHJhbnNsYXRlYCBzZXJ2aWNlIGlzIHRoZSBhY3R1YWwgY29yZSBvZiBhbmd1bGFyLXRyYW5zbGF0ZS4gSXQgZXhwZWN0cyBhIHRyYW5zbGF0aW9uIGlkXG4gICAqIGFuZCBvcHRpb25hbCBpbnRlcnBvbGF0ZSBwYXJhbWV0ZXJzIHRvIHRyYW5zbGF0ZSBjb250ZW50cy5cbiAgICpcbiAgICogPHByZT5cbiAgICogICR0cmFuc2xhdGUoJ0hFQURMSU5FX1RFWFQnKS50aGVuKGZ1bmN0aW9uICh0cmFuc2xhdGlvbikge1xuICAgKiAgICAkc2NvcGUudHJhbnNsYXRlZFRleHQgPSB0cmFuc2xhdGlvbjtcbiAgICogIH0pO1xuICAgKiA8L3ByZT5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd8YXJyYXl9IHRyYW5zbGF0aW9uSWQgQSB0b2tlbiB3aGljaCByZXByZXNlbnRzIGEgdHJhbnNsYXRpb24gaWRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhpcyBjYW4gYmUgb3B0aW9uYWxseSBhbiBhcnJheSBvZiB0cmFuc2xhdGlvbiBpZHMgd2hpY2hcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0cyB0aGF0IHRoZSBmdW5jdGlvbiByZXR1cm5zIGFuIG9iamVjdCB3aGVyZSBlYWNoIGtleVxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpcyB0aGUgdHJhbnNsYXRpb24gaWQgYW5kIHRoZSB2YWx1ZSB0aGUgdHJhbnNsYXRpb24uXG4gICAqIEBwYXJhbSB7b2JqZWN0PX0gaW50ZXJwb2xhdGVQYXJhbXMgQW4gb2JqZWN0IGhhc2ggZm9yIGR5bmFtaWMgdmFsdWVzXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpbnRlcnBvbGF0aW9uSWQgVGhlIGlkIG9mIHRoZSBpbnRlcnBvbGF0aW9uIHRvIHVzZVxuICAgKiBAcmV0dXJucyB7b2JqZWN0fSBwcm9taXNlXG4gICAqL1xuICB0aGlzLiRnZXQgPSBbXG4gICAgJyRsb2cnLFxuICAgICckaW5qZWN0b3InLFxuICAgICckcm9vdFNjb3BlJyxcbiAgICAnJHEnLFxuICAgIGZ1bmN0aW9uICgkbG9nLCAkaW5qZWN0b3IsICRyb290U2NvcGUsICRxKSB7XG5cbiAgICAgIHZhciBTdG9yYWdlLFxuICAgICAgICAgIGRlZmF1bHRJbnRlcnBvbGF0b3IgPSAkaW5qZWN0b3IuZ2V0KCRpbnRlcnBvbGF0aW9uRmFjdG9yeSB8fCAnJHRyYW5zbGF0ZURlZmF1bHRJbnRlcnBvbGF0aW9uJyksXG4gICAgICAgICAgcGVuZGluZ0xvYWRlciA9IGZhbHNlLFxuICAgICAgICAgIGludGVycG9sYXRvckhhc2hNYXAgPSB7fSxcbiAgICAgICAgICBsYW5nUHJvbWlzZXMgPSB7fSxcbiAgICAgICAgICBmYWxsYmFja0luZGV4LFxuICAgICAgICAgIHN0YXJ0RmFsbGJhY2tJdGVyYXRpb247XG5cbiAgICAgIHZhciAkdHJhbnNsYXRlID0gZnVuY3Rpb24gKHRyYW5zbGF0aW9uSWQsIGludGVycG9sYXRlUGFyYW1zLCBpbnRlcnBvbGF0aW9uSWQpIHtcblxuICAgICAgICAvLyBEdWNrIGRldGVjdGlvbjogSWYgdGhlIGZpcnN0IGFyZ3VtZW50IGlzIGFuIGFycmF5LCBhIGJ1bmNoIG9mIHRyYW5zbGF0aW9ucyB3YXMgcmVxdWVzdGVkLlxuICAgICAgICAvLyBUaGUgcmVzdWx0IGlzIGFuIG9iamVjdC5cbiAgICAgICAgaWYgKGFuZ3VsYXIuaXNBcnJheSh0cmFuc2xhdGlvbklkKSkge1xuICAgICAgICAgIC8vIEluc3BpcmVkIGJ5IFEuYWxsU2V0dGxlZCBieSBLcmlzIEtvd2FsXG4gICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2tyaXNrb3dhbC9xL2Jsb2IvYjBmYTcyOTgwNzE3ZGMyMDJmZmMzY2JmMDNiOTM2ZTEwZWJiYjlkNy9xLmpzI0wxNTUzLTE1NjNcbiAgICAgICAgICAvLyBUaGlzIHRyYW5zZm9ybXMgYWxsIHByb21pc2VzIHJlZ2FyZGxlc3MgcmVzb2x2ZWQgb3IgcmVqZWN0ZWRcbiAgICAgICAgICB2YXIgdHJhbnNsYXRlQWxsID0gZnVuY3Rpb24gKHRyYW5zbGF0aW9uSWRzKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0cyA9IHt9OyAvLyBzdG9yaW5nIHRoZSBhY3R1YWwgcmVzdWx0c1xuICAgICAgICAgICAgdmFyIHByb21pc2VzID0gW107IC8vIHByb21pc2VzIHRvIHdhaXQgZm9yXG4gICAgICAgICAgICAvLyBXcmFwcyB0aGUgcHJvbWlzZSBhKSBiZWluZyBhbHdheXMgcmVzb2x2ZWQgYW5kIGIpIHN0b3JpbmcgdGhlIGxpbmsgaWQtPnZhbHVlXG4gICAgICAgICAgICB2YXIgdHJhbnNsYXRlID0gZnVuY3Rpb24gKHRyYW5zbGF0aW9uSWQpIHtcbiAgICAgICAgICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgICAgICAgICAgdmFyIHJlZ2FyZGxlc3MgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgICByZXN1bHRzW3RyYW5zbGF0aW9uSWRdID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShbdHJhbnNsYXRpb25JZCwgdmFsdWVdKTtcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgLy8gd2UgZG9uJ3QgY2FyZSB3aGV0aGVyIHRoZSBwcm9taXNlIHdhcyByZXNvbHZlZCBvciByZWplY3RlZDsganVzdCBzdG9yZSB0aGUgdmFsdWVzXG4gICAgICAgICAgICAgICR0cmFuc2xhdGUodHJhbnNsYXRpb25JZCwgaW50ZXJwb2xhdGVQYXJhbXMsIGludGVycG9sYXRpb25JZCkudGhlbihyZWdhcmRsZXNzLCByZWdhcmRsZXNzKTtcbiAgICAgICAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGMgPSB0cmFuc2xhdGlvbklkcy5sZW5ndGg7IGkgPCBjOyBpKyspIHtcbiAgICAgICAgICAgICAgcHJvbWlzZXMucHVzaCh0cmFuc2xhdGUodHJhbnNsYXRpb25JZHNbaV0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIHdhaXQgZm9yIGFsbCAoaW5jbHVkaW5nIHN0b3JpbmcgdG8gcmVzdWx0cylcbiAgICAgICAgICAgIHJldHVybiAkcS5hbGwocHJvbWlzZXMpLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAvLyByZXR1cm4gdGhlIHJlc3VsdHNcbiAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9O1xuICAgICAgICAgIHJldHVybiB0cmFuc2xhdGVBbGwodHJhbnNsYXRpb25JZCk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICAgIC8vIHRyaW0gb2ZmIGFueSB3aGl0ZXNwYWNlXG4gICAgICAgIGlmICh0cmFuc2xhdGlvbklkKSB7XG4gICAgICAgICAgdHJhbnNsYXRpb25JZCA9IHRyaW0uYXBwbHkodHJhbnNsYXRpb25JZCk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcHJvbWlzZVRvV2FpdEZvciA9IChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgdmFyIHByb21pc2UgPSAkcHJlZmVycmVkTGFuZ3VhZ2UgP1xuICAgICAgICAgICAgbGFuZ1Byb21pc2VzWyRwcmVmZXJyZWRMYW5ndWFnZV0gOlxuICAgICAgICAgICAgbGFuZ1Byb21pc2VzWyR1c2VzXTtcblxuICAgICAgICAgIGZhbGxiYWNrSW5kZXggPSAwO1xuXG4gICAgICAgICAgaWYgKCRzdG9yYWdlRmFjdG9yeSAmJiAhcHJvbWlzZSkge1xuICAgICAgICAgICAgLy8gbG9va3MgbGlrZSB0aGVyZSdzIG5vIHBlbmRpbmcgcHJvbWlzZSBmb3IgJHByZWZlcnJlZExhbmd1YWdlIG9yXG4gICAgICAgICAgICAvLyAkdXNlcy4gTWF5YmUgdGhlcmUncyBvbmUgcGVuZGluZyBmb3IgYSBsYW5ndWFnZSB0aGF0IGNvbWVzIGZyb21cbiAgICAgICAgICAgIC8vIHN0b3JhZ2UuXG4gICAgICAgICAgICB2YXIgbGFuZ0tleSA9IFN0b3JhZ2UuZ2V0KCRzdG9yYWdlS2V5KTtcbiAgICAgICAgICAgIHByb21pc2UgPSBsYW5nUHJvbWlzZXNbbGFuZ0tleV07XG5cbiAgICAgICAgICAgIGlmICgkZmFsbGJhY2tMYW5ndWFnZSAmJiAkZmFsbGJhY2tMYW5ndWFnZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB2YXIgaW5kZXggPSBpbmRleE9mKCRmYWxsYmFja0xhbmd1YWdlLCBsYW5nS2V5KTtcbiAgICAgICAgICAgICAgICAvLyBtYXliZSB0aGUgbGFuZ3VhZ2UgZnJvbSBzdG9yYWdlIGlzIGFsc28gZGVmaW5lZCBhcyBmYWxsYmFjayBsYW5ndWFnZVxuICAgICAgICAgICAgICAgIC8vIHdlIGluY3JlYXNlIHRoZSBmYWxsYmFjayBsYW5ndWFnZSBpbmRleCB0byBub3Qgc2VhcmNoIGluIHRoYXQgbGFuZ3VhZ2VcbiAgICAgICAgICAgICAgICAvLyBhcyBmYWxsYmFjaywgc2luY2UgaXQncyBwcm9iYWJseSB0aGUgZmlyc3QgdXNlZCBsYW5ndWFnZVxuICAgICAgICAgICAgICAgIC8vIGluIHRoYXQgY2FzZSB0aGUgaW5kZXggc3RhcnRzIGFmdGVyIHRoZSBmaXJzdCBlbGVtZW50XG4gICAgICAgICAgICAgICAgZmFsbGJhY2tJbmRleCA9IChpbmRleCA9PT0gMCkgPyAxIDogMDtcblxuICAgICAgICAgICAgICAgIC8vIGJ1dCB3ZSBjYW4gbWFrZSBzdXJlIHRvIEFMV0FZUyBmYWxsYmFjayB0byBwcmVmZXJyZWQgbGFuZ3VhZ2UgYXQgbGVhc3RcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXhPZigkZmFsbGJhY2tMYW5ndWFnZSwgJHByZWZlcnJlZExhbmd1YWdlKSA8IDApIHtcbiAgICAgICAgICAgICAgICAgICRmYWxsYmFja0xhbmd1YWdlLnB1c2goJHByZWZlcnJlZExhbmd1YWdlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBwcm9taXNlO1xuICAgICAgICB9KCkpO1xuXG4gICAgICAgIGlmICghcHJvbWlzZVRvV2FpdEZvcikge1xuICAgICAgICAgIC8vIG5vIHByb21pc2UgdG8gd2FpdCBmb3I/IG9rYXkuIFRoZW4gdGhlcmUncyBubyBsb2FkZXIgcmVnaXN0ZXJlZFxuICAgICAgICAgIC8vIG5vciBpcyBhIG9uZSBwZW5kaW5nIGZvciBsYW5ndWFnZSB0aGF0IGNvbWVzIGZyb20gc3RvcmFnZS5cbiAgICAgICAgICAvLyBXZSBjYW4ganVzdCB0cmFuc2xhdGUuXG4gICAgICAgICAgZGV0ZXJtaW5lVHJhbnNsYXRpb24odHJhbnNsYXRpb25JZCwgaW50ZXJwb2xhdGVQYXJhbXMsIGludGVycG9sYXRpb25JZCkudGhlbihkZWZlcnJlZC5yZXNvbHZlLCBkZWZlcnJlZC5yZWplY3QpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHByb21pc2VUb1dhaXRGb3IudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBkZXRlcm1pbmVUcmFuc2xhdGlvbih0cmFuc2xhdGlvbklkLCBpbnRlcnBvbGF0ZVBhcmFtcywgaW50ZXJwb2xhdGlvbklkKS50aGVuKGRlZmVycmVkLnJlc29sdmUsIGRlZmVycmVkLnJlamVjdCk7XG4gICAgICAgICAgfSwgZGVmZXJyZWQucmVqZWN0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICAgIH07XG5cbiAgICAgIC8qKlxuICAgICAgICogQG5hbWUgYXBwbHlOb3RGb3VuZEluZGljYXRvcnNcbiAgICAgICAqIEBwcml2YXRlXG4gICAgICAgKlxuICAgICAgICogQGRlc2NyaXB0aW9uXG4gICAgICAgKiBBcHBsaWVzIG5vdCBmb3VudCBpbmRpY2F0b3JzIHRvIGdpdmVuIHRyYW5zbGF0aW9uIGlkLCBpZiBuZWVkZWQuXG4gICAgICAgKiBUaGlzIGZ1bmN0aW9uIGdldHMgb25seSBleGVjdXRlZCwgaWYgYSB0cmFuc2xhdGlvbiBpZCBkb2Vzbid0IGV4aXN0LFxuICAgICAgICogd2hpY2ggaXMgd2h5IGEgdHJhbnNsYXRpb24gaWQgaXMgZXhwZWN0ZWQgYXMgYXJndW1lbnQuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IHRyYW5zbGF0aW9uSWQgVHJhbnNsYXRpb24gaWQuXG4gICAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBTYW1lIGFzIGdpdmVuIHRyYW5zbGF0aW9uIGlkIGJ1dCBhcHBsaWVkIHdpdGggbm90IGZvdW5kXG4gICAgICAgKiBpbmRpY2F0b3JzLlxuICAgICAgICovXG4gICAgICB2YXIgYXBwbHlOb3RGb3VuZEluZGljYXRvcnMgPSBmdW5jdGlvbiAodHJhbnNsYXRpb25JZCkge1xuICAgICAgICAvLyBhcHBseWluZyBub3RGb3VuZEluZGljYXRvcnNcbiAgICAgICAgaWYgKCRub3RGb3VuZEluZGljYXRvckxlZnQpIHtcbiAgICAgICAgICB0cmFuc2xhdGlvbklkID0gWyRub3RGb3VuZEluZGljYXRvckxlZnQsIHRyYW5zbGF0aW9uSWRdLmpvaW4oJyAnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoJG5vdEZvdW5kSW5kaWNhdG9yUmlnaHQpIHtcbiAgICAgICAgICB0cmFuc2xhdGlvbklkID0gW3RyYW5zbGF0aW9uSWQsICRub3RGb3VuZEluZGljYXRvclJpZ2h0XS5qb2luKCcgJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRyYW5zbGF0aW9uSWQ7XG4gICAgICB9O1xuXG4gICAgICAvKipcbiAgICAgICAqIEBuYW1lIHVzZUxhbmd1YWdlXG4gICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICpcbiAgICAgICAqIEBkZXNjcmlwdGlvblxuICAgICAgICogTWFrZXMgYWN0dWFsIHVzZSBvZiBhIGxhbmd1YWdlIGJ5IHNldHRpbmcgYSBnaXZlbiBsYW5ndWFnZSBrZXkgYXMgdXNlZFxuICAgICAgICogbGFuZ3VhZ2UgYW5kIGluZm9ybXMgcmVnaXN0ZXJlZCBpbnRlcnBvbGF0b3JzIHRvIGFsc28gdXNlIHRoZSBnaXZlblxuICAgICAgICoga2V5IGFzIGxvY2FsZS5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge2tleX0gTG9jYWxlIGtleS5cbiAgICAgICAqL1xuICAgICAgdmFyIHVzZUxhbmd1YWdlID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAkdXNlcyA9IGtleTtcbiAgICAgICAgJHJvb3RTY29wZS4kZW1pdCgnJHRyYW5zbGF0ZUNoYW5nZVN1Y2Nlc3MnLCB7bGFuZ3VhZ2U6IGtleX0pO1xuXG4gICAgICAgIGlmICgkc3RvcmFnZUZhY3RvcnkpIHtcbiAgICAgICAgICBTdG9yYWdlLnB1dCgkdHJhbnNsYXRlLnN0b3JhZ2VLZXkoKSwgJHVzZXMpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGluZm9ybSBkZWZhdWx0IGludGVycG9sYXRvclxuICAgICAgICBkZWZhdWx0SW50ZXJwb2xhdG9yLnNldExvY2FsZSgkdXNlcyk7XG4gICAgICAgIC8vIGluZm9ybSBhbGwgb3RoZXJzIHRvbyFcbiAgICAgICAgYW5ndWxhci5mb3JFYWNoKGludGVycG9sYXRvckhhc2hNYXAsIGZ1bmN0aW9uIChpbnRlcnBvbGF0b3IsIGlkKSB7XG4gICAgICAgICAgaW50ZXJwb2xhdG9ySGFzaE1hcFtpZF0uc2V0TG9jYWxlKCR1c2VzKTtcbiAgICAgICAgfSk7XG4gICAgICAgICRyb290U2NvcGUuJGVtaXQoJyR0cmFuc2xhdGVDaGFuZ2VFbmQnLCB7bGFuZ3VhZ2U6IGtleX0pO1xuICAgICAgfTtcblxuICAgICAgLyoqXG4gICAgICAgKiBAbmFtZSBsb2FkQXN5bmNcbiAgICAgICAqIEBwcml2YXRlXG4gICAgICAgKlxuICAgICAgICogQGRlc2NyaXB0aW9uXG4gICAgICAgKiBLaWNrcyBvZiByZWdpc3RlcmVkIGFzeW5jIGxvYWRlciB1c2luZyBgJGluamVjdG9yYCBhbmQgYXBwbGllcyBleGlzdGluZ1xuICAgICAgICogbG9hZGVyIG9wdGlvbnMuIFdoZW4gcmVzb2x2ZWQsIGl0IHVwZGF0ZXMgdHJhbnNsYXRpb24gdGFibGVzIGFjY29yZGluZ2x5XG4gICAgICAgKiBvciByZWplY3RzIHdpdGggZ2l2ZW4gbGFuZ3VhZ2Uga2V5LlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgTGFuZ3VhZ2Uga2V5LlxuICAgICAgICogQHJldHVybiB7UHJvbWlzZX0gQSBwcm9taXNlLlxuICAgICAgICovXG4gICAgICB2YXIgbG9hZEFzeW5jID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBpZiAoIWtleSkge1xuICAgICAgICAgIHRocm93ICdObyBsYW5ndWFnZSBrZXkgc3BlY2lmaWVkIGZvciBsb2FkaW5nLic7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICAgICRyb290U2NvcGUuJGVtaXQoJyR0cmFuc2xhdGVMb2FkaW5nU3RhcnQnLCB7bGFuZ3VhZ2U6IGtleX0pO1xuICAgICAgICBwZW5kaW5nTG9hZGVyID0gdHJ1ZTtcblxuICAgICAgICB2YXIgY2FjaGUgPSBsb2FkZXJDYWNoZTtcbiAgICAgICAgaWYgKHR5cGVvZihjYWNoZSkgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgLy8gZ2V0dGluZyBvbi1kZW1hbmQgaW5zdGFuY2Ugb2YgbG9hZGVyXG4gICAgICAgICAgY2FjaGUgPSAkaW5qZWN0b3IuZ2V0KGNhY2hlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBsb2FkZXJPcHRpb25zID0gYW5ndWxhci5leHRlbmQoe30sICRsb2FkZXJPcHRpb25zLCB7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgJGh0dHA6IGFuZ3VsYXIuZXh0ZW5kKHt9LCB7XG4gICAgICAgICAgICBjYWNoZTogY2FjaGVcbiAgICAgICAgICB9LCAkbG9hZGVyT3B0aW9ucy4kaHR0cClcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJGluamVjdG9yLmdldCgkbG9hZGVyRmFjdG9yeSkobG9hZGVyT3B0aW9ucykudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgIHZhciB0cmFuc2xhdGlvblRhYmxlID0ge307XG4gICAgICAgICAgJHJvb3RTY29wZS4kZW1pdCgnJHRyYW5zbGF0ZUxvYWRpbmdTdWNjZXNzJywge2xhbmd1YWdlOiBrZXl9KTtcblxuICAgICAgICAgIGlmIChhbmd1bGFyLmlzQXJyYXkoZGF0YSkpIHtcbiAgICAgICAgICAgIGFuZ3VsYXIuZm9yRWFjaChkYXRhLCBmdW5jdGlvbiAodGFibGUpIHtcbiAgICAgICAgICAgICAgYW5ndWxhci5leHRlbmQodHJhbnNsYXRpb25UYWJsZSwgZmxhdE9iamVjdCh0YWJsZSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFuZ3VsYXIuZXh0ZW5kKHRyYW5zbGF0aW9uVGFibGUsIGZsYXRPYmplY3QoZGF0YSkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBwZW5kaW5nTG9hZGVyID0gZmFsc2U7XG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSh7XG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIHRhYmxlOiB0cmFuc2xhdGlvblRhYmxlXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgJHJvb3RTY29wZS4kZW1pdCgnJHRyYW5zbGF0ZUxvYWRpbmdFbmQnLCB7bGFuZ3VhZ2U6IGtleX0pO1xuICAgICAgICB9LCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgJHJvb3RTY29wZS4kZW1pdCgnJHRyYW5zbGF0ZUxvYWRpbmdFcnJvcicsIHtsYW5ndWFnZToga2V5fSk7XG4gICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGtleSk7XG4gICAgICAgICAgJHJvb3RTY29wZS4kZW1pdCgnJHRyYW5zbGF0ZUxvYWRpbmdFbmQnLCB7bGFuZ3VhZ2U6IGtleX0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgICB9O1xuXG4gICAgICBpZiAoJHN0b3JhZ2VGYWN0b3J5KSB7XG4gICAgICAgIFN0b3JhZ2UgPSAkaW5qZWN0b3IuZ2V0KCRzdG9yYWdlRmFjdG9yeSk7XG5cbiAgICAgICAgaWYgKCFTdG9yYWdlLmdldCB8fCAhU3RvcmFnZS5wdXQpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvdWxkblxcJ3QgdXNlIHN0b3JhZ2UgXFwnJyArICRzdG9yYWdlRmFjdG9yeSArICdcXCcsIG1pc3NpbmcgZ2V0KCkgb3IgcHV0KCkgbWV0aG9kIScpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIGFwcGx5IGFkZGl0aW9uYWwgc2V0dGluZ3NcbiAgICAgIGlmIChhbmd1bGFyLmlzRnVuY3Rpb24oZGVmYXVsdEludGVycG9sYXRvci51c2VTYW5pdGl6ZVZhbHVlU3RyYXRlZ3kpKSB7XG4gICAgICAgIGRlZmF1bHRJbnRlcnBvbGF0b3IudXNlU2FuaXRpemVWYWx1ZVN0cmF0ZWd5KCRpbnRlcnBvbGF0aW9uU2FuaXRpemF0aW9uU3RyYXRlZ3kpO1xuICAgICAgfVxuXG4gICAgICAvLyBpZiB3ZSBoYXZlIGFkZGl0aW9uYWwgaW50ZXJwb2xhdGlvbnMgdGhhdCB3ZXJlIGFkZGVkIHZpYVxuICAgICAgLy8gJHRyYW5zbGF0ZVByb3ZpZGVyLmFkZEludGVycG9sYXRpb24oKSwgd2UgaGF2ZSB0byBtYXAnZW1cbiAgICAgIGlmICgkaW50ZXJwb2xhdG9yRmFjdG9yaWVzLmxlbmd0aCkge1xuICAgICAgICBhbmd1bGFyLmZvckVhY2goJGludGVycG9sYXRvckZhY3RvcmllcywgZnVuY3Rpb24gKGludGVycG9sYXRvckZhY3RvcnkpIHtcbiAgICAgICAgICB2YXIgaW50ZXJwb2xhdG9yID0gJGluamVjdG9yLmdldChpbnRlcnBvbGF0b3JGYWN0b3J5KTtcbiAgICAgICAgICAvLyBzZXR0aW5nIGluaXRpYWwgbG9jYWxlIGZvciBlYWNoIGludGVycG9sYXRpb24gc2VydmljZVxuICAgICAgICAgIGludGVycG9sYXRvci5zZXRMb2NhbGUoJHByZWZlcnJlZExhbmd1YWdlIHx8ICR1c2VzKTtcbiAgICAgICAgICAvLyBhcHBseSBhZGRpdGlvbmFsIHNldHRpbmdzXG4gICAgICAgICAgaWYgKGFuZ3VsYXIuaXNGdW5jdGlvbihpbnRlcnBvbGF0b3IudXNlU2FuaXRpemVWYWx1ZVN0cmF0ZWd5KSkge1xuICAgICAgICAgICAgaW50ZXJwb2xhdG9yLnVzZVNhbml0aXplVmFsdWVTdHJhdGVneSgkaW50ZXJwb2xhdGlvblNhbml0aXphdGlvblN0cmF0ZWd5KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gbWFrZSdlbSByZWNvZ25pemFibGUgdGhyb3VnaCBpZFxuICAgICAgICAgIGludGVycG9sYXRvckhhc2hNYXBbaW50ZXJwb2xhdG9yLmdldEludGVycG9sYXRpb25JZGVudGlmaWVyKCldID0gaW50ZXJwb2xhdG9yO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBAbmFtZSBnZXRUcmFuc2xhdGlvblRhYmxlXG4gICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICpcbiAgICAgICAqIEBkZXNjcmlwdGlvblxuICAgICAgICogUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB0byB0aGUgdHJhbnNsYXRpb24gdGFibGVcbiAgICAgICAqIG9yIGlzIHJlamVjdGVkIGlmIGFuIGVycm9yIG9jY3VycmVkLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSBsYW5nS2V5XG4gICAgICAgKiBAcmV0dXJucyB7US5wcm9taXNlfVxuICAgICAgICovXG4gICAgICB2YXIgZ2V0VHJhbnNsYXRpb25UYWJsZSA9IGZ1bmN0aW9uIChsYW5nS2V5KSB7XG4gICAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoJHRyYW5zbGF0aW9uVGFibGUsIGxhbmdLZXkpKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSgkdHJhbnNsYXRpb25UYWJsZVtsYW5nS2V5XSk7XG4gICAgICAgIH0gZWxzZSBpZiAobGFuZ1Byb21pc2VzW2xhbmdLZXldKSB7XG4gICAgICAgICAgbGFuZ1Byb21pc2VzW2xhbmdLZXldLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgIHRyYW5zbGF0aW9ucyhkYXRhLmtleSwgZGF0YS50YWJsZSk7XG4gICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEudGFibGUpO1xuICAgICAgICAgIH0sIGRlZmVycmVkLnJlamVjdCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVqZWN0KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgICB9O1xuXG4gICAgICAvKipcbiAgICAgICAqIEBuYW1lIGdldEZhbGxiYWNrVHJhbnNsYXRpb25cbiAgICAgICAqIEBwcml2YXRlXG4gICAgICAgKlxuICAgICAgICogQGRlc2NyaXB0aW9uXG4gICAgICAgKiBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHdpbGwgcmVzb2x2ZSB0byB0aGUgdHJhbnNsYXRpb25cbiAgICAgICAqIG9yIGJlIHJlamVjdGVkIGlmIG5vIHRyYW5zbGF0aW9uIHdhcyBmb3VuZCBmb3IgdGhlIGxhbmd1YWdlLlxuICAgICAgICogVGhpcyBmdW5jdGlvbiBpcyBjdXJyZW50bHkgb25seSB1c2VkIGZvciBmYWxsYmFjayBsYW5ndWFnZSB0cmFuc2xhdGlvbi5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0gbGFuZ0tleSBUaGUgbGFuZ3VhZ2UgdG8gdHJhbnNsYXRlIHRvLlxuICAgICAgICogQHBhcmFtIHRyYW5zbGF0aW9uSWRcbiAgICAgICAqIEBwYXJhbSBpbnRlcnBvbGF0ZVBhcmFtc1xuICAgICAgICogQHBhcmFtIEludGVycG9sYXRvclxuICAgICAgICogQHJldHVybnMge1EucHJvbWlzZX1cbiAgICAgICAqL1xuICAgICAgdmFyIGdldEZhbGxiYWNrVHJhbnNsYXRpb24gPSBmdW5jdGlvbiAobGFuZ0tleSwgdHJhbnNsYXRpb25JZCwgaW50ZXJwb2xhdGVQYXJhbXMsIEludGVycG9sYXRvcikge1xuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICAgIGdldFRyYW5zbGF0aW9uVGFibGUobGFuZ0tleSkudGhlbihmdW5jdGlvbiAodHJhbnNsYXRpb25UYWJsZSkge1xuICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodHJhbnNsYXRpb25UYWJsZSwgdHJhbnNsYXRpb25JZCkpIHtcbiAgICAgICAgICAgIEludGVycG9sYXRvci5zZXRMb2NhbGUobGFuZ0tleSk7XG4gICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKEludGVycG9sYXRvci5pbnRlcnBvbGF0ZSh0cmFuc2xhdGlvblRhYmxlW3RyYW5zbGF0aW9uSWRdLCBpbnRlcnBvbGF0ZVBhcmFtcykpO1xuICAgICAgICAgICAgSW50ZXJwb2xhdG9yLnNldExvY2FsZSgkdXNlcyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgZGVmZXJyZWQucmVqZWN0KTtcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICAgIH07XG5cbiAgICAgIC8qKlxuICAgICAgICogQG5hbWUgZ2V0RmFsbGJhY2tUcmFuc2xhdGlvbkluc3RhbnRcbiAgICAgICAqIEBwcml2YXRlXG4gICAgICAgKlxuICAgICAgICogQGRlc2NyaXB0aW9uXG4gICAgICAgKiBSZXR1cm5zIGEgdHJhbnNsYXRpb25cbiAgICAgICAqIFRoaXMgZnVuY3Rpb24gaXMgY3VycmVudGx5IG9ubHkgdXNlZCBmb3IgZmFsbGJhY2sgbGFuZ3VhZ2UgdHJhbnNsYXRpb24uXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIGxhbmdLZXkgVGhlIGxhbmd1YWdlIHRvIHRyYW5zbGF0ZSB0by5cbiAgICAgICAqIEBwYXJhbSB0cmFuc2xhdGlvbklkXG4gICAgICAgKiBAcGFyYW0gaW50ZXJwb2xhdGVQYXJhbXNcbiAgICAgICAqIEBwYXJhbSBJbnRlcnBvbGF0b3JcbiAgICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IHRyYW5zbGF0aW9uXG4gICAgICAgKi9cbiAgICAgIHZhciBnZXRGYWxsYmFja1RyYW5zbGF0aW9uSW5zdGFudCA9IGZ1bmN0aW9uIChsYW5nS2V5LCB0cmFuc2xhdGlvbklkLCBpbnRlcnBvbGF0ZVBhcmFtcywgSW50ZXJwb2xhdG9yKSB7XG4gICAgICAgIHZhciByZXN1bHQsIHRyYW5zbGF0aW9uVGFibGUgPSAkdHJhbnNsYXRpb25UYWJsZVtsYW5nS2V5XTtcblxuICAgICAgICBpZiAodHJhbnNsYXRpb25UYWJsZSAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodHJhbnNsYXRpb25UYWJsZSwgdHJhbnNsYXRpb25JZCkpIHtcbiAgICAgICAgICBJbnRlcnBvbGF0b3Iuc2V0TG9jYWxlKGxhbmdLZXkpO1xuICAgICAgICAgIHJlc3VsdCA9IEludGVycG9sYXRvci5pbnRlcnBvbGF0ZSh0cmFuc2xhdGlvblRhYmxlW3RyYW5zbGF0aW9uSWRdLCBpbnRlcnBvbGF0ZVBhcmFtcyk7XG4gICAgICAgICAgSW50ZXJwb2xhdG9yLnNldExvY2FsZSgkdXNlcyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfTtcblxuXG4gICAgICAvKipcbiAgICAgICAqIEBuYW1lIHRyYW5zbGF0ZUJ5SGFuZGxlclxuICAgICAgICogQHByaXZhdGVcbiAgICAgICAqXG4gICAgICAgKiBUcmFuc2xhdGUgYnkgbWlzc2luZyB0cmFuc2xhdGlvbiBoYW5kbGVyLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB0cmFuc2xhdGlvbklkXG4gICAgICAgKiBAcmV0dXJucyB0cmFuc2xhdGlvbiBjcmVhdGVkIGJ5ICRtaXNzaW5nVHJhbnNsYXRpb25IYW5kbGVyIG9yIHRyYW5zbGF0aW9uSWQgaXMgJG1pc3NpbmdUcmFuc2xhdGlvbkhhbmRsZXIgaXNcbiAgICAgICAqIGFic2VudFxuICAgICAgICovXG4gICAgICB2YXIgdHJhbnNsYXRlQnlIYW5kbGVyID0gZnVuY3Rpb24gKHRyYW5zbGF0aW9uSWQpIHtcbiAgICAgICAgLy8gSWYgd2UgaGF2ZSBhIGhhbmRsZXIgZmFjdG9yeSAtIHdlIG1pZ2h0IGFsc28gY2FsbCBpdCBoZXJlIHRvIGRldGVybWluZSBpZiBpdCBwcm92aWRlc1xuICAgICAgICAvLyBhIGRlZmF1bHQgdGV4dCBmb3IgYSB0cmFuc2xhdGlvbmlkIHRoYXQgY2FuJ3QgYmUgZm91bmQgYW55d2hlcmUgaW4gb3VyIHRhYmxlc1xuICAgICAgICBpZiAoJG1pc3NpbmdUcmFuc2xhdGlvbkhhbmRsZXJGYWN0b3J5KSB7XG4gICAgICAgICAgdmFyIHJlc3VsdFN0cmluZyA9ICRpbmplY3Rvci5nZXQoJG1pc3NpbmdUcmFuc2xhdGlvbkhhbmRsZXJGYWN0b3J5KSh0cmFuc2xhdGlvbklkLCAkdXNlcyk7XG4gICAgICAgICAgaWYgKHJlc3VsdFN0cmluZyAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0U3RyaW5nO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdHJhbnNsYXRpb25JZDtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIHRyYW5zbGF0aW9uSWQ7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIC8qKlxuICAgICAgICogQG5hbWUgcmVzb2x2ZUZvckZhbGxiYWNrTGFuZ3VhZ2VcbiAgICAgICAqIEBwcml2YXRlXG4gICAgICAgKlxuICAgICAgICogUmVjdXJzaXZlIGhlbHBlciBmdW5jdGlvbiBmb3IgZmFsbGJhY2tUcmFuc2xhdGlvbiB0aGF0IHdpbGwgc2VxdWVudGlhbGx5IGxvb2tcbiAgICAgICAqIGZvciBhIHRyYW5zbGF0aW9uIGluIHRoZSBmYWxsYmFja0xhbmd1YWdlcyBzdGFydGluZyB3aXRoIGZhbGxiYWNrTGFuZ3VhZ2VJbmRleC5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0gZmFsbGJhY2tMYW5ndWFnZUluZGV4XG4gICAgICAgKiBAcGFyYW0gdHJhbnNsYXRpb25JZFxuICAgICAgICogQHBhcmFtIGludGVycG9sYXRlUGFyYW1zXG4gICAgICAgKiBAcGFyYW0gSW50ZXJwb2xhdG9yXG4gICAgICAgKiBAcmV0dXJucyB7US5wcm9taXNlfSBQcm9taXNlIHRoYXQgd2lsbCByZXNvbHZlIHRvIHRoZSB0cmFuc2xhdGlvbi5cbiAgICAgICAqL1xuICAgICAgdmFyIHJlc29sdmVGb3JGYWxsYmFja0xhbmd1YWdlID0gZnVuY3Rpb24gKGZhbGxiYWNrTGFuZ3VhZ2VJbmRleCwgdHJhbnNsYXRpb25JZCwgaW50ZXJwb2xhdGVQYXJhbXMsIEludGVycG9sYXRvcikge1xuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICAgIGlmIChmYWxsYmFja0xhbmd1YWdlSW5kZXggPCAkZmFsbGJhY2tMYW5ndWFnZS5sZW5ndGgpIHtcbiAgICAgICAgICB2YXIgbGFuZ0tleSA9ICRmYWxsYmFja0xhbmd1YWdlW2ZhbGxiYWNrTGFuZ3VhZ2VJbmRleF07XG4gICAgICAgICAgZ2V0RmFsbGJhY2tUcmFuc2xhdGlvbihsYW5nS2V5LCB0cmFuc2xhdGlvbklkLCBpbnRlcnBvbGF0ZVBhcmFtcywgSW50ZXJwb2xhdG9yKS50aGVuKFxuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSxcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgLy8gTG9vayBpbiB0aGUgbmV4dCBmYWxsYmFjayBsYW5ndWFnZSBmb3IgYSB0cmFuc2xhdGlvbi5cbiAgICAgICAgICAgICAgLy8gSXQgZGVsYXlzIHRoZSByZXNvbHZpbmcgYnkgcGFzc2luZyBhbm90aGVyIHByb21pc2UgdG8gcmVzb2x2ZS5cbiAgICAgICAgICAgICAgcmVzb2x2ZUZvckZhbGxiYWNrTGFuZ3VhZ2UoZmFsbGJhY2tMYW5ndWFnZUluZGV4ICsgMSwgdHJhbnNsYXRpb25JZCwgaW50ZXJwb2xhdGVQYXJhbXMsIEludGVycG9sYXRvcikudGhlbihkZWZlcnJlZC5yZXNvbHZlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIE5vIHRyYW5zbGF0aW9uIGZvdW5kIGluIGFueSBmYWxsYmFjayBsYW5ndWFnZVxuICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUodHJhbnNsYXRlQnlIYW5kbGVyKHRyYW5zbGF0aW9uSWQpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICAgIH07XG5cbiAgICAgIC8qKlxuICAgICAgICogQG5hbWUgcmVzb2x2ZUZvckZhbGxiYWNrTGFuZ3VhZ2VJbnN0YW50XG4gICAgICAgKiBAcHJpdmF0ZVxuICAgICAgICpcbiAgICAgICAqIFJlY3Vyc2l2ZSBoZWxwZXIgZnVuY3Rpb24gZm9yIGZhbGxiYWNrVHJhbnNsYXRpb24gdGhhdCB3aWxsIHNlcXVlbnRpYWxseSBsb29rXG4gICAgICAgKiBmb3IgYSB0cmFuc2xhdGlvbiBpbiB0aGUgZmFsbGJhY2tMYW5ndWFnZXMgc3RhcnRpbmcgd2l0aCBmYWxsYmFja0xhbmd1YWdlSW5kZXguXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIGZhbGxiYWNrTGFuZ3VhZ2VJbmRleFxuICAgICAgICogQHBhcmFtIHRyYW5zbGF0aW9uSWRcbiAgICAgICAqIEBwYXJhbSBpbnRlcnBvbGF0ZVBhcmFtc1xuICAgICAgICogQHBhcmFtIEludGVycG9sYXRvclxuICAgICAgICogQHJldHVybnMge3N0cmluZ30gdHJhbnNsYXRpb25cbiAgICAgICAqL1xuICAgICAgdmFyIHJlc29sdmVGb3JGYWxsYmFja0xhbmd1YWdlSW5zdGFudCA9IGZ1bmN0aW9uIChmYWxsYmFja0xhbmd1YWdlSW5kZXgsIHRyYW5zbGF0aW9uSWQsIGludGVycG9sYXRlUGFyYW1zLCBJbnRlcnBvbGF0b3IpIHtcbiAgICAgICAgdmFyIHJlc3VsdDtcblxuICAgICAgICBpZiAoZmFsbGJhY2tMYW5ndWFnZUluZGV4IDwgJGZhbGxiYWNrTGFuZ3VhZ2UubGVuZ3RoKSB7XG4gICAgICAgICAgdmFyIGxhbmdLZXkgPSAkZmFsbGJhY2tMYW5ndWFnZVtmYWxsYmFja0xhbmd1YWdlSW5kZXhdO1xuICAgICAgICAgIHJlc3VsdCA9IGdldEZhbGxiYWNrVHJhbnNsYXRpb25JbnN0YW50KGxhbmdLZXksIHRyYW5zbGF0aW9uSWQsIGludGVycG9sYXRlUGFyYW1zLCBJbnRlcnBvbGF0b3IpO1xuICAgICAgICAgIGlmICghcmVzdWx0KSB7XG4gICAgICAgICAgICByZXN1bHQgPSByZXNvbHZlRm9yRmFsbGJhY2tMYW5ndWFnZUluc3RhbnQoZmFsbGJhY2tMYW5ndWFnZUluZGV4ICsgMSwgdHJhbnNsYXRpb25JZCwgaW50ZXJwb2xhdGVQYXJhbXMsIEludGVycG9sYXRvcik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9O1xuXG4gICAgICAvKipcbiAgICAgICAqIFRyYW5zbGF0ZXMgd2l0aCB0aGUgdXNhZ2Ugb2YgdGhlIGZhbGxiYWNrIGxhbmd1YWdlcy5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0gdHJhbnNsYXRpb25JZFxuICAgICAgICogQHBhcmFtIGludGVycG9sYXRlUGFyYW1zXG4gICAgICAgKiBAcGFyYW0gSW50ZXJwb2xhdG9yXG4gICAgICAgKiBAcmV0dXJucyB7US5wcm9taXNlfSBQcm9taXNlLCB0aGF0IHJlc29sdmVzIHRvIHRoZSB0cmFuc2xhdGlvbi5cbiAgICAgICAqL1xuICAgICAgdmFyIGZhbGxiYWNrVHJhbnNsYXRpb24gPSBmdW5jdGlvbiAodHJhbnNsYXRpb25JZCwgaW50ZXJwb2xhdGVQYXJhbXMsIEludGVycG9sYXRvcikge1xuICAgICAgICAvLyBTdGFydCB3aXRoIHRoZSBmYWxsYmFja0xhbmd1YWdlIHdpdGggaW5kZXggMFxuICAgICAgICByZXR1cm4gcmVzb2x2ZUZvckZhbGxiYWNrTGFuZ3VhZ2UoKHN0YXJ0RmFsbGJhY2tJdGVyYXRpb24+MCA/IHN0YXJ0RmFsbGJhY2tJdGVyYXRpb24gOiBmYWxsYmFja0luZGV4KSwgdHJhbnNsYXRpb25JZCwgaW50ZXJwb2xhdGVQYXJhbXMsIEludGVycG9sYXRvcik7XG4gICAgICB9O1xuXG4gICAgICAvKipcbiAgICAgICAqIFRyYW5zbGF0ZXMgd2l0aCB0aGUgdXNhZ2Ugb2YgdGhlIGZhbGxiYWNrIGxhbmd1YWdlcy5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0gdHJhbnNsYXRpb25JZFxuICAgICAgICogQHBhcmFtIGludGVycG9sYXRlUGFyYW1zXG4gICAgICAgKiBAcGFyYW0gSW50ZXJwb2xhdG9yXG4gICAgICAgKiBAcmV0dXJucyB7U3RyaW5nfSB0cmFuc2xhdGlvblxuICAgICAgICovXG4gICAgICB2YXIgZmFsbGJhY2tUcmFuc2xhdGlvbkluc3RhbnQgPSBmdW5jdGlvbiAodHJhbnNsYXRpb25JZCwgaW50ZXJwb2xhdGVQYXJhbXMsIEludGVycG9sYXRvcikge1xuICAgICAgICAvLyBTdGFydCB3aXRoIHRoZSBmYWxsYmFja0xhbmd1YWdlIHdpdGggaW5kZXggMFxuICAgICAgICByZXR1cm4gcmVzb2x2ZUZvckZhbGxiYWNrTGFuZ3VhZ2VJbnN0YW50KChzdGFydEZhbGxiYWNrSXRlcmF0aW9uPjAgPyBzdGFydEZhbGxiYWNrSXRlcmF0aW9uIDogZmFsbGJhY2tJbmRleCksIHRyYW5zbGF0aW9uSWQsIGludGVycG9sYXRlUGFyYW1zLCBJbnRlcnBvbGF0b3IpO1xuICAgICAgfTtcblxuICAgICAgdmFyIGRldGVybWluZVRyYW5zbGF0aW9uID0gZnVuY3Rpb24gKHRyYW5zbGF0aW9uSWQsIGludGVycG9sYXRlUGFyYW1zLCBpbnRlcnBvbGF0aW9uSWQpIHtcblxuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICAgIHZhciB0YWJsZSA9ICR1c2VzID8gJHRyYW5zbGF0aW9uVGFibGVbJHVzZXNdIDogJHRyYW5zbGF0aW9uVGFibGUsXG4gICAgICAgICAgICBJbnRlcnBvbGF0b3IgPSAoaW50ZXJwb2xhdGlvbklkKSA/IGludGVycG9sYXRvckhhc2hNYXBbaW50ZXJwb2xhdGlvbklkXSA6IGRlZmF1bHRJbnRlcnBvbGF0b3I7XG5cbiAgICAgICAgLy8gaWYgdGhlIHRyYW5zbGF0aW9uIGlkIGV4aXN0cywgd2UgY2FuIGp1c3QgaW50ZXJwb2xhdGUgaXRcbiAgICAgICAgaWYgKHRhYmxlICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0YWJsZSwgdHJhbnNsYXRpb25JZCkpIHtcbiAgICAgICAgICB2YXIgdHJhbnNsYXRpb24gPSB0YWJsZVt0cmFuc2xhdGlvbklkXTtcblxuICAgICAgICAgIC8vIElmIHVzaW5nIGxpbmssIHJlcnVuICR0cmFuc2xhdGUgd2l0aCBsaW5rZWQgdHJhbnNsYXRpb25JZCBhbmQgcmV0dXJuIGl0XG4gICAgICAgICAgaWYgKHRyYW5zbGF0aW9uLnN1YnN0cigwLCAyKSA9PT0gJ0A6Jykge1xuXG4gICAgICAgICAgICAkdHJhbnNsYXRlKHRyYW5zbGF0aW9uLnN1YnN0cigyKSwgaW50ZXJwb2xhdGVQYXJhbXMsIGludGVycG9sYXRpb25JZClcbiAgICAgICAgICAgICAgLnRoZW4oZGVmZXJyZWQucmVzb2x2ZSwgZGVmZXJyZWQucmVqZWN0KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShJbnRlcnBvbGF0b3IuaW50ZXJwb2xhdGUodHJhbnNsYXRpb24sIGludGVycG9sYXRlUGFyYW1zKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBtaXNzaW5nVHJhbnNsYXRpb25IYW5kbGVyVHJhbnNsYXRpb247XG4gICAgICAgICAgLy8gZm9yIGxvZ2dpbmcgcHVycG9zZXMgb25seSAoYXMgaW4gJHRyYW5zbGF0ZU1pc3NpbmdUcmFuc2xhdGlvbkhhbmRsZXJMb2cpLCB2YWx1ZSBpcyBub3QgcmV0dXJuZWQgdG8gcHJvbWlzZVxuICAgICAgICAgIGlmICgkbWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlckZhY3RvcnkgJiYgIXBlbmRpbmdMb2FkZXIpIHtcbiAgICAgICAgICAgIG1pc3NpbmdUcmFuc2xhdGlvbkhhbmRsZXJUcmFuc2xhdGlvbiA9IHRyYW5zbGF0ZUJ5SGFuZGxlcih0cmFuc2xhdGlvbklkKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBzaW5jZSB3ZSBjb3VsZG4ndCB0cmFuc2xhdGUgdGhlIGluaXRhbCByZXF1ZXN0ZWQgdHJhbnNsYXRpb24gaWQsXG4gICAgICAgICAgLy8gd2UgdHJ5IGl0IG5vdyB3aXRoIG9uZSBvciBtb3JlIGZhbGxiYWNrIGxhbmd1YWdlcywgaWYgZmFsbGJhY2sgbGFuZ3VhZ2UocykgaXNcbiAgICAgICAgICAvLyBjb25maWd1cmVkLlxuICAgICAgICAgIGlmICgkdXNlcyAmJiAkZmFsbGJhY2tMYW5ndWFnZSAmJiAkZmFsbGJhY2tMYW5ndWFnZS5sZW5ndGgpIHtcbiAgICAgICAgICAgIGZhbGxiYWNrVHJhbnNsYXRpb24odHJhbnNsYXRpb25JZCwgaW50ZXJwb2xhdGVQYXJhbXMsIEludGVycG9sYXRvcilcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAodHJhbnNsYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUodHJhbnNsYXRpb24pO1xuICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uIChfdHJhbnNsYXRpb25JZCkge1xuICAgICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGFwcGx5Tm90Rm91bmRJbmRpY2F0b3JzKF90cmFuc2xhdGlvbklkKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIGlmICgkbWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlckZhY3RvcnkgJiYgIXBlbmRpbmdMb2FkZXIgJiYgbWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlclRyYW5zbGF0aW9uKSB7XG4gICAgICAgICAgICAvLyBsb29rcyBsaWtlIHRoZSByZXF1ZXN0ZWQgdHJhbnNsYXRpb24gaWQgZG9lc24ndCBleGlzdHMuXG4gICAgICAgICAgICAvLyBOb3csIGlmIHRoZXJlIGlzIGEgcmVnaXN0ZXJlZCBoYW5kbGVyIGZvciBtaXNzaW5nIHRyYW5zbGF0aW9ucyBhbmQgbm9cbiAgICAgICAgICAgIC8vIGFzeW5jTG9hZGVyIGlzIHBlbmRpbmcsIHdlIGV4ZWN1dGUgdGhlIGhhbmRsZXJcbiAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUobWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlclRyYW5zbGF0aW9uKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGFwcGx5Tm90Rm91bmRJbmRpY2F0b3JzKHRyYW5zbGF0aW9uSWQpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgICB9O1xuXG4gICAgICB2YXIgZGV0ZXJtaW5lVHJhbnNsYXRpb25JbnN0YW50ID0gZnVuY3Rpb24gKHRyYW5zbGF0aW9uSWQsIGludGVycG9sYXRlUGFyYW1zLCBpbnRlcnBvbGF0aW9uSWQpIHtcblxuICAgICAgICB2YXIgcmVzdWx0LCB0YWJsZSA9ICR1c2VzID8gJHRyYW5zbGF0aW9uVGFibGVbJHVzZXNdIDogJHRyYW5zbGF0aW9uVGFibGUsXG4gICAgICAgICAgICBJbnRlcnBvbGF0b3IgPSAoaW50ZXJwb2xhdGlvbklkKSA/IGludGVycG9sYXRvckhhc2hNYXBbaW50ZXJwb2xhdGlvbklkXSA6IGRlZmF1bHRJbnRlcnBvbGF0b3I7XG5cbiAgICAgICAgLy8gaWYgdGhlIHRyYW5zbGF0aW9uIGlkIGV4aXN0cywgd2UgY2FuIGp1c3QgaW50ZXJwb2xhdGUgaXRcbiAgICAgICAgaWYgKHRhYmxlICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0YWJsZSwgdHJhbnNsYXRpb25JZCkpIHtcbiAgICAgICAgICB2YXIgdHJhbnNsYXRpb24gPSB0YWJsZVt0cmFuc2xhdGlvbklkXTtcblxuICAgICAgICAgIC8vIElmIHVzaW5nIGxpbmssIHJlcnVuICR0cmFuc2xhdGUgd2l0aCBsaW5rZWQgdHJhbnNsYXRpb25JZCBhbmQgcmV0dXJuIGl0XG4gICAgICAgICAgaWYgKHRyYW5zbGF0aW9uLnN1YnN0cigwLCAyKSA9PT0gJ0A6Jykge1xuICAgICAgICAgICAgcmVzdWx0ID0gZGV0ZXJtaW5lVHJhbnNsYXRpb25JbnN0YW50KHRyYW5zbGF0aW9uLnN1YnN0cigyKSwgaW50ZXJwb2xhdGVQYXJhbXMsIGludGVycG9sYXRpb25JZCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IEludGVycG9sYXRvci5pbnRlcnBvbGF0ZSh0cmFuc2xhdGlvbiwgaW50ZXJwb2xhdGVQYXJhbXMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgbWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlclRyYW5zbGF0aW9uO1xuICAgICAgICAgIC8vIGZvciBsb2dnaW5nIHB1cnBvc2VzIG9ubHkgKGFzIGluICR0cmFuc2xhdGVNaXNzaW5nVHJhbnNsYXRpb25IYW5kbGVyTG9nKSwgdmFsdWUgaXMgbm90IHJldHVybmVkIHRvIHByb21pc2VcbiAgICAgICAgICBpZiAoJG1pc3NpbmdUcmFuc2xhdGlvbkhhbmRsZXJGYWN0b3J5ICYmICFwZW5kaW5nTG9hZGVyKSB7XG4gICAgICAgICAgICBtaXNzaW5nVHJhbnNsYXRpb25IYW5kbGVyVHJhbnNsYXRpb24gPSB0cmFuc2xhdGVCeUhhbmRsZXIodHJhbnNsYXRpb25JZCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gc2luY2Ugd2UgY291bGRuJ3QgdHJhbnNsYXRlIHRoZSBpbml0YWwgcmVxdWVzdGVkIHRyYW5zbGF0aW9uIGlkLFxuICAgICAgICAgIC8vIHdlIHRyeSBpdCBub3cgd2l0aCBvbmUgb3IgbW9yZSBmYWxsYmFjayBsYW5ndWFnZXMsIGlmIGZhbGxiYWNrIGxhbmd1YWdlKHMpIGlzXG4gICAgICAgICAgLy8gY29uZmlndXJlZC5cbiAgICAgICAgICBpZiAoJHVzZXMgJiYgJGZhbGxiYWNrTGFuZ3VhZ2UgJiYgJGZhbGxiYWNrTGFuZ3VhZ2UubGVuZ3RoKSB7XG4gICAgICAgICAgICBmYWxsYmFja0luZGV4ID0gMDtcbiAgICAgICAgICAgIHJlc3VsdCA9IGZhbGxiYWNrVHJhbnNsYXRpb25JbnN0YW50KHRyYW5zbGF0aW9uSWQsIGludGVycG9sYXRlUGFyYW1zLCBJbnRlcnBvbGF0b3IpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoJG1pc3NpbmdUcmFuc2xhdGlvbkhhbmRsZXJGYWN0b3J5ICYmICFwZW5kaW5nTG9hZGVyICYmIG1pc3NpbmdUcmFuc2xhdGlvbkhhbmRsZXJUcmFuc2xhdGlvbikge1xuICAgICAgICAgICAgLy8gbG9va3MgbGlrZSB0aGUgcmVxdWVzdGVkIHRyYW5zbGF0aW9uIGlkIGRvZXNuJ3QgZXhpc3RzLlxuICAgICAgICAgICAgLy8gTm93LCBpZiB0aGVyZSBpcyBhIHJlZ2lzdGVyZWQgaGFuZGxlciBmb3IgbWlzc2luZyB0cmFuc2xhdGlvbnMgYW5kIG5vXG4gICAgICAgICAgICAvLyBhc3luY0xvYWRlciBpcyBwZW5kaW5nLCB3ZSBleGVjdXRlIHRoZSBoYW5kbGVyXG4gICAgICAgICAgICByZXN1bHQgPSBtaXNzaW5nVHJhbnNsYXRpb25IYW5kbGVyVHJhbnNsYXRpb247XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IGFwcGx5Tm90Rm91bmRJbmRpY2F0b3JzKHRyYW5zbGF0aW9uSWQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9O1xuXG4gICAgICAvKipcbiAgICAgICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgICAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlI3ByZWZlcnJlZExhbmd1YWdlXG4gICAgICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlXG4gICAgICAgKlxuICAgICAgICogQGRlc2NyaXB0aW9uXG4gICAgICAgKiBSZXR1cm5zIHRoZSBsYW5ndWFnZSBrZXkgZm9yIHRoZSBwcmVmZXJyZWQgbGFuZ3VhZ2UuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtzdHJpbmd9IGxhbmdLZXkgbGFuZ3VhZ2UgU3RyaW5nIG9yIEFycmF5IHRvIGJlIHVzZWQgYXMgcHJlZmVycmVkTGFuZ3VhZ2UgKGNoYW5naW5nIGF0IHJ1bnRpbWUpXG4gICAgICAgKlxuICAgICAgICogQHJldHVybiB7c3RyaW5nfSBwcmVmZXJyZWQgbGFuZ3VhZ2Uga2V5XG4gICAgICAgKi9cbiAgICAgICR0cmFuc2xhdGUucHJlZmVycmVkTGFuZ3VhZ2UgPSBmdW5jdGlvbiAobGFuZ0tleSkge1xuICAgICAgICBpZihsYW5nS2V5KSB7XG4gICAgICAgICAgc2V0dXBQcmVmZXJyZWRMYW5ndWFnZShsYW5nS2V5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJHByZWZlcnJlZExhbmd1YWdlO1xuICAgICAgfTtcblxuICAgICAgLyoqXG4gICAgICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICAgICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZSNjbG9ha0NsYXNzTmFtZVxuICAgICAgICogQG1ldGhvZE9mIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZVxuICAgICAgICpcbiAgICAgICAqIEBkZXNjcmlwdGlvblxuICAgICAgICogUmV0dXJucyB0aGUgY29uZmlndXJlZCBjbGFzcyBuYW1lIGZvciBgdHJhbnNsYXRlLWNsb2FrYCBkaXJlY3RpdmUuXG4gICAgICAgKlxuICAgICAgICogQHJldHVybiB7c3RyaW5nfSBjbG9ha0NsYXNzTmFtZVxuICAgICAgICovXG4gICAgICAkdHJhbnNsYXRlLmNsb2FrQ2xhc3NOYW1lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gJGNsb2FrQ2xhc3NOYW1lO1xuICAgICAgfTtcblxuICAgICAgLyoqXG4gICAgICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICAgICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZSNmYWxsYmFja0xhbmd1YWdlXG4gICAgICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlXG4gICAgICAgKlxuICAgICAgICogQGRlc2NyaXB0aW9uXG4gICAgICAgKiBSZXR1cm5zIHRoZSBsYW5ndWFnZSBrZXkgZm9yIHRoZSBmYWxsYmFjayBsYW5ndWFnZXMgb3Igc2V0cyBhIG5ldyBmYWxsYmFjayBzdGFjay5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZz19IGxhbmdLZXkgbGFuZ3VhZ2UgU3RyaW5nIG9yIEFycmF5IG9mIGZhbGxiYWNrIGxhbmd1YWdlcyB0byBiZSB1c2VkICh0byBjaGFuZ2Ugc3RhY2sgYXQgcnVudGltZSlcbiAgICAgICAqXG4gICAgICAgKiBAcmV0dXJuIHtzdHJpbmd8fGFycmF5fSBmYWxsYmFjayBsYW5ndWFnZSBrZXlcbiAgICAgICAqL1xuICAgICAgJHRyYW5zbGF0ZS5mYWxsYmFja0xhbmd1YWdlID0gZnVuY3Rpb24gKGxhbmdLZXkpIHtcbiAgICAgICAgaWYgKGxhbmdLZXkgIT09IHVuZGVmaW5lZCAmJiBsYW5nS2V5ICE9PSBudWxsKSB7XG4gICAgICAgICAgZmFsbGJhY2tTdGFjayhsYW5nS2V5KTtcblxuICAgICAgICAgIC8vIGFzIHdlIG1pZ2h0IGhhdmUgYW4gYXN5bmMgbG9hZGVyIGluaXRpYXRlZCBhbmQgYSBuZXcgdHJhbnNsYXRpb24gbGFuZ3VhZ2UgbWlnaHQgaGF2ZSBiZWVuIGRlZmluZWRcbiAgICAgICAgICAvLyB3ZSBuZWVkIHRvIGFkZCB0aGUgcHJvbWlzZSB0byB0aGUgc3RhY2sgYWxzby4gU28gLSBpdGVyYXRlLlxuICAgICAgICAgIGlmICgkbG9hZGVyRmFjdG9yeSkge1xuICAgICAgICAgICAgaWYgKCRmYWxsYmFja0xhbmd1YWdlICYmICRmYWxsYmFja0xhbmd1YWdlLmxlbmd0aCkge1xuICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gJGZhbGxiYWNrTGFuZ3VhZ2UubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoIWxhbmdQcm9taXNlc1skZmFsbGJhY2tMYW5ndWFnZVtpXV0pIHtcbiAgICAgICAgICAgICAgICAgIGxhbmdQcm9taXNlc1skZmFsbGJhY2tMYW5ndWFnZVtpXV0gPSBsb2FkQXN5bmMoJGZhbGxiYWNrTGFuZ3VhZ2VbaV0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICAkdHJhbnNsYXRlLnVzZSgkdHJhbnNsYXRlLnVzZSgpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoJGZhbGxiYWNrV2FzU3RyaW5nKSB7XG4gICAgICAgICAgcmV0dXJuICRmYWxsYmFja0xhbmd1YWdlWzBdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiAkZmFsbGJhY2tMYW5ndWFnZTtcbiAgICAgICAgfVxuXG4gICAgICB9O1xuXG4gICAgICAvKipcbiAgICAgICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgICAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlI3VzZUZhbGxiYWNrTGFuZ3VhZ2VcbiAgICAgICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVcbiAgICAgICAqXG4gICAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgICAqIFNldHMgdGhlIGZpcnN0IGtleSBvZiB0aGUgZmFsbGJhY2sgbGFuZ3VhZ2Ugc3RhY2sgdG8gYmUgdXNlZCBmb3IgdHJhbnNsYXRpb24uXG4gICAgICAgKiBUaGVyZWZvcmUgYWxsIGxhbmd1YWdlcyBpbiB0aGUgZmFsbGJhY2sgYXJyYXkgQkVGT1JFIHRoaXMga2V5IHdpbGwgYmUgc2tpcHBlZCFcbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZz19IGxhbmdLZXkgQ29udGFpbnMgdGhlIGxhbmdLZXkgdGhlIGl0ZXJhdGlvbiBzaGFsbCBzdGFydCB3aXRoLiBTZXQgdG8gZmFsc2UgaWYgeW91IHdhbnQgdG9cbiAgICAgICAqIGdldCBiYWNrIHRvIHRoZSB3aG9sZSBzdGFja1xuICAgICAgICovXG4gICAgICAkdHJhbnNsYXRlLnVzZUZhbGxiYWNrTGFuZ3VhZ2UgPSBmdW5jdGlvbiAobGFuZ0tleSkge1xuICAgICAgICBpZiAobGFuZ0tleSAhPT0gdW5kZWZpbmVkICYmIGxhbmdLZXkgIT09IG51bGwpIHtcbiAgICAgICAgICBpZiAoIWxhbmdLZXkpIHtcbiAgICAgICAgICAgIHN0YXJ0RmFsbGJhY2tJdGVyYXRpb24gPSAwO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgbGFuZ0tleVBvc2l0aW9uID0gaW5kZXhPZigkZmFsbGJhY2tMYW5ndWFnZSwgbGFuZ0tleSk7XG4gICAgICAgICAgICBpZiAobGFuZ0tleVBvc2l0aW9uID4gLTEpIHtcbiAgICAgICAgICAgICAgc3RhcnRGYWxsYmFja0l0ZXJhdGlvbiA9IGxhbmdLZXlQb3NpdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgICB9O1xuXG4gICAgICAvKipcbiAgICAgICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgICAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlI3Byb3Bvc2VkTGFuZ3VhZ2VcbiAgICAgICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVcbiAgICAgICAqXG4gICAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgICAqIFJldHVybnMgdGhlIGxhbmd1YWdlIGtleSBvZiBsYW5ndWFnZSB0aGF0IGlzIGN1cnJlbnRseSBsb2FkZWQgYXN5bmNocm9ub3VzbHkuXG4gICAgICAgKlxuICAgICAgICogQHJldHVybiB7c3RyaW5nfSBsYW5ndWFnZSBrZXlcbiAgICAgICAqL1xuICAgICAgJHRyYW5zbGF0ZS5wcm9wb3NlZExhbmd1YWdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gJG5leHRMYW5nO1xuICAgICAgfTtcblxuICAgICAgLyoqXG4gICAgICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICAgICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZSNzdG9yYWdlXG4gICAgICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlXG4gICAgICAgKlxuICAgICAgICogQGRlc2NyaXB0aW9uXG4gICAgICAgKiBSZXR1cm5zIHJlZ2lzdGVyZWQgc3RvcmFnZS5cbiAgICAgICAqXG4gICAgICAgKiBAcmV0dXJuIHtvYmplY3R9IFN0b3JhZ2VcbiAgICAgICAqL1xuICAgICAgJHRyYW5zbGF0ZS5zdG9yYWdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gU3RvcmFnZTtcbiAgICAgIH07XG5cbiAgICAgIC8qKlxuICAgICAgICogQG5nZG9jIGZ1bmN0aW9uXG4gICAgICAgKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGUjdXNlXG4gICAgICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlXG4gICAgICAgKlxuICAgICAgICogQGRlc2NyaXB0aW9uXG4gICAgICAgKiBUZWxscyBhbmd1bGFyLXRyYW5zbGF0ZSB3aGljaCBsYW5ndWFnZSB0byB1c2UgYnkgZ2l2ZW4gbGFuZ3VhZ2Uga2V5LiBUaGlzIG1ldGhvZCBpc1xuICAgICAgICogdXNlZCB0byBjaGFuZ2UgbGFuZ3VhZ2UgYXQgcnVudGltZS4gSXQgYWxzbyB0YWtlcyBjYXJlIG9mIHN0b3JpbmcgdGhlIGxhbmd1YWdlXG4gICAgICAgKiBrZXkgaW4gYSBjb25maWd1cmVkIHN0b3JlIHRvIGxldCB5b3VyIGFwcCByZW1lbWJlciB0aGUgY2hvb3NlZCBsYW5ndWFnZS5cbiAgICAgICAqXG4gICAgICAgKiBXaGVuIHRyeWluZyB0byAndXNlJyBhIGxhbmd1YWdlIHdoaWNoIGlzbid0IGF2YWlsYWJsZSBpdCB0cmllcyB0byBsb2FkIGl0XG4gICAgICAgKiBhc3luY2hyb25vdXNseSB3aXRoIHJlZ2lzdGVyZWQgbG9hZGVycy5cbiAgICAgICAqXG4gICAgICAgKiBSZXR1cm5zIHByb21pc2Ugb2JqZWN0IHdpdGggbG9hZGVkIGxhbmd1YWdlIGZpbGUgZGF0YVxuICAgICAgICogQGV4YW1wbGVcbiAgICAgICAqICR0cmFuc2xhdGUudXNlKFwiZW5fVVNcIikudGhlbihmdW5jdGlvbihkYXRhKXtcbiAgICAgICAqICAgJHNjb3BlLnRleHQgPSAkdHJhbnNsYXRlKFwiSEVMTE9cIik7XG4gICAgICAgKiB9KTtcbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IExhbmd1YWdlIGtleVxuICAgICAgICogQHJldHVybiB7c3RyaW5nfSBMYW5ndWFnZSBrZXlcbiAgICAgICAqL1xuICAgICAgJHRyYW5zbGF0ZS51c2UgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmICgha2V5KSB7XG4gICAgICAgICAgcmV0dXJuICR1c2VzO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcblxuICAgICAgICAkcm9vdFNjb3BlLiRlbWl0KCckdHJhbnNsYXRlQ2hhbmdlU3RhcnQnLCB7bGFuZ3VhZ2U6IGtleX0pO1xuXG4gICAgICAgIC8vIFRyeSB0byBnZXQgdGhlIGFsaWFzZWQgbGFuZ3VhZ2Uga2V5XG4gICAgICAgIHZhciBhbGlhc2VkS2V5ID0gbmVnb3RpYXRlTG9jYWxlKGtleSk7XG4gICAgICAgIGlmIChhbGlhc2VkS2V5KSB7XG4gICAgICAgICAga2V5ID0gYWxpYXNlZEtleTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGlmIHRoZXJlIGlzbid0IGEgdHJhbnNsYXRpb24gdGFibGUgZm9yIHRoZSBsYW5ndWFnZSB3ZSd2ZSByZXF1ZXN0ZWQsXG4gICAgICAgIC8vIHdlIGxvYWQgaXQgYXN5bmNocm9ub3VzbHlcbiAgICAgICAgaWYgKCEkdHJhbnNsYXRpb25UYWJsZVtrZXldICYmICRsb2FkZXJGYWN0b3J5ICYmICFsYW5nUHJvbWlzZXNba2V5XSkge1xuICAgICAgICAgICRuZXh0TGFuZyA9IGtleTtcbiAgICAgICAgICBsYW5nUHJvbWlzZXNba2V5XSA9IGxvYWRBc3luYyhrZXkpLnRoZW4oZnVuY3Rpb24gKHRyYW5zbGF0aW9uKSB7XG4gICAgICAgICAgICB0cmFuc2xhdGlvbnModHJhbnNsYXRpb24ua2V5LCB0cmFuc2xhdGlvbi50YWJsZSk7XG4gICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHRyYW5zbGF0aW9uLmtleSk7XG5cbiAgICAgICAgICAgIHVzZUxhbmd1YWdlKHRyYW5zbGF0aW9uLmtleSk7XG4gICAgICAgICAgICBpZiAoJG5leHRMYW5nID09PSBrZXkpIHtcbiAgICAgICAgICAgICAgJG5leHRMYW5nID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRyYW5zbGF0aW9uO1xuICAgICAgICAgIH0sIGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIGlmICgkbmV4dExhbmcgPT09IGtleSkge1xuICAgICAgICAgICAgICAkbmV4dExhbmcgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkcm9vdFNjb3BlLiRlbWl0KCckdHJhbnNsYXRlQ2hhbmdlRXJyb3InLCB7bGFuZ3VhZ2U6IGtleX0pO1xuICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGtleSk7XG4gICAgICAgICAgICAkcm9vdFNjb3BlLiRlbWl0KCckdHJhbnNsYXRlQ2hhbmdlRW5kJywge2xhbmd1YWdlOiBrZXl9KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGtleSk7XG4gICAgICAgICAgdXNlTGFuZ3VhZ2Uoa2V5KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgICAgfTtcblxuICAgICAgLyoqXG4gICAgICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICAgICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZSNzdG9yYWdlS2V5XG4gICAgICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlXG4gICAgICAgKlxuICAgICAgICogQGRlc2NyaXB0aW9uXG4gICAgICAgKiBSZXR1cm5zIHRoZSBrZXkgZm9yIHRoZSBzdG9yYWdlLlxuICAgICAgICpcbiAgICAgICAqIEByZXR1cm4ge3N0cmluZ30gc3RvcmFnZSBrZXlcbiAgICAgICAqL1xuICAgICAgJHRyYW5zbGF0ZS5zdG9yYWdlS2V5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gc3RvcmFnZUtleSgpO1xuICAgICAgfTtcblxuICAgICAgLyoqXG4gICAgICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICAgICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZSNpc1Bvc3RDb21waWxpbmdFbmFibGVkXG4gICAgICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlXG4gICAgICAgKlxuICAgICAgICogQGRlc2NyaXB0aW9uXG4gICAgICAgKiBSZXR1cm5zIHdoZXRoZXIgcG9zdCBjb21waWxpbmcgaXMgZW5hYmxlZCBvciBub3RcbiAgICAgICAqXG4gICAgICAgKiBAcmV0dXJuIHtib29sfSBzdG9yYWdlIGtleVxuICAgICAgICovXG4gICAgICAkdHJhbnNsYXRlLmlzUG9zdENvbXBpbGluZ0VuYWJsZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAkcG9zdENvbXBpbGluZ0VuYWJsZWQ7XG4gICAgICB9O1xuXG4gICAgICAvKipcbiAgICAgICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgICAgICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlI3JlZnJlc2hcbiAgICAgICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVcbiAgICAgICAqXG4gICAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgICAqIFJlZnJlc2hlcyBhIHRyYW5zbGF0aW9uIHRhYmxlIHBvaW50ZWQgYnkgdGhlIGdpdmVuIGxhbmdLZXkuIElmIGxhbmdLZXkgaXMgbm90IHNwZWNpZmllZCxcbiAgICAgICAqIHRoZSBtb2R1bGUgd2lsbCBkcm9wIGFsbCBleGlzdGVudCB0cmFuc2xhdGlvbiB0YWJsZXMgYW5kIGxvYWQgbmV3IHZlcnNpb24gb2YgdGhvc2Ugd2hpY2hcbiAgICAgICAqIGFyZSBjdXJyZW50bHkgaW4gdXNlLlxuICAgICAgICpcbiAgICAgICAqIFJlZnJlc2ggbWVhbnMgdGhhdCB0aGUgbW9kdWxlIHdpbGwgZHJvcCB0YXJnZXQgdHJhbnNsYXRpb24gdGFibGUgYW5kIHRyeSB0byBsb2FkIGl0IGFnYWluLlxuICAgICAgICpcbiAgICAgICAqIEluIGNhc2UgdGhlcmUgYXJlIG5vIGxvYWRlcnMgcmVnaXN0ZXJlZCB0aGUgcmVmcmVzaCgpIG1ldGhvZCB3aWxsIHRocm93IGFuIEVycm9yLlxuICAgICAgICpcbiAgICAgICAqIElmIHRoZSBtb2R1bGUgaXMgYWJsZSB0byByZWZyZXNoIHRyYW5zbGF0aW9uIHRhYmxlcyByZWZyZXNoKCkgbWV0aG9kIHdpbGwgYnJvYWRjYXN0XG4gICAgICAgKiAkdHJhbnNsYXRlUmVmcmVzaFN0YXJ0IGFuZCAkdHJhbnNsYXRlUmVmcmVzaEVuZCBldmVudHMuXG4gICAgICAgKlxuICAgICAgICogQGV4YW1wbGVcbiAgICAgICAqIC8vIHRoaXMgd2lsbCBkcm9wIGFsbCBjdXJyZW50bHkgZXhpc3RlbnQgdHJhbnNsYXRpb24gdGFibGVzIGFuZCByZWxvYWQgdGhvc2Ugd2hpY2ggYXJlXG4gICAgICAgKiAvLyBjdXJyZW50bHkgaW4gdXNlXG4gICAgICAgKiAkdHJhbnNsYXRlLnJlZnJlc2goKTtcbiAgICAgICAqIC8vIHRoaXMgd2lsbCByZWZyZXNoIGEgdHJhbnNsYXRpb24gdGFibGUgZm9yIHRoZSBlbl9VUyBsYW5ndWFnZVxuICAgICAgICogJHRyYW5zbGF0ZS5yZWZyZXNoKCdlbl9VUycpO1xuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsYW5nS2V5IEEgbGFuZ3VhZ2Uga2V5IG9mIHRoZSB0YWJsZSwgd2hpY2ggaGFzIHRvIGJlIHJlZnJlc2hlZFxuICAgICAgICpcbiAgICAgICAqIEByZXR1cm4ge3Byb21pc2V9IFByb21pc2UsIHdoaWNoIHdpbGwgYmUgcmVzb2x2ZWQgaW4gY2FzZSBhIHRyYW5zbGF0aW9uIHRhYmxlcyByZWZyZXNoaW5nXG4gICAgICAgKiBwcm9jZXNzIGlzIGZpbmlzaGVkIHN1Y2Nlc3NmdWxseSwgYW5kIHJlamVjdCBpZiBub3QuXG4gICAgICAgKi9cbiAgICAgICR0cmFuc2xhdGUucmVmcmVzaCA9IGZ1bmN0aW9uIChsYW5nS2V5KSB7XG4gICAgICAgIGlmICghJGxvYWRlckZhY3RvcnkpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvdWxkblxcJ3QgcmVmcmVzaCB0cmFuc2xhdGlvbiB0YWJsZSwgbm8gbG9hZGVyIHJlZ2lzdGVyZWQhJyk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICAgIGZ1bmN0aW9uIHJlc29sdmUoKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSgpO1xuICAgICAgICAgICRyb290U2NvcGUuJGVtaXQoJyR0cmFuc2xhdGVSZWZyZXNoRW5kJywge2xhbmd1YWdlOiBsYW5nS2V5fSk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiByZWplY3QoKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVqZWN0KCk7XG4gICAgICAgICAgJHJvb3RTY29wZS4kZW1pdCgnJHRyYW5zbGF0ZVJlZnJlc2hFbmQnLCB7bGFuZ3VhZ2U6IGxhbmdLZXl9KTtcbiAgICAgICAgfVxuXG4gICAgICAgICRyb290U2NvcGUuJGVtaXQoJyR0cmFuc2xhdGVSZWZyZXNoU3RhcnQnLCB7bGFuZ3VhZ2U6IGxhbmdLZXl9KTtcblxuICAgICAgICBpZiAoIWxhbmdLZXkpIHtcbiAgICAgICAgICAvLyBpZiB0aGVyZSdzIG5vIGxhbmd1YWdlIGtleSBzcGVjaWZpZWQgd2UgcmVmcmVzaCBBTEwgVEhFIFRISU5HUyFcbiAgICAgICAgICB2YXIgdGFibGVzID0gW10sIGxvYWRpbmdLZXlzID0ge307XG5cbiAgICAgICAgICAvLyByZWxvYWQgcmVnaXN0ZXJlZCBmYWxsYmFjayBsYW5ndWFnZXNcbiAgICAgICAgICBpZiAoJGZhbGxiYWNrTGFuZ3VhZ2UgJiYgJGZhbGxiYWNrTGFuZ3VhZ2UubGVuZ3RoKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gJGZhbGxiYWNrTGFuZ3VhZ2UubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgICAgdGFibGVzLnB1c2gobG9hZEFzeW5jKCRmYWxsYmFja0xhbmd1YWdlW2ldKSk7XG4gICAgICAgICAgICAgIGxvYWRpbmdLZXlzWyRmYWxsYmFja0xhbmd1YWdlW2ldXSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gcmVsb2FkIGN1cnJlbnRseSB1c2VkIGxhbmd1YWdlXG4gICAgICAgICAgaWYgKCR1c2VzICYmICFsb2FkaW5nS2V5c1skdXNlc10pIHtcbiAgICAgICAgICAgIHRhYmxlcy5wdXNoKGxvYWRBc3luYygkdXNlcykpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgICRxLmFsbCh0YWJsZXMpLnRoZW4oZnVuY3Rpb24gKHRhYmxlRGF0YSkge1xuICAgICAgICAgICAgYW5ndWxhci5mb3JFYWNoKHRhYmxlRGF0YSwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgaWYgKCR0cmFuc2xhdGlvblRhYmxlW2RhdGEua2V5XSkge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSAkdHJhbnNsYXRpb25UYWJsZVtkYXRhLmtleV07XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgdHJhbnNsYXRpb25zKGRhdGEua2V5LCBkYXRhLnRhYmxlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKCR1c2VzKSB7XG4gICAgICAgICAgICAgIHVzZUxhbmd1YWdlKCR1c2VzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICB9IGVsc2UgaWYgKCR0cmFuc2xhdGlvblRhYmxlW2xhbmdLZXldKSB7XG5cbiAgICAgICAgICBsb2FkQXN5bmMobGFuZ0tleSkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgdHJhbnNsYXRpb25zKGRhdGEua2V5LCBkYXRhLnRhYmxlKTtcbiAgICAgICAgICAgIGlmIChsYW5nS2V5ID09PSAkdXNlcykge1xuICAgICAgICAgICAgICB1c2VMYW5ndWFnZSgkdXNlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgfSwgcmVqZWN0KTtcblxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlamVjdCgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgICAgfTtcblxuICAgICAgLyoqXG4gICAgICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICAgICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZSNpbnN0YW50XG4gICAgICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlXG4gICAgICAgKlxuICAgICAgICogQGRlc2NyaXB0aW9uXG4gICAgICAgKiBSZXR1cm5zIGEgdHJhbnNsYXRpb24gaW5zdGFudGx5IGZyb20gdGhlIGludGVybmFsIHN0YXRlIG9mIGxvYWRlZCB0cmFuc2xhdGlvbi4gQWxsIHJ1bGVzXG4gICAgICAgKiByZWdhcmRpbmcgdGhlIGN1cnJlbnQgbGFuZ3VhZ2UsIHRoZSBwcmVmZXJyZWQgbGFuZ3VhZ2Ugb2YgZXZlbiBmYWxsYmFjayBsYW5ndWFnZXMgd2lsbCBiZVxuICAgICAgICogdXNlZCBleGNlcHQgYW55IHByb21pc2UgaGFuZGxpbmcuIElmIGEgbGFuZ3VhZ2Ugd2FzIG5vdCBmb3VuZCwgYW4gYXN5bmNocm9ub3VzIGxvYWRpbmdcbiAgICAgICAqIHdpbGwgYmUgaW52b2tlZCBpbiB0aGUgYmFja2dyb3VuZC5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ3xhcnJheX0gdHJhbnNsYXRpb25JZCBBIHRva2VuIHdoaWNoIHJlcHJlc2VudHMgYSB0cmFuc2xhdGlvbiBpZFxuICAgICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVGhpcyBjYW4gYmUgb3B0aW9uYWxseSBhbiBhcnJheSBvZiB0cmFuc2xhdGlvbiBpZHMgd2hpY2hcbiAgICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdHMgdGhhdCB0aGUgZnVuY3Rpb24ncyBwcm9taXNlIHJldHVybnMgYW4gb2JqZWN0IHdoZXJlXG4gICAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlYWNoIGtleSBpcyB0aGUgdHJhbnNsYXRpb24gaWQgYW5kIHRoZSB2YWx1ZSB0aGUgdHJhbnNsYXRpb24uXG4gICAgICAgKiBAcGFyYW0ge29iamVjdH0gaW50ZXJwb2xhdGVQYXJhbXMgUGFyYW1zXG4gICAgICAgKiBAcGFyYW0ge3N0cmluZ30gaW50ZXJwb2xhdGlvbklkIFRoZSBpZCBvZiB0aGUgaW50ZXJwb2xhdGlvbiB0byB1c2VcbiAgICAgICAqXG4gICAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IHRyYW5zbGF0aW9uXG4gICAgICAgKi9cbiAgICAgICR0cmFuc2xhdGUuaW5zdGFudCA9IGZ1bmN0aW9uICh0cmFuc2xhdGlvbklkLCBpbnRlcnBvbGF0ZVBhcmFtcywgaW50ZXJwb2xhdGlvbklkKSB7XG5cbiAgICAgICAgLy8gRGV0ZWN0IHVuZGVmaW5lZCBhbmQgbnVsbCB2YWx1ZXMgdG8gc2hvcnRlbiB0aGUgZXhlY3V0aW9uIGFuZCBwcmV2ZW50IGV4Y2VwdGlvbnNcbiAgICAgICAgaWYgKHRyYW5zbGF0aW9uSWQgPT09IG51bGwgfHwgYW5ndWxhci5pc1VuZGVmaW5lZCh0cmFuc2xhdGlvbklkKSkge1xuICAgICAgICAgIHJldHVybiB0cmFuc2xhdGlvbklkO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gRHVjayBkZXRlY3Rpb246IElmIHRoZSBmaXJzdCBhcmd1bWVudCBpcyBhbiBhcnJheSwgYSBidW5jaCBvZiB0cmFuc2xhdGlvbnMgd2FzIHJlcXVlc3RlZC5cbiAgICAgICAgLy8gVGhlIHJlc3VsdCBpcyBhbiBvYmplY3QuXG4gICAgICAgIGlmIChhbmd1bGFyLmlzQXJyYXkodHJhbnNsYXRpb25JZCkpIHtcbiAgICAgICAgICB2YXIgcmVzdWx0cyA9IHt9O1xuICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBjID0gdHJhbnNsYXRpb25JZC5sZW5ndGg7IGkgPCBjOyBpKyspIHtcbiAgICAgICAgICAgIHJlc3VsdHNbdHJhbnNsYXRpb25JZFtpXV0gPSAkdHJhbnNsYXRlLmluc3RhbnQodHJhbnNsYXRpb25JZFtpXSwgaW50ZXJwb2xhdGVQYXJhbXMsIGludGVycG9sYXRpb25JZCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gV2UgZGlzY2FyZGVkIHVuYWNjZXB0YWJsZSB2YWx1ZXMuIFNvIHdlIGp1c3QgbmVlZCB0byB2ZXJpZnkgaWYgdHJhbnNsYXRpb25JZCBpcyBlbXB0eSBTdHJpbmdcbiAgICAgICAgaWYgKGFuZ3VsYXIuaXNTdHJpbmcodHJhbnNsYXRpb25JZCkgJiYgdHJhbnNsYXRpb25JZC5sZW5ndGggPCAxKSB7XG4gICAgICAgICAgcmV0dXJuIHRyYW5zbGF0aW9uSWQ7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB0cmltIG9mZiBhbnkgd2hpdGVzcGFjZVxuICAgICAgICBpZiAodHJhbnNsYXRpb25JZCkge1xuICAgICAgICAgIHRyYW5zbGF0aW9uSWQgPSB0cmltLmFwcGx5KHRyYW5zbGF0aW9uSWQpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHJlc3VsdCwgcG9zc2libGVMYW5nS2V5cyA9IFtdO1xuICAgICAgICBpZiAoJHByZWZlcnJlZExhbmd1YWdlKSB7XG4gICAgICAgICAgcG9zc2libGVMYW5nS2V5cy5wdXNoKCRwcmVmZXJyZWRMYW5ndWFnZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCR1c2VzKSB7XG4gICAgICAgICAgcG9zc2libGVMYW5nS2V5cy5wdXNoKCR1c2VzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoJGZhbGxiYWNrTGFuZ3VhZ2UgJiYgJGZhbGxiYWNrTGFuZ3VhZ2UubGVuZ3RoKSB7XG4gICAgICAgICAgcG9zc2libGVMYW5nS2V5cyA9IHBvc3NpYmxlTGFuZ0tleXMuY29uY2F0KCRmYWxsYmFja0xhbmd1YWdlKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBqID0gMCwgZCA9IHBvc3NpYmxlTGFuZ0tleXMubGVuZ3RoOyBqIDwgZDsgaisrKSB7XG4gICAgICAgICAgdmFyIHBvc3NpYmxlTGFuZ0tleSA9IHBvc3NpYmxlTGFuZ0tleXNbal07XG4gICAgICAgICAgaWYgKCR0cmFuc2xhdGlvblRhYmxlW3Bvc3NpYmxlTGFuZ0tleV0pIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgJHRyYW5zbGF0aW9uVGFibGVbcG9zc2libGVMYW5nS2V5XVt0cmFuc2xhdGlvbklkXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgcmVzdWx0ID0gZGV0ZXJtaW5lVHJhbnNsYXRpb25JbnN0YW50KHRyYW5zbGF0aW9uSWQsIGludGVycG9sYXRlUGFyYW1zLCBpbnRlcnBvbGF0aW9uSWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAodHlwZW9mIHJlc3VsdCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghcmVzdWx0ICYmIHJlc3VsdCAhPT0gJycpIHtcbiAgICAgICAgICAvLyBSZXR1cm4gdHJhbnNsYXRpb24gb2YgZGVmYXVsdCBpbnRlcnBvbGF0b3IgaWYgbm90IGZvdW5kIGFueXRoaW5nLlxuICAgICAgICAgIHJlc3VsdCA9IGRlZmF1bHRJbnRlcnBvbGF0b3IuaW50ZXJwb2xhdGUodHJhbnNsYXRpb25JZCwgaW50ZXJwb2xhdGVQYXJhbXMpO1xuICAgICAgICAgIGlmICgkbWlzc2luZ1RyYW5zbGF0aW9uSGFuZGxlckZhY3RvcnkgJiYgIXBlbmRpbmdMb2FkZXIpIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IHRyYW5zbGF0ZUJ5SGFuZGxlcih0cmFuc2xhdGlvbklkKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfTtcblxuICAgICAgLyoqXG4gICAgICAgKiBAbmdkb2MgZnVuY3Rpb25cbiAgICAgICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZSN2ZXJzaW9uSW5mb1xuICAgICAgICogQG1ldGhvZE9mIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZVxuICAgICAgICpcbiAgICAgICAqIEBkZXNjcmlwdGlvblxuICAgICAgICogUmV0dXJucyB0aGUgY3VycmVudCB2ZXJzaW9uIGluZm9ybWF0aW9uIGZvciB0aGUgYW5ndWxhci10cmFuc2xhdGUgbGlicmFyeVxuICAgICAgICpcbiAgICAgICAqIEByZXR1cm4ge3N0cmluZ30gYW5ndWxhci10cmFuc2xhdGUgdmVyc2lvblxuICAgICAgICovXG4gICAgICAkdHJhbnNsYXRlLnZlcnNpb25JbmZvID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdmVyc2lvbjtcbiAgICAgIH07XG5cbiAgICAgIC8qKlxuICAgICAgICogQG5nZG9jIGZ1bmN0aW9uXG4gICAgICAgKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGUjbG9hZGVyQ2FjaGVcbiAgICAgICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVcbiAgICAgICAqXG4gICAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgICAqIFJldHVybnMgdGhlIGRlZmluZWQgbG9hZGVyQ2FjaGUuXG4gICAgICAgKlxuICAgICAgICogQHJldHVybiB7Ym9vbGVhbnxzdHJpbmd8b2JqZWN0fSBjdXJyZW50IHZhbHVlIG9mIGxvYWRlckNhY2hlXG4gICAgICAgKi9cbiAgICAgICR0cmFuc2xhdGUubG9hZGVyQ2FjaGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBsb2FkZXJDYWNoZTtcbiAgICAgIH07XG5cbiAgICAgIGlmICgkbG9hZGVyRmFjdG9yeSkge1xuXG4gICAgICAgIC8vIElmIGF0IGxlYXN0IG9uZSBhc3luYyBsb2FkZXIgaXMgZGVmaW5lZCBhbmQgdGhlcmUgYXJlIG5vXG4gICAgICAgIC8vIChkZWZhdWx0KSB0cmFuc2xhdGlvbnMgYXZhaWxhYmxlIHdlIHNob3VsZCB0cnkgdG8gbG9hZCB0aGVtLlxuICAgICAgICBpZiAoYW5ndWxhci5lcXVhbHMoJHRyYW5zbGF0aW9uVGFibGUsIHt9KSkge1xuICAgICAgICAgICR0cmFuc2xhdGUudXNlKCR0cmFuc2xhdGUudXNlKCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQWxzbywgaWYgdGhlcmUgYXJlIGFueSBmYWxsYmFjayBsYW5ndWFnZSByZWdpc3RlcmVkLCB3ZSBzdGFydFxuICAgICAgICAvLyBsb2FkaW5nIHRoZW0gYXN5bmNocm9ub3VzbHkgYXMgc29vbiBhcyB3ZSBjYW4uXG4gICAgICAgIGlmICgkZmFsbGJhY2tMYW5ndWFnZSAmJiAkZmFsbGJhY2tMYW5ndWFnZS5sZW5ndGgpIHtcbiAgICAgICAgICB2YXIgcHJvY2Vzc0FzeW5jUmVzdWx0ID0gZnVuY3Rpb24gKHRyYW5zbGF0aW9uKSB7XG4gICAgICAgICAgICB0cmFuc2xhdGlvbnModHJhbnNsYXRpb24ua2V5LCB0cmFuc2xhdGlvbi50YWJsZSk7XG4gICAgICAgICAgICAkcm9vdFNjb3BlLiRlbWl0KCckdHJhbnNsYXRlQ2hhbmdlRW5kJywgeyBsYW5ndWFnZTogdHJhbnNsYXRpb24ua2V5IH0pO1xuICAgICAgICAgICAgcmV0dXJuIHRyYW5zbGF0aW9uO1xuICAgICAgICAgIH07XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9ICRmYWxsYmFja0xhbmd1YWdlLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICBsYW5nUHJvbWlzZXNbJGZhbGxiYWNrTGFuZ3VhZ2VbaV1dID0gbG9hZEFzeW5jKCRmYWxsYmFja0xhbmd1YWdlW2ldKS50aGVuKHByb2Nlc3NBc3luY1Jlc3VsdCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAkdHJhbnNsYXRlO1xuICAgIH1cbiAgXTtcbn1dKTtcblxuLyoqXG4gKiBAbmdkb2Mgb2JqZWN0XG4gKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVEZWZhdWx0SW50ZXJwb2xhdGlvblxuICogQHJlcXVpcmVzICRpbnRlcnBvbGF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogVXNlcyBhbmd1bGFyJ3MgYCRpbnRlcnBvbGF0ZWAgc2VydmljZXMgdG8gaW50ZXJwb2xhdGUgc3RyaW5ncyBhZ2FpbnN0IHNvbWUgdmFsdWVzLlxuICpcbiAqIEByZXR1cm4ge29iamVjdH0gJHRyYW5zbGF0ZUludGVycG9sYXRvciBJbnRlcnBvbGF0b3Igc2VydmljZVxuICovXG5hbmd1bGFyLm1vZHVsZSgncGFzY2FscHJlY2h0LnRyYW5zbGF0ZScpLmZhY3RvcnkoJyR0cmFuc2xhdGVEZWZhdWx0SW50ZXJwb2xhdGlvbicsIFsnJGludGVycG9sYXRlJywgZnVuY3Rpb24gKCRpbnRlcnBvbGF0ZSkge1xuXG4gIHZhciAkdHJhbnNsYXRlSW50ZXJwb2xhdG9yID0ge30sXG4gICAgICAkbG9jYWxlLFxuICAgICAgJGlkZW50aWZpZXIgPSAnZGVmYXVsdCcsXG4gICAgICAkc2FuaXRpemVWYWx1ZVN0cmF0ZWd5ID0gbnVsbCxcbiAgICAgIC8vIG1hcCBvZiBhbGwgc2FuaXRpemUgc3RyYXRlZ2llc1xuICAgICAgc2FuaXRpemVWYWx1ZVN0cmF0ZWdpZXMgPSB7XG4gICAgICAgIGVzY2FwZWQ6IGZ1bmN0aW9uIChwYXJhbXMpIHtcbiAgICAgICAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgICAgICAgZm9yICh2YXIga2V5IGluIHBhcmFtcykge1xuICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChwYXJhbXMsIGtleSkpIHtcbiAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSBhbmd1bGFyLmVsZW1lbnQoJzxkaXY+PC9kaXY+JykudGV4dChwYXJhbXNba2V5XSkuaHRtbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gIHZhciBzYW5pdGl6ZVBhcmFtcyA9IGZ1bmN0aW9uIChwYXJhbXMpIHtcbiAgICB2YXIgcmVzdWx0O1xuICAgIGlmIChhbmd1bGFyLmlzRnVuY3Rpb24oc2FuaXRpemVWYWx1ZVN0cmF0ZWdpZXNbJHNhbml0aXplVmFsdWVTdHJhdGVneV0pKSB7XG4gICAgICByZXN1bHQgPSBzYW5pdGl6ZVZhbHVlU3RyYXRlZ2llc1skc2FuaXRpemVWYWx1ZVN0cmF0ZWd5XShwYXJhbXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHQgPSBwYXJhbXM7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgLyoqXG4gICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVEZWZhdWx0SW50ZXJwb2xhdGlvbiNzZXRMb2NhbGVcbiAgICogQG1ldGhvZE9mIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZURlZmF1bHRJbnRlcnBvbGF0aW9uXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBTZXRzIGN1cnJlbnQgbG9jYWxlICh0aGlzIGlzIGN1cnJlbnRseSBub3QgdXNlIGluIHRoaXMgaW50ZXJwb2xhdGlvbikuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBsb2NhbGUgTGFuZ3VhZ2Uga2V5IG9yIGxvY2FsZS5cbiAgICovXG4gICR0cmFuc2xhdGVJbnRlcnBvbGF0b3Iuc2V0TG9jYWxlID0gZnVuY3Rpb24gKGxvY2FsZSkge1xuICAgICRsb2NhbGUgPSBsb2NhbGU7XG4gIH07XG5cbiAgLyoqXG4gICAqIEBuZ2RvYyBmdW5jdGlvblxuICAgKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVEZWZhdWx0SW50ZXJwb2xhdGlvbiNnZXRJbnRlcnBvbGF0aW9uSWRlbnRpZmllclxuICAgKiBAbWV0aG9kT2YgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlRGVmYXVsdEludGVycG9sYXRpb25cbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIFJldHVybnMgYW4gaWRlbnRpZmllciBmb3IgdGhpcyBpbnRlcnBvbGF0aW9uIHNlcnZpY2UuXG4gICAqXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9ICRpZGVudGlmaWVyXG4gICAqL1xuICAkdHJhbnNsYXRlSW50ZXJwb2xhdG9yLmdldEludGVycG9sYXRpb25JZGVudGlmaWVyID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAkaWRlbnRpZmllcjtcbiAgfTtcblxuICAkdHJhbnNsYXRlSW50ZXJwb2xhdG9yLnVzZVNhbml0aXplVmFsdWVTdHJhdGVneSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICRzYW5pdGl6ZVZhbHVlU3RyYXRlZ3kgPSB2YWx1ZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICAvKipcbiAgICogQG5nZG9jIGZ1bmN0aW9uXG4gICAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuJHRyYW5zbGF0ZURlZmF1bHRJbnRlcnBvbGF0aW9uI2ludGVycG9sYXRlXG4gICAqIEBtZXRob2RPZiBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVEZWZhdWx0SW50ZXJwb2xhdGlvblxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogSW50ZXJwb2xhdGVzIGdpdmVuIHN0cmluZyBhZ2FpbnMgZ2l2ZW4gaW50ZXJwb2xhdGUgcGFyYW1zIHVzaW5nIGFuZ3VsYXJzXG4gICAqIGAkaW50ZXJwb2xhdGVgIHNlcnZpY2UuXG4gICAqXG4gICAqIEByZXR1cm5zIHtzdHJpbmd9IGludGVycG9sYXRlZCBzdHJpbmcuXG4gICAqL1xuICAkdHJhbnNsYXRlSW50ZXJwb2xhdG9yLmludGVycG9sYXRlID0gZnVuY3Rpb24gKHN0cmluZywgaW50ZXJwb2xhdGVQYXJhbXMpIHtcbiAgICBpZiAoJHNhbml0aXplVmFsdWVTdHJhdGVneSkge1xuICAgICAgaW50ZXJwb2xhdGVQYXJhbXMgPSBzYW5pdGl6ZVBhcmFtcyhpbnRlcnBvbGF0ZVBhcmFtcyk7XG4gICAgfVxuICAgIHJldHVybiAkaW50ZXJwb2xhdGUoc3RyaW5nKShpbnRlcnBvbGF0ZVBhcmFtcyB8fCB7fSk7XG4gIH07XG5cbiAgcmV0dXJuICR0cmFuc2xhdGVJbnRlcnBvbGF0b3I7XG59XSk7XG5cbmFuZ3VsYXIubW9kdWxlKCdwYXNjYWxwcmVjaHQudHJhbnNsYXRlJykuY29uc3RhbnQoJyRTVE9SQUdFX0tFWScsICdOR19UUkFOU0xBVEVfTEFOR19LRVknKTtcblxuYW5ndWxhci5tb2R1bGUoJ3Bhc2NhbHByZWNodC50cmFuc2xhdGUnKVxuLyoqXG4gKiBAbmdkb2MgZGlyZWN0aXZlXG4gKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLmRpcmVjdGl2ZTp0cmFuc2xhdGVcbiAqIEByZXF1aXJlcyAkY29tcGlsZVxuICogQHJlcXVpcmVzICRmaWx0ZXJcbiAqIEByZXF1aXJlcyAkaW50ZXJwb2xhdGVcbiAqIEByZXN0cmljdCBBXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBUcmFuc2xhdGVzIGdpdmVuIHRyYW5zbGF0aW9uIGlkIGVpdGhlciB0aHJvdWdoIGF0dHJpYnV0ZSBvciBET00gY29udGVudC5cbiAqIEludGVybmFsbHkgaXQgdXNlcyBgdHJhbnNsYXRlYCBmaWx0ZXIgdG8gdHJhbnNsYXRlIHRyYW5zbGF0aW9uIGlkLiBJdCBwb3NzaWJsZSB0b1xuICogcGFzcyBhbiBvcHRpb25hbCBgdHJhbnNsYXRlLXZhbHVlc2Agb2JqZWN0IGxpdGVyYWwgYXMgc3RyaW5nIGludG8gdHJhbnNsYXRpb24gaWQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmc9fSB0cmFuc2xhdGUgVHJhbnNsYXRpb24gaWQgd2hpY2ggY291bGQgYmUgZWl0aGVyIHN0cmluZyBvciBpbnRlcnBvbGF0ZWQgc3RyaW5nLlxuICogQHBhcmFtIHtzdHJpbmc9fSB0cmFuc2xhdGUtdmFsdWVzIFZhbHVlcyB0byBwYXNzIGludG8gdHJhbnNsYXRpb24gaWQuIENhbiBiZSBwYXNzZWQgYXMgb2JqZWN0IGxpdGVyYWwgc3RyaW5nIG9yIGludGVycG9sYXRlZCBvYmplY3QuXG4gKiBAcGFyYW0ge3N0cmluZz19IHRyYW5zbGF0ZS1hdHRyLUFUVFIgdHJhbnNsYXRlIFRyYW5zbGF0aW9uIGlkIGFuZCBwdXQgaXQgaW50byBBVFRSIGF0dHJpYnV0ZS5cbiAqIEBwYXJhbSB7c3RyaW5nPX0gdHJhbnNsYXRlLWRlZmF1bHQgd2lsbCBiZSB1c2VkIHVubGVzcyB0cmFuc2xhdGlvbiB3YXMgc3VjY2Vzc2Z1bFxuICogQHBhcmFtIHtib29sZWFuPX0gdHJhbnNsYXRlLWNvbXBpbGUgKGRlZmF1bHQgdHJ1ZSBpZiBwcmVzZW50KSBkZWZpbmVzIGxvY2FsbHkgYWN0aXZhdGlvbiBvZiB7QGxpbmsgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlI3VzZVBvc3RDb21waWxpbmd9XG4gKlxuICogQGV4YW1wbGVcbiAgIDxleGFtcGxlIG1vZHVsZT1cIm5nVmlld1wiPlxuICAgIDxmaWxlIG5hbWU9XCJpbmRleC5odG1sXCI+XG4gICAgICA8ZGl2IG5nLWNvbnRyb2xsZXI9XCJUcmFuc2xhdGVDdHJsXCI+XG5cbiAgICAgICAgPHByZSB0cmFuc2xhdGU9XCJUUkFOU0xBVElPTl9JRFwiPjwvcHJlPlxuICAgICAgICA8cHJlIHRyYW5zbGF0ZT5UUkFOU0xBVElPTl9JRDwvcHJlPlxuICAgICAgICA8cHJlIHRyYW5zbGF0ZSB0cmFuc2xhdGUtYXR0ci10aXRsZT1cIlRSQU5TTEFUSU9OX0lEXCI+PC9wcmU+XG4gICAgICAgIDxwcmUgdHJhbnNsYXRlPVwie3t0cmFuc2xhdGlvbklkfX1cIj48L3ByZT5cbiAgICAgICAgPHByZSB0cmFuc2xhdGU+e3t0cmFuc2xhdGlvbklkfX08L3ByZT5cbiAgICAgICAgPHByZSB0cmFuc2xhdGU9XCJXSVRIX1ZBTFVFU1wiIHRyYW5zbGF0ZS12YWx1ZXM9XCJ7dmFsdWU6IDV9XCI+PC9wcmU+XG4gICAgICAgIDxwcmUgdHJhbnNsYXRlIHRyYW5zbGF0ZS12YWx1ZXM9XCJ7dmFsdWU6IDV9XCI+V0lUSF9WQUxVRVM8L3ByZT5cbiAgICAgICAgPHByZSB0cmFuc2xhdGU9XCJXSVRIX1ZBTFVFU1wiIHRyYW5zbGF0ZS12YWx1ZXM9XCJ7e3ZhbHVlc319XCI+PC9wcmU+XG4gICAgICAgIDxwcmUgdHJhbnNsYXRlIHRyYW5zbGF0ZS12YWx1ZXM9XCJ7e3ZhbHVlc319XCI+V0lUSF9WQUxVRVM8L3ByZT5cbiAgICAgICAgPHByZSB0cmFuc2xhdGUgdHJhbnNsYXRlLWF0dHItdGl0bGU9XCJXSVRIX1ZBTFVFU1wiIHRyYW5zbGF0ZS12YWx1ZXM9XCJ7e3ZhbHVlc319XCI+PC9wcmU+XG5cbiAgICAgIDwvZGl2PlxuICAgIDwvZmlsZT5cbiAgICA8ZmlsZSBuYW1lPVwic2NyaXB0LmpzXCI+XG4gICAgICBhbmd1bGFyLm1vZHVsZSgnbmdWaWV3JywgWydwYXNjYWxwcmVjaHQudHJhbnNsYXRlJ10pXG5cbiAgICAgIC5jb25maWcoZnVuY3Rpb24gKCR0cmFuc2xhdGVQcm92aWRlcikge1xuXG4gICAgICAgICR0cmFuc2xhdGVQcm92aWRlci50cmFuc2xhdGlvbnMoJ2VuJyx7XG4gICAgICAgICAgJ1RSQU5TTEFUSU9OX0lEJzogJ0hlbGxvIHRoZXJlIScsXG4gICAgICAgICAgJ1dJVEhfVkFMVUVTJzogJ1RoZSBmb2xsb3dpbmcgdmFsdWUgaXMgZHluYW1pYzoge3t2YWx1ZX19J1xuICAgICAgICB9KS5wcmVmZXJyZWRMYW5ndWFnZSgnZW4nKTtcblxuICAgICAgfSk7XG5cbiAgICAgIGFuZ3VsYXIubW9kdWxlKCduZ1ZpZXcnKS5jb250cm9sbGVyKCdUcmFuc2xhdGVDdHJsJywgZnVuY3Rpb24gKCRzY29wZSkge1xuICAgICAgICAkc2NvcGUudHJhbnNsYXRpb25JZCA9ICdUUkFOU0xBVElPTl9JRCc7XG5cbiAgICAgICAgJHNjb3BlLnZhbHVlcyA9IHtcbiAgICAgICAgICB2YWx1ZTogNzhcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIDwvZmlsZT5cbiAgICA8ZmlsZSBuYW1lPVwic2NlbmFyaW8uanNcIj5cbiAgICAgIGl0KCdzaG91bGQgdHJhbnNsYXRlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBpbmplY3QoZnVuY3Rpb24gKCRyb290U2NvcGUsICRjb21waWxlKSB7XG4gICAgICAgICAgJHJvb3RTY29wZS50cmFuc2xhdGlvbklkID0gJ1RSQU5TTEFUSU9OX0lEJztcblxuICAgICAgICAgIGVsZW1lbnQgPSAkY29tcGlsZSgnPHAgdHJhbnNsYXRlPVwiVFJBTlNMQVRJT05fSURcIj48L3A+JykoJHJvb3RTY29wZSk7XG4gICAgICAgICAgJHJvb3RTY29wZS4kZGlnZXN0KCk7XG4gICAgICAgICAgZXhwZWN0KGVsZW1lbnQudGV4dCgpKS50b0JlKCdIZWxsbyB0aGVyZSEnKTtcblxuICAgICAgICAgIGVsZW1lbnQgPSAkY29tcGlsZSgnPHAgdHJhbnNsYXRlPVwie3t0cmFuc2xhdGlvbklkfX1cIj48L3A+JykoJHJvb3RTY29wZSk7XG4gICAgICAgICAgJHJvb3RTY29wZS4kZGlnZXN0KCk7XG4gICAgICAgICAgZXhwZWN0KGVsZW1lbnQudGV4dCgpKS50b0JlKCdIZWxsbyB0aGVyZSEnKTtcblxuICAgICAgICAgIGVsZW1lbnQgPSAkY29tcGlsZSgnPHAgdHJhbnNsYXRlPlRSQU5TTEFUSU9OX0lEPC9wPicpKCRyb290U2NvcGUpO1xuICAgICAgICAgICRyb290U2NvcGUuJGRpZ2VzdCgpO1xuICAgICAgICAgIGV4cGVjdChlbGVtZW50LnRleHQoKSkudG9CZSgnSGVsbG8gdGhlcmUhJyk7XG5cbiAgICAgICAgICBlbGVtZW50ID0gJGNvbXBpbGUoJzxwIHRyYW5zbGF0ZT57e3RyYW5zbGF0aW9uSWR9fTwvcD4nKSgkcm9vdFNjb3BlKTtcbiAgICAgICAgICAkcm9vdFNjb3BlLiRkaWdlc3QoKTtcbiAgICAgICAgICBleHBlY3QoZWxlbWVudC50ZXh0KCkpLnRvQmUoJ0hlbGxvIHRoZXJlIScpO1xuXG4gICAgICAgICAgZWxlbWVudCA9ICRjb21waWxlKCc8cCB0cmFuc2xhdGUgdHJhbnNsYXRlLWF0dHItdGl0bGU9XCJUUkFOU0xBVElPTl9JRFwiPjwvcD4nKSgkcm9vdFNjb3BlKTtcbiAgICAgICAgICAkcm9vdFNjb3BlLiRkaWdlc3QoKTtcbiAgICAgICAgICBleHBlY3QoZWxlbWVudC5hdHRyKCd0aXRsZScpKS50b0JlKCdIZWxsbyB0aGVyZSEnKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICA8L2ZpbGU+XG4gICA8L2V4YW1wbGU+XG4gKi9cbi5kaXJlY3RpdmUoJ3RyYW5zbGF0ZScsIFsnJHRyYW5zbGF0ZScsICckcScsICckaW50ZXJwb2xhdGUnLCAnJGNvbXBpbGUnLCAnJHBhcnNlJywgJyRyb290U2NvcGUnLCBmdW5jdGlvbiAoJHRyYW5zbGF0ZSwgJHEsICRpbnRlcnBvbGF0ZSwgJGNvbXBpbGUsICRwYXJzZSwgJHJvb3RTY29wZSkge1xuXG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6ICdBRScsXG4gICAgc2NvcGU6IHRydWUsXG4gICAgY29tcGlsZTogZnVuY3Rpb24gKHRFbGVtZW50LCB0QXR0cikge1xuXG4gICAgICB2YXIgdHJhbnNsYXRlVmFsdWVzRXhpc3QgPSAodEF0dHIudHJhbnNsYXRlVmFsdWVzKSA/XG4gICAgICAgIHRBdHRyLnRyYW5zbGF0ZVZhbHVlcyA6IHVuZGVmaW5lZDtcblxuICAgICAgdmFyIHRyYW5zbGF0ZUludGVycG9sYXRpb24gPSAodEF0dHIudHJhbnNsYXRlSW50ZXJwb2xhdGlvbikgP1xuICAgICAgICB0QXR0ci50cmFuc2xhdGVJbnRlcnBvbGF0aW9uIDogdW5kZWZpbmVkO1xuXG4gICAgICB2YXIgdHJhbnNsYXRlVmFsdWVFeGlzdCA9IHRFbGVtZW50WzBdLm91dGVySFRNTC5tYXRjaCgvdHJhbnNsYXRlLXZhbHVlLSsvaSk7XG5cbiAgICAgIHZhciBpbnRlcnBvbGF0ZVJlZ0V4cCA9IFwiXiguKikoXCIgKyAkaW50ZXJwb2xhdGUuc3RhcnRTeW1ib2woKSArIFwiLipcIiArICRpbnRlcnBvbGF0ZS5lbmRTeW1ib2woKSArIFwiKSguKilcIixcbiAgICAgICAgICB3YXRjaGVyUmVnRXhwID0gXCJeKC4qKVwiICsgJGludGVycG9sYXRlLnN0YXJ0U3ltYm9sKCkgKyBcIiguKilcIiArICRpbnRlcnBvbGF0ZS5lbmRTeW1ib2woKSArIFwiKC4qKVwiO1xuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gbGlua0ZuKHNjb3BlLCBpRWxlbWVudCwgaUF0dHIpIHtcblxuICAgICAgICBzY29wZS5pbnRlcnBvbGF0ZVBhcmFtcyA9IHt9O1xuICAgICAgICBzY29wZS5wcmVUZXh0ID0gXCJcIjtcbiAgICAgICAgc2NvcGUucG9zdFRleHQgPSBcIlwiO1xuICAgICAgICB2YXIgdHJhbnNsYXRpb25JZHMgPSB7fTtcblxuICAgICAgICAvLyBFbnN1cmVzIGFueSBjaGFuZ2Ugb2YgdGhlIGF0dHJpYnV0ZSBcInRyYW5zbGF0ZVwiIGNvbnRhaW5pbmcgdGhlIGlkIHdpbGxcbiAgICAgICAgLy8gYmUgcmUtc3RvcmVkIHRvIHRoZSBzY29wZSdzIFwidHJhbnNsYXRpb25JZFwiLlxuICAgICAgICAvLyBJZiB0aGUgYXR0cmlidXRlIGhhcyBubyBjb250ZW50LCB0aGUgZWxlbWVudCdzIHRleHQgdmFsdWUgKHdoaXRlIHNwYWNlcyB0cmltbWVkIG9mZikgd2lsbCBiZSB1c2VkLlxuICAgICAgICB2YXIgb2JzZXJ2ZUVsZW1lbnRUcmFuc2xhdGlvbiA9IGZ1bmN0aW9uICh0cmFuc2xhdGlvbklkKSB7XG4gICAgICAgICAgaWYgKGFuZ3VsYXIuZXF1YWxzKHRyYW5zbGF0aW9uSWQgLCAnJykgfHwgIWFuZ3VsYXIuaXNEZWZpbmVkKHRyYW5zbGF0aW9uSWQpKSB7XG4gICAgICAgICAgICAvLyBSZXNvbHZlIHRyYW5zbGF0aW9uIGlkIGJ5IGlubmVyIGh0bWwgaWYgcmVxdWlyZWRcbiAgICAgICAgICAgIHZhciBpbnRlcnBvbGF0ZU1hdGNoZXMgPSBpRWxlbWVudC50ZXh0KCkubWF0Y2goaW50ZXJwb2xhdGVSZWdFeHApO1xuICAgICAgICAgICAgLy8gSW50ZXJwb2xhdGUgdHJhbnNsYXRpb24gaWQgaWYgcmVxdWlyZWRcbiAgICAgICAgICAgIGlmIChhbmd1bGFyLmlzQXJyYXkoaW50ZXJwb2xhdGVNYXRjaGVzKSkge1xuICAgICAgICAgICAgICBzY29wZS5wcmVUZXh0ID0gaW50ZXJwb2xhdGVNYXRjaGVzWzFdO1xuICAgICAgICAgICAgICBzY29wZS5wb3N0VGV4dCA9IGludGVycG9sYXRlTWF0Y2hlc1szXTtcbiAgICAgICAgICAgICAgdHJhbnNsYXRpb25JZHMudHJhbnNsYXRlID0gJGludGVycG9sYXRlKGludGVycG9sYXRlTWF0Y2hlc1syXSkoc2NvcGUuJHBhcmVudCk7XG4gICAgICAgICAgICAgIHdhdGNoZXJNYXRjaGVzID0gaUVsZW1lbnQudGV4dCgpLm1hdGNoKHdhdGNoZXJSZWdFeHApO1xuICAgICAgICAgICAgICBpZiAoYW5ndWxhci5pc0FycmF5KHdhdGNoZXJNYXRjaGVzKSAmJiB3YXRjaGVyTWF0Y2hlc1syXSAmJiB3YXRjaGVyTWF0Y2hlc1syXS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBzY29wZS4kd2F0Y2god2F0Y2hlck1hdGNoZXNbMl0sIGZ1bmN0aW9uIChuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgdHJhbnNsYXRpb25JZHMudHJhbnNsYXRlID0gbmV3VmFsdWU7XG4gICAgICAgICAgICAgICAgICB1cGRhdGVUcmFuc2xhdGlvbnMoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdHJhbnNsYXRpb25JZHMudHJhbnNsYXRlID0gaUVsZW1lbnQudGV4dCgpLnJlcGxhY2UoL15cXHMrfFxccyskL2csJycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0cmFuc2xhdGlvbklkcy50cmFuc2xhdGUgPSB0cmFuc2xhdGlvbklkO1xuICAgICAgICAgIH1cbiAgICAgICAgICB1cGRhdGVUcmFuc2xhdGlvbnMoKTtcbiAgICAgICAgfTtcblxuICAgICAgICB2YXIgb2JzZXJ2ZUF0dHJpYnV0ZVRyYW5zbGF0aW9uID0gZnVuY3Rpb24gKHRyYW5zbGF0ZUF0dHIpIHtcbiAgICAgICAgICBpQXR0ci4kb2JzZXJ2ZSh0cmFuc2xhdGVBdHRyLCBmdW5jdGlvbiAodHJhbnNsYXRpb25JZCkge1xuICAgICAgICAgICAgdHJhbnNsYXRpb25JZHNbdHJhbnNsYXRlQXR0cl0gPSB0cmFuc2xhdGlvbklkO1xuICAgICAgICAgICAgdXBkYXRlVHJhbnNsYXRpb25zKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgaUF0dHIuJG9ic2VydmUoJ3RyYW5zbGF0ZScsIGZ1bmN0aW9uICh0cmFuc2xhdGlvbklkKSB7XG4gICAgICAgICAgb2JzZXJ2ZUVsZW1lbnRUcmFuc2xhdGlvbih0cmFuc2xhdGlvbklkKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgZm9yICh2YXIgdHJhbnNsYXRlQXR0ciBpbiBpQXR0cikge1xuICAgICAgICAgIGlmKGlBdHRyLmhhc093blByb3BlcnR5KHRyYW5zbGF0ZUF0dHIpICYmIHRyYW5zbGF0ZUF0dHIuc3Vic3RyKDAsIDEzKSA9PT0gJ3RyYW5zbGF0ZUF0dHInKSB7XG4gICAgICAgICAgICBvYnNlcnZlQXR0cmlidXRlVHJhbnNsYXRpb24odHJhbnNsYXRlQXR0cik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaUF0dHIuJG9ic2VydmUoJ3RyYW5zbGF0ZURlZmF1bHQnLCBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICBzY29wZS5kZWZhdWx0VGV4dCA9IHZhbHVlO1xuICAgICAgICB9KTtcblxuICAgICAgICBpZiAodHJhbnNsYXRlVmFsdWVzRXhpc3QpIHtcbiAgICAgICAgICBpQXR0ci4kb2JzZXJ2ZSgndHJhbnNsYXRlVmFsdWVzJywgZnVuY3Rpb24gKGludGVycG9sYXRlUGFyYW1zKSB7XG4gICAgICAgICAgICBpZiAoaW50ZXJwb2xhdGVQYXJhbXMpIHtcbiAgICAgICAgICAgICAgc2NvcGUuJHBhcmVudC4kd2F0Y2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGFuZ3VsYXIuZXh0ZW5kKHNjb3BlLmludGVycG9sYXRlUGFyYW1zLCAkcGFyc2UoaW50ZXJwb2xhdGVQYXJhbXMpKHNjb3BlLiRwYXJlbnQpKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodHJhbnNsYXRlVmFsdWVFeGlzdCkge1xuICAgICAgICAgIHZhciBvYnNlcnZlVmFsdWVBdHRyaWJ1dGUgPSBmdW5jdGlvbiAoYXR0ck5hbWUpIHtcbiAgICAgICAgICAgIGlBdHRyLiRvYnNlcnZlKGF0dHJOYW1lLCBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgICAgdmFyIGF0dHJpYnV0ZU5hbWUgPSBhbmd1bGFyLmxvd2VyY2FzZShhdHRyTmFtZS5zdWJzdHIoMTQsIDEpKSArIGF0dHJOYW1lLnN1YnN0cigxNSk7XG4gICAgICAgICAgICAgIHNjb3BlLmludGVycG9sYXRlUGFyYW1zW2F0dHJpYnV0ZU5hbWVdID0gdmFsdWU7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9O1xuICAgICAgICAgIGZvciAodmFyIGF0dHIgaW4gaUF0dHIpIHtcbiAgICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaUF0dHIsIGF0dHIpICYmIGF0dHIuc3Vic3RyKDAsIDE0KSA9PT0gJ3RyYW5zbGF0ZVZhbHVlJyAmJiBhdHRyICE9PSAndHJhbnNsYXRlVmFsdWVzJykge1xuICAgICAgICAgICAgICBvYnNlcnZlVmFsdWVBdHRyaWJ1dGUoYXR0cik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gTWFzdGVyIHVwZGF0ZSBmdW5jdGlvblxuICAgICAgICB2YXIgdXBkYXRlVHJhbnNsYXRpb25zID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGZvciAodmFyIGtleSBpbiB0cmFuc2xhdGlvbklkcykge1xuICAgICAgICAgICAgaWYgKHRyYW5zbGF0aW9uSWRzLmhhc093blByb3BlcnR5KGtleSkgJiYgdHJhbnNsYXRpb25JZHNba2V5XSkge1xuICAgICAgICAgICAgICB1cGRhdGVUcmFuc2xhdGlvbihrZXksIHRyYW5zbGF0aW9uSWRzW2tleV0sIHNjb3BlLCBzY29wZS5pbnRlcnBvbGF0ZVBhcmFtcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIFB1dCB0cmFuc2xhdGlvbiBwcm9jZXNzaW5nIGZ1bmN0aW9uIG91dHNpZGUgbG9vcFxuICAgICAgICB2YXIgdXBkYXRlVHJhbnNsYXRpb24gPSBmdW5jdGlvbih0cmFuc2xhdGVBdHRyLCB0cmFuc2xhdGlvbklkLCBzY29wZSwgaW50ZXJwb2xhdGVQYXJhbXMpIHtcbiAgICAgICAgICAkdHJhbnNsYXRlKHRyYW5zbGF0aW9uSWQsIGludGVycG9sYXRlUGFyYW1zLCB0cmFuc2xhdGVJbnRlcnBvbGF0aW9uKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHRyYW5zbGF0aW9uKSB7XG4gICAgICAgICAgICAgIGFwcGx5VHJhbnNsYXRpb24odHJhbnNsYXRpb24sIHNjb3BlLCB0cnVlLCB0cmFuc2xhdGVBdHRyKTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uICh0cmFuc2xhdGlvbklkKSB7XG4gICAgICAgICAgICAgIGFwcGx5VHJhbnNsYXRpb24odHJhbnNsYXRpb25JZCwgc2NvcGUsIGZhbHNlLCB0cmFuc2xhdGVBdHRyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuXG4gICAgICAgIHZhciBhcHBseVRyYW5zbGF0aW9uID0gZnVuY3Rpb24gKHZhbHVlLCBzY29wZSwgc3VjY2Vzc2Z1bCwgdHJhbnNsYXRlQXR0cikge1xuICAgICAgICAgIGlmICh0cmFuc2xhdGVBdHRyID09PSAndHJhbnNsYXRlJykge1xuICAgICAgICAgICAgLy8gZGVmYXVsdCB0cmFuc2xhdGUgaW50byBpbm5lckhUTUxcbiAgICAgICAgICAgIGlmICghc3VjY2Vzc2Z1bCAmJiB0eXBlb2Ygc2NvcGUuZGVmYXVsdFRleHQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgIHZhbHVlID0gc2NvcGUuZGVmYXVsdFRleHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpRWxlbWVudC5odG1sKHNjb3BlLnByZVRleHQgKyB2YWx1ZSArIHNjb3BlLnBvc3RUZXh0KTtcbiAgICAgICAgICAgIHZhciBnbG9iYWxseUVuYWJsZWQgPSAkdHJhbnNsYXRlLmlzUG9zdENvbXBpbGluZ0VuYWJsZWQoKTtcbiAgICAgICAgICAgIHZhciBsb2NhbGx5RGVmaW5lZCA9IHR5cGVvZiB0QXR0ci50cmFuc2xhdGVDb21waWxlICE9PSAndW5kZWZpbmVkJztcbiAgICAgICAgICAgIHZhciBsb2NhbGx5RW5hYmxlZCA9IGxvY2FsbHlEZWZpbmVkICYmIHRBdHRyLnRyYW5zbGF0ZUNvbXBpbGUgIT09ICdmYWxzZSc7XG4gICAgICAgICAgICBpZiAoKGdsb2JhbGx5RW5hYmxlZCAmJiAhbG9jYWxseURlZmluZWQpIHx8IGxvY2FsbHlFbmFibGVkKSB7XG4gICAgICAgICAgICAgICRjb21waWxlKGlFbGVtZW50LmNvbnRlbnRzKCkpKHNjb3BlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gdHJhbnNsYXRlIGF0dHJpYnV0ZVxuICAgICAgICAgICAgaWYgKCFzdWNjZXNzZnVsICYmIHR5cGVvZiBzY29wZS5kZWZhdWx0VGV4dCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgdmFsdWUgPSBzY29wZS5kZWZhdWx0VGV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBhdHRyaWJ1dGVOYW1lID0gaUF0dHIuJGF0dHJbdHJhbnNsYXRlQXR0cl0uc3Vic3RyKDE1KTtcbiAgICAgICAgICAgIGlFbGVtZW50LmF0dHIoYXR0cmlidXRlTmFtZSwgdmFsdWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBzY29wZS4kd2F0Y2goJ2ludGVycG9sYXRlUGFyYW1zJywgdXBkYXRlVHJhbnNsYXRpb25zLCB0cnVlKTtcblxuICAgICAgICAvLyBFbnN1cmVzIHRoZSB0ZXh0IHdpbGwgYmUgcmVmcmVzaGVkIGFmdGVyIHRoZSBjdXJyZW50IGxhbmd1YWdlIHdhcyBjaGFuZ2VkXG4gICAgICAgIC8vIHcvICR0cmFuc2xhdGUudXNlKC4uLilcbiAgICAgICAgdmFyIHVuYmluZCA9ICRyb290U2NvcGUuJG9uKCckdHJhbnNsYXRlQ2hhbmdlU3VjY2VzcycsIHVwZGF0ZVRyYW5zbGF0aW9ucyk7XG5cbiAgICAgICAgLy8gZW5zdXJlIHRyYW5zbGF0aW9uIHdpbGwgYmUgbG9va2VkIHVwIGF0IGxlYXN0IG9uZVxuICAgICAgICBpZiAoaUVsZW1lbnQudGV4dCgpLmxlbmd0aCkge1xuICAgICAgICAgIG9ic2VydmVFbGVtZW50VHJhbnNsYXRpb24oJycpO1xuICAgICAgICB9XG4gICAgICAgIHVwZGF0ZVRyYW5zbGF0aW9ucygpO1xuICAgICAgICBzY29wZS4kb24oJyRkZXN0cm95JywgdW5iaW5kKTtcbiAgICAgIH07XG4gICAgfVxuICB9O1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZSgncGFzY2FscHJlY2h0LnRyYW5zbGF0ZScpXG4vKipcbiAqIEBuZ2RvYyBkaXJlY3RpdmVcbiAqIEBuYW1lIHBhc2NhbHByZWNodC50cmFuc2xhdGUuZGlyZWN0aXZlOnRyYW5zbGF0ZUNsb2FrXG4gKiBAcmVxdWlyZXMgJHJvb3RTY29wZVxuICogQHJlcXVpcmVzICR0cmFuc2xhdGVcbiAqIEByZXN0cmljdCBBXG4gKlxuICogJGRlc2NyaXB0aW9uXG4gKiBBZGRzIGEgYHRyYW5zbGF0ZS1jbG9ha2AgY2xhc3MgbmFtZSB0byB0aGUgZ2l2ZW4gZWxlbWVudCB3aGVyZSB0aGlzIGRpcmVjdGl2ZVxuICogaXMgYXBwbGllZCBpbml0aWFsbHkgYW5kIHJlbW92ZXMgaXQsIG9uY2UgYSBsb2FkZXIgaGFzIGZpbmlzaGVkIGxvYWRpbmcuXG4gKlxuICogVGhpcyBkaXJlY3RpdmUgY2FuIGJlIHVzZWQgdG8gcHJldmVudCBpbml0aWFsIGZsaWNrZXJpbmcgd2hlbiBsb2FkaW5nIHRyYW5zbGF0aW9uXG4gKiBkYXRhIGFzeW5jaHJvbm91c2x5LlxuICpcbiAqIFRoZSBjbGFzcyBuYW1lIGlzIGRlZmluZWQgaW5cbiAqIHtAbGluayBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVQcm92aWRlciNjbG9ha0NsYXNzTmFtZSAkdHJhbnNsYXRlLmNsb2FrQ2xhc3NOYW1lKCl9LlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nPX0gdHJhbnNsYXRlLWNsb2FrIElmIGEgdHJhbnNsYXRpb25JZCBpcyBwcm92aWRlZCwgaXQgd2lsbCBiZSB1c2VkIGZvciBzaG93aW5nXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvciBoaWRpbmcgdGhlIGNsb2FrLiBCYXNpY2FsbHkgaXQgcmVsaWVzIG9uIHRoZSB0cmFuc2xhdGlvblxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZS5cbiAqL1xuLmRpcmVjdGl2ZSgndHJhbnNsYXRlQ2xvYWsnLCBbJyRyb290U2NvcGUnLCAnJHRyYW5zbGF0ZScsIGZ1bmN0aW9uICgkcm9vdFNjb3BlLCAkdHJhbnNsYXRlKSB7XG5cbiAgcmV0dXJuIHtcbiAgICBjb21waWxlOiBmdW5jdGlvbiAodEVsZW1lbnQpIHtcbiAgICAgIHZhciBhcHBseUNsb2FrID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0RWxlbWVudC5hZGRDbGFzcygkdHJhbnNsYXRlLmNsb2FrQ2xhc3NOYW1lKCkpO1xuICAgICAgfSxcbiAgICAgIHJlbW92ZUNsb2FrID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0RWxlbWVudC5yZW1vdmVDbGFzcygkdHJhbnNsYXRlLmNsb2FrQ2xhc3NOYW1lKCkpO1xuICAgICAgfSxcbiAgICAgIHJlbW92ZUxpc3RlbmVyID0gJHJvb3RTY29wZS4kb24oJyR0cmFuc2xhdGVDaGFuZ2VFbmQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJlbW92ZUNsb2FrKCk7XG4gICAgICAgIHJlbW92ZUxpc3RlbmVyKCk7XG4gICAgICAgIHJlbW92ZUxpc3RlbmVyID0gbnVsbDtcbiAgICAgIH0pO1xuICAgICAgYXBwbHlDbG9haygpO1xuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gbGlua0ZuKHNjb3BlLCBpRWxlbWVudCwgaUF0dHIpIHtcbiAgICAgICAgLy8gUmVnaXN0ZXIgYSB3YXRjaGVyIGZvciB0aGUgZGVmaW5lZCB0cmFuc2xhdGlvbiBhbGxvd2luZyBhIGZpbmUgdHVuZWQgY2xvYWtcbiAgICAgICAgaWYgKGlBdHRyLnRyYW5zbGF0ZUNsb2FrICYmIGlBdHRyLnRyYW5zbGF0ZUNsb2FrLmxlbmd0aCkge1xuICAgICAgICAgIGlBdHRyLiRvYnNlcnZlKCd0cmFuc2xhdGVDbG9haycsIGZ1bmN0aW9uICh0cmFuc2xhdGlvbklkKSB7XG4gICAgICAgICAgICAkdHJhbnNsYXRlKHRyYW5zbGF0aW9uSWQpLnRoZW4ocmVtb3ZlQ2xvYWssIGFwcGx5Q2xvYWspO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbn1dKTtcblxuYW5ndWxhci5tb2R1bGUoJ3Bhc2NhbHByZWNodC50cmFuc2xhdGUnKVxuLyoqXG4gKiBAbmdkb2MgZmlsdGVyXG4gKiBAbmFtZSBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLmZpbHRlcjp0cmFuc2xhdGVcbiAqIEByZXF1aXJlcyAkcGFyc2VcbiAqIEByZXF1aXJlcyBwYXNjYWxwcmVjaHQudHJhbnNsYXRlLiR0cmFuc2xhdGVcbiAqIEBmdW5jdGlvblxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogVXNlcyBgJHRyYW5zbGF0ZWAgc2VydmljZSB0byB0cmFuc2xhdGUgY29udGVudHMuIEFjY2VwdHMgaW50ZXJwb2xhdGUgcGFyYW1ldGVyc1xuICogdG8gcGFzcyBkeW5hbWl6ZWQgdmFsdWVzIHRob3VnaCB0cmFuc2xhdGlvbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdHJhbnNsYXRpb25JZCBBIHRyYW5zbGF0aW9uIGlkIHRvIGJlIHRyYW5zbGF0ZWQuXG4gKiBAcGFyYW0geyo9fSBpbnRlcnBvbGF0ZVBhcmFtcyBPcHRpb25hbCBvYmplY3QgbGl0ZXJhbCAoYXMgaGFzaCBvciBzdHJpbmcpIHRvIHBhc3MgdmFsdWVzIGludG8gdHJhbnNsYXRpb24uXG4gKlxuICogQHJldHVybnMge3N0cmluZ30gVHJhbnNsYXRlZCB0ZXh0LlxuICpcbiAqIEBleGFtcGxlXG4gICA8ZXhhbXBsZSBtb2R1bGU9XCJuZ1ZpZXdcIj5cbiAgICA8ZmlsZSBuYW1lPVwiaW5kZXguaHRtbFwiPlxuICAgICAgPGRpdiBuZy1jb250cm9sbGVyPVwiVHJhbnNsYXRlQ3RybFwiPlxuXG4gICAgICAgIDxwcmU+e3sgJ1RSQU5TTEFUSU9OX0lEJyB8IHRyYW5zbGF0ZSB9fTwvcHJlPlxuICAgICAgICA8cHJlPnt7IHRyYW5zbGF0aW9uSWQgfCB0cmFuc2xhdGUgfX08L3ByZT5cbiAgICAgICAgPHByZT57eyAnV0lUSF9WQUxVRVMnIHwgdHJhbnNsYXRlOid7dmFsdWU6IDV9JyB9fTwvcHJlPlxuICAgICAgICA8cHJlPnt7ICdXSVRIX1ZBTFVFUycgfCB0cmFuc2xhdGU6dmFsdWVzIH19PC9wcmU+XG5cbiAgICAgIDwvZGl2PlxuICAgIDwvZmlsZT5cbiAgICA8ZmlsZSBuYW1lPVwic2NyaXB0LmpzXCI+XG4gICAgICBhbmd1bGFyLm1vZHVsZSgnbmdWaWV3JywgWydwYXNjYWxwcmVjaHQudHJhbnNsYXRlJ10pXG5cbiAgICAgIC5jb25maWcoZnVuY3Rpb24gKCR0cmFuc2xhdGVQcm92aWRlcikge1xuXG4gICAgICAgICR0cmFuc2xhdGVQcm92aWRlci50cmFuc2xhdGlvbnMoJ2VuJywge1xuICAgICAgICAgICdUUkFOU0xBVElPTl9JRCc6ICdIZWxsbyB0aGVyZSEnLFxuICAgICAgICAgICdXSVRIX1ZBTFVFUyc6ICdUaGUgZm9sbG93aW5nIHZhbHVlIGlzIGR5bmFtaWM6IHt7dmFsdWV9fSdcbiAgICAgICAgfSk7XG4gICAgICAgICR0cmFuc2xhdGVQcm92aWRlci5wcmVmZXJyZWRMYW5ndWFnZSgnZW4nKTtcblxuICAgICAgfSk7XG5cbiAgICAgIGFuZ3VsYXIubW9kdWxlKCduZ1ZpZXcnKS5jb250cm9sbGVyKCdUcmFuc2xhdGVDdHJsJywgZnVuY3Rpb24gKCRzY29wZSkge1xuICAgICAgICAkc2NvcGUudHJhbnNsYXRpb25JZCA9ICdUUkFOU0xBVElPTl9JRCc7XG5cbiAgICAgICAgJHNjb3BlLnZhbHVlcyA9IHtcbiAgICAgICAgICB2YWx1ZTogNzhcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIDwvZmlsZT5cbiAgIDwvZXhhbXBsZT5cbiAqL1xuLmZpbHRlcigndHJhbnNsYXRlJywgWyckcGFyc2UnLCAnJHRyYW5zbGF0ZScsIGZ1bmN0aW9uICgkcGFyc2UsICR0cmFuc2xhdGUpIHtcbiAgdmFyIHRyYW5zbGF0ZUZpbHRlciA9IGZ1bmN0aW9uICh0cmFuc2xhdGlvbklkLCBpbnRlcnBvbGF0ZVBhcmFtcywgaW50ZXJwb2xhdGlvbikge1xuXG4gICAgaWYgKCFhbmd1bGFyLmlzT2JqZWN0KGludGVycG9sYXRlUGFyYW1zKSkge1xuICAgICAgaW50ZXJwb2xhdGVQYXJhbXMgPSAkcGFyc2UoaW50ZXJwb2xhdGVQYXJhbXMpKHRoaXMpO1xuICAgIH1cblxuICAgIHJldHVybiAkdHJhbnNsYXRlLmluc3RhbnQodHJhbnNsYXRpb25JZCwgaW50ZXJwb2xhdGVQYXJhbXMsIGludGVycG9sYXRpb24pO1xuICB9O1xuXG4gIC8vIFNpbmNlIEFuZ3VsYXJKUyAxLjMsIGZpbHRlcnMgd2hpY2ggYXJlIG5vdCBzdGF0ZWxlc3MgKGRlcGVuZGluZyBhdCB0aGUgc2NvcGUpXG4gIC8vIGhhdmUgdG8gZXhwbGljaXQgZGVmaW5lIHRoaXMgYmVoYXZpb3IuXG4gIHRyYW5zbGF0ZUZpbHRlci4kc3RhdGVmdWwgPSB0cnVlO1xuXG4gIHJldHVybiB0cmFuc2xhdGVGaWx0ZXI7XG59XSk7XG5cbi8qIVxuICogYW5ndWxhci10cmFuc2xhdGUgLSB2Mi41LjIgLSAyMDE0LTEyLTEwXG4gKiBodHRwOi8vZ2l0aHViLmNvbS9hbmd1bGFyLXRyYW5zbGF0ZS9hbmd1bGFyLXRyYW5zbGF0ZVxuICogQ29weXJpZ2h0IChjKSAyMDE0IDsgTGljZW5zZWQgTUlUXG4gKi9cbmFuZ3VsYXIubW9kdWxlKCdwYXNjYWxwcmVjaHQudHJhbnNsYXRlJylcbi8qKlxuICogQG5nZG9jIG9iamVjdFxuICogQG5hbWUgcGFzY2FscHJlY2h0LnRyYW5zbGF0ZS4kdHJhbnNsYXRlU3RhdGljRmlsZXNMb2FkZXJcbiAqIEByZXF1aXJlcyAkcVxuICogQHJlcXVpcmVzICRodHRwXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBDcmVhdGVzIGEgbG9hZGluZyBmdW5jdGlvbiBmb3IgYSB0eXBpY2FsIHN0YXRpYyBmaWxlIHVybCBwYXR0ZXJuOlxuICogXCJsYW5nLWVuX1VTLmpzb25cIiwgXCJsYW5nLWRlX0RFLmpzb25cIiwgZXRjLiBVc2luZyB0aGlzIGJ1aWxkZXIsXG4gKiB0aGUgcmVzcG9uc2Ugb2YgdGhlc2UgdXJscyBtdXN0IGJlIGFuIG9iamVjdCBvZiBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnMgT3B0aW9ucyBvYmplY3QsIHdoaWNoIGdldHMgcHJlZml4LCBzdWZmaXggYW5kIGtleS5cbiAqL1xuLmZhY3RvcnkoJyR0cmFuc2xhdGVTdGF0aWNGaWxlc0xvYWRlcicsIFsnJHEnLCAnJGh0dHAnLCBmdW5jdGlvbiAoJHEsICRodHRwKSB7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cbiAgICBpZiAoIW9wdGlvbnMgfHwgKCFhbmd1bGFyLmlzU3RyaW5nKG9wdGlvbnMucHJlZml4KSB8fCAhYW5ndWxhci5pc1N0cmluZyhvcHRpb25zLnN1ZmZpeCkpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvdWxkblxcJ3QgbG9hZCBzdGF0aWMgZmlsZXMsIG5vIHByZWZpeCBvciBzdWZmaXggc3BlY2lmaWVkIScpO1xuICAgIH1cblxuICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG5cbiAgICAkaHR0cChhbmd1bGFyLmV4dGVuZCh7XG4gICAgICB1cmw6IFtcbiAgICAgICAgb3B0aW9ucy5wcmVmaXgsXG4gICAgICAgIG9wdGlvbnMua2V5LFxuICAgICAgICBvcHRpb25zLnN1ZmZpeFxuICAgICAgXS5qb2luKCcnKSxcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICBwYXJhbXM6ICcnXG4gICAgfSwgb3B0aW9ucy4kaHR0cCkpLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XG4gICAgfSkuZXJyb3IoZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIGRlZmVycmVkLnJlamVjdChvcHRpb25zLmtleSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgfTtcbn1dKTtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBnbG9iYWwgYW5ndWxhciwgd2luZG93ICovXG5cbi8qKlxuICogUmVpbXBsZW1lbnRhdGlvbiBvZiAkdHJhbnNsYXRlU3RhdGljRmlsZXNMb2FkZXIgdG8gaGFuZGxlIG1pc3NpbmcgZmlsZXMgYW5kIGxvY2FsZSBoaWVyYXJjaHkgKGVuL2VuX1VTKVxuICovXG5hbmd1bGFyLm1vZHVsZShcInBhc2NhbHByZWNodC50cmFuc2xhdGVcIikuZmFjdG9yeShcIiR0cmFuc2xhdGVTdGF0aWNGaWxlc0xvYWRlclwiLCBbXG4gIFwiJHFcIixcbiAgXCIkaHR0cFwiLFxuICBmdW5jdGlvbiAoJHEsICRodHRwKSB7XG4gICAgZnVuY3Rpb24gbG9hZFRyYW5zbGF0aW9uRmlsZShvcHRpb25zLCBkZWZlcnJlZCkge1xuICAgICAgJGh0dHAoYW5ndWxhci5leHRlbmQoe1xuICAgICAgICB1cmw6IFtcbiAgICAgICAgICBvcHRpb25zLnByZWZpeCxcbiAgICAgICAgICBvcHRpb25zLmtleS50b0xvd2VyQ2FzZSgpLFxuICAgICAgICAgIG9wdGlvbnMuc3VmZml4XG4gICAgICAgIF0uam9pbihcIlwiKSxcbiAgICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgICBwYXJhbXM6IFwiXCJcbiAgICAgIH0sIG9wdGlvbnMuJGh0dHApKS5zdWNjZXNzKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XG4gICAgICB9KS5lcnJvcihmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmKG9wdGlvbnMua2V5LmluZGV4T2YoXCJfXCIpID49IDApIHtcbiAgICAgICAgICB2YXIga2V5ID0gb3B0aW9ucy5rZXkuc3Vic3RyKDAsIG9wdGlvbnMua2V5Lmxhc3RJbmRleE9mKFwiX1wiKSk7XG4gICAgICAgICAgdmFyIG9wdHMgPSBhbmd1bGFyLmV4dGVuZCh7fSwgb3B0aW9ucywgeyBrZXk6IGtleSB9KTtcbiAgICAgICAgICBcbiAgICAgICAgICBsb2FkVHJhbnNsYXRpb25GaWxlKG9wdHMsIGRlZmVycmVkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKFwie31cIik7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgaWYgKCFvcHRpb25zIHx8ICghYW5ndWxhci5pc1N0cmluZyhvcHRpb25zLnByZWZpeCkgfHwgIWFuZ3VsYXIuaXNTdHJpbmcob3B0aW9ucy5zdWZmaXgpKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG5cXFwidCBsb2FkIHN0YXRpYyBmaWxlcywgbm8gcHJlZml4IG9yIHN1ZmZpeCBzcGVjaWZpZWQhXCIpO1xuICAgICAgfVxuXG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICBsb2FkVHJhbnNsYXRpb25GaWxlKG9wdGlvbnMsIGRlZmVycmVkKTtcblxuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfTtcbiAgfVxuXSk7XG5cbmFuZ3VsYXIubW9kdWxlKFwicmlzZXZpc2lvbi5jb21tb24uaTE4blwiLCBbXCJwYXNjYWxwcmVjaHQudHJhbnNsYXRlXCIsIFwicmlzZXZpc2lvbi5jb21tb24uaTE4bi5jb25maWdcIl0pXG4uY29uZmlnKFtcIiR0cmFuc2xhdGVQcm92aWRlclwiLCBcIkxPQ0FMRVNfUFJFRklYXCIsIFwiTE9DQUxFU19TVUZJWFwiLCBmdW5jdGlvbiAoJHRyYW5zbGF0ZVByb3ZpZGVyLCBMT0NBTEVTX1BSRUZJWCwgTE9DQUxFU19TVUZJWCkge1xuICAvLyBUcmllcyB0byBkZXRlcm1pbmUgdGhlIGJyb3dzZXJzIGxvY2FsZVxuICAkdHJhbnNsYXRlUHJvdmlkZXIudXNlU3RhdGljRmlsZXNMb2FkZXIoe1xuICAgIHByZWZpeDogTE9DQUxFU19QUkVGSVgsXG4gICAgc3VmZml4OiBMT0NBTEVTX1NVRklYXG4gIH0pO1xuICBcbiAgJHRyYW5zbGF0ZVByb3ZpZGVyXG4gICAgLmRldGVybWluZVByZWZlcnJlZExhbmd1YWdlKClcbiAgICAuZmFsbGJhY2tMYW5ndWFnZShcImVuXCIpO1xufV0pO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEJvb3RzdHJhcDogYWZmaXguanMgdjMuMi4wXG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyNhZmZpeFxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE0IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIEFGRklYIENMQVNTIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PVxuXG4gIHZhciBBZmZpeCA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sIEFmZml4LkRFRkFVTFRTLCBvcHRpb25zKVxuXG4gICAgdGhpcy4kdGFyZ2V0ID0gJCh0aGlzLm9wdGlvbnMudGFyZ2V0KVxuICAgICAgLm9uKCdzY3JvbGwuYnMuYWZmaXguZGF0YS1hcGknLCAkLnByb3h5KHRoaXMuY2hlY2tQb3NpdGlvbiwgdGhpcykpXG4gICAgICAub24oJ2NsaWNrLmJzLmFmZml4LmRhdGEtYXBpJywgICQucHJveHkodGhpcy5jaGVja1Bvc2l0aW9uV2l0aEV2ZW50TG9vcCwgdGhpcykpXG5cbiAgICB0aGlzLiRlbGVtZW50ICAgICA9ICQoZWxlbWVudClcbiAgICB0aGlzLmFmZml4ZWQgICAgICA9XG4gICAgdGhpcy51bnBpbiAgICAgICAgPVxuICAgIHRoaXMucGlubmVkT2Zmc2V0ID0gbnVsbFxuXG4gICAgdGhpcy5jaGVja1Bvc2l0aW9uKClcbiAgfVxuXG4gIEFmZml4LlZFUlNJT04gID0gJzMuMi4wJ1xuXG4gIEFmZml4LlJFU0VUICAgID0gJ2FmZml4IGFmZml4LXRvcCBhZmZpeC1ib3R0b20nXG5cbiAgQWZmaXguREVGQVVMVFMgPSB7XG4gICAgb2Zmc2V0OiAwLFxuICAgIHRhcmdldDogd2luZG93XG4gIH1cblxuICBBZmZpeC5wcm90b3R5cGUuZ2V0UGlubmVkT2Zmc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLnBpbm5lZE9mZnNldCkgcmV0dXJuIHRoaXMucGlubmVkT2Zmc2V0XG4gICAgdGhpcy4kZWxlbWVudC5yZW1vdmVDbGFzcyhBZmZpeC5SRVNFVCkuYWRkQ2xhc3MoJ2FmZml4JylcbiAgICB2YXIgc2Nyb2xsVG9wID0gdGhpcy4kdGFyZ2V0LnNjcm9sbFRvcCgpXG4gICAgdmFyIHBvc2l0aW9uICA9IHRoaXMuJGVsZW1lbnQub2Zmc2V0KClcbiAgICByZXR1cm4gKHRoaXMucGlubmVkT2Zmc2V0ID0gcG9zaXRpb24udG9wIC0gc2Nyb2xsVG9wKVxuICB9XG5cbiAgQWZmaXgucHJvdG90eXBlLmNoZWNrUG9zaXRpb25XaXRoRXZlbnRMb29wID0gZnVuY3Rpb24gKCkge1xuICAgIHNldFRpbWVvdXQoJC5wcm94eSh0aGlzLmNoZWNrUG9zaXRpb24sIHRoaXMpLCAxKVxuICB9XG5cbiAgQWZmaXgucHJvdG90eXBlLmNoZWNrUG9zaXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCF0aGlzLiRlbGVtZW50LmlzKCc6dmlzaWJsZScpKSByZXR1cm5cblxuICAgIHZhciBzY3JvbGxIZWlnaHQgPSAkKGRvY3VtZW50KS5oZWlnaHQoKVxuICAgIHZhciBzY3JvbGxUb3AgICAgPSB0aGlzLiR0YXJnZXQuc2Nyb2xsVG9wKClcbiAgICB2YXIgcG9zaXRpb24gICAgID0gdGhpcy4kZWxlbWVudC5vZmZzZXQoKVxuICAgIHZhciBvZmZzZXQgICAgICAgPSB0aGlzLm9wdGlvbnMub2Zmc2V0XG4gICAgdmFyIG9mZnNldFRvcCAgICA9IG9mZnNldC50b3BcbiAgICB2YXIgb2Zmc2V0Qm90dG9tID0gb2Zmc2V0LmJvdHRvbVxuXG4gICAgaWYgKHR5cGVvZiBvZmZzZXQgIT0gJ29iamVjdCcpICAgICAgICAgb2Zmc2V0Qm90dG9tID0gb2Zmc2V0VG9wID0gb2Zmc2V0XG4gICAgaWYgKHR5cGVvZiBvZmZzZXRUb3AgPT0gJ2Z1bmN0aW9uJykgICAgb2Zmc2V0VG9wICAgID0gb2Zmc2V0LnRvcCh0aGlzLiRlbGVtZW50KVxuICAgIGlmICh0eXBlb2Ygb2Zmc2V0Qm90dG9tID09ICdmdW5jdGlvbicpIG9mZnNldEJvdHRvbSA9IG9mZnNldC5ib3R0b20odGhpcy4kZWxlbWVudClcblxuICAgIHZhciBhZmZpeCA9IHRoaXMudW5waW4gICAhPSBudWxsICYmIChzY3JvbGxUb3AgKyB0aGlzLnVucGluIDw9IHBvc2l0aW9uLnRvcCkgPyBmYWxzZSA6XG4gICAgICAgICAgICAgICAgb2Zmc2V0Qm90dG9tICE9IG51bGwgJiYgKHBvc2l0aW9uLnRvcCArIHRoaXMuJGVsZW1lbnQuaGVpZ2h0KCkgPj0gc2Nyb2xsSGVpZ2h0IC0gb2Zmc2V0Qm90dG9tKSA/ICdib3R0b20nIDpcbiAgICAgICAgICAgICAgICBvZmZzZXRUb3AgICAgIT0gbnVsbCAmJiAoc2Nyb2xsVG9wIDw9IG9mZnNldFRvcCkgPyAndG9wJyA6IGZhbHNlXG5cbiAgICBpZiAodGhpcy5hZmZpeGVkID09PSBhZmZpeCkgcmV0dXJuXG4gICAgaWYgKHRoaXMudW5waW4gIT0gbnVsbCkgdGhpcy4kZWxlbWVudC5jc3MoJ3RvcCcsICcnKVxuXG4gICAgdmFyIGFmZml4VHlwZSA9ICdhZmZpeCcgKyAoYWZmaXggPyAnLScgKyBhZmZpeCA6ICcnKVxuICAgIHZhciBlICAgICAgICAgPSAkLkV2ZW50KGFmZml4VHlwZSArICcuYnMuYWZmaXgnKVxuXG4gICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKGUpXG5cbiAgICBpZiAoZS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkgcmV0dXJuXG5cbiAgICB0aGlzLmFmZml4ZWQgPSBhZmZpeFxuICAgIHRoaXMudW5waW4gPSBhZmZpeCA9PSAnYm90dG9tJyA/IHRoaXMuZ2V0UGlubmVkT2Zmc2V0KCkgOiBudWxsXG5cbiAgICB0aGlzLiRlbGVtZW50XG4gICAgICAucmVtb3ZlQ2xhc3MoQWZmaXguUkVTRVQpXG4gICAgICAuYWRkQ2xhc3MoYWZmaXhUeXBlKVxuICAgICAgLnRyaWdnZXIoJC5FdmVudChhZmZpeFR5cGUucmVwbGFjZSgnYWZmaXgnLCAnYWZmaXhlZCcpKSlcblxuICAgIGlmIChhZmZpeCA9PSAnYm90dG9tJykge1xuICAgICAgdGhpcy4kZWxlbWVudC5vZmZzZXQoe1xuICAgICAgICB0b3A6IHNjcm9sbEhlaWdodCAtIHRoaXMuJGVsZW1lbnQuaGVpZ2h0KCkgLSBvZmZzZXRCb3R0b21cbiAgICAgIH0pXG4gICAgfVxuICB9XG5cblxuICAvLyBBRkZJWCBQTFVHSU4gREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy5hZmZpeCcpXG4gICAgICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT0gJ29iamVjdCcgJiYgb3B0aW9uXG5cbiAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnYnMuYWZmaXgnLCAoZGF0YSA9IG5ldyBBZmZpeCh0aGlzLCBvcHRpb25zKSkpXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dKClcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4uYWZmaXhcblxuICAkLmZuLmFmZml4ICAgICAgICAgICAgID0gUGx1Z2luXG4gICQuZm4uYWZmaXguQ29uc3RydWN0b3IgPSBBZmZpeFxuXG5cbiAgLy8gQUZGSVggTk8gQ09ORkxJQ1RcbiAgLy8gPT09PT09PT09PT09PT09PT1cblxuICAkLmZuLmFmZml4Lm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5hZmZpeCA9IG9sZFxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuXG4gIC8vIEFGRklYIERBVEEtQVBJXG4gIC8vID09PT09PT09PT09PT09XG5cbiAgJCh3aW5kb3cpLm9uKCdsb2FkJywgZnVuY3Rpb24gKCkge1xuICAgICQoJ1tkYXRhLXNweT1cImFmZml4XCJdJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHNweSA9ICQodGhpcylcbiAgICAgIHZhciBkYXRhID0gJHNweS5kYXRhKClcblxuICAgICAgZGF0YS5vZmZzZXQgPSBkYXRhLm9mZnNldCB8fCB7fVxuXG4gICAgICBpZiAoZGF0YS5vZmZzZXRCb3R0b20pIGRhdGEub2Zmc2V0LmJvdHRvbSA9IGRhdGEub2Zmc2V0Qm90dG9tXG4gICAgICBpZiAoZGF0YS5vZmZzZXRUb3ApICAgIGRhdGEub2Zmc2V0LnRvcCAgICA9IGRhdGEub2Zmc2V0VG9wXG5cbiAgICAgIFBsdWdpbi5jYWxsKCRzcHksIGRhdGEpXG4gICAgfSlcbiAgfSlcblxufShqUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEJvb3RzdHJhcDogYWxlcnQuanMgdjMuMi4wXG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyNhbGVydHNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNCBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBBTEVSVCBDTEFTUyBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgZGlzbWlzcyA9ICdbZGF0YS1kaXNtaXNzPVwiYWxlcnRcIl0nXG4gIHZhciBBbGVydCAgID0gZnVuY3Rpb24gKGVsKSB7XG4gICAgJChlbCkub24oJ2NsaWNrJywgZGlzbWlzcywgdGhpcy5jbG9zZSlcbiAgfVxuXG4gIEFsZXJ0LlZFUlNJT04gPSAnMy4yLjAnXG5cbiAgQWxlcnQucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgJHRoaXMgICAgPSAkKHRoaXMpXG4gICAgdmFyIHNlbGVjdG9yID0gJHRoaXMuYXR0cignZGF0YS10YXJnZXQnKVxuXG4gICAgaWYgKCFzZWxlY3Rvcikge1xuICAgICAgc2VsZWN0b3IgPSAkdGhpcy5hdHRyKCdocmVmJylcbiAgICAgIHNlbGVjdG9yID0gc2VsZWN0b3IgJiYgc2VsZWN0b3IucmVwbGFjZSgvLiooPz0jW15cXHNdKiQpLywgJycpIC8vIHN0cmlwIGZvciBpZTdcbiAgICB9XG5cbiAgICB2YXIgJHBhcmVudCA9ICQoc2VsZWN0b3IpXG5cbiAgICBpZiAoZSkgZS5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICBpZiAoISRwYXJlbnQubGVuZ3RoKSB7XG4gICAgICAkcGFyZW50ID0gJHRoaXMuaGFzQ2xhc3MoJ2FsZXJ0JykgPyAkdGhpcyA6ICR0aGlzLnBhcmVudCgpXG4gICAgfVxuXG4gICAgJHBhcmVudC50cmlnZ2VyKGUgPSAkLkV2ZW50KCdjbG9zZS5icy5hbGVydCcpKVxuXG4gICAgaWYgKGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgJHBhcmVudC5yZW1vdmVDbGFzcygnaW4nKVxuXG4gICAgZnVuY3Rpb24gcmVtb3ZlRWxlbWVudCgpIHtcbiAgICAgIC8vIGRldGFjaCBmcm9tIHBhcmVudCwgZmlyZSBldmVudCB0aGVuIGNsZWFuIHVwIGRhdGFcbiAgICAgICRwYXJlbnQuZGV0YWNoKCkudHJpZ2dlcignY2xvc2VkLmJzLmFsZXJ0JykucmVtb3ZlKClcbiAgICB9XG5cbiAgICAkLnN1cHBvcnQudHJhbnNpdGlvbiAmJiAkcGFyZW50Lmhhc0NsYXNzKCdmYWRlJykgP1xuICAgICAgJHBhcmVudFxuICAgICAgICAub25lKCdic1RyYW5zaXRpb25FbmQnLCByZW1vdmVFbGVtZW50KVxuICAgICAgICAuZW11bGF0ZVRyYW5zaXRpb25FbmQoMTUwKSA6XG4gICAgICByZW1vdmVFbGVtZW50KClcbiAgfVxuXG5cbiAgLy8gQUxFUlQgUExVR0lOIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiBQbHVnaW4ob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpXG4gICAgICB2YXIgZGF0YSAgPSAkdGhpcy5kYXRhKCdicy5hbGVydCcpXG5cbiAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnYnMuYWxlcnQnLCAoZGF0YSA9IG5ldyBBbGVydCh0aGlzKSkpXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dLmNhbGwoJHRoaXMpXG4gICAgfSlcbiAgfVxuXG4gIHZhciBvbGQgPSAkLmZuLmFsZXJ0XG5cbiAgJC5mbi5hbGVydCAgICAgICAgICAgICA9IFBsdWdpblxuICAkLmZuLmFsZXJ0LkNvbnN0cnVjdG9yID0gQWxlcnRcblxuXG4gIC8vIEFMRVJUIE5PIENPTkZMSUNUXG4gIC8vID09PT09PT09PT09PT09PT09XG5cbiAgJC5mbi5hbGVydC5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uYWxlcnQgPSBvbGRcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cblxuICAvLyBBTEVSVCBEQVRBLUFQSVxuICAvLyA9PT09PT09PT09PT09PVxuXG4gICQoZG9jdW1lbnQpLm9uKCdjbGljay5icy5hbGVydC5kYXRhLWFwaScsIGRpc21pc3MsIEFsZXJ0LnByb3RvdHlwZS5jbG9zZSlcblxufShqUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEJvb3RzdHJhcDogYnV0dG9uLmpzIHYzLjIuMFxuICogaHR0cDovL2dldGJvb3RzdHJhcC5jb20vamF2YXNjcmlwdC8jYnV0dG9uc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE0IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIEJVVFRPTiBQVUJMSUMgQ0xBU1MgREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgQnV0dG9uID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLiRlbGVtZW50ICA9ICQoZWxlbWVudClcbiAgICB0aGlzLm9wdGlvbnMgICA9ICQuZXh0ZW5kKHt9LCBCdXR0b24uREVGQVVMVFMsIG9wdGlvbnMpXG4gICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZVxuICB9XG5cbiAgQnV0dG9uLlZFUlNJT04gID0gJzMuMi4wJ1xuXG4gIEJ1dHRvbi5ERUZBVUxUUyA9IHtcbiAgICBsb2FkaW5nVGV4dDogJ2xvYWRpbmcuLi4nXG4gIH1cblxuICBCdXR0b24ucHJvdG90eXBlLnNldFN0YXRlID0gZnVuY3Rpb24gKHN0YXRlKSB7XG4gICAgdmFyIGQgICAgPSAnZGlzYWJsZWQnXG4gICAgdmFyICRlbCAgPSB0aGlzLiRlbGVtZW50XG4gICAgdmFyIHZhbCAgPSAkZWwuaXMoJ2lucHV0JykgPyAndmFsJyA6ICdodG1sJ1xuICAgIHZhciBkYXRhID0gJGVsLmRhdGEoKVxuXG4gICAgc3RhdGUgPSBzdGF0ZSArICdUZXh0J1xuXG4gICAgaWYgKGRhdGEucmVzZXRUZXh0ID09IG51bGwpICRlbC5kYXRhKCdyZXNldFRleHQnLCAkZWxbdmFsXSgpKVxuXG4gICAgJGVsW3ZhbF0oZGF0YVtzdGF0ZV0gPT0gbnVsbCA/IHRoaXMub3B0aW9uc1tzdGF0ZV0gOiBkYXRhW3N0YXRlXSlcblxuICAgIC8vIHB1c2ggdG8gZXZlbnQgbG9vcCB0byBhbGxvdyBmb3JtcyB0byBzdWJtaXRcbiAgICBzZXRUaW1lb3V0KCQucHJveHkoZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHN0YXRlID09ICdsb2FkaW5nVGV4dCcpIHtcbiAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlXG4gICAgICAgICRlbC5hZGRDbGFzcyhkKS5hdHRyKGQsIGQpXG4gICAgICB9IGVsc2UgaWYgKHRoaXMuaXNMb2FkaW5nKSB7XG4gICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2VcbiAgICAgICAgJGVsLnJlbW92ZUNsYXNzKGQpLnJlbW92ZUF0dHIoZClcbiAgICAgIH1cbiAgICB9LCB0aGlzKSwgMClcbiAgfVxuXG4gIEJ1dHRvbi5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBjaGFuZ2VkID0gdHJ1ZVxuICAgIHZhciAkcGFyZW50ID0gdGhpcy4kZWxlbWVudC5jbG9zZXN0KCdbZGF0YS10b2dnbGU9XCJidXR0b25zXCJdJylcblxuICAgIGlmICgkcGFyZW50Lmxlbmd0aCkge1xuICAgICAgdmFyICRpbnB1dCA9IHRoaXMuJGVsZW1lbnQuZmluZCgnaW5wdXQnKVxuICAgICAgaWYgKCRpbnB1dC5wcm9wKCd0eXBlJykgPT0gJ3JhZGlvJykge1xuICAgICAgICBpZiAoJGlucHV0LnByb3AoJ2NoZWNrZWQnKSAmJiB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdhY3RpdmUnKSkgY2hhbmdlZCA9IGZhbHNlXG4gICAgICAgIGVsc2UgJHBhcmVudC5maW5kKCcuYWN0aXZlJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICB9XG4gICAgICBpZiAoY2hhbmdlZCkgJGlucHV0LnByb3AoJ2NoZWNrZWQnLCAhdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnYWN0aXZlJykpLnRyaWdnZXIoJ2NoYW5nZScpXG4gICAgfVxuXG4gICAgaWYgKGNoYW5nZWQpIHRoaXMuJGVsZW1lbnQudG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpXG4gIH1cblxuXG4gIC8vIEJVVFRPTiBQTFVHSU4gREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiBQbHVnaW4ob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMgICA9ICQodGhpcylcbiAgICAgIHZhciBkYXRhICAgID0gJHRoaXMuZGF0YSgnYnMuYnV0dG9uJylcbiAgICAgIHZhciBvcHRpb25zID0gdHlwZW9mIG9wdGlvbiA9PSAnb2JqZWN0JyAmJiBvcHRpb25cblxuICAgICAgaWYgKCFkYXRhKSAkdGhpcy5kYXRhKCdicy5idXR0b24nLCAoZGF0YSA9IG5ldyBCdXR0b24odGhpcywgb3B0aW9ucykpKVxuXG4gICAgICBpZiAob3B0aW9uID09ICd0b2dnbGUnKSBkYXRhLnRvZ2dsZSgpXG4gICAgICBlbHNlIGlmIChvcHRpb24pIGRhdGEuc2V0U3RhdGUob3B0aW9uKVxuICAgIH0pXG4gIH1cblxuICB2YXIgb2xkID0gJC5mbi5idXR0b25cblxuICAkLmZuLmJ1dHRvbiAgICAgICAgICAgICA9IFBsdWdpblxuICAkLmZuLmJ1dHRvbi5Db25zdHJ1Y3RvciA9IEJ1dHRvblxuXG5cbiAgLy8gQlVUVE9OIE5PIENPTkZMSUNUXG4gIC8vID09PT09PT09PT09PT09PT09PVxuXG4gICQuZm4uYnV0dG9uLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5idXR0b24gPSBvbGRcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cblxuICAvLyBCVVRUT04gREFUQS1BUElcbiAgLy8gPT09PT09PT09PT09PT09XG5cbiAgJChkb2N1bWVudCkub24oJ2NsaWNrLmJzLmJ1dHRvbi5kYXRhLWFwaScsICdbZGF0YS10b2dnbGVePVwiYnV0dG9uXCJdJywgZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgJGJ0biA9ICQoZS50YXJnZXQpXG4gICAgaWYgKCEkYnRuLmhhc0NsYXNzKCdidG4nKSkgJGJ0biA9ICRidG4uY2xvc2VzdCgnLmJ0bicpXG4gICAgUGx1Z2luLmNhbGwoJGJ0biwgJ3RvZ2dsZScpXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gIH0pXG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IGNhcm91c2VsLmpzIHYzLjIuMFxuICogaHR0cDovL2dldGJvb3RzdHJhcC5jb20vamF2YXNjcmlwdC8jY2Fyb3VzZWxcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTEtMjAxNCBUd2l0dGVyLCBJbmMuXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS90d2JzL2Jvb3RzdHJhcC9ibG9iL21hc3Rlci9MSUNFTlNFKVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cblxuK2Z1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICAvLyBDQVJPVVNFTCBDTEFTUyBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgQ2Fyb3VzZWwgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMuJGVsZW1lbnQgICAgPSAkKGVsZW1lbnQpLm9uKCdrZXlkb3duLmJzLmNhcm91c2VsJywgJC5wcm94eSh0aGlzLmtleWRvd24sIHRoaXMpKVxuICAgIHRoaXMuJGluZGljYXRvcnMgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5jYXJvdXNlbC1pbmRpY2F0b3JzJylcbiAgICB0aGlzLm9wdGlvbnMgICAgID0gb3B0aW9uc1xuICAgIHRoaXMucGF1c2VkICAgICAgPVxuICAgIHRoaXMuc2xpZGluZyAgICAgPVxuICAgIHRoaXMuaW50ZXJ2YWwgICAgPVxuICAgIHRoaXMuJGFjdGl2ZSAgICAgPVxuICAgIHRoaXMuJGl0ZW1zICAgICAgPSBudWxsXG5cbiAgICB0aGlzLm9wdGlvbnMucGF1c2UgPT0gJ2hvdmVyJyAmJiB0aGlzLiRlbGVtZW50XG4gICAgICAub24oJ21vdXNlZW50ZXIuYnMuY2Fyb3VzZWwnLCAkLnByb3h5KHRoaXMucGF1c2UsIHRoaXMpKVxuICAgICAgLm9uKCdtb3VzZWxlYXZlLmJzLmNhcm91c2VsJywgJC5wcm94eSh0aGlzLmN5Y2xlLCB0aGlzKSlcbiAgfVxuXG4gIENhcm91c2VsLlZFUlNJT04gID0gJzMuMi4wJ1xuXG4gIENhcm91c2VsLkRFRkFVTFRTID0ge1xuICAgIGludGVydmFsOiA1MDAwLFxuICAgIHBhdXNlOiAnaG92ZXInLFxuICAgIHdyYXA6IHRydWVcbiAgfVxuXG4gIENhcm91c2VsLnByb3RvdHlwZS5rZXlkb3duID0gZnVuY3Rpb24gKGUpIHtcbiAgICBzd2l0Y2ggKGUud2hpY2gpIHtcbiAgICAgIGNhc2UgMzc6IHRoaXMucHJldigpOyBicmVha1xuICAgICAgY2FzZSAzOTogdGhpcy5uZXh0KCk7IGJyZWFrXG4gICAgICBkZWZhdWx0OiByZXR1cm5cbiAgICB9XG5cbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgfVxuXG4gIENhcm91c2VsLnByb3RvdHlwZS5jeWNsZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgZSB8fCAodGhpcy5wYXVzZWQgPSBmYWxzZSlcblxuICAgIHRoaXMuaW50ZXJ2YWwgJiYgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKVxuXG4gICAgdGhpcy5vcHRpb25zLmludGVydmFsXG4gICAgICAmJiAhdGhpcy5wYXVzZWRcbiAgICAgICYmICh0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwoJC5wcm94eSh0aGlzLm5leHQsIHRoaXMpLCB0aGlzLm9wdGlvbnMuaW50ZXJ2YWwpKVxuXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIENhcm91c2VsLnByb3RvdHlwZS5nZXRJdGVtSW5kZXggPSBmdW5jdGlvbiAoaXRlbSkge1xuICAgIHRoaXMuJGl0ZW1zID0gaXRlbS5wYXJlbnQoKS5jaGlsZHJlbignLml0ZW0nKVxuICAgIHJldHVybiB0aGlzLiRpdGVtcy5pbmRleChpdGVtIHx8IHRoaXMuJGFjdGl2ZSlcbiAgfVxuXG4gIENhcm91c2VsLnByb3RvdHlwZS50byA9IGZ1bmN0aW9uIChwb3MpIHtcbiAgICB2YXIgdGhhdCAgICAgICAgPSB0aGlzXG4gICAgdmFyIGFjdGl2ZUluZGV4ID0gdGhpcy5nZXRJdGVtSW5kZXgodGhpcy4kYWN0aXZlID0gdGhpcy4kZWxlbWVudC5maW5kKCcuaXRlbS5hY3RpdmUnKSlcblxuICAgIGlmIChwb3MgPiAodGhpcy4kaXRlbXMubGVuZ3RoIC0gMSkgfHwgcG9zIDwgMCkgcmV0dXJuXG5cbiAgICBpZiAodGhpcy5zbGlkaW5nKSAgICAgICByZXR1cm4gdGhpcy4kZWxlbWVudC5vbmUoJ3NsaWQuYnMuY2Fyb3VzZWwnLCBmdW5jdGlvbiAoKSB7IHRoYXQudG8ocG9zKSB9KSAvLyB5ZXMsIFwic2xpZFwiXG4gICAgaWYgKGFjdGl2ZUluZGV4ID09IHBvcykgcmV0dXJuIHRoaXMucGF1c2UoKS5jeWNsZSgpXG5cbiAgICByZXR1cm4gdGhpcy5zbGlkZShwb3MgPiBhY3RpdmVJbmRleCA/ICduZXh0JyA6ICdwcmV2JywgJCh0aGlzLiRpdGVtc1twb3NdKSlcbiAgfVxuXG4gIENhcm91c2VsLnByb3RvdHlwZS5wYXVzZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgZSB8fCAodGhpcy5wYXVzZWQgPSB0cnVlKVxuXG4gICAgaWYgKHRoaXMuJGVsZW1lbnQuZmluZCgnLm5leHQsIC5wcmV2JykubGVuZ3RoICYmICQuc3VwcG9ydC50cmFuc2l0aW9uKSB7XG4gICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoJC5zdXBwb3J0LnRyYW5zaXRpb24uZW5kKVxuICAgICAgdGhpcy5jeWNsZSh0cnVlKVxuICAgIH1cblxuICAgIHRoaXMuaW50ZXJ2YWwgPSBjbGVhckludGVydmFsKHRoaXMuaW50ZXJ2YWwpXG5cbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbiAgQ2Fyb3VzZWwucHJvdG90eXBlLm5leHQgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMuc2xpZGluZykgcmV0dXJuXG4gICAgcmV0dXJuIHRoaXMuc2xpZGUoJ25leHQnKVxuICB9XG5cbiAgQ2Fyb3VzZWwucHJvdG90eXBlLnByZXYgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMuc2xpZGluZykgcmV0dXJuXG4gICAgcmV0dXJuIHRoaXMuc2xpZGUoJ3ByZXYnKVxuICB9XG5cbiAgQ2Fyb3VzZWwucHJvdG90eXBlLnNsaWRlID0gZnVuY3Rpb24gKHR5cGUsIG5leHQpIHtcbiAgICB2YXIgJGFjdGl2ZSAgID0gdGhpcy4kZWxlbWVudC5maW5kKCcuaXRlbS5hY3RpdmUnKVxuICAgIHZhciAkbmV4dCAgICAgPSBuZXh0IHx8ICRhY3RpdmVbdHlwZV0oKVxuICAgIHZhciBpc0N5Y2xpbmcgPSB0aGlzLmludGVydmFsXG4gICAgdmFyIGRpcmVjdGlvbiA9IHR5cGUgPT0gJ25leHQnID8gJ2xlZnQnIDogJ3JpZ2h0J1xuICAgIHZhciBmYWxsYmFjayAgPSB0eXBlID09ICduZXh0JyA/ICdmaXJzdCcgOiAnbGFzdCdcbiAgICB2YXIgdGhhdCAgICAgID0gdGhpc1xuXG4gICAgaWYgKCEkbmV4dC5sZW5ndGgpIHtcbiAgICAgIGlmICghdGhpcy5vcHRpb25zLndyYXApIHJldHVyblxuICAgICAgJG5leHQgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5pdGVtJylbZmFsbGJhY2tdKClcbiAgICB9XG5cbiAgICBpZiAoJG5leHQuaGFzQ2xhc3MoJ2FjdGl2ZScpKSByZXR1cm4gKHRoaXMuc2xpZGluZyA9IGZhbHNlKVxuXG4gICAgdmFyIHJlbGF0ZWRUYXJnZXQgPSAkbmV4dFswXVxuICAgIHZhciBzbGlkZUV2ZW50ID0gJC5FdmVudCgnc2xpZGUuYnMuY2Fyb3VzZWwnLCB7XG4gICAgICByZWxhdGVkVGFyZ2V0OiByZWxhdGVkVGFyZ2V0LFxuICAgICAgZGlyZWN0aW9uOiBkaXJlY3Rpb25cbiAgICB9KVxuICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcihzbGlkZUV2ZW50KVxuICAgIGlmIChzbGlkZUV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cblxuICAgIHRoaXMuc2xpZGluZyA9IHRydWVcblxuICAgIGlzQ3ljbGluZyAmJiB0aGlzLnBhdXNlKClcblxuICAgIGlmICh0aGlzLiRpbmRpY2F0b3JzLmxlbmd0aCkge1xuICAgICAgdGhpcy4kaW5kaWNhdG9ycy5maW5kKCcuYWN0aXZlJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICB2YXIgJG5leHRJbmRpY2F0b3IgPSAkKHRoaXMuJGluZGljYXRvcnMuY2hpbGRyZW4oKVt0aGlzLmdldEl0ZW1JbmRleCgkbmV4dCldKVxuICAgICAgJG5leHRJbmRpY2F0b3IgJiYgJG5leHRJbmRpY2F0b3IuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgfVxuXG4gICAgdmFyIHNsaWRFdmVudCA9ICQuRXZlbnQoJ3NsaWQuYnMuY2Fyb3VzZWwnLCB7IHJlbGF0ZWRUYXJnZXQ6IHJlbGF0ZWRUYXJnZXQsIGRpcmVjdGlvbjogZGlyZWN0aW9uIH0pIC8vIHllcywgXCJzbGlkXCJcbiAgICBpZiAoJC5zdXBwb3J0LnRyYW5zaXRpb24gJiYgdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnc2xpZGUnKSkge1xuICAgICAgJG5leHQuYWRkQ2xhc3ModHlwZSlcbiAgICAgICRuZXh0WzBdLm9mZnNldFdpZHRoIC8vIGZvcmNlIHJlZmxvd1xuICAgICAgJGFjdGl2ZS5hZGRDbGFzcyhkaXJlY3Rpb24pXG4gICAgICAkbmV4dC5hZGRDbGFzcyhkaXJlY3Rpb24pXG4gICAgICAkYWN0aXZlXG4gICAgICAgIC5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAkbmV4dC5yZW1vdmVDbGFzcyhbdHlwZSwgZGlyZWN0aW9uXS5qb2luKCcgJykpLmFkZENsYXNzKCdhY3RpdmUnKVxuICAgICAgICAgICRhY3RpdmUucmVtb3ZlQ2xhc3MoWydhY3RpdmUnLCBkaXJlY3Rpb25dLmpvaW4oJyAnKSlcbiAgICAgICAgICB0aGF0LnNsaWRpbmcgPSBmYWxzZVxuICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhhdC4kZWxlbWVudC50cmlnZ2VyKHNsaWRFdmVudClcbiAgICAgICAgICB9LCAwKVxuICAgICAgICB9KVxuICAgICAgICAuZW11bGF0ZVRyYW5zaXRpb25FbmQoJGFjdGl2ZS5jc3MoJ3RyYW5zaXRpb24tZHVyYXRpb24nKS5zbGljZSgwLCAtMSkgKiAxMDAwKVxuICAgIH0gZWxzZSB7XG4gICAgICAkYWN0aXZlLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxuICAgICAgJG5leHQuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICB0aGlzLnNsaWRpbmcgPSBmYWxzZVxuICAgICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKHNsaWRFdmVudClcbiAgICB9XG5cbiAgICBpc0N5Y2xpbmcgJiYgdGhpcy5jeWNsZSgpXG5cbiAgICByZXR1cm4gdGhpc1xuICB9XG5cblxuICAvLyBDQVJPVVNFTCBQTFVHSU4gREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy5jYXJvdXNlbCcpXG4gICAgICB2YXIgb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBDYXJvdXNlbC5ERUZBVUxUUywgJHRoaXMuZGF0YSgpLCB0eXBlb2Ygb3B0aW9uID09ICdvYmplY3QnICYmIG9wdGlvbilcbiAgICAgIHZhciBhY3Rpb24gID0gdHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJyA/IG9wdGlvbiA6IG9wdGlvbnMuc2xpZGVcblxuICAgICAgaWYgKCFkYXRhKSAkdGhpcy5kYXRhKCdicy5jYXJvdXNlbCcsIChkYXRhID0gbmV3IENhcm91c2VsKHRoaXMsIG9wdGlvbnMpKSlcbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdudW1iZXInKSBkYXRhLnRvKG9wdGlvbilcbiAgICAgIGVsc2UgaWYgKGFjdGlvbikgZGF0YVthY3Rpb25dKClcbiAgICAgIGVsc2UgaWYgKG9wdGlvbnMuaW50ZXJ2YWwpIGRhdGEucGF1c2UoKS5jeWNsZSgpXG4gICAgfSlcbiAgfVxuXG4gIHZhciBvbGQgPSAkLmZuLmNhcm91c2VsXG5cbiAgJC5mbi5jYXJvdXNlbCAgICAgICAgICAgICA9IFBsdWdpblxuICAkLmZuLmNhcm91c2VsLkNvbnN0cnVjdG9yID0gQ2Fyb3VzZWxcblxuXG4gIC8vIENBUk9VU0VMIE5PIENPTkZMSUNUXG4gIC8vID09PT09PT09PT09PT09PT09PT09XG5cbiAgJC5mbi5jYXJvdXNlbC5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uY2Fyb3VzZWwgPSBvbGRcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cblxuICAvLyBDQVJPVVNFTCBEQVRBLUFQSVxuICAvLyA9PT09PT09PT09PT09PT09PVxuXG4gICQoZG9jdW1lbnQpLm9uKCdjbGljay5icy5jYXJvdXNlbC5kYXRhLWFwaScsICdbZGF0YS1zbGlkZV0sIFtkYXRhLXNsaWRlLXRvXScsIGZ1bmN0aW9uIChlKSB7XG4gICAgdmFyIGhyZWZcbiAgICB2YXIgJHRoaXMgICA9ICQodGhpcylcbiAgICB2YXIgJHRhcmdldCA9ICQoJHRoaXMuYXR0cignZGF0YS10YXJnZXQnKSB8fCAoaHJlZiA9ICR0aGlzLmF0dHIoJ2hyZWYnKSkgJiYgaHJlZi5yZXBsYWNlKC8uKig/PSNbXlxcc10rJCkvLCAnJykpIC8vIHN0cmlwIGZvciBpZTdcbiAgICBpZiAoISR0YXJnZXQuaGFzQ2xhc3MoJ2Nhcm91c2VsJykpIHJldHVyblxuICAgIHZhciBvcHRpb25zID0gJC5leHRlbmQoe30sICR0YXJnZXQuZGF0YSgpLCAkdGhpcy5kYXRhKCkpXG4gICAgdmFyIHNsaWRlSW5kZXggPSAkdGhpcy5hdHRyKCdkYXRhLXNsaWRlLXRvJylcbiAgICBpZiAoc2xpZGVJbmRleCkgb3B0aW9ucy5pbnRlcnZhbCA9IGZhbHNlXG5cbiAgICBQbHVnaW4uY2FsbCgkdGFyZ2V0LCBvcHRpb25zKVxuXG4gICAgaWYgKHNsaWRlSW5kZXgpIHtcbiAgICAgICR0YXJnZXQuZGF0YSgnYnMuY2Fyb3VzZWwnKS50byhzbGlkZUluZGV4KVxuICAgIH1cblxuICAgIGUucHJldmVudERlZmF1bHQoKVxuICB9KVxuXG4gICQod2luZG93KS5vbignbG9hZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAkKCdbZGF0YS1yaWRlPVwiY2Fyb3VzZWxcIl0nKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkY2Fyb3VzZWwgPSAkKHRoaXMpXG4gICAgICBQbHVnaW4uY2FsbCgkY2Fyb3VzZWwsICRjYXJvdXNlbC5kYXRhKCkpXG4gICAgfSlcbiAgfSlcblxufShqUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEJvb3RzdHJhcDogY29sbGFwc2UuanMgdjMuMi4wXG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyNjb2xsYXBzZVxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE0IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIENPTExBUFNFIFBVQkxJQyBDTEFTUyBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgdmFyIENvbGxhcHNlID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLiRlbGVtZW50ICAgICAgPSAkKGVsZW1lbnQpXG4gICAgdGhpcy5vcHRpb25zICAgICAgID0gJC5leHRlbmQoe30sIENvbGxhcHNlLkRFRkFVTFRTLCBvcHRpb25zKVxuICAgIHRoaXMudHJhbnNpdGlvbmluZyA9IG51bGxcblxuICAgIGlmICh0aGlzLm9wdGlvbnMucGFyZW50KSB0aGlzLiRwYXJlbnQgPSAkKHRoaXMub3B0aW9ucy5wYXJlbnQpXG4gICAgaWYgKHRoaXMub3B0aW9ucy50b2dnbGUpIHRoaXMudG9nZ2xlKClcbiAgfVxuXG4gIENvbGxhcHNlLlZFUlNJT04gID0gJzMuMi4wJ1xuXG4gIENvbGxhcHNlLkRFRkFVTFRTID0ge1xuICAgIHRvZ2dsZTogdHJ1ZVxuICB9XG5cbiAgQ29sbGFwc2UucHJvdG90eXBlLmRpbWVuc2lvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgaGFzV2lkdGggPSB0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCd3aWR0aCcpXG4gICAgcmV0dXJuIGhhc1dpZHRoID8gJ3dpZHRoJyA6ICdoZWlnaHQnXG4gIH1cblxuICBDb2xsYXBzZS5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy50cmFuc2l0aW9uaW5nIHx8IHRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ2luJykpIHJldHVyblxuXG4gICAgdmFyIHN0YXJ0RXZlbnQgPSAkLkV2ZW50KCdzaG93LmJzLmNvbGxhcHNlJylcbiAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoc3RhcnRFdmVudClcbiAgICBpZiAoc3RhcnRFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkgcmV0dXJuXG5cbiAgICB2YXIgYWN0aXZlcyA9IHRoaXMuJHBhcmVudCAmJiB0aGlzLiRwYXJlbnQuZmluZCgnPiAucGFuZWwgPiAuaW4nKVxuXG4gICAgaWYgKGFjdGl2ZXMgJiYgYWN0aXZlcy5sZW5ndGgpIHtcbiAgICAgIHZhciBoYXNEYXRhID0gYWN0aXZlcy5kYXRhKCdicy5jb2xsYXBzZScpXG4gICAgICBpZiAoaGFzRGF0YSAmJiBoYXNEYXRhLnRyYW5zaXRpb25pbmcpIHJldHVyblxuICAgICAgUGx1Z2luLmNhbGwoYWN0aXZlcywgJ2hpZGUnKVxuICAgICAgaGFzRGF0YSB8fCBhY3RpdmVzLmRhdGEoJ2JzLmNvbGxhcHNlJywgbnVsbClcbiAgICB9XG5cbiAgICB2YXIgZGltZW5zaW9uID0gdGhpcy5kaW1lbnNpb24oKVxuXG4gICAgdGhpcy4kZWxlbWVudFxuICAgICAgLnJlbW92ZUNsYXNzKCdjb2xsYXBzZScpXG4gICAgICAuYWRkQ2xhc3MoJ2NvbGxhcHNpbmcnKVtkaW1lbnNpb25dKDApXG5cbiAgICB0aGlzLnRyYW5zaXRpb25pbmcgPSAxXG5cbiAgICB2YXIgY29tcGxldGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB0aGlzLiRlbGVtZW50XG4gICAgICAgIC5yZW1vdmVDbGFzcygnY29sbGFwc2luZycpXG4gICAgICAgIC5hZGRDbGFzcygnY29sbGFwc2UgaW4nKVtkaW1lbnNpb25dKCcnKVxuICAgICAgdGhpcy50cmFuc2l0aW9uaW5nID0gMFxuICAgICAgdGhpcy4kZWxlbWVudFxuICAgICAgICAudHJpZ2dlcignc2hvd24uYnMuY29sbGFwc2UnKVxuICAgIH1cblxuICAgIGlmICghJC5zdXBwb3J0LnRyYW5zaXRpb24pIHJldHVybiBjb21wbGV0ZS5jYWxsKHRoaXMpXG5cbiAgICB2YXIgc2Nyb2xsU2l6ZSA9ICQuY2FtZWxDYXNlKFsnc2Nyb2xsJywgZGltZW5zaW9uXS5qb2luKCctJykpXG5cbiAgICB0aGlzLiRlbGVtZW50XG4gICAgICAub25lKCdic1RyYW5zaXRpb25FbmQnLCAkLnByb3h5KGNvbXBsZXRlLCB0aGlzKSlcbiAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZCgzNTApW2RpbWVuc2lvbl0odGhpcy4kZWxlbWVudFswXVtzY3JvbGxTaXplXSlcbiAgfVxuXG4gIENvbGxhcHNlLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLnRyYW5zaXRpb25pbmcgfHwgIXRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ2luJykpIHJldHVyblxuXG4gICAgdmFyIHN0YXJ0RXZlbnQgPSAkLkV2ZW50KCdoaWRlLmJzLmNvbGxhcHNlJylcbiAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoc3RhcnRFdmVudClcbiAgICBpZiAoc3RhcnRFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkgcmV0dXJuXG5cbiAgICB2YXIgZGltZW5zaW9uID0gdGhpcy5kaW1lbnNpb24oKVxuXG4gICAgdGhpcy4kZWxlbWVudFtkaW1lbnNpb25dKHRoaXMuJGVsZW1lbnRbZGltZW5zaW9uXSgpKVswXS5vZmZzZXRIZWlnaHRcblxuICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgIC5hZGRDbGFzcygnY29sbGFwc2luZycpXG4gICAgICAucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNlJylcbiAgICAgIC5yZW1vdmVDbGFzcygnaW4nKVxuXG4gICAgdGhpcy50cmFuc2l0aW9uaW5nID0gMVxuXG4gICAgdmFyIGNvbXBsZXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy50cmFuc2l0aW9uaW5nID0gMFxuICAgICAgdGhpcy4kZWxlbWVudFxuICAgICAgICAudHJpZ2dlcignaGlkZGVuLmJzLmNvbGxhcHNlJylcbiAgICAgICAgLnJlbW92ZUNsYXNzKCdjb2xsYXBzaW5nJylcbiAgICAgICAgLmFkZENsYXNzKCdjb2xsYXBzZScpXG4gICAgfVxuXG4gICAgaWYgKCEkLnN1cHBvcnQudHJhbnNpdGlvbikgcmV0dXJuIGNvbXBsZXRlLmNhbGwodGhpcylcblxuICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgIFtkaW1lbnNpb25dKDApXG4gICAgICAub25lKCdic1RyYW5zaXRpb25FbmQnLCAkLnByb3h5KGNvbXBsZXRlLCB0aGlzKSlcbiAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZCgzNTApXG4gIH1cblxuICBDb2xsYXBzZS5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXNbdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnaW4nKSA/ICdoaWRlJyA6ICdzaG93J10oKVxuICB9XG5cblxuICAvLyBDT0xMQVBTRSBQTFVHSU4gREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy5jb2xsYXBzZScpXG4gICAgICB2YXIgb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBDb2xsYXBzZS5ERUZBVUxUUywgJHRoaXMuZGF0YSgpLCB0eXBlb2Ygb3B0aW9uID09ICdvYmplY3QnICYmIG9wdGlvbilcblxuICAgICAgaWYgKCFkYXRhICYmIG9wdGlvbnMudG9nZ2xlICYmIG9wdGlvbiA9PSAnc2hvdycpIG9wdGlvbiA9ICFvcHRpb25cbiAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnYnMuY29sbGFwc2UnLCAoZGF0YSA9IG5ldyBDb2xsYXBzZSh0aGlzLCBvcHRpb25zKSkpXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dKClcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4uY29sbGFwc2VcblxuICAkLmZuLmNvbGxhcHNlICAgICAgICAgICAgID0gUGx1Z2luXG4gICQuZm4uY29sbGFwc2UuQ29uc3RydWN0b3IgPSBDb2xsYXBzZVxuXG5cbiAgLy8gQ09MTEFQU0UgTk8gQ09ORkxJQ1RcbiAgLy8gPT09PT09PT09PT09PT09PT09PT1cblxuICAkLmZuLmNvbGxhcHNlLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5jb2xsYXBzZSA9IG9sZFxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuXG4gIC8vIENPTExBUFNFIERBVEEtQVBJXG4gIC8vID09PT09PT09PT09PT09PT09XG5cbiAgJChkb2N1bWVudCkub24oJ2NsaWNrLmJzLmNvbGxhcHNlLmRhdGEtYXBpJywgJ1tkYXRhLXRvZ2dsZT1cImNvbGxhcHNlXCJdJywgZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgaHJlZlxuICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgIHZhciB0YXJnZXQgID0gJHRoaXMuYXR0cignZGF0YS10YXJnZXQnKVxuICAgICAgICB8fCBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgfHwgKGhyZWYgPSAkdGhpcy5hdHRyKCdocmVmJykpICYmIGhyZWYucmVwbGFjZSgvLiooPz0jW15cXHNdKyQpLywgJycpIC8vIHN0cmlwIGZvciBpZTdcbiAgICB2YXIgJHRhcmdldCA9ICQodGFyZ2V0KVxuICAgIHZhciBkYXRhICAgID0gJHRhcmdldC5kYXRhKCdicy5jb2xsYXBzZScpXG4gICAgdmFyIG9wdGlvbiAgPSBkYXRhID8gJ3RvZ2dsZScgOiAkdGhpcy5kYXRhKClcbiAgICB2YXIgcGFyZW50ICA9ICR0aGlzLmF0dHIoJ2RhdGEtcGFyZW50JylcbiAgICB2YXIgJHBhcmVudCA9IHBhcmVudCAmJiAkKHBhcmVudClcblxuICAgIGlmICghZGF0YSB8fCAhZGF0YS50cmFuc2l0aW9uaW5nKSB7XG4gICAgICBpZiAoJHBhcmVudCkgJHBhcmVudC5maW5kKCdbZGF0YS10b2dnbGU9XCJjb2xsYXBzZVwiXVtkYXRhLXBhcmVudD1cIicgKyBwYXJlbnQgKyAnXCJdJykubm90KCR0aGlzKS5hZGRDbGFzcygnY29sbGFwc2VkJylcbiAgICAgICR0aGlzWyR0YXJnZXQuaGFzQ2xhc3MoJ2luJykgPyAnYWRkQ2xhc3MnIDogJ3JlbW92ZUNsYXNzJ10oJ2NvbGxhcHNlZCcpXG4gICAgfVxuXG4gICAgUGx1Z2luLmNhbGwoJHRhcmdldCwgb3B0aW9uKVxuICB9KVxuXG59KGpRdWVyeSk7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQm9vdHN0cmFwOiBkcm9wZG93bi5qcyB2My4yLjBcbiAqIGh0dHA6Ly9nZXRib290c3RyYXAuY29tL2phdmFzY3JpcHQvI2Ryb3Bkb3duc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE0IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIERST1BET1dOIENMQVNTIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIHZhciBiYWNrZHJvcCA9ICcuZHJvcGRvd24tYmFja2Ryb3AnXG4gIHZhciB0b2dnbGUgICA9ICdbZGF0YS10b2dnbGU9XCJkcm9wZG93blwiXSdcbiAgdmFyIERyb3Bkb3duID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAkKGVsZW1lbnQpLm9uKCdjbGljay5icy5kcm9wZG93bicsIHRoaXMudG9nZ2xlKVxuICB9XG5cbiAgRHJvcGRvd24uVkVSU0lPTiA9ICczLjIuMCdcblxuICBEcm9wZG93bi5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgJHRoaXMgPSAkKHRoaXMpXG5cbiAgICBpZiAoJHRoaXMuaXMoJy5kaXNhYmxlZCwgOmRpc2FibGVkJykpIHJldHVyblxuXG4gICAgdmFyICRwYXJlbnQgID0gZ2V0UGFyZW50KCR0aGlzKVxuICAgIHZhciBpc0FjdGl2ZSA9ICRwYXJlbnQuaGFzQ2xhc3MoJ29wZW4nKVxuXG4gICAgY2xlYXJNZW51cygpXG5cbiAgICBpZiAoIWlzQWN0aXZlKSB7XG4gICAgICBpZiAoJ29udG91Y2hzdGFydCcgaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmICEkcGFyZW50LmNsb3Nlc3QoJy5uYXZiYXItbmF2JykubGVuZ3RoKSB7XG4gICAgICAgIC8vIGlmIG1vYmlsZSB3ZSB1c2UgYSBiYWNrZHJvcCBiZWNhdXNlIGNsaWNrIGV2ZW50cyBkb24ndCBkZWxlZ2F0ZVxuICAgICAgICAkKCc8ZGl2IGNsYXNzPVwiZHJvcGRvd24tYmFja2Ryb3BcIi8+JykuaW5zZXJ0QWZ0ZXIoJCh0aGlzKSkub24oJ2NsaWNrJywgY2xlYXJNZW51cylcbiAgICAgIH1cblxuICAgICAgdmFyIHJlbGF0ZWRUYXJnZXQgPSB7IHJlbGF0ZWRUYXJnZXQ6IHRoaXMgfVxuICAgICAgJHBhcmVudC50cmlnZ2VyKGUgPSAkLkV2ZW50KCdzaG93LmJzLmRyb3Bkb3duJywgcmVsYXRlZFRhcmdldCkpXG5cbiAgICAgIGlmIChlLmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cblxuICAgICAgJHRoaXMudHJpZ2dlcignZm9jdXMnKVxuXG4gICAgICAkcGFyZW50XG4gICAgICAgIC50b2dnbGVDbGFzcygnb3BlbicpXG4gICAgICAgIC50cmlnZ2VyKCdzaG93bi5icy5kcm9wZG93bicsIHJlbGF0ZWRUYXJnZXQpXG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICBEcm9wZG93bi5wcm90b3R5cGUua2V5ZG93biA9IGZ1bmN0aW9uIChlKSB7XG4gICAgaWYgKCEvKDM4fDQwfDI3KS8udGVzdChlLmtleUNvZGUpKSByZXR1cm5cblxuICAgIHZhciAkdGhpcyA9ICQodGhpcylcblxuICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIGUuc3RvcFByb3BhZ2F0aW9uKClcblxuICAgIGlmICgkdGhpcy5pcygnLmRpc2FibGVkLCA6ZGlzYWJsZWQnKSkgcmV0dXJuXG5cbiAgICB2YXIgJHBhcmVudCAgPSBnZXRQYXJlbnQoJHRoaXMpXG4gICAgdmFyIGlzQWN0aXZlID0gJHBhcmVudC5oYXNDbGFzcygnb3BlbicpXG5cbiAgICBpZiAoIWlzQWN0aXZlIHx8IChpc0FjdGl2ZSAmJiBlLmtleUNvZGUgPT0gMjcpKSB7XG4gICAgICBpZiAoZS53aGljaCA9PSAyNykgJHBhcmVudC5maW5kKHRvZ2dsZSkudHJpZ2dlcignZm9jdXMnKVxuICAgICAgcmV0dXJuICR0aGlzLnRyaWdnZXIoJ2NsaWNrJylcbiAgICB9XG5cbiAgICB2YXIgZGVzYyA9ICcgbGk6bm90KC5kaXZpZGVyKTp2aXNpYmxlIGEnXG4gICAgdmFyICRpdGVtcyA9ICRwYXJlbnQuZmluZCgnW3JvbGU9XCJtZW51XCJdJyArIGRlc2MgKyAnLCBbcm9sZT1cImxpc3Rib3hcIl0nICsgZGVzYylcblxuICAgIGlmICghJGl0ZW1zLmxlbmd0aCkgcmV0dXJuXG5cbiAgICB2YXIgaW5kZXggPSAkaXRlbXMuaW5kZXgoJGl0ZW1zLmZpbHRlcignOmZvY3VzJykpXG5cbiAgICBpZiAoZS5rZXlDb2RlID09IDM4ICYmIGluZGV4ID4gMCkgICAgICAgICAgICAgICAgIGluZGV4LS0gICAgICAgICAgICAgICAgICAgICAgICAvLyB1cFxuICAgIGlmIChlLmtleUNvZGUgPT0gNDAgJiYgaW5kZXggPCAkaXRlbXMubGVuZ3RoIC0gMSkgaW5kZXgrKyAgICAgICAgICAgICAgICAgICAgICAgIC8vIGRvd25cbiAgICBpZiAoIX5pbmRleCkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID0gMFxuXG4gICAgJGl0ZW1zLmVxKGluZGV4KS50cmlnZ2VyKCdmb2N1cycpXG4gIH1cblxuICBmdW5jdGlvbiBjbGVhck1lbnVzKGUpIHtcbiAgICBpZiAoZSAmJiBlLndoaWNoID09PSAzKSByZXR1cm5cbiAgICAkKGJhY2tkcm9wKS5yZW1vdmUoKVxuICAgICQodG9nZ2xlKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkcGFyZW50ID0gZ2V0UGFyZW50KCQodGhpcykpXG4gICAgICB2YXIgcmVsYXRlZFRhcmdldCA9IHsgcmVsYXRlZFRhcmdldDogdGhpcyB9XG4gICAgICBpZiAoISRwYXJlbnQuaGFzQ2xhc3MoJ29wZW4nKSkgcmV0dXJuXG4gICAgICAkcGFyZW50LnRyaWdnZXIoZSA9ICQuRXZlbnQoJ2hpZGUuYnMuZHJvcGRvd24nLCByZWxhdGVkVGFyZ2V0KSlcbiAgICAgIGlmIChlLmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cbiAgICAgICRwYXJlbnQucmVtb3ZlQ2xhc3MoJ29wZW4nKS50cmlnZ2VyKCdoaWRkZW4uYnMuZHJvcGRvd24nLCByZWxhdGVkVGFyZ2V0KVxuICAgIH0pXG4gIH1cblxuICBmdW5jdGlvbiBnZXRQYXJlbnQoJHRoaXMpIHtcbiAgICB2YXIgc2VsZWN0b3IgPSAkdGhpcy5hdHRyKCdkYXRhLXRhcmdldCcpXG5cbiAgICBpZiAoIXNlbGVjdG9yKSB7XG4gICAgICBzZWxlY3RvciA9ICR0aGlzLmF0dHIoJ2hyZWYnKVxuICAgICAgc2VsZWN0b3IgPSBzZWxlY3RvciAmJiAvI1tBLVphLXpdLy50ZXN0KHNlbGVjdG9yKSAmJiBzZWxlY3Rvci5yZXBsYWNlKC8uKig/PSNbXlxcc10qJCkvLCAnJykgLy8gc3RyaXAgZm9yIGllN1xuICAgIH1cblxuICAgIHZhciAkcGFyZW50ID0gc2VsZWN0b3IgJiYgJChzZWxlY3RvcilcblxuICAgIHJldHVybiAkcGFyZW50ICYmICRwYXJlbnQubGVuZ3RoID8gJHBhcmVudCA6ICR0aGlzLnBhcmVudCgpXG4gIH1cblxuXG4gIC8vIERST1BET1dOIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgZnVuY3Rpb24gUGx1Z2luKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgID0gJHRoaXMuZGF0YSgnYnMuZHJvcGRvd24nKVxuXG4gICAgICBpZiAoIWRhdGEpICR0aGlzLmRhdGEoJ2JzLmRyb3Bkb3duJywgKGRhdGEgPSBuZXcgRHJvcGRvd24odGhpcykpKVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT0gJ3N0cmluZycpIGRhdGFbb3B0aW9uXS5jYWxsKCR0aGlzKVxuICAgIH0pXG4gIH1cblxuICB2YXIgb2xkID0gJC5mbi5kcm9wZG93blxuXG4gICQuZm4uZHJvcGRvd24gICAgICAgICAgICAgPSBQbHVnaW5cbiAgJC5mbi5kcm9wZG93bi5Db25zdHJ1Y3RvciA9IERyb3Bkb3duXG5cblxuICAvLyBEUk9QRE9XTiBOTyBDT05GTElDVFxuICAvLyA9PT09PT09PT09PT09PT09PT09PVxuXG4gICQuZm4uZHJvcGRvd24ubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLmRyb3Bkb3duID0gb2xkXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG5cbiAgLy8gQVBQTFkgVE8gU1RBTkRBUkQgRFJPUERPV04gRUxFTUVOVFNcbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICAkKGRvY3VtZW50KVxuICAgIC5vbignY2xpY2suYnMuZHJvcGRvd24uZGF0YS1hcGknLCBjbGVhck1lbnVzKVxuICAgIC5vbignY2xpY2suYnMuZHJvcGRvd24uZGF0YS1hcGknLCAnLmRyb3Bkb3duIGZvcm0nLCBmdW5jdGlvbiAoZSkgeyBlLnN0b3BQcm9wYWdhdGlvbigpIH0pXG4gICAgLm9uKCdjbGljay5icy5kcm9wZG93bi5kYXRhLWFwaScsIHRvZ2dsZSwgRHJvcGRvd24ucHJvdG90eXBlLnRvZ2dsZSlcbiAgICAub24oJ2tleWRvd24uYnMuZHJvcGRvd24uZGF0YS1hcGknLCB0b2dnbGUgKyAnLCBbcm9sZT1cIm1lbnVcIl0sIFtyb2xlPVwibGlzdGJveFwiXScsIERyb3Bkb3duLnByb3RvdHlwZS5rZXlkb3duKVxuXG59KGpRdWVyeSk7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQm9vdHN0cmFwOiB0YWIuanMgdjMuMi4wXG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyN0YWJzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDExLTIwMTQgVHdpdHRlciwgSW5jLlxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5cbitmdW5jdGlvbiAoJCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gVEFCIENMQVNTIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT1cblxuICB2YXIgVGFiID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICB0aGlzLmVsZW1lbnQgPSAkKGVsZW1lbnQpXG4gIH1cblxuICBUYWIuVkVSU0lPTiA9ICczLjIuMCdcblxuICBUYWIucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyICR0aGlzICAgID0gdGhpcy5lbGVtZW50XG4gICAgdmFyICR1bCAgICAgID0gJHRoaXMuY2xvc2VzdCgndWw6bm90KC5kcm9wZG93bi1tZW51KScpXG4gICAgdmFyIHNlbGVjdG9yID0gJHRoaXMuZGF0YSgndGFyZ2V0JylcblxuICAgIGlmICghc2VsZWN0b3IpIHtcbiAgICAgIHNlbGVjdG9yID0gJHRoaXMuYXR0cignaHJlZicpXG4gICAgICBzZWxlY3RvciA9IHNlbGVjdG9yICYmIHNlbGVjdG9yLnJlcGxhY2UoLy4qKD89I1teXFxzXSokKS8sICcnKSAvLyBzdHJpcCBmb3IgaWU3XG4gICAgfVxuXG4gICAgaWYgKCR0aGlzLnBhcmVudCgnbGknKS5oYXNDbGFzcygnYWN0aXZlJykpIHJldHVyblxuXG4gICAgdmFyIHByZXZpb3VzID0gJHVsLmZpbmQoJy5hY3RpdmU6bGFzdCBhJylbMF1cbiAgICB2YXIgZSAgICAgICAgPSAkLkV2ZW50KCdzaG93LmJzLnRhYicsIHtcbiAgICAgIHJlbGF0ZWRUYXJnZXQ6IHByZXZpb3VzXG4gICAgfSlcblxuICAgICR0aGlzLnRyaWdnZXIoZSlcblxuICAgIGlmIChlLmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cblxuICAgIHZhciAkdGFyZ2V0ID0gJChzZWxlY3RvcilcblxuICAgIHRoaXMuYWN0aXZhdGUoJHRoaXMuY2xvc2VzdCgnbGknKSwgJHVsKVxuICAgIHRoaXMuYWN0aXZhdGUoJHRhcmdldCwgJHRhcmdldC5wYXJlbnQoKSwgZnVuY3Rpb24gKCkge1xuICAgICAgJHRoaXMudHJpZ2dlcih7XG4gICAgICAgIHR5cGU6ICdzaG93bi5icy50YWInLFxuICAgICAgICByZWxhdGVkVGFyZ2V0OiBwcmV2aW91c1xuICAgICAgfSlcbiAgICB9KVxuICB9XG5cbiAgVGFiLnByb3RvdHlwZS5hY3RpdmF0ZSA9IGZ1bmN0aW9uIChlbGVtZW50LCBjb250YWluZXIsIGNhbGxiYWNrKSB7XG4gICAgdmFyICRhY3RpdmUgICAgPSBjb250YWluZXIuZmluZCgnPiAuYWN0aXZlJylcbiAgICB2YXIgdHJhbnNpdGlvbiA9IGNhbGxiYWNrXG4gICAgICAmJiAkLnN1cHBvcnQudHJhbnNpdGlvblxuICAgICAgJiYgJGFjdGl2ZS5oYXNDbGFzcygnZmFkZScpXG5cbiAgICBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgJGFjdGl2ZVxuICAgICAgICAucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAgIC5maW5kKCc+IC5kcm9wZG93bi1tZW51ID4gLmFjdGl2ZScpXG4gICAgICAgIC5yZW1vdmVDbGFzcygnYWN0aXZlJylcblxuICAgICAgZWxlbWVudC5hZGRDbGFzcygnYWN0aXZlJylcblxuICAgICAgaWYgKHRyYW5zaXRpb24pIHtcbiAgICAgICAgZWxlbWVudFswXS5vZmZzZXRXaWR0aCAvLyByZWZsb3cgZm9yIHRyYW5zaXRpb25cbiAgICAgICAgZWxlbWVudC5hZGRDbGFzcygnaW4nKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZWxlbWVudC5yZW1vdmVDbGFzcygnZmFkZScpXG4gICAgICB9XG5cbiAgICAgIGlmIChlbGVtZW50LnBhcmVudCgnLmRyb3Bkb3duLW1lbnUnKSkge1xuICAgICAgICBlbGVtZW50LmNsb3Nlc3QoJ2xpLmRyb3Bkb3duJykuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICB9XG5cbiAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKClcbiAgICB9XG5cbiAgICB0cmFuc2l0aW9uID9cbiAgICAgICRhY3RpdmVcbiAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgbmV4dClcbiAgICAgICAgLmVtdWxhdGVUcmFuc2l0aW9uRW5kKDE1MCkgOlxuICAgICAgbmV4dCgpXG5cbiAgICAkYWN0aXZlLnJlbW92ZUNsYXNzKCdpbicpXG4gIH1cblxuXG4gIC8vIFRBQiBQTFVHSU4gREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiBQbHVnaW4ob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMgPSAkKHRoaXMpXG4gICAgICB2YXIgZGF0YSAgPSAkdGhpcy5kYXRhKCdicy50YWInKVxuXG4gICAgICBpZiAoIWRhdGEpICR0aGlzLmRhdGEoJ2JzLnRhYicsIChkYXRhID0gbmV3IFRhYih0aGlzKSkpXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dKClcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4udGFiXG5cbiAgJC5mbi50YWIgICAgICAgICAgICAgPSBQbHVnaW5cbiAgJC5mbi50YWIuQ29uc3RydWN0b3IgPSBUYWJcblxuXG4gIC8vIFRBQiBOTyBDT05GTElDVFxuICAvLyA9PT09PT09PT09PT09PT1cblxuICAkLmZuLnRhYi5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4udGFiID0gb2xkXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG5cbiAgLy8gVEFCIERBVEEtQVBJXG4gIC8vID09PT09PT09PT09PVxuXG4gICQoZG9jdW1lbnQpLm9uKCdjbGljay5icy50YWIuZGF0YS1hcGknLCAnW2RhdGEtdG9nZ2xlPVwidGFiXCJdLCBbZGF0YS10b2dnbGU9XCJwaWxsXCJdJywgZnVuY3Rpb24gKGUpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICBQbHVnaW4uY2FsbCgkKHRoaXMpLCAnc2hvdycpXG4gIH0pXG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IHRyYW5zaXRpb24uanMgdjMuMi4wXG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyN0cmFuc2l0aW9uc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE0IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIENTUyBUUkFOU0lUSU9OIFNVUFBPUlQgKFNob3V0b3V0OiBodHRwOi8vd3d3Lm1vZGVybml6ci5jb20vKVxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiB0cmFuc2l0aW9uRW5kKCkge1xuICAgIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Jvb3RzdHJhcCcpXG5cbiAgICB2YXIgdHJhbnNFbmRFdmVudE5hbWVzID0ge1xuICAgICAgV2Via2l0VHJhbnNpdGlvbiA6ICd3ZWJraXRUcmFuc2l0aW9uRW5kJyxcbiAgICAgIE1velRyYW5zaXRpb24gICAgOiAndHJhbnNpdGlvbmVuZCcsXG4gICAgICBPVHJhbnNpdGlvbiAgICAgIDogJ29UcmFuc2l0aW9uRW5kIG90cmFuc2l0aW9uZW5kJyxcbiAgICAgIHRyYW5zaXRpb24gICAgICAgOiAndHJhbnNpdGlvbmVuZCdcbiAgICB9XG5cbiAgICBmb3IgKHZhciBuYW1lIGluIHRyYW5zRW5kRXZlbnROYW1lcykge1xuICAgICAgaWYgKGVsLnN0eWxlW25hbWVdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHsgZW5kOiB0cmFuc0VuZEV2ZW50TmFtZXNbbmFtZV0gfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZSAvLyBleHBsaWNpdCBmb3IgaWU4ICggIC5fLilcbiAgfVxuXG4gIC8vIGh0dHA6Ly9ibG9nLmFsZXhtYWNjYXcuY29tL2Nzcy10cmFuc2l0aW9uc1xuICAkLmZuLmVtdWxhdGVUcmFuc2l0aW9uRW5kID0gZnVuY3Rpb24gKGR1cmF0aW9uKSB7XG4gICAgdmFyIGNhbGxlZCA9IGZhbHNlXG4gICAgdmFyICRlbCA9IHRoaXNcbiAgICAkKHRoaXMpLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgZnVuY3Rpb24gKCkgeyBjYWxsZWQgPSB0cnVlIH0pXG4gICAgdmFyIGNhbGxiYWNrID0gZnVuY3Rpb24gKCkgeyBpZiAoIWNhbGxlZCkgJCgkZWwpLnRyaWdnZXIoJC5zdXBwb3J0LnRyYW5zaXRpb24uZW5kKSB9XG4gICAgc2V0VGltZW91dChjYWxsYmFjaywgZHVyYXRpb24pXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gICQoZnVuY3Rpb24gKCkge1xuICAgICQuc3VwcG9ydC50cmFuc2l0aW9uID0gdHJhbnNpdGlvbkVuZCgpXG5cbiAgICBpZiAoISQuc3VwcG9ydC50cmFuc2l0aW9uKSByZXR1cm5cblxuICAgICQuZXZlbnQuc3BlY2lhbC5ic1RyYW5zaXRpb25FbmQgPSB7XG4gICAgICBiaW5kVHlwZTogJC5zdXBwb3J0LnRyYW5zaXRpb24uZW5kLFxuICAgICAgZGVsZWdhdGVUeXBlOiAkLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQsXG4gICAgICBoYW5kbGU6IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIGlmICgkKGUudGFyZ2V0KS5pcyh0aGlzKSkgcmV0dXJuIGUuaGFuZGxlT2JqLmhhbmRsZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKVxuICAgICAgfVxuICAgIH1cbiAgfSlcblxufShqUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIEJvb3RzdHJhcDogc2Nyb2xsc3B5LmpzIHYzLjIuMFxuICogaHR0cDovL2dldGJvb3RzdHJhcC5jb20vamF2YXNjcmlwdC8jc2Nyb2xsc3B5XG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDExLTIwMTQgVHdpdHRlciwgSW5jLlxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5cbitmdW5jdGlvbiAoJCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gU0NST0xMU1BZIENMQVNTIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiBTY3JvbGxTcHkoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHZhciBwcm9jZXNzICA9ICQucHJveHkodGhpcy5wcm9jZXNzLCB0aGlzKVxuXG4gICAgdGhpcy4kYm9keSAgICAgICAgICA9ICQoJ2JvZHknKVxuICAgIHRoaXMuJHNjcm9sbEVsZW1lbnQgPSAkKGVsZW1lbnQpLmlzKCdib2R5JykgPyAkKHdpbmRvdykgOiAkKGVsZW1lbnQpXG4gICAgdGhpcy5vcHRpb25zICAgICAgICA9ICQuZXh0ZW5kKHt9LCBTY3JvbGxTcHkuREVGQVVMVFMsIG9wdGlvbnMpXG4gICAgdGhpcy5zZWxlY3RvciAgICAgICA9ICh0aGlzLm9wdGlvbnMudGFyZ2V0IHx8ICcnKSArICcgLm5hdiBsaSA+IGEnXG4gICAgdGhpcy5vZmZzZXRzICAgICAgICA9IFtdXG4gICAgdGhpcy50YXJnZXRzICAgICAgICA9IFtdXG4gICAgdGhpcy5hY3RpdmVUYXJnZXQgICA9IG51bGxcbiAgICB0aGlzLnNjcm9sbEhlaWdodCAgID0gMFxuXG4gICAgdGhpcy4kc2Nyb2xsRWxlbWVudC5vbignc2Nyb2xsLmJzLnNjcm9sbHNweScsIHByb2Nlc3MpXG4gICAgdGhpcy5yZWZyZXNoKClcbiAgICB0aGlzLnByb2Nlc3MoKVxuICB9XG5cbiAgU2Nyb2xsU3B5LlZFUlNJT04gID0gJzMuMi4wJ1xuXG4gIFNjcm9sbFNweS5ERUZBVUxUUyA9IHtcbiAgICBvZmZzZXQ6IDEwXG4gIH1cblxuICBTY3JvbGxTcHkucHJvdG90eXBlLmdldFNjcm9sbEhlaWdodCA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy4kc2Nyb2xsRWxlbWVudFswXS5zY3JvbGxIZWlnaHQgfHwgTWF0aC5tYXgodGhpcy4kYm9keVswXS5zY3JvbGxIZWlnaHQsIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxIZWlnaHQpXG4gIH1cblxuICBTY3JvbGxTcHkucHJvdG90eXBlLnJlZnJlc2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIG9mZnNldE1ldGhvZCA9ICdvZmZzZXQnXG4gICAgdmFyIG9mZnNldEJhc2UgICA9IDBcblxuICAgIGlmICghJC5pc1dpbmRvdyh0aGlzLiRzY3JvbGxFbGVtZW50WzBdKSkge1xuICAgICAgb2Zmc2V0TWV0aG9kID0gJ3Bvc2l0aW9uJ1xuICAgICAgb2Zmc2V0QmFzZSAgID0gdGhpcy4kc2Nyb2xsRWxlbWVudC5zY3JvbGxUb3AoKVxuICAgIH1cblxuICAgIHRoaXMub2Zmc2V0cyA9IFtdXG4gICAgdGhpcy50YXJnZXRzID0gW11cbiAgICB0aGlzLnNjcm9sbEhlaWdodCA9IHRoaXMuZ2V0U2Nyb2xsSGVpZ2h0KClcblxuICAgIHZhciBzZWxmICAgICA9IHRoaXNcblxuICAgIHRoaXMuJGJvZHlcbiAgICAgIC5maW5kKHRoaXMuc2VsZWN0b3IpXG4gICAgICAubWFwKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyICRlbCAgID0gJCh0aGlzKVxuICAgICAgICB2YXIgaHJlZiAgPSAkZWwuZGF0YSgndGFyZ2V0JykgfHwgJGVsLmF0dHIoJ2hyZWYnKVxuICAgICAgICB2YXIgJGhyZWYgPSAvXiMuLy50ZXN0KGhyZWYpICYmICQoaHJlZilcblxuICAgICAgICByZXR1cm4gKCRocmVmXG4gICAgICAgICAgJiYgJGhyZWYubGVuZ3RoXG4gICAgICAgICAgJiYgJGhyZWYuaXMoJzp2aXNpYmxlJylcbiAgICAgICAgICAmJiBbWyRocmVmW29mZnNldE1ldGhvZF0oKS50b3AgKyBvZmZzZXRCYXNlLCBocmVmXV0pIHx8IG51bGxcbiAgICAgIH0pXG4gICAgICAuc29ydChmdW5jdGlvbiAoYSwgYikgeyByZXR1cm4gYVswXSAtIGJbMF0gfSlcbiAgICAgIC5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgc2VsZi5vZmZzZXRzLnB1c2godGhpc1swXSlcbiAgICAgICAgc2VsZi50YXJnZXRzLnB1c2godGhpc1sxXSlcbiAgICAgIH0pXG4gIH1cblxuICBTY3JvbGxTcHkucHJvdG90eXBlLnByb2Nlc3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNjcm9sbFRvcCAgICA9IHRoaXMuJHNjcm9sbEVsZW1lbnQuc2Nyb2xsVG9wKCkgKyB0aGlzLm9wdGlvbnMub2Zmc2V0XG4gICAgdmFyIHNjcm9sbEhlaWdodCA9IHRoaXMuZ2V0U2Nyb2xsSGVpZ2h0KClcbiAgICB2YXIgbWF4U2Nyb2xsICAgID0gdGhpcy5vcHRpb25zLm9mZnNldCArIHNjcm9sbEhlaWdodCAtIHRoaXMuJHNjcm9sbEVsZW1lbnQuaGVpZ2h0KClcbiAgICB2YXIgb2Zmc2V0cyAgICAgID0gdGhpcy5vZmZzZXRzXG4gICAgdmFyIHRhcmdldHMgICAgICA9IHRoaXMudGFyZ2V0c1xuICAgIHZhciBhY3RpdmVUYXJnZXQgPSB0aGlzLmFjdGl2ZVRhcmdldFxuICAgIHZhciBpXG5cbiAgICBpZiAodGhpcy5zY3JvbGxIZWlnaHQgIT0gc2Nyb2xsSGVpZ2h0KSB7XG4gICAgICB0aGlzLnJlZnJlc2goKVxuICAgIH1cblxuICAgIGlmIChzY3JvbGxUb3AgPj0gbWF4U2Nyb2xsKSB7XG4gICAgICByZXR1cm4gYWN0aXZlVGFyZ2V0ICE9IChpID0gdGFyZ2V0c1t0YXJnZXRzLmxlbmd0aCAtIDFdKSAmJiB0aGlzLmFjdGl2YXRlKGkpXG4gICAgfVxuXG4gICAgaWYgKGFjdGl2ZVRhcmdldCAmJiBzY3JvbGxUb3AgPD0gb2Zmc2V0c1swXSkge1xuICAgICAgcmV0dXJuIGFjdGl2ZVRhcmdldCAhPSAoaSA9IHRhcmdldHNbMF0pICYmIHRoaXMuYWN0aXZhdGUoaSlcbiAgICB9XG5cbiAgICBmb3IgKGkgPSBvZmZzZXRzLmxlbmd0aDsgaS0tOykge1xuICAgICAgYWN0aXZlVGFyZ2V0ICE9IHRhcmdldHNbaV1cbiAgICAgICAgJiYgc2Nyb2xsVG9wID49IG9mZnNldHNbaV1cbiAgICAgICAgJiYgKCFvZmZzZXRzW2kgKyAxXSB8fCBzY3JvbGxUb3AgPD0gb2Zmc2V0c1tpICsgMV0pXG4gICAgICAgICYmIHRoaXMuYWN0aXZhdGUodGFyZ2V0c1tpXSlcbiAgICB9XG4gIH1cblxuICBTY3JvbGxTcHkucHJvdG90eXBlLmFjdGl2YXRlID0gZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIHRoaXMuYWN0aXZlVGFyZ2V0ID0gdGFyZ2V0XG5cbiAgICAkKHRoaXMuc2VsZWN0b3IpXG4gICAgICAucGFyZW50c1VudGlsKHRoaXMub3B0aW9ucy50YXJnZXQsICcuYWN0aXZlJylcbiAgICAgIC5yZW1vdmVDbGFzcygnYWN0aXZlJylcblxuICAgIHZhciBzZWxlY3RvciA9IHRoaXMuc2VsZWN0b3IgK1xuICAgICAgICAnW2RhdGEtdGFyZ2V0PVwiJyArIHRhcmdldCArICdcIl0sJyArXG4gICAgICAgIHRoaXMuc2VsZWN0b3IgKyAnW2hyZWY9XCInICsgdGFyZ2V0ICsgJ1wiXSdcblxuICAgIHZhciBhY3RpdmUgPSAkKHNlbGVjdG9yKVxuICAgICAgLnBhcmVudHMoJ2xpJylcbiAgICAgIC5hZGRDbGFzcygnYWN0aXZlJylcblxuICAgIGlmIChhY3RpdmUucGFyZW50KCcuZHJvcGRvd24tbWVudScpLmxlbmd0aCkge1xuICAgICAgYWN0aXZlID0gYWN0aXZlXG4gICAgICAgIC5jbG9zZXN0KCdsaS5kcm9wZG93bicpXG4gICAgICAgIC5hZGRDbGFzcygnYWN0aXZlJylcbiAgICB9XG5cbiAgICBhY3RpdmUudHJpZ2dlcignYWN0aXZhdGUuYnMuc2Nyb2xsc3B5JylcbiAgfVxuXG5cbiAgLy8gU0NST0xMU1BZIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy5zY3JvbGxzcHknKVxuICAgICAgdmFyIG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9uID09ICdvYmplY3QnICYmIG9wdGlvblxuXG4gICAgICBpZiAoIWRhdGEpICR0aGlzLmRhdGEoJ2JzLnNjcm9sbHNweScsIChkYXRhID0gbmV3IFNjcm9sbFNweSh0aGlzLCBvcHRpb25zKSkpXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dKClcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4uc2Nyb2xsc3B5XG5cbiAgJC5mbi5zY3JvbGxzcHkgICAgICAgICAgICAgPSBQbHVnaW5cbiAgJC5mbi5zY3JvbGxzcHkuQ29uc3RydWN0b3IgPSBTY3JvbGxTcHlcblxuXG4gIC8vIFNDUk9MTFNQWSBOTyBDT05GTElDVFxuICAvLyA9PT09PT09PT09PT09PT09PT09PT1cblxuICAkLmZuLnNjcm9sbHNweS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uc2Nyb2xsc3B5ID0gb2xkXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG5cbiAgLy8gU0NST0xMU1BZIERBVEEtQVBJXG4gIC8vID09PT09PT09PT09PT09PT09PVxuXG4gICQod2luZG93KS5vbignbG9hZC5icy5zY3JvbGxzcHkuZGF0YS1hcGknLCBmdW5jdGlvbiAoKSB7XG4gICAgJCgnW2RhdGEtc3B5PVwic2Nyb2xsXCJdJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHNweSA9ICQodGhpcylcbiAgICAgIFBsdWdpbi5jYWxsKCRzcHksICRzcHkuZGF0YSgpKVxuICAgIH0pXG4gIH0pXG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IG1vZGFsLmpzIHYzLjIuMFxuICogaHR0cDovL2dldGJvb3RzdHJhcC5jb20vamF2YXNjcmlwdC8jbW9kYWxzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDExLTIwMTQgVHdpdHRlciwgSW5jLlxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5cbitmdW5jdGlvbiAoJCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gTU9EQUwgQ0xBU1MgREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09XG5cbiAgdmFyIE1vZGFsID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLm9wdGlvbnMgICAgICAgID0gb3B0aW9uc1xuICAgIHRoaXMuJGJvZHkgICAgICAgICAgPSAkKGRvY3VtZW50LmJvZHkpXG4gICAgdGhpcy4kZWxlbWVudCAgICAgICA9ICQoZWxlbWVudClcbiAgICB0aGlzLiRiYWNrZHJvcCAgICAgID1cbiAgICB0aGlzLmlzU2hvd24gICAgICAgID0gbnVsbFxuICAgIHRoaXMuc2Nyb2xsYmFyV2lkdGggPSAwXG5cbiAgICBpZiAodGhpcy5vcHRpb25zLnJlbW90ZSkge1xuICAgICAgdGhpcy4kZWxlbWVudFxuICAgICAgICAuZmluZCgnLm1vZGFsLWNvbnRlbnQnKVxuICAgICAgICAubG9hZCh0aGlzLm9wdGlvbnMucmVtb3RlLCAkLnByb3h5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoJ2xvYWRlZC5icy5tb2RhbCcpXG4gICAgICAgIH0sIHRoaXMpKVxuICAgIH1cbiAgfVxuXG4gIE1vZGFsLlZFUlNJT04gID0gJzMuMi4wJ1xuXG4gIE1vZGFsLkRFRkFVTFRTID0ge1xuICAgIGJhY2tkcm9wOiB0cnVlLFxuICAgIGtleWJvYXJkOiB0cnVlLFxuICAgIHNob3c6IHRydWVcbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS50b2dnbGUgPSBmdW5jdGlvbiAoX3JlbGF0ZWRUYXJnZXQpIHtcbiAgICByZXR1cm4gdGhpcy5pc1Nob3duID8gdGhpcy5oaWRlKCkgOiB0aGlzLnNob3coX3JlbGF0ZWRUYXJnZXQpXG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uIChfcmVsYXRlZFRhcmdldCkge1xuICAgIHZhciB0aGF0ID0gdGhpc1xuICAgIHZhciBlICAgID0gJC5FdmVudCgnc2hvdy5icy5tb2RhbCcsIHsgcmVsYXRlZFRhcmdldDogX3JlbGF0ZWRUYXJnZXQgfSlcblxuICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcihlKVxuXG4gICAgaWYgKHRoaXMuaXNTaG93biB8fCBlLmlzRGVmYXVsdFByZXZlbnRlZCgpKSByZXR1cm5cblxuICAgIHRoaXMuaXNTaG93biA9IHRydWVcblxuICAgIHRoaXMuY2hlY2tTY3JvbGxiYXIoKVxuICAgIHRoaXMuJGJvZHkuYWRkQ2xhc3MoJ21vZGFsLW9wZW4nKVxuXG4gICAgdGhpcy5zZXRTY3JvbGxiYXIoKVxuICAgIHRoaXMuZXNjYXBlKClcblxuICAgIHRoaXMuJGVsZW1lbnQub24oJ2NsaWNrLmRpc21pc3MuYnMubW9kYWwnLCAnW2RhdGEtZGlzbWlzcz1cIm1vZGFsXCJdJywgJC5wcm94eSh0aGlzLmhpZGUsIHRoaXMpKVxuXG4gICAgdGhpcy5iYWNrZHJvcChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdHJhbnNpdGlvbiA9ICQuc3VwcG9ydC50cmFuc2l0aW9uICYmIHRoYXQuJGVsZW1lbnQuaGFzQ2xhc3MoJ2ZhZGUnKVxuXG4gICAgICBpZiAoIXRoYXQuJGVsZW1lbnQucGFyZW50KCkubGVuZ3RoKSB7XG4gICAgICAgIHRoYXQuJGVsZW1lbnQuYXBwZW5kVG8odGhhdC4kYm9keSkgLy8gZG9uJ3QgbW92ZSBtb2RhbHMgZG9tIHBvc2l0aW9uXG4gICAgICB9XG5cbiAgICAgIHRoYXQuJGVsZW1lbnRcbiAgICAgICAgLnNob3coKVxuICAgICAgICAuc2Nyb2xsVG9wKDApXG5cbiAgICAgIGlmICh0cmFuc2l0aW9uKSB7XG4gICAgICAgIHRoYXQuJGVsZW1lbnRbMF0ub2Zmc2V0V2lkdGggLy8gZm9yY2UgcmVmbG93XG4gICAgICB9XG5cbiAgICAgIHRoYXQuJGVsZW1lbnRcbiAgICAgICAgLmFkZENsYXNzKCdpbicpXG4gICAgICAgIC5hdHRyKCdhcmlhLWhpZGRlbicsIGZhbHNlKVxuXG4gICAgICB0aGF0LmVuZm9yY2VGb2N1cygpXG5cbiAgICAgIHZhciBlID0gJC5FdmVudCgnc2hvd24uYnMubW9kYWwnLCB7IHJlbGF0ZWRUYXJnZXQ6IF9yZWxhdGVkVGFyZ2V0IH0pXG5cbiAgICAgIHRyYW5zaXRpb24gP1xuICAgICAgICB0aGF0LiRlbGVtZW50LmZpbmQoJy5tb2RhbC1kaWFsb2cnKSAvLyB3YWl0IGZvciBtb2RhbCB0byBzbGlkZSBpblxuICAgICAgICAgIC5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoYXQuJGVsZW1lbnQudHJpZ2dlcignZm9jdXMnKS50cmlnZ2VyKGUpXG4gICAgICAgICAgfSlcbiAgICAgICAgICAuZW11bGF0ZVRyYW5zaXRpb25FbmQoMzAwKSA6XG4gICAgICAgIHRoYXQuJGVsZW1lbnQudHJpZ2dlcignZm9jdXMnKS50cmlnZ2VyKGUpXG4gICAgfSlcbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKGUpIHtcbiAgICBpZiAoZSkgZS5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICBlID0gJC5FdmVudCgnaGlkZS5icy5tb2RhbCcpXG5cbiAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoZSlcblxuICAgIGlmICghdGhpcy5pc1Nob3duIHx8IGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgdGhpcy5pc1Nob3duID0gZmFsc2VcblxuICAgIHRoaXMuJGJvZHkucmVtb3ZlQ2xhc3MoJ21vZGFsLW9wZW4nKVxuXG4gICAgdGhpcy5yZXNldFNjcm9sbGJhcigpXG4gICAgdGhpcy5lc2NhcGUoKVxuXG4gICAgJChkb2N1bWVudCkub2ZmKCdmb2N1c2luLmJzLm1vZGFsJylcblxuICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgIC5yZW1vdmVDbGFzcygnaW4nKVxuICAgICAgLmF0dHIoJ2FyaWEtaGlkZGVuJywgdHJ1ZSlcbiAgICAgIC5vZmYoJ2NsaWNrLmRpc21pc3MuYnMubW9kYWwnKVxuXG4gICAgJC5zdXBwb3J0LnRyYW5zaXRpb24gJiYgdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnZmFkZScpID9cbiAgICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgICAgLm9uZSgnYnNUcmFuc2l0aW9uRW5kJywgJC5wcm94eSh0aGlzLmhpZGVNb2RhbCwgdGhpcykpXG4gICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZCgzMDApIDpcbiAgICAgIHRoaXMuaGlkZU1vZGFsKClcbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS5lbmZvcmNlRm9jdXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgJChkb2N1bWVudClcbiAgICAgIC5vZmYoJ2ZvY3VzaW4uYnMubW9kYWwnKSAvLyBndWFyZCBhZ2FpbnN0IGluZmluaXRlIGZvY3VzIGxvb3BcbiAgICAgIC5vbignZm9jdXNpbi5icy5tb2RhbCcsICQucHJveHkoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgaWYgKHRoaXMuJGVsZW1lbnRbMF0gIT09IGUudGFyZ2V0ICYmICF0aGlzLiRlbGVtZW50LmhhcyhlLnRhcmdldCkubGVuZ3RoKSB7XG4gICAgICAgICAgdGhpcy4kZWxlbWVudC50cmlnZ2VyKCdmb2N1cycpXG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpKVxuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLmVzY2FwZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5pc1Nob3duICYmIHRoaXMub3B0aW9ucy5rZXlib2FyZCkge1xuICAgICAgdGhpcy4kZWxlbWVudC5vbigna2V5dXAuZGlzbWlzcy5icy5tb2RhbCcsICQucHJveHkoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgZS53aGljaCA9PSAyNyAmJiB0aGlzLmhpZGUoKVxuICAgICAgfSwgdGhpcykpXG4gICAgfSBlbHNlIGlmICghdGhpcy5pc1Nob3duKSB7XG4gICAgICB0aGlzLiRlbGVtZW50Lm9mZigna2V5dXAuZGlzbWlzcy5icy5tb2RhbCcpXG4gICAgfVxuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLmhpZGVNb2RhbCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdGhhdCA9IHRoaXNcbiAgICB0aGlzLiRlbGVtZW50LmhpZGUoKVxuICAgIHRoaXMuYmFja2Ryb3AoZnVuY3Rpb24gKCkge1xuICAgICAgdGhhdC4kZWxlbWVudC50cmlnZ2VyKCdoaWRkZW4uYnMubW9kYWwnKVxuICAgIH0pXG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUucmVtb3ZlQmFja2Ryb3AgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy4kYmFja2Ryb3AgJiYgdGhpcy4kYmFja2Ryb3AucmVtb3ZlKClcbiAgICB0aGlzLiRiYWNrZHJvcCA9IG51bGxcbiAgfVxuXG4gIE1vZGFsLnByb3RvdHlwZS5iYWNrZHJvcCA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgIHZhciB0aGF0ID0gdGhpc1xuICAgIHZhciBhbmltYXRlID0gdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnZmFkZScpID8gJ2ZhZGUnIDogJydcblxuICAgIGlmICh0aGlzLmlzU2hvd24gJiYgdGhpcy5vcHRpb25zLmJhY2tkcm9wKSB7XG4gICAgICB2YXIgZG9BbmltYXRlID0gJC5zdXBwb3J0LnRyYW5zaXRpb24gJiYgYW5pbWF0ZVxuXG4gICAgICB0aGlzLiRiYWNrZHJvcCA9ICQoJzxkaXYgY2xhc3M9XCJtb2RhbC1iYWNrZHJvcCAnICsgYW5pbWF0ZSArICdcIiAvPicpXG4gICAgICAgIC5hcHBlbmRUbyh0aGlzLiRib2R5KVxuXG4gICAgICB0aGlzLiRlbGVtZW50Lm9uKCdjbGljay5kaXNtaXNzLmJzLm1vZGFsJywgJC5wcm94eShmdW5jdGlvbiAoZSkge1xuICAgICAgICBpZiAoZS50YXJnZXQgIT09IGUuY3VycmVudFRhcmdldCkgcmV0dXJuXG4gICAgICAgIHRoaXMub3B0aW9ucy5iYWNrZHJvcCA9PSAnc3RhdGljJ1xuICAgICAgICAgID8gdGhpcy4kZWxlbWVudFswXS5mb2N1cy5jYWxsKHRoaXMuJGVsZW1lbnRbMF0pXG4gICAgICAgICAgOiB0aGlzLmhpZGUuY2FsbCh0aGlzKVxuICAgICAgfSwgdGhpcykpXG5cbiAgICAgIGlmIChkb0FuaW1hdGUpIHRoaXMuJGJhY2tkcm9wWzBdLm9mZnNldFdpZHRoIC8vIGZvcmNlIHJlZmxvd1xuXG4gICAgICB0aGlzLiRiYWNrZHJvcC5hZGRDbGFzcygnaW4nKVxuXG4gICAgICBpZiAoIWNhbGxiYWNrKSByZXR1cm5cblxuICAgICAgZG9BbmltYXRlID9cbiAgICAgICAgdGhpcy4kYmFja2Ryb3BcbiAgICAgICAgICAub25lKCdic1RyYW5zaXRpb25FbmQnLCBjYWxsYmFjaylcbiAgICAgICAgICAuZW11bGF0ZVRyYW5zaXRpb25FbmQoMTUwKSA6XG4gICAgICAgIGNhbGxiYWNrKClcblxuICAgIH0gZWxzZSBpZiAoIXRoaXMuaXNTaG93biAmJiB0aGlzLiRiYWNrZHJvcCkge1xuICAgICAgdGhpcy4kYmFja2Ryb3AucmVtb3ZlQ2xhc3MoJ2luJylcblxuICAgICAgdmFyIGNhbGxiYWNrUmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGF0LnJlbW92ZUJhY2tkcm9wKClcbiAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKVxuICAgICAgfVxuICAgICAgJC5zdXBwb3J0LnRyYW5zaXRpb24gJiYgdGhpcy4kZWxlbWVudC5oYXNDbGFzcygnZmFkZScpID9cbiAgICAgICAgdGhpcy4kYmFja2Ryb3BcbiAgICAgICAgICAub25lKCdic1RyYW5zaXRpb25FbmQnLCBjYWxsYmFja1JlbW92ZSlcbiAgICAgICAgICAuZW11bGF0ZVRyYW5zaXRpb25FbmQoMTUwKSA6XG4gICAgICAgIGNhbGxiYWNrUmVtb3ZlKClcblxuICAgIH0gZWxzZSBpZiAoY2FsbGJhY2spIHtcbiAgICAgIGNhbGxiYWNrKClcbiAgICB9XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUuY2hlY2tTY3JvbGxiYXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGggPj0gd2luZG93LmlubmVyV2lkdGgpIHJldHVyblxuICAgIHRoaXMuc2Nyb2xsYmFyV2lkdGggPSB0aGlzLnNjcm9sbGJhcldpZHRoIHx8IHRoaXMubWVhc3VyZVNjcm9sbGJhcigpXG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUuc2V0U2Nyb2xsYmFyID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciBib2R5UGFkID0gcGFyc2VJbnQoKHRoaXMuJGJvZHkuY3NzKCdwYWRkaW5nLXJpZ2h0JykgfHwgMCksIDEwKVxuICAgIGlmICh0aGlzLnNjcm9sbGJhcldpZHRoKSB0aGlzLiRib2R5LmNzcygncGFkZGluZy1yaWdodCcsIGJvZHlQYWQgKyB0aGlzLnNjcm9sbGJhcldpZHRoKVxuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLnJlc2V0U2Nyb2xsYmFyID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuJGJvZHkuY3NzKCdwYWRkaW5nLXJpZ2h0JywgJycpXG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUubWVhc3VyZVNjcm9sbGJhciA9IGZ1bmN0aW9uICgpIHsgLy8gdGh4IHdhbHNoXG4gICAgdmFyIHNjcm9sbERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgc2Nyb2xsRGl2LmNsYXNzTmFtZSA9ICdtb2RhbC1zY3JvbGxiYXItbWVhc3VyZSdcbiAgICB0aGlzLiRib2R5LmFwcGVuZChzY3JvbGxEaXYpXG4gICAgdmFyIHNjcm9sbGJhcldpZHRoID0gc2Nyb2xsRGl2Lm9mZnNldFdpZHRoIC0gc2Nyb2xsRGl2LmNsaWVudFdpZHRoXG4gICAgdGhpcy4kYm9keVswXS5yZW1vdmVDaGlsZChzY3JvbGxEaXYpXG4gICAgcmV0dXJuIHNjcm9sbGJhcldpZHRoXG4gIH1cblxuXG4gIC8vIE1PREFMIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgZnVuY3Rpb24gUGx1Z2luKG9wdGlvbiwgX3JlbGF0ZWRUYXJnZXQpIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy5tb2RhbCcpXG4gICAgICB2YXIgb3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBNb2RhbC5ERUZBVUxUUywgJHRoaXMuZGF0YSgpLCB0eXBlb2Ygb3B0aW9uID09ICdvYmplY3QnICYmIG9wdGlvbilcblxuICAgICAgaWYgKCFkYXRhKSAkdGhpcy5kYXRhKCdicy5tb2RhbCcsIChkYXRhID0gbmV3IE1vZGFsKHRoaXMsIG9wdGlvbnMpKSlcbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09ICdzdHJpbmcnKSBkYXRhW29wdGlvbl0oX3JlbGF0ZWRUYXJnZXQpXG4gICAgICBlbHNlIGlmIChvcHRpb25zLnNob3cpIGRhdGEuc2hvdyhfcmVsYXRlZFRhcmdldClcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4ubW9kYWxcblxuICAkLmZuLm1vZGFsICAgICAgICAgICAgID0gUGx1Z2luXG4gICQuZm4ubW9kYWwuQ29uc3RydWN0b3IgPSBNb2RhbFxuXG5cbiAgLy8gTU9EQUwgTk8gQ09ORkxJQ1RcbiAgLy8gPT09PT09PT09PT09PT09PT1cblxuICAkLmZuLm1vZGFsLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5tb2RhbCA9IG9sZFxuICAgIHJldHVybiB0aGlzXG4gIH1cblxuXG4gIC8vIE1PREFMIERBVEEtQVBJXG4gIC8vID09PT09PT09PT09PT09XG5cbiAgJChkb2N1bWVudCkub24oJ2NsaWNrLmJzLm1vZGFsLmRhdGEtYXBpJywgJ1tkYXRhLXRvZ2dsZT1cIm1vZGFsXCJdJywgZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgJHRoaXMgICA9ICQodGhpcylcbiAgICB2YXIgaHJlZiAgICA9ICR0aGlzLmF0dHIoJ2hyZWYnKVxuICAgIHZhciAkdGFyZ2V0ID0gJCgkdGhpcy5hdHRyKCdkYXRhLXRhcmdldCcpIHx8IChocmVmICYmIGhyZWYucmVwbGFjZSgvLiooPz0jW15cXHNdKyQpLywgJycpKSkgLy8gc3RyaXAgZm9yIGllN1xuICAgIHZhciBvcHRpb24gID0gJHRhcmdldC5kYXRhKCdicy5tb2RhbCcpID8gJ3RvZ2dsZScgOiAkLmV4dGVuZCh7IHJlbW90ZTogIS8jLy50ZXN0KGhyZWYpICYmIGhyZWYgfSwgJHRhcmdldC5kYXRhKCksICR0aGlzLmRhdGEoKSlcblxuICAgIGlmICgkdGhpcy5pcygnYScpKSBlLnByZXZlbnREZWZhdWx0KClcblxuICAgICR0YXJnZXQub25lKCdzaG93LmJzLm1vZGFsJywgZnVuY3Rpb24gKHNob3dFdmVudCkge1xuICAgICAgaWYgKHNob3dFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkgcmV0dXJuIC8vIG9ubHkgcmVnaXN0ZXIgZm9jdXMgcmVzdG9yZXIgaWYgbW9kYWwgd2lsbCBhY3R1YWxseSBnZXQgc2hvd25cbiAgICAgICR0YXJnZXQub25lKCdoaWRkZW4uYnMubW9kYWwnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICR0aGlzLmlzKCc6dmlzaWJsZScpICYmICR0aGlzLnRyaWdnZXIoJ2ZvY3VzJylcbiAgICAgIH0pXG4gICAgfSlcbiAgICBQbHVnaW4uY2FsbCgkdGFyZ2V0LCBvcHRpb24sIHRoaXMpXG4gIH0pXG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IHRvb2x0aXAuanMgdjMuMi4wXG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyN0b29sdGlwXG4gKiBJbnNwaXJlZCBieSB0aGUgb3JpZ2luYWwgalF1ZXJ5LnRpcHN5IGJ5IEphc29uIEZyYW1lXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDExLTIwMTQgVHdpdHRlciwgSW5jLlxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYXN0ZXIvTElDRU5TRSlcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5cbitmdW5jdGlvbiAoJCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgLy8gVE9PTFRJUCBQVUJMSUMgQ0xBU1MgREVGSU5JVElPTlxuICAvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgdmFyIFRvb2x0aXAgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMudHlwZSAgICAgICA9XG4gICAgdGhpcy5vcHRpb25zICAgID1cbiAgICB0aGlzLmVuYWJsZWQgICAgPVxuICAgIHRoaXMudGltZW91dCAgICA9XG4gICAgdGhpcy5ob3ZlclN0YXRlID1cbiAgICB0aGlzLiRlbGVtZW50ICAgPSBudWxsXG5cbiAgICB0aGlzLmluaXQoJ3Rvb2x0aXAnLCBlbGVtZW50LCBvcHRpb25zKVxuICB9XG5cbiAgVG9vbHRpcC5WRVJTSU9OICA9ICczLjIuMCdcblxuICBUb29sdGlwLkRFRkFVTFRTID0ge1xuICAgIGFuaW1hdGlvbjogdHJ1ZSxcbiAgICBwbGFjZW1lbnQ6ICd0b3AnLFxuICAgIHNlbGVjdG9yOiBmYWxzZSxcbiAgICB0ZW1wbGF0ZTogJzxkaXYgY2xhc3M9XCJ0b29sdGlwXCIgcm9sZT1cInRvb2x0aXBcIj48ZGl2IGNsYXNzPVwidG9vbHRpcC1hcnJvd1wiPjwvZGl2PjxkaXYgY2xhc3M9XCJ0b29sdGlwLWlubmVyXCI+PC9kaXY+PC9kaXY+JyxcbiAgICB0cmlnZ2VyOiAnaG92ZXIgZm9jdXMnLFxuICAgIHRpdGxlOiAnJyxcbiAgICBkZWxheTogMCxcbiAgICBodG1sOiBmYWxzZSxcbiAgICBjb250YWluZXI6IGZhbHNlLFxuICAgIHZpZXdwb3J0OiB7XG4gICAgICBzZWxlY3RvcjogJ2JvZHknLFxuICAgICAgcGFkZGluZzogMFxuICAgIH1cbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAodHlwZSwgZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMuZW5hYmxlZCAgID0gdHJ1ZVxuICAgIHRoaXMudHlwZSAgICAgID0gdHlwZVxuICAgIHRoaXMuJGVsZW1lbnQgID0gJChlbGVtZW50KVxuICAgIHRoaXMub3B0aW9ucyAgID0gdGhpcy5nZXRPcHRpb25zKG9wdGlvbnMpXG4gICAgdGhpcy4kdmlld3BvcnQgPSB0aGlzLm9wdGlvbnMudmlld3BvcnQgJiYgJCh0aGlzLm9wdGlvbnMudmlld3BvcnQuc2VsZWN0b3IgfHwgdGhpcy5vcHRpb25zLnZpZXdwb3J0KVxuXG4gICAgdmFyIHRyaWdnZXJzID0gdGhpcy5vcHRpb25zLnRyaWdnZXIuc3BsaXQoJyAnKVxuXG4gICAgZm9yICh2YXIgaSA9IHRyaWdnZXJzLmxlbmd0aDsgaS0tOykge1xuICAgICAgdmFyIHRyaWdnZXIgPSB0cmlnZ2Vyc1tpXVxuXG4gICAgICBpZiAodHJpZ2dlciA9PSAnY2xpY2snKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQub24oJ2NsaWNrLicgKyB0aGlzLnR5cGUsIHRoaXMub3B0aW9ucy5zZWxlY3RvciwgJC5wcm94eSh0aGlzLnRvZ2dsZSwgdGhpcykpXG4gICAgICB9IGVsc2UgaWYgKHRyaWdnZXIgIT0gJ21hbnVhbCcpIHtcbiAgICAgICAgdmFyIGV2ZW50SW4gID0gdHJpZ2dlciA9PSAnaG92ZXInID8gJ21vdXNlZW50ZXInIDogJ2ZvY3VzaW4nXG4gICAgICAgIHZhciBldmVudE91dCA9IHRyaWdnZXIgPT0gJ2hvdmVyJyA/ICdtb3VzZWxlYXZlJyA6ICdmb2N1c291dCdcblxuICAgICAgICB0aGlzLiRlbGVtZW50Lm9uKGV2ZW50SW4gICsgJy4nICsgdGhpcy50eXBlLCB0aGlzLm9wdGlvbnMuc2VsZWN0b3IsICQucHJveHkodGhpcy5lbnRlciwgdGhpcykpXG4gICAgICAgIHRoaXMuJGVsZW1lbnQub24oZXZlbnRPdXQgKyAnLicgKyB0aGlzLnR5cGUsIHRoaXMub3B0aW9ucy5zZWxlY3RvciwgJC5wcm94eSh0aGlzLmxlYXZlLCB0aGlzKSlcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLm9wdGlvbnMuc2VsZWN0b3IgP1xuICAgICAgKHRoaXMuX29wdGlvbnMgPSAkLmV4dGVuZCh7fSwgdGhpcy5vcHRpb25zLCB7IHRyaWdnZXI6ICdtYW51YWwnLCBzZWxlY3RvcjogJycgfSkpIDpcbiAgICAgIHRoaXMuZml4VGl0bGUoKVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuZ2V0RGVmYXVsdHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIFRvb2x0aXAuREVGQVVMVFNcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmdldE9wdGlvbnMgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgdGhpcy5nZXREZWZhdWx0cygpLCB0aGlzLiRlbGVtZW50LmRhdGEoKSwgb3B0aW9ucylcblxuICAgIGlmIChvcHRpb25zLmRlbGF5ICYmIHR5cGVvZiBvcHRpb25zLmRlbGF5ID09ICdudW1iZXInKSB7XG4gICAgICBvcHRpb25zLmRlbGF5ID0ge1xuICAgICAgICBzaG93OiBvcHRpb25zLmRlbGF5LFxuICAgICAgICBoaWRlOiBvcHRpb25zLmRlbGF5XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG9wdGlvbnNcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmdldERlbGVnYXRlT3B0aW9ucyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgb3B0aW9ucyAgPSB7fVxuICAgIHZhciBkZWZhdWx0cyA9IHRoaXMuZ2V0RGVmYXVsdHMoKVxuXG4gICAgdGhpcy5fb3B0aW9ucyAmJiAkLmVhY2godGhpcy5fb3B0aW9ucywgZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgIGlmIChkZWZhdWx0c1trZXldICE9IHZhbHVlKSBvcHRpb25zW2tleV0gPSB2YWx1ZVxuICAgIH0pXG5cbiAgICByZXR1cm4gb3B0aW9uc1xuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuZW50ZXIgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgdmFyIHNlbGYgPSBvYmogaW5zdGFuY2VvZiB0aGlzLmNvbnN0cnVjdG9yID9cbiAgICAgIG9iaiA6ICQob2JqLmN1cnJlbnRUYXJnZXQpLmRhdGEoJ2JzLicgKyB0aGlzLnR5cGUpXG5cbiAgICBpZiAoIXNlbGYpIHtcbiAgICAgIHNlbGYgPSBuZXcgdGhpcy5jb25zdHJ1Y3RvcihvYmouY3VycmVudFRhcmdldCwgdGhpcy5nZXREZWxlZ2F0ZU9wdGlvbnMoKSlcbiAgICAgICQob2JqLmN1cnJlbnRUYXJnZXQpLmRhdGEoJ2JzLicgKyB0aGlzLnR5cGUsIHNlbGYpXG4gICAgfVxuXG4gICAgY2xlYXJUaW1lb3V0KHNlbGYudGltZW91dClcblxuICAgIHNlbGYuaG92ZXJTdGF0ZSA9ICdpbidcblxuICAgIGlmICghc2VsZi5vcHRpb25zLmRlbGF5IHx8ICFzZWxmLm9wdGlvbnMuZGVsYXkuc2hvdykgcmV0dXJuIHNlbGYuc2hvdygpXG5cbiAgICBzZWxmLnRpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChzZWxmLmhvdmVyU3RhdGUgPT0gJ2luJykgc2VsZi5zaG93KClcbiAgICB9LCBzZWxmLm9wdGlvbnMuZGVsYXkuc2hvdylcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmxlYXZlID0gZnVuY3Rpb24gKG9iaikge1xuICAgIHZhciBzZWxmID0gb2JqIGluc3RhbmNlb2YgdGhpcy5jb25zdHJ1Y3RvciA/XG4gICAgICBvYmogOiAkKG9iai5jdXJyZW50VGFyZ2V0KS5kYXRhKCdicy4nICsgdGhpcy50eXBlKVxuXG4gICAgaWYgKCFzZWxmKSB7XG4gICAgICBzZWxmID0gbmV3IHRoaXMuY29uc3RydWN0b3Iob2JqLmN1cnJlbnRUYXJnZXQsIHRoaXMuZ2V0RGVsZWdhdGVPcHRpb25zKCkpXG4gICAgICAkKG9iai5jdXJyZW50VGFyZ2V0KS5kYXRhKCdicy4nICsgdGhpcy50eXBlLCBzZWxmKVxuICAgIH1cblxuICAgIGNsZWFyVGltZW91dChzZWxmLnRpbWVvdXQpXG5cbiAgICBzZWxmLmhvdmVyU3RhdGUgPSAnb3V0J1xuXG4gICAgaWYgKCFzZWxmLm9wdGlvbnMuZGVsYXkgfHwgIXNlbGYub3B0aW9ucy5kZWxheS5oaWRlKSByZXR1cm4gc2VsZi5oaWRlKClcblxuICAgIHNlbGYudGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKHNlbGYuaG92ZXJTdGF0ZSA9PSAnb3V0Jykgc2VsZi5oaWRlKClcbiAgICB9LCBzZWxmLm9wdGlvbnMuZGVsYXkuaGlkZSlcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLnNob3cgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGUgPSAkLkV2ZW50KCdzaG93LmJzLicgKyB0aGlzLnR5cGUpXG5cbiAgICBpZiAodGhpcy5oYXNDb250ZW50KCkgJiYgdGhpcy5lbmFibGVkKSB7XG4gICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoZSlcblxuICAgICAgdmFyIGluRG9tID0gJC5jb250YWlucyhkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIHRoaXMuJGVsZW1lbnRbMF0pXG4gICAgICBpZiAoZS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSB8fCAhaW5Eb20pIHJldHVyblxuICAgICAgdmFyIHRoYXQgPSB0aGlzXG5cbiAgICAgIHZhciAkdGlwID0gdGhpcy50aXAoKVxuXG4gICAgICB2YXIgdGlwSWQgPSB0aGlzLmdldFVJRCh0aGlzLnR5cGUpXG5cbiAgICAgIHRoaXMuc2V0Q29udGVudCgpXG4gICAgICAkdGlwLmF0dHIoJ2lkJywgdGlwSWQpXG4gICAgICB0aGlzLiRlbGVtZW50LmF0dHIoJ2FyaWEtZGVzY3JpYmVkYnknLCB0aXBJZClcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5hbmltYXRpb24pICR0aXAuYWRkQ2xhc3MoJ2ZhZGUnKVxuXG4gICAgICB2YXIgcGxhY2VtZW50ID0gdHlwZW9mIHRoaXMub3B0aW9ucy5wbGFjZW1lbnQgPT0gJ2Z1bmN0aW9uJyA/XG4gICAgICAgIHRoaXMub3B0aW9ucy5wbGFjZW1lbnQuY2FsbCh0aGlzLCAkdGlwWzBdLCB0aGlzLiRlbGVtZW50WzBdKSA6XG4gICAgICAgIHRoaXMub3B0aW9ucy5wbGFjZW1lbnRcblxuICAgICAgdmFyIGF1dG9Ub2tlbiA9IC9cXHM/YXV0bz9cXHM/L2lcbiAgICAgIHZhciBhdXRvUGxhY2UgPSBhdXRvVG9rZW4udGVzdChwbGFjZW1lbnQpXG4gICAgICBpZiAoYXV0b1BsYWNlKSBwbGFjZW1lbnQgPSBwbGFjZW1lbnQucmVwbGFjZShhdXRvVG9rZW4sICcnKSB8fCAndG9wJ1xuXG4gICAgICAkdGlwXG4gICAgICAgIC5kZXRhY2goKVxuICAgICAgICAuY3NzKHsgdG9wOiAwLCBsZWZ0OiAwLCBkaXNwbGF5OiAnYmxvY2snIH0pXG4gICAgICAgIC5hZGRDbGFzcyhwbGFjZW1lbnQpXG4gICAgICAgIC5kYXRhKCdicy4nICsgdGhpcy50eXBlLCB0aGlzKVxuXG4gICAgICB0aGlzLm9wdGlvbnMuY29udGFpbmVyID8gJHRpcC5hcHBlbmRUbyh0aGlzLm9wdGlvbnMuY29udGFpbmVyKSA6ICR0aXAuaW5zZXJ0QWZ0ZXIodGhpcy4kZWxlbWVudClcblxuICAgICAgdmFyIHBvcyAgICAgICAgICA9IHRoaXMuZ2V0UG9zaXRpb24oKVxuICAgICAgdmFyIGFjdHVhbFdpZHRoICA9ICR0aXBbMF0ub2Zmc2V0V2lkdGhcbiAgICAgIHZhciBhY3R1YWxIZWlnaHQgPSAkdGlwWzBdLm9mZnNldEhlaWdodFxuXG4gICAgICBpZiAoYXV0b1BsYWNlKSB7XG4gICAgICAgIHZhciBvcmdQbGFjZW1lbnQgPSBwbGFjZW1lbnRcbiAgICAgICAgdmFyICRwYXJlbnQgICAgICA9IHRoaXMuJGVsZW1lbnQucGFyZW50KClcbiAgICAgICAgdmFyIHBhcmVudERpbSAgICA9IHRoaXMuZ2V0UG9zaXRpb24oJHBhcmVudClcblxuICAgICAgICBwbGFjZW1lbnQgPSBwbGFjZW1lbnQgPT0gJ2JvdHRvbScgJiYgcG9zLnRvcCAgICsgcG9zLmhlaWdodCAgICAgICArIGFjdHVhbEhlaWdodCAtIHBhcmVudERpbS5zY3JvbGwgPiBwYXJlbnREaW0uaGVpZ2h0ID8gJ3RvcCcgICAgOlxuICAgICAgICAgICAgICAgICAgICBwbGFjZW1lbnQgPT0gJ3RvcCcgICAgJiYgcG9zLnRvcCAgIC0gcGFyZW50RGltLnNjcm9sbCAtIGFjdHVhbEhlaWdodCA8IDAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJ2JvdHRvbScgOlxuICAgICAgICAgICAgICAgICAgICBwbGFjZW1lbnQgPT0gJ3JpZ2h0JyAgJiYgcG9zLnJpZ2h0ICsgYWN0dWFsV2lkdGggICAgICA+IHBhcmVudERpbS53aWR0aCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJ2xlZnQnICAgOlxuICAgICAgICAgICAgICAgICAgICBwbGFjZW1lbnQgPT0gJ2xlZnQnICAgJiYgcG9zLmxlZnQgIC0gYWN0dWFsV2lkdGggICAgICA8IHBhcmVudERpbS5sZWZ0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJ3JpZ2h0JyAgOlxuICAgICAgICAgICAgICAgICAgICBwbGFjZW1lbnRcblxuICAgICAgICAkdGlwXG4gICAgICAgICAgLnJlbW92ZUNsYXNzKG9yZ1BsYWNlbWVudClcbiAgICAgICAgICAuYWRkQ2xhc3MocGxhY2VtZW50KVxuICAgICAgfVxuXG4gICAgICB2YXIgY2FsY3VsYXRlZE9mZnNldCA9IHRoaXMuZ2V0Q2FsY3VsYXRlZE9mZnNldChwbGFjZW1lbnQsIHBvcywgYWN0dWFsV2lkdGgsIGFjdHVhbEhlaWdodClcblxuICAgICAgdGhpcy5hcHBseVBsYWNlbWVudChjYWxjdWxhdGVkT2Zmc2V0LCBwbGFjZW1lbnQpXG5cbiAgICAgIHZhciBjb21wbGV0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhhdC4kZWxlbWVudC50cmlnZ2VyKCdzaG93bi5icy4nICsgdGhhdC50eXBlKVxuICAgICAgICB0aGF0LmhvdmVyU3RhdGUgPSBudWxsXG4gICAgICB9XG5cbiAgICAgICQuc3VwcG9ydC50cmFuc2l0aW9uICYmIHRoaXMuJHRpcC5oYXNDbGFzcygnZmFkZScpID9cbiAgICAgICAgJHRpcFxuICAgICAgICAgIC5vbmUoJ2JzVHJhbnNpdGlvbkVuZCcsIGNvbXBsZXRlKVxuICAgICAgICAgIC5lbXVsYXRlVHJhbnNpdGlvbkVuZCgxNTApIDpcbiAgICAgICAgY29tcGxldGUoKVxuICAgIH1cbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmFwcGx5UGxhY2VtZW50ID0gZnVuY3Rpb24gKG9mZnNldCwgcGxhY2VtZW50KSB7XG4gICAgdmFyICR0aXAgICA9IHRoaXMudGlwKClcbiAgICB2YXIgd2lkdGggID0gJHRpcFswXS5vZmZzZXRXaWR0aFxuICAgIHZhciBoZWlnaHQgPSAkdGlwWzBdLm9mZnNldEhlaWdodFxuXG4gICAgLy8gbWFudWFsbHkgcmVhZCBtYXJnaW5zIGJlY2F1c2UgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IGluY2x1ZGVzIGRpZmZlcmVuY2VcbiAgICB2YXIgbWFyZ2luVG9wID0gcGFyc2VJbnQoJHRpcC5jc3MoJ21hcmdpbi10b3AnKSwgMTApXG4gICAgdmFyIG1hcmdpbkxlZnQgPSBwYXJzZUludCgkdGlwLmNzcygnbWFyZ2luLWxlZnQnKSwgMTApXG5cbiAgICAvLyB3ZSBtdXN0IGNoZWNrIGZvciBOYU4gZm9yIGllIDgvOVxuICAgIGlmIChpc05hTihtYXJnaW5Ub3ApKSAgbWFyZ2luVG9wICA9IDBcbiAgICBpZiAoaXNOYU4obWFyZ2luTGVmdCkpIG1hcmdpbkxlZnQgPSAwXG5cbiAgICBvZmZzZXQudG9wICA9IG9mZnNldC50b3AgICsgbWFyZ2luVG9wXG4gICAgb2Zmc2V0LmxlZnQgPSBvZmZzZXQubGVmdCArIG1hcmdpbkxlZnRcblxuICAgIC8vICQuZm4ub2Zmc2V0IGRvZXNuJ3Qgcm91bmQgcGl4ZWwgdmFsdWVzXG4gICAgLy8gc28gd2UgdXNlIHNldE9mZnNldCBkaXJlY3RseSB3aXRoIG91ciBvd24gZnVuY3Rpb24gQi0wXG4gICAgJC5vZmZzZXQuc2V0T2Zmc2V0KCR0aXBbMF0sICQuZXh0ZW5kKHtcbiAgICAgIHVzaW5nOiBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICAgICAgJHRpcC5jc3Moe1xuICAgICAgICAgIHRvcDogTWF0aC5yb3VuZChwcm9wcy50b3ApLFxuICAgICAgICAgIGxlZnQ6IE1hdGgucm91bmQocHJvcHMubGVmdClcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9LCBvZmZzZXQpLCAwKVxuXG4gICAgJHRpcC5hZGRDbGFzcygnaW4nKVxuXG4gICAgLy8gY2hlY2sgdG8gc2VlIGlmIHBsYWNpbmcgdGlwIGluIG5ldyBvZmZzZXQgY2F1c2VkIHRoZSB0aXAgdG8gcmVzaXplIGl0c2VsZlxuICAgIHZhciBhY3R1YWxXaWR0aCAgPSAkdGlwWzBdLm9mZnNldFdpZHRoXG4gICAgdmFyIGFjdHVhbEhlaWdodCA9ICR0aXBbMF0ub2Zmc2V0SGVpZ2h0XG5cbiAgICBpZiAocGxhY2VtZW50ID09ICd0b3AnICYmIGFjdHVhbEhlaWdodCAhPSBoZWlnaHQpIHtcbiAgICAgIG9mZnNldC50b3AgPSBvZmZzZXQudG9wICsgaGVpZ2h0IC0gYWN0dWFsSGVpZ2h0XG4gICAgfVxuXG4gICAgdmFyIGRlbHRhID0gdGhpcy5nZXRWaWV3cG9ydEFkanVzdGVkRGVsdGEocGxhY2VtZW50LCBvZmZzZXQsIGFjdHVhbFdpZHRoLCBhY3R1YWxIZWlnaHQpXG5cbiAgICBpZiAoZGVsdGEubGVmdCkgb2Zmc2V0LmxlZnQgKz0gZGVsdGEubGVmdFxuICAgIGVsc2Ugb2Zmc2V0LnRvcCArPSBkZWx0YS50b3BcblxuICAgIHZhciBhcnJvd0RlbHRhICAgICAgICAgID0gZGVsdGEubGVmdCA/IGRlbHRhLmxlZnQgKiAyIC0gd2lkdGggKyBhY3R1YWxXaWR0aCA6IGRlbHRhLnRvcCAqIDIgLSBoZWlnaHQgKyBhY3R1YWxIZWlnaHRcbiAgICB2YXIgYXJyb3dQb3NpdGlvbiAgICAgICA9IGRlbHRhLmxlZnQgPyAnbGVmdCcgICAgICAgIDogJ3RvcCdcbiAgICB2YXIgYXJyb3dPZmZzZXRQb3NpdGlvbiA9IGRlbHRhLmxlZnQgPyAnb2Zmc2V0V2lkdGgnIDogJ29mZnNldEhlaWdodCdcblxuICAgICR0aXAub2Zmc2V0KG9mZnNldClcbiAgICB0aGlzLnJlcGxhY2VBcnJvdyhhcnJvd0RlbHRhLCAkdGlwWzBdW2Fycm93T2Zmc2V0UG9zaXRpb25dLCBhcnJvd1Bvc2l0aW9uKVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUucmVwbGFjZUFycm93ID0gZnVuY3Rpb24gKGRlbHRhLCBkaW1lbnNpb24sIHBvc2l0aW9uKSB7XG4gICAgdGhpcy5hcnJvdygpLmNzcyhwb3NpdGlvbiwgZGVsdGEgPyAoNTAgKiAoMSAtIGRlbHRhIC8gZGltZW5zaW9uKSArICclJykgOiAnJylcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLnNldENvbnRlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyICR0aXAgID0gdGhpcy50aXAoKVxuICAgIHZhciB0aXRsZSA9IHRoaXMuZ2V0VGl0bGUoKVxuXG4gICAgJHRpcC5maW5kKCcudG9vbHRpcC1pbm5lcicpW3RoaXMub3B0aW9ucy5odG1sID8gJ2h0bWwnIDogJ3RleHQnXSh0aXRsZSlcbiAgICAkdGlwLnJlbW92ZUNsYXNzKCdmYWRlIGluIHRvcCBib3R0b20gbGVmdCByaWdodCcpXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5oaWRlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB0aGF0ID0gdGhpc1xuICAgIHZhciAkdGlwID0gdGhpcy50aXAoKVxuICAgIHZhciBlICAgID0gJC5FdmVudCgnaGlkZS5icy4nICsgdGhpcy50eXBlKVxuXG4gICAgdGhpcy4kZWxlbWVudC5yZW1vdmVBdHRyKCdhcmlhLWRlc2NyaWJlZGJ5JylcblxuICAgIGZ1bmN0aW9uIGNvbXBsZXRlKCkge1xuICAgICAgaWYgKHRoYXQuaG92ZXJTdGF0ZSAhPSAnaW4nKSAkdGlwLmRldGFjaCgpXG4gICAgICB0aGF0LiRlbGVtZW50LnRyaWdnZXIoJ2hpZGRlbi5icy4nICsgdGhhdC50eXBlKVxuICAgIH1cblxuICAgIHRoaXMuJGVsZW1lbnQudHJpZ2dlcihlKVxuXG4gICAgaWYgKGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHJldHVyblxuXG4gICAgJHRpcC5yZW1vdmVDbGFzcygnaW4nKVxuXG4gICAgJC5zdXBwb3J0LnRyYW5zaXRpb24gJiYgdGhpcy4kdGlwLmhhc0NsYXNzKCdmYWRlJykgP1xuICAgICAgJHRpcFxuICAgICAgICAub25lKCdic1RyYW5zaXRpb25FbmQnLCBjb21wbGV0ZSlcbiAgICAgICAgLmVtdWxhdGVUcmFuc2l0aW9uRW5kKDE1MCkgOlxuICAgICAgY29tcGxldGUoKVxuXG4gICAgdGhpcy5ob3ZlclN0YXRlID0gbnVsbFxuXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmZpeFRpdGxlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciAkZSA9IHRoaXMuJGVsZW1lbnRcbiAgICBpZiAoJGUuYXR0cigndGl0bGUnKSB8fCB0eXBlb2YgKCRlLmF0dHIoJ2RhdGEtb3JpZ2luYWwtdGl0bGUnKSkgIT0gJ3N0cmluZycpIHtcbiAgICAgICRlLmF0dHIoJ2RhdGEtb3JpZ2luYWwtdGl0bGUnLCAkZS5hdHRyKCd0aXRsZScpIHx8ICcnKS5hdHRyKCd0aXRsZScsICcnKVxuICAgIH1cbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmhhc0NvbnRlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0VGl0bGUoKVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuZ2V0UG9zaXRpb24gPSBmdW5jdGlvbiAoJGVsZW1lbnQpIHtcbiAgICAkZWxlbWVudCAgID0gJGVsZW1lbnQgfHwgdGhpcy4kZWxlbWVudFxuICAgIHZhciBlbCAgICAgPSAkZWxlbWVudFswXVxuICAgIHZhciBpc0JvZHkgPSBlbC50YWdOYW1lID09ICdCT0RZJ1xuICAgIHJldHVybiAkLmV4dGVuZCh7fSwgKHR5cGVvZiBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QgPT0gJ2Z1bmN0aW9uJykgPyBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSA6IG51bGwsIHtcbiAgICAgIHNjcm9sbDogaXNCb2R5ID8gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCB8fCBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCA6ICRlbGVtZW50LnNjcm9sbFRvcCgpLFxuICAgICAgd2lkdGg6ICBpc0JvZHkgPyAkKHdpbmRvdykud2lkdGgoKSAgOiAkZWxlbWVudC5vdXRlcldpZHRoKCksXG4gICAgICBoZWlnaHQ6IGlzQm9keSA/ICQod2luZG93KS5oZWlnaHQoKSA6ICRlbGVtZW50Lm91dGVySGVpZ2h0KClcbiAgICB9LCBpc0JvZHkgPyB7IHRvcDogMCwgbGVmdDogMCB9IDogJGVsZW1lbnQub2Zmc2V0KCkpXG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS5nZXRDYWxjdWxhdGVkT2Zmc2V0ID0gZnVuY3Rpb24gKHBsYWNlbWVudCwgcG9zLCBhY3R1YWxXaWR0aCwgYWN0dWFsSGVpZ2h0KSB7XG4gICAgcmV0dXJuIHBsYWNlbWVudCA9PSAnYm90dG9tJyA/IHsgdG9wOiBwb3MudG9wICsgcG9zLmhlaWdodCwgICBsZWZ0OiBwb3MubGVmdCArIHBvcy53aWR0aCAvIDIgLSBhY3R1YWxXaWR0aCAvIDIgIH0gOlxuICAgICAgICAgICBwbGFjZW1lbnQgPT0gJ3RvcCcgICAgPyB7IHRvcDogcG9zLnRvcCAtIGFjdHVhbEhlaWdodCwgbGVmdDogcG9zLmxlZnQgKyBwb3Mud2lkdGggLyAyIC0gYWN0dWFsV2lkdGggLyAyICB9IDpcbiAgICAgICAgICAgcGxhY2VtZW50ID09ICdsZWZ0JyAgID8geyB0b3A6IHBvcy50b3AgKyBwb3MuaGVpZ2h0IC8gMiAtIGFjdHVhbEhlaWdodCAvIDIsIGxlZnQ6IHBvcy5sZWZ0IC0gYWN0dWFsV2lkdGggfSA6XG4gICAgICAgIC8qIHBsYWNlbWVudCA9PSAncmlnaHQnICovIHsgdG9wOiBwb3MudG9wICsgcG9zLmhlaWdodCAvIDIgLSBhY3R1YWxIZWlnaHQgLyAyLCBsZWZ0OiBwb3MubGVmdCArIHBvcy53aWR0aCAgIH1cblxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuZ2V0Vmlld3BvcnRBZGp1c3RlZERlbHRhID0gZnVuY3Rpb24gKHBsYWNlbWVudCwgcG9zLCBhY3R1YWxXaWR0aCwgYWN0dWFsSGVpZ2h0KSB7XG4gICAgdmFyIGRlbHRhID0geyB0b3A6IDAsIGxlZnQ6IDAgfVxuICAgIGlmICghdGhpcy4kdmlld3BvcnQpIHJldHVybiBkZWx0YVxuXG4gICAgdmFyIHZpZXdwb3J0UGFkZGluZyA9IHRoaXMub3B0aW9ucy52aWV3cG9ydCAmJiB0aGlzLm9wdGlvbnMudmlld3BvcnQucGFkZGluZyB8fCAwXG4gICAgdmFyIHZpZXdwb3J0RGltZW5zaW9ucyA9IHRoaXMuZ2V0UG9zaXRpb24odGhpcy4kdmlld3BvcnQpXG5cbiAgICBpZiAoL3JpZ2h0fGxlZnQvLnRlc3QocGxhY2VtZW50KSkge1xuICAgICAgdmFyIHRvcEVkZ2VPZmZzZXQgICAgPSBwb3MudG9wIC0gdmlld3BvcnRQYWRkaW5nIC0gdmlld3BvcnREaW1lbnNpb25zLnNjcm9sbFxuICAgICAgdmFyIGJvdHRvbUVkZ2VPZmZzZXQgPSBwb3MudG9wICsgdmlld3BvcnRQYWRkaW5nIC0gdmlld3BvcnREaW1lbnNpb25zLnNjcm9sbCArIGFjdHVhbEhlaWdodFxuICAgICAgaWYgKHRvcEVkZ2VPZmZzZXQgPCB2aWV3cG9ydERpbWVuc2lvbnMudG9wKSB7IC8vIHRvcCBvdmVyZmxvd1xuICAgICAgICBkZWx0YS50b3AgPSB2aWV3cG9ydERpbWVuc2lvbnMudG9wIC0gdG9wRWRnZU9mZnNldFxuICAgICAgfSBlbHNlIGlmIChib3R0b21FZGdlT2Zmc2V0ID4gdmlld3BvcnREaW1lbnNpb25zLnRvcCArIHZpZXdwb3J0RGltZW5zaW9ucy5oZWlnaHQpIHsgLy8gYm90dG9tIG92ZXJmbG93XG4gICAgICAgIGRlbHRhLnRvcCA9IHZpZXdwb3J0RGltZW5zaW9ucy50b3AgKyB2aWV3cG9ydERpbWVuc2lvbnMuaGVpZ2h0IC0gYm90dG9tRWRnZU9mZnNldFxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgbGVmdEVkZ2VPZmZzZXQgID0gcG9zLmxlZnQgLSB2aWV3cG9ydFBhZGRpbmdcbiAgICAgIHZhciByaWdodEVkZ2VPZmZzZXQgPSBwb3MubGVmdCArIHZpZXdwb3J0UGFkZGluZyArIGFjdHVhbFdpZHRoXG4gICAgICBpZiAobGVmdEVkZ2VPZmZzZXQgPCB2aWV3cG9ydERpbWVuc2lvbnMubGVmdCkgeyAvLyBsZWZ0IG92ZXJmbG93XG4gICAgICAgIGRlbHRhLmxlZnQgPSB2aWV3cG9ydERpbWVuc2lvbnMubGVmdCAtIGxlZnRFZGdlT2Zmc2V0XG4gICAgICB9IGVsc2UgaWYgKHJpZ2h0RWRnZU9mZnNldCA+IHZpZXdwb3J0RGltZW5zaW9ucy53aWR0aCkgeyAvLyByaWdodCBvdmVyZmxvd1xuICAgICAgICBkZWx0YS5sZWZ0ID0gdmlld3BvcnREaW1lbnNpb25zLmxlZnQgKyB2aWV3cG9ydERpbWVuc2lvbnMud2lkdGggLSByaWdodEVkZ2VPZmZzZXRcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZGVsdGFcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmdldFRpdGxlID0gZnVuY3Rpb24gKCkge1xuICAgIHZhciB0aXRsZVxuICAgIHZhciAkZSA9IHRoaXMuJGVsZW1lbnRcbiAgICB2YXIgbyAgPSB0aGlzLm9wdGlvbnNcblxuICAgIHRpdGxlID0gJGUuYXR0cignZGF0YS1vcmlnaW5hbC10aXRsZScpXG4gICAgICB8fCAodHlwZW9mIG8udGl0bGUgPT0gJ2Z1bmN0aW9uJyA/IG8udGl0bGUuY2FsbCgkZVswXSkgOiAgby50aXRsZSlcblxuICAgIHJldHVybiB0aXRsZVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuZ2V0VUlEID0gZnVuY3Rpb24gKHByZWZpeCkge1xuICAgIGRvIHByZWZpeCArPSB+fihNYXRoLnJhbmRvbSgpICogMTAwMDAwMClcbiAgICB3aGlsZSAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocHJlZml4KSlcbiAgICByZXR1cm4gcHJlZml4XG4gIH1cblxuICBUb29sdGlwLnByb3RvdHlwZS50aXAgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuICh0aGlzLiR0aXAgPSB0aGlzLiR0aXAgfHwgJCh0aGlzLm9wdGlvbnMudGVtcGxhdGUpKVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuYXJyb3cgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuICh0aGlzLiRhcnJvdyA9IHRoaXMuJGFycm93IHx8IHRoaXMudGlwKCkuZmluZCgnLnRvb2x0aXAtYXJyb3cnKSlcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLnZhbGlkYXRlID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICghdGhpcy4kZWxlbWVudFswXS5wYXJlbnROb2RlKSB7XG4gICAgICB0aGlzLmhpZGUoKVxuICAgICAgdGhpcy4kZWxlbWVudCA9IG51bGxcbiAgICAgIHRoaXMub3B0aW9ucyAgPSBudWxsXG4gICAgfVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuZW5hYmxlID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZW5hYmxlZCA9IHRydWVcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLmRpc2FibGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5lbmFibGVkID0gZmFsc2VcbiAgfVxuXG4gIFRvb2x0aXAucHJvdG90eXBlLnRvZ2dsZUVuYWJsZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5lbmFibGVkID0gIXRoaXMuZW5hYmxlZFxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKGUpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICBpZiAoZSkge1xuICAgICAgc2VsZiA9ICQoZS5jdXJyZW50VGFyZ2V0KS5kYXRhKCdicy4nICsgdGhpcy50eXBlKVxuICAgICAgaWYgKCFzZWxmKSB7XG4gICAgICAgIHNlbGYgPSBuZXcgdGhpcy5jb25zdHJ1Y3RvcihlLmN1cnJlbnRUYXJnZXQsIHRoaXMuZ2V0RGVsZWdhdGVPcHRpb25zKCkpXG4gICAgICAgICQoZS5jdXJyZW50VGFyZ2V0KS5kYXRhKCdicy4nICsgdGhpcy50eXBlLCBzZWxmKVxuICAgICAgfVxuICAgIH1cblxuICAgIHNlbGYudGlwKCkuaGFzQ2xhc3MoJ2luJykgPyBzZWxmLmxlYXZlKHNlbGYpIDogc2VsZi5lbnRlcihzZWxmKVxuICB9XG5cbiAgVG9vbHRpcC5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uICgpIHtcbiAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0KVxuICAgIHRoaXMuaGlkZSgpLiRlbGVtZW50Lm9mZignLicgKyB0aGlzLnR5cGUpLnJlbW92ZURhdGEoJ2JzLicgKyB0aGlzLnR5cGUpXG4gIH1cblxuXG4gIC8vIFRPT0xUSVAgUExVR0lOIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIGZ1bmN0aW9uIFBsdWdpbihvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyAgID0gJCh0aGlzKVxuICAgICAgdmFyIGRhdGEgICAgPSAkdGhpcy5kYXRhKCdicy50b29sdGlwJylcbiAgICAgIHZhciBvcHRpb25zID0gdHlwZW9mIG9wdGlvbiA9PSAnb2JqZWN0JyAmJiBvcHRpb25cblxuICAgICAgaWYgKCFkYXRhICYmIG9wdGlvbiA9PSAnZGVzdHJveScpIHJldHVyblxuICAgICAgaWYgKCFkYXRhKSAkdGhpcy5kYXRhKCdicy50b29sdGlwJywgKGRhdGEgPSBuZXcgVG9vbHRpcCh0aGlzLCBvcHRpb25zKSkpXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PSAnc3RyaW5nJykgZGF0YVtvcHRpb25dKClcbiAgICB9KVxuICB9XG5cbiAgdmFyIG9sZCA9ICQuZm4udG9vbHRpcFxuXG4gICQuZm4udG9vbHRpcCAgICAgICAgICAgICA9IFBsdWdpblxuICAkLmZuLnRvb2x0aXAuQ29uc3RydWN0b3IgPSBUb29sdGlwXG5cblxuICAvLyBUT09MVElQIE5PIENPTkZMSUNUXG4gIC8vID09PT09PT09PT09PT09PT09PT1cblxuICAkLmZuLnRvb2x0aXAubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLnRvb2x0aXAgPSBvbGRcbiAgICByZXR1cm4gdGhpc1xuICB9XG5cbn0oalF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBCb290c3RyYXA6IHBvcG92ZXIuanMgdjMuMi4wXG4gKiBodHRwOi8vZ2V0Ym9vdHN0cmFwLmNvbS9qYXZhc2NyaXB0LyNwb3BvdmVyc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMS0yMDE0IFR3aXR0ZXIsIEluYy5cbiAqIExpY2Vuc2VkIHVuZGVyIE1JVCAoaHR0cHM6Ly9naXRodWIuY29tL3R3YnMvYm9vdHN0cmFwL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuXG4rZnVuY3Rpb24gKCQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8vIFBPUE9WRVIgUFVCTElDIENMQVNTIERFRklOSVRJT05cbiAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4gIHZhciBQb3BvdmVyID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLmluaXQoJ3BvcG92ZXInLCBlbGVtZW50LCBvcHRpb25zKVxuICB9XG5cbiAgaWYgKCEkLmZuLnRvb2x0aXApIHRocm93IG5ldyBFcnJvcignUG9wb3ZlciByZXF1aXJlcyB0b29sdGlwLmpzJylcblxuICBQb3BvdmVyLlZFUlNJT04gID0gJzMuMi4wJ1xuXG4gIFBvcG92ZXIuREVGQVVMVFMgPSAkLmV4dGVuZCh7fSwgJC5mbi50b29sdGlwLkNvbnN0cnVjdG9yLkRFRkFVTFRTLCB7XG4gICAgcGxhY2VtZW50OiAncmlnaHQnLFxuICAgIHRyaWdnZXI6ICdjbGljaycsXG4gICAgY29udGVudDogJycsXG4gICAgdGVtcGxhdGU6ICc8ZGl2IGNsYXNzPVwicG9wb3ZlclwiIHJvbGU9XCJ0b29sdGlwXCI+PGRpdiBjbGFzcz1cImFycm93XCI+PC9kaXY+PGgzIGNsYXNzPVwicG9wb3Zlci10aXRsZVwiPjwvaDM+PGRpdiBjbGFzcz1cInBvcG92ZXItY29udGVudFwiPjwvZGl2PjwvZGl2PidcbiAgfSlcblxuXG4gIC8vIE5PVEU6IFBPUE9WRVIgRVhURU5EUyB0b29sdGlwLmpzXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiAgUG9wb3Zlci5wcm90b3R5cGUgPSAkLmV4dGVuZCh7fSwgJC5mbi50b29sdGlwLkNvbnN0cnVjdG9yLnByb3RvdHlwZSlcblxuICBQb3BvdmVyLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFBvcG92ZXJcblxuICBQb3BvdmVyLnByb3RvdHlwZS5nZXREZWZhdWx0cyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gUG9wb3Zlci5ERUZBVUxUU1xuICB9XG5cbiAgUG9wb3Zlci5wcm90b3R5cGUuc2V0Q29udGVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgJHRpcCAgICA9IHRoaXMudGlwKClcbiAgICB2YXIgdGl0bGUgICA9IHRoaXMuZ2V0VGl0bGUoKVxuICAgIHZhciBjb250ZW50ID0gdGhpcy5nZXRDb250ZW50KClcblxuICAgICR0aXAuZmluZCgnLnBvcG92ZXItdGl0bGUnKVt0aGlzLm9wdGlvbnMuaHRtbCA/ICdodG1sJyA6ICd0ZXh0J10odGl0bGUpXG4gICAgJHRpcC5maW5kKCcucG9wb3Zlci1jb250ZW50JykuZW1wdHkoKVsgLy8gd2UgdXNlIGFwcGVuZCBmb3IgaHRtbCBvYmplY3RzIHRvIG1haW50YWluIGpzIGV2ZW50c1xuICAgICAgdGhpcy5vcHRpb25zLmh0bWwgPyAodHlwZW9mIGNvbnRlbnQgPT0gJ3N0cmluZycgPyAnaHRtbCcgOiAnYXBwZW5kJykgOiAndGV4dCdcbiAgICBdKGNvbnRlbnQpXG5cbiAgICAkdGlwLnJlbW92ZUNsYXNzKCdmYWRlIHRvcCBib3R0b20gbGVmdCByaWdodCBpbicpXG5cbiAgICAvLyBJRTggZG9lc24ndCBhY2NlcHQgaGlkaW5nIHZpYSB0aGUgYDplbXB0eWAgcHNldWRvIHNlbGVjdG9yLCB3ZSBoYXZlIHRvIGRvXG4gICAgLy8gdGhpcyBtYW51YWxseSBieSBjaGVja2luZyB0aGUgY29udGVudHMuXG4gICAgaWYgKCEkdGlwLmZpbmQoJy5wb3BvdmVyLXRpdGxlJykuaHRtbCgpKSAkdGlwLmZpbmQoJy5wb3BvdmVyLXRpdGxlJykuaGlkZSgpXG4gIH1cblxuICBQb3BvdmVyLnByb3RvdHlwZS5oYXNDb250ZW50ID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLmdldFRpdGxlKCkgfHwgdGhpcy5nZXRDb250ZW50KClcbiAgfVxuXG4gIFBvcG92ZXIucHJvdG90eXBlLmdldENvbnRlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyICRlID0gdGhpcy4kZWxlbWVudFxuICAgIHZhciBvICA9IHRoaXMub3B0aW9uc1xuXG4gICAgcmV0dXJuICRlLmF0dHIoJ2RhdGEtY29udGVudCcpXG4gICAgICB8fCAodHlwZW9mIG8uY29udGVudCA9PSAnZnVuY3Rpb24nID9cbiAgICAgICAgICAgIG8uY29udGVudC5jYWxsKCRlWzBdKSA6XG4gICAgICAgICAgICBvLmNvbnRlbnQpXG4gIH1cblxuICBQb3BvdmVyLnByb3RvdHlwZS5hcnJvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gKHRoaXMuJGFycm93ID0gdGhpcy4kYXJyb3cgfHwgdGhpcy50aXAoKS5maW5kKCcuYXJyb3cnKSlcbiAgfVxuXG4gIFBvcG92ZXIucHJvdG90eXBlLnRpcCA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIXRoaXMuJHRpcCkgdGhpcy4kdGlwID0gJCh0aGlzLm9wdGlvbnMudGVtcGxhdGUpXG4gICAgcmV0dXJuIHRoaXMuJHRpcFxuICB9XG5cblxuICAvLyBQT1BPVkVSIFBMVUdJTiBERUZJTklUSU9OXG4gIC8vID09PT09PT09PT09PT09PT09PT09PT09PT1cblxuICBmdW5jdGlvbiBQbHVnaW4ob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMgICA9ICQodGhpcylcbiAgICAgIHZhciBkYXRhICAgID0gJHRoaXMuZGF0YSgnYnMucG9wb3ZlcicpXG4gICAgICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT0gJ29iamVjdCcgJiYgb3B0aW9uXG5cbiAgICAgIGlmICghZGF0YSAmJiBvcHRpb24gPT0gJ2Rlc3Ryb3knKSByZXR1cm5cbiAgICAgIGlmICghZGF0YSkgJHRoaXMuZGF0YSgnYnMucG9wb3ZlcicsIChkYXRhID0gbmV3IFBvcG92ZXIodGhpcywgb3B0aW9ucykpKVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT0gJ3N0cmluZycpIGRhdGFbb3B0aW9uXSgpXG4gICAgfSlcbiAgfVxuXG4gIHZhciBvbGQgPSAkLmZuLnBvcG92ZXJcblxuICAkLmZuLnBvcG92ZXIgICAgICAgICAgICAgPSBQbHVnaW5cbiAgJC5mbi5wb3BvdmVyLkNvbnN0cnVjdG9yID0gUG9wb3ZlclxuXG5cbiAgLy8gUE9QT1ZFUiBOTyBDT05GTElDVFxuICAvLyA9PT09PT09PT09PT09PT09PT09XG5cbiAgJC5mbi5wb3BvdmVyLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5wb3BvdmVyID0gb2xkXG4gICAgcmV0dXJuIHRoaXNcbiAgfVxuXG59KGpRdWVyeSk7XG5cblxuLypcbiAqIGFuZ3VsYXItdWktYm9vdHN0cmFwXG4gKiBodHRwOi8vYW5ndWxhci11aS5naXRodWIuaW8vYm9vdHN0cmFwL1xuXG4gKiBWZXJzaW9uOiAwLjExLjIgLSAyMDE0LTA5LTI2XG4gKiBMaWNlbnNlOiBNSVRcbiAqL1xuYW5ndWxhci5tb2R1bGUoXCJ1aS5ib290c3RyYXBcIiwgW1widWkuYm9vdHN0cmFwLnRwbHNcIiwgXCJ1aS5ib290c3RyYXAudHJhbnNpdGlvblwiLFwidWkuYm9vdHN0cmFwLmNvbGxhcHNlXCIsXCJ1aS5ib290c3RyYXAuYWNjb3JkaW9uXCIsXCJ1aS5ib290c3RyYXAuYWxlcnRcIixcInVpLmJvb3RzdHJhcC5iaW5kSHRtbFwiLFwidWkuYm9vdHN0cmFwLmJ1dHRvbnNcIixcInVpLmJvb3RzdHJhcC5jYXJvdXNlbFwiLFwidWkuYm9vdHN0cmFwLmRhdGVwYXJzZXJcIixcInVpLmJvb3RzdHJhcC5wb3NpdGlvblwiLFwidWkuYm9vdHN0cmFwLmRhdGVwaWNrZXJcIixcInVpLmJvb3RzdHJhcC5kcm9wZG93blwiLFwidWkuYm9vdHN0cmFwLm1vZGFsXCIsXCJ1aS5ib290c3RyYXAucGFnaW5hdGlvblwiLFwidWkuYm9vdHN0cmFwLnRvb2x0aXBcIixcInVpLmJvb3RzdHJhcC5wb3BvdmVyXCIsXCJ1aS5ib290c3RyYXAucHJvZ3Jlc3NiYXJcIixcInVpLmJvb3RzdHJhcC5yYXRpbmdcIixcInVpLmJvb3RzdHJhcC50YWJzXCIsXCJ1aS5ib290c3RyYXAudGltZXBpY2tlclwiLFwidWkuYm9vdHN0cmFwLnR5cGVhaGVhZFwiXSk7XG5hbmd1bGFyLm1vZHVsZShcInVpLmJvb3RzdHJhcC50cGxzXCIsIFtcInRlbXBsYXRlL2FjY29yZGlvbi9hY2NvcmRpb24tZ3JvdXAuaHRtbFwiLFwidGVtcGxhdGUvYWNjb3JkaW9uL2FjY29yZGlvbi5odG1sXCIsXCJ0ZW1wbGF0ZS9hbGVydC9hbGVydC5odG1sXCIsXCJ0ZW1wbGF0ZS9jYXJvdXNlbC9jYXJvdXNlbC5odG1sXCIsXCJ0ZW1wbGF0ZS9jYXJvdXNlbC9zbGlkZS5odG1sXCIsXCJ0ZW1wbGF0ZS9kYXRlcGlja2VyL2RhdGVwaWNrZXIuaHRtbFwiLFwidGVtcGxhdGUvZGF0ZXBpY2tlci9kYXkuaHRtbFwiLFwidGVtcGxhdGUvZGF0ZXBpY2tlci9tb250aC5odG1sXCIsXCJ0ZW1wbGF0ZS9kYXRlcGlja2VyL3BvcHVwLmh0bWxcIixcInRlbXBsYXRlL2RhdGVwaWNrZXIveWVhci5odG1sXCIsXCJ0ZW1wbGF0ZS9tb2RhbC9iYWNrZHJvcC5odG1sXCIsXCJ0ZW1wbGF0ZS9tb2RhbC93aW5kb3cuaHRtbFwiLFwidGVtcGxhdGUvcGFnaW5hdGlvbi9wYWdlci5odG1sXCIsXCJ0ZW1wbGF0ZS9wYWdpbmF0aW9uL3BhZ2luYXRpb24uaHRtbFwiLFwidGVtcGxhdGUvdG9vbHRpcC90b29sdGlwLWh0bWwtdW5zYWZlLXBvcHVwLmh0bWxcIixcInRlbXBsYXRlL3Rvb2x0aXAvdG9vbHRpcC1wb3B1cC5odG1sXCIsXCJ0ZW1wbGF0ZS9wb3BvdmVyL3BvcG92ZXIuaHRtbFwiLFwidGVtcGxhdGUvcHJvZ3Jlc3NiYXIvYmFyLmh0bWxcIixcInRlbXBsYXRlL3Byb2dyZXNzYmFyL3Byb2dyZXNzLmh0bWxcIixcInRlbXBsYXRlL3Byb2dyZXNzYmFyL3Byb2dyZXNzYmFyLmh0bWxcIixcInRlbXBsYXRlL3JhdGluZy9yYXRpbmcuaHRtbFwiLFwidGVtcGxhdGUvdGFicy90YWIuaHRtbFwiLFwidGVtcGxhdGUvdGFicy90YWJzZXQuaHRtbFwiLFwidGVtcGxhdGUvdGltZXBpY2tlci90aW1lcGlja2VyLmh0bWxcIixcInRlbXBsYXRlL3R5cGVhaGVhZC90eXBlYWhlYWQtbWF0Y2guaHRtbFwiLFwidGVtcGxhdGUvdHlwZWFoZWFkL3R5cGVhaGVhZC1wb3B1cC5odG1sXCJdKTtcbmFuZ3VsYXIubW9kdWxlKCd1aS5ib290c3RyYXAudHJhbnNpdGlvbicsIFtdKVxuXG4vKipcbiAqICR0cmFuc2l0aW9uIHNlcnZpY2UgcHJvdmlkZXMgYSBjb25zaXN0ZW50IGludGVyZmFjZSB0byB0cmlnZ2VyIENTUyAzIHRyYW5zaXRpb25zIGFuZCB0byBiZSBpbmZvcm1lZCB3aGVuIHRoZXkgY29tcGxldGUuXG4gKiBAcGFyYW0gIHtET01FbGVtZW50fSBlbGVtZW50ICBUaGUgRE9NRWxlbWVudCB0aGF0IHdpbGwgYmUgYW5pbWF0ZWQuXG4gKiBAcGFyYW0gIHtzdHJpbmd8b2JqZWN0fGZ1bmN0aW9ufSB0cmlnZ2VyICBUaGUgdGhpbmcgdGhhdCB3aWxsIGNhdXNlIHRoZSB0cmFuc2l0aW9uIHRvIHN0YXJ0OlxuICogICAtIEFzIGEgc3RyaW5nLCBpdCByZXByZXNlbnRzIHRoZSBjc3MgY2xhc3MgdG8gYmUgYWRkZWQgdG8gdGhlIGVsZW1lbnQuXG4gKiAgIC0gQXMgYW4gb2JqZWN0LCBpdCByZXByZXNlbnRzIGEgaGFzaCBvZiBzdHlsZSBhdHRyaWJ1dGVzIHRvIGJlIGFwcGxpZWQgdG8gdGhlIGVsZW1lbnQuXG4gKiAgIC0gQXMgYSBmdW5jdGlvbiwgaXQgcmVwcmVzZW50cyBhIGZ1bmN0aW9uIHRvIGJlIGNhbGxlZCB0aGF0IHdpbGwgY2F1c2UgdGhlIHRyYW5zaXRpb24gdG8gb2NjdXIuXG4gKiBAcmV0dXJuIHtQcm9taXNlfSAgQSBwcm9taXNlIHRoYXQgaXMgcmVzb2x2ZWQgd2hlbiB0aGUgdHJhbnNpdGlvbiBmaW5pc2hlcy5cbiAqL1xuLmZhY3RvcnkoJyR0cmFuc2l0aW9uJywgWyckcScsICckdGltZW91dCcsICckcm9vdFNjb3BlJywgZnVuY3Rpb24oJHEsICR0aW1lb3V0LCAkcm9vdFNjb3BlKSB7XG5cbiAgdmFyICR0cmFuc2l0aW9uID0gZnVuY3Rpb24oZWxlbWVudCwgdHJpZ2dlciwgb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgdmFyIGVuZEV2ZW50TmFtZSA9ICR0cmFuc2l0aW9uW29wdGlvbnMuYW5pbWF0aW9uID8gJ2FuaW1hdGlvbkVuZEV2ZW50TmFtZScgOiAndHJhbnNpdGlvbkVuZEV2ZW50TmFtZSddO1xuXG4gICAgdmFyIHRyYW5zaXRpb25FbmRIYW5kbGVyID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICRyb290U2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCkge1xuICAgICAgICBlbGVtZW50LnVuYmluZChlbmRFdmVudE5hbWUsIHRyYW5zaXRpb25FbmRIYW5kbGVyKTtcbiAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShlbGVtZW50KTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBpZiAoZW5kRXZlbnROYW1lKSB7XG4gICAgICBlbGVtZW50LmJpbmQoZW5kRXZlbnROYW1lLCB0cmFuc2l0aW9uRW5kSGFuZGxlcik7XG4gICAgfVxuXG4gICAgLy8gV3JhcCBpbiBhIHRpbWVvdXQgdG8gYWxsb3cgdGhlIGJyb3dzZXIgdGltZSB0byB1cGRhdGUgdGhlIERPTSBiZWZvcmUgdGhlIHRyYW5zaXRpb24gaXMgdG8gb2NjdXJcbiAgICAkdGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgIGlmICggYW5ndWxhci5pc1N0cmluZyh0cmlnZ2VyKSApIHtcbiAgICAgICAgZWxlbWVudC5hZGRDbGFzcyh0cmlnZ2VyKTtcbiAgICAgIH0gZWxzZSBpZiAoIGFuZ3VsYXIuaXNGdW5jdGlvbih0cmlnZ2VyKSApIHtcbiAgICAgICAgdHJpZ2dlcihlbGVtZW50KTtcbiAgICAgIH0gZWxzZSBpZiAoIGFuZ3VsYXIuaXNPYmplY3QodHJpZ2dlcikgKSB7XG4gICAgICAgIGVsZW1lbnQuY3NzKHRyaWdnZXIpO1xuICAgICAgfVxuICAgICAgLy9JZiBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgdHJhbnNpdGlvbnMsIGluc3RhbnRseSByZXNvbHZlXG4gICAgICBpZiAoICFlbmRFdmVudE5hbWUgKSB7XG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUoZWxlbWVudCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBBZGQgb3VyIGN1c3RvbSBjYW5jZWwgZnVuY3Rpb24gdG8gdGhlIHByb21pc2UgdGhhdCBpcyByZXR1cm5lZFxuICAgIC8vIFdlIGNhbiBjYWxsIHRoaXMgaWYgd2UgYXJlIGFib3V0IHRvIHJ1biBhIG5ldyB0cmFuc2l0aW9uLCB3aGljaCB3ZSBrbm93IHdpbGwgcHJldmVudCB0aGlzIHRyYW5zaXRpb24gZnJvbSBlbmRpbmcsXG4gICAgLy8gaS5lLiBpdCB3aWxsIHRoZXJlZm9yZSBuZXZlciByYWlzZSBhIHRyYW5zaXRpb25FbmQgZXZlbnQgZm9yIHRoYXQgdHJhbnNpdGlvblxuICAgIGRlZmVycmVkLnByb21pc2UuY2FuY2VsID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIGVuZEV2ZW50TmFtZSApIHtcbiAgICAgICAgZWxlbWVudC51bmJpbmQoZW5kRXZlbnROYW1lLCB0cmFuc2l0aW9uRW5kSGFuZGxlcik7XG4gICAgICB9XG4gICAgICBkZWZlcnJlZC5yZWplY3QoJ1RyYW5zaXRpb24gY2FuY2VsbGVkJyk7XG4gICAgfTtcblxuICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICB9O1xuXG4gIC8vIFdvcmsgb3V0IHRoZSBuYW1lIG9mIHRoZSB0cmFuc2l0aW9uRW5kIGV2ZW50XG4gIHZhciB0cmFuc0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0cmFucycpO1xuICB2YXIgdHJhbnNpdGlvbkVuZEV2ZW50TmFtZXMgPSB7XG4gICAgJ1dlYmtpdFRyYW5zaXRpb24nOiAnd2Via2l0VHJhbnNpdGlvbkVuZCcsXG4gICAgJ01velRyYW5zaXRpb24nOiAndHJhbnNpdGlvbmVuZCcsXG4gICAgJ09UcmFuc2l0aW9uJzogJ29UcmFuc2l0aW9uRW5kJyxcbiAgICAndHJhbnNpdGlvbic6ICd0cmFuc2l0aW9uZW5kJ1xuICB9O1xuICB2YXIgYW5pbWF0aW9uRW5kRXZlbnROYW1lcyA9IHtcbiAgICAnV2Via2l0VHJhbnNpdGlvbic6ICd3ZWJraXRBbmltYXRpb25FbmQnLFxuICAgICdNb3pUcmFuc2l0aW9uJzogJ2FuaW1hdGlvbmVuZCcsXG4gICAgJ09UcmFuc2l0aW9uJzogJ29BbmltYXRpb25FbmQnLFxuICAgICd0cmFuc2l0aW9uJzogJ2FuaW1hdGlvbmVuZCdcbiAgfTtcbiAgZnVuY3Rpb24gZmluZEVuZEV2ZW50TmFtZShlbmRFdmVudE5hbWVzKSB7XG4gICAgZm9yICh2YXIgbmFtZSBpbiBlbmRFdmVudE5hbWVzKXtcbiAgICAgIGlmICh0cmFuc0VsZW1lbnQuc3R5bGVbbmFtZV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gZW5kRXZlbnROYW1lc1tuYW1lXTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgJHRyYW5zaXRpb24udHJhbnNpdGlvbkVuZEV2ZW50TmFtZSA9IGZpbmRFbmRFdmVudE5hbWUodHJhbnNpdGlvbkVuZEV2ZW50TmFtZXMpO1xuICAkdHJhbnNpdGlvbi5hbmltYXRpb25FbmRFdmVudE5hbWUgPSBmaW5kRW5kRXZlbnROYW1lKGFuaW1hdGlvbkVuZEV2ZW50TmFtZXMpO1xuICByZXR1cm4gJHRyYW5zaXRpb247XG59XSk7XG5cbmFuZ3VsYXIubW9kdWxlKCd1aS5ib290c3RyYXAuY29sbGFwc2UnLCBbJ3VpLmJvb3RzdHJhcC50cmFuc2l0aW9uJ10pXG5cbiAgLmRpcmVjdGl2ZSgnY29sbGFwc2UnLCBbJyR0cmFuc2l0aW9uJywgZnVuY3Rpb24gKCR0cmFuc2l0aW9uKSB7XG5cbiAgICByZXR1cm4ge1xuICAgICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50LCBhdHRycykge1xuXG4gICAgICAgIHZhciBpbml0aWFsQW5pbVNraXAgPSB0cnVlO1xuICAgICAgICB2YXIgY3VycmVudFRyYW5zaXRpb247XG5cbiAgICAgICAgZnVuY3Rpb24gZG9UcmFuc2l0aW9uKGNoYW5nZSkge1xuICAgICAgICAgIHZhciBuZXdUcmFuc2l0aW9uID0gJHRyYW5zaXRpb24oZWxlbWVudCwgY2hhbmdlKTtcbiAgICAgICAgICBpZiAoY3VycmVudFRyYW5zaXRpb24pIHtcbiAgICAgICAgICAgIGN1cnJlbnRUcmFuc2l0aW9uLmNhbmNlbCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBjdXJyZW50VHJhbnNpdGlvbiA9IG5ld1RyYW5zaXRpb247XG4gICAgICAgICAgbmV3VHJhbnNpdGlvbi50aGVuKG5ld1RyYW5zaXRpb25Eb25lLCBuZXdUcmFuc2l0aW9uRG9uZSk7XG4gICAgICAgICAgcmV0dXJuIG5ld1RyYW5zaXRpb247XG5cbiAgICAgICAgICBmdW5jdGlvbiBuZXdUcmFuc2l0aW9uRG9uZSgpIHtcbiAgICAgICAgICAgIC8vIE1ha2Ugc3VyZSBpdCdzIHRoaXMgdHJhbnNpdGlvbiwgb3RoZXJ3aXNlLCBsZWF2ZSBpdCBhbG9uZS5cbiAgICAgICAgICAgIGlmIChjdXJyZW50VHJhbnNpdGlvbiA9PT0gbmV3VHJhbnNpdGlvbikge1xuICAgICAgICAgICAgICBjdXJyZW50VHJhbnNpdGlvbiA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBleHBhbmQoKSB7XG4gICAgICAgICAgaWYgKGluaXRpYWxBbmltU2tpcCkge1xuICAgICAgICAgICAgaW5pdGlhbEFuaW1Ta2lwID0gZmFsc2U7XG4gICAgICAgICAgICBleHBhbmREb25lKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVsZW1lbnQucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNlJykuYWRkQ2xhc3MoJ2NvbGxhcHNpbmcnKTtcbiAgICAgICAgICAgIGRvVHJhbnNpdGlvbih7IGhlaWdodDogZWxlbWVudFswXS5zY3JvbGxIZWlnaHQgKyAncHgnIH0pLnRoZW4oZXhwYW5kRG9uZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZXhwYW5kRG9uZSgpIHtcbiAgICAgICAgICBlbGVtZW50LnJlbW92ZUNsYXNzKCdjb2xsYXBzaW5nJyk7XG4gICAgICAgICAgZWxlbWVudC5hZGRDbGFzcygnY29sbGFwc2UgaW4nKTtcbiAgICAgICAgICBlbGVtZW50LmNzcyh7aGVpZ2h0OiAnYXV0byd9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGNvbGxhcHNlKCkge1xuICAgICAgICAgIGlmIChpbml0aWFsQW5pbVNraXApIHtcbiAgICAgICAgICAgIGluaXRpYWxBbmltU2tpcCA9IGZhbHNlO1xuICAgICAgICAgICAgY29sbGFwc2VEb25lKCk7XG4gICAgICAgICAgICBlbGVtZW50LmNzcyh7aGVpZ2h0OiAwfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIENTUyB0cmFuc2l0aW9ucyBkb24ndCB3b3JrIHdpdGggaGVpZ2h0OiBhdXRvLCBzbyB3ZSBoYXZlIHRvIG1hbnVhbGx5IGNoYW5nZSB0aGUgaGVpZ2h0IHRvIGEgc3BlY2lmaWMgdmFsdWVcbiAgICAgICAgICAgIGVsZW1lbnQuY3NzKHsgaGVpZ2h0OiBlbGVtZW50WzBdLnNjcm9sbEhlaWdodCArICdweCcgfSk7XG4gICAgICAgICAgICAvL3RyaWdnZXIgcmVmbG93IHNvIGEgYnJvd3NlciByZWFsaXplcyB0aGF0IGhlaWdodCB3YXMgdXBkYXRlZCBmcm9tIGF1dG8gdG8gYSBzcGVjaWZpYyB2YWx1ZVxuICAgICAgICAgICAgdmFyIHggPSBlbGVtZW50WzBdLm9mZnNldFdpZHRoO1xuXG4gICAgICAgICAgICBlbGVtZW50LnJlbW92ZUNsYXNzKCdjb2xsYXBzZSBpbicpLmFkZENsYXNzKCdjb2xsYXBzaW5nJyk7XG5cbiAgICAgICAgICAgIGRvVHJhbnNpdGlvbih7IGhlaWdodDogMCB9KS50aGVuKGNvbGxhcHNlRG9uZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gY29sbGFwc2VEb25lKCkge1xuICAgICAgICAgIGVsZW1lbnQucmVtb3ZlQ2xhc3MoJ2NvbGxhcHNpbmcnKTtcbiAgICAgICAgICBlbGVtZW50LmFkZENsYXNzKCdjb2xsYXBzZScpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2NvcGUuJHdhdGNoKGF0dHJzLmNvbGxhcHNlLCBmdW5jdGlvbiAoc2hvdWxkQ29sbGFwc2UpIHtcbiAgICAgICAgICBpZiAoc2hvdWxkQ29sbGFwc2UpIHtcbiAgICAgICAgICAgIGNvbGxhcHNlKCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGV4cGFuZCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcbiAgfV0pO1xuXG5hbmd1bGFyLm1vZHVsZSgndWkuYm9vdHN0cmFwLmFjY29yZGlvbicsIFsndWkuYm9vdHN0cmFwLmNvbGxhcHNlJ10pXG5cbi5jb25zdGFudCgnYWNjb3JkaW9uQ29uZmlnJywge1xuICBjbG9zZU90aGVyczogdHJ1ZVxufSlcblxuLmNvbnRyb2xsZXIoJ0FjY29yZGlvbkNvbnRyb2xsZXInLCBbJyRzY29wZScsICckYXR0cnMnLCAnYWNjb3JkaW9uQ29uZmlnJywgZnVuY3Rpb24gKCRzY29wZSwgJGF0dHJzLCBhY2NvcmRpb25Db25maWcpIHtcblxuICAvLyBUaGlzIGFycmF5IGtlZXBzIHRyYWNrIG9mIHRoZSBhY2NvcmRpb24gZ3JvdXBzXG4gIHRoaXMuZ3JvdXBzID0gW107XG5cbiAgLy8gRW5zdXJlIHRoYXQgYWxsIHRoZSBncm91cHMgaW4gdGhpcyBhY2NvcmRpb24gYXJlIGNsb3NlZCwgdW5sZXNzIGNsb3NlLW90aGVycyBleHBsaWNpdGx5IHNheXMgbm90IHRvXG4gIHRoaXMuY2xvc2VPdGhlcnMgPSBmdW5jdGlvbihvcGVuR3JvdXApIHtcbiAgICB2YXIgY2xvc2VPdGhlcnMgPSBhbmd1bGFyLmlzRGVmaW5lZCgkYXR0cnMuY2xvc2VPdGhlcnMpID8gJHNjb3BlLiRldmFsKCRhdHRycy5jbG9zZU90aGVycykgOiBhY2NvcmRpb25Db25maWcuY2xvc2VPdGhlcnM7XG4gICAgaWYgKCBjbG9zZU90aGVycyApIHtcbiAgICAgIGFuZ3VsYXIuZm9yRWFjaCh0aGlzLmdyb3VwcywgZnVuY3Rpb24gKGdyb3VwKSB7XG4gICAgICAgIGlmICggZ3JvdXAgIT09IG9wZW5Hcm91cCApIHtcbiAgICAgICAgICBncm91cC5pc09wZW4gPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIC8vIFRoaXMgaXMgY2FsbGVkIGZyb20gdGhlIGFjY29yZGlvbi1ncm91cCBkaXJlY3RpdmUgdG8gYWRkIGl0c2VsZiB0byB0aGUgYWNjb3JkaW9uXG4gIHRoaXMuYWRkR3JvdXAgPSBmdW5jdGlvbihncm91cFNjb3BlKSB7XG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgIHRoaXMuZ3JvdXBzLnB1c2goZ3JvdXBTY29wZSk7XG5cbiAgICBncm91cFNjb3BlLiRvbignJGRlc3Ryb3knLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIHRoYXQucmVtb3ZlR3JvdXAoZ3JvdXBTY29wZSk7XG4gICAgfSk7XG4gIH07XG5cbiAgLy8gVGhpcyBpcyBjYWxsZWQgZnJvbSB0aGUgYWNjb3JkaW9uLWdyb3VwIGRpcmVjdGl2ZSB3aGVuIHRvIHJlbW92ZSBpdHNlbGZcbiAgdGhpcy5yZW1vdmVHcm91cCA9IGZ1bmN0aW9uKGdyb3VwKSB7XG4gICAgdmFyIGluZGV4ID0gdGhpcy5ncm91cHMuaW5kZXhPZihncm91cCk7XG4gICAgaWYgKCBpbmRleCAhPT0gLTEgKSB7XG4gICAgICB0aGlzLmdyb3Vwcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIH1cbiAgfTtcblxufV0pXG5cbi8vIFRoZSBhY2NvcmRpb24gZGlyZWN0aXZlIHNpbXBseSBzZXRzIHVwIHRoZSBkaXJlY3RpdmUgY29udHJvbGxlclxuLy8gYW5kIGFkZHMgYW4gYWNjb3JkaW9uIENTUyBjbGFzcyB0byBpdHNlbGYgZWxlbWVudC5cbi5kaXJlY3RpdmUoJ2FjY29yZGlvbicsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDonRUEnLFxuICAgIGNvbnRyb2xsZXI6J0FjY29yZGlvbkNvbnRyb2xsZXInLFxuICAgIHRyYW5zY2x1ZGU6IHRydWUsXG4gICAgcmVwbGFjZTogZmFsc2UsXG4gICAgdGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZS9hY2NvcmRpb24vYWNjb3JkaW9uLmh0bWwnXG4gIH07XG59KVxuXG4vLyBUaGUgYWNjb3JkaW9uLWdyb3VwIGRpcmVjdGl2ZSBpbmRpY2F0ZXMgYSBibG9jayBvZiBodG1sIHRoYXQgd2lsbCBleHBhbmQgYW5kIGNvbGxhcHNlIGluIGFuIGFjY29yZGlvblxuLmRpcmVjdGl2ZSgnYWNjb3JkaW9uR3JvdXAnLCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHtcbiAgICByZXF1aXJlOideYWNjb3JkaW9uJywgICAgICAgICAvLyBXZSBuZWVkIHRoaXMgZGlyZWN0aXZlIHRvIGJlIGluc2lkZSBhbiBhY2NvcmRpb25cbiAgICByZXN0cmljdDonRUEnLFxuICAgIHRyYW5zY2x1ZGU6dHJ1ZSwgICAgICAgICAgICAgIC8vIEl0IHRyYW5zY2x1ZGVzIHRoZSBjb250ZW50cyBvZiB0aGUgZGlyZWN0aXZlIGludG8gdGhlIHRlbXBsYXRlXG4gICAgcmVwbGFjZTogdHJ1ZSwgICAgICAgICAgICAgICAgLy8gVGhlIGVsZW1lbnQgY29udGFpbmluZyB0aGUgZGlyZWN0aXZlIHdpbGwgYmUgcmVwbGFjZWQgd2l0aCB0aGUgdGVtcGxhdGVcbiAgICB0ZW1wbGF0ZVVybDondGVtcGxhdGUvYWNjb3JkaW9uL2FjY29yZGlvbi1ncm91cC5odG1sJyxcbiAgICBzY29wZToge1xuICAgICAgaGVhZGluZzogJ0AnLCAgICAgICAgICAgICAgIC8vIEludGVycG9sYXRlIHRoZSBoZWFkaW5nIGF0dHJpYnV0ZSBvbnRvIHRoaXMgc2NvcGVcbiAgICAgIGlzT3BlbjogJz0/JyxcbiAgICAgIGlzRGlzYWJsZWQ6ICc9PydcbiAgICB9LFxuICAgIGNvbnRyb2xsZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5zZXRIZWFkaW5nID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICB0aGlzLmhlYWRpbmcgPSBlbGVtZW50O1xuICAgICAgfTtcbiAgICB9LFxuICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtZW50LCBhdHRycywgYWNjb3JkaW9uQ3RybCkge1xuICAgICAgYWNjb3JkaW9uQ3RybC5hZGRHcm91cChzY29wZSk7XG5cbiAgICAgIHNjb3BlLiR3YXRjaCgnaXNPcGVuJywgZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgaWYgKCB2YWx1ZSApIHtcbiAgICAgICAgICBhY2NvcmRpb25DdHJsLmNsb3NlT3RoZXJzKHNjb3BlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIHNjb3BlLnRvZ2dsZU9wZW4gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKCAhc2NvcGUuaXNEaXNhYmxlZCApIHtcbiAgICAgICAgICBzY29wZS5pc09wZW4gPSAhc2NvcGUuaXNPcGVuO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbn0pXG5cbi8vIFVzZSBhY2NvcmRpb24taGVhZGluZyBiZWxvdyBhbiBhY2NvcmRpb24tZ3JvdXAgdG8gcHJvdmlkZSBhIGhlYWRpbmcgY29udGFpbmluZyBIVE1MXG4vLyA8YWNjb3JkaW9uLWdyb3VwPlxuLy8gICA8YWNjb3JkaW9uLWhlYWRpbmc+SGVhZGluZyBjb250YWluaW5nIEhUTUwgLSA8aW1nIHNyYz1cIi4uLlwiPjwvYWNjb3JkaW9uLWhlYWRpbmc+XG4vLyA8L2FjY29yZGlvbi1ncm91cD5cbi5kaXJlY3RpdmUoJ2FjY29yZGlvbkhlYWRpbmcnLCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogJ0VBJyxcbiAgICB0cmFuc2NsdWRlOiB0cnVlLCAgIC8vIEdyYWIgdGhlIGNvbnRlbnRzIHRvIGJlIHVzZWQgYXMgdGhlIGhlYWRpbmdcbiAgICB0ZW1wbGF0ZTogJycsICAgICAgIC8vIEluIGVmZmVjdCByZW1vdmUgdGhpcyBlbGVtZW50IVxuICAgIHJlcGxhY2U6IHRydWUsXG4gICAgcmVxdWlyZTogJ15hY2NvcmRpb25Hcm91cCcsXG4gICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHIsIGFjY29yZGlvbkdyb3VwQ3RybCwgdHJhbnNjbHVkZSkge1xuICAgICAgLy8gUGFzcyB0aGUgaGVhZGluZyB0byB0aGUgYWNjb3JkaW9uLWdyb3VwIGNvbnRyb2xsZXJcbiAgICAgIC8vIHNvIHRoYXQgaXQgY2FuIGJlIHRyYW5zY2x1ZGVkIGludG8gdGhlIHJpZ2h0IHBsYWNlIGluIHRoZSB0ZW1wbGF0ZVxuICAgICAgLy8gW1RoZSBzZWNvbmQgcGFyYW1ldGVyIHRvIHRyYW5zY2x1ZGUgY2F1c2VzIHRoZSBlbGVtZW50cyB0byBiZSBjbG9uZWQgc28gdGhhdCB0aGV5IHdvcmsgaW4gbmctcmVwZWF0XVxuICAgICAgYWNjb3JkaW9uR3JvdXBDdHJsLnNldEhlYWRpbmcodHJhbnNjbHVkZShzY29wZSwgZnVuY3Rpb24oKSB7fSkpO1xuICAgIH1cbiAgfTtcbn0pXG5cbi8vIFVzZSBpbiB0aGUgYWNjb3JkaW9uLWdyb3VwIHRlbXBsYXRlIHRvIGluZGljYXRlIHdoZXJlIHlvdSB3YW50IHRoZSBoZWFkaW5nIHRvIGJlIHRyYW5zY2x1ZGVkXG4vLyBZb3UgbXVzdCBwcm92aWRlIHRoZSBwcm9wZXJ0eSBvbiB0aGUgYWNjb3JkaW9uLWdyb3VwIGNvbnRyb2xsZXIgdGhhdCB3aWxsIGhvbGQgdGhlIHRyYW5zY2x1ZGVkIGVsZW1lbnRcbi8vIDxkaXYgY2xhc3M9XCJhY2NvcmRpb24tZ3JvdXBcIj5cbi8vICAgPGRpdiBjbGFzcz1cImFjY29yZGlvbi1oZWFkaW5nXCIgPjxhIC4uLiBhY2NvcmRpb24tdHJhbnNjbHVkZT1cImhlYWRpbmdcIj4uLi48L2E+PC9kaXY+XG4vLyAgIC4uLlxuLy8gPC9kaXY+XG4uZGlyZWN0aXZlKCdhY2NvcmRpb25UcmFuc2NsdWRlJywgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB7XG4gICAgcmVxdWlyZTogJ15hY2NvcmRpb25Hcm91cCcsXG4gICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHIsIGNvbnRyb2xsZXIpIHtcbiAgICAgIHNjb3BlLiR3YXRjaChmdW5jdGlvbigpIHsgcmV0dXJuIGNvbnRyb2xsZXJbYXR0ci5hY2NvcmRpb25UcmFuc2NsdWRlXTsgfSwgZnVuY3Rpb24oaGVhZGluZykge1xuICAgICAgICBpZiAoIGhlYWRpbmcgKSB7XG4gICAgICAgICAgZWxlbWVudC5odG1sKCcnKTtcbiAgICAgICAgICBlbGVtZW50LmFwcGVuZChoZWFkaW5nKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xufSk7XG5cbmFuZ3VsYXIubW9kdWxlKCd1aS5ib290c3RyYXAuYWxlcnQnLCBbXSlcblxuLmNvbnRyb2xsZXIoJ0FsZXJ0Q29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRhdHRycycsIGZ1bmN0aW9uICgkc2NvcGUsICRhdHRycykge1xuICAkc2NvcGUuY2xvc2VhYmxlID0gJ2Nsb3NlJyBpbiAkYXR0cnM7XG59XSlcblxuLmRpcmVjdGl2ZSgnYWxlcnQnLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6J0VBJyxcbiAgICBjb250cm9sbGVyOidBbGVydENvbnRyb2xsZXInLFxuICAgIHRlbXBsYXRlVXJsOid0ZW1wbGF0ZS9hbGVydC9hbGVydC5odG1sJyxcbiAgICB0cmFuc2NsdWRlOnRydWUsXG4gICAgcmVwbGFjZTp0cnVlLFxuICAgIHNjb3BlOiB7XG4gICAgICB0eXBlOiAnQCcsXG4gICAgICBjbG9zZTogJyYnXG4gICAgfVxuICB9O1xufSk7XG5cbmFuZ3VsYXIubW9kdWxlKCd1aS5ib290c3RyYXAuYmluZEh0bWwnLCBbXSlcblxuICAuZGlyZWN0aXZlKCdiaW5kSHRtbFVuc2FmZScsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50LCBhdHRyKSB7XG4gICAgICBlbGVtZW50LmFkZENsYXNzKCduZy1iaW5kaW5nJykuZGF0YSgnJGJpbmRpbmcnLCBhdHRyLmJpbmRIdG1sVW5zYWZlKTtcbiAgICAgIHNjb3BlLiR3YXRjaChhdHRyLmJpbmRIdG1sVW5zYWZlLCBmdW5jdGlvbiBiaW5kSHRtbFVuc2FmZVdhdGNoQWN0aW9uKHZhbHVlKSB7XG4gICAgICAgIGVsZW1lbnQuaHRtbCh2YWx1ZSB8fCAnJyk7XG4gICAgICB9KTtcbiAgICB9O1xuICB9KTtcbmFuZ3VsYXIubW9kdWxlKCd1aS5ib290c3RyYXAuYnV0dG9ucycsIFtdKVxuXG4uY29uc3RhbnQoJ2J1dHRvbkNvbmZpZycsIHtcbiAgYWN0aXZlQ2xhc3M6ICdhY3RpdmUnLFxuICB0b2dnbGVFdmVudDogJ2NsaWNrJ1xufSlcblxuLmNvbnRyb2xsZXIoJ0J1dHRvbnNDb250cm9sbGVyJywgWydidXR0b25Db25maWcnLCBmdW5jdGlvbihidXR0b25Db25maWcpIHtcbiAgdGhpcy5hY3RpdmVDbGFzcyA9IGJ1dHRvbkNvbmZpZy5hY3RpdmVDbGFzcyB8fCAnYWN0aXZlJztcbiAgdGhpcy50b2dnbGVFdmVudCA9IGJ1dHRvbkNvbmZpZy50b2dnbGVFdmVudCB8fCAnY2xpY2snO1xufV0pXG5cbi5kaXJlY3RpdmUoJ2J0blJhZGlvJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4ge1xuICAgIHJlcXVpcmU6IFsnYnRuUmFkaW8nLCAnbmdNb2RlbCddLFxuICAgIGNvbnRyb2xsZXI6ICdCdXR0b25zQ29udHJvbGxlcicsXG4gICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY3RybHMpIHtcbiAgICAgIHZhciBidXR0b25zQ3RybCA9IGN0cmxzWzBdLCBuZ01vZGVsQ3RybCA9IGN0cmxzWzFdO1xuXG4gICAgICAvL21vZGVsIC0+IFVJXG4gICAgICBuZ01vZGVsQ3RybC4kcmVuZGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBlbGVtZW50LnRvZ2dsZUNsYXNzKGJ1dHRvbnNDdHJsLmFjdGl2ZUNsYXNzLCBhbmd1bGFyLmVxdWFscyhuZ01vZGVsQ3RybC4kbW9kZWxWYWx1ZSwgc2NvcGUuJGV2YWwoYXR0cnMuYnRuUmFkaW8pKSk7XG4gICAgICB9O1xuXG4gICAgICAvL3VpLT5tb2RlbFxuICAgICAgZWxlbWVudC5iaW5kKGJ1dHRvbnNDdHJsLnRvZ2dsZUV2ZW50LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBpc0FjdGl2ZSA9IGVsZW1lbnQuaGFzQ2xhc3MoYnV0dG9uc0N0cmwuYWN0aXZlQ2xhc3MpO1xuXG4gICAgICAgIGlmICghaXNBY3RpdmUgfHwgYW5ndWxhci5pc0RlZmluZWQoYXR0cnMudW5jaGVja2FibGUpKSB7XG4gICAgICAgICAgc2NvcGUuJGFwcGx5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIG5nTW9kZWxDdHJsLiRzZXRWaWV3VmFsdWUoaXNBY3RpdmUgPyBudWxsIDogc2NvcGUuJGV2YWwoYXR0cnMuYnRuUmFkaW8pKTtcbiAgICAgICAgICAgIG5nTW9kZWxDdHJsLiRyZW5kZXIoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xufSlcblxuLmRpcmVjdGl2ZSgnYnRuQ2hlY2tib3gnLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB7XG4gICAgcmVxdWlyZTogWydidG5DaGVja2JveCcsICduZ01vZGVsJ10sXG4gICAgY29udHJvbGxlcjogJ0J1dHRvbnNDb250cm9sbGVyJyxcbiAgICBsaW5rOiBmdW5jdGlvbiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzLCBjdHJscykge1xuICAgICAgdmFyIGJ1dHRvbnNDdHJsID0gY3RybHNbMF0sIG5nTW9kZWxDdHJsID0gY3RybHNbMV07XG5cbiAgICAgIGZ1bmN0aW9uIGdldFRydWVWYWx1ZSgpIHtcbiAgICAgICAgcmV0dXJuIGdldENoZWNrYm94VmFsdWUoYXR0cnMuYnRuQ2hlY2tib3hUcnVlLCB0cnVlKTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gZ2V0RmFsc2VWYWx1ZSgpIHtcbiAgICAgICAgcmV0dXJuIGdldENoZWNrYm94VmFsdWUoYXR0cnMuYnRuQ2hlY2tib3hGYWxzZSwgZmFsc2UpO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBnZXRDaGVja2JveFZhbHVlKGF0dHJpYnV0ZVZhbHVlLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgdmFyIHZhbCA9IHNjb3BlLiRldmFsKGF0dHJpYnV0ZVZhbHVlKTtcbiAgICAgICAgcmV0dXJuIGFuZ3VsYXIuaXNEZWZpbmVkKHZhbCkgPyB2YWwgOiBkZWZhdWx0VmFsdWU7XG4gICAgICB9XG5cbiAgICAgIC8vbW9kZWwgLT4gVUlcbiAgICAgIG5nTW9kZWxDdHJsLiRyZW5kZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGVsZW1lbnQudG9nZ2xlQ2xhc3MoYnV0dG9uc0N0cmwuYWN0aXZlQ2xhc3MsIGFuZ3VsYXIuZXF1YWxzKG5nTW9kZWxDdHJsLiRtb2RlbFZhbHVlLCBnZXRUcnVlVmFsdWUoKSkpO1xuICAgICAgfTtcblxuICAgICAgLy91aS0+bW9kZWxcbiAgICAgIGVsZW1lbnQuYmluZChidXR0b25zQ3RybC50b2dnbGVFdmVudCwgZnVuY3Rpb24gKCkge1xuICAgICAgICBzY29wZS4kYXBwbHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIG5nTW9kZWxDdHJsLiRzZXRWaWV3VmFsdWUoZWxlbWVudC5oYXNDbGFzcyhidXR0b25zQ3RybC5hY3RpdmVDbGFzcykgPyBnZXRGYWxzZVZhbHVlKCkgOiBnZXRUcnVlVmFsdWUoKSk7XG4gICAgICAgICAgbmdNb2RlbEN0cmwuJHJlbmRlcigpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn0pO1xuXG4vKipcbiogQG5nZG9jIG92ZXJ2aWV3XG4qIEBuYW1lIHVpLmJvb3RzdHJhcC5jYXJvdXNlbFxuKlxuKiBAZGVzY3JpcHRpb25cbiogQW5ndWxhckpTIHZlcnNpb24gb2YgYW4gaW1hZ2UgY2Fyb3VzZWwuXG4qXG4qL1xuYW5ndWxhci5tb2R1bGUoJ3VpLmJvb3RzdHJhcC5jYXJvdXNlbCcsIFsndWkuYm9vdHN0cmFwLnRyYW5zaXRpb24nXSlcbi5jb250cm9sbGVyKCdDYXJvdXNlbENvbnRyb2xsZXInLCBbJyRzY29wZScsICckdGltZW91dCcsICckdHJhbnNpdGlvbicsIGZ1bmN0aW9uICgkc2NvcGUsICR0aW1lb3V0LCAkdHJhbnNpdGlvbikge1xuICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgc2xpZGVzID0gc2VsZi5zbGlkZXMgPSAkc2NvcGUuc2xpZGVzID0gW10sXG4gICAgY3VycmVudEluZGV4ID0gLTEsXG4gICAgY3VycmVudFRpbWVvdXQsIGlzUGxheWluZztcbiAgc2VsZi5jdXJyZW50U2xpZGUgPSBudWxsO1xuXG4gIHZhciBkZXN0cm95ZWQgPSBmYWxzZTtcbiAgLyogZGlyZWN0aW9uOiBcInByZXZcIiBvciBcIm5leHRcIiAqL1xuICBzZWxmLnNlbGVjdCA9ICRzY29wZS5zZWxlY3QgPSBmdW5jdGlvbihuZXh0U2xpZGUsIGRpcmVjdGlvbikge1xuICAgIHZhciBuZXh0SW5kZXggPSBzbGlkZXMuaW5kZXhPZihuZXh0U2xpZGUpO1xuICAgIC8vRGVjaWRlIGRpcmVjdGlvbiBpZiBpdCdzIG5vdCBnaXZlblxuICAgIGlmIChkaXJlY3Rpb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgZGlyZWN0aW9uID0gbmV4dEluZGV4ID4gY3VycmVudEluZGV4ID8gJ25leHQnIDogJ3ByZXYnO1xuICAgIH1cbiAgICBpZiAobmV4dFNsaWRlICYmIG5leHRTbGlkZSAhPT0gc2VsZi5jdXJyZW50U2xpZGUpIHtcbiAgICAgIGlmICgkc2NvcGUuJGN1cnJlbnRUcmFuc2l0aW9uKSB7XG4gICAgICAgICRzY29wZS4kY3VycmVudFRyYW5zaXRpb24uY2FuY2VsKCk7XG4gICAgICAgIC8vVGltZW91dCBzbyBuZy1jbGFzcyBpbiB0ZW1wbGF0ZSBoYXMgdGltZSB0byBmaXggY2xhc3NlcyBmb3IgZmluaXNoZWQgc2xpZGVcbiAgICAgICAgJHRpbWVvdXQoZ29OZXh0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGdvTmV4dCgpO1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBnb05leHQoKSB7XG4gICAgICAvLyBTY29wZSBoYXMgYmVlbiBkZXN0cm95ZWQsIHN0b3AgaGVyZS5cbiAgICAgIGlmIChkZXN0cm95ZWQpIHsgcmV0dXJuOyB9XG4gICAgICAvL0lmIHdlIGhhdmUgYSBzbGlkZSB0byB0cmFuc2l0aW9uIGZyb20gYW5kIHdlIGhhdmUgYSB0cmFuc2l0aW9uIHR5cGUgYW5kIHdlJ3JlIGFsbG93ZWQsIGdvXG4gICAgICBpZiAoc2VsZi5jdXJyZW50U2xpZGUgJiYgYW5ndWxhci5pc1N0cmluZyhkaXJlY3Rpb24pICYmICEkc2NvcGUubm9UcmFuc2l0aW9uICYmIG5leHRTbGlkZS4kZWxlbWVudCkge1xuICAgICAgICAvL1dlIHNob3VsZG4ndCBkbyBjbGFzcyBtYW5pcCBpbiBoZXJlLCBidXQgaXQncyB0aGUgc2FtZSB3ZWlyZCB0aGluZyBib290c3RyYXAgZG9lcy4gbmVlZCB0byBmaXggc29tZXRpbWVcbiAgICAgICAgbmV4dFNsaWRlLiRlbGVtZW50LmFkZENsYXNzKGRpcmVjdGlvbik7XG4gICAgICAgIHZhciByZWZsb3cgPSBuZXh0U2xpZGUuJGVsZW1lbnRbMF0ub2Zmc2V0V2lkdGg7IC8vZm9yY2UgcmVmbG93XG5cbiAgICAgICAgLy9TZXQgYWxsIG90aGVyIHNsaWRlcyB0byBzdG9wIGRvaW5nIHRoZWlyIHN0dWZmIGZvciB0aGUgbmV3IHRyYW5zaXRpb25cbiAgICAgICAgYW5ndWxhci5mb3JFYWNoKHNsaWRlcywgZnVuY3Rpb24oc2xpZGUpIHtcbiAgICAgICAgICBhbmd1bGFyLmV4dGVuZChzbGlkZSwge2RpcmVjdGlvbjogJycsIGVudGVyaW5nOiBmYWxzZSwgbGVhdmluZzogZmFsc2UsIGFjdGl2ZTogZmFsc2V9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIGFuZ3VsYXIuZXh0ZW5kKG5leHRTbGlkZSwge2RpcmVjdGlvbjogZGlyZWN0aW9uLCBhY3RpdmU6IHRydWUsIGVudGVyaW5nOiB0cnVlfSk7XG4gICAgICAgIGFuZ3VsYXIuZXh0ZW5kKHNlbGYuY3VycmVudFNsaWRlfHx7fSwge2RpcmVjdGlvbjogZGlyZWN0aW9uLCBsZWF2aW5nOiB0cnVlfSk7XG5cbiAgICAgICAgJHNjb3BlLiRjdXJyZW50VHJhbnNpdGlvbiA9ICR0cmFuc2l0aW9uKG5leHRTbGlkZS4kZWxlbWVudCwge30pO1xuICAgICAgICAvL1dlIGhhdmUgdG8gY3JlYXRlIG5ldyBwb2ludGVycyBpbnNpZGUgYSBjbG9zdXJlIHNpbmNlIG5leHQgJiBjdXJyZW50IHdpbGwgY2hhbmdlXG4gICAgICAgIChmdW5jdGlvbihuZXh0LGN1cnJlbnQpIHtcbiAgICAgICAgICAkc2NvcGUuJGN1cnJlbnRUcmFuc2l0aW9uLnRoZW4oXG4gICAgICAgICAgICBmdW5jdGlvbigpeyB0cmFuc2l0aW9uRG9uZShuZXh0LCBjdXJyZW50KTsgfSxcbiAgICAgICAgICAgIGZ1bmN0aW9uKCl7IHRyYW5zaXRpb25Eb25lKG5leHQsIGN1cnJlbnQpOyB9XG4gICAgICAgICAgKTtcbiAgICAgICAgfShuZXh0U2xpZGUsIHNlbGYuY3VycmVudFNsaWRlKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0cmFuc2l0aW9uRG9uZShuZXh0U2xpZGUsIHNlbGYuY3VycmVudFNsaWRlKTtcbiAgICAgIH1cbiAgICAgIHNlbGYuY3VycmVudFNsaWRlID0gbmV4dFNsaWRlO1xuICAgICAgY3VycmVudEluZGV4ID0gbmV4dEluZGV4O1xuICAgICAgLy9ldmVyeSB0aW1lIHlvdSBjaGFuZ2Ugc2xpZGVzLCByZXNldCB0aGUgdGltZXJcbiAgICAgIHJlc3RhcnRUaW1lcigpO1xuICAgIH1cbiAgICBmdW5jdGlvbiB0cmFuc2l0aW9uRG9uZShuZXh0LCBjdXJyZW50KSB7XG4gICAgICBhbmd1bGFyLmV4dGVuZChuZXh0LCB7ZGlyZWN0aW9uOiAnJywgYWN0aXZlOiB0cnVlLCBsZWF2aW5nOiBmYWxzZSwgZW50ZXJpbmc6IGZhbHNlfSk7XG4gICAgICBhbmd1bGFyLmV4dGVuZChjdXJyZW50fHx7fSwge2RpcmVjdGlvbjogJycsIGFjdGl2ZTogZmFsc2UsIGxlYXZpbmc6IGZhbHNlLCBlbnRlcmluZzogZmFsc2V9KTtcbiAgICAgICRzY29wZS4kY3VycmVudFRyYW5zaXRpb24gPSBudWxsO1xuICAgIH1cbiAgfTtcbiAgJHNjb3BlLiRvbignJGRlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XG4gICAgZGVzdHJveWVkID0gdHJ1ZTtcbiAgfSk7XG5cbiAgLyogQWxsb3cgb3V0c2lkZSBwZW9wbGUgdG8gY2FsbCBpbmRleE9mIG9uIHNsaWRlcyBhcnJheSAqL1xuICBzZWxmLmluZGV4T2ZTbGlkZSA9IGZ1bmN0aW9uKHNsaWRlKSB7XG4gICAgcmV0dXJuIHNsaWRlcy5pbmRleE9mKHNsaWRlKTtcbiAgfTtcblxuICAkc2NvcGUubmV4dCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBuZXdJbmRleCA9IChjdXJyZW50SW5kZXggKyAxKSAlIHNsaWRlcy5sZW5ndGg7XG5cbiAgICAvL1ByZXZlbnQgdGhpcyB1c2VyLXRyaWdnZXJlZCB0cmFuc2l0aW9uIGZyb20gb2NjdXJyaW5nIGlmIHRoZXJlIGlzIGFscmVhZHkgb25lIGluIHByb2dyZXNzXG4gICAgaWYgKCEkc2NvcGUuJGN1cnJlbnRUcmFuc2l0aW9uKSB7XG4gICAgICByZXR1cm4gc2VsZi5zZWxlY3Qoc2xpZGVzW25ld0luZGV4XSwgJ25leHQnKTtcbiAgICB9XG4gIH07XG5cbiAgJHNjb3BlLnByZXYgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbmV3SW5kZXggPSBjdXJyZW50SW5kZXggLSAxIDwgMCA/IHNsaWRlcy5sZW5ndGggLSAxIDogY3VycmVudEluZGV4IC0gMTtcblxuICAgIC8vUHJldmVudCB0aGlzIHVzZXItdHJpZ2dlcmVkIHRyYW5zaXRpb24gZnJvbSBvY2N1cnJpbmcgaWYgdGhlcmUgaXMgYWxyZWFkeSBvbmUgaW4gcHJvZ3Jlc3NcbiAgICBpZiAoISRzY29wZS4kY3VycmVudFRyYW5zaXRpb24pIHtcbiAgICAgIHJldHVybiBzZWxmLnNlbGVjdChzbGlkZXNbbmV3SW5kZXhdLCAncHJldicpO1xuICAgIH1cbiAgfTtcblxuICAkc2NvcGUuaXNBY3RpdmUgPSBmdW5jdGlvbihzbGlkZSkge1xuICAgICByZXR1cm4gc2VsZi5jdXJyZW50U2xpZGUgPT09IHNsaWRlO1xuICB9O1xuXG4gICRzY29wZS4kd2F0Y2goJ2ludGVydmFsJywgcmVzdGFydFRpbWVyKTtcbiAgJHNjb3BlLiRvbignJGRlc3Ryb3knLCByZXNldFRpbWVyKTtcblxuICBmdW5jdGlvbiByZXN0YXJ0VGltZXIoKSB7XG4gICAgcmVzZXRUaW1lcigpO1xuICAgIHZhciBpbnRlcnZhbCA9ICskc2NvcGUuaW50ZXJ2YWw7XG4gICAgaWYgKCFpc05hTihpbnRlcnZhbCkgJiYgaW50ZXJ2YWw+PTApIHtcbiAgICAgIGN1cnJlbnRUaW1lb3V0ID0gJHRpbWVvdXQodGltZXJGbiwgaW50ZXJ2YWwpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2V0VGltZXIoKSB7XG4gICAgaWYgKGN1cnJlbnRUaW1lb3V0KSB7XG4gICAgICAkdGltZW91dC5jYW5jZWwoY3VycmVudFRpbWVvdXQpO1xuICAgICAgY3VycmVudFRpbWVvdXQgPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHRpbWVyRm4oKSB7XG4gICAgaWYgKGlzUGxheWluZykge1xuICAgICAgJHNjb3BlLm5leHQoKTtcbiAgICAgIHJlc3RhcnRUaW1lcigpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkc2NvcGUucGF1c2UoKTtcbiAgICB9XG4gIH1cblxuICAkc2NvcGUucGxheSA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICghaXNQbGF5aW5nKSB7XG4gICAgICBpc1BsYXlpbmcgPSB0cnVlO1xuICAgICAgcmVzdGFydFRpbWVyKCk7XG4gICAgfVxuICB9O1xuICAkc2NvcGUucGF1c2UgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAoISRzY29wZS5ub1BhdXNlKSB7XG4gICAgICBpc1BsYXlpbmcgPSBmYWxzZTtcbiAgICAgIHJlc2V0VGltZXIoKTtcbiAgICB9XG4gIH07XG5cbiAgc2VsZi5hZGRTbGlkZSA9IGZ1bmN0aW9uKHNsaWRlLCBlbGVtZW50KSB7XG4gICAgc2xpZGUuJGVsZW1lbnQgPSBlbGVtZW50O1xuICAgIHNsaWRlcy5wdXNoKHNsaWRlKTtcbiAgICAvL2lmIHRoaXMgaXMgdGhlIGZpcnN0IHNsaWRlIG9yIHRoZSBzbGlkZSBpcyBzZXQgdG8gYWN0aXZlLCBzZWxlY3QgaXRcbiAgICBpZihzbGlkZXMubGVuZ3RoID09PSAxIHx8IHNsaWRlLmFjdGl2ZSkge1xuICAgICAgc2VsZi5zZWxlY3Qoc2xpZGVzW3NsaWRlcy5sZW5ndGgtMV0pO1xuICAgICAgaWYgKHNsaWRlcy5sZW5ndGggPT0gMSkge1xuICAgICAgICAkc2NvcGUucGxheSgpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzbGlkZS5hY3RpdmUgPSBmYWxzZTtcbiAgICB9XG4gIH07XG5cbiAgc2VsZi5yZW1vdmVTbGlkZSA9IGZ1bmN0aW9uKHNsaWRlKSB7XG4gICAgLy9nZXQgdGhlIGluZGV4IG9mIHRoZSBzbGlkZSBpbnNpZGUgdGhlIGNhcm91c2VsXG4gICAgdmFyIGluZGV4ID0gc2xpZGVzLmluZGV4T2Yoc2xpZGUpO1xuICAgIHNsaWRlcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIGlmIChzbGlkZXMubGVuZ3RoID4gMCAmJiBzbGlkZS5hY3RpdmUpIHtcbiAgICAgIGlmIChpbmRleCA+PSBzbGlkZXMubGVuZ3RoKSB7XG4gICAgICAgIHNlbGYuc2VsZWN0KHNsaWRlc1tpbmRleC0xXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZWxmLnNlbGVjdChzbGlkZXNbaW5kZXhdKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGN1cnJlbnRJbmRleCA+IGluZGV4KSB7XG4gICAgICBjdXJyZW50SW5kZXgtLTtcbiAgICB9XG4gIH07XG5cbn1dKVxuXG4vKipcbiAqIEBuZ2RvYyBkaXJlY3RpdmVcbiAqIEBuYW1lIHVpLmJvb3RzdHJhcC5jYXJvdXNlbC5kaXJlY3RpdmU6Y2Fyb3VzZWxcbiAqIEByZXN0cmljdCBFQVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQ2Fyb3VzZWwgaXMgdGhlIG91dGVyIGNvbnRhaW5lciBmb3IgYSBzZXQgb2YgaW1hZ2UgJ3NsaWRlcycgdG8gc2hvd2Nhc2UuXG4gKlxuICogQHBhcmFtIHtudW1iZXI9fSBpbnRlcnZhbCBUaGUgdGltZSwgaW4gbWlsbGlzZWNvbmRzLCB0aGF0IGl0IHdpbGwgdGFrZSB0aGUgY2Fyb3VzZWwgdG8gZ28gdG8gdGhlIG5leHQgc2xpZGUuXG4gKiBAcGFyYW0ge2Jvb2xlYW49fSBub1RyYW5zaXRpb24gV2hldGhlciB0byBkaXNhYmxlIHRyYW5zaXRpb25zIG9uIHRoZSBjYXJvdXNlbC5cbiAqIEBwYXJhbSB7Ym9vbGVhbj19IG5vUGF1c2UgV2hldGhlciB0byBkaXNhYmxlIHBhdXNpbmcgb24gdGhlIGNhcm91c2VsIChieSBkZWZhdWx0LCB0aGUgY2Fyb3VzZWwgaW50ZXJ2YWwgcGF1c2VzIG9uIGhvdmVyKS5cbiAqXG4gKiBAZXhhbXBsZVxuPGV4YW1wbGUgbW9kdWxlPVwidWkuYm9vdHN0cmFwXCI+XG4gIDxmaWxlIG5hbWU9XCJpbmRleC5odG1sXCI+XG4gICAgPGNhcm91c2VsPlxuICAgICAgPHNsaWRlPlxuICAgICAgICA8aW1nIHNyYz1cImh0dHA6Ly9wbGFjZWtpdHRlbi5jb20vMTUwLzE1MFwiIHN0eWxlPVwibWFyZ2luOmF1dG87XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjYXJvdXNlbC1jYXB0aW9uXCI+XG4gICAgICAgICAgPHA+QmVhdXRpZnVsITwvcD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L3NsaWRlPlxuICAgICAgPHNsaWRlPlxuICAgICAgICA8aW1nIHNyYz1cImh0dHA6Ly9wbGFjZWtpdHRlbi5jb20vMTAwLzE1MFwiIHN0eWxlPVwibWFyZ2luOmF1dG87XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjYXJvdXNlbC1jYXB0aW9uXCI+XG4gICAgICAgICAgPHA+RCdhd3chPC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvc2xpZGU+XG4gICAgPC9jYXJvdXNlbD5cbiAgPC9maWxlPlxuICA8ZmlsZSBuYW1lPVwiZGVtby5jc3NcIj5cbiAgICAuY2Fyb3VzZWwtaW5kaWNhdG9ycyB7XG4gICAgICB0b3A6IGF1dG87XG4gICAgICBib3R0b206IDE1cHg7XG4gICAgfVxuICA8L2ZpbGU+XG48L2V4YW1wbGU+XG4gKi9cbi5kaXJlY3RpdmUoJ2Nhcm91c2VsJywgW2Z1bmN0aW9uKCkge1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiAnRUEnLFxuICAgIHRyYW5zY2x1ZGU6IHRydWUsXG4gICAgcmVwbGFjZTogdHJ1ZSxcbiAgICBjb250cm9sbGVyOiAnQ2Fyb3VzZWxDb250cm9sbGVyJyxcbiAgICByZXF1aXJlOiAnY2Fyb3VzZWwnLFxuICAgIHRlbXBsYXRlVXJsOiAndGVtcGxhdGUvY2Fyb3VzZWwvY2Fyb3VzZWwuaHRtbCcsXG4gICAgc2NvcGU6IHtcbiAgICAgIGludGVydmFsOiAnPScsXG4gICAgICBub1RyYW5zaXRpb246ICc9JyxcbiAgICAgIG5vUGF1c2U6ICc9J1xuICAgIH1cbiAgfTtcbn1dKVxuXG4vKipcbiAqIEBuZ2RvYyBkaXJlY3RpdmVcbiAqIEBuYW1lIHVpLmJvb3RzdHJhcC5jYXJvdXNlbC5kaXJlY3RpdmU6c2xpZGVcbiAqIEByZXN0cmljdCBFQVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogQ3JlYXRlcyBhIHNsaWRlIGluc2lkZSBhIHtAbGluayB1aS5ib290c3RyYXAuY2Fyb3VzZWwuZGlyZWN0aXZlOmNhcm91c2VsIGNhcm91c2VsfS4gIE11c3QgYmUgcGxhY2VkIGFzIGEgY2hpbGQgb2YgYSBjYXJvdXNlbCBlbGVtZW50LlxuICpcbiAqIEBwYXJhbSB7Ym9vbGVhbj19IGFjdGl2ZSBNb2RlbCBiaW5kaW5nLCB3aGV0aGVyIG9yIG5vdCB0aGlzIHNsaWRlIGlzIGN1cnJlbnRseSBhY3RpdmUuXG4gKlxuICogQGV4YW1wbGVcbjxleGFtcGxlIG1vZHVsZT1cInVpLmJvb3RzdHJhcFwiPlxuICA8ZmlsZSBuYW1lPVwiaW5kZXguaHRtbFwiPlxuPGRpdiBuZy1jb250cm9sbGVyPVwiQ2Fyb3VzZWxEZW1vQ3RybFwiPlxuICA8Y2Fyb3VzZWw+XG4gICAgPHNsaWRlIG5nLXJlcGVhdD1cInNsaWRlIGluIHNsaWRlc1wiIGFjdGl2ZT1cInNsaWRlLmFjdGl2ZVwiPlxuICAgICAgPGltZyBuZy1zcmM9XCJ7e3NsaWRlLmltYWdlfX1cIiBzdHlsZT1cIm1hcmdpbjphdXRvO1wiPlxuICAgICAgPGRpdiBjbGFzcz1cImNhcm91c2VsLWNhcHRpb25cIj5cbiAgICAgICAgPGg0PlNsaWRlIHt7JGluZGV4fX08L2g0PlxuICAgICAgICA8cD57e3NsaWRlLnRleHR9fTwvcD5cbiAgICAgIDwvZGl2PlxuICAgIDwvc2xpZGU+XG4gIDwvY2Fyb3VzZWw+XG4gIEludGVydmFsLCBpbiBtaWxsaXNlY29uZHM6IDxpbnB1dCB0eXBlPVwibnVtYmVyXCIgbmctbW9kZWw9XCJteUludGVydmFsXCI+XG4gIDxiciAvPkVudGVyIGEgbmVnYXRpdmUgbnVtYmVyIHRvIHN0b3AgdGhlIGludGVydmFsLlxuPC9kaXY+XG4gIDwvZmlsZT5cbiAgPGZpbGUgbmFtZT1cInNjcmlwdC5qc1wiPlxuZnVuY3Rpb24gQ2Fyb3VzZWxEZW1vQ3RybCgkc2NvcGUpIHtcbiAgJHNjb3BlLm15SW50ZXJ2YWwgPSA1MDAwO1xufVxuICA8L2ZpbGU+XG4gIDxmaWxlIG5hbWU9XCJkZW1vLmNzc1wiPlxuICAgIC5jYXJvdXNlbC1pbmRpY2F0b3JzIHtcbiAgICAgIHRvcDogYXV0bztcbiAgICAgIGJvdHRvbTogMTVweDtcbiAgICB9XG4gIDwvZmlsZT5cbjwvZXhhbXBsZT5cbiovXG5cbi5kaXJlY3RpdmUoJ3NsaWRlJywgZnVuY3Rpb24oKSB7XG4gIHJldHVybiB7XG4gICAgcmVxdWlyZTogJ15jYXJvdXNlbCcsXG4gICAgcmVzdHJpY3Q6ICdFQScsXG4gICAgdHJhbnNjbHVkZTogdHJ1ZSxcbiAgICByZXBsYWNlOiB0cnVlLFxuICAgIHRlbXBsYXRlVXJsOiAndGVtcGxhdGUvY2Fyb3VzZWwvc2xpZGUuaHRtbCcsXG4gICAgc2NvcGU6IHtcbiAgICAgIGFjdGl2ZTogJz0/J1xuICAgIH0sXG4gICAgbGluazogZnVuY3Rpb24gKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY2Fyb3VzZWxDdHJsKSB7XG4gICAgICBjYXJvdXNlbEN0cmwuYWRkU2xpZGUoc2NvcGUsIGVsZW1lbnQpO1xuICAgICAgLy93aGVuIHRoZSBzY29wZSBpcyBkZXN0cm95ZWQgdGhlbiByZW1vdmUgdGhlIHNsaWRlIGZyb20gdGhlIGN1cnJlbnQgc2xpZGVzIGFycmF5XG4gICAgICBzY29wZS4kb24oJyRkZXN0cm95JywgZnVuY3Rpb24oKSB7XG4gICAgICAgIGNhcm91c2VsQ3RybC5yZW1vdmVTbGlkZShzY29wZSk7XG4gICAgICB9KTtcblxuICAgICAgc2NvcGUuJHdhdGNoKCdhY3RpdmUnLCBmdW5jdGlvbihhY3RpdmUpIHtcbiAgICAgICAgaWYgKGFjdGl2ZSkge1xuICAgICAgICAgIGNhcm91c2VsQ3RybC5zZWxlY3Qoc2NvcGUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59KTtcblxuYW5ndWxhci5tb2R1bGUoJ3VpLmJvb3RzdHJhcC5kYXRlcGFyc2VyJywgW10pXG5cbi5zZXJ2aWNlKCdkYXRlUGFyc2VyJywgWyckbG9jYWxlJywgJ29yZGVyQnlGaWx0ZXInLCBmdW5jdGlvbigkbG9jYWxlLCBvcmRlckJ5RmlsdGVyKSB7XG5cbiAgdGhpcy5wYXJzZXJzID0ge307XG5cbiAgdmFyIGZvcm1hdENvZGVUb1JlZ2V4ID0ge1xuICAgICd5eXl5Jzoge1xuICAgICAgcmVnZXg6ICdcXFxcZHs0fScsXG4gICAgICBhcHBseTogZnVuY3Rpb24odmFsdWUpIHsgdGhpcy55ZWFyID0gK3ZhbHVlOyB9XG4gICAgfSxcbiAgICAneXknOiB7XG4gICAgICByZWdleDogJ1xcXFxkezJ9JyxcbiAgICAgIGFwcGx5OiBmdW5jdGlvbih2YWx1ZSkgeyB0aGlzLnllYXIgPSArdmFsdWUgKyAyMDAwOyB9XG4gICAgfSxcbiAgICAneSc6IHtcbiAgICAgIHJlZ2V4OiAnXFxcXGR7MSw0fScsXG4gICAgICBhcHBseTogZnVuY3Rpb24odmFsdWUpIHsgdGhpcy55ZWFyID0gK3ZhbHVlOyB9XG4gICAgfSxcbiAgICAnTU1NTSc6IHtcbiAgICAgIHJlZ2V4OiAkbG9jYWxlLkRBVEVUSU1FX0ZPUk1BVFMuTU9OVEguam9pbignfCcpLFxuICAgICAgYXBwbHk6IGZ1bmN0aW9uKHZhbHVlKSB7IHRoaXMubW9udGggPSAkbG9jYWxlLkRBVEVUSU1FX0ZPUk1BVFMuTU9OVEguaW5kZXhPZih2YWx1ZSk7IH1cbiAgICB9LFxuICAgICdNTU0nOiB7XG4gICAgICByZWdleDogJGxvY2FsZS5EQVRFVElNRV9GT1JNQVRTLlNIT1JUTU9OVEguam9pbignfCcpLFxuICAgICAgYXBwbHk6IGZ1bmN0aW9uKHZhbHVlKSB7IHRoaXMubW9udGggPSAkbG9jYWxlLkRBVEVUSU1FX0ZPUk1BVFMuU0hPUlRNT05USC5pbmRleE9mKHZhbHVlKTsgfVxuICAgIH0sXG4gICAgJ01NJzoge1xuICAgICAgcmVnZXg6ICcwWzEtOV18MVswLTJdJyxcbiAgICAgIGFwcGx5OiBmdW5jdGlvbih2YWx1ZSkgeyB0aGlzLm1vbnRoID0gdmFsdWUgLSAxOyB9XG4gICAgfSxcbiAgICAnTSc6IHtcbiAgICAgIHJlZ2V4OiAnWzEtOV18MVswLTJdJyxcbiAgICAgIGFwcGx5OiBmdW5jdGlvbih2YWx1ZSkgeyB0aGlzLm1vbnRoID0gdmFsdWUgLSAxOyB9XG4gICAgfSxcbiAgICAnZGQnOiB7XG4gICAgICByZWdleDogJ1swLTJdWzAtOV17MX18M1swLTFdezF9JyxcbiAgICAgIGFwcGx5OiBmdW5jdGlvbih2YWx1ZSkgeyB0aGlzLmRhdGUgPSArdmFsdWU7IH1cbiAgICB9LFxuICAgICdkJzoge1xuICAgICAgcmVnZXg6ICdbMS0yXT9bMC05XXsxfXwzWzAtMV17MX0nLFxuICAgICAgYXBwbHk6IGZ1bmN0aW9uKHZhbHVlKSB7IHRoaXMuZGF0ZSA9ICt2YWx1ZTsgfVxuICAgIH0sXG4gICAgJ0VFRUUnOiB7XG4gICAgICByZWdleDogJGxvY2FsZS5EQVRFVElNRV9GT1JNQVRTLkRBWS5qb2luKCd8JylcbiAgICB9LFxuICAgICdFRUUnOiB7XG4gICAgICByZWdleDogJGxvY2FsZS5EQVRFVElNRV9GT1JNQVRTLlNIT1JUREFZLmpvaW4oJ3wnKVxuICAgIH1cbiAgfTtcblxuICBmdW5jdGlvbiBjcmVhdGVQYXJzZXIoZm9ybWF0KSB7XG4gICAgdmFyIG1hcCA9IFtdLCByZWdleCA9IGZvcm1hdC5zcGxpdCgnJyk7XG5cbiAgICBhbmd1bGFyLmZvckVhY2goZm9ybWF0Q29kZVRvUmVnZXgsIGZ1bmN0aW9uKGRhdGEsIGNvZGUpIHtcbiAgICAgIHZhciBpbmRleCA9IGZvcm1hdC5pbmRleE9mKGNvZGUpO1xuXG4gICAgICBpZiAoaW5kZXggPiAtMSkge1xuICAgICAgICBmb3JtYXQgPSBmb3JtYXQuc3BsaXQoJycpO1xuXG4gICAgICAgIHJlZ2V4W2luZGV4XSA9ICcoJyArIGRhdGEucmVnZXggKyAnKSc7XG4gICAgICAgIGZvcm1hdFtpbmRleF0gPSAnJCc7IC8vIEN1c3RvbSBzeW1ib2wgdG8gZGVmaW5lIGNvbnN1bWVkIHBhcnQgb2YgZm9ybWF0XG4gICAgICAgIGZvciAodmFyIGkgPSBpbmRleCArIDEsIG4gPSBpbmRleCArIGNvZGUubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgcmVnZXhbaV0gPSAnJztcbiAgICAgICAgICBmb3JtYXRbaV0gPSAnJCc7XG4gICAgICAgIH1cbiAgICAgICAgZm9ybWF0ID0gZm9ybWF0LmpvaW4oJycpO1xuXG4gICAgICAgIG1hcC5wdXNoKHsgaW5kZXg6IGluZGV4LCBhcHBseTogZGF0YS5hcHBseSB9KTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICByZWdleDogbmV3IFJlZ0V4cCgnXicgKyByZWdleC5qb2luKCcnKSArICckJyksXG4gICAgICBtYXA6IG9yZGVyQnlGaWx0ZXIobWFwLCAnaW5kZXgnKVxuICAgIH07XG4gIH1cblxuICB0aGlzLnBhcnNlID0gZnVuY3Rpb24oaW5wdXQsIGZvcm1hdCkge1xuICAgIGlmICggIWFuZ3VsYXIuaXNTdHJpbmcoaW5wdXQpIHx8ICFmb3JtYXQgKSB7XG4gICAgICByZXR1cm4gaW5wdXQ7XG4gICAgfVxuXG4gICAgZm9ybWF0ID0gJGxvY2FsZS5EQVRFVElNRV9GT1JNQVRTW2Zvcm1hdF0gfHwgZm9ybWF0O1xuXG4gICAgaWYgKCAhdGhpcy5wYXJzZXJzW2Zvcm1hdF0gKSB7XG4gICAgICB0aGlzLnBhcnNlcnNbZm9ybWF0XSA9IGNyZWF0ZVBhcnNlcihmb3JtYXQpO1xuICAgIH1cblxuICAgIHZhciBwYXJzZXIgPSB0aGlzLnBhcnNlcnNbZm9ybWF0XSxcbiAgICAgICAgcmVnZXggPSBwYXJzZXIucmVnZXgsXG4gICAgICAgIG1hcCA9IHBhcnNlci5tYXAsXG4gICAgICAgIHJlc3VsdHMgPSBpbnB1dC5tYXRjaChyZWdleCk7XG5cbiAgICBpZiAoIHJlc3VsdHMgJiYgcmVzdWx0cy5sZW5ndGggKSB7XG4gICAgICB2YXIgZmllbGRzID0geyB5ZWFyOiAxOTAwLCBtb250aDogMCwgZGF0ZTogMSwgaG91cnM6IDAgfSwgZHQ7XG5cbiAgICAgIGZvciggdmFyIGkgPSAxLCBuID0gcmVzdWx0cy5sZW5ndGg7IGkgPCBuOyBpKysgKSB7XG4gICAgICAgIHZhciBtYXBwZXIgPSBtYXBbaS0xXTtcbiAgICAgICAgaWYgKCBtYXBwZXIuYXBwbHkgKSB7XG4gICAgICAgICAgbWFwcGVyLmFwcGx5LmNhbGwoZmllbGRzLCByZXN1bHRzW2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoIGlzVmFsaWQoZmllbGRzLnllYXIsIGZpZWxkcy5tb250aCwgZmllbGRzLmRhdGUpICkge1xuICAgICAgICBkdCA9IG5ldyBEYXRlKCBmaWVsZHMueWVhciwgZmllbGRzLm1vbnRoLCBmaWVsZHMuZGF0ZSwgZmllbGRzLmhvdXJzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGR0O1xuICAgIH1cbiAgfTtcblxuICAvLyBDaGVjayBpZiBkYXRlIGlzIHZhbGlkIGZvciBzcGVjaWZpYyBtb250aCAoYW5kIHllYXIgZm9yIEZlYnJ1YXJ5KS5cbiAgLy8gTW9udGg6IDAgPSBKYW4sIDEgPSBGZWIsIGV0Y1xuICBmdW5jdGlvbiBpc1ZhbGlkKHllYXIsIG1vbnRoLCBkYXRlKSB7XG4gICAgaWYgKCBtb250aCA9PT0gMSAmJiBkYXRlID4gMjgpIHtcbiAgICAgICAgcmV0dXJuIGRhdGUgPT09IDI5ICYmICgoeWVhciAlIDQgPT09IDAgJiYgeWVhciAlIDEwMCAhPT0gMCkgfHwgeWVhciAlIDQwMCA9PT0gMCk7XG4gICAgfVxuXG4gICAgaWYgKCBtb250aCA9PT0gMyB8fCBtb250aCA9PT0gNSB8fCBtb250aCA9PT0gOCB8fCBtb250aCA9PT0gMTApIHtcbiAgICAgICAgcmV0dXJuIGRhdGUgPCAzMTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufV0pO1xuXG5hbmd1bGFyLm1vZHVsZSgndWkuYm9vdHN0cmFwLnBvc2l0aW9uJywgW10pXG5cbi8qKlxuICogQSBzZXQgb2YgdXRpbGl0eSBtZXRob2RzIHRoYXQgY2FuIGJlIHVzZSB0byByZXRyaWV2ZSBwb3NpdGlvbiBvZiBET00gZWxlbWVudHMuXG4gKiBJdCBpcyBtZWFudCB0byBiZSB1c2VkIHdoZXJlIHdlIG5lZWQgdG8gYWJzb2x1dGUtcG9zaXRpb24gRE9NIGVsZW1lbnRzIGluXG4gKiByZWxhdGlvbiB0byBvdGhlciwgZXhpc3RpbmcgZWxlbWVudHMgKHRoaXMgaXMgdGhlIGNhc2UgZm9yIHRvb2x0aXBzLCBwb3BvdmVycyxcbiAqIHR5cGVhaGVhZCBzdWdnZXN0aW9ucyBldGMuKS5cbiAqL1xuICAuZmFjdG9yeSgnJHBvc2l0aW9uJywgWyckZG9jdW1lbnQnLCAnJHdpbmRvdycsIGZ1bmN0aW9uICgkZG9jdW1lbnQsICR3aW5kb3cpIHtcblxuICAgIGZ1bmN0aW9uIGdldFN0eWxlKGVsLCBjc3Nwcm9wKSB7XG4gICAgICBpZiAoZWwuY3VycmVudFN0eWxlKSB7IC8vSUVcbiAgICAgICAgcmV0dXJuIGVsLmN1cnJlbnRTdHlsZVtjc3Nwcm9wXTtcbiAgICAgIH0gZWxzZSBpZiAoJHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKSB7XG4gICAgICAgIHJldHVybiAkd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWwpW2Nzc3Byb3BdO1xuICAgICAgfVxuICAgICAgLy8gZmluYWxseSB0cnkgYW5kIGdldCBpbmxpbmUgc3R5bGVcbiAgICAgIHJldHVybiBlbC5zdHlsZVtjc3Nwcm9wXTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgYSBnaXZlbiBlbGVtZW50IGlzIHN0YXRpY2FsbHkgcG9zaXRpb25lZFxuICAgICAqIEBwYXJhbSBlbGVtZW50IC0gcmF3IERPTSBlbGVtZW50XG4gICAgICovXG4gICAgZnVuY3Rpb24gaXNTdGF0aWNQb3NpdGlvbmVkKGVsZW1lbnQpIHtcbiAgICAgIHJldHVybiAoZ2V0U3R5bGUoZWxlbWVudCwgJ3Bvc2l0aW9uJykgfHwgJ3N0YXRpYycgKSA9PT0gJ3N0YXRpYyc7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogcmV0dXJucyB0aGUgY2xvc2VzdCwgbm9uLXN0YXRpY2FsbHkgcG9zaXRpb25lZCBwYXJlbnRPZmZzZXQgb2YgYSBnaXZlbiBlbGVtZW50XG4gICAgICogQHBhcmFtIGVsZW1lbnRcbiAgICAgKi9cbiAgICB2YXIgcGFyZW50T2Zmc2V0RWwgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgdmFyIGRvY0RvbUVsID0gJGRvY3VtZW50WzBdO1xuICAgICAgdmFyIG9mZnNldFBhcmVudCA9IGVsZW1lbnQub2Zmc2V0UGFyZW50IHx8IGRvY0RvbUVsO1xuICAgICAgd2hpbGUgKG9mZnNldFBhcmVudCAmJiBvZmZzZXRQYXJlbnQgIT09IGRvY0RvbUVsICYmIGlzU3RhdGljUG9zaXRpb25lZChvZmZzZXRQYXJlbnQpICkge1xuICAgICAgICBvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQub2Zmc2V0UGFyZW50O1xuICAgICAgfVxuICAgICAgcmV0dXJuIG9mZnNldFBhcmVudCB8fCBkb2NEb21FbDtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIC8qKlxuICAgICAgICogUHJvdmlkZXMgcmVhZC1vbmx5IGVxdWl2YWxlbnQgb2YgalF1ZXJ5J3MgcG9zaXRpb24gZnVuY3Rpb246XG4gICAgICAgKiBodHRwOi8vYXBpLmpxdWVyeS5jb20vcG9zaXRpb24vXG4gICAgICAgKi9cbiAgICAgIHBvc2l0aW9uOiBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICB2YXIgZWxCQ1IgPSB0aGlzLm9mZnNldChlbGVtZW50KTtcbiAgICAgICAgdmFyIG9mZnNldFBhcmVudEJDUiA9IHsgdG9wOiAwLCBsZWZ0OiAwIH07XG4gICAgICAgIHZhciBvZmZzZXRQYXJlbnRFbCA9IHBhcmVudE9mZnNldEVsKGVsZW1lbnRbMF0pO1xuICAgICAgICBpZiAob2Zmc2V0UGFyZW50RWwgIT0gJGRvY3VtZW50WzBdKSB7XG4gICAgICAgICAgb2Zmc2V0UGFyZW50QkNSID0gdGhpcy5vZmZzZXQoYW5ndWxhci5lbGVtZW50KG9mZnNldFBhcmVudEVsKSk7XG4gICAgICAgICAgb2Zmc2V0UGFyZW50QkNSLnRvcCArPSBvZmZzZXRQYXJlbnRFbC5jbGllbnRUb3AgLSBvZmZzZXRQYXJlbnRFbC5zY3JvbGxUb3A7XG4gICAgICAgICAgb2Zmc2V0UGFyZW50QkNSLmxlZnQgKz0gb2Zmc2V0UGFyZW50RWwuY2xpZW50TGVmdCAtIG9mZnNldFBhcmVudEVsLnNjcm9sbExlZnQ7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgYm91bmRpbmdDbGllbnRSZWN0ID0gZWxlbWVudFswXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB3aWR0aDogYm91bmRpbmdDbGllbnRSZWN0LndpZHRoIHx8IGVsZW1lbnQucHJvcCgnb2Zmc2V0V2lkdGgnKSxcbiAgICAgICAgICBoZWlnaHQ6IGJvdW5kaW5nQ2xpZW50UmVjdC5oZWlnaHQgfHwgZWxlbWVudC5wcm9wKCdvZmZzZXRIZWlnaHQnKSxcbiAgICAgICAgICB0b3A6IGVsQkNSLnRvcCAtIG9mZnNldFBhcmVudEJDUi50b3AsXG4gICAgICAgICAgbGVmdDogZWxCQ1IubGVmdCAtIG9mZnNldFBhcmVudEJDUi5sZWZ0XG4gICAgICAgIH07XG4gICAgICB9LFxuXG4gICAgICAvKipcbiAgICAgICAqIFByb3ZpZGVzIHJlYWQtb25seSBlcXVpdmFsZW50IG9mIGpRdWVyeSdzIG9mZnNldCBmdW5jdGlvbjpcbiAgICAgICAqIGh0dHA6Ly9hcGkuanF1ZXJ5LmNvbS9vZmZzZXQvXG4gICAgICAgKi9cbiAgICAgIG9mZnNldDogZnVuY3Rpb24gKGVsZW1lbnQpIHtcbiAgICAgICAgdmFyIGJvdW5kaW5nQ2xpZW50UmVjdCA9IGVsZW1lbnRbMF0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgd2lkdGg6IGJvdW5kaW5nQ2xpZW50UmVjdC53aWR0aCB8fCBlbGVtZW50LnByb3AoJ29mZnNldFdpZHRoJyksXG4gICAgICAgICAgaGVpZ2h0OiBib3VuZGluZ0NsaWVudFJlY3QuaGVpZ2h0IHx8IGVsZW1lbnQucHJvcCgnb2Zmc2V0SGVpZ2h0JyksXG4gICAgICAgICAgdG9wOiBib3VuZGluZ0NsaWVudFJlY3QudG9wICsgKCR3aW5kb3cucGFnZVlPZmZzZXQgfHwgJGRvY3VtZW50WzBdLmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3ApLFxuICAgICAgICAgIGxlZnQ6IGJvdW5kaW5nQ2xpZW50UmVjdC5sZWZ0ICsgKCR3aW5kb3cucGFnZVhPZmZzZXQgfHwgJGRvY3VtZW50WzBdLmRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0KVxuICAgICAgICB9O1xuICAgICAgfSxcblxuICAgICAgLyoqXG4gICAgICAgKiBQcm92aWRlcyBjb29yZGluYXRlcyBmb3IgdGhlIHRhcmdldEVsIGluIHJlbGF0aW9uIHRvIGhvc3RFbFxuICAgICAgICovXG4gICAgICBwb3NpdGlvbkVsZW1lbnRzOiBmdW5jdGlvbiAoaG9zdEVsLCB0YXJnZXRFbCwgcG9zaXRpb25TdHIsIGFwcGVuZFRvQm9keSkge1xuXG4gICAgICAgIHZhciBwb3NpdGlvblN0clBhcnRzID0gcG9zaXRpb25TdHIuc3BsaXQoJy0nKTtcbiAgICAgICAgdmFyIHBvczAgPSBwb3NpdGlvblN0clBhcnRzWzBdLCBwb3MxID0gcG9zaXRpb25TdHJQYXJ0c1sxXSB8fCAnY2VudGVyJztcblxuICAgICAgICB2YXIgaG9zdEVsUG9zLFxuICAgICAgICAgIHRhcmdldEVsV2lkdGgsXG4gICAgICAgICAgdGFyZ2V0RWxIZWlnaHQsXG4gICAgICAgICAgdGFyZ2V0RWxQb3M7XG5cbiAgICAgICAgaG9zdEVsUG9zID0gYXBwZW5kVG9Cb2R5ID8gdGhpcy5vZmZzZXQoaG9zdEVsKSA6IHRoaXMucG9zaXRpb24oaG9zdEVsKTtcblxuICAgICAgICB0YXJnZXRFbFdpZHRoID0gdGFyZ2V0RWwucHJvcCgnb2Zmc2V0V2lkdGgnKTtcbiAgICAgICAgdGFyZ2V0RWxIZWlnaHQgPSB0YXJnZXRFbC5wcm9wKCdvZmZzZXRIZWlnaHQnKTtcblxuICAgICAgICB2YXIgc2hpZnRXaWR0aCA9IHtcbiAgICAgICAgICBjZW50ZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBob3N0RWxQb3MubGVmdCArIGhvc3RFbFBvcy53aWR0aCAvIDIgLSB0YXJnZXRFbFdpZHRoIC8gMjtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGxlZnQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBob3N0RWxQb3MubGVmdDtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHJpZ2h0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gaG9zdEVsUG9zLmxlZnQgKyBob3N0RWxQb3Mud2lkdGg7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHZhciBzaGlmdEhlaWdodCA9IHtcbiAgICAgICAgICBjZW50ZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBob3N0RWxQb3MudG9wICsgaG9zdEVsUG9zLmhlaWdodCAvIDIgLSB0YXJnZXRFbEhlaWdodCAvIDI7XG4gICAgICAgICAgfSxcbiAgICAgICAgICB0b3A6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBob3N0RWxQb3MudG9wO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgYm90dG9tOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gaG9zdEVsUG9zLnRvcCArIGhvc3RFbFBvcy5oZWlnaHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHN3aXRjaCAocG9zMCkge1xuICAgICAgICAgIGNhc2UgJ3JpZ2h0JzpcbiAgICAgICAgICAgIHRhcmdldEVsUG9zID0ge1xuICAgICAgICAgICAgICB0b3A6IHNoaWZ0SGVpZ2h0W3BvczFdKCksXG4gICAgICAgICAgICAgIGxlZnQ6IHNoaWZ0V2lkdGhbcG9zMF0oKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ2xlZnQnOlxuICAgICAgICAgICAgdGFyZ2V0RWxQb3MgPSB7XG4gICAgICAgICAgICAgIHRvcDogc2hpZnRIZWlnaHRbcG9zMV0oKSxcbiAgICAgICAgICAgICAgbGVmdDogaG9zdEVsUG9zLmxlZnQgLSB0YXJnZXRFbFdpZHRoXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSAnYm90dG9tJzpcbiAgICAgICAgICAgIHRhcmdldEVsUG9zID0ge1xuICAgICAgICAgICAgICB0b3A6IHNoaWZ0SGVpZ2h0W3BvczBdKCksXG4gICAgICAgICAgICAgIGxlZnQ6IHNoaWZ0V2lkdGhbcG9zMV0oKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0YXJnZXRFbFBvcyA9IHtcbiAgICAgICAgICAgICAgdG9wOiBob3N0RWxQb3MudG9wIC0gdGFyZ2V0RWxIZWlnaHQsXG4gICAgICAgICAgICAgIGxlZnQ6IHNoaWZ0V2lkdGhbcG9zMV0oKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRhcmdldEVsUG9zO1xuICAgICAgfVxuICAgIH07XG4gIH1dKTtcblxuYW5ndWxhci5tb2R1bGUoJ3VpLmJvb3RzdHJhcC5kYXRlcGlja2VyJywgWyd1aS5ib290c3RyYXAuZGF0ZXBhcnNlcicsICd1aS5ib290c3RyYXAucG9zaXRpb24nXSlcblxuLmNvbnN0YW50KCdkYXRlcGlja2VyQ29uZmlnJywge1xuICBmb3JtYXREYXk6ICdkZCcsXG4gIGZvcm1hdE1vbnRoOiAnTU1NTScsXG4gIGZvcm1hdFllYXI6ICd5eXl5JyxcbiAgZm9ybWF0RGF5SGVhZGVyOiAnRUVFJyxcbiAgZm9ybWF0RGF5VGl0bGU6ICdNTU1NIHl5eXknLFxuICBmb3JtYXRNb250aFRpdGxlOiAneXl5eScsXG4gIGRhdGVwaWNrZXJNb2RlOiAnZGF5JyxcbiAgbWluTW9kZTogJ2RheScsXG4gIG1heE1vZGU6ICd5ZWFyJyxcbiAgc2hvd1dlZWtzOiB0cnVlLFxuICBzdGFydGluZ0RheTogMCxcbiAgeWVhclJhbmdlOiAyMCxcbiAgbWluRGF0ZTogbnVsbCxcbiAgbWF4RGF0ZTogbnVsbFxufSlcblxuLmNvbnRyb2xsZXIoJ0RhdGVwaWNrZXJDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJGF0dHJzJywgJyRwYXJzZScsICckaW50ZXJwb2xhdGUnLCAnJHRpbWVvdXQnLCAnJGxvZycsICdkYXRlRmlsdGVyJywgJ2RhdGVwaWNrZXJDb25maWcnLCBmdW5jdGlvbigkc2NvcGUsICRhdHRycywgJHBhcnNlLCAkaW50ZXJwb2xhdGUsICR0aW1lb3V0LCAkbG9nLCBkYXRlRmlsdGVyLCBkYXRlcGlja2VyQ29uZmlnKSB7XG4gIHZhciBzZWxmID0gdGhpcyxcbiAgICAgIG5nTW9kZWxDdHJsID0geyAkc2V0Vmlld1ZhbHVlOiBhbmd1bGFyLm5vb3AgfTsgLy8gbnVsbE1vZGVsQ3RybDtcblxuICAvLyBNb2RlcyBjaGFpblxuICB0aGlzLm1vZGVzID0gWydkYXknLCAnbW9udGgnLCAneWVhciddO1xuXG4gIC8vIENvbmZpZ3VyYXRpb24gYXR0cmlidXRlc1xuICBhbmd1bGFyLmZvckVhY2goWydmb3JtYXREYXknLCAnZm9ybWF0TW9udGgnLCAnZm9ybWF0WWVhcicsICdmb3JtYXREYXlIZWFkZXInLCAnZm9ybWF0RGF5VGl0bGUnLCAnZm9ybWF0TW9udGhUaXRsZScsXG4gICAgICAgICAgICAgICAgICAgJ21pbk1vZGUnLCAnbWF4TW9kZScsICdzaG93V2Vla3MnLCAnc3RhcnRpbmdEYXknLCAneWVhclJhbmdlJ10sIGZ1bmN0aW9uKCBrZXksIGluZGV4ICkge1xuICAgIHNlbGZba2V5XSA9IGFuZ3VsYXIuaXNEZWZpbmVkKCRhdHRyc1trZXldKSA/IChpbmRleCA8IDggPyAkaW50ZXJwb2xhdGUoJGF0dHJzW2tleV0pKCRzY29wZS4kcGFyZW50KSA6ICRzY29wZS4kcGFyZW50LiRldmFsKCRhdHRyc1trZXldKSkgOiBkYXRlcGlja2VyQ29uZmlnW2tleV07XG4gIH0pO1xuXG4gIC8vIFdhdGNoYWJsZSBkYXRlIGF0dHJpYnV0ZXNcbiAgYW5ndWxhci5mb3JFYWNoKFsnbWluRGF0ZScsICdtYXhEYXRlJ10sIGZ1bmN0aW9uKCBrZXkgKSB7XG4gICAgaWYgKCAkYXR0cnNba2V5XSApIHtcbiAgICAgICRzY29wZS4kcGFyZW50LiR3YXRjaCgkcGFyc2UoJGF0dHJzW2tleV0pLCBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICBzZWxmW2tleV0gPSB2YWx1ZSA/IG5ldyBEYXRlKHZhbHVlKSA6IG51bGw7XG4gICAgICAgIHNlbGYucmVmcmVzaFZpZXcoKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZWxmW2tleV0gPSBkYXRlcGlja2VyQ29uZmlnW2tleV0gPyBuZXcgRGF0ZShkYXRlcGlja2VyQ29uZmlnW2tleV0pIDogbnVsbDtcbiAgICB9XG4gIH0pO1xuXG4gICRzY29wZS5kYXRlcGlja2VyTW9kZSA9ICRzY29wZS5kYXRlcGlja2VyTW9kZSB8fCBkYXRlcGlja2VyQ29uZmlnLmRhdGVwaWNrZXJNb2RlO1xuICAkc2NvcGUudW5pcXVlSWQgPSAnZGF0ZXBpY2tlci0nICsgJHNjb3BlLiRpZCArICctJyArIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAwKTtcbiAgdGhpcy5hY3RpdmVEYXRlID0gYW5ndWxhci5pc0RlZmluZWQoJGF0dHJzLmluaXREYXRlKSA/ICRzY29wZS4kcGFyZW50LiRldmFsKCRhdHRycy5pbml0RGF0ZSkgOiBuZXcgRGF0ZSgpO1xuXG4gICRzY29wZS5pc0FjdGl2ZSA9IGZ1bmN0aW9uKGRhdGVPYmplY3QpIHtcbiAgICBpZiAoc2VsZi5jb21wYXJlKGRhdGVPYmplY3QuZGF0ZSwgc2VsZi5hY3RpdmVEYXRlKSA9PT0gMCkge1xuICAgICAgJHNjb3BlLmFjdGl2ZURhdGVJZCA9IGRhdGVPYmplY3QudWlkO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfTtcblxuICB0aGlzLmluaXQgPSBmdW5jdGlvbiggbmdNb2RlbEN0cmxfICkge1xuICAgIG5nTW9kZWxDdHJsID0gbmdNb2RlbEN0cmxfO1xuXG4gICAgbmdNb2RlbEN0cmwuJHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgc2VsZi5yZW5kZXIoKTtcbiAgICB9O1xuICB9O1xuXG4gIHRoaXMucmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKCBuZ01vZGVsQ3RybC4kbW9kZWxWYWx1ZSApIHtcbiAgICAgIHZhciBkYXRlID0gbmV3IERhdGUoIG5nTW9kZWxDdHJsLiRtb2RlbFZhbHVlICksXG4gICAgICAgICAgaXNWYWxpZCA9ICFpc05hTihkYXRlKTtcblxuICAgICAgaWYgKCBpc1ZhbGlkICkge1xuICAgICAgICB0aGlzLmFjdGl2ZURhdGUgPSBkYXRlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgJGxvZy5lcnJvcignRGF0ZXBpY2tlciBkaXJlY3RpdmU6IFwibmctbW9kZWxcIiB2YWx1ZSBtdXN0IGJlIGEgRGF0ZSBvYmplY3QsIGEgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyBzaW5jZSAwMS4wMS4xOTcwIG9yIGEgc3RyaW5nIHJlcHJlc2VudGluZyBhbiBSRkMyODIyIG9yIElTTyA4NjAxIGRhdGUuJyk7XG4gICAgICB9XG4gICAgICBuZ01vZGVsQ3RybC4kc2V0VmFsaWRpdHkoJ2RhdGUnLCBpc1ZhbGlkKTtcbiAgICB9XG4gICAgdGhpcy5yZWZyZXNoVmlldygpO1xuICB9O1xuXG4gIHRoaXMucmVmcmVzaFZpZXcgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAoIHRoaXMuZWxlbWVudCApIHtcbiAgICAgIHRoaXMuX3JlZnJlc2hWaWV3KCk7XG5cbiAgICAgIHZhciBkYXRlID0gbmdNb2RlbEN0cmwuJG1vZGVsVmFsdWUgPyBuZXcgRGF0ZShuZ01vZGVsQ3RybC4kbW9kZWxWYWx1ZSkgOiBudWxsO1xuICAgICAgbmdNb2RlbEN0cmwuJHNldFZhbGlkaXR5KCdkYXRlLWRpc2FibGVkJywgIWRhdGUgfHwgKHRoaXMuZWxlbWVudCAmJiAhdGhpcy5pc0Rpc2FibGVkKGRhdGUpKSk7XG4gICAgfVxuICB9O1xuXG4gIHRoaXMuY3JlYXRlRGF0ZU9iamVjdCA9IGZ1bmN0aW9uKGRhdGUsIGZvcm1hdCkge1xuICAgIHZhciBtb2RlbCA9IG5nTW9kZWxDdHJsLiRtb2RlbFZhbHVlID8gbmV3IERhdGUobmdNb2RlbEN0cmwuJG1vZGVsVmFsdWUpIDogbnVsbDtcbiAgICByZXR1cm4ge1xuICAgICAgZGF0ZTogZGF0ZSxcbiAgICAgIGxhYmVsOiBkYXRlRmlsdGVyKGRhdGUsIGZvcm1hdCksXG4gICAgICBzZWxlY3RlZDogbW9kZWwgJiYgdGhpcy5jb21wYXJlKGRhdGUsIG1vZGVsKSA9PT0gMCxcbiAgICAgIGRpc2FibGVkOiB0aGlzLmlzRGlzYWJsZWQoZGF0ZSksXG4gICAgICBjdXJyZW50OiB0aGlzLmNvbXBhcmUoZGF0ZSwgbmV3IERhdGUoKSkgPT09IDBcbiAgICB9O1xuICB9O1xuXG4gIHRoaXMuaXNEaXNhYmxlZCA9IGZ1bmN0aW9uKCBkYXRlICkge1xuICAgIHJldHVybiAoKHRoaXMubWluRGF0ZSAmJiB0aGlzLmNvbXBhcmUoZGF0ZSwgdGhpcy5taW5EYXRlKSA8IDApIHx8ICh0aGlzLm1heERhdGUgJiYgdGhpcy5jb21wYXJlKGRhdGUsIHRoaXMubWF4RGF0ZSkgPiAwKSB8fCAoJGF0dHJzLmRhdGVEaXNhYmxlZCAmJiAkc2NvcGUuZGF0ZURpc2FibGVkKHtkYXRlOiBkYXRlLCBtb2RlOiAkc2NvcGUuZGF0ZXBpY2tlck1vZGV9KSkpO1xuICB9O1xuXG4gIC8vIFNwbGl0IGFycmF5IGludG8gc21hbGxlciBhcnJheXNcbiAgdGhpcy5zcGxpdCA9IGZ1bmN0aW9uKGFyciwgc2l6ZSkge1xuICAgIHZhciBhcnJheXMgPSBbXTtcbiAgICB3aGlsZSAoYXJyLmxlbmd0aCA+IDApIHtcbiAgICAgIGFycmF5cy5wdXNoKGFyci5zcGxpY2UoMCwgc2l6ZSkpO1xuICAgIH1cbiAgICByZXR1cm4gYXJyYXlzO1xuICB9O1xuXG4gICRzY29wZS5zZWxlY3QgPSBmdW5jdGlvbiggZGF0ZSApIHtcbiAgICBpZiAoICRzY29wZS5kYXRlcGlja2VyTW9kZSA9PT0gc2VsZi5taW5Nb2RlICkge1xuICAgICAgdmFyIGR0ID0gbmdNb2RlbEN0cmwuJG1vZGVsVmFsdWUgPyBuZXcgRGF0ZSggbmdNb2RlbEN0cmwuJG1vZGVsVmFsdWUgKSA6IG5ldyBEYXRlKDAsIDAsIDAsIDAsIDAsIDAsIDApO1xuICAgICAgZHQuc2V0RnVsbFllYXIoIGRhdGUuZ2V0RnVsbFllYXIoKSwgZGF0ZS5nZXRNb250aCgpLCBkYXRlLmdldERhdGUoKSApO1xuICAgICAgbmdNb2RlbEN0cmwuJHNldFZpZXdWYWx1ZSggZHQgKTtcbiAgICAgIG5nTW9kZWxDdHJsLiRyZW5kZXIoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2VsZi5hY3RpdmVEYXRlID0gZGF0ZTtcbiAgICAgICRzY29wZS5kYXRlcGlja2VyTW9kZSA9IHNlbGYubW9kZXNbIHNlbGYubW9kZXMuaW5kZXhPZiggJHNjb3BlLmRhdGVwaWNrZXJNb2RlICkgLSAxIF07XG4gICAgfVxuICB9O1xuXG4gICRzY29wZS5tb3ZlID0gZnVuY3Rpb24oIGRpcmVjdGlvbiApIHtcbiAgICB2YXIgeWVhciA9IHNlbGYuYWN0aXZlRGF0ZS5nZXRGdWxsWWVhcigpICsgZGlyZWN0aW9uICogKHNlbGYuc3RlcC55ZWFycyB8fCAwKSxcbiAgICAgICAgbW9udGggPSBzZWxmLmFjdGl2ZURhdGUuZ2V0TW9udGgoKSArIGRpcmVjdGlvbiAqIChzZWxmLnN0ZXAubW9udGhzIHx8IDApO1xuICAgIHNlbGYuYWN0aXZlRGF0ZS5zZXRGdWxsWWVhcih5ZWFyLCBtb250aCwgMSk7XG4gICAgc2VsZi5yZWZyZXNoVmlldygpO1xuICB9O1xuXG4gICRzY29wZS50b2dnbGVNb2RlID0gZnVuY3Rpb24oIGRpcmVjdGlvbiApIHtcbiAgICBkaXJlY3Rpb24gPSBkaXJlY3Rpb24gfHwgMTtcblxuICAgIGlmICgoJHNjb3BlLmRhdGVwaWNrZXJNb2RlID09PSBzZWxmLm1heE1vZGUgJiYgZGlyZWN0aW9uID09PSAxKSB8fCAoJHNjb3BlLmRhdGVwaWNrZXJNb2RlID09PSBzZWxmLm1pbk1vZGUgJiYgZGlyZWN0aW9uID09PSAtMSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAkc2NvcGUuZGF0ZXBpY2tlck1vZGUgPSBzZWxmLm1vZGVzWyBzZWxmLm1vZGVzLmluZGV4T2YoICRzY29wZS5kYXRlcGlja2VyTW9kZSApICsgZGlyZWN0aW9uIF07XG4gIH07XG5cbiAgLy8gS2V5IGV2ZW50IG1hcHBlclxuICAkc2NvcGUua2V5cyA9IHsgMTM6J2VudGVyJywgMzI6J3NwYWNlJywgMzM6J3BhZ2V1cCcsIDM0OidwYWdlZG93bicsIDM1OidlbmQnLCAzNjonaG9tZScsIDM3OidsZWZ0JywgMzg6J3VwJywgMzk6J3JpZ2h0JywgNDA6J2Rvd24nIH07XG5cbiAgdmFyIGZvY3VzRWxlbWVudCA9IGZ1bmN0aW9uKCkge1xuICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgc2VsZi5lbGVtZW50WzBdLmZvY3VzKCk7XG4gICAgfSwgMCAsIGZhbHNlKTtcbiAgfTtcblxuICAvLyBMaXN0ZW4gZm9yIGZvY3VzIHJlcXVlc3RzIGZyb20gcG9wdXAgZGlyZWN0aXZlXG4gICRzY29wZS4kb24oJ2RhdGVwaWNrZXIuZm9jdXMnLCBmb2N1c0VsZW1lbnQpO1xuXG4gICRzY29wZS5rZXlkb3duID0gZnVuY3Rpb24oIGV2dCApIHtcbiAgICB2YXIga2V5ID0gJHNjb3BlLmtleXNbZXZ0LndoaWNoXTtcblxuICAgIGlmICggIWtleSB8fCBldnQuc2hpZnRLZXkgfHwgZXZ0LmFsdEtleSApIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICBpZiAoa2V5ID09PSAnZW50ZXInIHx8IGtleSA9PT0gJ3NwYWNlJykge1xuICAgICAgaWYgKCBzZWxmLmlzRGlzYWJsZWQoc2VsZi5hY3RpdmVEYXRlKSkge1xuICAgICAgICByZXR1cm47IC8vIGRvIG5vdGhpbmdcbiAgICAgIH1cbiAgICAgICRzY29wZS5zZWxlY3Qoc2VsZi5hY3RpdmVEYXRlKTtcbiAgICAgIGZvY3VzRWxlbWVudCgpO1xuICAgIH0gZWxzZSBpZiAoZXZ0LmN0cmxLZXkgJiYgKGtleSA9PT0gJ3VwJyB8fCBrZXkgPT09ICdkb3duJykpIHtcbiAgICAgICRzY29wZS50b2dnbGVNb2RlKGtleSA9PT0gJ3VwJyA/IDEgOiAtMSk7XG4gICAgICBmb2N1c0VsZW1lbnQoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2VsZi5oYW5kbGVLZXlEb3duKGtleSwgZXZ0KTtcbiAgICAgIHNlbGYucmVmcmVzaFZpZXcoKTtcbiAgICB9XG4gIH07XG59XSlcblxuLmRpcmVjdGl2ZSggJ2RhdGVwaWNrZXInLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6ICdFQScsXG4gICAgcmVwbGFjZTogdHJ1ZSxcbiAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci5odG1sJyxcbiAgICBzY29wZToge1xuICAgICAgZGF0ZXBpY2tlck1vZGU6ICc9PycsXG4gICAgICBkYXRlRGlzYWJsZWQ6ICcmJ1xuICAgIH0sXG4gICAgcmVxdWlyZTogWydkYXRlcGlja2VyJywgJz9ebmdNb2RlbCddLFxuICAgIGNvbnRyb2xsZXI6ICdEYXRlcGlja2VyQ29udHJvbGxlcicsXG4gICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJzLCBjdHJscykge1xuICAgICAgdmFyIGRhdGVwaWNrZXJDdHJsID0gY3RybHNbMF0sIG5nTW9kZWxDdHJsID0gY3RybHNbMV07XG5cbiAgICAgIGlmICggbmdNb2RlbEN0cmwgKSB7XG4gICAgICAgIGRhdGVwaWNrZXJDdHJsLmluaXQoIG5nTW9kZWxDdHJsICk7XG4gICAgICB9XG4gICAgfVxuICB9O1xufSlcblxuLmRpcmVjdGl2ZSgnZGF5cGlja2VyJywgWydkYXRlRmlsdGVyJywgZnVuY3Rpb24gKGRhdGVGaWx0ZXIpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogJ0VBJyxcbiAgICByZXBsYWNlOiB0cnVlLFxuICAgIHRlbXBsYXRlVXJsOiAndGVtcGxhdGUvZGF0ZXBpY2tlci9kYXkuaHRtbCcsXG4gICAgcmVxdWlyZTogJ15kYXRlcGlja2VyJyxcbiAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMsIGN0cmwpIHtcbiAgICAgIHNjb3BlLnNob3dXZWVrcyA9IGN0cmwuc2hvd1dlZWtzO1xuXG4gICAgICBjdHJsLnN0ZXAgPSB7IG1vbnRoczogMSB9O1xuICAgICAgY3RybC5lbGVtZW50ID0gZWxlbWVudDtcblxuICAgICAgdmFyIERBWVNfSU5fTU9OVEggPSBbMzEsIDI4LCAzMSwgMzAsIDMxLCAzMCwgMzEsIDMxLCAzMCwgMzEsIDMwLCAzMV07XG4gICAgICBmdW5jdGlvbiBnZXREYXlzSW5Nb250aCggeWVhciwgbW9udGggKSB7XG4gICAgICAgIHJldHVybiAoKG1vbnRoID09PSAxKSAmJiAoeWVhciAlIDQgPT09IDApICYmICgoeWVhciAlIDEwMCAhPT0gMCkgfHwgKHllYXIgJSA0MDAgPT09IDApKSkgPyAyOSA6IERBWVNfSU5fTU9OVEhbbW9udGhdO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBnZXREYXRlcyhzdGFydERhdGUsIG4pIHtcbiAgICAgICAgdmFyIGRhdGVzID0gbmV3IEFycmF5KG4pLCBjdXJyZW50ID0gbmV3IERhdGUoc3RhcnREYXRlKSwgaSA9IDA7XG4gICAgICAgIGN1cnJlbnQuc2V0SG91cnMoMTIpOyAvLyBQcmV2ZW50IHJlcGVhdGVkIGRhdGVzIGJlY2F1c2Ugb2YgdGltZXpvbmUgYnVnXG4gICAgICAgIHdoaWxlICggaSA8IG4gKSB7XG4gICAgICAgICAgZGF0ZXNbaSsrXSA9IG5ldyBEYXRlKGN1cnJlbnQpO1xuICAgICAgICAgIGN1cnJlbnQuc2V0RGF0ZSggY3VycmVudC5nZXREYXRlKCkgKyAxICk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRhdGVzO1xuICAgICAgfVxuXG4gICAgICBjdHJsLl9yZWZyZXNoVmlldyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgeWVhciA9IGN0cmwuYWN0aXZlRGF0ZS5nZXRGdWxsWWVhcigpLFxuICAgICAgICAgIG1vbnRoID0gY3RybC5hY3RpdmVEYXRlLmdldE1vbnRoKCksXG4gICAgICAgICAgZmlyc3REYXlPZk1vbnRoID0gbmV3IERhdGUoeWVhciwgbW9udGgsIDEpLFxuICAgICAgICAgIGRpZmZlcmVuY2UgPSBjdHJsLnN0YXJ0aW5nRGF5IC0gZmlyc3REYXlPZk1vbnRoLmdldERheSgpLFxuICAgICAgICAgIG51bURpc3BsYXllZEZyb21QcmV2aW91c01vbnRoID0gKGRpZmZlcmVuY2UgPiAwKSA/IDcgLSBkaWZmZXJlbmNlIDogLSBkaWZmZXJlbmNlLFxuICAgICAgICAgIGZpcnN0RGF0ZSA9IG5ldyBEYXRlKGZpcnN0RGF5T2ZNb250aCk7XG5cbiAgICAgICAgaWYgKCBudW1EaXNwbGF5ZWRGcm9tUHJldmlvdXNNb250aCA+IDAgKSB7XG4gICAgICAgICAgZmlyc3REYXRlLnNldERhdGUoIC0gbnVtRGlzcGxheWVkRnJvbVByZXZpb3VzTW9udGggKyAxICk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyA0MiBpcyB0aGUgbnVtYmVyIG9mIGRheXMgb24gYSBzaXgtbW9udGggY2FsZW5kYXJcbiAgICAgICAgdmFyIGRheXMgPSBnZXREYXRlcyhmaXJzdERhdGUsIDQyKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA0MjsgaSArKykge1xuICAgICAgICAgIGRheXNbaV0gPSBhbmd1bGFyLmV4dGVuZChjdHJsLmNyZWF0ZURhdGVPYmplY3QoZGF5c1tpXSwgY3RybC5mb3JtYXREYXkpLCB7XG4gICAgICAgICAgICBzZWNvbmRhcnk6IGRheXNbaV0uZ2V0TW9udGgoKSAhPT0gbW9udGgsXG4gICAgICAgICAgICB1aWQ6IHNjb3BlLnVuaXF1ZUlkICsgJy0nICsgaVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgc2NvcGUubGFiZWxzID0gbmV3IEFycmF5KDcpO1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IDc7IGorKykge1xuICAgICAgICAgIHNjb3BlLmxhYmVsc1tqXSA9IHtcbiAgICAgICAgICAgIGFiYnI6IGRhdGVGaWx0ZXIoZGF5c1tqXS5kYXRlLCBjdHJsLmZvcm1hdERheUhlYWRlciksXG4gICAgICAgICAgICBmdWxsOiBkYXRlRmlsdGVyKGRheXNbal0uZGF0ZSwgJ0VFRUUnKVxuICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBzY29wZS50aXRsZSA9IGRhdGVGaWx0ZXIoY3RybC5hY3RpdmVEYXRlLCBjdHJsLmZvcm1hdERheVRpdGxlKTtcbiAgICAgICAgc2NvcGUucm93cyA9IGN0cmwuc3BsaXQoZGF5cywgNyk7XG5cbiAgICAgICAgaWYgKCBzY29wZS5zaG93V2Vla3MgKSB7XG4gICAgICAgICAgc2NvcGUud2Vla051bWJlcnMgPSBbXTtcbiAgICAgICAgICB2YXIgd2Vla051bWJlciA9IGdldElTTzg2MDFXZWVrTnVtYmVyKCBzY29wZS5yb3dzWzBdWzBdLmRhdGUgKSxcbiAgICAgICAgICAgICAgbnVtV2Vla3MgPSBzY29wZS5yb3dzLmxlbmd0aDtcbiAgICAgICAgICB3aGlsZSggc2NvcGUud2Vla051bWJlcnMucHVzaCh3ZWVrTnVtYmVyKyspIDwgbnVtV2Vla3MgKSB7fVxuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBjdHJsLmNvbXBhcmUgPSBmdW5jdGlvbihkYXRlMSwgZGF0ZTIpIHtcbiAgICAgICAgcmV0dXJuIChuZXcgRGF0ZSggZGF0ZTEuZ2V0RnVsbFllYXIoKSwgZGF0ZTEuZ2V0TW9udGgoKSwgZGF0ZTEuZ2V0RGF0ZSgpICkgLSBuZXcgRGF0ZSggZGF0ZTIuZ2V0RnVsbFllYXIoKSwgZGF0ZTIuZ2V0TW9udGgoKSwgZGF0ZTIuZ2V0RGF0ZSgpICkgKTtcbiAgICAgIH07XG5cbiAgICAgIGZ1bmN0aW9uIGdldElTTzg2MDFXZWVrTnVtYmVyKGRhdGUpIHtcbiAgICAgICAgdmFyIGNoZWNrRGF0ZSA9IG5ldyBEYXRlKGRhdGUpO1xuICAgICAgICBjaGVja0RhdGUuc2V0RGF0ZShjaGVja0RhdGUuZ2V0RGF0ZSgpICsgNCAtIChjaGVja0RhdGUuZ2V0RGF5KCkgfHwgNykpOyAvLyBUaHVyc2RheVxuICAgICAgICB2YXIgdGltZSA9IGNoZWNrRGF0ZS5nZXRUaW1lKCk7XG4gICAgICAgIGNoZWNrRGF0ZS5zZXRNb250aCgwKTsgLy8gQ29tcGFyZSB3aXRoIEphbiAxXG4gICAgICAgIGNoZWNrRGF0ZS5zZXREYXRlKDEpO1xuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJvdW5kKCh0aW1lIC0gY2hlY2tEYXRlKSAvIDg2NDAwMDAwKSAvIDcpICsgMTtcbiAgICAgIH1cblxuICAgICAgY3RybC5oYW5kbGVLZXlEb3duID0gZnVuY3Rpb24oIGtleSwgZXZ0ICkge1xuICAgICAgICB2YXIgZGF0ZSA9IGN0cmwuYWN0aXZlRGF0ZS5nZXREYXRlKCk7XG5cbiAgICAgICAgaWYgKGtleSA9PT0gJ2xlZnQnKSB7XG4gICAgICAgICAgZGF0ZSA9IGRhdGUgLSAxOyAgIC8vIHVwXG4gICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAndXAnKSB7XG4gICAgICAgICAgZGF0ZSA9IGRhdGUgLSA3OyAgIC8vIGRvd25cbiAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09ICdyaWdodCcpIHtcbiAgICAgICAgICBkYXRlID0gZGF0ZSArIDE7ICAgLy8gZG93blxuICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ2Rvd24nKSB7XG4gICAgICAgICAgZGF0ZSA9IGRhdGUgKyA3O1xuICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ3BhZ2V1cCcgfHwga2V5ID09PSAncGFnZWRvd24nKSB7XG4gICAgICAgICAgdmFyIG1vbnRoID0gY3RybC5hY3RpdmVEYXRlLmdldE1vbnRoKCkgKyAoa2V5ID09PSAncGFnZXVwJyA/IC0gMSA6IDEpO1xuICAgICAgICAgIGN0cmwuYWN0aXZlRGF0ZS5zZXRNb250aChtb250aCwgMSk7XG4gICAgICAgICAgZGF0ZSA9IE1hdGgubWluKGdldERheXNJbk1vbnRoKGN0cmwuYWN0aXZlRGF0ZS5nZXRGdWxsWWVhcigpLCBjdHJsLmFjdGl2ZURhdGUuZ2V0TW9udGgoKSksIGRhdGUpO1xuICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ2hvbWUnKSB7XG4gICAgICAgICAgZGF0ZSA9IDE7XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnZW5kJykge1xuICAgICAgICAgIGRhdGUgPSBnZXREYXlzSW5Nb250aChjdHJsLmFjdGl2ZURhdGUuZ2V0RnVsbFllYXIoKSwgY3RybC5hY3RpdmVEYXRlLmdldE1vbnRoKCkpO1xuICAgICAgICB9XG4gICAgICAgIGN0cmwuYWN0aXZlRGF0ZS5zZXREYXRlKGRhdGUpO1xuICAgICAgfTtcblxuICAgICAgY3RybC5yZWZyZXNoVmlldygpO1xuICAgIH1cbiAgfTtcbn1dKVxuXG4uZGlyZWN0aXZlKCdtb250aHBpY2tlcicsIFsnZGF0ZUZpbHRlcicsIGZ1bmN0aW9uIChkYXRlRmlsdGVyKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6ICdFQScsXG4gICAgcmVwbGFjZTogdHJ1ZSxcbiAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlL2RhdGVwaWNrZXIvbW9udGguaHRtbCcsXG4gICAgcmVxdWlyZTogJ15kYXRlcGlja2VyJyxcbiAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMsIGN0cmwpIHtcbiAgICAgIGN0cmwuc3RlcCA9IHsgeWVhcnM6IDEgfTtcbiAgICAgIGN0cmwuZWxlbWVudCA9IGVsZW1lbnQ7XG5cbiAgICAgIGN0cmwuX3JlZnJlc2hWaWV3ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBtb250aHMgPSBuZXcgQXJyYXkoMTIpLFxuICAgICAgICAgICAgeWVhciA9IGN0cmwuYWN0aXZlRGF0ZS5nZXRGdWxsWWVhcigpO1xuXG4gICAgICAgIGZvciAoIHZhciBpID0gMDsgaSA8IDEyOyBpKysgKSB7XG4gICAgICAgICAgbW9udGhzW2ldID0gYW5ndWxhci5leHRlbmQoY3RybC5jcmVhdGVEYXRlT2JqZWN0KG5ldyBEYXRlKHllYXIsIGksIDEpLCBjdHJsLmZvcm1hdE1vbnRoKSwge1xuICAgICAgICAgICAgdWlkOiBzY29wZS51bmlxdWVJZCArICctJyArIGlcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHNjb3BlLnRpdGxlID0gZGF0ZUZpbHRlcihjdHJsLmFjdGl2ZURhdGUsIGN0cmwuZm9ybWF0TW9udGhUaXRsZSk7XG4gICAgICAgIHNjb3BlLnJvd3MgPSBjdHJsLnNwbGl0KG1vbnRocywgMyk7XG4gICAgICB9O1xuXG4gICAgICBjdHJsLmNvbXBhcmUgPSBmdW5jdGlvbihkYXRlMSwgZGF0ZTIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKCBkYXRlMS5nZXRGdWxsWWVhcigpLCBkYXRlMS5nZXRNb250aCgpICkgLSBuZXcgRGF0ZSggZGF0ZTIuZ2V0RnVsbFllYXIoKSwgZGF0ZTIuZ2V0TW9udGgoKSApO1xuICAgICAgfTtcblxuICAgICAgY3RybC5oYW5kbGVLZXlEb3duID0gZnVuY3Rpb24oIGtleSwgZXZ0ICkge1xuICAgICAgICB2YXIgZGF0ZSA9IGN0cmwuYWN0aXZlRGF0ZS5nZXRNb250aCgpO1xuXG4gICAgICAgIGlmIChrZXkgPT09ICdsZWZ0Jykge1xuICAgICAgICAgIGRhdGUgPSBkYXRlIC0gMTsgICAvLyB1cFxuICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ3VwJykge1xuICAgICAgICAgIGRhdGUgPSBkYXRlIC0gMzsgICAvLyBkb3duXG4gICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAncmlnaHQnKSB7XG4gICAgICAgICAgZGF0ZSA9IGRhdGUgKyAxOyAgIC8vIGRvd25cbiAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09ICdkb3duJykge1xuICAgICAgICAgIGRhdGUgPSBkYXRlICsgMztcbiAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09ICdwYWdldXAnIHx8IGtleSA9PT0gJ3BhZ2Vkb3duJykge1xuICAgICAgICAgIHZhciB5ZWFyID0gY3RybC5hY3RpdmVEYXRlLmdldEZ1bGxZZWFyKCkgKyAoa2V5ID09PSAncGFnZXVwJyA/IC0gMSA6IDEpO1xuICAgICAgICAgIGN0cmwuYWN0aXZlRGF0ZS5zZXRGdWxsWWVhcih5ZWFyKTtcbiAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09ICdob21lJykge1xuICAgICAgICAgIGRhdGUgPSAwO1xuICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ2VuZCcpIHtcbiAgICAgICAgICBkYXRlID0gMTE7XG4gICAgICAgIH1cbiAgICAgICAgY3RybC5hY3RpdmVEYXRlLnNldE1vbnRoKGRhdGUpO1xuICAgICAgfTtcblxuICAgICAgY3RybC5yZWZyZXNoVmlldygpO1xuICAgIH1cbiAgfTtcbn1dKVxuXG4uZGlyZWN0aXZlKCd5ZWFycGlja2VyJywgWydkYXRlRmlsdGVyJywgZnVuY3Rpb24gKGRhdGVGaWx0ZXIpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogJ0VBJyxcbiAgICByZXBsYWNlOiB0cnVlLFxuICAgIHRlbXBsYXRlVXJsOiAndGVtcGxhdGUvZGF0ZXBpY2tlci95ZWFyLmh0bWwnLFxuICAgIHJlcXVpcmU6ICdeZGF0ZXBpY2tlcicsXG4gICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJzLCBjdHJsKSB7XG4gICAgICB2YXIgcmFuZ2UgPSBjdHJsLnllYXJSYW5nZTtcblxuICAgICAgY3RybC5zdGVwID0geyB5ZWFyczogcmFuZ2UgfTtcbiAgICAgIGN0cmwuZWxlbWVudCA9IGVsZW1lbnQ7XG5cbiAgICAgIGZ1bmN0aW9uIGdldFN0YXJ0aW5nWWVhciggeWVhciApIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KCh5ZWFyIC0gMSkgLyByYW5nZSwgMTApICogcmFuZ2UgKyAxO1xuICAgICAgfVxuXG4gICAgICBjdHJsLl9yZWZyZXNoVmlldyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgeWVhcnMgPSBuZXcgQXJyYXkocmFuZ2UpO1xuXG4gICAgICAgIGZvciAoIHZhciBpID0gMCwgc3RhcnQgPSBnZXRTdGFydGluZ1llYXIoY3RybC5hY3RpdmVEYXRlLmdldEZ1bGxZZWFyKCkpOyBpIDwgcmFuZ2U7IGkrKyApIHtcbiAgICAgICAgICB5ZWFyc1tpXSA9IGFuZ3VsYXIuZXh0ZW5kKGN0cmwuY3JlYXRlRGF0ZU9iamVjdChuZXcgRGF0ZShzdGFydCArIGksIDAsIDEpLCBjdHJsLmZvcm1hdFllYXIpLCB7XG4gICAgICAgICAgICB1aWQ6IHNjb3BlLnVuaXF1ZUlkICsgJy0nICsgaVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgc2NvcGUudGl0bGUgPSBbeWVhcnNbMF0ubGFiZWwsIHllYXJzW3JhbmdlIC0gMV0ubGFiZWxdLmpvaW4oJyAtICcpO1xuICAgICAgICBzY29wZS5yb3dzID0gY3RybC5zcGxpdCh5ZWFycywgNSk7XG4gICAgICB9O1xuXG4gICAgICBjdHJsLmNvbXBhcmUgPSBmdW5jdGlvbihkYXRlMSwgZGF0ZTIpIHtcbiAgICAgICAgcmV0dXJuIGRhdGUxLmdldEZ1bGxZZWFyKCkgLSBkYXRlMi5nZXRGdWxsWWVhcigpO1xuICAgICAgfTtcblxuICAgICAgY3RybC5oYW5kbGVLZXlEb3duID0gZnVuY3Rpb24oIGtleSwgZXZ0ICkge1xuICAgICAgICB2YXIgZGF0ZSA9IGN0cmwuYWN0aXZlRGF0ZS5nZXRGdWxsWWVhcigpO1xuXG4gICAgICAgIGlmIChrZXkgPT09ICdsZWZ0Jykge1xuICAgICAgICAgIGRhdGUgPSBkYXRlIC0gMTsgICAvLyB1cFxuICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ3VwJykge1xuICAgICAgICAgIGRhdGUgPSBkYXRlIC0gNTsgICAvLyBkb3duXG4gICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAncmlnaHQnKSB7XG4gICAgICAgICAgZGF0ZSA9IGRhdGUgKyAxOyAgIC8vIGRvd25cbiAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09ICdkb3duJykge1xuICAgICAgICAgIGRhdGUgPSBkYXRlICsgNTtcbiAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09ICdwYWdldXAnIHx8IGtleSA9PT0gJ3BhZ2Vkb3duJykge1xuICAgICAgICAgIGRhdGUgKz0gKGtleSA9PT0gJ3BhZ2V1cCcgPyAtIDEgOiAxKSAqIGN0cmwuc3RlcC55ZWFycztcbiAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09ICdob21lJykge1xuICAgICAgICAgIGRhdGUgPSBnZXRTdGFydGluZ1llYXIoIGN0cmwuYWN0aXZlRGF0ZS5nZXRGdWxsWWVhcigpICk7XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSAnZW5kJykge1xuICAgICAgICAgIGRhdGUgPSBnZXRTdGFydGluZ1llYXIoIGN0cmwuYWN0aXZlRGF0ZS5nZXRGdWxsWWVhcigpICkgKyByYW5nZSAtIDE7XG4gICAgICAgIH1cbiAgICAgICAgY3RybC5hY3RpdmVEYXRlLnNldEZ1bGxZZWFyKGRhdGUpO1xuICAgICAgfTtcblxuICAgICAgY3RybC5yZWZyZXNoVmlldygpO1xuICAgIH1cbiAgfTtcbn1dKVxuXG4uY29uc3RhbnQoJ2RhdGVwaWNrZXJQb3B1cENvbmZpZycsIHtcbiAgZGF0ZXBpY2tlclBvcHVwOiAneXl5eS1NTS1kZCcsXG4gIGN1cnJlbnRUZXh0OiAnVG9kYXknLFxuICBjbGVhclRleHQ6ICdDbGVhcicsXG4gIGNsb3NlVGV4dDogJ0RvbmUnLFxuICBjbG9zZU9uRGF0ZVNlbGVjdGlvbjogdHJ1ZSxcbiAgYXBwZW5kVG9Cb2R5OiBmYWxzZSxcbiAgc2hvd0J1dHRvbkJhcjogdHJ1ZVxufSlcblxuLmRpcmVjdGl2ZSgnZGF0ZXBpY2tlclBvcHVwJywgWyckY29tcGlsZScsICckcGFyc2UnLCAnJGRvY3VtZW50JywgJyRwb3NpdGlvbicsICdkYXRlRmlsdGVyJywgJ2RhdGVQYXJzZXInLCAnZGF0ZXBpY2tlclBvcHVwQ29uZmlnJyxcbmZ1bmN0aW9uICgkY29tcGlsZSwgJHBhcnNlLCAkZG9jdW1lbnQsICRwb3NpdGlvbiwgZGF0ZUZpbHRlciwgZGF0ZVBhcnNlciwgZGF0ZXBpY2tlclBvcHVwQ29uZmlnKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6ICdFQScsXG4gICAgcmVxdWlyZTogJ25nTW9kZWwnLFxuICAgIHNjb3BlOiB7XG4gICAgICBpc09wZW46ICc9PycsXG4gICAgICBjdXJyZW50VGV4dDogJ0AnLFxuICAgICAgY2xlYXJUZXh0OiAnQCcsXG4gICAgICBjbG9zZVRleHQ6ICdAJyxcbiAgICAgIGRhdGVEaXNhYmxlZDogJyYnXG4gICAgfSxcbiAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMsIG5nTW9kZWwpIHtcbiAgICAgIHZhciBkYXRlRm9ybWF0LFxuICAgICAgICAgIGNsb3NlT25EYXRlU2VsZWN0aW9uID0gYW5ndWxhci5pc0RlZmluZWQoYXR0cnMuY2xvc2VPbkRhdGVTZWxlY3Rpb24pID8gc2NvcGUuJHBhcmVudC4kZXZhbChhdHRycy5jbG9zZU9uRGF0ZVNlbGVjdGlvbikgOiBkYXRlcGlja2VyUG9wdXBDb25maWcuY2xvc2VPbkRhdGVTZWxlY3Rpb24sXG4gICAgICAgICAgYXBwZW5kVG9Cb2R5ID0gYW5ndWxhci5pc0RlZmluZWQoYXR0cnMuZGF0ZXBpY2tlckFwcGVuZFRvQm9keSkgPyBzY29wZS4kcGFyZW50LiRldmFsKGF0dHJzLmRhdGVwaWNrZXJBcHBlbmRUb0JvZHkpIDogZGF0ZXBpY2tlclBvcHVwQ29uZmlnLmFwcGVuZFRvQm9keTtcblxuICAgICAgc2NvcGUuc2hvd0J1dHRvbkJhciA9IGFuZ3VsYXIuaXNEZWZpbmVkKGF0dHJzLnNob3dCdXR0b25CYXIpID8gc2NvcGUuJHBhcmVudC4kZXZhbChhdHRycy5zaG93QnV0dG9uQmFyKSA6IGRhdGVwaWNrZXJQb3B1cENvbmZpZy5zaG93QnV0dG9uQmFyO1xuXG4gICAgICBzY29wZS5nZXRUZXh0ID0gZnVuY3Rpb24oIGtleSApIHtcbiAgICAgICAgcmV0dXJuIHNjb3BlW2tleSArICdUZXh0J10gfHwgZGF0ZXBpY2tlclBvcHVwQ29uZmlnW2tleSArICdUZXh0J107XG4gICAgICB9O1xuXG4gICAgICBhdHRycy4kb2JzZXJ2ZSgnZGF0ZXBpY2tlclBvcHVwJywgZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICBkYXRlRm9ybWF0ID0gdmFsdWUgfHwgZGF0ZXBpY2tlclBvcHVwQ29uZmlnLmRhdGVwaWNrZXJQb3B1cDtcbiAgICAgICAgICBuZ01vZGVsLiRyZW5kZXIoKTtcbiAgICAgIH0pO1xuXG4gICAgICAvLyBwb3B1cCBlbGVtZW50IHVzZWQgdG8gZGlzcGxheSBjYWxlbmRhclxuICAgICAgdmFyIHBvcHVwRWwgPSBhbmd1bGFyLmVsZW1lbnQoJzxkaXYgZGF0ZXBpY2tlci1wb3B1cC13cmFwPjxkaXYgZGF0ZXBpY2tlcj48L2Rpdj48L2Rpdj4nKTtcbiAgICAgIHBvcHVwRWwuYXR0cih7XG4gICAgICAgICduZy1tb2RlbCc6ICdkYXRlJyxcbiAgICAgICAgJ25nLWNoYW5nZSc6ICdkYXRlU2VsZWN0aW9uKCknXG4gICAgICB9KTtcblxuICAgICAgZnVuY3Rpb24gY2FtZWx0b0Rhc2goIHN0cmluZyApe1xuICAgICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoLyhbQS1aXSkvZywgZnVuY3Rpb24oJDEpIHsgcmV0dXJuICctJyArICQxLnRvTG93ZXJDYXNlKCk7IH0pO1xuICAgICAgfVxuXG4gICAgICAvLyBkYXRlcGlja2VyIGVsZW1lbnRcbiAgICAgIHZhciBkYXRlcGlja2VyRWwgPSBhbmd1bGFyLmVsZW1lbnQocG9wdXBFbC5jaGlsZHJlbigpWzBdKTtcbiAgICAgIGlmICggYXR0cnMuZGF0ZXBpY2tlck9wdGlvbnMgKSB7XG4gICAgICAgIGFuZ3VsYXIuZm9yRWFjaChzY29wZS4kcGFyZW50LiRldmFsKGF0dHJzLmRhdGVwaWNrZXJPcHRpb25zKSwgZnVuY3Rpb24oIHZhbHVlLCBvcHRpb24gKSB7XG4gICAgICAgICAgZGF0ZXBpY2tlckVsLmF0dHIoIGNhbWVsdG9EYXNoKG9wdGlvbiksIHZhbHVlICk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBzY29wZS53YXRjaERhdGEgPSB7fTtcbiAgICAgIGFuZ3VsYXIuZm9yRWFjaChbJ21pbkRhdGUnLCAnbWF4RGF0ZScsICdkYXRlcGlja2VyTW9kZSddLCBmdW5jdGlvbigga2V5ICkge1xuICAgICAgICBpZiAoIGF0dHJzW2tleV0gKSB7XG4gICAgICAgICAgdmFyIGdldEF0dHJpYnV0ZSA9ICRwYXJzZShhdHRyc1trZXldKTtcbiAgICAgICAgICBzY29wZS4kcGFyZW50LiR3YXRjaChnZXRBdHRyaWJ1dGUsIGZ1bmN0aW9uKHZhbHVlKXtcbiAgICAgICAgICAgIHNjb3BlLndhdGNoRGF0YVtrZXldID0gdmFsdWU7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgZGF0ZXBpY2tlckVsLmF0dHIoY2FtZWx0b0Rhc2goa2V5KSwgJ3dhdGNoRGF0YS4nICsga2V5KTtcblxuICAgICAgICAgIC8vIFByb3BhZ2F0ZSBjaGFuZ2VzIGZyb20gZGF0ZXBpY2tlciB0byBvdXRzaWRlXG4gICAgICAgICAgaWYgKCBrZXkgPT09ICdkYXRlcGlja2VyTW9kZScgKSB7XG4gICAgICAgICAgICB2YXIgc2V0QXR0cmlidXRlID0gZ2V0QXR0cmlidXRlLmFzc2lnbjtcbiAgICAgICAgICAgIHNjb3BlLiR3YXRjaCgnd2F0Y2hEYXRhLicgKyBrZXksIGZ1bmN0aW9uKHZhbHVlLCBvbGR2YWx1ZSkge1xuICAgICAgICAgICAgICBpZiAoIHZhbHVlICE9PSBvbGR2YWx1ZSApIHtcbiAgICAgICAgICAgICAgICBzZXRBdHRyaWJ1dGUoc2NvcGUuJHBhcmVudCwgdmFsdWUpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgaWYgKGF0dHJzLmRhdGVEaXNhYmxlZCkge1xuICAgICAgICBkYXRlcGlja2VyRWwuYXR0cignZGF0ZS1kaXNhYmxlZCcsICdkYXRlRGlzYWJsZWQoeyBkYXRlOiBkYXRlLCBtb2RlOiBtb2RlIH0pJyk7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIHBhcnNlRGF0ZSh2aWV3VmFsdWUpIHtcbiAgICAgICAgaWYgKCF2aWV3VmFsdWUpIHtcbiAgICAgICAgICBuZ01vZGVsLiRzZXRWYWxpZGl0eSgnZGF0ZScsIHRydWUpO1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9IGVsc2UgaWYgKGFuZ3VsYXIuaXNEYXRlKHZpZXdWYWx1ZSkgJiYgIWlzTmFOKHZpZXdWYWx1ZSkpIHtcbiAgICAgICAgICBuZ01vZGVsLiRzZXRWYWxpZGl0eSgnZGF0ZScsIHRydWUpO1xuICAgICAgICAgIHJldHVybiB2aWV3VmFsdWU7XG4gICAgICAgIH0gZWxzZSBpZiAoYW5ndWxhci5pc1N0cmluZyh2aWV3VmFsdWUpKSB7XG4gICAgICAgICAgdmFyIGRhdGUgPSBkYXRlUGFyc2VyLnBhcnNlKHZpZXdWYWx1ZSwgZGF0ZUZvcm1hdCkgfHwgbmV3IERhdGUodmlld1ZhbHVlKTtcbiAgICAgICAgICBpZiAoaXNOYU4oZGF0ZSkpIHtcbiAgICAgICAgICAgIG5nTW9kZWwuJHNldFZhbGlkaXR5KCdkYXRlJywgZmFsc2UpO1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbmdNb2RlbC4kc2V0VmFsaWRpdHkoJ2RhdGUnLCB0cnVlKTtcbiAgICAgICAgICAgIHJldHVybiBkYXRlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuZ01vZGVsLiRzZXRWYWxpZGl0eSgnZGF0ZScsIGZhbHNlKTtcbiAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBuZ01vZGVsLiRwYXJzZXJzLnVuc2hpZnQocGFyc2VEYXRlKTtcblxuICAgICAgLy8gSW5uZXIgY2hhbmdlXG4gICAgICBzY29wZS5kYXRlU2VsZWN0aW9uID0gZnVuY3Rpb24oZHQpIHtcbiAgICAgICAgaWYgKGFuZ3VsYXIuaXNEZWZpbmVkKGR0KSkge1xuICAgICAgICAgIHNjb3BlLmRhdGUgPSBkdDtcbiAgICAgICAgfVxuICAgICAgICBuZ01vZGVsLiRzZXRWaWV3VmFsdWUoc2NvcGUuZGF0ZSk7XG4gICAgICAgIG5nTW9kZWwuJHJlbmRlcigpO1xuXG4gICAgICAgIGlmICggY2xvc2VPbkRhdGVTZWxlY3Rpb24gKSB7XG4gICAgICAgICAgc2NvcGUuaXNPcGVuID0gZmFsc2U7XG4gICAgICAgICAgZWxlbWVudFswXS5mb2N1cygpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBlbGVtZW50LmJpbmQoJ2lucHV0IGNoYW5nZSBrZXl1cCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICBzY29wZS4kYXBwbHkoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgc2NvcGUuZGF0ZSA9IG5nTW9kZWwuJG1vZGVsVmFsdWU7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG5cbiAgICAgIC8vIE91dHRlciBjaGFuZ2VcbiAgICAgIG5nTW9kZWwuJHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgZGF0ZSA9IG5nTW9kZWwuJHZpZXdWYWx1ZSA/IGRhdGVGaWx0ZXIobmdNb2RlbC4kdmlld1ZhbHVlLCBkYXRlRm9ybWF0KSA6ICcnO1xuICAgICAgICBlbGVtZW50LnZhbChkYXRlKTtcbiAgICAgICAgc2NvcGUuZGF0ZSA9IHBhcnNlRGF0ZSggbmdNb2RlbC4kbW9kZWxWYWx1ZSApO1xuICAgICAgfTtcblxuICAgICAgdmFyIGRvY3VtZW50Q2xpY2tCaW5kID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgaWYgKHNjb3BlLmlzT3BlbiAmJiBldmVudC50YXJnZXQgIT09IGVsZW1lbnRbMF0pIHtcbiAgICAgICAgICBzY29wZS4kYXBwbHkoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzY29wZS5pc09wZW4gPSBmYWxzZTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgdmFyIGtleWRvd24gPSBmdW5jdGlvbihldnQsIG5vQXBwbHkpIHtcbiAgICAgICAgc2NvcGUua2V5ZG93bihldnQpO1xuICAgICAgfTtcbiAgICAgIGVsZW1lbnQuYmluZCgna2V5ZG93bicsIGtleWRvd24pO1xuXG4gICAgICBzY29wZS5rZXlkb3duID0gZnVuY3Rpb24oZXZ0KSB7XG4gICAgICAgIGlmIChldnQud2hpY2ggPT09IDI3KSB7XG4gICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgIHNjb3BlLmNsb3NlKCk7XG4gICAgICAgIH0gZWxzZSBpZiAoZXZ0LndoaWNoID09PSA0MCAmJiAhc2NvcGUuaXNPcGVuKSB7XG4gICAgICAgICAgc2NvcGUuaXNPcGVuID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgc2NvcGUuJHdhdGNoKCdpc09wZW4nLCBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICBzY29wZS4kYnJvYWRjYXN0KCdkYXRlcGlja2VyLmZvY3VzJyk7XG4gICAgICAgICAgc2NvcGUucG9zaXRpb24gPSBhcHBlbmRUb0JvZHkgPyAkcG9zaXRpb24ub2Zmc2V0KGVsZW1lbnQpIDogJHBvc2l0aW9uLnBvc2l0aW9uKGVsZW1lbnQpO1xuICAgICAgICAgIHNjb3BlLnBvc2l0aW9uLnRvcCA9IHNjb3BlLnBvc2l0aW9uLnRvcCArIGVsZW1lbnQucHJvcCgnb2Zmc2V0SGVpZ2h0Jyk7XG5cbiAgICAgICAgICAkZG9jdW1lbnQuYmluZCgnY2xpY2snLCBkb2N1bWVudENsaWNrQmluZCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgJGRvY3VtZW50LnVuYmluZCgnY2xpY2snLCBkb2N1bWVudENsaWNrQmluZCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBzY29wZS5zZWxlY3QgPSBmdW5jdGlvbiggZGF0ZSApIHtcbiAgICAgICAgaWYgKGRhdGUgPT09ICd0b2RheScpIHtcbiAgICAgICAgICB2YXIgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgIGlmIChhbmd1bGFyLmlzRGF0ZShuZ01vZGVsLiRtb2RlbFZhbHVlKSkge1xuICAgICAgICAgICAgZGF0ZSA9IG5ldyBEYXRlKG5nTW9kZWwuJG1vZGVsVmFsdWUpO1xuICAgICAgICAgICAgZGF0ZS5zZXRGdWxsWWVhcih0b2RheS5nZXRGdWxsWWVhcigpLCB0b2RheS5nZXRNb250aCgpLCB0b2RheS5nZXREYXRlKCkpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkYXRlID0gbmV3IERhdGUodG9kYXkuc2V0SG91cnMoMCwgMCwgMCwgMCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzY29wZS5kYXRlU2VsZWN0aW9uKCBkYXRlICk7XG4gICAgICB9O1xuXG4gICAgICBzY29wZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBzY29wZS5pc09wZW4gPSBmYWxzZTtcbiAgICAgICAgZWxlbWVudFswXS5mb2N1cygpO1xuICAgICAgfTtcblxuICAgICAgdmFyICRwb3B1cCA9ICRjb21waWxlKHBvcHVwRWwpKHNjb3BlKTtcbiAgICAgIC8vIFByZXZlbnQgalF1ZXJ5IGNhY2hlIG1lbW9yeSBsZWFrICh0ZW1wbGF0ZSBpcyBub3cgcmVkdW5kYW50IGFmdGVyIGxpbmtpbmcpXG4gICAgICBwb3B1cEVsLnJlbW92ZSgpO1xuXG4gICAgICBpZiAoIGFwcGVuZFRvQm9keSApIHtcbiAgICAgICAgJGRvY3VtZW50LmZpbmQoJ2JvZHknKS5hcHBlbmQoJHBvcHVwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW1lbnQuYWZ0ZXIoJHBvcHVwKTtcbiAgICAgIH1cblxuICAgICAgc2NvcGUuJG9uKCckZGVzdHJveScsIGZ1bmN0aW9uKCkge1xuICAgICAgICAkcG9wdXAucmVtb3ZlKCk7XG4gICAgICAgIGVsZW1lbnQudW5iaW5kKCdrZXlkb3duJywga2V5ZG93bik7XG4gICAgICAgICRkb2N1bWVudC51bmJpbmQoJ2NsaWNrJywgZG9jdW1lbnRDbGlja0JpbmQpO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufV0pXG5cbi5kaXJlY3RpdmUoJ2RhdGVwaWNrZXJQb3B1cFdyYXAnLCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDonRUEnLFxuICAgIHJlcGxhY2U6IHRydWUsXG4gICAgdHJhbnNjbHVkZTogdHJ1ZSxcbiAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlL2RhdGVwaWNrZXIvcG9wdXAuaHRtbCcsXG4gICAgbGluazpmdW5jdGlvbiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSB7XG4gICAgICBlbGVtZW50LmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59KTtcblxuYW5ndWxhci5tb2R1bGUoJ3VpLmJvb3RzdHJhcC5kcm9wZG93bicsIFtdKVxuXG4uY29uc3RhbnQoJ2Ryb3Bkb3duQ29uZmlnJywge1xuICBvcGVuQ2xhc3M6ICdvcGVuJ1xufSlcblxuLnNlcnZpY2UoJ2Ryb3Bkb3duU2VydmljZScsIFsnJGRvY3VtZW50JywgZnVuY3Rpb24oJGRvY3VtZW50KSB7XG4gIHZhciBvcGVuU2NvcGUgPSBudWxsO1xuXG4gIHRoaXMub3BlbiA9IGZ1bmN0aW9uKCBkcm9wZG93blNjb3BlICkge1xuICAgIGlmICggIW9wZW5TY29wZSApIHtcbiAgICAgICRkb2N1bWVudC5iaW5kKCdjbGljaycsIGNsb3NlRHJvcGRvd24pO1xuICAgICAgJGRvY3VtZW50LmJpbmQoJ2tleWRvd24nLCBlc2NhcGVLZXlCaW5kKTtcbiAgICB9XG5cbiAgICBpZiAoIG9wZW5TY29wZSAmJiBvcGVuU2NvcGUgIT09IGRyb3Bkb3duU2NvcGUgKSB7XG4gICAgICAgIG9wZW5TY29wZS5pc09wZW4gPSBmYWxzZTtcbiAgICB9XG5cbiAgICBvcGVuU2NvcGUgPSBkcm9wZG93blNjb3BlO1xuICB9O1xuXG4gIHRoaXMuY2xvc2UgPSBmdW5jdGlvbiggZHJvcGRvd25TY29wZSApIHtcbiAgICBpZiAoIG9wZW5TY29wZSA9PT0gZHJvcGRvd25TY29wZSApIHtcbiAgICAgIG9wZW5TY29wZSA9IG51bGw7XG4gICAgICAkZG9jdW1lbnQudW5iaW5kKCdjbGljaycsIGNsb3NlRHJvcGRvd24pO1xuICAgICAgJGRvY3VtZW50LnVuYmluZCgna2V5ZG93bicsIGVzY2FwZUtleUJpbmQpO1xuICAgIH1cbiAgfTtcblxuICB2YXIgY2xvc2VEcm9wZG93biA9IGZ1bmN0aW9uKCBldnQgKSB7XG4gICAgdmFyIHRvZ2dsZUVsZW1lbnQgPSBvcGVuU2NvcGUuZ2V0VG9nZ2xlRWxlbWVudCgpO1xuICAgIGlmICggZXZ0ICYmIHRvZ2dsZUVsZW1lbnQgJiYgdG9nZ2xlRWxlbWVudFswXS5jb250YWlucyhldnQudGFyZ2V0KSApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIG9wZW5TY29wZS4kYXBwbHkoZnVuY3Rpb24oKSB7XG4gICAgICBvcGVuU2NvcGUuaXNPcGVuID0gZmFsc2U7XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGVzY2FwZUtleUJpbmQgPSBmdW5jdGlvbiggZXZ0ICkge1xuICAgIGlmICggZXZ0LndoaWNoID09PSAyNyApIHtcbiAgICAgIG9wZW5TY29wZS5mb2N1c1RvZ2dsZUVsZW1lbnQoKTtcbiAgICAgIGNsb3NlRHJvcGRvd24oKTtcbiAgICB9XG4gIH07XG59XSlcblxuLmNvbnRyb2xsZXIoJ0Ryb3Bkb3duQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRhdHRycycsICckcGFyc2UnLCAnZHJvcGRvd25Db25maWcnLCAnZHJvcGRvd25TZXJ2aWNlJywgJyRhbmltYXRlJywgZnVuY3Rpb24oJHNjb3BlLCAkYXR0cnMsICRwYXJzZSwgZHJvcGRvd25Db25maWcsIGRyb3Bkb3duU2VydmljZSwgJGFuaW1hdGUpIHtcbiAgdmFyIHNlbGYgPSB0aGlzLFxuICAgICAgc2NvcGUgPSAkc2NvcGUuJG5ldygpLCAvLyBjcmVhdGUgYSBjaGlsZCBzY29wZSBzbyB3ZSBhcmUgbm90IHBvbGx1dGluZyBvcmlnaW5hbCBvbmVcbiAgICAgIG9wZW5DbGFzcyA9IGRyb3Bkb3duQ29uZmlnLm9wZW5DbGFzcyxcbiAgICAgIGdldElzT3BlbixcbiAgICAgIHNldElzT3BlbiA9IGFuZ3VsYXIubm9vcCxcbiAgICAgIHRvZ2dsZUludm9rZXIgPSAkYXR0cnMub25Ub2dnbGUgPyAkcGFyc2UoJGF0dHJzLm9uVG9nZ2xlKSA6IGFuZ3VsYXIubm9vcDtcblxuICB0aGlzLmluaXQgPSBmdW5jdGlvbiggZWxlbWVudCApIHtcbiAgICBzZWxmLiRlbGVtZW50ID0gZWxlbWVudDtcblxuICAgIGlmICggJGF0dHJzLmlzT3BlbiApIHtcbiAgICAgIGdldElzT3BlbiA9ICRwYXJzZSgkYXR0cnMuaXNPcGVuKTtcbiAgICAgIHNldElzT3BlbiA9IGdldElzT3Blbi5hc3NpZ247XG5cbiAgICAgICRzY29wZS4kd2F0Y2goZ2V0SXNPcGVuLCBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICBzY29wZS5pc09wZW4gPSAhIXZhbHVlO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIHRoaXMudG9nZ2xlID0gZnVuY3Rpb24oIG9wZW4gKSB7XG4gICAgcmV0dXJuIHNjb3BlLmlzT3BlbiA9IGFyZ3VtZW50cy5sZW5ndGggPyAhIW9wZW4gOiAhc2NvcGUuaXNPcGVuO1xuICB9O1xuXG4gIC8vIEFsbG93IG90aGVyIGRpcmVjdGl2ZXMgdG8gd2F0Y2ggc3RhdHVzXG4gIHRoaXMuaXNPcGVuID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHNjb3BlLmlzT3BlbjtcbiAgfTtcblxuICBzY29wZS5nZXRUb2dnbGVFbGVtZW50ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHNlbGYudG9nZ2xlRWxlbWVudDtcbiAgfTtcblxuICBzY29wZS5mb2N1c1RvZ2dsZUVsZW1lbnQgPSBmdW5jdGlvbigpIHtcbiAgICBpZiAoIHNlbGYudG9nZ2xlRWxlbWVudCApIHtcbiAgICAgIHNlbGYudG9nZ2xlRWxlbWVudFswXS5mb2N1cygpO1xuICAgIH1cbiAgfTtcblxuICBzY29wZS4kd2F0Y2goJ2lzT3BlbicsIGZ1bmN0aW9uKCBpc09wZW4sIHdhc09wZW4gKSB7XG4gICAgJGFuaW1hdGVbaXNPcGVuID8gJ2FkZENsYXNzJyA6ICdyZW1vdmVDbGFzcyddKHNlbGYuJGVsZW1lbnQsIG9wZW5DbGFzcyk7XG5cbiAgICBpZiAoIGlzT3BlbiApIHtcbiAgICAgIHNjb3BlLmZvY3VzVG9nZ2xlRWxlbWVudCgpO1xuICAgICAgZHJvcGRvd25TZXJ2aWNlLm9wZW4oIHNjb3BlICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRyb3Bkb3duU2VydmljZS5jbG9zZSggc2NvcGUgKTtcbiAgICB9XG5cbiAgICBzZXRJc09wZW4oJHNjb3BlLCBpc09wZW4pO1xuICAgIGlmIChhbmd1bGFyLmlzRGVmaW5lZChpc09wZW4pICYmIGlzT3BlbiAhPT0gd2FzT3Blbikge1xuICAgICAgdG9nZ2xlSW52b2tlcigkc2NvcGUsIHsgb3BlbjogISFpc09wZW4gfSk7XG4gICAgfVxuICB9KTtcblxuICAkc2NvcGUuJG9uKCckbG9jYXRpb25DaGFuZ2VTdWNjZXNzJywgZnVuY3Rpb24oKSB7XG4gICAgc2NvcGUuaXNPcGVuID0gZmFsc2U7XG4gIH0pO1xuXG4gICRzY29wZS4kb24oJyRkZXN0cm95JywgZnVuY3Rpb24oKSB7XG4gICAgc2NvcGUuJGRlc3Ryb3koKTtcbiAgfSk7XG59XSlcblxuLmRpcmVjdGl2ZSgnZHJvcGRvd24nLCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogJ0NBJyxcbiAgICBjb250cm9sbGVyOiAnRHJvcGRvd25Db250cm9sbGVyJyxcbiAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMsIGRyb3Bkb3duQ3RybCkge1xuICAgICAgZHJvcGRvd25DdHJsLmluaXQoIGVsZW1lbnQgKTtcbiAgICB9XG4gIH07XG59KVxuXG4uZGlyZWN0aXZlKCdkcm9wZG93blRvZ2dsZScsIGZ1bmN0aW9uKCkge1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiAnQ0EnLFxuICAgIHJlcXVpcmU6ICc/XmRyb3Bkb3duJyxcbiAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMsIGRyb3Bkb3duQ3RybCkge1xuICAgICAgaWYgKCAhZHJvcGRvd25DdHJsICkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGRyb3Bkb3duQ3RybC50b2dnbGVFbGVtZW50ID0gZWxlbWVudDtcblxuICAgICAgdmFyIHRvZ2dsZURyb3Bkb3duID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICBpZiAoICFlbGVtZW50Lmhhc0NsYXNzKCdkaXNhYmxlZCcpICYmICFhdHRycy5kaXNhYmxlZCApIHtcbiAgICAgICAgICBzY29wZS4kYXBwbHkoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBkcm9wZG93bkN0cmwudG9nZ2xlKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIGVsZW1lbnQuYmluZCgnY2xpY2snLCB0b2dnbGVEcm9wZG93bik7XG5cbiAgICAgIC8vIFdBSS1BUklBXG4gICAgICBlbGVtZW50LmF0dHIoeyAnYXJpYS1oYXNwb3B1cCc6IHRydWUsICdhcmlhLWV4cGFuZGVkJzogZmFsc2UgfSk7XG4gICAgICBzY29wZS4kd2F0Y2goZHJvcGRvd25DdHJsLmlzT3BlbiwgZnVuY3Rpb24oIGlzT3BlbiApIHtcbiAgICAgICAgZWxlbWVudC5hdHRyKCdhcmlhLWV4cGFuZGVkJywgISFpc09wZW4pO1xuICAgICAgfSk7XG5cbiAgICAgIHNjb3BlLiRvbignJGRlc3Ryb3knLCBmdW5jdGlvbigpIHtcbiAgICAgICAgZWxlbWVudC51bmJpbmQoJ2NsaWNrJywgdG9nZ2xlRHJvcGRvd24pO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xufSk7XG5cbmFuZ3VsYXIubW9kdWxlKCd1aS5ib290c3RyYXAubW9kYWwnLCBbJ3VpLmJvb3RzdHJhcC50cmFuc2l0aW9uJ10pXG5cbi8qKlxuICogQSBoZWxwZXIsIGludGVybmFsIGRhdGEgc3RydWN0dXJlIHRoYXQgYWN0cyBhcyBhIG1hcCBidXQgYWxzbyBhbGxvd3MgZ2V0dGluZyAvIHJlbW92aW5nXG4gKiBlbGVtZW50cyBpbiB0aGUgTElGTyBvcmRlclxuICovXG4gIC5mYWN0b3J5KCckJHN0YWNrZWRNYXAnLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNyZWF0ZU5ldzogZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc3RhY2sgPSBbXTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGFkZDogZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgICAgICAgIHN0YWNrLnB1c2goe1xuICAgICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGdldDogZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdGFjay5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICBpZiAoa2V5ID09IHN0YWNrW2ldLmtleSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzdGFja1tpXTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAga2V5czogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIga2V5cyA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdGFjay5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICBrZXlzLnB1c2goc3RhY2tbaV0ua2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBrZXlzO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgdG9wOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RhY2tbc3RhY2subGVuZ3RoIC0gMV07XG4gICAgICAgICAgfSxcbiAgICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIHZhciBpZHggPSAtMTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RhY2subGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgaWYgKGtleSA9PSBzdGFja1tpXS5rZXkpIHtcbiAgICAgICAgICAgICAgICBpZHggPSBpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc3RhY2suc3BsaWNlKGlkeCwgMSlbMF07XG4gICAgICAgICAgfSxcbiAgICAgICAgICByZW1vdmVUb3A6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBzdGFjay5zcGxpY2Uoc3RhY2subGVuZ3RoIC0gMSwgMSlbMF07XG4gICAgICAgICAgfSxcbiAgICAgICAgICBsZW5ndGg6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBzdGFjay5sZW5ndGg7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH07XG4gIH0pXG5cbi8qKlxuICogQSBoZWxwZXIgZGlyZWN0aXZlIGZvciB0aGUgJG1vZGFsIHNlcnZpY2UuIEl0IGNyZWF0ZXMgYSBiYWNrZHJvcCBlbGVtZW50LlxuICovXG4gIC5kaXJlY3RpdmUoJ21vZGFsQmFja2Ryb3AnLCBbJyR0aW1lb3V0JywgZnVuY3Rpb24gKCR0aW1lb3V0KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3RyaWN0OiAnRUEnLFxuICAgICAgcmVwbGFjZTogdHJ1ZSxcbiAgICAgIHRlbXBsYXRlVXJsOiAndGVtcGxhdGUvbW9kYWwvYmFja2Ryb3AuaHRtbCcsXG4gICAgICBsaW5rOiBmdW5jdGlvbiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSB7XG4gICAgICAgIHNjb3BlLmJhY2tkcm9wQ2xhc3MgPSBhdHRycy5iYWNrZHJvcENsYXNzIHx8ICcnO1xuXG4gICAgICAgIHNjb3BlLmFuaW1hdGUgPSBmYWxzZTtcblxuICAgICAgICAvL3RyaWdnZXIgQ1NTIHRyYW5zaXRpb25zXG4gICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBzY29wZS5hbmltYXRlID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcbiAgfV0pXG5cbiAgLmRpcmVjdGl2ZSgnbW9kYWxXaW5kb3cnLCBbJyRtb2RhbFN0YWNrJywgJyR0aW1lb3V0JywgZnVuY3Rpb24gKCRtb2RhbFN0YWNrLCAkdGltZW91dCkge1xuICAgIHJldHVybiB7XG4gICAgICByZXN0cmljdDogJ0VBJyxcbiAgICAgIHNjb3BlOiB7XG4gICAgICAgIGluZGV4OiAnQCcsXG4gICAgICAgIGFuaW1hdGU6ICc9J1xuICAgICAgfSxcbiAgICAgIHJlcGxhY2U6IHRydWUsXG4gICAgICB0cmFuc2NsdWRlOiB0cnVlLFxuICAgICAgdGVtcGxhdGVVcmw6IGZ1bmN0aW9uKHRFbGVtZW50LCB0QXR0cnMpIHtcbiAgICAgICAgcmV0dXJuIHRBdHRycy50ZW1wbGF0ZVVybCB8fCAndGVtcGxhdGUvbW9kYWwvd2luZG93Lmh0bWwnO1xuICAgICAgfSxcbiAgICAgIGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWxlbWVudCwgYXR0cnMpIHtcbiAgICAgICAgZWxlbWVudC5hZGRDbGFzcyhhdHRycy53aW5kb3dDbGFzcyB8fCAnJyk7XG4gICAgICAgIHNjb3BlLnNpemUgPSBhdHRycy5zaXplO1xuXG4gICAgICAgICR0aW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAvLyB0cmlnZ2VyIENTUyB0cmFuc2l0aW9uc1xuICAgICAgICAgIHNjb3BlLmFuaW1hdGUgPSB0cnVlO1xuXG4gICAgICAgICAgLyoqXG4gICAgICAgICAgICogQXV0by1mb2N1c2luZyBvZiBhIGZyZXNobHktb3BlbmVkIG1vZGFsIGVsZW1lbnQgY2F1c2VzIGFueSBjaGlsZCBlbGVtZW50c1xuICAgICAgICAgICAqIHdpdGggdGhlIGF1dG9mb2N1cyBhdHRyaWJ1dGUgdG8gbG9vc2UgZm9jdXMuIFRoaXMgaXMgYW4gaXNzdWUgb24gdG91Y2hcbiAgICAgICAgICAgKiBiYXNlZCBkZXZpY2VzIHdoaWNoIHdpbGwgc2hvdyBhbmQgdGhlbiBoaWRlIHRoZSBvbnNjcmVlbiBrZXlib2FyZC5cbiAgICAgICAgICAgKiBBdHRlbXB0cyB0byByZWZvY3VzIHRoZSBhdXRvZm9jdXMgZWxlbWVudCB2aWEgSmF2YVNjcmlwdCB3aWxsIG5vdCByZW9wZW5cbiAgICAgICAgICAgKiB0aGUgb25zY3JlZW4ga2V5Ym9hcmQuIEZpeGVkIGJ5IHVwZGF0ZWQgdGhlIGZvY3VzaW5nIGxvZ2ljIHRvIG9ubHkgYXV0b2ZvY3VzXG4gICAgICAgICAgICogdGhlIG1vZGFsIGVsZW1lbnQgaWYgdGhlIG1vZGFsIGRvZXMgbm90IGNvbnRhaW4gYW4gYXV0b2ZvY3VzIGVsZW1lbnQuXG4gICAgICAgICAgICovXG4gICAgICAgICAgaWYgKCFlbGVtZW50WzBdLnF1ZXJ5U2VsZWN0b3JBbGwoJ1thdXRvZm9jdXNdJykubGVuZ3RoKSB7XG4gICAgICAgICAgICBlbGVtZW50WzBdLmZvY3VzKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBzY29wZS5jbG9zZSA9IGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgICB2YXIgbW9kYWwgPSAkbW9kYWxTdGFjay5nZXRUb3AoKTtcbiAgICAgICAgICBpZiAobW9kYWwgJiYgbW9kYWwudmFsdWUuYmFja2Ryb3AgJiYgbW9kYWwudmFsdWUuYmFja2Ryb3AgIT0gJ3N0YXRpYycgJiYgKGV2dC50YXJnZXQgPT09IGV2dC5jdXJyZW50VGFyZ2V0KSkge1xuICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBldnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAkbW9kYWxTdGFjay5kaXNtaXNzKG1vZGFsLmtleSwgJ2JhY2tkcm9wIGNsaWNrJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH07XG4gIH1dKVxuXG4gIC5kaXJlY3RpdmUoJ21vZGFsVHJhbnNjbHVkZScsIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbGluazogZnVuY3Rpb24oJHNjb3BlLCAkZWxlbWVudCwgJGF0dHJzLCBjb250cm9sbGVyLCAkdHJhbnNjbHVkZSkge1xuICAgICAgICAkdHJhbnNjbHVkZSgkc2NvcGUuJHBhcmVudCwgZnVuY3Rpb24oY2xvbmUpIHtcbiAgICAgICAgICAkZWxlbWVudC5lbXB0eSgpO1xuICAgICAgICAgICRlbGVtZW50LmFwcGVuZChjbG9uZSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH07XG4gIH0pXG5cbiAgLmZhY3RvcnkoJyRtb2RhbFN0YWNrJywgWyckdHJhbnNpdGlvbicsICckdGltZW91dCcsICckZG9jdW1lbnQnLCAnJGNvbXBpbGUnLCAnJHJvb3RTY29wZScsICckJHN0YWNrZWRNYXAnLFxuICAgIGZ1bmN0aW9uICgkdHJhbnNpdGlvbiwgJHRpbWVvdXQsICRkb2N1bWVudCwgJGNvbXBpbGUsICRyb290U2NvcGUsICQkc3RhY2tlZE1hcCkge1xuXG4gICAgICB2YXIgT1BFTkVEX01PREFMX0NMQVNTID0gJ21vZGFsLW9wZW4nO1xuXG4gICAgICB2YXIgYmFja2Ryb3BEb21FbCwgYmFja2Ryb3BTY29wZTtcbiAgICAgIHZhciBvcGVuZWRXaW5kb3dzID0gJCRzdGFja2VkTWFwLmNyZWF0ZU5ldygpO1xuICAgICAgdmFyICRtb2RhbFN0YWNrID0ge307XG5cbiAgICAgIGZ1bmN0aW9uIGJhY2tkcm9wSW5kZXgoKSB7XG4gICAgICAgIHZhciB0b3BCYWNrZHJvcEluZGV4ID0gLTE7XG4gICAgICAgIHZhciBvcGVuZWQgPSBvcGVuZWRXaW5kb3dzLmtleXMoKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvcGVuZWQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBpZiAob3BlbmVkV2luZG93cy5nZXQob3BlbmVkW2ldKS52YWx1ZS5iYWNrZHJvcCkge1xuICAgICAgICAgICAgdG9wQmFja2Ryb3BJbmRleCA9IGk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0b3BCYWNrZHJvcEluZGV4O1xuICAgICAgfVxuXG4gICAgICAkcm9vdFNjb3BlLiR3YXRjaChiYWNrZHJvcEluZGV4LCBmdW5jdGlvbihuZXdCYWNrZHJvcEluZGV4KXtcbiAgICAgICAgaWYgKGJhY2tkcm9wU2NvcGUpIHtcbiAgICAgICAgICBiYWNrZHJvcFNjb3BlLmluZGV4ID0gbmV3QmFja2Ryb3BJbmRleDtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGZ1bmN0aW9uIHJlbW92ZU1vZGFsV2luZG93KG1vZGFsSW5zdGFuY2UpIHtcblxuICAgICAgICB2YXIgYm9keSA9ICRkb2N1bWVudC5maW5kKCdib2R5JykuZXEoMCk7XG4gICAgICAgIHZhciBtb2RhbFdpbmRvdyA9IG9wZW5lZFdpbmRvd3MuZ2V0KG1vZGFsSW5zdGFuY2UpLnZhbHVlO1xuXG4gICAgICAgIC8vY2xlYW4gdXAgdGhlIHN0YWNrXG4gICAgICAgIG9wZW5lZFdpbmRvd3MucmVtb3ZlKG1vZGFsSW5zdGFuY2UpO1xuXG4gICAgICAgIC8vcmVtb3ZlIHdpbmRvdyBET00gZWxlbWVudFxuICAgICAgICByZW1vdmVBZnRlckFuaW1hdGUobW9kYWxXaW5kb3cubW9kYWxEb21FbCwgbW9kYWxXaW5kb3cubW9kYWxTY29wZSwgMzAwLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBtb2RhbFdpbmRvdy5tb2RhbFNjb3BlLiRkZXN0cm95KCk7XG4gICAgICAgICAgYm9keS50b2dnbGVDbGFzcyhPUEVORURfTU9EQUxfQ0xBU1MsIG9wZW5lZFdpbmRvd3MubGVuZ3RoKCkgPiAwKTtcbiAgICAgICAgICBjaGVja1JlbW92ZUJhY2tkcm9wKCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBjaGVja1JlbW92ZUJhY2tkcm9wKCkge1xuICAgICAgICAgIC8vcmVtb3ZlIGJhY2tkcm9wIGlmIG5vIGxvbmdlciBuZWVkZWRcbiAgICAgICAgICBpZiAoYmFja2Ryb3BEb21FbCAmJiBiYWNrZHJvcEluZGV4KCkgPT0gLTEpIHtcbiAgICAgICAgICAgIHZhciBiYWNrZHJvcFNjb3BlUmVmID0gYmFja2Ryb3BTY29wZTtcbiAgICAgICAgICAgIHJlbW92ZUFmdGVyQW5pbWF0ZShiYWNrZHJvcERvbUVsLCBiYWNrZHJvcFNjb3BlLCAxNTAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgYmFja2Ryb3BTY29wZVJlZi4kZGVzdHJveSgpO1xuICAgICAgICAgICAgICBiYWNrZHJvcFNjb3BlUmVmID0gbnVsbDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYmFja2Ryb3BEb21FbCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIGJhY2tkcm9wU2NvcGUgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiByZW1vdmVBZnRlckFuaW1hdGUoZG9tRWwsIHNjb3BlLCBlbXVsYXRlVGltZSwgZG9uZSkge1xuICAgICAgICAvLyBDbG9zaW5nIGFuaW1hdGlvblxuICAgICAgICBzY29wZS5hbmltYXRlID0gZmFsc2U7XG5cbiAgICAgICAgdmFyIHRyYW5zaXRpb25FbmRFdmVudE5hbWUgPSAkdHJhbnNpdGlvbi50cmFuc2l0aW9uRW5kRXZlbnROYW1lO1xuICAgICAgICBpZiAodHJhbnNpdGlvbkVuZEV2ZW50TmFtZSkge1xuICAgICAgICAgIC8vIHRyYW5zaXRpb24gb3V0XG4gICAgICAgICAgdmFyIHRpbWVvdXQgPSAkdGltZW91dChhZnRlckFuaW1hdGluZywgZW11bGF0ZVRpbWUpO1xuXG4gICAgICAgICAgZG9tRWwuYmluZCh0cmFuc2l0aW9uRW5kRXZlbnROYW1lLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAkdGltZW91dC5jYW5jZWwodGltZW91dCk7XG4gICAgICAgICAgICBhZnRlckFuaW1hdGluZygpO1xuICAgICAgICAgICAgc2NvcGUuJGFwcGx5KCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gRW5zdXJlIHRoaXMgY2FsbCBpcyBhc3luY1xuICAgICAgICAgICR0aW1lb3V0KGFmdGVyQW5pbWF0aW5nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGFmdGVyQW5pbWF0aW5nKCkge1xuICAgICAgICAgIGlmIChhZnRlckFuaW1hdGluZy5kb25lKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIGFmdGVyQW5pbWF0aW5nLmRvbmUgPSB0cnVlO1xuXG4gICAgICAgICAgZG9tRWwucmVtb3ZlKCk7XG4gICAgICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJGRvY3VtZW50LmJpbmQoJ2tleWRvd24nLCBmdW5jdGlvbiAoZXZ0KSB7XG4gICAgICAgIHZhciBtb2RhbDtcblxuICAgICAgICBpZiAoZXZ0LndoaWNoID09PSAyNykge1xuICAgICAgICAgIG1vZGFsID0gb3BlbmVkV2luZG93cy50b3AoKTtcbiAgICAgICAgICBpZiAobW9kYWwgJiYgbW9kYWwudmFsdWUua2V5Ym9hcmQpIHtcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgJHJvb3RTY29wZS4kYXBwbHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAkbW9kYWxTdGFjay5kaXNtaXNzKG1vZGFsLmtleSwgJ2VzY2FwZSBrZXkgcHJlc3MnKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgICRtb2RhbFN0YWNrLm9wZW4gPSBmdW5jdGlvbiAobW9kYWxJbnN0YW5jZSwgbW9kYWwpIHtcblxuICAgICAgICBvcGVuZWRXaW5kb3dzLmFkZChtb2RhbEluc3RhbmNlLCB7XG4gICAgICAgICAgZGVmZXJyZWQ6IG1vZGFsLmRlZmVycmVkLFxuICAgICAgICAgIG1vZGFsU2NvcGU6IG1vZGFsLnNjb3BlLFxuICAgICAgICAgIGJhY2tkcm9wOiBtb2RhbC5iYWNrZHJvcCxcbiAgICAgICAgICBrZXlib2FyZDogbW9kYWwua2V5Ym9hcmRcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIGJvZHkgPSAkZG9jdW1lbnQuZmluZCgnYm9keScpLmVxKDApLFxuICAgICAgICAgICAgY3VyckJhY2tkcm9wSW5kZXggPSBiYWNrZHJvcEluZGV4KCk7XG5cbiAgICAgICAgaWYgKGN1cnJCYWNrZHJvcEluZGV4ID49IDAgJiYgIWJhY2tkcm9wRG9tRWwpIHtcbiAgICAgICAgICBiYWNrZHJvcFNjb3BlID0gJHJvb3RTY29wZS4kbmV3KHRydWUpO1xuICAgICAgICAgIGJhY2tkcm9wU2NvcGUuaW5kZXggPSBjdXJyQmFja2Ryb3BJbmRleDtcbiAgICAgICAgICB2YXIgYW5ndWxhckJhY2tncm91bmREb21FbCA9IGFuZ3VsYXIuZWxlbWVudCgnPGRpdiBtb2RhbC1iYWNrZHJvcD48L2Rpdj4nKTtcbiAgICAgICAgICBhbmd1bGFyQmFja2dyb3VuZERvbUVsLmF0dHIoJ2JhY2tkcm9wLWNsYXNzJywgbW9kYWwuYmFja2Ryb3BDbGFzcyk7XG4gICAgICAgICAgYmFja2Ryb3BEb21FbCA9ICRjb21waWxlKGFuZ3VsYXJCYWNrZ3JvdW5kRG9tRWwpKGJhY2tkcm9wU2NvcGUpO1xuICAgICAgICAgIGJvZHkuYXBwZW5kKGJhY2tkcm9wRG9tRWwpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGFuZ3VsYXJEb21FbCA9IGFuZ3VsYXIuZWxlbWVudCgnPGRpdiBtb2RhbC13aW5kb3c+PC9kaXY+Jyk7XG4gICAgICAgIGFuZ3VsYXJEb21FbC5hdHRyKHtcbiAgICAgICAgICAndGVtcGxhdGUtdXJsJzogbW9kYWwud2luZG93VGVtcGxhdGVVcmwsXG4gICAgICAgICAgJ3dpbmRvdy1jbGFzcyc6IG1vZGFsLndpbmRvd0NsYXNzLFxuICAgICAgICAgICdzaXplJzogbW9kYWwuc2l6ZSxcbiAgICAgICAgICAnaW5kZXgnOiBvcGVuZWRXaW5kb3dzLmxlbmd0aCgpIC0gMSxcbiAgICAgICAgICAnYW5pbWF0ZSc6ICdhbmltYXRlJ1xuICAgICAgICB9KS5odG1sKG1vZGFsLmNvbnRlbnQpO1xuXG4gICAgICAgIHZhciBtb2RhbERvbUVsID0gJGNvbXBpbGUoYW5ndWxhckRvbUVsKShtb2RhbC5zY29wZSk7XG4gICAgICAgIG9wZW5lZFdpbmRvd3MudG9wKCkudmFsdWUubW9kYWxEb21FbCA9IG1vZGFsRG9tRWw7XG4gICAgICAgIGJvZHkuYXBwZW5kKG1vZGFsRG9tRWwpO1xuICAgICAgICBib2R5LmFkZENsYXNzKE9QRU5FRF9NT0RBTF9DTEFTUyk7XG4gICAgICB9O1xuXG4gICAgICAkbW9kYWxTdGFjay5jbG9zZSA9IGZ1bmN0aW9uIChtb2RhbEluc3RhbmNlLCByZXN1bHQpIHtcbiAgICAgICAgdmFyIG1vZGFsV2luZG93ID0gb3BlbmVkV2luZG93cy5nZXQobW9kYWxJbnN0YW5jZSk7XG4gICAgICAgIGlmIChtb2RhbFdpbmRvdykge1xuICAgICAgICAgIG1vZGFsV2luZG93LnZhbHVlLmRlZmVycmVkLnJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgICByZW1vdmVNb2RhbFdpbmRvdyhtb2RhbEluc3RhbmNlKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgJG1vZGFsU3RhY2suZGlzbWlzcyA9IGZ1bmN0aW9uIChtb2RhbEluc3RhbmNlLCByZWFzb24pIHtcbiAgICAgICAgdmFyIG1vZGFsV2luZG93ID0gb3BlbmVkV2luZG93cy5nZXQobW9kYWxJbnN0YW5jZSk7XG4gICAgICAgIGlmIChtb2RhbFdpbmRvdykge1xuICAgICAgICAgIG1vZGFsV2luZG93LnZhbHVlLmRlZmVycmVkLnJlamVjdChyZWFzb24pO1xuICAgICAgICAgIHJlbW92ZU1vZGFsV2luZG93KG1vZGFsSW5zdGFuY2UpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICAkbW9kYWxTdGFjay5kaXNtaXNzQWxsID0gZnVuY3Rpb24gKHJlYXNvbikge1xuICAgICAgICB2YXIgdG9wTW9kYWwgPSB0aGlzLmdldFRvcCgpO1xuICAgICAgICB3aGlsZSAodG9wTW9kYWwpIHtcbiAgICAgICAgICB0aGlzLmRpc21pc3ModG9wTW9kYWwua2V5LCByZWFzb24pO1xuICAgICAgICAgIHRvcE1vZGFsID0gdGhpcy5nZXRUb3AoKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgJG1vZGFsU3RhY2suZ2V0VG9wID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gb3BlbmVkV2luZG93cy50b3AoKTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiAkbW9kYWxTdGFjaztcbiAgICB9XSlcblxuICAucHJvdmlkZXIoJyRtb2RhbCcsIGZ1bmN0aW9uICgpIHtcblxuICAgIHZhciAkbW9kYWxQcm92aWRlciA9IHtcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgYmFja2Ryb3A6IHRydWUsIC8vY2FuIGJlIGFsc28gZmFsc2Ugb3IgJ3N0YXRpYydcbiAgICAgICAga2V5Ym9hcmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAkZ2V0OiBbJyRpbmplY3RvcicsICckcm9vdFNjb3BlJywgJyRxJywgJyRodHRwJywgJyR0ZW1wbGF0ZUNhY2hlJywgJyRjb250cm9sbGVyJywgJyRtb2RhbFN0YWNrJyxcbiAgICAgICAgZnVuY3Rpb24gKCRpbmplY3RvciwgJHJvb3RTY29wZSwgJHEsICRodHRwLCAkdGVtcGxhdGVDYWNoZSwgJGNvbnRyb2xsZXIsICRtb2RhbFN0YWNrKSB7XG5cbiAgICAgICAgICB2YXIgJG1vZGFsID0ge307XG5cbiAgICAgICAgICBmdW5jdGlvbiBnZXRUZW1wbGF0ZVByb21pc2Uob3B0aW9ucykge1xuICAgICAgICAgICAgcmV0dXJuIG9wdGlvbnMudGVtcGxhdGUgPyAkcS53aGVuKG9wdGlvbnMudGVtcGxhdGUpIDpcbiAgICAgICAgICAgICAgJGh0dHAuZ2V0KGFuZ3VsYXIuaXNGdW5jdGlvbihvcHRpb25zLnRlbXBsYXRlVXJsKSA/IChvcHRpb25zLnRlbXBsYXRlVXJsKSgpIDogb3B0aW9ucy50ZW1wbGF0ZVVybCxcbiAgICAgICAgICAgICAgICB7Y2FjaGU6ICR0ZW1wbGF0ZUNhY2hlfSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0LmRhdGE7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGZ1bmN0aW9uIGdldFJlc29sdmVQcm9taXNlcyhyZXNvbHZlcykge1xuICAgICAgICAgICAgdmFyIHByb21pc2VzQXJyID0gW107XG4gICAgICAgICAgICBhbmd1bGFyLmZvckVhY2gocmVzb2x2ZXMsIGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICBpZiAoYW5ndWxhci5pc0Z1bmN0aW9uKHZhbHVlKSB8fCBhbmd1bGFyLmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgcHJvbWlzZXNBcnIucHVzaCgkcS53aGVuKCRpbmplY3Rvci5pbnZva2UodmFsdWUpKSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHByb21pc2VzQXJyO1xuICAgICAgICAgIH1cblxuICAgICAgICAgICRtb2RhbC5vcGVuID0gZnVuY3Rpb24gKG1vZGFsT3B0aW9ucykge1xuXG4gICAgICAgICAgICB2YXIgbW9kYWxSZXN1bHREZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgICAgICAgICB2YXIgbW9kYWxPcGVuZWREZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG5cbiAgICAgICAgICAgIC8vcHJlcGFyZSBhbiBpbnN0YW5jZSBvZiBhIG1vZGFsIHRvIGJlIGluamVjdGVkIGludG8gY29udHJvbGxlcnMgYW5kIHJldHVybmVkIHRvIGEgY2FsbGVyXG4gICAgICAgICAgICB2YXIgbW9kYWxJbnN0YW5jZSA9IHtcbiAgICAgICAgICAgICAgcmVzdWx0OiBtb2RhbFJlc3VsdERlZmVycmVkLnByb21pc2UsXG4gICAgICAgICAgICAgIG9wZW5lZDogbW9kYWxPcGVuZWREZWZlcnJlZC5wcm9taXNlLFxuICAgICAgICAgICAgICBjbG9zZTogZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgICRtb2RhbFN0YWNrLmNsb3NlKG1vZGFsSW5zdGFuY2UsIHJlc3VsdCk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGRpc21pc3M6IGZ1bmN0aW9uIChyZWFzb24pIHtcbiAgICAgICAgICAgICAgICAkbW9kYWxTdGFjay5kaXNtaXNzKG1vZGFsSW5zdGFuY2UsIHJlYXNvbik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vbWVyZ2UgYW5kIGNsZWFuIHVwIG9wdGlvbnNcbiAgICAgICAgICAgIG1vZGFsT3B0aW9ucyA9IGFuZ3VsYXIuZXh0ZW5kKHt9LCAkbW9kYWxQcm92aWRlci5vcHRpb25zLCBtb2RhbE9wdGlvbnMpO1xuICAgICAgICAgICAgbW9kYWxPcHRpb25zLnJlc29sdmUgPSBtb2RhbE9wdGlvbnMucmVzb2x2ZSB8fCB7fTtcblxuICAgICAgICAgICAgLy92ZXJpZnkgb3B0aW9uc1xuICAgICAgICAgICAgaWYgKCFtb2RhbE9wdGlvbnMudGVtcGxhdGUgJiYgIW1vZGFsT3B0aW9ucy50ZW1wbGF0ZVVybCkge1xuICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ09uZSBvZiB0ZW1wbGF0ZSBvciB0ZW1wbGF0ZVVybCBvcHRpb25zIGlzIHJlcXVpcmVkLicpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgdGVtcGxhdGVBbmRSZXNvbHZlUHJvbWlzZSA9XG4gICAgICAgICAgICAgICRxLmFsbChbZ2V0VGVtcGxhdGVQcm9taXNlKG1vZGFsT3B0aW9ucyldLmNvbmNhdChnZXRSZXNvbHZlUHJvbWlzZXMobW9kYWxPcHRpb25zLnJlc29sdmUpKSk7XG5cblxuICAgICAgICAgICAgdGVtcGxhdGVBbmRSZXNvbHZlUHJvbWlzZS50aGVuKGZ1bmN0aW9uIHJlc29sdmVTdWNjZXNzKHRwbEFuZFZhcnMpIHtcblxuICAgICAgICAgICAgICB2YXIgbW9kYWxTY29wZSA9IChtb2RhbE9wdGlvbnMuc2NvcGUgfHwgJHJvb3RTY29wZSkuJG5ldygpO1xuICAgICAgICAgICAgICBtb2RhbFNjb3BlLiRjbG9zZSA9IG1vZGFsSW5zdGFuY2UuY2xvc2U7XG4gICAgICAgICAgICAgIG1vZGFsU2NvcGUuJGRpc21pc3MgPSBtb2RhbEluc3RhbmNlLmRpc21pc3M7XG5cbiAgICAgICAgICAgICAgdmFyIGN0cmxJbnN0YW5jZSwgY3RybExvY2FscyA9IHt9O1xuICAgICAgICAgICAgICB2YXIgcmVzb2x2ZUl0ZXIgPSAxO1xuXG4gICAgICAgICAgICAgIC8vY29udHJvbGxlcnNcbiAgICAgICAgICAgICAgaWYgKG1vZGFsT3B0aW9ucy5jb250cm9sbGVyKSB7XG4gICAgICAgICAgICAgICAgY3RybExvY2Fscy4kc2NvcGUgPSBtb2RhbFNjb3BlO1xuICAgICAgICAgICAgICAgIGN0cmxMb2NhbHMuJG1vZGFsSW5zdGFuY2UgPSBtb2RhbEluc3RhbmNlO1xuICAgICAgICAgICAgICAgIGFuZ3VsYXIuZm9yRWFjaChtb2RhbE9wdGlvbnMucmVzb2x2ZSwgZnVuY3Rpb24gKHZhbHVlLCBrZXkpIHtcbiAgICAgICAgICAgICAgICAgIGN0cmxMb2NhbHNba2V5XSA9IHRwbEFuZFZhcnNbcmVzb2x2ZUl0ZXIrK107XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBjdHJsSW5zdGFuY2UgPSAkY29udHJvbGxlcihtb2RhbE9wdGlvbnMuY29udHJvbGxlciwgY3RybExvY2Fscyk7XG4gICAgICAgICAgICAgICAgaWYgKG1vZGFsT3B0aW9ucy5jb250cm9sbGVyQXMpIHtcbiAgICAgICAgICAgICAgICAgIG1vZGFsU2NvcGVbbW9kYWxPcHRpb25zLmNvbnRyb2xsZXJBc10gPSBjdHJsSW5zdGFuY2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgJG1vZGFsU3RhY2sub3Blbihtb2RhbEluc3RhbmNlLCB7XG4gICAgICAgICAgICAgICAgc2NvcGU6IG1vZGFsU2NvcGUsXG4gICAgICAgICAgICAgICAgZGVmZXJyZWQ6IG1vZGFsUmVzdWx0RGVmZXJyZWQsXG4gICAgICAgICAgICAgICAgY29udGVudDogdHBsQW5kVmFyc1swXSxcbiAgICAgICAgICAgICAgICBiYWNrZHJvcDogbW9kYWxPcHRpb25zLmJhY2tkcm9wLFxuICAgICAgICAgICAgICAgIGtleWJvYXJkOiBtb2RhbE9wdGlvbnMua2V5Ym9hcmQsXG4gICAgICAgICAgICAgICAgYmFja2Ryb3BDbGFzczogbW9kYWxPcHRpb25zLmJhY2tkcm9wQ2xhc3MsXG4gICAgICAgICAgICAgICAgd2luZG93Q2xhc3M6IG1vZGFsT3B0aW9ucy53aW5kb3dDbGFzcyxcbiAgICAgICAgICAgICAgICB3aW5kb3dUZW1wbGF0ZVVybDogbW9kYWxPcHRpb25zLndpbmRvd1RlbXBsYXRlVXJsLFxuICAgICAgICAgICAgICAgIHNpemU6IG1vZGFsT3B0aW9ucy5zaXplXG4gICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB9LCBmdW5jdGlvbiByZXNvbHZlRXJyb3IocmVhc29uKSB7XG4gICAgICAgICAgICAgIG1vZGFsUmVzdWx0RGVmZXJyZWQucmVqZWN0KHJlYXNvbik7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgdGVtcGxhdGVBbmRSZXNvbHZlUHJvbWlzZS50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgbW9kYWxPcGVuZWREZWZlcnJlZC5yZXNvbHZlKHRydWUpO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICBtb2RhbE9wZW5lZERlZmVycmVkLnJlamVjdChmYWxzZSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIG1vZGFsSW5zdGFuY2U7XG4gICAgICAgICAgfTtcblxuICAgICAgICAgIHJldHVybiAkbW9kYWw7XG4gICAgICAgIH1dXG4gICAgfTtcblxuICAgIHJldHVybiAkbW9kYWxQcm92aWRlcjtcbiAgfSk7XG5cbmFuZ3VsYXIubW9kdWxlKCd1aS5ib290c3RyYXAucGFnaW5hdGlvbicsIFtdKVxuXG4uY29udHJvbGxlcignUGFnaW5hdGlvbkNvbnRyb2xsZXInLCBbJyRzY29wZScsICckYXR0cnMnLCAnJHBhcnNlJywgZnVuY3Rpb24gKCRzY29wZSwgJGF0dHJzLCAkcGFyc2UpIHtcbiAgdmFyIHNlbGYgPSB0aGlzLFxuICAgICAgbmdNb2RlbEN0cmwgPSB7ICRzZXRWaWV3VmFsdWU6IGFuZ3VsYXIubm9vcCB9LCAvLyBudWxsTW9kZWxDdHJsXG4gICAgICBzZXROdW1QYWdlcyA9ICRhdHRycy5udW1QYWdlcyA/ICRwYXJzZSgkYXR0cnMubnVtUGFnZXMpLmFzc2lnbiA6IGFuZ3VsYXIubm9vcDtcblxuICB0aGlzLmluaXQgPSBmdW5jdGlvbihuZ01vZGVsQ3RybF8sIGNvbmZpZykge1xuICAgIG5nTW9kZWxDdHJsID0gbmdNb2RlbEN0cmxfO1xuICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xuXG4gICAgbmdNb2RlbEN0cmwuJHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgc2VsZi5yZW5kZXIoKTtcbiAgICB9O1xuXG4gICAgaWYgKCRhdHRycy5pdGVtc1BlclBhZ2UpIHtcbiAgICAgICRzY29wZS4kcGFyZW50LiR3YXRjaCgkcGFyc2UoJGF0dHJzLml0ZW1zUGVyUGFnZSksIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIHNlbGYuaXRlbXNQZXJQYWdlID0gcGFyc2VJbnQodmFsdWUsIDEwKTtcbiAgICAgICAgJHNjb3BlLnRvdGFsUGFnZXMgPSBzZWxmLmNhbGN1bGF0ZVRvdGFsUGFnZXMoKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLml0ZW1zUGVyUGFnZSA9IGNvbmZpZy5pdGVtc1BlclBhZ2U7XG4gICAgfVxuICB9O1xuXG4gIHRoaXMuY2FsY3VsYXRlVG90YWxQYWdlcyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciB0b3RhbFBhZ2VzID0gdGhpcy5pdGVtc1BlclBhZ2UgPCAxID8gMSA6IE1hdGguY2VpbCgkc2NvcGUudG90YWxJdGVtcyAvIHRoaXMuaXRlbXNQZXJQYWdlKTtcbiAgICByZXR1cm4gTWF0aC5tYXgodG90YWxQYWdlcyB8fCAwLCAxKTtcbiAgfTtcblxuICB0aGlzLnJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICAgICRzY29wZS5wYWdlID0gcGFyc2VJbnQobmdNb2RlbEN0cmwuJHZpZXdWYWx1ZSwgMTApIHx8IDE7XG4gIH07XG5cbiAgJHNjb3BlLnNlbGVjdFBhZ2UgPSBmdW5jdGlvbihwYWdlKSB7XG4gICAgaWYgKCAkc2NvcGUucGFnZSAhPT0gcGFnZSAmJiBwYWdlID4gMCAmJiBwYWdlIDw9ICRzY29wZS50b3RhbFBhZ2VzKSB7XG4gICAgICBuZ01vZGVsQ3RybC4kc2V0Vmlld1ZhbHVlKHBhZ2UpO1xuICAgICAgbmdNb2RlbEN0cmwuJHJlbmRlcigpO1xuICAgIH1cbiAgfTtcblxuICAkc2NvcGUuZ2V0VGV4dCA9IGZ1bmN0aW9uKCBrZXkgKSB7XG4gICAgcmV0dXJuICRzY29wZVtrZXkgKyAnVGV4dCddIHx8IHNlbGYuY29uZmlnW2tleSArICdUZXh0J107XG4gIH07XG4gICRzY29wZS5ub1ByZXZpb3VzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICRzY29wZS5wYWdlID09PSAxO1xuICB9O1xuICAkc2NvcGUubm9OZXh0ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuICRzY29wZS5wYWdlID09PSAkc2NvcGUudG90YWxQYWdlcztcbiAgfTtcblxuICAkc2NvcGUuJHdhdGNoKCd0b3RhbEl0ZW1zJywgZnVuY3Rpb24oKSB7XG4gICAgJHNjb3BlLnRvdGFsUGFnZXMgPSBzZWxmLmNhbGN1bGF0ZVRvdGFsUGFnZXMoKTtcbiAgfSk7XG5cbiAgJHNjb3BlLiR3YXRjaCgndG90YWxQYWdlcycsIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgc2V0TnVtUGFnZXMoJHNjb3BlLiRwYXJlbnQsIHZhbHVlKTsgLy8gUmVhZG9ubHkgdmFyaWFibGVcblxuICAgIGlmICggJHNjb3BlLnBhZ2UgPiB2YWx1ZSApIHtcbiAgICAgICRzY29wZS5zZWxlY3RQYWdlKHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbmdNb2RlbEN0cmwuJHJlbmRlcigpO1xuICAgIH1cbiAgfSk7XG59XSlcblxuLmNvbnN0YW50KCdwYWdpbmF0aW9uQ29uZmlnJywge1xuICBpdGVtc1BlclBhZ2U6IDEwLFxuICBib3VuZGFyeUxpbmtzOiBmYWxzZSxcbiAgZGlyZWN0aW9uTGlua3M6IHRydWUsXG4gIGZpcnN0VGV4dDogJ0ZpcnN0JyxcbiAgcHJldmlvdXNUZXh0OiAnUHJldmlvdXMnLFxuICBuZXh0VGV4dDogJ05leHQnLFxuICBsYXN0VGV4dDogJ0xhc3QnLFxuICByb3RhdGU6IHRydWVcbn0pXG5cbi5kaXJlY3RpdmUoJ3BhZ2luYXRpb24nLCBbJyRwYXJzZScsICdwYWdpbmF0aW9uQ29uZmlnJywgZnVuY3Rpb24oJHBhcnNlLCBwYWdpbmF0aW9uQ29uZmlnKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6ICdFQScsXG4gICAgc2NvcGU6IHtcbiAgICAgIHRvdGFsSXRlbXM6ICc9JyxcbiAgICAgIGZpcnN0VGV4dDogJ0AnLFxuICAgICAgcHJldmlvdXNUZXh0OiAnQCcsXG4gICAgICBuZXh0VGV4dDogJ0AnLFxuICAgICAgbGFzdFRleHQ6ICdAJ1xuICAgIH0sXG4gICAgcmVxdWlyZTogWydwYWdpbmF0aW9uJywgJz9uZ01vZGVsJ10sXG4gICAgY29udHJvbGxlcjogJ1BhZ2luYXRpb25Db250cm9sbGVyJyxcbiAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5odG1sJyxcbiAgICByZXBsYWNlOiB0cnVlLFxuICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY3RybHMpIHtcbiAgICAgIHZhciBwYWdpbmF0aW9uQ3RybCA9IGN0cmxzWzBdLCBuZ01vZGVsQ3RybCA9IGN0cmxzWzFdO1xuXG4gICAgICBpZiAoIW5nTW9kZWxDdHJsKSB7XG4gICAgICAgICByZXR1cm47IC8vIGRvIG5vdGhpbmcgaWYgbm8gbmctbW9kZWxcbiAgICAgIH1cblxuICAgICAgLy8gU2V0dXAgY29uZmlndXJhdGlvbiBwYXJhbWV0ZXJzXG4gICAgICB2YXIgbWF4U2l6ZSA9IGFuZ3VsYXIuaXNEZWZpbmVkKGF0dHJzLm1heFNpemUpID8gc2NvcGUuJHBhcmVudC4kZXZhbChhdHRycy5tYXhTaXplKSA6IHBhZ2luYXRpb25Db25maWcubWF4U2l6ZSxcbiAgICAgICAgICByb3RhdGUgPSBhbmd1bGFyLmlzRGVmaW5lZChhdHRycy5yb3RhdGUpID8gc2NvcGUuJHBhcmVudC4kZXZhbChhdHRycy5yb3RhdGUpIDogcGFnaW5hdGlvbkNvbmZpZy5yb3RhdGU7XG4gICAgICBzY29wZS5ib3VuZGFyeUxpbmtzID0gYW5ndWxhci5pc0RlZmluZWQoYXR0cnMuYm91bmRhcnlMaW5rcykgPyBzY29wZS4kcGFyZW50LiRldmFsKGF0dHJzLmJvdW5kYXJ5TGlua3MpIDogcGFnaW5hdGlvbkNvbmZpZy5ib3VuZGFyeUxpbmtzO1xuICAgICAgc2NvcGUuZGlyZWN0aW9uTGlua3MgPSBhbmd1bGFyLmlzRGVmaW5lZChhdHRycy5kaXJlY3Rpb25MaW5rcykgPyBzY29wZS4kcGFyZW50LiRldmFsKGF0dHJzLmRpcmVjdGlvbkxpbmtzKSA6IHBhZ2luYXRpb25Db25maWcuZGlyZWN0aW9uTGlua3M7XG5cbiAgICAgIHBhZ2luYXRpb25DdHJsLmluaXQobmdNb2RlbEN0cmwsIHBhZ2luYXRpb25Db25maWcpO1xuXG4gICAgICBpZiAoYXR0cnMubWF4U2l6ZSkge1xuICAgICAgICBzY29wZS4kcGFyZW50LiR3YXRjaCgkcGFyc2UoYXR0cnMubWF4U2l6ZSksIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgbWF4U2l6ZSA9IHBhcnNlSW50KHZhbHVlLCAxMCk7XG4gICAgICAgICAgcGFnaW5hdGlvbkN0cmwucmVuZGVyKCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICAvLyBDcmVhdGUgcGFnZSBvYmplY3QgdXNlZCBpbiB0ZW1wbGF0ZVxuICAgICAgZnVuY3Rpb24gbWFrZVBhZ2UobnVtYmVyLCB0ZXh0LCBpc0FjdGl2ZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIG51bWJlcjogbnVtYmVyLFxuICAgICAgICAgIHRleHQ6IHRleHQsXG4gICAgICAgICAgYWN0aXZlOiBpc0FjdGl2ZVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBmdW5jdGlvbiBnZXRQYWdlcyhjdXJyZW50UGFnZSwgdG90YWxQYWdlcykge1xuICAgICAgICB2YXIgcGFnZXMgPSBbXTtcblxuICAgICAgICAvLyBEZWZhdWx0IHBhZ2UgbGltaXRzXG4gICAgICAgIHZhciBzdGFydFBhZ2UgPSAxLCBlbmRQYWdlID0gdG90YWxQYWdlcztcbiAgICAgICAgdmFyIGlzTWF4U2l6ZWQgPSAoIGFuZ3VsYXIuaXNEZWZpbmVkKG1heFNpemUpICYmIG1heFNpemUgPCB0b3RhbFBhZ2VzICk7XG5cbiAgICAgICAgLy8gcmVjb21wdXRlIGlmIG1heFNpemVcbiAgICAgICAgaWYgKCBpc01heFNpemVkICkge1xuICAgICAgICAgIGlmICggcm90YXRlICkge1xuICAgICAgICAgICAgLy8gQ3VycmVudCBwYWdlIGlzIGRpc3BsYXllZCBpbiB0aGUgbWlkZGxlIG9mIHRoZSB2aXNpYmxlIG9uZXNcbiAgICAgICAgICAgIHN0YXJ0UGFnZSA9IE1hdGgubWF4KGN1cnJlbnRQYWdlIC0gTWF0aC5mbG9vcihtYXhTaXplLzIpLCAxKTtcbiAgICAgICAgICAgIGVuZFBhZ2UgICA9IHN0YXJ0UGFnZSArIG1heFNpemUgLSAxO1xuXG4gICAgICAgICAgICAvLyBBZGp1c3QgaWYgbGltaXQgaXMgZXhjZWVkZWRcbiAgICAgICAgICAgIGlmIChlbmRQYWdlID4gdG90YWxQYWdlcykge1xuICAgICAgICAgICAgICBlbmRQYWdlICAgPSB0b3RhbFBhZ2VzO1xuICAgICAgICAgICAgICBzdGFydFBhZ2UgPSBlbmRQYWdlIC0gbWF4U2l6ZSArIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIFZpc2libGUgcGFnZXMgYXJlIHBhZ2luYXRlZCB3aXRoIG1heFNpemVcbiAgICAgICAgICAgIHN0YXJ0UGFnZSA9ICgoTWF0aC5jZWlsKGN1cnJlbnRQYWdlIC8gbWF4U2l6ZSkgLSAxKSAqIG1heFNpemUpICsgMTtcblxuICAgICAgICAgICAgLy8gQWRqdXN0IGxhc3QgcGFnZSBpZiBsaW1pdCBpcyBleGNlZWRlZFxuICAgICAgICAgICAgZW5kUGFnZSA9IE1hdGgubWluKHN0YXJ0UGFnZSArIG1heFNpemUgLSAxLCB0b3RhbFBhZ2VzKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBBZGQgcGFnZSBudW1iZXIgbGlua3NcbiAgICAgICAgZm9yICh2YXIgbnVtYmVyID0gc3RhcnRQYWdlOyBudW1iZXIgPD0gZW5kUGFnZTsgbnVtYmVyKyspIHtcbiAgICAgICAgICB2YXIgcGFnZSA9IG1ha2VQYWdlKG51bWJlciwgbnVtYmVyLCBudW1iZXIgPT09IGN1cnJlbnRQYWdlKTtcbiAgICAgICAgICBwYWdlcy5wdXNoKHBhZ2UpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQWRkIGxpbmtzIHRvIG1vdmUgYmV0d2VlbiBwYWdlIHNldHNcbiAgICAgICAgaWYgKCBpc01heFNpemVkICYmICEgcm90YXRlICkge1xuICAgICAgICAgIGlmICggc3RhcnRQYWdlID4gMSApIHtcbiAgICAgICAgICAgIHZhciBwcmV2aW91c1BhZ2VTZXQgPSBtYWtlUGFnZShzdGFydFBhZ2UgLSAxLCAnLi4uJywgZmFsc2UpO1xuICAgICAgICAgICAgcGFnZXMudW5zaGlmdChwcmV2aW91c1BhZ2VTZXQpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICggZW5kUGFnZSA8IHRvdGFsUGFnZXMgKSB7XG4gICAgICAgICAgICB2YXIgbmV4dFBhZ2VTZXQgPSBtYWtlUGFnZShlbmRQYWdlICsgMSwgJy4uLicsIGZhbHNlKTtcbiAgICAgICAgICAgIHBhZ2VzLnB1c2gobmV4dFBhZ2VTZXQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBwYWdlcztcbiAgICAgIH1cblxuICAgICAgdmFyIG9yaWdpbmFsUmVuZGVyID0gcGFnaW5hdGlvbkN0cmwucmVuZGVyO1xuICAgICAgcGFnaW5hdGlvbkN0cmwucmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIG9yaWdpbmFsUmVuZGVyKCk7XG4gICAgICAgIGlmIChzY29wZS5wYWdlID4gMCAmJiBzY29wZS5wYWdlIDw9IHNjb3BlLnRvdGFsUGFnZXMpIHtcbiAgICAgICAgICBzY29wZS5wYWdlcyA9IGdldFBhZ2VzKHNjb3BlLnBhZ2UsIHNjb3BlLnRvdGFsUGFnZXMpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbn1dKVxuXG4uY29uc3RhbnQoJ3BhZ2VyQ29uZmlnJywge1xuICBpdGVtc1BlclBhZ2U6IDEwLFxuICBwcmV2aW91c1RleHQ6ICfCqyBQcmV2aW91cycsXG4gIG5leHRUZXh0OiAnTmV4dCDCuycsXG4gIGFsaWduOiB0cnVlXG59KVxuXG4uZGlyZWN0aXZlKCdwYWdlcicsIFsncGFnZXJDb25maWcnLCBmdW5jdGlvbihwYWdlckNvbmZpZykge1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiAnRUEnLFxuICAgIHNjb3BlOiB7XG4gICAgICB0b3RhbEl0ZW1zOiAnPScsXG4gICAgICBwcmV2aW91c1RleHQ6ICdAJyxcbiAgICAgIG5leHRUZXh0OiAnQCdcbiAgICB9LFxuICAgIHJlcXVpcmU6IFsncGFnZXInLCAnP25nTW9kZWwnXSxcbiAgICBjb250cm9sbGVyOiAnUGFnaW5hdGlvbkNvbnRyb2xsZXInLFxuICAgIHRlbXBsYXRlVXJsOiAndGVtcGxhdGUvcGFnaW5hdGlvbi9wYWdlci5odG1sJyxcbiAgICByZXBsYWNlOiB0cnVlLFxuICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtZW50LCBhdHRycywgY3RybHMpIHtcbiAgICAgIHZhciBwYWdpbmF0aW9uQ3RybCA9IGN0cmxzWzBdLCBuZ01vZGVsQ3RybCA9IGN0cmxzWzFdO1xuXG4gICAgICBpZiAoIW5nTW9kZWxDdHJsKSB7XG4gICAgICAgICByZXR1cm47IC8vIGRvIG5vdGhpbmcgaWYgbm8gbmctbW9kZWxcbiAgICAgIH1cblxuICAgICAgc2NvcGUuYWxpZ24gPSBhbmd1bGFyLmlzRGVmaW5lZChhdHRycy5hbGlnbikgPyBzY29wZS4kcGFyZW50LiRldmFsKGF0dHJzLmFsaWduKSA6IHBhZ2VyQ29uZmlnLmFsaWduO1xuICAgICAgcGFnaW5hdGlvbkN0cmwuaW5pdChuZ01vZGVsQ3RybCwgcGFnZXJDb25maWcpO1xuICAgIH1cbiAgfTtcbn1dKTtcblxuLyoqXG4gKiBUaGUgZm9sbG93aW5nIGZlYXR1cmVzIGFyZSBzdGlsbCBvdXRzdGFuZGluZzogYW5pbWF0aW9uIGFzIGFcbiAqIGZ1bmN0aW9uLCBwbGFjZW1lbnQgYXMgYSBmdW5jdGlvbiwgaW5zaWRlLCBzdXBwb3J0IGZvciBtb3JlIHRyaWdnZXJzIHRoYW5cbiAqIGp1c3QgbW91c2UgZW50ZXIvbGVhdmUsIGh0bWwgdG9vbHRpcHMsIGFuZCBzZWxlY3RvciBkZWxlZ2F0aW9uLlxuICovXG5hbmd1bGFyLm1vZHVsZSggJ3VpLmJvb3RzdHJhcC50b29sdGlwJywgWyAndWkuYm9vdHN0cmFwLnBvc2l0aW9uJywgJ3VpLmJvb3RzdHJhcC5iaW5kSHRtbCcgXSApXG5cbi8qKlxuICogVGhlICR0b29sdGlwIHNlcnZpY2UgY3JlYXRlcyB0b29sdGlwLSBhbmQgcG9wb3Zlci1saWtlIGRpcmVjdGl2ZXMgYXMgd2VsbCBhc1xuICogaG91c2VzIGdsb2JhbCBvcHRpb25zIGZvciB0aGVtLlxuICovXG4ucHJvdmlkZXIoICckdG9vbHRpcCcsIGZ1bmN0aW9uICgpIHtcbiAgLy8gVGhlIGRlZmF1bHQgb3B0aW9ucyB0b29sdGlwIGFuZCBwb3BvdmVyLlxuICB2YXIgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgcGxhY2VtZW50OiAndG9wJyxcbiAgICBhbmltYXRpb246IHRydWUsXG4gICAgcG9wdXBEZWxheTogMFxuICB9O1xuXG4gIC8vIERlZmF1bHQgaGlkZSB0cmlnZ2VycyBmb3IgZWFjaCBzaG93IHRyaWdnZXJcbiAgdmFyIHRyaWdnZXJNYXAgPSB7XG4gICAgJ21vdXNlZW50ZXInOiAnbW91c2VsZWF2ZScsXG4gICAgJ2NsaWNrJzogJ2NsaWNrJyxcbiAgICAnZm9jdXMnOiAnYmx1cidcbiAgfTtcblxuICAvLyBUaGUgb3B0aW9ucyBzcGVjaWZpZWQgdG8gdGhlIHByb3ZpZGVyIGdsb2JhbGx5LlxuICB2YXIgZ2xvYmFsT3B0aW9ucyA9IHt9O1xuXG4gIC8qKlxuICAgKiBgb3B0aW9ucyh7fSlgIGFsbG93cyBnbG9iYWwgY29uZmlndXJhdGlvbiBvZiBhbGwgdG9vbHRpcHMgaW4gdGhlXG4gICAqIGFwcGxpY2F0aW9uLlxuICAgKlxuICAgKiAgIHZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSggJ0FwcCcsIFsndWkuYm9vdHN0cmFwLnRvb2x0aXAnXSwgZnVuY3Rpb24oICR0b29sdGlwUHJvdmlkZXIgKSB7XG4gICAqICAgICAvLyBwbGFjZSB0b29sdGlwcyBsZWZ0IGluc3RlYWQgb2YgdG9wIGJ5IGRlZmF1bHRcbiAgICogICAgICR0b29sdGlwUHJvdmlkZXIub3B0aW9ucyggeyBwbGFjZW1lbnQ6ICdsZWZ0JyB9ICk7XG4gICAqICAgfSk7XG4gICAqL1xuXHR0aGlzLm9wdGlvbnMgPSBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0YW5ndWxhci5leHRlbmQoIGdsb2JhbE9wdGlvbnMsIHZhbHVlICk7XG5cdH07XG5cbiAgLyoqXG4gICAqIFRoaXMgYWxsb3dzIHlvdSB0byBleHRlbmQgdGhlIHNldCBvZiB0cmlnZ2VyIG1hcHBpbmdzIGF2YWlsYWJsZS4gRS5nLjpcbiAgICpcbiAgICogICAkdG9vbHRpcFByb3ZpZGVyLnNldFRyaWdnZXJzKCAnb3BlblRyaWdnZXInOiAnY2xvc2VUcmlnZ2VyJyApO1xuICAgKi9cbiAgdGhpcy5zZXRUcmlnZ2VycyA9IGZ1bmN0aW9uIHNldFRyaWdnZXJzICggdHJpZ2dlcnMgKSB7XG4gICAgYW5ndWxhci5leHRlbmQoIHRyaWdnZXJNYXAsIHRyaWdnZXJzICk7XG4gIH07XG5cbiAgLyoqXG4gICAqIFRoaXMgaXMgYSBoZWxwZXIgZnVuY3Rpb24gZm9yIHRyYW5zbGF0aW5nIGNhbWVsLWNhc2UgdG8gc25ha2UtY2FzZS5cbiAgICovXG4gIGZ1bmN0aW9uIHNuYWtlX2Nhc2UobmFtZSl7XG4gICAgdmFyIHJlZ2V4cCA9IC9bQS1aXS9nO1xuICAgIHZhciBzZXBhcmF0b3IgPSAnLSc7XG4gICAgcmV0dXJuIG5hbWUucmVwbGFjZShyZWdleHAsIGZ1bmN0aW9uKGxldHRlciwgcG9zKSB7XG4gICAgICByZXR1cm4gKHBvcyA/IHNlcGFyYXRvciA6ICcnKSArIGxldHRlci50b0xvd2VyQ2FzZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGFjdHVhbCBpbnN0YW5jZSBvZiB0aGUgJHRvb2x0aXAgc2VydmljZS5cbiAgICogVE9ETyBzdXBwb3J0IG11bHRpcGxlIHRyaWdnZXJzXG4gICAqL1xuICB0aGlzLiRnZXQgPSBbICckd2luZG93JywgJyRjb21waWxlJywgJyR0aW1lb3V0JywgJyRwYXJzZScsICckZG9jdW1lbnQnLCAnJHBvc2l0aW9uJywgJyRpbnRlcnBvbGF0ZScsIGZ1bmN0aW9uICggJHdpbmRvdywgJGNvbXBpbGUsICR0aW1lb3V0LCAkcGFyc2UsICRkb2N1bWVudCwgJHBvc2l0aW9uLCAkaW50ZXJwb2xhdGUgKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICR0b29sdGlwICggdHlwZSwgcHJlZml4LCBkZWZhdWx0VHJpZ2dlclNob3cgKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGFuZ3VsYXIuZXh0ZW5kKCB7fSwgZGVmYXVsdE9wdGlvbnMsIGdsb2JhbE9wdGlvbnMgKTtcblxuICAgICAgLyoqXG4gICAgICAgKiBSZXR1cm5zIGFuIG9iamVjdCBvZiBzaG93IGFuZCBoaWRlIHRyaWdnZXJzLlxuICAgICAgICpcbiAgICAgICAqIElmIGEgdHJpZ2dlciBpcyBzdXBwbGllZCxcbiAgICAgICAqIGl0IGlzIHVzZWQgdG8gc2hvdyB0aGUgdG9vbHRpcDsgb3RoZXJ3aXNlLCBpdCB3aWxsIHVzZSB0aGUgYHRyaWdnZXJgXG4gICAgICAgKiBvcHRpb24gcGFzc2VkIHRvIHRoZSBgJHRvb2x0aXBQcm92aWRlci5vcHRpb25zYCBtZXRob2Q7IGVsc2UgaXQgd2lsbFxuICAgICAgICogZGVmYXVsdCB0byB0aGUgdHJpZ2dlciBzdXBwbGllZCB0byB0aGlzIGRpcmVjdGl2ZSBmYWN0b3J5LlxuICAgICAgICpcbiAgICAgICAqIFRoZSBoaWRlIHRyaWdnZXIgaXMgYmFzZWQgb24gdGhlIHNob3cgdHJpZ2dlci4gSWYgdGhlIGB0cmlnZ2VyYCBvcHRpb25cbiAgICAgICAqIHdhcyBwYXNzZWQgdG8gdGhlIGAkdG9vbHRpcFByb3ZpZGVyLm9wdGlvbnNgIG1ldGhvZCwgaXQgd2lsbCB1c2UgdGhlXG4gICAgICAgKiBtYXBwZWQgdHJpZ2dlciBmcm9tIGB0cmlnZ2VyTWFwYCBvciB0aGUgcGFzc2VkIHRyaWdnZXIgaWYgdGhlIG1hcCBpc1xuICAgICAgICogdW5kZWZpbmVkOyBvdGhlcndpc2UsIGl0IHVzZXMgdGhlIGB0cmlnZ2VyTWFwYCB2YWx1ZSBvZiB0aGUgc2hvd1xuICAgICAgICogdHJpZ2dlcjsgZWxzZSBpdCB3aWxsIGp1c3QgdXNlIHRoZSBzaG93IHRyaWdnZXIuXG4gICAgICAgKi9cbiAgICAgIGZ1bmN0aW9uIGdldFRyaWdnZXJzICggdHJpZ2dlciApIHtcbiAgICAgICAgdmFyIHNob3cgPSB0cmlnZ2VyIHx8IG9wdGlvbnMudHJpZ2dlciB8fCBkZWZhdWx0VHJpZ2dlclNob3c7XG4gICAgICAgIHZhciBoaWRlID0gdHJpZ2dlck1hcFtzaG93XSB8fCBzaG93O1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHNob3c6IHNob3csXG4gICAgICAgICAgaGlkZTogaGlkZVxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICB2YXIgZGlyZWN0aXZlTmFtZSA9IHNuYWtlX2Nhc2UoIHR5cGUgKTtcblxuICAgICAgdmFyIHN0YXJ0U3ltID0gJGludGVycG9sYXRlLnN0YXJ0U3ltYm9sKCk7XG4gICAgICB2YXIgZW5kU3ltID0gJGludGVycG9sYXRlLmVuZFN5bWJvbCgpO1xuICAgICAgdmFyIHRlbXBsYXRlID1cbiAgICAgICAgJzxkaXYgJysgZGlyZWN0aXZlTmFtZSArJy1wb3B1cCAnK1xuICAgICAgICAgICd0aXRsZT1cIicrc3RhcnRTeW0rJ3R0X3RpdGxlJytlbmRTeW0rJ1wiICcrXG4gICAgICAgICAgJ2NvbnRlbnQ9XCInK3N0YXJ0U3ltKyd0dF9jb250ZW50JytlbmRTeW0rJ1wiICcrXG4gICAgICAgICAgJ3BsYWNlbWVudD1cIicrc3RhcnRTeW0rJ3R0X3BsYWNlbWVudCcrZW5kU3ltKydcIiAnK1xuICAgICAgICAgICdhbmltYXRpb249XCJ0dF9hbmltYXRpb25cIiAnK1xuICAgICAgICAgICdpcy1vcGVuPVwidHRfaXNPcGVuXCInK1xuICAgICAgICAgICc+JytcbiAgICAgICAgJzwvZGl2Pic7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlc3RyaWN0OiAnRUEnLFxuICAgICAgICBzY29wZTogdHJ1ZSxcbiAgICAgICAgY29tcGlsZTogZnVuY3Rpb24gKHRFbGVtLCB0QXR0cnMpIHtcbiAgICAgICAgICB2YXIgdG9vbHRpcExpbmtlciA9ICRjb21waWxlKCB0ZW1wbGF0ZSApO1xuXG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIGxpbmsgKCBzY29wZSwgZWxlbWVudCwgYXR0cnMgKSB7XG4gICAgICAgICAgICB2YXIgdG9vbHRpcDtcbiAgICAgICAgICAgIHZhciB0cmFuc2l0aW9uVGltZW91dDtcbiAgICAgICAgICAgIHZhciBwb3B1cFRpbWVvdXQ7XG4gICAgICAgICAgICB2YXIgYXBwZW5kVG9Cb2R5ID0gYW5ndWxhci5pc0RlZmluZWQoIG9wdGlvbnMuYXBwZW5kVG9Cb2R5ICkgPyBvcHRpb25zLmFwcGVuZFRvQm9keSA6IGZhbHNlO1xuICAgICAgICAgICAgdmFyIHRyaWdnZXJzID0gZ2V0VHJpZ2dlcnMoIHVuZGVmaW5lZCApO1xuICAgICAgICAgICAgdmFyIGhhc0VuYWJsZUV4cCA9IGFuZ3VsYXIuaXNEZWZpbmVkKGF0dHJzW3ByZWZpeCsnRW5hYmxlJ10pO1xuXG4gICAgICAgICAgICB2YXIgcG9zaXRpb25Ub29sdGlwID0gZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAgIHZhciB0dFBvc2l0aW9uID0gJHBvc2l0aW9uLnBvc2l0aW9uRWxlbWVudHMoZWxlbWVudCwgdG9vbHRpcCwgc2NvcGUudHRfcGxhY2VtZW50LCBhcHBlbmRUb0JvZHkpO1xuICAgICAgICAgICAgICB0dFBvc2l0aW9uLnRvcCArPSAncHgnO1xuICAgICAgICAgICAgICB0dFBvc2l0aW9uLmxlZnQgKz0gJ3B4JztcblxuICAgICAgICAgICAgICAvLyBOb3cgc2V0IHRoZSBjYWxjdWxhdGVkIHBvc2l0aW9uaW5nLlxuICAgICAgICAgICAgICB0b29sdGlwLmNzcyggdHRQb3NpdGlvbiApO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgLy8gQnkgZGVmYXVsdCwgdGhlIHRvb2x0aXAgaXMgbm90IG9wZW4uXG4gICAgICAgICAgICAvLyBUT0RPIGFkZCBhYmlsaXR5IHRvIHN0YXJ0IHRvb2x0aXAgb3BlbmVkXG4gICAgICAgICAgICBzY29wZS50dF9pc09wZW4gPSBmYWxzZTtcblxuICAgICAgICAgICAgZnVuY3Rpb24gdG9nZ2xlVG9vbHRpcEJpbmQgKCkge1xuICAgICAgICAgICAgICBpZiAoICEgc2NvcGUudHRfaXNPcGVuICkge1xuICAgICAgICAgICAgICAgIHNob3dUb29sdGlwQmluZCgpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGhpZGVUb29sdGlwQmluZCgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIFNob3cgdGhlIHRvb2x0aXAgd2l0aCBkZWxheSBpZiBzcGVjaWZpZWQsIG90aGVyd2lzZSBzaG93IGl0IGltbWVkaWF0ZWx5XG4gICAgICAgICAgICBmdW5jdGlvbiBzaG93VG9vbHRpcEJpbmQoKSB7XG4gICAgICAgICAgICAgIGlmKGhhc0VuYWJsZUV4cCAmJiAhc2NvcGUuJGV2YWwoYXR0cnNbcHJlZml4KydFbmFibGUnXSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgaWYgKCBzY29wZS50dF9wb3B1cERlbGF5ICkge1xuICAgICAgICAgICAgICAgIC8vIERvIG5vdGhpbmcgaWYgdGhlIHRvb2x0aXAgd2FzIGFscmVhZHkgc2NoZWR1bGVkIHRvIHBvcC11cC5cbiAgICAgICAgICAgICAgICAvLyBUaGlzIGhhcHBlbnMgaWYgc2hvdyBpcyB0cmlnZ2VyZWQgbXVsdGlwbGUgdGltZXMgYmVmb3JlIGFueSBoaWRlIGlzIHRyaWdnZXJlZC5cbiAgICAgICAgICAgICAgICBpZiAoIXBvcHVwVGltZW91dCkge1xuICAgICAgICAgICAgICAgICAgcG9wdXBUaW1lb3V0ID0gJHRpbWVvdXQoIHNob3csIHNjb3BlLnR0X3BvcHVwRGVsYXksIGZhbHNlICk7XG4gICAgICAgICAgICAgICAgICBwb3B1cFRpbWVvdXQudGhlbihmdW5jdGlvbihyZXBvc2l0aW9uKXtyZXBvc2l0aW9uKCk7fSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHNob3coKSgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIGhpZGVUb29sdGlwQmluZCAoKSB7XG4gICAgICAgICAgICAgIHNjb3BlLiRhcHBseShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaGlkZSgpO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gU2hvdyB0aGUgdG9vbHRpcCBwb3B1cCBlbGVtZW50LlxuICAgICAgICAgICAgZnVuY3Rpb24gc2hvdygpIHtcblxuICAgICAgICAgICAgICBwb3B1cFRpbWVvdXQgPSBudWxsO1xuXG4gICAgICAgICAgICAgIC8vIElmIHRoZXJlIGlzIGEgcGVuZGluZyByZW1vdmUgdHJhbnNpdGlvbiwgd2UgbXVzdCBjYW5jZWwgaXQsIGxlc3QgdGhlXG4gICAgICAgICAgICAgIC8vIHRvb2x0aXAgYmUgbXlzdGVyaW91c2x5IHJlbW92ZWQuXG4gICAgICAgICAgICAgIGlmICggdHJhbnNpdGlvblRpbWVvdXQgKSB7XG4gICAgICAgICAgICAgICAgJHRpbWVvdXQuY2FuY2VsKCB0cmFuc2l0aW9uVGltZW91dCApO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb25UaW1lb3V0ID0gbnVsbDtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIC8vIERvbid0IHNob3cgZW1wdHkgdG9vbHRpcHMuXG4gICAgICAgICAgICAgIGlmICggISBzY29wZS50dF9jb250ZW50ICkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhbmd1bGFyLm5vb3A7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBjcmVhdGVUb29sdGlwKCk7XG5cbiAgICAgICAgICAgICAgLy8gU2V0IHRoZSBpbml0aWFsIHBvc2l0aW9uaW5nLlxuICAgICAgICAgICAgICB0b29sdGlwLmNzcyh7IHRvcDogMCwgbGVmdDogMCwgZGlzcGxheTogJ2Jsb2NrJyB9KTtcblxuICAgICAgICAgICAgICAvLyBOb3cgd2UgYWRkIGl0IHRvIHRoZSBET00gYmVjYXVzZSBuZWVkIHNvbWUgaW5mbyBhYm91dCBpdC4gQnV0IGl0J3Mgbm90IFxuICAgICAgICAgICAgICAvLyB2aXNpYmxlIHlldCBhbnl3YXkuXG4gICAgICAgICAgICAgIGlmICggYXBwZW5kVG9Cb2R5ICkge1xuICAgICAgICAgICAgICAgICAgJGRvY3VtZW50LmZpbmQoICdib2R5JyApLmFwcGVuZCggdG9vbHRpcCApO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGVsZW1lbnQuYWZ0ZXIoIHRvb2x0aXAgKTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHBvc2l0aW9uVG9vbHRpcCgpO1xuXG4gICAgICAgICAgICAgIC8vIEFuZCBzaG93IHRoZSB0b29sdGlwLlxuICAgICAgICAgICAgICBzY29wZS50dF9pc09wZW4gPSB0cnVlO1xuICAgICAgICAgICAgICBzY29wZS4kZGlnZXN0KCk7IC8vIGRpZ2VzdCByZXF1aXJlZCBhcyAkYXBwbHkgaXMgbm90IGNhbGxlZFxuXG4gICAgICAgICAgICAgIC8vIFJldHVybiBwb3NpdGlvbmluZyBmdW5jdGlvbiBhcyBwcm9taXNlIGNhbGxiYWNrIGZvciBjb3JyZWN0XG4gICAgICAgICAgICAgIC8vIHBvc2l0aW9uaW5nIGFmdGVyIGRyYXcuXG4gICAgICAgICAgICAgIHJldHVybiBwb3NpdGlvblRvb2x0aXA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIEhpZGUgdGhlIHRvb2x0aXAgcG9wdXAgZWxlbWVudC5cbiAgICAgICAgICAgIGZ1bmN0aW9uIGhpZGUoKSB7XG4gICAgICAgICAgICAgIC8vIEZpcnN0IHRoaW5ncyBmaXJzdDogd2UgZG9uJ3Qgc2hvdyBpdCBhbnltb3JlLlxuICAgICAgICAgICAgICBzY29wZS50dF9pc09wZW4gPSBmYWxzZTtcblxuICAgICAgICAgICAgICAvL2lmIHRvb2x0aXAgaXMgZ29pbmcgdG8gYmUgc2hvd24gYWZ0ZXIgZGVsYXksIHdlIG11c3QgY2FuY2VsIHRoaXNcbiAgICAgICAgICAgICAgJHRpbWVvdXQuY2FuY2VsKCBwb3B1cFRpbWVvdXQgKTtcbiAgICAgICAgICAgICAgcG9wdXBUaW1lb3V0ID0gbnVsbDtcblxuICAgICAgICAgICAgICAvLyBBbmQgbm93IHdlIHJlbW92ZSBpdCBmcm9tIHRoZSBET00uIEhvd2V2ZXIsIGlmIHdlIGhhdmUgYW5pbWF0aW9uLCB3ZSBcbiAgICAgICAgICAgICAgLy8gbmVlZCB0byB3YWl0IGZvciBpdCB0byBleHBpcmUgYmVmb3JlaGFuZC5cbiAgICAgICAgICAgICAgLy8gRklYTUU6IHRoaXMgaXMgYSBwbGFjZWhvbGRlciBmb3IgYSBwb3J0IG9mIHRoZSB0cmFuc2l0aW9ucyBsaWJyYXJ5LlxuICAgICAgICAgICAgICBpZiAoIHNjb3BlLnR0X2FuaW1hdGlvbiApIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRyYW5zaXRpb25UaW1lb3V0KSB7XG4gICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uVGltZW91dCA9ICR0aW1lb3V0KHJlbW92ZVRvb2x0aXAsIDUwMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlbW92ZVRvb2x0aXAoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmdW5jdGlvbiBjcmVhdGVUb29sdGlwKCkge1xuICAgICAgICAgICAgICAvLyBUaGVyZSBjYW4gb25seSBiZSBvbmUgdG9vbHRpcCBlbGVtZW50IHBlciBkaXJlY3RpdmUgc2hvd24gYXQgb25jZS5cbiAgICAgICAgICAgICAgaWYgKHRvb2x0aXApIHtcbiAgICAgICAgICAgICAgICByZW1vdmVUb29sdGlwKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgdG9vbHRpcCA9IHRvb2x0aXBMaW5rZXIoc2NvcGUsIGZ1bmN0aW9uICgpIHt9KTtcblxuICAgICAgICAgICAgICAvLyBHZXQgY29udGVudHMgcmVuZGVyZWQgaW50byB0aGUgdG9vbHRpcFxuICAgICAgICAgICAgICBzY29wZS4kZGlnZXN0KCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIHJlbW92ZVRvb2x0aXAoKSB7XG4gICAgICAgICAgICAgIHRyYW5zaXRpb25UaW1lb3V0ID0gbnVsbDtcbiAgICAgICAgICAgICAgaWYgKHRvb2x0aXApIHtcbiAgICAgICAgICAgICAgICB0b29sdGlwLnJlbW92ZSgpO1xuICAgICAgICAgICAgICAgIHRvb2x0aXAgPSBudWxsO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogT2JzZXJ2ZSB0aGUgcmVsZXZhbnQgYXR0cmlidXRlcy5cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgYXR0cnMuJG9ic2VydmUoIHR5cGUsIGZ1bmN0aW9uICggdmFsICkge1xuICAgICAgICAgICAgICBzY29wZS50dF9jb250ZW50ID0gdmFsO1xuXG4gICAgICAgICAgICAgIGlmICghdmFsICYmIHNjb3BlLnR0X2lzT3BlbiApIHtcbiAgICAgICAgICAgICAgICBoaWRlKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBhdHRycy4kb2JzZXJ2ZSggcHJlZml4KydUaXRsZScsIGZ1bmN0aW9uICggdmFsICkge1xuICAgICAgICAgICAgICBzY29wZS50dF90aXRsZSA9IHZhbDtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBhdHRycy4kb2JzZXJ2ZSggcHJlZml4KydQbGFjZW1lbnQnLCBmdW5jdGlvbiAoIHZhbCApIHtcbiAgICAgICAgICAgICAgc2NvcGUudHRfcGxhY2VtZW50ID0gYW5ndWxhci5pc0RlZmluZWQoIHZhbCApID8gdmFsIDogb3B0aW9ucy5wbGFjZW1lbnQ7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgYXR0cnMuJG9ic2VydmUoIHByZWZpeCsnUG9wdXBEZWxheScsIGZ1bmN0aW9uICggdmFsICkge1xuICAgICAgICAgICAgICB2YXIgZGVsYXkgPSBwYXJzZUludCggdmFsLCAxMCApO1xuICAgICAgICAgICAgICBzY29wZS50dF9wb3B1cERlbGF5ID0gISBpc05hTihkZWxheSkgPyBkZWxheSA6IG9wdGlvbnMucG9wdXBEZWxheTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB2YXIgdW5yZWdpc3RlclRyaWdnZXJzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICBlbGVtZW50LnVuYmluZCh0cmlnZ2Vycy5zaG93LCBzaG93VG9vbHRpcEJpbmQpO1xuICAgICAgICAgICAgICBlbGVtZW50LnVuYmluZCh0cmlnZ2Vycy5oaWRlLCBoaWRlVG9vbHRpcEJpbmQpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgYXR0cnMuJG9ic2VydmUoIHByZWZpeCsnVHJpZ2dlcicsIGZ1bmN0aW9uICggdmFsICkge1xuICAgICAgICAgICAgICB1bnJlZ2lzdGVyVHJpZ2dlcnMoKTtcblxuICAgICAgICAgICAgICB0cmlnZ2VycyA9IGdldFRyaWdnZXJzKCB2YWwgKTtcblxuICAgICAgICAgICAgICBpZiAoIHRyaWdnZXJzLnNob3cgPT09IHRyaWdnZXJzLmhpZGUgKSB7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5iaW5kKCB0cmlnZ2Vycy5zaG93LCB0b2dnbGVUb29sdGlwQmluZCApO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGVsZW1lbnQuYmluZCggdHJpZ2dlcnMuc2hvdywgc2hvd1Rvb2x0aXBCaW5kICk7XG4gICAgICAgICAgICAgICAgZWxlbWVudC5iaW5kKCB0cmlnZ2Vycy5oaWRlLCBoaWRlVG9vbHRpcEJpbmQgKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHZhciBhbmltYXRpb24gPSBzY29wZS4kZXZhbChhdHRyc1twcmVmaXggKyAnQW5pbWF0aW9uJ10pO1xuICAgICAgICAgICAgc2NvcGUudHRfYW5pbWF0aW9uID0gYW5ndWxhci5pc0RlZmluZWQoYW5pbWF0aW9uKSA/ICEhYW5pbWF0aW9uIDogb3B0aW9ucy5hbmltYXRpb247XG5cbiAgICAgICAgICAgIGF0dHJzLiRvYnNlcnZlKCBwcmVmaXgrJ0FwcGVuZFRvQm9keScsIGZ1bmN0aW9uICggdmFsICkge1xuICAgICAgICAgICAgICBhcHBlbmRUb0JvZHkgPSBhbmd1bGFyLmlzRGVmaW5lZCggdmFsICkgPyAkcGFyc2UoIHZhbCApKCBzY29wZSApIDogYXBwZW5kVG9Cb2R5O1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vIGlmIGEgdG9vbHRpcCBpcyBhdHRhY2hlZCB0byA8Ym9keT4gd2UgbmVlZCB0byByZW1vdmUgaXQgb25cbiAgICAgICAgICAgIC8vIGxvY2F0aW9uIGNoYW5nZSBhcyBpdHMgcGFyZW50IHNjb3BlIHdpbGwgcHJvYmFibHkgbm90IGJlIGRlc3Ryb3llZFxuICAgICAgICAgICAgLy8gYnkgdGhlIGNoYW5nZS5cbiAgICAgICAgICAgIGlmICggYXBwZW5kVG9Cb2R5ICkge1xuICAgICAgICAgICAgICBzY29wZS4kb24oJyRsb2NhdGlvbkNoYW5nZVN1Y2Nlc3MnLCBmdW5jdGlvbiBjbG9zZVRvb2x0aXBPbkxvY2F0aW9uQ2hhbmdlU3VjY2VzcyAoKSB7XG4gICAgICAgICAgICAgIGlmICggc2NvcGUudHRfaXNPcGVuICkge1xuICAgICAgICAgICAgICAgIGhpZGUoKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIE1ha2Ugc3VyZSB0b29sdGlwIGlzIGRlc3Ryb3llZCBhbmQgcmVtb3ZlZC5cbiAgICAgICAgICAgIHNjb3BlLiRvbignJGRlc3Ryb3knLCBmdW5jdGlvbiBvbkRlc3Ryb3lUb29sdGlwKCkge1xuICAgICAgICAgICAgICAkdGltZW91dC5jYW5jZWwoIHRyYW5zaXRpb25UaW1lb3V0ICk7XG4gICAgICAgICAgICAgICR0aW1lb3V0LmNhbmNlbCggcG9wdXBUaW1lb3V0ICk7XG4gICAgICAgICAgICAgIHVucmVnaXN0ZXJUcmlnZ2VycygpO1xuICAgICAgICAgICAgICByZW1vdmVUb29sdGlwKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH07XG4gIH1dO1xufSlcblxuLmRpcmVjdGl2ZSggJ3Rvb2x0aXBQb3B1cCcsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogJ0VBJyxcbiAgICByZXBsYWNlOiB0cnVlLFxuICAgIHNjb3BlOiB7IGNvbnRlbnQ6ICdAJywgcGxhY2VtZW50OiAnQCcsIGFuaW1hdGlvbjogJyYnLCBpc09wZW46ICcmJyB9LFxuICAgIHRlbXBsYXRlVXJsOiAndGVtcGxhdGUvdG9vbHRpcC90b29sdGlwLXBvcHVwLmh0bWwnXG4gIH07XG59KVxuXG4uZGlyZWN0aXZlKCAndG9vbHRpcCcsIFsgJyR0b29sdGlwJywgZnVuY3Rpb24gKCAkdG9vbHRpcCApIHtcbiAgcmV0dXJuICR0b29sdGlwKCAndG9vbHRpcCcsICd0b29sdGlwJywgJ21vdXNlZW50ZXInICk7XG59XSlcblxuLmRpcmVjdGl2ZSggJ3Rvb2x0aXBIdG1sVW5zYWZlUG9wdXAnLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB7XG4gICAgcmVzdHJpY3Q6ICdFQScsXG4gICAgcmVwbGFjZTogdHJ1ZSxcbiAgICBzY29wZTogeyBjb250ZW50OiAnQCcsIHBsYWNlbWVudDogJ0AnLCBhbmltYXRpb246ICcmJywgaXNPcGVuOiAnJicgfSxcbiAgICB0ZW1wbGF0ZVVybDogJ3RlbXBsYXRlL3Rvb2x0aXAvdG9vbHRpcC1odG1sLXVuc2FmZS1wb3B1cC5odG1sJ1xuICB9O1xufSlcblxuLmRpcmVjdGl2ZSggJ3Rvb2x0aXBIdG1sVW5zYWZlJywgWyAnJHRvb2x0aXAnLCBmdW5jdGlvbiAoICR0b29sdGlwICkge1xuICByZXR1cm4gJHRvb2x0aXAoICd0b29sdGlwSHRtbFVuc2FmZScsICd0b29sdGlwJywgJ21vdXNlZW50ZXInICk7XG59XSk7XG5cbi8qKlxuICogVGhlIGZvbGxvd2luZyBmZWF0dXJlcyBhcmUgc3RpbGwgb3V0c3RhbmRpbmc6IHBvcHVwIGRlbGF5LCBhbmltYXRpb24gYXMgYVxuICogZnVuY3Rpb24sIHBsYWNlbWVudCBhcyBhIGZ1bmN0aW9uLCBpbnNpZGUsIHN1cHBvcnQgZm9yIG1vcmUgdHJpZ2dlcnMgdGhhblxuICoganVzdCBtb3VzZSBlbnRlci9sZWF2ZSwgaHRtbCBwb3BvdmVycywgYW5kIHNlbGVjdG9yIGRlbGVnYXRhdGlvbi5cbiAqL1xuYW5ndWxhci5tb2R1bGUoICd1aS5ib290c3RyYXAucG9wb3ZlcicsIFsgJ3VpLmJvb3RzdHJhcC50b29sdGlwJyBdIClcblxuLmRpcmVjdGl2ZSggJ3BvcG92ZXJQb3B1cCcsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogJ0VBJyxcbiAgICByZXBsYWNlOiB0cnVlLFxuICAgIHNjb3BlOiB7IHRpdGxlOiAnQCcsIGNvbnRlbnQ6ICdAJywgcGxhY2VtZW50OiAnQCcsIGFuaW1hdGlvbjogJyYnLCBpc09wZW46ICcmJyB9LFxuICAgIHRlbXBsYXRlVXJsOiAndGVtcGxhdGUvcG9wb3Zlci9wb3BvdmVyLmh0bWwnXG4gIH07XG59KVxuXG4uZGlyZWN0aXZlKCAncG9wb3ZlcicsIFsgJyR0b29sdGlwJywgZnVuY3Rpb24gKCAkdG9vbHRpcCApIHtcbiAgcmV0dXJuICR0b29sdGlwKCAncG9wb3ZlcicsICdwb3BvdmVyJywgJ2NsaWNrJyApO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZSgndWkuYm9vdHN0cmFwLnByb2dyZXNzYmFyJywgW10pXG5cbi5jb25zdGFudCgncHJvZ3Jlc3NDb25maWcnLCB7XG4gIGFuaW1hdGU6IHRydWUsXG4gIG1heDogMTAwXG59KVxuXG4uY29udHJvbGxlcignUHJvZ3Jlc3NDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJGF0dHJzJywgJ3Byb2dyZXNzQ29uZmlnJywgZnVuY3Rpb24oJHNjb3BlLCAkYXR0cnMsIHByb2dyZXNzQ29uZmlnKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzLFxuICAgICAgICBhbmltYXRlID0gYW5ndWxhci5pc0RlZmluZWQoJGF0dHJzLmFuaW1hdGUpID8gJHNjb3BlLiRwYXJlbnQuJGV2YWwoJGF0dHJzLmFuaW1hdGUpIDogcHJvZ3Jlc3NDb25maWcuYW5pbWF0ZTtcblxuICAgIHRoaXMuYmFycyA9IFtdO1xuICAgICRzY29wZS5tYXggPSBhbmd1bGFyLmlzRGVmaW5lZCgkYXR0cnMubWF4KSA/ICRzY29wZS4kcGFyZW50LiRldmFsKCRhdHRycy5tYXgpIDogcHJvZ3Jlc3NDb25maWcubWF4O1xuXG4gICAgdGhpcy5hZGRCYXIgPSBmdW5jdGlvbihiYXIsIGVsZW1lbnQpIHtcbiAgICAgICAgaWYgKCAhYW5pbWF0ZSApIHtcbiAgICAgICAgICAgIGVsZW1lbnQuY3NzKHsndHJhbnNpdGlvbic6ICdub25lJ30pO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5iYXJzLnB1c2goYmFyKTtcblxuICAgICAgICBiYXIuJHdhdGNoKCd2YWx1ZScsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcbiAgICAgICAgICAgIGJhci5wZXJjZW50ID0gKygxMDAgKiB2YWx1ZSAvICRzY29wZS5tYXgpLnRvRml4ZWQoMik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGJhci4kb24oJyRkZXN0cm95JywgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBlbGVtZW50ID0gbnVsbDtcbiAgICAgICAgICAgIHNlbGYucmVtb3ZlQmFyKGJhcik7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICB0aGlzLnJlbW92ZUJhciA9IGZ1bmN0aW9uKGJhcikge1xuICAgICAgICB0aGlzLmJhcnMuc3BsaWNlKHRoaXMuYmFycy5pbmRleE9mKGJhciksIDEpO1xuICAgIH07XG59XSlcblxuLmRpcmVjdGl2ZSgncHJvZ3Jlc3MnLCBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICByZXN0cmljdDogJ0VBJyxcbiAgICAgICAgcmVwbGFjZTogdHJ1ZSxcbiAgICAgICAgdHJhbnNjbHVkZTogdHJ1ZSxcbiAgICAgICAgY29udHJvbGxlcjogJ1Byb2dyZXNzQ29udHJvbGxlcicsXG4gICAgICAgIHJlcXVpcmU6ICdwcm9ncmVzcycsXG4gICAgICAgIHNjb3BlOiB7fSxcbiAgICAgICAgdGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZS9wcm9ncmVzc2Jhci9wcm9ncmVzcy5odG1sJ1xuICAgIH07XG59KVxuXG4uZGlyZWN0aXZlKCdiYXInLCBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICByZXN0cmljdDogJ0VBJyxcbiAgICAgICAgcmVwbGFjZTogdHJ1ZSxcbiAgICAgICAgdHJhbnNjbHVkZTogdHJ1ZSxcbiAgICAgICAgcmVxdWlyZTogJ15wcm9ncmVzcycsXG4gICAgICAgIHNjb3BlOiB7XG4gICAgICAgICAgICB2YWx1ZTogJz0nLFxuICAgICAgICAgICAgdHlwZTogJ0AnXG4gICAgICAgIH0sXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndGVtcGxhdGUvcHJvZ3Jlc3NiYXIvYmFyLmh0bWwnLFxuICAgICAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMsIHByb2dyZXNzQ3RybCkge1xuICAgICAgICAgICAgcHJvZ3Jlc3NDdHJsLmFkZEJhcihzY29wZSwgZWxlbWVudCk7XG4gICAgICAgIH1cbiAgICB9O1xufSlcblxuLmRpcmVjdGl2ZSgncHJvZ3Jlc3NiYXInLCBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICByZXN0cmljdDogJ0VBJyxcbiAgICAgICAgcmVwbGFjZTogdHJ1ZSxcbiAgICAgICAgdHJhbnNjbHVkZTogdHJ1ZSxcbiAgICAgICAgY29udHJvbGxlcjogJ1Byb2dyZXNzQ29udHJvbGxlcicsXG4gICAgICAgIHNjb3BlOiB7XG4gICAgICAgICAgICB2YWx1ZTogJz0nLFxuICAgICAgICAgICAgdHlwZTogJ0AnXG4gICAgICAgIH0sXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndGVtcGxhdGUvcHJvZ3Jlc3NiYXIvcHJvZ3Jlc3NiYXIuaHRtbCcsXG4gICAgICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbGVtZW50LCBhdHRycywgcHJvZ3Jlc3NDdHJsKSB7XG4gICAgICAgICAgICBwcm9ncmVzc0N0cmwuYWRkQmFyKHNjb3BlLCBhbmd1bGFyLmVsZW1lbnQoZWxlbWVudC5jaGlsZHJlbigpWzBdKSk7XG4gICAgICAgIH1cbiAgICB9O1xufSk7XG5hbmd1bGFyLm1vZHVsZSgndWkuYm9vdHN0cmFwLnJhdGluZycsIFtdKVxuXG4uY29uc3RhbnQoJ3JhdGluZ0NvbmZpZycsIHtcbiAgbWF4OiA1LFxuICBzdGF0ZU9uOiBudWxsLFxuICBzdGF0ZU9mZjogbnVsbFxufSlcblxuLmNvbnRyb2xsZXIoJ1JhdGluZ0NvbnRyb2xsZXInLCBbJyRzY29wZScsICckYXR0cnMnLCAncmF0aW5nQ29uZmlnJywgZnVuY3Rpb24oJHNjb3BlLCAkYXR0cnMsIHJhdGluZ0NvbmZpZykge1xuICB2YXIgbmdNb2RlbEN0cmwgID0geyAkc2V0Vmlld1ZhbHVlOiBhbmd1bGFyLm5vb3AgfTtcblxuICB0aGlzLmluaXQgPSBmdW5jdGlvbihuZ01vZGVsQ3RybF8pIHtcbiAgICBuZ01vZGVsQ3RybCA9IG5nTW9kZWxDdHJsXztcbiAgICBuZ01vZGVsQ3RybC4kcmVuZGVyID0gdGhpcy5yZW5kZXI7XG5cbiAgICB0aGlzLnN0YXRlT24gPSBhbmd1bGFyLmlzRGVmaW5lZCgkYXR0cnMuc3RhdGVPbikgPyAkc2NvcGUuJHBhcmVudC4kZXZhbCgkYXR0cnMuc3RhdGVPbikgOiByYXRpbmdDb25maWcuc3RhdGVPbjtcbiAgICB0aGlzLnN0YXRlT2ZmID0gYW5ndWxhci5pc0RlZmluZWQoJGF0dHJzLnN0YXRlT2ZmKSA/ICRzY29wZS4kcGFyZW50LiRldmFsKCRhdHRycy5zdGF0ZU9mZikgOiByYXRpbmdDb25maWcuc3RhdGVPZmY7XG5cbiAgICB2YXIgcmF0aW5nU3RhdGVzID0gYW5ndWxhci5pc0RlZmluZWQoJGF0dHJzLnJhdGluZ1N0YXRlcykgPyAkc2NvcGUuJHBhcmVudC4kZXZhbCgkYXR0cnMucmF0aW5nU3RhdGVzKSA6XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgQXJyYXkoIGFuZ3VsYXIuaXNEZWZpbmVkKCRhdHRycy5tYXgpID8gJHNjb3BlLiRwYXJlbnQuJGV2YWwoJGF0dHJzLm1heCkgOiByYXRpbmdDb25maWcubWF4ICk7XG4gICAgJHNjb3BlLnJhbmdlID0gdGhpcy5idWlsZFRlbXBsYXRlT2JqZWN0cyhyYXRpbmdTdGF0ZXMpO1xuICB9O1xuXG4gIHRoaXMuYnVpbGRUZW1wbGF0ZU9iamVjdHMgPSBmdW5jdGlvbihzdGF0ZXMpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IHN0YXRlcy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgIHN0YXRlc1tpXSA9IGFuZ3VsYXIuZXh0ZW5kKHsgaW5kZXg6IGkgfSwgeyBzdGF0ZU9uOiB0aGlzLnN0YXRlT24sIHN0YXRlT2ZmOiB0aGlzLnN0YXRlT2ZmIH0sIHN0YXRlc1tpXSk7XG4gICAgfVxuICAgIHJldHVybiBzdGF0ZXM7XG4gIH07XG5cbiAgJHNjb3BlLnJhdGUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIGlmICggISRzY29wZS5yZWFkb25seSAmJiB2YWx1ZSA+PSAwICYmIHZhbHVlIDw9ICRzY29wZS5yYW5nZS5sZW5ndGggKSB7XG4gICAgICBuZ01vZGVsQ3RybC4kc2V0Vmlld1ZhbHVlKHZhbHVlKTtcbiAgICAgIG5nTW9kZWxDdHJsLiRyZW5kZXIoKTtcbiAgICB9XG4gIH07XG5cbiAgJHNjb3BlLmVudGVyID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICBpZiAoICEkc2NvcGUucmVhZG9ubHkgKSB7XG4gICAgICAkc2NvcGUudmFsdWUgPSB2YWx1ZTtcbiAgICB9XG4gICAgJHNjb3BlLm9uSG92ZXIoe3ZhbHVlOiB2YWx1ZX0pO1xuICB9O1xuXG4gICRzY29wZS5yZXNldCA9IGZ1bmN0aW9uKCkge1xuICAgICRzY29wZS52YWx1ZSA9IG5nTW9kZWxDdHJsLiR2aWV3VmFsdWU7XG4gICAgJHNjb3BlLm9uTGVhdmUoKTtcbiAgfTtcblxuICAkc2NvcGUub25LZXlkb3duID0gZnVuY3Rpb24oZXZ0KSB7XG4gICAgaWYgKC8oMzd8Mzh8Mzl8NDApLy50ZXN0KGV2dC53aGljaCkpIHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZXZ0LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgJHNjb3BlLnJhdGUoICRzY29wZS52YWx1ZSArIChldnQud2hpY2ggPT09IDM4IHx8IGV2dC53aGljaCA9PT0gMzkgPyAxIDogLTEpICk7XG4gICAgfVxuICB9O1xuXG4gIHRoaXMucmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gICAgJHNjb3BlLnZhbHVlID0gbmdNb2RlbEN0cmwuJHZpZXdWYWx1ZTtcbiAgfTtcbn1dKVxuXG4uZGlyZWN0aXZlKCdyYXRpbmcnLCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogJ0VBJyxcbiAgICByZXF1aXJlOiBbJ3JhdGluZycsICduZ01vZGVsJ10sXG4gICAgc2NvcGU6IHtcbiAgICAgIHJlYWRvbmx5OiAnPT8nLFxuICAgICAgb25Ib3ZlcjogJyYnLFxuICAgICAgb25MZWF2ZTogJyYnXG4gICAgfSxcbiAgICBjb250cm9sbGVyOiAnUmF0aW5nQ29udHJvbGxlcicsXG4gICAgdGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZS9yYXRpbmcvcmF0aW5nLmh0bWwnLFxuICAgIHJlcGxhY2U6IHRydWUsXG4gICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJzLCBjdHJscykge1xuICAgICAgdmFyIHJhdGluZ0N0cmwgPSBjdHJsc1swXSwgbmdNb2RlbEN0cmwgPSBjdHJsc1sxXTtcblxuICAgICAgaWYgKCBuZ01vZGVsQ3RybCApIHtcbiAgICAgICAgcmF0aW5nQ3RybC5pbml0KCBuZ01vZGVsQ3RybCApO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbn0pO1xuXG4vKipcbiAqIEBuZ2RvYyBvdmVydmlld1xuICogQG5hbWUgdWkuYm9vdHN0cmFwLnRhYnNcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIEFuZ3VsYXJKUyB2ZXJzaW9uIG9mIHRoZSB0YWJzIGRpcmVjdGl2ZS5cbiAqL1xuXG5hbmd1bGFyLm1vZHVsZSgndWkuYm9vdHN0cmFwLnRhYnMnLCBbXSlcblxuLmNvbnRyb2xsZXIoJ1RhYnNldENvbnRyb2xsZXInLCBbJyRzY29wZScsIGZ1bmN0aW9uIFRhYnNldEN0cmwoJHNjb3BlKSB7XG4gIHZhciBjdHJsID0gdGhpcyxcbiAgICAgIHRhYnMgPSBjdHJsLnRhYnMgPSAkc2NvcGUudGFicyA9IFtdO1xuXG4gIGN0cmwuc2VsZWN0ID0gZnVuY3Rpb24oc2VsZWN0ZWRUYWIpIHtcbiAgICBhbmd1bGFyLmZvckVhY2godGFicywgZnVuY3Rpb24odGFiKSB7XG4gICAgICBpZiAodGFiLmFjdGl2ZSAmJiB0YWIgIT09IHNlbGVjdGVkVGFiKSB7XG4gICAgICAgIHRhYi5hY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgdGFiLm9uRGVzZWxlY3QoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBzZWxlY3RlZFRhYi5hY3RpdmUgPSB0cnVlO1xuICAgIHNlbGVjdGVkVGFiLm9uU2VsZWN0KCk7XG4gIH07XG5cbiAgY3RybC5hZGRUYWIgPSBmdW5jdGlvbiBhZGRUYWIodGFiKSB7XG4gICAgdGFicy5wdXNoKHRhYik7XG4gICAgLy8gd2UgY2FuJ3QgcnVuIHRoZSBzZWxlY3QgZnVuY3Rpb24gb24gdGhlIGZpcnN0IHRhYlxuICAgIC8vIHNpbmNlIHRoYXQgd291bGQgc2VsZWN0IGl0IHR3aWNlXG4gICAgaWYgKHRhYnMubGVuZ3RoID09PSAxKSB7XG4gICAgICB0YWIuYWN0aXZlID0gdHJ1ZTtcbiAgICB9IGVsc2UgaWYgKHRhYi5hY3RpdmUpIHtcbiAgICAgIGN0cmwuc2VsZWN0KHRhYik7XG4gICAgfVxuICB9O1xuXG4gIGN0cmwucmVtb3ZlVGFiID0gZnVuY3Rpb24gcmVtb3ZlVGFiKHRhYikge1xuICAgIHZhciBpbmRleCA9IHRhYnMuaW5kZXhPZih0YWIpO1xuICAgIC8vU2VsZWN0IGEgbmV3IHRhYiBpZiB0aGUgdGFiIHRvIGJlIHJlbW92ZWQgaXMgc2VsZWN0ZWRcbiAgICBpZiAodGFiLmFjdGl2ZSAmJiB0YWJzLmxlbmd0aCA+IDEpIHtcbiAgICAgIC8vSWYgdGhpcyBpcyB0aGUgbGFzdCB0YWIsIHNlbGVjdCB0aGUgcHJldmlvdXMgdGFiLiBlbHNlLCB0aGUgbmV4dCB0YWIuXG4gICAgICB2YXIgbmV3QWN0aXZlSW5kZXggPSBpbmRleCA9PSB0YWJzLmxlbmd0aCAtIDEgPyBpbmRleCAtIDEgOiBpbmRleCArIDE7XG4gICAgICBjdHJsLnNlbGVjdCh0YWJzW25ld0FjdGl2ZUluZGV4XSk7XG4gICAgfVxuICAgIHRhYnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgfTtcbn1dKVxuXG4vKipcbiAqIEBuZ2RvYyBkaXJlY3RpdmVcbiAqIEBuYW1lIHVpLmJvb3RzdHJhcC50YWJzLmRpcmVjdGl2ZTp0YWJzZXRcbiAqIEByZXN0cmljdCBFQVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICogVGFic2V0IGlzIHRoZSBvdXRlciBjb250YWluZXIgZm9yIHRoZSB0YWJzIGRpcmVjdGl2ZVxuICpcbiAqIEBwYXJhbSB7Ym9vbGVhbj19IHZlcnRpY2FsIFdoZXRoZXIgb3Igbm90IHRvIHVzZSB2ZXJ0aWNhbCBzdHlsaW5nIGZvciB0aGUgdGFicy5cbiAqIEBwYXJhbSB7Ym9vbGVhbj19IGp1c3RpZmllZCBXaGV0aGVyIG9yIG5vdCB0byB1c2UganVzdGlmaWVkIHN0eWxpbmcgZm9yIHRoZSB0YWJzLlxuICpcbiAqIEBleGFtcGxlXG48ZXhhbXBsZSBtb2R1bGU9XCJ1aS5ib290c3RyYXBcIj5cbiAgPGZpbGUgbmFtZT1cImluZGV4Lmh0bWxcIj5cbiAgICA8dGFic2V0PlxuICAgICAgPHRhYiBoZWFkaW5nPVwiVGFiIDFcIj48Yj5GaXJzdDwvYj4gQ29udGVudCE8L3RhYj5cbiAgICAgIDx0YWIgaGVhZGluZz1cIlRhYiAyXCI+PGk+U2Vjb25kPC9pPiBDb250ZW50ITwvdGFiPlxuICAgIDwvdGFic2V0PlxuICAgIDxociAvPlxuICAgIDx0YWJzZXQgdmVydGljYWw9XCJ0cnVlXCI+XG4gICAgICA8dGFiIGhlYWRpbmc9XCJWZXJ0aWNhbCBUYWIgMVwiPjxiPkZpcnN0PC9iPiBWZXJ0aWNhbCBDb250ZW50ITwvdGFiPlxuICAgICAgPHRhYiBoZWFkaW5nPVwiVmVydGljYWwgVGFiIDJcIj48aT5TZWNvbmQ8L2k+IFZlcnRpY2FsIENvbnRlbnQhPC90YWI+XG4gICAgPC90YWJzZXQ+XG4gICAgPHRhYnNldCBqdXN0aWZpZWQ9XCJ0cnVlXCI+XG4gICAgICA8dGFiIGhlYWRpbmc9XCJKdXN0aWZpZWQgVGFiIDFcIj48Yj5GaXJzdDwvYj4gSnVzdGlmaWVkIENvbnRlbnQhPC90YWI+XG4gICAgICA8dGFiIGhlYWRpbmc9XCJKdXN0aWZpZWQgVGFiIDJcIj48aT5TZWNvbmQ8L2k+IEp1c3RpZmllZCBDb250ZW50ITwvdGFiPlxuICAgIDwvdGFic2V0PlxuICA8L2ZpbGU+XG48L2V4YW1wbGU+XG4gKi9cbi5kaXJlY3RpdmUoJ3RhYnNldCcsIGZ1bmN0aW9uKCkge1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiAnRUEnLFxuICAgIHRyYW5zY2x1ZGU6IHRydWUsXG4gICAgcmVwbGFjZTogdHJ1ZSxcbiAgICBzY29wZToge1xuICAgICAgdHlwZTogJ0AnXG4gICAgfSxcbiAgICBjb250cm9sbGVyOiAnVGFic2V0Q29udHJvbGxlcicsXG4gICAgdGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZS90YWJzL3RhYnNldC5odG1sJyxcbiAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxlbWVudCwgYXR0cnMpIHtcbiAgICAgIHNjb3BlLnZlcnRpY2FsID0gYW5ndWxhci5pc0RlZmluZWQoYXR0cnMudmVydGljYWwpID8gc2NvcGUuJHBhcmVudC4kZXZhbChhdHRycy52ZXJ0aWNhbCkgOiBmYWxzZTtcbiAgICAgIHNjb3BlLmp1c3RpZmllZCA9IGFuZ3VsYXIuaXNEZWZpbmVkKGF0dHJzLmp1c3RpZmllZCkgPyBzY29wZS4kcGFyZW50LiRldmFsKGF0dHJzLmp1c3RpZmllZCkgOiBmYWxzZTtcbiAgICB9XG4gIH07XG59KVxuXG4vKipcbiAqIEBuZ2RvYyBkaXJlY3RpdmVcbiAqIEBuYW1lIHVpLmJvb3RzdHJhcC50YWJzLmRpcmVjdGl2ZTp0YWJcbiAqIEByZXN0cmljdCBFQVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nPX0gaGVhZGluZyBUaGUgdmlzaWJsZSBoZWFkaW5nLCBvciB0aXRsZSwgb2YgdGhlIHRhYi4gU2V0IEhUTUwgaGVhZGluZ3Mgd2l0aCB7QGxpbmsgdWkuYm9vdHN0cmFwLnRhYnMuZGlyZWN0aXZlOnRhYkhlYWRpbmcgdGFiSGVhZGluZ30uXG4gKiBAcGFyYW0ge3N0cmluZz19IHNlbGVjdCBBbiBleHByZXNzaW9uIHRvIGV2YWx1YXRlIHdoZW4gdGhlIHRhYiBpcyBzZWxlY3RlZC5cbiAqIEBwYXJhbSB7Ym9vbGVhbj19IGFjdGl2ZSBBIGJpbmRpbmcsIHRlbGxpbmcgd2hldGhlciBvciBub3QgdGhpcyB0YWIgaXMgc2VsZWN0ZWQuXG4gKiBAcGFyYW0ge2Jvb2xlYW49fSBkaXNhYmxlZCBBIGJpbmRpbmcsIHRlbGxpbmcgd2hldGhlciBvciBub3QgdGhpcyB0YWIgaXMgZGlzYWJsZWQuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBDcmVhdGVzIGEgdGFiIHdpdGggYSBoZWFkaW5nIGFuZCBjb250ZW50LiBNdXN0IGJlIHBsYWNlZCB3aXRoaW4gYSB7QGxpbmsgdWkuYm9vdHN0cmFwLnRhYnMuZGlyZWN0aXZlOnRhYnNldCB0YWJzZXR9LlxuICpcbiAqIEBleGFtcGxlXG48ZXhhbXBsZSBtb2R1bGU9XCJ1aS5ib290c3RyYXBcIj5cbiAgPGZpbGUgbmFtZT1cImluZGV4Lmh0bWxcIj5cbiAgICA8ZGl2IG5nLWNvbnRyb2xsZXI9XCJUYWJzRGVtb0N0cmxcIj5cbiAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLXNtYWxsXCIgbmctY2xpY2s9XCJpdGVtc1swXS5hY3RpdmUgPSB0cnVlXCI+XG4gICAgICAgIFNlbGVjdCBpdGVtIDEsIHVzaW5nIGFjdGl2ZSBiaW5kaW5nXG4gICAgICA8L2J1dHRvbj5cbiAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLXNtYWxsXCIgbmctY2xpY2s9XCJpdGVtc1sxXS5kaXNhYmxlZCA9ICFpdGVtc1sxXS5kaXNhYmxlZFwiPlxuICAgICAgICBFbmFibGUvZGlzYWJsZSBpdGVtIDIsIHVzaW5nIGRpc2FibGVkIGJpbmRpbmdcbiAgICAgIDwvYnV0dG9uPlxuICAgICAgPGJyIC8+XG4gICAgICA8dGFic2V0PlxuICAgICAgICA8dGFiIGhlYWRpbmc9XCJUYWIgMVwiPkZpcnN0IFRhYjwvdGFiPlxuICAgICAgICA8dGFiIHNlbGVjdD1cImFsZXJ0TWUoKVwiPlxuICAgICAgICAgIDx0YWItaGVhZGluZz48aSBjbGFzcz1cImljb24tYmVsbFwiPjwvaT4gQWxlcnQgbWUhPC90YWItaGVhZGluZz5cbiAgICAgICAgICBTZWNvbmQgVGFiLCB3aXRoIGFsZXJ0IGNhbGxiYWNrIGFuZCBodG1sIGhlYWRpbmchXG4gICAgICAgIDwvdGFiPlxuICAgICAgICA8dGFiIG5nLXJlcGVhdD1cIml0ZW0gaW4gaXRlbXNcIlxuICAgICAgICAgIGhlYWRpbmc9XCJ7e2l0ZW0udGl0bGV9fVwiXG4gICAgICAgICAgZGlzYWJsZWQ9XCJpdGVtLmRpc2FibGVkXCJcbiAgICAgICAgICBhY3RpdmU9XCJpdGVtLmFjdGl2ZVwiPlxuICAgICAgICAgIHt7aXRlbS5jb250ZW50fX1cbiAgICAgICAgPC90YWI+XG4gICAgICA8L3RhYnNldD5cbiAgICA8L2Rpdj5cbiAgPC9maWxlPlxuICA8ZmlsZSBuYW1lPVwic2NyaXB0LmpzXCI+XG4gICAgZnVuY3Rpb24gVGFic0RlbW9DdHJsKCRzY29wZSkge1xuICAgICAgJHNjb3BlLml0ZW1zID0gW1xuICAgICAgICB7IHRpdGxlOlwiRHluYW1pYyBUaXRsZSAxXCIsIGNvbnRlbnQ6XCJEeW5hbWljIEl0ZW0gMFwiIH0sXG4gICAgICAgIHsgdGl0bGU6XCJEeW5hbWljIFRpdGxlIDJcIiwgY29udGVudDpcIkR5bmFtaWMgSXRlbSAxXCIsIGRpc2FibGVkOiB0cnVlIH1cbiAgICAgIF07XG5cbiAgICAgICRzY29wZS5hbGVydE1lID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgYWxlcnQoXCJZb3UndmUgc2VsZWN0ZWQgdGhlIGFsZXJ0IHRhYiFcIik7XG4gICAgICAgIH0pO1xuICAgICAgfTtcbiAgICB9O1xuICA8L2ZpbGU+XG48L2V4YW1wbGU+XG4gKi9cblxuLyoqXG4gKiBAbmdkb2MgZGlyZWN0aXZlXG4gKiBAbmFtZSB1aS5ib290c3RyYXAudGFicy5kaXJlY3RpdmU6dGFiSGVhZGluZ1xuICogQHJlc3RyaWN0IEVBXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBDcmVhdGVzIGFuIEhUTUwgaGVhZGluZyBmb3IgYSB7QGxpbmsgdWkuYm9vdHN0cmFwLnRhYnMuZGlyZWN0aXZlOnRhYiB0YWJ9LiBNdXN0IGJlIHBsYWNlZCBhcyBhIGNoaWxkIG9mIGEgdGFiIGVsZW1lbnQuXG4gKlxuICogQGV4YW1wbGVcbjxleGFtcGxlIG1vZHVsZT1cInVpLmJvb3RzdHJhcFwiPlxuICA8ZmlsZSBuYW1lPVwiaW5kZXguaHRtbFwiPlxuICAgIDx0YWJzZXQ+XG4gICAgICA8dGFiPlxuICAgICAgICA8dGFiLWhlYWRpbmc+PGI+SFRNTDwvYj4gaW4gbXkgdGl0bGVzPyE8L3RhYi1oZWFkaW5nPlxuICAgICAgICBBbmQgc29tZSBjb250ZW50LCB0b28hXG4gICAgICA8L3RhYj5cbiAgICAgIDx0YWI+XG4gICAgICAgIDx0YWItaGVhZGluZz48aSBjbGFzcz1cImljb24taGVhcnRcIj48L2k+IEljb24gaGVhZGluZz8hPzwvdGFiLWhlYWRpbmc+XG4gICAgICAgIFRoYXQncyByaWdodC5cbiAgICAgIDwvdGFiPlxuICAgIDwvdGFic2V0PlxuICA8L2ZpbGU+XG48L2V4YW1wbGU+XG4gKi9cbi5kaXJlY3RpdmUoJ3RhYicsIFsnJHBhcnNlJywgZnVuY3Rpb24oJHBhcnNlKSB7XG4gIHJldHVybiB7XG4gICAgcmVxdWlyZTogJ150YWJzZXQnLFxuICAgIHJlc3RyaWN0OiAnRUEnLFxuICAgIHJlcGxhY2U6IHRydWUsXG4gICAgdGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZS90YWJzL3RhYi5odG1sJyxcbiAgICB0cmFuc2NsdWRlOiB0cnVlLFxuICAgIHNjb3BlOiB7XG4gICAgICBhY3RpdmU6ICc9PycsXG4gICAgICBoZWFkaW5nOiAnQCcsXG4gICAgICBvblNlbGVjdDogJyZzZWxlY3QnLCAvL1RoaXMgY2FsbGJhY2sgaXMgY2FsbGVkIGluIGNvbnRlbnRIZWFkaW5nVHJhbnNjbHVkZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAvL29uY2UgaXQgaW5zZXJ0cyB0aGUgdGFiJ3MgY29udGVudCBpbnRvIHRoZSBkb21cbiAgICAgIG9uRGVzZWxlY3Q6ICcmZGVzZWxlY3QnXG4gICAgfSxcbiAgICBjb250cm9sbGVyOiBmdW5jdGlvbigpIHtcbiAgICAgIC8vRW1wdHkgY29udHJvbGxlciBzbyBvdGhlciBkaXJlY3RpdmVzIGNhbiByZXF1aXJlIGJlaW5nICd1bmRlcicgYSB0YWJcbiAgICB9LFxuICAgIGNvbXBpbGU6IGZ1bmN0aW9uKGVsbSwgYXR0cnMsIHRyYW5zY2x1ZGUpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBwb3N0TGluayhzY29wZSwgZWxtLCBhdHRycywgdGFic2V0Q3RybCkge1xuICAgICAgICBzY29wZS4kd2F0Y2goJ2FjdGl2ZScsIGZ1bmN0aW9uKGFjdGl2ZSkge1xuICAgICAgICAgIGlmIChhY3RpdmUpIHtcbiAgICAgICAgICAgIHRhYnNldEN0cmwuc2VsZWN0KHNjb3BlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHNjb3BlLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgIGlmICggYXR0cnMuZGlzYWJsZWQgKSB7XG4gICAgICAgICAgc2NvcGUuJHBhcmVudC4kd2F0Y2goJHBhcnNlKGF0dHJzLmRpc2FibGVkKSwgZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIHNjb3BlLmRpc2FibGVkID0gISEgdmFsdWU7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBzY29wZS5zZWxlY3QgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAoICFzY29wZS5kaXNhYmxlZCApIHtcbiAgICAgICAgICAgIHNjb3BlLmFjdGl2ZSA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHRhYnNldEN0cmwuYWRkVGFiKHNjb3BlKTtcbiAgICAgICAgc2NvcGUuJG9uKCckZGVzdHJveScsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHRhYnNldEN0cmwucmVtb3ZlVGFiKHNjb3BlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy9XZSBuZWVkIHRvIHRyYW5zY2x1ZGUgbGF0ZXIsIG9uY2UgdGhlIGNvbnRlbnQgY29udGFpbmVyIGlzIHJlYWR5LlxuICAgICAgICAvL3doZW4gdGhpcyBsaW5rIGhhcHBlbnMsIHdlJ3JlIGluc2lkZSBhIHRhYiBoZWFkaW5nLlxuICAgICAgICBzY29wZS4kdHJhbnNjbHVkZUZuID0gdHJhbnNjbHVkZTtcbiAgICAgIH07XG4gICAgfVxuICB9O1xufV0pXG5cbi5kaXJlY3RpdmUoJ3RhYkhlYWRpbmdUcmFuc2NsdWRlJywgW2Z1bmN0aW9uKCkge1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiAnQScsXG4gICAgcmVxdWlyZTogJ150YWInLFxuICAgIGxpbms6IGZ1bmN0aW9uKHNjb3BlLCBlbG0sIGF0dHJzLCB0YWJDdHJsKSB7XG4gICAgICBzY29wZS4kd2F0Y2goJ2hlYWRpbmdFbGVtZW50JywgZnVuY3Rpb24gdXBkYXRlSGVhZGluZ0VsZW1lbnQoaGVhZGluZykge1xuICAgICAgICBpZiAoaGVhZGluZykge1xuICAgICAgICAgIGVsbS5odG1sKCcnKTtcbiAgICAgICAgICBlbG0uYXBwZW5kKGhlYWRpbmcpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XSlcblxuLmRpcmVjdGl2ZSgndGFiQ29udGVudFRyYW5zY2x1ZGUnLCBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIHtcbiAgICByZXN0cmljdDogJ0EnLFxuICAgIHJlcXVpcmU6ICdedGFic2V0JyxcbiAgICBsaW5rOiBmdW5jdGlvbihzY29wZSwgZWxtLCBhdHRycykge1xuICAgICAgdmFyIHRhYiA9IHNjb3BlLiRldmFsKGF0dHJzLnRhYkNvbnRlbnRUcmFuc2NsdWRlKTtcblxuICAgICAgLy9Ob3cgb3VyIHRhYiBpcyByZWFkeSB0byBiZSB0cmFuc2NsdWRlZDogYm90aCB0aGUgdGFiIGhlYWRpbmcgYXJlYVxuICAgICAgLy9hbmQgdGhlIHRhYiBjb250ZW50IGFyZWEgYXJlIGxvYWRlZC4gIFRyYW5zY2x1ZGUgJ2VtIGJvdGguXG4gICAgICB0YWIuJHRyYW5zY2x1ZGVGbih0YWIuJHBhcmVudCwgZnVuY3Rpb24oY29udGVudHMpIHtcbiAgICAgICAgYW5ndWxhci5mb3JFYWNoKGNvbnRlbnRzLCBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgaWYgKGlzVGFiSGVhZGluZyhub2RlKSkge1xuICAgICAgICAgICAgLy9MZXQgdGFiSGVhZGluZ1RyYW5zY2x1ZGUga25vdy5cbiAgICAgICAgICAgIHRhYi5oZWFkaW5nRWxlbWVudCA9IG5vZGU7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVsbS5hcHBlbmQobm9kZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gaXNUYWJIZWFkaW5nKG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZS50YWdOYW1lICYmICAoXG4gICAgICBub2RlLmhhc0F0dHJpYnV0ZSgndGFiLWhlYWRpbmcnKSB8fFxuICAgICAgbm9kZS5oYXNBdHRyaWJ1dGUoJ2RhdGEtdGFiLWhlYWRpbmcnKSB8fFxuICAgICAgbm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICd0YWItaGVhZGluZycgfHxcbiAgICAgIG5vZGUudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnZGF0YS10YWItaGVhZGluZydcbiAgICApO1xuICB9XG59KVxuXG47XG5cbmFuZ3VsYXIubW9kdWxlKCd1aS5ib290c3RyYXAudGltZXBpY2tlcicsIFtdKVxuXG4uY29uc3RhbnQoJ3RpbWVwaWNrZXJDb25maWcnLCB7XG4gIGhvdXJTdGVwOiAxLFxuICBtaW51dGVTdGVwOiAxLFxuICBzaG93TWVyaWRpYW46IHRydWUsXG4gIG1lcmlkaWFuczogbnVsbCxcbiAgcmVhZG9ubHlJbnB1dDogZmFsc2UsXG4gIG1vdXNld2hlZWw6IHRydWVcbn0pXG5cbi5jb250cm9sbGVyKCdUaW1lcGlja2VyQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRhdHRycycsICckcGFyc2UnLCAnJGxvZycsICckbG9jYWxlJywgJ3RpbWVwaWNrZXJDb25maWcnLCBmdW5jdGlvbigkc2NvcGUsICRhdHRycywgJHBhcnNlLCAkbG9nLCAkbG9jYWxlLCB0aW1lcGlja2VyQ29uZmlnKSB7XG4gIHZhciBzZWxlY3RlZCA9IG5ldyBEYXRlKCksXG4gICAgICBuZ01vZGVsQ3RybCA9IHsgJHNldFZpZXdWYWx1ZTogYW5ndWxhci5ub29wIH0sIC8vIG51bGxNb2RlbEN0cmxcbiAgICAgIG1lcmlkaWFucyA9IGFuZ3VsYXIuaXNEZWZpbmVkKCRhdHRycy5tZXJpZGlhbnMpID8gJHNjb3BlLiRwYXJlbnQuJGV2YWwoJGF0dHJzLm1lcmlkaWFucykgOiB0aW1lcGlja2VyQ29uZmlnLm1lcmlkaWFucyB8fCAkbG9jYWxlLkRBVEVUSU1FX0ZPUk1BVFMuQU1QTVM7XG5cbiAgdGhpcy5pbml0ID0gZnVuY3Rpb24oIG5nTW9kZWxDdHJsXywgaW5wdXRzICkge1xuICAgIG5nTW9kZWxDdHJsID0gbmdNb2RlbEN0cmxfO1xuICAgIG5nTW9kZWxDdHJsLiRyZW5kZXIgPSB0aGlzLnJlbmRlcjtcblxuICAgIHZhciBob3Vyc0lucHV0RWwgPSBpbnB1dHMuZXEoMCksXG4gICAgICAgIG1pbnV0ZXNJbnB1dEVsID0gaW5wdXRzLmVxKDEpO1xuXG4gICAgdmFyIG1vdXNld2hlZWwgPSBhbmd1bGFyLmlzRGVmaW5lZCgkYXR0cnMubW91c2V3aGVlbCkgPyAkc2NvcGUuJHBhcmVudC4kZXZhbCgkYXR0cnMubW91c2V3aGVlbCkgOiB0aW1lcGlja2VyQ29uZmlnLm1vdXNld2hlZWw7XG4gICAgaWYgKCBtb3VzZXdoZWVsICkge1xuICAgICAgdGhpcy5zZXR1cE1vdXNld2hlZWxFdmVudHMoIGhvdXJzSW5wdXRFbCwgbWludXRlc0lucHV0RWwgKTtcbiAgICB9XG5cbiAgICAkc2NvcGUucmVhZG9ubHlJbnB1dCA9IGFuZ3VsYXIuaXNEZWZpbmVkKCRhdHRycy5yZWFkb25seUlucHV0KSA/ICRzY29wZS4kcGFyZW50LiRldmFsKCRhdHRycy5yZWFkb25seUlucHV0KSA6IHRpbWVwaWNrZXJDb25maWcucmVhZG9ubHlJbnB1dDtcbiAgICB0aGlzLnNldHVwSW5wdXRFdmVudHMoIGhvdXJzSW5wdXRFbCwgbWludXRlc0lucHV0RWwgKTtcbiAgfTtcblxuICB2YXIgaG91clN0ZXAgPSB0aW1lcGlja2VyQ29uZmlnLmhvdXJTdGVwO1xuICBpZiAoJGF0dHJzLmhvdXJTdGVwKSB7XG4gICAgJHNjb3BlLiRwYXJlbnQuJHdhdGNoKCRwYXJzZSgkYXR0cnMuaG91clN0ZXApLCBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgaG91clN0ZXAgPSBwYXJzZUludCh2YWx1ZSwgMTApO1xuICAgIH0pO1xuICB9XG5cbiAgdmFyIG1pbnV0ZVN0ZXAgPSB0aW1lcGlja2VyQ29uZmlnLm1pbnV0ZVN0ZXA7XG4gIGlmICgkYXR0cnMubWludXRlU3RlcCkge1xuICAgICRzY29wZS4kcGFyZW50LiR3YXRjaCgkcGFyc2UoJGF0dHJzLm1pbnV0ZVN0ZXApLCBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgbWludXRlU3RlcCA9IHBhcnNlSW50KHZhbHVlLCAxMCk7XG4gICAgfSk7XG4gIH1cblxuICAvLyAxMkggLyAyNEggbW9kZVxuICAkc2NvcGUuc2hvd01lcmlkaWFuID0gdGltZXBpY2tlckNvbmZpZy5zaG93TWVyaWRpYW47XG4gIGlmICgkYXR0cnMuc2hvd01lcmlkaWFuKSB7XG4gICAgJHNjb3BlLiRwYXJlbnQuJHdhdGNoKCRwYXJzZSgkYXR0cnMuc2hvd01lcmlkaWFuKSwgZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICRzY29wZS5zaG93TWVyaWRpYW4gPSAhIXZhbHVlO1xuXG4gICAgICBpZiAoIG5nTW9kZWxDdHJsLiRlcnJvci50aW1lICkge1xuICAgICAgICAvLyBFdmFsdWF0ZSBmcm9tIHRlbXBsYXRlXG4gICAgICAgIHZhciBob3VycyA9IGdldEhvdXJzRnJvbVRlbXBsYXRlKCksIG1pbnV0ZXMgPSBnZXRNaW51dGVzRnJvbVRlbXBsYXRlKCk7XG4gICAgICAgIGlmIChhbmd1bGFyLmlzRGVmaW5lZCggaG91cnMgKSAmJiBhbmd1bGFyLmlzRGVmaW5lZCggbWludXRlcyApKSB7XG4gICAgICAgICAgc2VsZWN0ZWQuc2V0SG91cnMoIGhvdXJzICk7XG4gICAgICAgICAgcmVmcmVzaCgpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB1cGRhdGVUZW1wbGF0ZSgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLy8gR2V0ICRzY29wZS5ob3VycyBpbiAyNEggbW9kZSBpZiB2YWxpZFxuICBmdW5jdGlvbiBnZXRIb3Vyc0Zyb21UZW1wbGF0ZSAoICkge1xuICAgIHZhciBob3VycyA9IHBhcnNlSW50KCAkc2NvcGUuaG91cnMsIDEwICk7XG4gICAgdmFyIHZhbGlkID0gKCAkc2NvcGUuc2hvd01lcmlkaWFuICkgPyAoaG91cnMgPiAwICYmIGhvdXJzIDwgMTMpIDogKGhvdXJzID49IDAgJiYgaG91cnMgPCAyNCk7XG4gICAgaWYgKCAhdmFsaWQgKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGlmICggJHNjb3BlLnNob3dNZXJpZGlhbiApIHtcbiAgICAgIGlmICggaG91cnMgPT09IDEyICkge1xuICAgICAgICBob3VycyA9IDA7XG4gICAgICB9XG4gICAgICBpZiAoICRzY29wZS5tZXJpZGlhbiA9PT0gbWVyaWRpYW5zWzFdICkge1xuICAgICAgICBob3VycyA9IGhvdXJzICsgMTI7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBob3VycztcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldE1pbnV0ZXNGcm9tVGVtcGxhdGUoKSB7XG4gICAgdmFyIG1pbnV0ZXMgPSBwYXJzZUludCgkc2NvcGUubWludXRlcywgMTApO1xuICAgIHJldHVybiAoIG1pbnV0ZXMgPj0gMCAmJiBtaW51dGVzIDwgNjAgKSA/IG1pbnV0ZXMgOiB1bmRlZmluZWQ7XG4gIH1cblxuICBmdW5jdGlvbiBwYWQoIHZhbHVlICkge1xuICAgIHJldHVybiAoIGFuZ3VsYXIuaXNEZWZpbmVkKHZhbHVlKSAmJiB2YWx1ZS50b1N0cmluZygpLmxlbmd0aCA8IDIgKSA/ICcwJyArIHZhbHVlIDogdmFsdWU7XG4gIH1cblxuICAvLyBSZXNwb25kIG9uIG1vdXNld2hlZWwgc3BpblxuICB0aGlzLnNldHVwTW91c2V3aGVlbEV2ZW50cyA9IGZ1bmN0aW9uKCBob3Vyc0lucHV0RWwsIG1pbnV0ZXNJbnB1dEVsICkge1xuICAgIHZhciBpc1Njcm9sbGluZ1VwID0gZnVuY3Rpb24oZSkge1xuICAgICAgaWYgKGUub3JpZ2luYWxFdmVudCkge1xuICAgICAgICBlID0gZS5vcmlnaW5hbEV2ZW50O1xuICAgICAgfVxuICAgICAgLy9waWNrIGNvcnJlY3QgZGVsdGEgdmFyaWFibGUgZGVwZW5kaW5nIG9uIGV2ZW50XG4gICAgICB2YXIgZGVsdGEgPSAoZS53aGVlbERlbHRhKSA/IGUud2hlZWxEZWx0YSA6IC1lLmRlbHRhWTtcbiAgICAgIHJldHVybiAoZS5kZXRhaWwgfHwgZGVsdGEgPiAwKTtcbiAgICB9O1xuXG4gICAgaG91cnNJbnB1dEVsLmJpbmQoJ21vdXNld2hlZWwgd2hlZWwnLCBmdW5jdGlvbihlKSB7XG4gICAgICAkc2NvcGUuJGFwcGx5KCAoaXNTY3JvbGxpbmdVcChlKSkgPyAkc2NvcGUuaW5jcmVtZW50SG91cnMoKSA6ICRzY29wZS5kZWNyZW1lbnRIb3VycygpICk7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSk7XG5cbiAgICBtaW51dGVzSW5wdXRFbC5iaW5kKCdtb3VzZXdoZWVsIHdoZWVsJywgZnVuY3Rpb24oZSkge1xuICAgICAgJHNjb3BlLiRhcHBseSggKGlzU2Nyb2xsaW5nVXAoZSkpID8gJHNjb3BlLmluY3JlbWVudE1pbnV0ZXMoKSA6ICRzY29wZS5kZWNyZW1lbnRNaW51dGVzKCkgKTtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcblxuICB9O1xuXG4gIHRoaXMuc2V0dXBJbnB1dEV2ZW50cyA9IGZ1bmN0aW9uKCBob3Vyc0lucHV0RWwsIG1pbnV0ZXNJbnB1dEVsICkge1xuICAgIGlmICggJHNjb3BlLnJlYWRvbmx5SW5wdXQgKSB7XG4gICAgICAkc2NvcGUudXBkYXRlSG91cnMgPSBhbmd1bGFyLm5vb3A7XG4gICAgICAkc2NvcGUudXBkYXRlTWludXRlcyA9IGFuZ3VsYXIubm9vcDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YXIgaW52YWxpZGF0ZSA9IGZ1bmN0aW9uKGludmFsaWRIb3VycywgaW52YWxpZE1pbnV0ZXMpIHtcbiAgICAgIG5nTW9kZWxDdHJsLiRzZXRWaWV3VmFsdWUoIG51bGwgKTtcbiAgICAgIG5nTW9kZWxDdHJsLiRzZXRWYWxpZGl0eSgndGltZScsIGZhbHNlKTtcbiAgICAgIGlmIChhbmd1bGFyLmlzRGVmaW5lZChpbnZhbGlkSG91cnMpKSB7XG4gICAgICAgICRzY29wZS5pbnZhbGlkSG91cnMgPSBpbnZhbGlkSG91cnM7XG4gICAgICB9XG4gICAgICBpZiAoYW5ndWxhci5pc0RlZmluZWQoaW52YWxpZE1pbnV0ZXMpKSB7XG4gICAgICAgICRzY29wZS5pbnZhbGlkTWludXRlcyA9IGludmFsaWRNaW51dGVzO1xuICAgICAgfVxuICAgIH07XG5cbiAgICAkc2NvcGUudXBkYXRlSG91cnMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBob3VycyA9IGdldEhvdXJzRnJvbVRlbXBsYXRlKCk7XG5cbiAgICAgIGlmICggYW5ndWxhci5pc0RlZmluZWQoaG91cnMpICkge1xuICAgICAgICBzZWxlY3RlZC5zZXRIb3VycyggaG91cnMgKTtcbiAgICAgICAgcmVmcmVzaCggJ2gnICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpbnZhbGlkYXRlKHRydWUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBob3Vyc0lucHV0RWwuYmluZCgnYmx1cicsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIGlmICggISRzY29wZS5pbnZhbGlkSG91cnMgJiYgJHNjb3BlLmhvdXJzIDwgMTApIHtcbiAgICAgICAgJHNjb3BlLiRhcHBseSggZnVuY3Rpb24oKSB7XG4gICAgICAgICAgJHNjb3BlLmhvdXJzID0gcGFkKCAkc2NvcGUuaG91cnMgKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAkc2NvcGUudXBkYXRlTWludXRlcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIG1pbnV0ZXMgPSBnZXRNaW51dGVzRnJvbVRlbXBsYXRlKCk7XG5cbiAgICAgIGlmICggYW5ndWxhci5pc0RlZmluZWQobWludXRlcykgKSB7XG4gICAgICAgIHNlbGVjdGVkLnNldE1pbnV0ZXMoIG1pbnV0ZXMgKTtcbiAgICAgICAgcmVmcmVzaCggJ20nICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpbnZhbGlkYXRlKHVuZGVmaW5lZCwgdHJ1ZSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIG1pbnV0ZXNJbnB1dEVsLmJpbmQoJ2JsdXInLCBmdW5jdGlvbihlKSB7XG4gICAgICBpZiAoICEkc2NvcGUuaW52YWxpZE1pbnV0ZXMgJiYgJHNjb3BlLm1pbnV0ZXMgPCAxMCApIHtcbiAgICAgICAgJHNjb3BlLiRhcHBseSggZnVuY3Rpb24oKSB7XG4gICAgICAgICAgJHNjb3BlLm1pbnV0ZXMgPSBwYWQoICRzY29wZS5taW51dGVzICk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuXG4gIH07XG5cbiAgdGhpcy5yZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgZGF0ZSA9IG5nTW9kZWxDdHJsLiRtb2RlbFZhbHVlID8gbmV3IERhdGUoIG5nTW9kZWxDdHJsLiRtb2RlbFZhbHVlICkgOiBudWxsO1xuXG4gICAgaWYgKCBpc05hTihkYXRlKSApIHtcbiAgICAgIG5nTW9kZWxDdHJsLiRzZXRWYWxpZGl0eSgndGltZScsIGZhbHNlKTtcbiAgICAgICRsb2cuZXJyb3IoJ1RpbWVwaWNrZXIgZGlyZWN0aXZlOiBcIm5nLW1vZGVsXCIgdmFsdWUgbXVzdCBiZSBhIERhdGUgb2JqZWN0LCBhIG51bWJlciBvZiBtaWxsaXNlY29uZHMgc2luY2UgMDEuMDEuMTk3MCBvciBhIHN0cmluZyByZXByZXNlbnRpbmcgYW4gUkZDMjgyMiBvciBJU08gODYwMSBkYXRlLicpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoIGRhdGUgKSB7XG4gICAgICAgIHNlbGVjdGVkID0gZGF0ZTtcbiAgICAgIH1cbiAgICAgIG1ha2VWYWxpZCgpO1xuICAgICAgdXBkYXRlVGVtcGxhdGUoKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gQ2FsbCBpbnRlcm5hbGx5IHdoZW4gd2Uga25vdyB0aGF0IG1vZGVsIGlzIHZhbGlkLlxuICBmdW5jdGlvbiByZWZyZXNoKCBrZXlib2FyZENoYW5nZSApIHtcbiAgICBtYWtlVmFsaWQoKTtcbiAgICBuZ01vZGVsQ3RybC4kc2V0Vmlld1ZhbHVlKCBuZXcgRGF0ZShzZWxlY3RlZCkgKTtcbiAgICB1cGRhdGVUZW1wbGF0ZSgga2V5Ym9hcmRDaGFuZ2UgKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG1ha2VWYWxpZCgpIHtcbiAgICBuZ01vZGVsQ3RybC4kc2V0VmFsaWRpdHkoJ3RpbWUnLCB0cnVlKTtcbiAgICAkc2NvcGUuaW52YWxpZEhvdXJzID0gZmFsc2U7XG4gICAgJHNjb3BlLmludmFsaWRNaW51dGVzID0gZmFsc2U7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVUZW1wbGF0ZSgga2V5Ym9hcmRDaGFuZ2UgKSB7XG4gICAgdmFyIGhvdXJzID0gc2VsZWN0ZWQuZ2V0SG91cnMoKSwgbWludXRlcyA9IHNlbGVjdGVkLmdldE1pbnV0ZXMoKTtcblxuICAgIGlmICggJHNjb3BlLnNob3dNZXJpZGlhbiApIHtcbiAgICAgIGhvdXJzID0gKCBob3VycyA9PT0gMCB8fCBob3VycyA9PT0gMTIgKSA/IDEyIDogaG91cnMgJSAxMjsgLy8gQ29udmVydCAyNCB0byAxMiBob3VyIHN5c3RlbVxuICAgIH1cblxuICAgICRzY29wZS5ob3VycyA9IGtleWJvYXJkQ2hhbmdlID09PSAnaCcgPyBob3VycyA6IHBhZChob3Vycyk7XG4gICAgJHNjb3BlLm1pbnV0ZXMgPSBrZXlib2FyZENoYW5nZSA9PT0gJ20nID8gbWludXRlcyA6IHBhZChtaW51dGVzKTtcbiAgICAkc2NvcGUubWVyaWRpYW4gPSBzZWxlY3RlZC5nZXRIb3VycygpIDwgMTIgPyBtZXJpZGlhbnNbMF0gOiBtZXJpZGlhbnNbMV07XG4gIH1cblxuICBmdW5jdGlvbiBhZGRNaW51dGVzKCBtaW51dGVzICkge1xuICAgIHZhciBkdCA9IG5ldyBEYXRlKCBzZWxlY3RlZC5nZXRUaW1lKCkgKyBtaW51dGVzICogNjAwMDAgKTtcbiAgICBzZWxlY3RlZC5zZXRIb3VycyggZHQuZ2V0SG91cnMoKSwgZHQuZ2V0TWludXRlcygpICk7XG4gICAgcmVmcmVzaCgpO1xuICB9XG5cbiAgJHNjb3BlLmluY3JlbWVudEhvdXJzID0gZnVuY3Rpb24oKSB7XG4gICAgYWRkTWludXRlcyggaG91clN0ZXAgKiA2MCApO1xuICB9O1xuICAkc2NvcGUuZGVjcmVtZW50SG91cnMgPSBmdW5jdGlvbigpIHtcbiAgICBhZGRNaW51dGVzKCAtIGhvdXJTdGVwICogNjAgKTtcbiAgfTtcbiAgJHNjb3BlLmluY3JlbWVudE1pbnV0ZXMgPSBmdW5jdGlvbigpIHtcbiAgICBhZGRNaW51dGVzKCBtaW51dGVTdGVwICk7XG4gIH07XG4gICRzY29wZS5kZWNyZW1lbnRNaW51dGVzID0gZnVuY3Rpb24oKSB7XG4gICAgYWRkTWludXRlcyggLSBtaW51dGVTdGVwICk7XG4gIH07XG4gICRzY29wZS50b2dnbGVNZXJpZGlhbiA9IGZ1bmN0aW9uKCkge1xuICAgIGFkZE1pbnV0ZXMoIDEyICogNjAgKiAoKCBzZWxlY3RlZC5nZXRIb3VycygpIDwgMTIgKSA/IDEgOiAtMSkgKTtcbiAgfTtcbn1dKVxuXG4uZGlyZWN0aXZlKCd0aW1lcGlja2VyJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiAnRUEnLFxuICAgIHJlcXVpcmU6IFsndGltZXBpY2tlcicsICc/Xm5nTW9kZWwnXSxcbiAgICBjb250cm9sbGVyOidUaW1lcGlja2VyQ29udHJvbGxlcicsXG4gICAgcmVwbGFjZTogdHJ1ZSxcbiAgICBzY29wZToge30sXG4gICAgdGVtcGxhdGVVcmw6ICd0ZW1wbGF0ZS90aW1lcGlja2VyL3RpbWVwaWNrZXIuaHRtbCcsXG4gICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJzLCBjdHJscykge1xuICAgICAgdmFyIHRpbWVwaWNrZXJDdHJsID0gY3RybHNbMF0sIG5nTW9kZWxDdHJsID0gY3RybHNbMV07XG5cbiAgICAgIGlmICggbmdNb2RlbEN0cmwgKSB7XG4gICAgICAgIHRpbWVwaWNrZXJDdHJsLmluaXQoIG5nTW9kZWxDdHJsLCBlbGVtZW50LmZpbmQoJ2lucHV0JykgKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59KTtcblxuYW5ndWxhci5tb2R1bGUoJ3VpLmJvb3RzdHJhcC50eXBlYWhlYWQnLCBbJ3VpLmJvb3RzdHJhcC5wb3NpdGlvbicsICd1aS5ib290c3RyYXAuYmluZEh0bWwnXSlcblxuLyoqXG4gKiBBIGhlbHBlciBzZXJ2aWNlIHRoYXQgY2FuIHBhcnNlIHR5cGVhaGVhZCdzIHN5bnRheCAoc3RyaW5nIHByb3ZpZGVkIGJ5IHVzZXJzKVxuICogRXh0cmFjdGVkIHRvIGEgc2VwYXJhdGUgc2VydmljZSBmb3IgZWFzZSBvZiB1bml0IHRlc3RpbmdcbiAqL1xuICAuZmFjdG9yeSgndHlwZWFoZWFkUGFyc2VyJywgWyckcGFyc2UnLCBmdW5jdGlvbiAoJHBhcnNlKSB7XG5cbiAgLy8gICAgICAgICAgICAgICAgICAgICAgMDAwMDAxMTEwMDAwMDAwMDAwMDAwMjIyMDAwMDAwMDAwMDAwMDAwMDMzMzMzMzMzMzMzMzMzMzAwMDAwMDAwMDAwNDQwMDBcbiAgdmFyIFRZUEVBSEVBRF9SRUdFWFAgPSAvXlxccyooW1xcc1xcU10rPykoPzpcXHMrYXNcXHMrKFtcXHNcXFNdKz8pKT9cXHMrZm9yXFxzKyg/OihbXFwkXFx3XVtcXCRcXHdcXGRdKikpXFxzK2luXFxzKyhbXFxzXFxTXSs/KSQvO1xuXG4gIHJldHVybiB7XG4gICAgcGFyc2U6ZnVuY3Rpb24gKGlucHV0KSB7XG5cbiAgICAgIHZhciBtYXRjaCA9IGlucHV0Lm1hdGNoKFRZUEVBSEVBRF9SRUdFWFApO1xuICAgICAgaWYgKCFtYXRjaCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgJ0V4cGVjdGVkIHR5cGVhaGVhZCBzcGVjaWZpY2F0aW9uIGluIGZvcm0gb2YgXCJfbW9kZWxWYWx1ZV8gKGFzIF9sYWJlbF8pPyBmb3IgX2l0ZW1fIGluIF9jb2xsZWN0aW9uX1wiJyArXG4gICAgICAgICAgICAnIGJ1dCBnb3QgXCInICsgaW5wdXQgKyAnXCIuJyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGl0ZW1OYW1lOm1hdGNoWzNdLFxuICAgICAgICBzb3VyY2U6JHBhcnNlKG1hdGNoWzRdKSxcbiAgICAgICAgdmlld01hcHBlcjokcGFyc2UobWF0Y2hbMl0gfHwgbWF0Y2hbMV0pLFxuICAgICAgICBtb2RlbE1hcHBlcjokcGFyc2UobWF0Y2hbMV0pXG4gICAgICB9O1xuICAgIH1cbiAgfTtcbn1dKVxuXG4gIC5kaXJlY3RpdmUoJ3R5cGVhaGVhZCcsIFsnJGNvbXBpbGUnLCAnJHBhcnNlJywgJyRxJywgJyR0aW1lb3V0JywgJyRkb2N1bWVudCcsICckcG9zaXRpb24nLCAndHlwZWFoZWFkUGFyc2VyJyxcbiAgICBmdW5jdGlvbiAoJGNvbXBpbGUsICRwYXJzZSwgJHEsICR0aW1lb3V0LCAkZG9jdW1lbnQsICRwb3NpdGlvbiwgdHlwZWFoZWFkUGFyc2VyKSB7XG5cbiAgdmFyIEhPVF9LRVlTID0gWzksIDEzLCAyNywgMzgsIDQwXTtcblxuICByZXR1cm4ge1xuICAgIHJlcXVpcmU6J25nTW9kZWwnLFxuICAgIGxpbms6ZnVuY3Rpb24gKG9yaWdpbmFsU2NvcGUsIGVsZW1lbnQsIGF0dHJzLCBtb2RlbEN0cmwpIHtcblxuICAgICAgLy9TVVBQT1JURUQgQVRUUklCVVRFUyAoT1BUSU9OUylcblxuICAgICAgLy9taW5pbWFsIG5vIG9mIGNoYXJhY3RlcnMgdGhhdCBuZWVkcyB0byBiZSBlbnRlcmVkIGJlZm9yZSB0eXBlYWhlYWQga2lja3MtaW5cbiAgICAgIHZhciBtaW5TZWFyY2ggPSBvcmlnaW5hbFNjb3BlLiRldmFsKGF0dHJzLnR5cGVhaGVhZE1pbkxlbmd0aCkgfHwgMTtcblxuICAgICAgLy9taW5pbWFsIHdhaXQgdGltZSBhZnRlciBsYXN0IGNoYXJhY3RlciB0eXBlZCBiZWZvcmUgdHlwZWhlYWQga2lja3MtaW5cbiAgICAgIHZhciB3YWl0VGltZSA9IG9yaWdpbmFsU2NvcGUuJGV2YWwoYXR0cnMudHlwZWFoZWFkV2FpdE1zKSB8fCAwO1xuXG4gICAgICAvL3Nob3VsZCBpdCByZXN0cmljdCBtb2RlbCB2YWx1ZXMgdG8gdGhlIG9uZXMgc2VsZWN0ZWQgZnJvbSB0aGUgcG9wdXAgb25seT9cbiAgICAgIHZhciBpc0VkaXRhYmxlID0gb3JpZ2luYWxTY29wZS4kZXZhbChhdHRycy50eXBlYWhlYWRFZGl0YWJsZSkgIT09IGZhbHNlO1xuXG4gICAgICAvL2JpbmRpbmcgdG8gYSB2YXJpYWJsZSB0aGF0IGluZGljYXRlcyBpZiBtYXRjaGVzIGFyZSBiZWluZyByZXRyaWV2ZWQgYXN5bmNocm9ub3VzbHlcbiAgICAgIHZhciBpc0xvYWRpbmdTZXR0ZXIgPSAkcGFyc2UoYXR0cnMudHlwZWFoZWFkTG9hZGluZykuYXNzaWduIHx8IGFuZ3VsYXIubm9vcDtcblxuICAgICAgLy9hIGNhbGxiYWNrIGV4ZWN1dGVkIHdoZW4gYSBtYXRjaCBpcyBzZWxlY3RlZFxuICAgICAgdmFyIG9uU2VsZWN0Q2FsbGJhY2sgPSAkcGFyc2UoYXR0cnMudHlwZWFoZWFkT25TZWxlY3QpO1xuXG4gICAgICB2YXIgaW5wdXRGb3JtYXR0ZXIgPSBhdHRycy50eXBlYWhlYWRJbnB1dEZvcm1hdHRlciA/ICRwYXJzZShhdHRycy50eXBlYWhlYWRJbnB1dEZvcm1hdHRlcikgOiB1bmRlZmluZWQ7XG5cbiAgICAgIHZhciBhcHBlbmRUb0JvZHkgPSAgYXR0cnMudHlwZWFoZWFkQXBwZW5kVG9Cb2R5ID8gb3JpZ2luYWxTY29wZS4kZXZhbChhdHRycy50eXBlYWhlYWRBcHBlbmRUb0JvZHkpIDogZmFsc2U7XG5cbiAgICAgIC8vSU5URVJOQUwgVkFSSUFCTEVTXG5cbiAgICAgIC8vbW9kZWwgc2V0dGVyIGV4ZWN1dGVkIHVwb24gbWF0Y2ggc2VsZWN0aW9uXG4gICAgICB2YXIgJHNldE1vZGVsVmFsdWUgPSAkcGFyc2UoYXR0cnMubmdNb2RlbCkuYXNzaWduO1xuXG4gICAgICAvL2V4cHJlc3Npb25zIHVzZWQgYnkgdHlwZWFoZWFkXG4gICAgICB2YXIgcGFyc2VyUmVzdWx0ID0gdHlwZWFoZWFkUGFyc2VyLnBhcnNlKGF0dHJzLnR5cGVhaGVhZCk7XG5cbiAgICAgIHZhciBoYXNGb2N1cztcblxuICAgICAgLy9jcmVhdGUgYSBjaGlsZCBzY29wZSBmb3IgdGhlIHR5cGVhaGVhZCBkaXJlY3RpdmUgc28gd2UgYXJlIG5vdCBwb2xsdXRpbmcgb3JpZ2luYWwgc2NvcGVcbiAgICAgIC8vd2l0aCB0eXBlYWhlYWQtc3BlY2lmaWMgZGF0YSAobWF0Y2hlcywgcXVlcnkgZXRjLilcbiAgICAgIHZhciBzY29wZSA9IG9yaWdpbmFsU2NvcGUuJG5ldygpO1xuICAgICAgb3JpZ2luYWxTY29wZS4kb24oJyRkZXN0cm95JywgZnVuY3Rpb24oKXtcbiAgICAgICAgc2NvcGUuJGRlc3Ryb3koKTtcbiAgICAgIH0pO1xuXG4gICAgICAvLyBXQUktQVJJQVxuICAgICAgdmFyIHBvcHVwSWQgPSAndHlwZWFoZWFkLScgKyBzY29wZS4kaWQgKyAnLScgKyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwMCk7XG4gICAgICBlbGVtZW50LmF0dHIoe1xuICAgICAgICAnYXJpYS1hdXRvY29tcGxldGUnOiAnbGlzdCcsXG4gICAgICAgICdhcmlhLWV4cGFuZGVkJzogZmFsc2UsXG4gICAgICAgICdhcmlhLW93bnMnOiBwb3B1cElkXG4gICAgICB9KTtcblxuICAgICAgLy9wb3AtdXAgZWxlbWVudCB1c2VkIHRvIGRpc3BsYXkgbWF0Y2hlc1xuICAgICAgdmFyIHBvcFVwRWwgPSBhbmd1bGFyLmVsZW1lbnQoJzxkaXYgdHlwZWFoZWFkLXBvcHVwPjwvZGl2PicpO1xuICAgICAgcG9wVXBFbC5hdHRyKHtcbiAgICAgICAgaWQ6IHBvcHVwSWQsXG4gICAgICAgIG1hdGNoZXM6ICdtYXRjaGVzJyxcbiAgICAgICAgYWN0aXZlOiAnYWN0aXZlSWR4JyxcbiAgICAgICAgc2VsZWN0OiAnc2VsZWN0KGFjdGl2ZUlkeCknLFxuICAgICAgICBxdWVyeTogJ3F1ZXJ5JyxcbiAgICAgICAgcG9zaXRpb246ICdwb3NpdGlvbidcbiAgICAgIH0pO1xuICAgICAgLy9jdXN0b20gaXRlbSB0ZW1wbGF0ZVxuICAgICAgaWYgKGFuZ3VsYXIuaXNEZWZpbmVkKGF0dHJzLnR5cGVhaGVhZFRlbXBsYXRlVXJsKSkge1xuICAgICAgICBwb3BVcEVsLmF0dHIoJ3RlbXBsYXRlLXVybCcsIGF0dHJzLnR5cGVhaGVhZFRlbXBsYXRlVXJsKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHJlc2V0TWF0Y2hlcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBzY29wZS5tYXRjaGVzID0gW107XG4gICAgICAgIHNjb3BlLmFjdGl2ZUlkeCA9IC0xO1xuICAgICAgICBlbGVtZW50LmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCBmYWxzZSk7XG4gICAgICB9O1xuXG4gICAgICB2YXIgZ2V0TWF0Y2hJZCA9IGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgIHJldHVybiBwb3B1cElkICsgJy1vcHRpb24tJyArIGluZGV4O1xuICAgICAgfTtcblxuICAgICAgLy8gSW5kaWNhdGUgdGhhdCB0aGUgc3BlY2lmaWVkIG1hdGNoIGlzIHRoZSBhY3RpdmUgKHByZS1zZWxlY3RlZCkgaXRlbSBpbiB0aGUgbGlzdCBvd25lZCBieSB0aGlzIHR5cGVhaGVhZC5cbiAgICAgIC8vIFRoaXMgYXR0cmlidXRlIGlzIGFkZGVkIG9yIHJlbW92ZWQgYXV0b21hdGljYWxseSB3aGVuIHRoZSBgYWN0aXZlSWR4YCBjaGFuZ2VzLlxuICAgICAgc2NvcGUuJHdhdGNoKCdhY3RpdmVJZHgnLCBmdW5jdGlvbihpbmRleCkge1xuICAgICAgICBpZiAoaW5kZXggPCAwKSB7XG4gICAgICAgICAgZWxlbWVudC5yZW1vdmVBdHRyKCdhcmlhLWFjdGl2ZWRlc2NlbmRhbnQnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBlbGVtZW50LmF0dHIoJ2FyaWEtYWN0aXZlZGVzY2VuZGFudCcsIGdldE1hdGNoSWQoaW5kZXgpKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIHZhciBnZXRNYXRjaGVzQXN5bmMgPSBmdW5jdGlvbihpbnB1dFZhbHVlKSB7XG5cbiAgICAgICAgdmFyIGxvY2FscyA9IHskdmlld1ZhbHVlOiBpbnB1dFZhbHVlfTtcbiAgICAgICAgaXNMb2FkaW5nU2V0dGVyKG9yaWdpbmFsU2NvcGUsIHRydWUpO1xuICAgICAgICAkcS53aGVuKHBhcnNlclJlc3VsdC5zb3VyY2Uob3JpZ2luYWxTY29wZSwgbG9jYWxzKSkudGhlbihmdW5jdGlvbihtYXRjaGVzKSB7XG5cbiAgICAgICAgICAvL2l0IG1pZ2h0IGhhcHBlbiB0aGF0IHNldmVyYWwgYXN5bmMgcXVlcmllcyB3ZXJlIGluIHByb2dyZXNzIGlmIGEgdXNlciB3ZXJlIHR5cGluZyBmYXN0XG4gICAgICAgICAgLy9idXQgd2UgYXJlIGludGVyZXN0ZWQgb25seSBpbiByZXNwb25zZXMgdGhhdCBjb3JyZXNwb25kIHRvIHRoZSBjdXJyZW50IHZpZXcgdmFsdWVcbiAgICAgICAgICB2YXIgb25DdXJyZW50UmVxdWVzdCA9IChpbnB1dFZhbHVlID09PSBtb2RlbEN0cmwuJHZpZXdWYWx1ZSk7XG4gICAgICAgICAgaWYgKG9uQ3VycmVudFJlcXVlc3QgJiYgaGFzRm9jdXMpIHtcbiAgICAgICAgICAgIGlmIChtYXRjaGVzLmxlbmd0aCA+IDApIHtcblxuICAgICAgICAgICAgICBzY29wZS5hY3RpdmVJZHggPSAwO1xuICAgICAgICAgICAgICBzY29wZS5tYXRjaGVzLmxlbmd0aCA9IDA7XG5cbiAgICAgICAgICAgICAgLy90cmFuc2Zvcm0gbGFiZWxzXG4gICAgICAgICAgICAgIGZvcih2YXIgaT0wOyBpPG1hdGNoZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBsb2NhbHNbcGFyc2VyUmVzdWx0Lml0ZW1OYW1lXSA9IG1hdGNoZXNbaV07XG4gICAgICAgICAgICAgICAgc2NvcGUubWF0Y2hlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgIGlkOiBnZXRNYXRjaElkKGkpLFxuICAgICAgICAgICAgICAgICAgbGFiZWw6IHBhcnNlclJlc3VsdC52aWV3TWFwcGVyKHNjb3BlLCBsb2NhbHMpLFxuICAgICAgICAgICAgICAgICAgbW9kZWw6IG1hdGNoZXNbaV1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIHNjb3BlLnF1ZXJ5ID0gaW5wdXRWYWx1ZTtcbiAgICAgICAgICAgICAgLy9wb3NpdGlvbiBwb3AtdXAgd2l0aCBtYXRjaGVzIC0gd2UgbmVlZCB0byByZS1jYWxjdWxhdGUgaXRzIHBvc2l0aW9uIGVhY2ggdGltZSB3ZSBhcmUgb3BlbmluZyBhIHdpbmRvd1xuICAgICAgICAgICAgICAvL3dpdGggbWF0Y2hlcyBhcyBhIHBvcC11cCBtaWdodCBiZSBhYnNvbHV0ZS1wb3NpdGlvbmVkIGFuZCBwb3NpdGlvbiBvZiBhbiBpbnB1dCBtaWdodCBoYXZlIGNoYW5nZWQgb24gYSBwYWdlXG4gICAgICAgICAgICAgIC8vZHVlIHRvIG90aGVyIGVsZW1lbnRzIGJlaW5nIHJlbmRlcmVkXG4gICAgICAgICAgICAgIHNjb3BlLnBvc2l0aW9uID0gYXBwZW5kVG9Cb2R5ID8gJHBvc2l0aW9uLm9mZnNldChlbGVtZW50KSA6ICRwb3NpdGlvbi5wb3NpdGlvbihlbGVtZW50KTtcbiAgICAgICAgICAgICAgc2NvcGUucG9zaXRpb24udG9wID0gc2NvcGUucG9zaXRpb24udG9wICsgZWxlbWVudC5wcm9wKCdvZmZzZXRIZWlnaHQnKTtcblxuICAgICAgICAgICAgICBlbGVtZW50LmF0dHIoJ2FyaWEtZXhwYW5kZWQnLCB0cnVlKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHJlc2V0TWF0Y2hlcygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAob25DdXJyZW50UmVxdWVzdCkge1xuICAgICAgICAgICAgaXNMb2FkaW5nU2V0dGVyKG9yaWdpbmFsU2NvcGUsIGZhbHNlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIGZ1bmN0aW9uKCl7XG4gICAgICAgICAgcmVzZXRNYXRjaGVzKCk7XG4gICAgICAgICAgaXNMb2FkaW5nU2V0dGVyKG9yaWdpbmFsU2NvcGUsIGZhbHNlKTtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuXG4gICAgICByZXNldE1hdGNoZXMoKTtcblxuICAgICAgLy93ZSBuZWVkIHRvIHByb3BhZ2F0ZSB1c2VyJ3MgcXVlcnkgc28gd2UgY2FuIGhpZ2xpZ2h0IG1hdGNoZXNcbiAgICAgIHNjb3BlLnF1ZXJ5ID0gdW5kZWZpbmVkO1xuXG4gICAgICAvL0RlY2xhcmUgdGhlIHRpbWVvdXQgcHJvbWlzZSB2YXIgb3V0c2lkZSB0aGUgZnVuY3Rpb24gc2NvcGUgc28gdGhhdCBzdGFja2VkIGNhbGxzIGNhbiBiZSBjYW5jZWxsZWQgbGF0ZXIgXG4gICAgICB2YXIgdGltZW91dFByb21pc2U7XG5cbiAgICAgIHZhciBzY2hlZHVsZVNlYXJjaFdpdGhUaW1lb3V0ID0gZnVuY3Rpb24oaW5wdXRWYWx1ZSkge1xuICAgICAgICB0aW1lb3V0UHJvbWlzZSA9ICR0aW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBnZXRNYXRjaGVzQXN5bmMoaW5wdXRWYWx1ZSk7XG4gICAgICAgIH0sIHdhaXRUaW1lKTtcbiAgICAgIH07XG5cbiAgICAgIHZhciBjYW5jZWxQcmV2aW91c1RpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHRpbWVvdXRQcm9taXNlKSB7XG4gICAgICAgICAgJHRpbWVvdXQuY2FuY2VsKHRpbWVvdXRQcm9taXNlKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgLy9wbHVnIGludG8gJHBhcnNlcnMgcGlwZWxpbmUgdG8gb3BlbiBhIHR5cGVhaGVhZCBvbiB2aWV3IGNoYW5nZXMgaW5pdGlhdGVkIGZyb20gRE9NXG4gICAgICAvLyRwYXJzZXJzIGtpY2staW4gb24gYWxsIHRoZSBjaGFuZ2VzIGNvbWluZyBmcm9tIHRoZSB2aWV3IGFzIHdlbGwgYXMgbWFudWFsbHkgdHJpZ2dlcmVkIGJ5ICRzZXRWaWV3VmFsdWVcbiAgICAgIG1vZGVsQ3RybC4kcGFyc2Vycy51bnNoaWZ0KGZ1bmN0aW9uIChpbnB1dFZhbHVlKSB7XG5cbiAgICAgICAgaGFzRm9jdXMgPSB0cnVlO1xuXG4gICAgICAgIGlmIChpbnB1dFZhbHVlICYmIGlucHV0VmFsdWUubGVuZ3RoID49IG1pblNlYXJjaCkge1xuICAgICAgICAgIGlmICh3YWl0VGltZSA+IDApIHtcbiAgICAgICAgICAgIGNhbmNlbFByZXZpb3VzVGltZW91dCgpO1xuICAgICAgICAgICAgc2NoZWR1bGVTZWFyY2hXaXRoVGltZW91dChpbnB1dFZhbHVlKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZ2V0TWF0Y2hlc0FzeW5jKGlucHV0VmFsdWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpc0xvYWRpbmdTZXR0ZXIob3JpZ2luYWxTY29wZSwgZmFsc2UpO1xuICAgICAgICAgIGNhbmNlbFByZXZpb3VzVGltZW91dCgpO1xuICAgICAgICAgIHJlc2V0TWF0Y2hlcygpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGlzRWRpdGFibGUpIHtcbiAgICAgICAgICByZXR1cm4gaW5wdXRWYWx1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoIWlucHV0VmFsdWUpIHtcbiAgICAgICAgICAgIC8vIFJlc2V0IGluIGNhc2UgdXNlciBoYWQgdHlwZWQgc29tZXRoaW5nIHByZXZpb3VzbHkuXG4gICAgICAgICAgICBtb2RlbEN0cmwuJHNldFZhbGlkaXR5KCdlZGl0YWJsZScsIHRydWUpO1xuICAgICAgICAgICAgcmV0dXJuIGlucHV0VmFsdWU7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG1vZGVsQ3RybC4kc2V0VmFsaWRpdHkoJ2VkaXRhYmxlJywgZmFsc2UpO1xuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBtb2RlbEN0cmwuJGZvcm1hdHRlcnMucHVzaChmdW5jdGlvbiAobW9kZWxWYWx1ZSkge1xuXG4gICAgICAgIHZhciBjYW5kaWRhdGVWaWV3VmFsdWUsIGVtcHR5Vmlld1ZhbHVlO1xuICAgICAgICB2YXIgbG9jYWxzID0ge307XG5cbiAgICAgICAgaWYgKGlucHV0Rm9ybWF0dGVyKSB7XG5cbiAgICAgICAgICBsb2NhbHNbJyRtb2RlbCddID0gbW9kZWxWYWx1ZTtcbiAgICAgICAgICByZXR1cm4gaW5wdXRGb3JtYXR0ZXIob3JpZ2luYWxTY29wZSwgbG9jYWxzKTtcblxuICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgLy9pdCBtaWdodCBoYXBwZW4gdGhhdCB3ZSBkb24ndCBoYXZlIGVub3VnaCBpbmZvIHRvIHByb3Blcmx5IHJlbmRlciBpbnB1dCB2YWx1ZVxuICAgICAgICAgIC8vd2UgbmVlZCB0byBjaGVjayBmb3IgdGhpcyBzaXR1YXRpb24gYW5kIHNpbXBseSByZXR1cm4gbW9kZWwgdmFsdWUgaWYgd2UgY2FuJ3QgYXBwbHkgY3VzdG9tIGZvcm1hdHRpbmdcbiAgICAgICAgICBsb2NhbHNbcGFyc2VyUmVzdWx0Lml0ZW1OYW1lXSA9IG1vZGVsVmFsdWU7XG4gICAgICAgICAgY2FuZGlkYXRlVmlld1ZhbHVlID0gcGFyc2VyUmVzdWx0LnZpZXdNYXBwZXIob3JpZ2luYWxTY29wZSwgbG9jYWxzKTtcbiAgICAgICAgICBsb2NhbHNbcGFyc2VyUmVzdWx0Lml0ZW1OYW1lXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBlbXB0eVZpZXdWYWx1ZSA9IHBhcnNlclJlc3VsdC52aWV3TWFwcGVyKG9yaWdpbmFsU2NvcGUsIGxvY2Fscyk7XG5cbiAgICAgICAgICByZXR1cm4gY2FuZGlkYXRlVmlld1ZhbHVlIT09IGVtcHR5Vmlld1ZhbHVlID8gY2FuZGlkYXRlVmlld1ZhbHVlIDogbW9kZWxWYWx1ZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIHNjb3BlLnNlbGVjdCA9IGZ1bmN0aW9uIChhY3RpdmVJZHgpIHtcbiAgICAgICAgLy9jYWxsZWQgZnJvbSB3aXRoaW4gdGhlICRkaWdlc3QoKSBjeWNsZVxuICAgICAgICB2YXIgbG9jYWxzID0ge307XG4gICAgICAgIHZhciBtb2RlbCwgaXRlbTtcblxuICAgICAgICBsb2NhbHNbcGFyc2VyUmVzdWx0Lml0ZW1OYW1lXSA9IGl0ZW0gPSBzY29wZS5tYXRjaGVzW2FjdGl2ZUlkeF0ubW9kZWw7XG4gICAgICAgIG1vZGVsID0gcGFyc2VyUmVzdWx0Lm1vZGVsTWFwcGVyKG9yaWdpbmFsU2NvcGUsIGxvY2Fscyk7XG4gICAgICAgICRzZXRNb2RlbFZhbHVlKG9yaWdpbmFsU2NvcGUsIG1vZGVsKTtcbiAgICAgICAgbW9kZWxDdHJsLiRzZXRWYWxpZGl0eSgnZWRpdGFibGUnLCB0cnVlKTtcblxuICAgICAgICBvblNlbGVjdENhbGxiYWNrKG9yaWdpbmFsU2NvcGUsIHtcbiAgICAgICAgICAkaXRlbTogaXRlbSxcbiAgICAgICAgICAkbW9kZWw6IG1vZGVsLFxuICAgICAgICAgICRsYWJlbDogcGFyc2VyUmVzdWx0LnZpZXdNYXBwZXIob3JpZ2luYWxTY29wZSwgbG9jYWxzKVxuICAgICAgICB9KTtcblxuICAgICAgICByZXNldE1hdGNoZXMoKTtcblxuICAgICAgICAvL3JldHVybiBmb2N1cyB0byB0aGUgaW5wdXQgZWxlbWVudCBpZiBhIG1hdGNoIHdhcyBzZWxlY3RlZCB2aWEgYSBtb3VzZSBjbGljayBldmVudFxuICAgICAgICAvLyB1c2UgdGltZW91dCB0byBhdm9pZCAkcm9vdFNjb3BlOmlucHJvZyBlcnJvclxuICAgICAgICAkdGltZW91dChmdW5jdGlvbigpIHsgZWxlbWVudFswXS5mb2N1cygpOyB9LCAwLCBmYWxzZSk7XG4gICAgICB9O1xuXG4gICAgICAvL2JpbmQga2V5Ym9hcmQgZXZlbnRzOiBhcnJvd3MgdXAoMzgpIC8gZG93big0MCksIGVudGVyKDEzKSBhbmQgdGFiKDkpLCBlc2MoMjcpXG4gICAgICBlbGVtZW50LmJpbmQoJ2tleWRvd24nLCBmdW5jdGlvbiAoZXZ0KSB7XG5cbiAgICAgICAgLy90eXBlYWhlYWQgaXMgb3BlbiBhbmQgYW4gXCJpbnRlcmVzdGluZ1wiIGtleSB3YXMgcHJlc3NlZFxuICAgICAgICBpZiAoc2NvcGUubWF0Y2hlcy5sZW5ndGggPT09IDAgfHwgSE9UX0tFWVMuaW5kZXhPZihldnQud2hpY2gpID09PSAtMSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIGlmIChldnQud2hpY2ggPT09IDQwKSB7XG4gICAgICAgICAgc2NvcGUuYWN0aXZlSWR4ID0gKHNjb3BlLmFjdGl2ZUlkeCArIDEpICUgc2NvcGUubWF0Y2hlcy5sZW5ndGg7XG4gICAgICAgICAgc2NvcGUuJGRpZ2VzdCgpO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoZXZ0LndoaWNoID09PSAzOCkge1xuICAgICAgICAgIHNjb3BlLmFjdGl2ZUlkeCA9IChzY29wZS5hY3RpdmVJZHggPyBzY29wZS5hY3RpdmVJZHggOiBzY29wZS5tYXRjaGVzLmxlbmd0aCkgLSAxO1xuICAgICAgICAgIHNjb3BlLiRkaWdlc3QoKTtcblxuICAgICAgICB9IGVsc2UgaWYgKGV2dC53aGljaCA9PT0gMTMgfHwgZXZ0LndoaWNoID09PSA5KSB7XG4gICAgICAgICAgc2NvcGUuJGFwcGx5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHNjb3BlLnNlbGVjdChzY29wZS5hY3RpdmVJZHgpO1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoZXZ0LndoaWNoID09PSAyNykge1xuICAgICAgICAgIGV2dC5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgICAgICAgIHJlc2V0TWF0Y2hlcygpO1xuICAgICAgICAgIHNjb3BlLiRkaWdlc3QoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGVsZW1lbnQuYmluZCgnYmx1cicsIGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgaGFzRm9jdXMgPSBmYWxzZTtcbiAgICAgIH0pO1xuXG4gICAgICAvLyBLZWVwIHJlZmVyZW5jZSB0byBjbGljayBoYW5kbGVyIHRvIHVuYmluZCBpdC5cbiAgICAgIHZhciBkaXNtaXNzQ2xpY2tIYW5kbGVyID0gZnVuY3Rpb24gKGV2dCkge1xuICAgICAgICBpZiAoZWxlbWVudFswXSAhPT0gZXZ0LnRhcmdldCkge1xuICAgICAgICAgIHJlc2V0TWF0Y2hlcygpO1xuICAgICAgICAgIHNjb3BlLiRkaWdlc3QoKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgJGRvY3VtZW50LmJpbmQoJ2NsaWNrJywgZGlzbWlzc0NsaWNrSGFuZGxlcik7XG5cbiAgICAgIG9yaWdpbmFsU2NvcGUuJG9uKCckZGVzdHJveScsIGZ1bmN0aW9uKCl7XG4gICAgICAgICRkb2N1bWVudC51bmJpbmQoJ2NsaWNrJywgZGlzbWlzc0NsaWNrSGFuZGxlcik7XG4gICAgICB9KTtcblxuICAgICAgdmFyICRwb3B1cCA9ICRjb21waWxlKHBvcFVwRWwpKHNjb3BlKTtcbiAgICAgIGlmICggYXBwZW5kVG9Cb2R5ICkge1xuICAgICAgICAkZG9jdW1lbnQuZmluZCgnYm9keScpLmFwcGVuZCgkcG9wdXApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZWxlbWVudC5hZnRlcigkcG9wdXApO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxufV0pXG5cbiAgLmRpcmVjdGl2ZSgndHlwZWFoZWFkUG9wdXAnLCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3RyaWN0OidFQScsXG4gICAgICBzY29wZTp7XG4gICAgICAgIG1hdGNoZXM6Jz0nLFxuICAgICAgICBxdWVyeTonPScsXG4gICAgICAgIGFjdGl2ZTonPScsXG4gICAgICAgIHBvc2l0aW9uOic9JyxcbiAgICAgICAgc2VsZWN0OicmJ1xuICAgICAgfSxcbiAgICAgIHJlcGxhY2U6dHJ1ZSxcbiAgICAgIHRlbXBsYXRlVXJsOid0ZW1wbGF0ZS90eXBlYWhlYWQvdHlwZWFoZWFkLXBvcHVwLmh0bWwnLFxuICAgICAgbGluazpmdW5jdGlvbiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSB7XG5cbiAgICAgICAgc2NvcGUudGVtcGxhdGVVcmwgPSBhdHRycy50ZW1wbGF0ZVVybDtcblxuICAgICAgICBzY29wZS5pc09wZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIHNjb3BlLm1hdGNoZXMubGVuZ3RoID4gMDtcbiAgICAgICAgfTtcblxuICAgICAgICBzY29wZS5pc0FjdGl2ZSA9IGZ1bmN0aW9uIChtYXRjaElkeCkge1xuICAgICAgICAgIHJldHVybiBzY29wZS5hY3RpdmUgPT0gbWF0Y2hJZHg7XG4gICAgICAgIH07XG5cbiAgICAgICAgc2NvcGUuc2VsZWN0QWN0aXZlID0gZnVuY3Rpb24gKG1hdGNoSWR4KSB7XG4gICAgICAgICAgc2NvcGUuYWN0aXZlID0gbWF0Y2hJZHg7XG4gICAgICAgIH07XG5cbiAgICAgICAgc2NvcGUuc2VsZWN0TWF0Y2ggPSBmdW5jdGlvbiAoYWN0aXZlSWR4KSB7XG4gICAgICAgICAgc2NvcGUuc2VsZWN0KHthY3RpdmVJZHg6YWN0aXZlSWR4fSk7XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfTtcbiAgfSlcblxuICAuZGlyZWN0aXZlKCd0eXBlYWhlYWRNYXRjaCcsIFsnJGh0dHAnLCAnJHRlbXBsYXRlQ2FjaGUnLCAnJGNvbXBpbGUnLCAnJHBhcnNlJywgZnVuY3Rpb24gKCRodHRwLCAkdGVtcGxhdGVDYWNoZSwgJGNvbXBpbGUsICRwYXJzZSkge1xuICAgIHJldHVybiB7XG4gICAgICByZXN0cmljdDonRUEnLFxuICAgICAgc2NvcGU6e1xuICAgICAgICBpbmRleDonPScsXG4gICAgICAgIG1hdGNoOic9JyxcbiAgICAgICAgcXVlcnk6Jz0nXG4gICAgICB9LFxuICAgICAgbGluazpmdW5jdGlvbiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSB7XG4gICAgICAgIHZhciB0cGxVcmwgPSAkcGFyc2UoYXR0cnMudGVtcGxhdGVVcmwpKHNjb3BlLiRwYXJlbnQpIHx8ICd0ZW1wbGF0ZS90eXBlYWhlYWQvdHlwZWFoZWFkLW1hdGNoLmh0bWwnO1xuICAgICAgICAkaHR0cC5nZXQodHBsVXJsLCB7Y2FjaGU6ICR0ZW1wbGF0ZUNhY2hlfSkuc3VjY2VzcyhmdW5jdGlvbih0cGxDb250ZW50KXtcbiAgICAgICAgICAgZWxlbWVudC5yZXBsYWNlV2l0aCgkY29tcGlsZSh0cGxDb250ZW50LnRyaW0oKSkoc2NvcGUpKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcbiAgfV0pXG5cbiAgLmZpbHRlcigndHlwZWFoZWFkSGlnaGxpZ2h0JywgZnVuY3Rpb24oKSB7XG5cbiAgICBmdW5jdGlvbiBlc2NhcGVSZWdleHAocXVlcnlUb0VzY2FwZSkge1xuICAgICAgcmV0dXJuIHF1ZXJ5VG9Fc2NhcGUucmVwbGFjZSgvKFsuPyorXiRbXFxdXFxcXCgpe318LV0pL2csICdcXFxcJDEnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24obWF0Y2hJdGVtLCBxdWVyeSkge1xuICAgICAgcmV0dXJuIHF1ZXJ5ID8gKCcnICsgbWF0Y2hJdGVtKS5yZXBsYWNlKG5ldyBSZWdFeHAoZXNjYXBlUmVnZXhwKHF1ZXJ5KSwgJ2dpJyksICc8c3Ryb25nPiQmPC9zdHJvbmc+JykgOiBtYXRjaEl0ZW07XG4gICAgfTtcbiAgfSk7XG5cbmFuZ3VsYXIubW9kdWxlKFwidGVtcGxhdGUvYWNjb3JkaW9uL2FjY29yZGlvbi1ncm91cC5odG1sXCIsIFtdKS5ydW4oW1wiJHRlbXBsYXRlQ2FjaGVcIiwgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KFwidGVtcGxhdGUvYWNjb3JkaW9uL2FjY29yZGlvbi1ncm91cC5odG1sXCIsXG4gICAgXCI8ZGl2IGNsYXNzPVxcXCJwYW5lbCBwYW5lbC1kZWZhdWx0XFxcIj5cXG5cIiArXG4gICAgXCIgIDxkaXYgY2xhc3M9XFxcInBhbmVsLWhlYWRpbmdcXFwiPlxcblwiICtcbiAgICBcIiAgICA8aDQgY2xhc3M9XFxcInBhbmVsLXRpdGxlXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICA8YSBjbGFzcz1cXFwiYWNjb3JkaW9uLXRvZ2dsZVxcXCIgbmctY2xpY2s9XFxcInRvZ2dsZU9wZW4oKVxcXCIgYWNjb3JkaW9uLXRyYW5zY2x1ZGU9XFxcImhlYWRpbmdcXFwiPjxzcGFuIG5nLWNsYXNzPVxcXCJ7J3RleHQtbXV0ZWQnOiBpc0Rpc2FibGVkfVxcXCI+e3toZWFkaW5nfX08L3NwYW4+PC9hPlxcblwiICtcbiAgICBcIiAgICA8L2g0PlxcblwiICtcbiAgICBcIiAgPC9kaXY+XFxuXCIgK1xuICAgIFwiICA8ZGl2IGNsYXNzPVxcXCJwYW5lbC1jb2xsYXBzZVxcXCIgY29sbGFwc2U9XFxcIiFpc09wZW5cXFwiPlxcblwiICtcbiAgICBcIlx0ICA8ZGl2IGNsYXNzPVxcXCJwYW5lbC1ib2R5XFxcIiBuZy10cmFuc2NsdWRlPjwvZGl2PlxcblwiICtcbiAgICBcIiAgPC9kaXY+XFxuXCIgK1xuICAgIFwiPC9kaXY+XCIpO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZShcInRlbXBsYXRlL2FjY29yZGlvbi9hY2NvcmRpb24uaHRtbFwiLCBbXSkucnVuKFtcIiR0ZW1wbGF0ZUNhY2hlXCIsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dChcInRlbXBsYXRlL2FjY29yZGlvbi9hY2NvcmRpb24uaHRtbFwiLFxuICAgIFwiPGRpdiBjbGFzcz1cXFwicGFuZWwtZ3JvdXBcXFwiIG5nLXRyYW5zY2x1ZGU+PC9kaXY+XCIpO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZShcInRlbXBsYXRlL2FsZXJ0L2FsZXJ0Lmh0bWxcIiwgW10pLnJ1bihbXCIkdGVtcGxhdGVDYWNoZVwiLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoXCJ0ZW1wbGF0ZS9hbGVydC9hbGVydC5odG1sXCIsXG4gICAgXCI8ZGl2IGNsYXNzPVxcXCJhbGVydFxcXCIgbmctY2xhc3M9XFxcIlsnYWxlcnQtJyArICh0eXBlIHx8ICd3YXJuaW5nJyksIGNsb3NlYWJsZSA/ICdhbGVydC1kaXNtaXNzYWJsZScgOiBudWxsXVxcXCIgcm9sZT1cXFwiYWxlcnRcXFwiPlxcblwiICtcbiAgICBcIiAgICA8YnV0dG9uIG5nLXNob3c9XFxcImNsb3NlYWJsZVxcXCIgdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiY2xvc2VcXFwiIG5nLWNsaWNrPVxcXCJjbG9zZSgpXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIj4mdGltZXM7PC9zcGFuPlxcblwiICtcbiAgICBcIiAgICAgICAgPHNwYW4gY2xhc3M9XFxcInNyLW9ubHlcXFwiPkNsb3NlPC9zcGFuPlxcblwiICtcbiAgICBcIiAgICA8L2J1dHRvbj5cXG5cIiArXG4gICAgXCIgICAgPGRpdiBuZy10cmFuc2NsdWRlPjwvZGl2PlxcblwiICtcbiAgICBcIjwvZGl2PlxcblwiICtcbiAgICBcIlwiKTtcbn1dKTtcblxuYW5ndWxhci5tb2R1bGUoXCJ0ZW1wbGF0ZS9jYXJvdXNlbC9jYXJvdXNlbC5odG1sXCIsIFtdKS5ydW4oW1wiJHRlbXBsYXRlQ2FjaGVcIiwgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KFwidGVtcGxhdGUvY2Fyb3VzZWwvY2Fyb3VzZWwuaHRtbFwiLFxuICAgIFwiPGRpdiBuZy1tb3VzZWVudGVyPVxcXCJwYXVzZSgpXFxcIiBuZy1tb3VzZWxlYXZlPVxcXCJwbGF5KClcXFwiIGNsYXNzPVxcXCJjYXJvdXNlbFxcXCIgbmctc3dpcGUtcmlnaHQ9XFxcInByZXYoKVxcXCIgbmctc3dpcGUtbGVmdD1cXFwibmV4dCgpXFxcIj5cXG5cIiArXG4gICAgXCIgICAgPG9sIGNsYXNzPVxcXCJjYXJvdXNlbC1pbmRpY2F0b3JzXFxcIiBuZy1zaG93PVxcXCJzbGlkZXMubGVuZ3RoID4gMVxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgICA8bGkgbmctcmVwZWF0PVxcXCJzbGlkZSBpbiBzbGlkZXMgdHJhY2sgYnkgJGluZGV4XFxcIiBuZy1jbGFzcz1cXFwie2FjdGl2ZTogaXNBY3RpdmUoc2xpZGUpfVxcXCIgbmctY2xpY2s9XFxcInNlbGVjdChzbGlkZSlcXFwiPjwvbGk+XFxuXCIgK1xuICAgIFwiICAgIDwvb2w+XFxuXCIgK1xuICAgIFwiICAgIDxkaXYgY2xhc3M9XFxcImNhcm91c2VsLWlubmVyXFxcIiBuZy10cmFuc2NsdWRlPjwvZGl2PlxcblwiICtcbiAgICBcIiAgICA8YSBjbGFzcz1cXFwibGVmdCBjYXJvdXNlbC1jb250cm9sXFxcIiBuZy1jbGljaz1cXFwicHJldigpXFxcIiBuZy1zaG93PVxcXCJzbGlkZXMubGVuZ3RoID4gMVxcXCI+PHNwYW4gY2xhc3M9XFxcImdseXBoaWNvbiBnbHlwaGljb24tY2hldnJvbi1sZWZ0XFxcIj48L3NwYW4+PC9hPlxcblwiICtcbiAgICBcIiAgICA8YSBjbGFzcz1cXFwicmlnaHQgY2Fyb3VzZWwtY29udHJvbFxcXCIgbmctY2xpY2s9XFxcIm5leHQoKVxcXCIgbmctc2hvdz1cXFwic2xpZGVzLmxlbmd0aCA+IDFcXFwiPjxzcGFuIGNsYXNzPVxcXCJnbHlwaGljb24gZ2x5cGhpY29uLWNoZXZyb24tcmlnaHRcXFwiPjwvc3Bhbj48L2E+XFxuXCIgK1xuICAgIFwiPC9kaXY+XFxuXCIgK1xuICAgIFwiXCIpO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZShcInRlbXBsYXRlL2Nhcm91c2VsL3NsaWRlLmh0bWxcIiwgW10pLnJ1bihbXCIkdGVtcGxhdGVDYWNoZVwiLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoXCJ0ZW1wbGF0ZS9jYXJvdXNlbC9zbGlkZS5odG1sXCIsXG4gICAgXCI8ZGl2IG5nLWNsYXNzPVxcXCJ7XFxuXCIgK1xuICAgIFwiICAgICdhY3RpdmUnOiBsZWF2aW5nIHx8IChhY3RpdmUgJiYgIWVudGVyaW5nKSxcXG5cIiArXG4gICAgXCIgICAgJ3ByZXYnOiAobmV4dCB8fCBhY3RpdmUpICYmIGRpcmVjdGlvbj09J3ByZXYnLFxcblwiICtcbiAgICBcIiAgICAnbmV4dCc6IChuZXh0IHx8IGFjdGl2ZSkgJiYgZGlyZWN0aW9uPT0nbmV4dCcsXFxuXCIgK1xuICAgIFwiICAgICdyaWdodCc6IGRpcmVjdGlvbj09J3ByZXYnLFxcblwiICtcbiAgICBcIiAgICAnbGVmdCc6IGRpcmVjdGlvbj09J25leHQnXFxuXCIgK1xuICAgIFwiICB9XFxcIiBjbGFzcz1cXFwiaXRlbSB0ZXh0LWNlbnRlclxcXCIgbmctdHJhbnNjbHVkZT48L2Rpdj5cXG5cIiArXG4gICAgXCJcIik7XG59XSk7XG5cbmFuZ3VsYXIubW9kdWxlKFwidGVtcGxhdGUvZGF0ZXBpY2tlci9kYXRlcGlja2VyLmh0bWxcIiwgW10pLnJ1bihbXCIkdGVtcGxhdGVDYWNoZVwiLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoXCJ0ZW1wbGF0ZS9kYXRlcGlja2VyL2RhdGVwaWNrZXIuaHRtbFwiLFxuICAgIFwiPGRpdiBuZy1zd2l0Y2g9XFxcImRhdGVwaWNrZXJNb2RlXFxcIiByb2xlPVxcXCJhcHBsaWNhdGlvblxcXCIgbmcta2V5ZG93bj1cXFwia2V5ZG93bigkZXZlbnQpXFxcIj5cXG5cIiArXG4gICAgXCIgIDxkYXlwaWNrZXIgbmctc3dpdGNoLXdoZW49XFxcImRheVxcXCIgdGFiaW5kZXg9XFxcIjBcXFwiPjwvZGF5cGlja2VyPlxcblwiICtcbiAgICBcIiAgPG1vbnRocGlja2VyIG5nLXN3aXRjaC13aGVuPVxcXCJtb250aFxcXCIgdGFiaW5kZXg9XFxcIjBcXFwiPjwvbW9udGhwaWNrZXI+XFxuXCIgK1xuICAgIFwiICA8eWVhcnBpY2tlciBuZy1zd2l0Y2gtd2hlbj1cXFwieWVhclxcXCIgdGFiaW5kZXg9XFxcIjBcXFwiPjwveWVhcnBpY2tlcj5cXG5cIiArXG4gICAgXCI8L2Rpdj5cIik7XG59XSk7XG5cbmFuZ3VsYXIubW9kdWxlKFwidGVtcGxhdGUvZGF0ZXBpY2tlci9kYXkuaHRtbFwiLCBbXSkucnVuKFtcIiR0ZW1wbGF0ZUNhY2hlXCIsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dChcInRlbXBsYXRlL2RhdGVwaWNrZXIvZGF5Lmh0bWxcIixcbiAgICBcIjx0YWJsZSByb2xlPVxcXCJncmlkXFxcIiBhcmlhLWxhYmVsbGVkYnk9XFxcInt7dW5pcXVlSWR9fS10aXRsZVxcXCIgYXJpYS1hY3RpdmVkZXNjZW5kYW50PVxcXCJ7e2FjdGl2ZURhdGVJZH19XFxcIj5cXG5cIiArXG4gICAgXCIgIDx0aGVhZD5cXG5cIiArXG4gICAgXCIgICAgPHRyPlxcblwiICtcbiAgICBcIiAgICAgIDx0aD48YnV0dG9uIHR5cGU9XFxcImJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc20gcHVsbC1sZWZ0XFxcIiBuZy1jbGljaz1cXFwibW92ZSgtMSlcXFwiIHRhYmluZGV4PVxcXCItMVxcXCI+PGkgY2xhc3M9XFxcImdseXBoaWNvbiBnbHlwaGljb24tY2hldnJvbi1sZWZ0XFxcIj48L2k+PC9idXR0b24+PC90aD5cXG5cIiArXG4gICAgXCIgICAgICA8dGggY29sc3Bhbj1cXFwie3s1ICsgc2hvd1dlZWtzfX1cXFwiPjxidXR0b24gaWQ9XFxcInt7dW5pcXVlSWR9fS10aXRsZVxcXCIgcm9sZT1cXFwiaGVhZGluZ1xcXCIgYXJpYS1saXZlPVxcXCJhc3NlcnRpdmVcXFwiIGFyaWEtYXRvbWljPVxcXCJ0cnVlXFxcIiB0eXBlPVxcXCJidXR0b25cXFwiIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHQgYnRuLXNtXFxcIiBuZy1jbGljaz1cXFwidG9nZ2xlTW9kZSgpXFxcIiB0YWJpbmRleD1cXFwiLTFcXFwiIHN0eWxlPVxcXCJ3aWR0aDoxMDAlO1xcXCI+PHN0cm9uZz57e3RpdGxlfX08L3N0cm9uZz48L2J1dHRvbj48L3RoPlxcblwiICtcbiAgICBcIiAgICAgIDx0aD48YnV0dG9uIHR5cGU9XFxcImJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc20gcHVsbC1yaWdodFxcXCIgbmctY2xpY2s9XFxcIm1vdmUoMSlcXFwiIHRhYmluZGV4PVxcXCItMVxcXCI+PGkgY2xhc3M9XFxcImdseXBoaWNvbiBnbHlwaGljb24tY2hldnJvbi1yaWdodFxcXCI+PC9pPjwvYnV0dG9uPjwvdGg+XFxuXCIgK1xuICAgIFwiICAgIDwvdHI+XFxuXCIgK1xuICAgIFwiICAgIDx0cj5cXG5cIiArXG4gICAgXCIgICAgICA8dGggbmctc2hvdz1cXFwic2hvd1dlZWtzXFxcIiBjbGFzcz1cXFwidGV4dC1jZW50ZXJcXFwiPjwvdGg+XFxuXCIgK1xuICAgIFwiICAgICAgPHRoIG5nLXJlcGVhdD1cXFwibGFiZWwgaW4gbGFiZWxzIHRyYWNrIGJ5ICRpbmRleFxcXCIgY2xhc3M9XFxcInRleHQtY2VudGVyXFxcIj48c21hbGwgYXJpYS1sYWJlbD1cXFwie3tsYWJlbC5mdWxsfX1cXFwiPnt7bGFiZWwuYWJicn19PC9zbWFsbD48L3RoPlxcblwiICtcbiAgICBcIiAgICA8L3RyPlxcblwiICtcbiAgICBcIiAgPC90aGVhZD5cXG5cIiArXG4gICAgXCIgIDx0Ym9keT5cXG5cIiArXG4gICAgXCIgICAgPHRyIG5nLXJlcGVhdD1cXFwicm93IGluIHJvd3MgdHJhY2sgYnkgJGluZGV4XFxcIj5cXG5cIiArXG4gICAgXCIgICAgICA8dGQgbmctc2hvdz1cXFwic2hvd1dlZWtzXFxcIiBjbGFzcz1cXFwidGV4dC1jZW50ZXIgaDZcXFwiPjxlbT57eyB3ZWVrTnVtYmVyc1skaW5kZXhdIH19PC9lbT48L3RkPlxcblwiICtcbiAgICBcIiAgICAgIDx0ZCBuZy1yZXBlYXQ9XFxcImR0IGluIHJvdyB0cmFjayBieSBkdC5kYXRlXFxcIiBjbGFzcz1cXFwidGV4dC1jZW50ZXJcXFwiIHJvbGU9XFxcImdyaWRjZWxsXFxcIiBpZD1cXFwie3tkdC51aWR9fVxcXCIgYXJpYS1kaXNhYmxlZD1cXFwie3shIWR0LmRpc2FibGVkfX1cXFwiPlxcblwiICtcbiAgICBcIiAgICAgICAgPGJ1dHRvbiB0eXBlPVxcXCJidXR0b25cXFwiIHN0eWxlPVxcXCJ3aWR0aDoxMDAlO1xcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc21cXFwiIG5nLWNsYXNzPVxcXCJ7J2J0bi1pbmZvJzogZHQuc2VsZWN0ZWQsIGFjdGl2ZTogaXNBY3RpdmUoZHQpfVxcXCIgbmctY2xpY2s9XFxcInNlbGVjdChkdC5kYXRlKVxcXCIgbmctZGlzYWJsZWQ9XFxcImR0LmRpc2FibGVkXFxcIiB0YWJpbmRleD1cXFwiLTFcXFwiPjxzcGFuIG5nLWNsYXNzPVxcXCJ7J3RleHQtbXV0ZWQnOiBkdC5zZWNvbmRhcnksICd0ZXh0LWluZm8nOiBkdC5jdXJyZW50fVxcXCI+e3tkdC5sYWJlbH19PC9zcGFuPjwvYnV0dG9uPlxcblwiICtcbiAgICBcIiAgICAgIDwvdGQ+XFxuXCIgK1xuICAgIFwiICAgIDwvdHI+XFxuXCIgK1xuICAgIFwiICA8L3Rib2R5PlxcblwiICtcbiAgICBcIjwvdGFibGU+XFxuXCIgK1xuICAgIFwiXCIpO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZShcInRlbXBsYXRlL2RhdGVwaWNrZXIvbW9udGguaHRtbFwiLCBbXSkucnVuKFtcIiR0ZW1wbGF0ZUNhY2hlXCIsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dChcInRlbXBsYXRlL2RhdGVwaWNrZXIvbW9udGguaHRtbFwiLFxuICAgIFwiPHRhYmxlIHJvbGU9XFxcImdyaWRcXFwiIGFyaWEtbGFiZWxsZWRieT1cXFwie3t1bmlxdWVJZH19LXRpdGxlXFxcIiBhcmlhLWFjdGl2ZWRlc2NlbmRhbnQ9XFxcInt7YWN0aXZlRGF0ZUlkfX1cXFwiPlxcblwiICtcbiAgICBcIiAgPHRoZWFkPlxcblwiICtcbiAgICBcIiAgICA8dHI+XFxuXCIgK1xuICAgIFwiICAgICAgPHRoPjxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbSBwdWxsLWxlZnRcXFwiIG5nLWNsaWNrPVxcXCJtb3ZlKC0xKVxcXCIgdGFiaW5kZXg9XFxcIi0xXFxcIj48aSBjbGFzcz1cXFwiZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLWxlZnRcXFwiPjwvaT48L2J1dHRvbj48L3RoPlxcblwiICtcbiAgICBcIiAgICAgIDx0aD48YnV0dG9uIGlkPVxcXCJ7e3VuaXF1ZUlkfX0tdGl0bGVcXFwiIHJvbGU9XFxcImhlYWRpbmdcXFwiIGFyaWEtbGl2ZT1cXFwiYXNzZXJ0aXZlXFxcIiBhcmlhLWF0b21pYz1cXFwidHJ1ZVxcXCIgdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbVxcXCIgbmctY2xpY2s9XFxcInRvZ2dsZU1vZGUoKVxcXCIgdGFiaW5kZXg9XFxcIi0xXFxcIiBzdHlsZT1cXFwid2lkdGg6MTAwJTtcXFwiPjxzdHJvbmc+e3t0aXRsZX19PC9zdHJvbmc+PC9idXR0b24+PC90aD5cXG5cIiArXG4gICAgXCIgICAgICA8dGg+PGJ1dHRvbiB0eXBlPVxcXCJidXR0b25cXFwiIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHQgYnRuLXNtIHB1bGwtcmlnaHRcXFwiIG5nLWNsaWNrPVxcXCJtb3ZlKDEpXFxcIiB0YWJpbmRleD1cXFwiLTFcXFwiPjxpIGNsYXNzPVxcXCJnbHlwaGljb24gZ2x5cGhpY29uLWNoZXZyb24tcmlnaHRcXFwiPjwvaT48L2J1dHRvbj48L3RoPlxcblwiICtcbiAgICBcIiAgICA8L3RyPlxcblwiICtcbiAgICBcIiAgPC90aGVhZD5cXG5cIiArXG4gICAgXCIgIDx0Ym9keT5cXG5cIiArXG4gICAgXCIgICAgPHRyIG5nLXJlcGVhdD1cXFwicm93IGluIHJvd3MgdHJhY2sgYnkgJGluZGV4XFxcIj5cXG5cIiArXG4gICAgXCIgICAgICA8dGQgbmctcmVwZWF0PVxcXCJkdCBpbiByb3cgdHJhY2sgYnkgZHQuZGF0ZVxcXCIgY2xhc3M9XFxcInRleHQtY2VudGVyXFxcIiByb2xlPVxcXCJncmlkY2VsbFxcXCIgaWQ9XFxcInt7ZHQudWlkfX1cXFwiIGFyaWEtZGlzYWJsZWQ9XFxcInt7ISFkdC5kaXNhYmxlZH19XFxcIj5cXG5cIiArXG4gICAgXCIgICAgICAgIDxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBzdHlsZT1cXFwid2lkdGg6MTAwJTtcXFwiIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHRcXFwiIG5nLWNsYXNzPVxcXCJ7J2J0bi1pbmZvJzogZHQuc2VsZWN0ZWQsIGFjdGl2ZTogaXNBY3RpdmUoZHQpfVxcXCIgbmctY2xpY2s9XFxcInNlbGVjdChkdC5kYXRlKVxcXCIgbmctZGlzYWJsZWQ9XFxcImR0LmRpc2FibGVkXFxcIiB0YWJpbmRleD1cXFwiLTFcXFwiPjxzcGFuIG5nLWNsYXNzPVxcXCJ7J3RleHQtaW5mbyc6IGR0LmN1cnJlbnR9XFxcIj57e2R0LmxhYmVsfX08L3NwYW4+PC9idXR0b24+XFxuXCIgK1xuICAgIFwiICAgICAgPC90ZD5cXG5cIiArXG4gICAgXCIgICAgPC90cj5cXG5cIiArXG4gICAgXCIgIDwvdGJvZHk+XFxuXCIgK1xuICAgIFwiPC90YWJsZT5cXG5cIiArXG4gICAgXCJcIik7XG59XSk7XG5cbmFuZ3VsYXIubW9kdWxlKFwidGVtcGxhdGUvZGF0ZXBpY2tlci9wb3B1cC5odG1sXCIsIFtdKS5ydW4oW1wiJHRlbXBsYXRlQ2FjaGVcIiwgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KFwidGVtcGxhdGUvZGF0ZXBpY2tlci9wb3B1cC5odG1sXCIsXG4gICAgXCI8dWwgY2xhc3M9XFxcImRyb3Bkb3duLW1lbnVcXFwiIG5nLXN0eWxlPVxcXCJ7ZGlzcGxheTogKGlzT3BlbiAmJiAnYmxvY2snKSB8fCAnbm9uZScsIHRvcDogcG9zaXRpb24udG9wKydweCcsIGxlZnQ6IHBvc2l0aW9uLmxlZnQrJ3B4J31cXFwiIG5nLWtleWRvd249XFxcImtleWRvd24oJGV2ZW50KVxcXCI+XFxuXCIgK1xuICAgIFwiXHQ8bGkgbmctdHJhbnNjbHVkZT48L2xpPlxcblwiICtcbiAgICBcIlx0PGxpIG5nLWlmPVxcXCJzaG93QnV0dG9uQmFyXFxcIiBzdHlsZT1cXFwicGFkZGluZzoxMHB4IDlweCAycHhcXFwiPlxcblwiICtcbiAgICBcIlx0XHQ8c3BhbiBjbGFzcz1cXFwiYnRuLWdyb3VwXFxcIj5cXG5cIiArXG4gICAgXCJcdFx0XHQ8YnV0dG9uIHR5cGU9XFxcImJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tc20gYnRuLWluZm9cXFwiIG5nLWNsaWNrPVxcXCJzZWxlY3QoJ3RvZGF5JylcXFwiPnt7IGdldFRleHQoJ2N1cnJlbnQnKSB9fTwvYnV0dG9uPlxcblwiICtcbiAgICBcIlx0XHRcdDxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1zbSBidG4tZGFuZ2VyXFxcIiBuZy1jbGljaz1cXFwic2VsZWN0KG51bGwpXFxcIj57eyBnZXRUZXh0KCdjbGVhcicpIH19PC9idXR0b24+XFxuXCIgK1xuICAgIFwiXHRcdDwvc3Bhbj5cXG5cIiArXG4gICAgXCJcdFx0PGJ1dHRvbiB0eXBlPVxcXCJidXR0b25cXFwiIGNsYXNzPVxcXCJidG4gYnRuLXNtIGJ0bi1zdWNjZXNzIHB1bGwtcmlnaHRcXFwiIG5nLWNsaWNrPVxcXCJjbG9zZSgpXFxcIj57eyBnZXRUZXh0KCdjbG9zZScpIH19PC9idXR0b24+XFxuXCIgK1xuICAgIFwiXHQ8L2xpPlxcblwiICtcbiAgICBcIjwvdWw+XFxuXCIgK1xuICAgIFwiXCIpO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZShcInRlbXBsYXRlL2RhdGVwaWNrZXIveWVhci5odG1sXCIsIFtdKS5ydW4oW1wiJHRlbXBsYXRlQ2FjaGVcIiwgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KFwidGVtcGxhdGUvZGF0ZXBpY2tlci95ZWFyLmh0bWxcIixcbiAgICBcIjx0YWJsZSByb2xlPVxcXCJncmlkXFxcIiBhcmlhLWxhYmVsbGVkYnk9XFxcInt7dW5pcXVlSWR9fS10aXRsZVxcXCIgYXJpYS1hY3RpdmVkZXNjZW5kYW50PVxcXCJ7e2FjdGl2ZURhdGVJZH19XFxcIj5cXG5cIiArXG4gICAgXCIgIDx0aGVhZD5cXG5cIiArXG4gICAgXCIgICAgPHRyPlxcblwiICtcbiAgICBcIiAgICAgIDx0aD48YnV0dG9uIHR5cGU9XFxcImJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc20gcHVsbC1sZWZ0XFxcIiBuZy1jbGljaz1cXFwibW92ZSgtMSlcXFwiIHRhYmluZGV4PVxcXCItMVxcXCI+PGkgY2xhc3M9XFxcImdseXBoaWNvbiBnbHlwaGljb24tY2hldnJvbi1sZWZ0XFxcIj48L2k+PC9idXR0b24+PC90aD5cXG5cIiArXG4gICAgXCIgICAgICA8dGggY29sc3Bhbj1cXFwiM1xcXCI+PGJ1dHRvbiBpZD1cXFwie3t1bmlxdWVJZH19LXRpdGxlXFxcIiByb2xlPVxcXCJoZWFkaW5nXFxcIiBhcmlhLWxpdmU9XFxcImFzc2VydGl2ZVxcXCIgYXJpYS1hdG9taWM9XFxcInRydWVcXFwiIHR5cGU9XFxcImJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc21cXFwiIG5nLWNsaWNrPVxcXCJ0b2dnbGVNb2RlKClcXFwiIHRhYmluZGV4PVxcXCItMVxcXCIgc3R5bGU9XFxcIndpZHRoOjEwMCU7XFxcIj48c3Ryb25nPnt7dGl0bGV9fTwvc3Ryb25nPjwvYnV0dG9uPjwvdGg+XFxuXCIgK1xuICAgIFwiICAgICAgPHRoPjxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbSBwdWxsLXJpZ2h0XFxcIiBuZy1jbGljaz1cXFwibW92ZSgxKVxcXCIgdGFiaW5kZXg9XFxcIi0xXFxcIj48aSBjbGFzcz1cXFwiZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLXJpZ2h0XFxcIj48L2k+PC9idXR0b24+PC90aD5cXG5cIiArXG4gICAgXCIgICAgPC90cj5cXG5cIiArXG4gICAgXCIgIDwvdGhlYWQ+XFxuXCIgK1xuICAgIFwiICA8dGJvZHk+XFxuXCIgK1xuICAgIFwiICAgIDx0ciBuZy1yZXBlYXQ9XFxcInJvdyBpbiByb3dzIHRyYWNrIGJ5ICRpbmRleFxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgPHRkIG5nLXJlcGVhdD1cXFwiZHQgaW4gcm93IHRyYWNrIGJ5IGR0LmRhdGVcXFwiIGNsYXNzPVxcXCJ0ZXh0LWNlbnRlclxcXCIgcm9sZT1cXFwiZ3JpZGNlbGxcXFwiIGlkPVxcXCJ7e2R0LnVpZH19XFxcIiBhcmlhLWRpc2FibGVkPVxcXCJ7eyEhZHQuZGlzYWJsZWR9fVxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgICA8YnV0dG9uIHR5cGU9XFxcImJ1dHRvblxcXCIgc3R5bGU9XFxcIndpZHRoOjEwMCU7XFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0XFxcIiBuZy1jbGFzcz1cXFwieydidG4taW5mbyc6IGR0LnNlbGVjdGVkLCBhY3RpdmU6IGlzQWN0aXZlKGR0KX1cXFwiIG5nLWNsaWNrPVxcXCJzZWxlY3QoZHQuZGF0ZSlcXFwiIG5nLWRpc2FibGVkPVxcXCJkdC5kaXNhYmxlZFxcXCIgdGFiaW5kZXg9XFxcIi0xXFxcIj48c3BhbiBuZy1jbGFzcz1cXFwieyd0ZXh0LWluZm8nOiBkdC5jdXJyZW50fVxcXCI+e3tkdC5sYWJlbH19PC9zcGFuPjwvYnV0dG9uPlxcblwiICtcbiAgICBcIiAgICAgIDwvdGQ+XFxuXCIgK1xuICAgIFwiICAgIDwvdHI+XFxuXCIgK1xuICAgIFwiICA8L3Rib2R5PlxcblwiICtcbiAgICBcIjwvdGFibGU+XFxuXCIgK1xuICAgIFwiXCIpO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZShcInRlbXBsYXRlL21vZGFsL2JhY2tkcm9wLmh0bWxcIiwgW10pLnJ1bihbXCIkdGVtcGxhdGVDYWNoZVwiLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoXCJ0ZW1wbGF0ZS9tb2RhbC9iYWNrZHJvcC5odG1sXCIsXG4gICAgXCI8ZGl2IGNsYXNzPVxcXCJtb2RhbC1iYWNrZHJvcCBmYWRlIHt7IGJhY2tkcm9wQ2xhc3MgfX1cXFwiXFxuXCIgK1xuICAgIFwiICAgICBuZy1jbGFzcz1cXFwie2luOiBhbmltYXRlfVxcXCJcXG5cIiArXG4gICAgXCIgICAgIG5nLXN0eWxlPVxcXCJ7J3otaW5kZXgnOiAxMDQwICsgKGluZGV4ICYmIDEgfHwgMCkgKyBpbmRleCoxMH1cXFwiXFxuXCIgK1xuICAgIFwiPjwvZGl2PlxcblwiICtcbiAgICBcIlwiKTtcbn1dKTtcblxuYW5ndWxhci5tb2R1bGUoXCJ0ZW1wbGF0ZS9tb2RhbC93aW5kb3cuaHRtbFwiLCBbXSkucnVuKFtcIiR0ZW1wbGF0ZUNhY2hlXCIsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dChcInRlbXBsYXRlL21vZGFsL3dpbmRvdy5odG1sXCIsXG4gICAgXCI8ZGl2IHRhYmluZGV4PVxcXCItMVxcXCIgcm9sZT1cXFwiZGlhbG9nXFxcIiBjbGFzcz1cXFwibW9kYWwgZmFkZVxcXCIgbmctY2xhc3M9XFxcIntpbjogYW5pbWF0ZX1cXFwiIG5nLXN0eWxlPVxcXCJ7J3otaW5kZXgnOiAxMDUwICsgaW5kZXgqMTAsIGRpc3BsYXk6ICdibG9jayd9XFxcIiBuZy1jbGljaz1cXFwiY2xvc2UoJGV2ZW50KVxcXCI+XFxuXCIgK1xuICAgIFwiICAgIDxkaXYgY2xhc3M9XFxcIm1vZGFsLWRpYWxvZ1xcXCIgbmctY2xhc3M9XFxcInsnbW9kYWwtc20nOiBzaXplID09ICdzbScsICdtb2RhbC1sZyc6IHNpemUgPT0gJ2xnJ31cXFwiPjxkaXYgY2xhc3M9XFxcIm1vZGFsLWNvbnRlbnRcXFwiIG1vZGFsLXRyYW5zY2x1ZGU+PC9kaXY+PC9kaXY+XFxuXCIgK1xuICAgIFwiPC9kaXY+XCIpO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZShcInRlbXBsYXRlL3BhZ2luYXRpb24vcGFnZXIuaHRtbFwiLCBbXSkucnVuKFtcIiR0ZW1wbGF0ZUNhY2hlXCIsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dChcInRlbXBsYXRlL3BhZ2luYXRpb24vcGFnZXIuaHRtbFwiLFxuICAgIFwiPHVsIGNsYXNzPVxcXCJwYWdlclxcXCI+XFxuXCIgK1xuICAgIFwiICA8bGkgbmctY2xhc3M9XFxcIntkaXNhYmxlZDogbm9QcmV2aW91cygpLCBwcmV2aW91czogYWxpZ259XFxcIj48YSBocmVmIG5nLWNsaWNrPVxcXCJzZWxlY3RQYWdlKHBhZ2UgLSAxKVxcXCI+e3tnZXRUZXh0KCdwcmV2aW91cycpfX08L2E+PC9saT5cXG5cIiArXG4gICAgXCIgIDxsaSBuZy1jbGFzcz1cXFwie2Rpc2FibGVkOiBub05leHQoKSwgbmV4dDogYWxpZ259XFxcIj48YSBocmVmIG5nLWNsaWNrPVxcXCJzZWxlY3RQYWdlKHBhZ2UgKyAxKVxcXCI+e3tnZXRUZXh0KCduZXh0Jyl9fTwvYT48L2xpPlxcblwiICtcbiAgICBcIjwvdWw+XCIpO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZShcInRlbXBsYXRlL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5odG1sXCIsIFtdKS5ydW4oW1wiJHRlbXBsYXRlQ2FjaGVcIiwgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KFwidGVtcGxhdGUvcGFnaW5hdGlvbi9wYWdpbmF0aW9uLmh0bWxcIixcbiAgICBcIjx1bCBjbGFzcz1cXFwicGFnaW5hdGlvblxcXCI+XFxuXCIgK1xuICAgIFwiICA8bGkgbmctaWY9XFxcImJvdW5kYXJ5TGlua3NcXFwiIG5nLWNsYXNzPVxcXCJ7ZGlzYWJsZWQ6IG5vUHJldmlvdXMoKX1cXFwiPjxhIGhyZWYgbmctY2xpY2s9XFxcInNlbGVjdFBhZ2UoMSlcXFwiPnt7Z2V0VGV4dCgnZmlyc3QnKX19PC9hPjwvbGk+XFxuXCIgK1xuICAgIFwiICA8bGkgbmctaWY9XFxcImRpcmVjdGlvbkxpbmtzXFxcIiBuZy1jbGFzcz1cXFwie2Rpc2FibGVkOiBub1ByZXZpb3VzKCl9XFxcIj48YSBocmVmIG5nLWNsaWNrPVxcXCJzZWxlY3RQYWdlKHBhZ2UgLSAxKVxcXCI+e3tnZXRUZXh0KCdwcmV2aW91cycpfX08L2E+PC9saT5cXG5cIiArXG4gICAgXCIgIDxsaSBuZy1yZXBlYXQ9XFxcInBhZ2UgaW4gcGFnZXMgdHJhY2sgYnkgJGluZGV4XFxcIiBuZy1jbGFzcz1cXFwie2FjdGl2ZTogcGFnZS5hY3RpdmV9XFxcIj48YSBocmVmIG5nLWNsaWNrPVxcXCJzZWxlY3RQYWdlKHBhZ2UubnVtYmVyKVxcXCI+e3twYWdlLnRleHR9fTwvYT48L2xpPlxcblwiICtcbiAgICBcIiAgPGxpIG5nLWlmPVxcXCJkaXJlY3Rpb25MaW5rc1xcXCIgbmctY2xhc3M9XFxcIntkaXNhYmxlZDogbm9OZXh0KCl9XFxcIj48YSBocmVmIG5nLWNsaWNrPVxcXCJzZWxlY3RQYWdlKHBhZ2UgKyAxKVxcXCI+e3tnZXRUZXh0KCduZXh0Jyl9fTwvYT48L2xpPlxcblwiICtcbiAgICBcIiAgPGxpIG5nLWlmPVxcXCJib3VuZGFyeUxpbmtzXFxcIiBuZy1jbGFzcz1cXFwie2Rpc2FibGVkOiBub05leHQoKX1cXFwiPjxhIGhyZWYgbmctY2xpY2s9XFxcInNlbGVjdFBhZ2UodG90YWxQYWdlcylcXFwiPnt7Z2V0VGV4dCgnbGFzdCcpfX08L2E+PC9saT5cXG5cIiArXG4gICAgXCI8L3VsPlwiKTtcbn1dKTtcblxuYW5ndWxhci5tb2R1bGUoXCJ0ZW1wbGF0ZS90b29sdGlwL3Rvb2x0aXAtaHRtbC11bnNhZmUtcG9wdXAuaHRtbFwiLCBbXSkucnVuKFtcIiR0ZW1wbGF0ZUNhY2hlXCIsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dChcInRlbXBsYXRlL3Rvb2x0aXAvdG9vbHRpcC1odG1sLXVuc2FmZS1wb3B1cC5odG1sXCIsXG4gICAgXCI8ZGl2IGNsYXNzPVxcXCJ0b29sdGlwIHt7cGxhY2VtZW50fX1cXFwiIG5nLWNsYXNzPVxcXCJ7IGluOiBpc09wZW4oKSwgZmFkZTogYW5pbWF0aW9uKCkgfVxcXCI+XFxuXCIgK1xuICAgIFwiICA8ZGl2IGNsYXNzPVxcXCJ0b29sdGlwLWFycm93XFxcIj48L2Rpdj5cXG5cIiArXG4gICAgXCIgIDxkaXYgY2xhc3M9XFxcInRvb2x0aXAtaW5uZXJcXFwiIGJpbmQtaHRtbC11bnNhZmU9XFxcImNvbnRlbnRcXFwiPjwvZGl2PlxcblwiICtcbiAgICBcIjwvZGl2PlxcblwiICtcbiAgICBcIlwiKTtcbn1dKTtcblxuYW5ndWxhci5tb2R1bGUoXCJ0ZW1wbGF0ZS90b29sdGlwL3Rvb2x0aXAtcG9wdXAuaHRtbFwiLCBbXSkucnVuKFtcIiR0ZW1wbGF0ZUNhY2hlXCIsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dChcInRlbXBsYXRlL3Rvb2x0aXAvdG9vbHRpcC1wb3B1cC5odG1sXCIsXG4gICAgXCI8ZGl2IGNsYXNzPVxcXCJ0b29sdGlwIHt7cGxhY2VtZW50fX1cXFwiIG5nLWNsYXNzPVxcXCJ7IGluOiBpc09wZW4oKSwgZmFkZTogYW5pbWF0aW9uKCkgfVxcXCI+XFxuXCIgK1xuICAgIFwiICA8ZGl2IGNsYXNzPVxcXCJ0b29sdGlwLWFycm93XFxcIj48L2Rpdj5cXG5cIiArXG4gICAgXCIgIDxkaXYgY2xhc3M9XFxcInRvb2x0aXAtaW5uZXJcXFwiIG5nLWJpbmQ9XFxcImNvbnRlbnRcXFwiPjwvZGl2PlxcblwiICtcbiAgICBcIjwvZGl2PlxcblwiICtcbiAgICBcIlwiKTtcbn1dKTtcblxuYW5ndWxhci5tb2R1bGUoXCJ0ZW1wbGF0ZS9wb3BvdmVyL3BvcG92ZXIuaHRtbFwiLCBbXSkucnVuKFtcIiR0ZW1wbGF0ZUNhY2hlXCIsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dChcInRlbXBsYXRlL3BvcG92ZXIvcG9wb3Zlci5odG1sXCIsXG4gICAgXCI8ZGl2IGNsYXNzPVxcXCJwb3BvdmVyIHt7cGxhY2VtZW50fX1cXFwiIG5nLWNsYXNzPVxcXCJ7IGluOiBpc09wZW4oKSwgZmFkZTogYW5pbWF0aW9uKCkgfVxcXCI+XFxuXCIgK1xuICAgIFwiICA8ZGl2IGNsYXNzPVxcXCJhcnJvd1xcXCI+PC9kaXY+XFxuXCIgK1xuICAgIFwiXFxuXCIgK1xuICAgIFwiICA8ZGl2IGNsYXNzPVxcXCJwb3BvdmVyLWlubmVyXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICA8aDMgY2xhc3M9XFxcInBvcG92ZXItdGl0bGVcXFwiIG5nLWJpbmQ9XFxcInRpdGxlXFxcIiBuZy1zaG93PVxcXCJ0aXRsZVxcXCI+PC9oMz5cXG5cIiArXG4gICAgXCIgICAgICA8ZGl2IGNsYXNzPVxcXCJwb3BvdmVyLWNvbnRlbnRcXFwiIG5nLWJpbmQ9XFxcImNvbnRlbnRcXFwiPjwvZGl2PlxcblwiICtcbiAgICBcIiAgPC9kaXY+XFxuXCIgK1xuICAgIFwiPC9kaXY+XFxuXCIgK1xuICAgIFwiXCIpO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZShcInRlbXBsYXRlL3Byb2dyZXNzYmFyL2Jhci5odG1sXCIsIFtdKS5ydW4oW1wiJHRlbXBsYXRlQ2FjaGVcIiwgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KFwidGVtcGxhdGUvcHJvZ3Jlc3NiYXIvYmFyLmh0bWxcIixcbiAgICBcIjxkaXYgY2xhc3M9XFxcInByb2dyZXNzLWJhclxcXCIgbmctY2xhc3M9XFxcInR5cGUgJiYgJ3Byb2dyZXNzLWJhci0nICsgdHlwZVxcXCIgcm9sZT1cXFwicHJvZ3Jlc3NiYXJcXFwiIGFyaWEtdmFsdWVub3c9XFxcInt7dmFsdWV9fVxcXCIgYXJpYS12YWx1ZW1pbj1cXFwiMFxcXCIgYXJpYS12YWx1ZW1heD1cXFwie3ttYXh9fVxcXCIgbmctc3R5bGU9XFxcInt3aWR0aDogcGVyY2VudCArICclJ31cXFwiIGFyaWEtdmFsdWV0ZXh0PVxcXCJ7e3BlcmNlbnQgfCBudW1iZXI6MH19JVxcXCIgbmctdHJhbnNjbHVkZT48L2Rpdj5cIik7XG59XSk7XG5cbmFuZ3VsYXIubW9kdWxlKFwidGVtcGxhdGUvcHJvZ3Jlc3NiYXIvcHJvZ3Jlc3MuaHRtbFwiLCBbXSkucnVuKFtcIiR0ZW1wbGF0ZUNhY2hlXCIsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dChcInRlbXBsYXRlL3Byb2dyZXNzYmFyL3Byb2dyZXNzLmh0bWxcIixcbiAgICBcIjxkaXYgY2xhc3M9XFxcInByb2dyZXNzXFxcIiBuZy10cmFuc2NsdWRlPjwvZGl2PlwiKTtcbn1dKTtcblxuYW5ndWxhci5tb2R1bGUoXCJ0ZW1wbGF0ZS9wcm9ncmVzc2Jhci9wcm9ncmVzc2Jhci5odG1sXCIsIFtdKS5ydW4oW1wiJHRlbXBsYXRlQ2FjaGVcIiwgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KFwidGVtcGxhdGUvcHJvZ3Jlc3NiYXIvcHJvZ3Jlc3NiYXIuaHRtbFwiLFxuICAgIFwiPGRpdiBjbGFzcz1cXFwicHJvZ3Jlc3NcXFwiPlxcblwiICtcbiAgICBcIiAgPGRpdiBjbGFzcz1cXFwicHJvZ3Jlc3MtYmFyXFxcIiBuZy1jbGFzcz1cXFwidHlwZSAmJiAncHJvZ3Jlc3MtYmFyLScgKyB0eXBlXFxcIiByb2xlPVxcXCJwcm9ncmVzc2JhclxcXCIgYXJpYS12YWx1ZW5vdz1cXFwie3t2YWx1ZX19XFxcIiBhcmlhLXZhbHVlbWluPVxcXCIwXFxcIiBhcmlhLXZhbHVlbWF4PVxcXCJ7e21heH19XFxcIiBuZy1zdHlsZT1cXFwie3dpZHRoOiBwZXJjZW50ICsgJyUnfVxcXCIgYXJpYS12YWx1ZXRleHQ9XFxcInt7cGVyY2VudCB8IG51bWJlcjowfX0lXFxcIiBuZy10cmFuc2NsdWRlPjwvZGl2PlxcblwiICtcbiAgICBcIjwvZGl2PlwiKTtcbn1dKTtcblxuYW5ndWxhci5tb2R1bGUoXCJ0ZW1wbGF0ZS9yYXRpbmcvcmF0aW5nLmh0bWxcIiwgW10pLnJ1bihbXCIkdGVtcGxhdGVDYWNoZVwiLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoXCJ0ZW1wbGF0ZS9yYXRpbmcvcmF0aW5nLmh0bWxcIixcbiAgICBcIjxzcGFuIG5nLW1vdXNlbGVhdmU9XFxcInJlc2V0KClcXFwiIG5nLWtleWRvd249XFxcIm9uS2V5ZG93bigkZXZlbnQpXFxcIiB0YWJpbmRleD1cXFwiMFxcXCIgcm9sZT1cXFwic2xpZGVyXFxcIiBhcmlhLXZhbHVlbWluPVxcXCIwXFxcIiBhcmlhLXZhbHVlbWF4PVxcXCJ7e3JhbmdlLmxlbmd0aH19XFxcIiBhcmlhLXZhbHVlbm93PVxcXCJ7e3ZhbHVlfX1cXFwiPlxcblwiICtcbiAgICBcIiAgICA8aSBuZy1yZXBlYXQ9XFxcInIgaW4gcmFuZ2UgdHJhY2sgYnkgJGluZGV4XFxcIiBuZy1tb3VzZWVudGVyPVxcXCJlbnRlcigkaW5kZXggKyAxKVxcXCIgbmctY2xpY2s9XFxcInJhdGUoJGluZGV4ICsgMSlcXFwiIGNsYXNzPVxcXCJnbHlwaGljb25cXFwiIG5nLWNsYXNzPVxcXCIkaW5kZXggPCB2YWx1ZSAmJiAoci5zdGF0ZU9uIHx8ICdnbHlwaGljb24tc3RhcicpIHx8IChyLnN0YXRlT2ZmIHx8ICdnbHlwaGljb24tc3Rhci1lbXB0eScpXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICAgIDxzcGFuIGNsYXNzPVxcXCJzci1vbmx5XFxcIj4oe3sgJGluZGV4IDwgdmFsdWUgPyAnKicgOiAnICcgfX0pPC9zcGFuPlxcblwiICtcbiAgICBcIiAgICA8L2k+XFxuXCIgK1xuICAgIFwiPC9zcGFuPlwiKTtcbn1dKTtcblxuYW5ndWxhci5tb2R1bGUoXCJ0ZW1wbGF0ZS90YWJzL3RhYi5odG1sXCIsIFtdKS5ydW4oW1wiJHRlbXBsYXRlQ2FjaGVcIiwgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KFwidGVtcGxhdGUvdGFicy90YWIuaHRtbFwiLFxuICAgIFwiPGxpIG5nLWNsYXNzPVxcXCJ7YWN0aXZlOiBhY3RpdmUsIGRpc2FibGVkOiBkaXNhYmxlZH1cXFwiPlxcblwiICtcbiAgICBcIiAgPGEgbmctY2xpY2s9XFxcInNlbGVjdCgpXFxcIiB0YWItaGVhZGluZy10cmFuc2NsdWRlPnt7aGVhZGluZ319PC9hPlxcblwiICtcbiAgICBcIjwvbGk+XFxuXCIgK1xuICAgIFwiXCIpO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZShcInRlbXBsYXRlL3RhYnMvdGFic2V0Lmh0bWxcIiwgW10pLnJ1bihbXCIkdGVtcGxhdGVDYWNoZVwiLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoXCJ0ZW1wbGF0ZS90YWJzL3RhYnNldC5odG1sXCIsXG4gICAgXCI8ZGl2PlxcblwiICtcbiAgICBcIiAgPHVsIGNsYXNzPVxcXCJuYXYgbmF2LXt7dHlwZSB8fCAndGFicyd9fVxcXCIgbmctY2xhc3M9XFxcInsnbmF2LXN0YWNrZWQnOiB2ZXJ0aWNhbCwgJ25hdi1qdXN0aWZpZWQnOiBqdXN0aWZpZWR9XFxcIiBuZy10cmFuc2NsdWRlPjwvdWw+XFxuXCIgK1xuICAgIFwiICA8ZGl2IGNsYXNzPVxcXCJ0YWItY29udGVudFxcXCI+XFxuXCIgK1xuICAgIFwiICAgIDxkaXYgY2xhc3M9XFxcInRhYi1wYW5lXFxcIiBcXG5cIiArXG4gICAgXCIgICAgICAgICBuZy1yZXBlYXQ9XFxcInRhYiBpbiB0YWJzXFxcIiBcXG5cIiArXG4gICAgXCIgICAgICAgICBuZy1jbGFzcz1cXFwie2FjdGl2ZTogdGFiLmFjdGl2ZX1cXFwiXFxuXCIgK1xuICAgIFwiICAgICAgICAgdGFiLWNvbnRlbnQtdHJhbnNjbHVkZT1cXFwidGFiXFxcIj5cXG5cIiArXG4gICAgXCIgICAgPC9kaXY+XFxuXCIgK1xuICAgIFwiICA8L2Rpdj5cXG5cIiArXG4gICAgXCI8L2Rpdj5cXG5cIiArXG4gICAgXCJcIik7XG59XSk7XG5cbmFuZ3VsYXIubW9kdWxlKFwidGVtcGxhdGUvdGltZXBpY2tlci90aW1lcGlja2VyLmh0bWxcIiwgW10pLnJ1bihbXCIkdGVtcGxhdGVDYWNoZVwiLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoXCJ0ZW1wbGF0ZS90aW1lcGlja2VyL3RpbWVwaWNrZXIuaHRtbFwiLFxuICAgIFwiPHRhYmxlPlxcblwiICtcbiAgICBcIlx0PHRib2R5PlxcblwiICtcbiAgICBcIlx0XHQ8dHIgY2xhc3M9XFxcInRleHQtY2VudGVyXFxcIj5cXG5cIiArXG4gICAgXCJcdFx0XHQ8dGQ+PGEgbmctY2xpY2s9XFxcImluY3JlbWVudEhvdXJzKClcXFwiIGNsYXNzPVxcXCJidG4gYnRuLWxpbmtcXFwiPjxzcGFuIGNsYXNzPVxcXCJnbHlwaGljb24gZ2x5cGhpY29uLWNoZXZyb24tdXBcXFwiPjwvc3Bhbj48L2E+PC90ZD5cXG5cIiArXG4gICAgXCJcdFx0XHQ8dGQ+Jm5ic3A7PC90ZD5cXG5cIiArXG4gICAgXCJcdFx0XHQ8dGQ+PGEgbmctY2xpY2s9XFxcImluY3JlbWVudE1pbnV0ZXMoKVxcXCIgY2xhc3M9XFxcImJ0biBidG4tbGlua1xcXCI+PHNwYW4gY2xhc3M9XFxcImdseXBoaWNvbiBnbHlwaGljb24tY2hldnJvbi11cFxcXCI+PC9zcGFuPjwvYT48L3RkPlxcblwiICtcbiAgICBcIlx0XHRcdDx0ZCBuZy1zaG93PVxcXCJzaG93TWVyaWRpYW5cXFwiPjwvdGQ+XFxuXCIgK1xuICAgIFwiXHRcdDwvdHI+XFxuXCIgK1xuICAgIFwiXHRcdDx0cj5cXG5cIiArXG4gICAgXCJcdFx0XHQ8dGQgc3R5bGU9XFxcIndpZHRoOjUwcHg7XFxcIiBjbGFzcz1cXFwiZm9ybS1ncm91cFxcXCIgbmctY2xhc3M9XFxcInsnaGFzLWVycm9yJzogaW52YWxpZEhvdXJzfVxcXCI+XFxuXCIgK1xuICAgIFwiXHRcdFx0XHQ8aW5wdXQgdHlwZT1cXFwidGV4dFxcXCIgbmctbW9kZWw9XFxcImhvdXJzXFxcIiBuZy1jaGFuZ2U9XFxcInVwZGF0ZUhvdXJzKClcXFwiIGNsYXNzPVxcXCJmb3JtLWNvbnRyb2wgdGV4dC1jZW50ZXJcXFwiIG5nLW1vdXNld2hlZWw9XFxcImluY3JlbWVudEhvdXJzKClcXFwiIG5nLXJlYWRvbmx5PVxcXCJyZWFkb25seUlucHV0XFxcIiBtYXhsZW5ndGg9XFxcIjJcXFwiPlxcblwiICtcbiAgICBcIlx0XHRcdDwvdGQ+XFxuXCIgK1xuICAgIFwiXHRcdFx0PHRkPjo8L3RkPlxcblwiICtcbiAgICBcIlx0XHRcdDx0ZCBzdHlsZT1cXFwid2lkdGg6NTBweDtcXFwiIGNsYXNzPVxcXCJmb3JtLWdyb3VwXFxcIiBuZy1jbGFzcz1cXFwieydoYXMtZXJyb3InOiBpbnZhbGlkTWludXRlc31cXFwiPlxcblwiICtcbiAgICBcIlx0XHRcdFx0PGlucHV0IHR5cGU9XFxcInRleHRcXFwiIG5nLW1vZGVsPVxcXCJtaW51dGVzXFxcIiBuZy1jaGFuZ2U9XFxcInVwZGF0ZU1pbnV0ZXMoKVxcXCIgY2xhc3M9XFxcImZvcm0tY29udHJvbCB0ZXh0LWNlbnRlclxcXCIgbmctcmVhZG9ubHk9XFxcInJlYWRvbmx5SW5wdXRcXFwiIG1heGxlbmd0aD1cXFwiMlxcXCI+XFxuXCIgK1xuICAgIFwiXHRcdFx0PC90ZD5cXG5cIiArXG4gICAgXCJcdFx0XHQ8dGQgbmctc2hvdz1cXFwic2hvd01lcmlkaWFuXFxcIj48YnV0dG9uIHR5cGU9XFxcImJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCB0ZXh0LWNlbnRlclxcXCIgbmctY2xpY2s9XFxcInRvZ2dsZU1lcmlkaWFuKClcXFwiPnt7bWVyaWRpYW59fTwvYnV0dG9uPjwvdGQ+XFxuXCIgK1xuICAgIFwiXHRcdDwvdHI+XFxuXCIgK1xuICAgIFwiXHRcdDx0ciBjbGFzcz1cXFwidGV4dC1jZW50ZXJcXFwiPlxcblwiICtcbiAgICBcIlx0XHRcdDx0ZD48YSBuZy1jbGljaz1cXFwiZGVjcmVtZW50SG91cnMoKVxcXCIgY2xhc3M9XFxcImJ0biBidG4tbGlua1xcXCI+PHNwYW4gY2xhc3M9XFxcImdseXBoaWNvbiBnbHlwaGljb24tY2hldnJvbi1kb3duXFxcIj48L3NwYW4+PC9hPjwvdGQ+XFxuXCIgK1xuICAgIFwiXHRcdFx0PHRkPiZuYnNwOzwvdGQ+XFxuXCIgK1xuICAgIFwiXHRcdFx0PHRkPjxhIG5nLWNsaWNrPVxcXCJkZWNyZW1lbnRNaW51dGVzKClcXFwiIGNsYXNzPVxcXCJidG4gYnRuLWxpbmtcXFwiPjxzcGFuIGNsYXNzPVxcXCJnbHlwaGljb24gZ2x5cGhpY29uLWNoZXZyb24tZG93blxcXCI+PC9zcGFuPjwvYT48L3RkPlxcblwiICtcbiAgICBcIlx0XHRcdDx0ZCBuZy1zaG93PVxcXCJzaG93TWVyaWRpYW5cXFwiPjwvdGQ+XFxuXCIgK1xuICAgIFwiXHRcdDwvdHI+XFxuXCIgK1xuICAgIFwiXHQ8L3Rib2R5PlxcblwiICtcbiAgICBcIjwvdGFibGU+XFxuXCIgK1xuICAgIFwiXCIpO1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZShcInRlbXBsYXRlL3R5cGVhaGVhZC90eXBlYWhlYWQtbWF0Y2guaHRtbFwiLCBbXSkucnVuKFtcIiR0ZW1wbGF0ZUNhY2hlXCIsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dChcInRlbXBsYXRlL3R5cGVhaGVhZC90eXBlYWhlYWQtbWF0Y2guaHRtbFwiLFxuICAgIFwiPGEgdGFiaW5kZXg9XFxcIi0xXFxcIiBiaW5kLWh0bWwtdW5zYWZlPVxcXCJtYXRjaC5sYWJlbCB8IHR5cGVhaGVhZEhpZ2hsaWdodDpxdWVyeVxcXCI+PC9hPlwiKTtcbn1dKTtcblxuYW5ndWxhci5tb2R1bGUoXCJ0ZW1wbGF0ZS90eXBlYWhlYWQvdHlwZWFoZWFkLXBvcHVwLmh0bWxcIiwgW10pLnJ1bihbXCIkdGVtcGxhdGVDYWNoZVwiLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoXCJ0ZW1wbGF0ZS90eXBlYWhlYWQvdHlwZWFoZWFkLXBvcHVwLmh0bWxcIixcbiAgICBcIjx1bCBjbGFzcz1cXFwiZHJvcGRvd24tbWVudVxcXCIgbmctc2hvdz1cXFwiaXNPcGVuKClcXFwiIG5nLXN0eWxlPVxcXCJ7dG9wOiBwb3NpdGlvbi50b3ArJ3B4JywgbGVmdDogcG9zaXRpb24ubGVmdCsncHgnfVxcXCIgc3R5bGU9XFxcImRpc3BsYXk6IGJsb2NrO1xcXCIgcm9sZT1cXFwibGlzdGJveFxcXCIgYXJpYS1oaWRkZW49XFxcInt7IWlzT3BlbigpfX1cXFwiPlxcblwiICtcbiAgICBcIiAgICA8bGkgbmctcmVwZWF0PVxcXCJtYXRjaCBpbiBtYXRjaGVzIHRyYWNrIGJ5ICRpbmRleFxcXCIgbmctY2xhc3M9XFxcInthY3RpdmU6IGlzQWN0aXZlKCRpbmRleCkgfVxcXCIgbmctbW91c2VlbnRlcj1cXFwic2VsZWN0QWN0aXZlKCRpbmRleClcXFwiIG5nLWNsaWNrPVxcXCJzZWxlY3RNYXRjaCgkaW5kZXgpXFxcIiByb2xlPVxcXCJvcHRpb25cXFwiIGlkPVxcXCJ7e21hdGNoLmlkfX1cXFwiPlxcblwiICtcbiAgICBcIiAgICAgICAgPGRpdiB0eXBlYWhlYWQtbWF0Y2ggaW5kZXg9XFxcIiRpbmRleFxcXCIgbWF0Y2g9XFxcIm1hdGNoXFxcIiBxdWVyeT1cXFwicXVlcnlcXFwiIHRlbXBsYXRlLXVybD1cXFwidGVtcGxhdGVVcmxcXFwiPjwvZGl2PlxcblwiICtcbiAgICBcIiAgICA8L2xpPlxcblwiICtcbiAgICBcIjwvdWw+XFxuXCIgK1xuICAgIFwiXCIpO1xufV0pO1xuXG4vKipcbiogcnYtYm9vdHN0cmFwLWZvcm1oZWxwZXJzLmpzIHYyLjMuMy1ydiBieSBAdmluY2VudGxhbWFubmFcbiogQ29weXJpZ2h0IDIwMTQgXG4qIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuKi9cbmlmICghalF1ZXJ5KSB7IHRocm93IG5ldyBFcnJvcihcIkJvb3RzdHJhcCBGb3JtIEhlbHBlcnMgcmVxdWlyZXMgalF1ZXJ5XCIpOyB9XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIGJvb3RzdHJhcC1mb3JtaGVscGVycy1jb3VudHJpZXMuZW5fVVMuanNcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS92bGFtYW5uYS9Cb290c3RyYXBGb3JtSGVscGVyc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTIgVmluY2VudCBMYW1hbm5hXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4gXG52YXIgQkZIQ291bnRyaWVzTGlzdCA9IHtcbiAgJ0FGJzogJ0FmZ2hhbmlzdGFuJyxcbiAgJ0FMJzogJ0FsYmFuaWEnLFxuICAnRFonOiAnQWxnZXJpYScsXG4gICdBUyc6ICdBbWVyaWNhbiBTYW1vYScsXG4gICdBRCc6ICdBbmRvcnJhJyxcbiAgJ0FPJzogJ0FuZ29sYScsXG4gICdBSSc6ICdBbmd1aWxsYScsXG4gICdBUSc6ICdBbnRhcmN0aWNhJyxcbiAgJ0FHJzogJ0FudGlndWEgYW5kIEJhcmJ1ZGEnLFxuICAnQVInOiAnQXJnZW50aW5hJyxcbiAgJ0FNJzogJ0FybWVuaWEnLFxuICAnQVcnOiAnQXJ1YmEnLFxuICAnQVUnOiAnQXVzdHJhbGlhJyxcbiAgJ0FUJzogJ0F1c3RyaWEnLFxuICAnQVonOiAnQXplcmJhaWphbicsXG4gICdCSCc6ICdCYWhyYWluJyxcbiAgJ0JEJzogJ0JhbmdsYWRlc2gnLFxuICAnQkInOiAnQmFyYmFkb3MnLFxuICAnQlknOiAnQmVsYXJ1cycsXG4gICdCRSc6ICdCZWxnaXVtJyxcbiAgJ0JaJzogJ0JlbGl6ZScsXG4gICdCSic6ICdCZW5pbicsXG4gICdCTSc6ICdCZXJtdWRhJyxcbiAgJ0JUJzogJ0JodXRhbicsXG4gICdCTyc6ICdCb2xpdmlhJyxcbiAgJ0JBJzogJ0Jvc25pYSBhbmQgSGVyemVnb3ZpbmEnLFxuICAnQlcnOiAnQm90c3dhbmEnLFxuICAnQlYnOiAnQm91dmV0IElzbGFuZCcsXG4gICdCUic6ICdCcmF6aWwnLFxuICAnSU8nOiAnQnJpdGlzaCBJbmRpYW4gT2NlYW4gVGVycml0b3J5JyxcbiAgJ1ZHJzogJ0JyaXRpc2ggVmlyZ2luIElzbGFuZHMnLFxuICAnQk4nOiAnQnJ1bmVpJyxcbiAgJ0JHJzogJ0J1bGdhcmlhJyxcbiAgJ0JGJzogJ0J1cmtpbmEgRmFzbycsXG4gICdCSSc6ICdCdXJ1bmRpJyxcbiAgJ0NJJzogJ0PDtHRlIGRcXCdJdm9pcmUnLFxuICAnS0gnOiAnQ2FtYm9kaWEnLFxuICAnQ00nOiAnQ2FtZXJvb24nLFxuICAnQ0EnOiAnQ2FuYWRhJyxcbiAgJ0NWJzogJ0NhcGUgVmVyZGUnLFxuICAnS1knOiAnQ2F5bWFuIElzbGFuZHMnLFxuICAnQ0YnOiAnQ2VudHJhbCBBZnJpY2FuIFJlcHVibGljJyxcbiAgJ1REJzogJ0NoYWQnLFxuICAnQ0wnOiAnQ2hpbGUnLFxuICAnQ04nOiAnQ2hpbmEnLFxuICAnQ1gnOiAnQ2hyaXN0bWFzIElzbGFuZCcsXG4gICdDQyc6ICdDb2NvcyAoS2VlbGluZykgSXNsYW5kcycsXG4gICdDTyc6ICdDb2xvbWJpYScsXG4gICdLTSc6ICdDb21vcm9zJyxcbiAgJ0NHJzogJ0NvbmdvJyxcbiAgJ0NLJzogJ0Nvb2sgSXNsYW5kcycsXG4gICdDUic6ICdDb3N0YSBSaWNhJyxcbiAgJ0hSJzogJ0Nyb2F0aWEnLFxuICAnQ1UnOiAnQ3ViYScsXG4gICdDWSc6ICdDeXBydXMnLFxuICAnQ1onOiAnQ3plY2ggUmVwdWJsaWMnLFxuICAnQ0QnOiAnRGVtb2NyYXRpYyBSZXB1YmxpYyBvZiB0aGUgQ29uZ28nLFxuICAnREsnOiAnRGVubWFyaycsXG4gICdESic6ICdEamlib3V0aScsXG4gICdETSc6ICdEb21pbmljYScsXG4gICdETyc6ICdEb21pbmljYW4gUmVwdWJsaWMnLFxuICAnVFAnOiAnRWFzdCBUaW1vcicsXG4gICdFQyc6ICdFY3VhZG9yJyxcbiAgJ0VHJzogJ0VneXB0JyxcbiAgJ1NWJzogJ0VsIFNhbHZhZG9yJyxcbiAgJ0dRJzogJ0VxdWF0b3JpYWwgR3VpbmVhJyxcbiAgJ0VSJzogJ0VyaXRyZWEnLFxuICAnRUUnOiAnRXN0b25pYScsXG4gICdFVCc6ICdFdGhpb3BpYScsXG4gICdGTyc6ICdGYWVyb2UgSXNsYW5kcycsXG4gICdGSyc6ICdGYWxrbGFuZCBJc2xhbmRzJyxcbiAgJ0ZKJzogJ0ZpamknLFxuICAnRkknOiAnRmlubGFuZCcsXG4gICdNSyc6ICdGb3JtZXIgWXVnb3NsYXYgUmVwdWJsaWMgb2YgTWFjZWRvbmlhJyxcbiAgJ0ZSJzogJ0ZyYW5jZScsXG4gICdGWCc6ICdGcmFuY2UsIE1ldHJvcG9saXRhbicsXG4gICdHRic6ICdGcmVuY2ggR3VpYW5hJyxcbiAgJ1BGJzogJ0ZyZW5jaCBQb2x5bmVzaWEnLFxuICAnVEYnOiAnRnJlbmNoIFNvdXRoZXJuIFRlcnJpdG9yaWVzJyxcbiAgJ0dBJzogJ0dhYm9uJyxcbiAgJ0dFJzogJ0dlb3JnaWEnLFxuICAnREUnOiAnR2VybWFueScsXG4gICdHSCc6ICdHaGFuYScsXG4gICdHSSc6ICdHaWJyYWx0YXInLFxuICAnR1InOiAnR3JlZWNlJyxcbiAgJ0dMJzogJ0dyZWVubGFuZCcsXG4gICdHRCc6ICdHcmVuYWRhJyxcbiAgJ0dQJzogJ0d1YWRlbG91cGUnLFxuICAnR1UnOiAnR3VhbScsXG4gICdHVCc6ICdHdWF0ZW1hbGEnLFxuICAnR04nOiAnR3VpbmVhJyxcbiAgJ0dXJzogJ0d1aW5lYS1CaXNzYXUnLFxuICAnR1knOiAnR3V5YW5hJyxcbiAgJ0hUJzogJ0hhaXRpJyxcbiAgJ0hNJzogJ0hlYXJkIGFuZCBNYyBEb25hbGQgSXNsYW5kcycsXG4gICdITic6ICdIb25kdXJhcycsXG4gICdISyc6ICdIb25nIEtvbmcnLFxuICAnSFUnOiAnSHVuZ2FyeScsXG4gICdJUyc6ICdJY2VsYW5kJyxcbiAgJ0lOJzogJ0luZGlhJyxcbiAgJ0lEJzogJ0luZG9uZXNpYScsXG4gICdJUic6ICdJcmFuJyxcbiAgJ0lRJzogJ0lyYXEnLFxuICAnSUUnOiAnSXJlbGFuZCcsXG4gICdJTCc6ICdJc3JhZWwnLFxuICAnSVQnOiAnSXRhbHknLFxuICAnSk0nOiAnSmFtYWljYScsXG4gICdKUCc6ICdKYXBhbicsXG4gICdKTyc6ICdKb3JkYW4nLFxuICAnS1onOiAnS2F6YWtoc3RhbicsXG4gICdLRSc6ICdLZW55YScsXG4gICdLSSc6ICdLaXJpYmF0aScsXG4gICdLVyc6ICdLdXdhaXQnLFxuICAnS0cnOiAnS3lyZ3l6c3RhbicsXG4gICdMQSc6ICdMYW9zJyxcbiAgJ0xWJzogJ0xhdHZpYScsXG4gICdMQic6ICdMZWJhbm9uJyxcbiAgJ0xTJzogJ0xlc290aG8nLFxuICAnTFInOiAnTGliZXJpYScsXG4gICdMWSc6ICdMaWJ5YScsXG4gICdMSSc6ICdMaWVjaHRlbnN0ZWluJyxcbiAgJ0xUJzogJ0xpdGh1YW5pYScsXG4gICdMVSc6ICdMdXhlbWJvdXJnJyxcbiAgJ01PJzogJ01hY2F1JyxcbiAgJ01HJzogJ01hZGFnYXNjYXInLFxuICAnTVcnOiAnTWFsYXdpJyxcbiAgJ01ZJzogJ01hbGF5c2lhJyxcbiAgJ01WJzogJ01hbGRpdmVzJyxcbiAgJ01MJzogJ01hbGknLFxuICAnTVQnOiAnTWFsdGEnLFxuICAnTUgnOiAnTWFyc2hhbGwgSXNsYW5kcycsXG4gICdNUSc6ICdNYXJ0aW5pcXVlJyxcbiAgJ01SJzogJ01hdXJpdGFuaWEnLFxuICAnTVUnOiAnTWF1cml0aXVzJyxcbiAgJ1lUJzogJ01heW90dGUnLFxuICAnTVgnOiAnTWV4aWNvJyxcbiAgJ0ZNJzogJ01pY3JvbmVzaWEnLFxuICAnTUQnOiAnTW9sZG92YScsXG4gICdNQyc6ICdNb25hY28nLFxuICAnTU4nOiAnTW9uZ29saWEnLFxuICAnTUUnOiAnTW9udGVuZWdybycsXG4gICdNUyc6ICdNb250c2VycmF0JyxcbiAgJ01BJzogJ01vcm9jY28nLFxuICAnTVonOiAnTW96YW1iaXF1ZScsXG4gICdNTSc6ICdNeWFubWFyJyxcbiAgJ05BJzogJ05hbWliaWEnLFxuICAnTlInOiAnTmF1cnUnLFxuICAnTlAnOiAnTmVwYWwnLFxuICAnTkwnOiAnTmV0aGVybGFuZHMnLFxuICAnQU4nOiAnTmV0aGVybGFuZHMgQW50aWxsZXMnLFxuICAnTkMnOiAnTmV3IENhbGVkb25pYScsXG4gICdOWic6ICdOZXcgWmVhbGFuZCcsXG4gICdOSSc6ICdOaWNhcmFndWEnLFxuICAnTkUnOiAnTmlnZXInLFxuICAnTkcnOiAnTmlnZXJpYScsXG4gICdOVSc6ICdOaXVlJyxcbiAgJ05GJzogJ05vcmZvbGsgSXNsYW5kJyxcbiAgJ0tQJzogJ05vcnRoIEtvcmVhJyxcbiAgJ01QJzogJ05vcnRoZXJuIE1hcmlhbmFzJyxcbiAgJ05PJzogJ05vcndheScsXG4gICdPTSc6ICdPbWFuJyxcbiAgJ1BLJzogJ1Bha2lzdGFuJyxcbiAgJ1BXJzogJ1BhbGF1JyxcbiAgJ1BTJzogJ1BhbGVzdGluZScsXG4gICdQQSc6ICdQYW5hbWEnLFxuICAnUEcnOiAnUGFwdWEgTmV3IEd1aW5lYScsXG4gICdQWSc6ICdQYXJhZ3VheScsXG4gICdQRSc6ICdQZXJ1JyxcbiAgJ1BIJzogJ1BoaWxpcHBpbmVzJyxcbiAgJ1BOJzogJ1BpdGNhaXJuIElzbGFuZHMnLFxuICAnUEwnOiAnUG9sYW5kJyxcbiAgJ1BUJzogJ1BvcnR1Z2FsJyxcbiAgJ1BSJzogJ1B1ZXJ0byBSaWNvJyxcbiAgJ1FBJzogJ1FhdGFyJyxcbiAgJ1JFJzogJ1JldW5pb24nLFxuICAnUk8nOiAnUm9tYW5pYScsXG4gICdSVSc6ICdSdXNzaWEnLFxuICAnUlcnOiAnUndhbmRhJyxcbiAgJ1NUJzogJ1PDo28gVG9tw6kgYW5kIFByw61uY2lwZScsXG4gICdTSCc6ICdTYWludCBIZWxlbmEnLFxuICAnUE0nOiAnU3QuIFBpZXJyZSBhbmQgTWlxdWVsb24nLFxuICAnS04nOiAnU2FpbnQgS2l0dHMgYW5kIE5ldmlzJyxcbiAgJ0xDJzogJ1NhaW50IEx1Y2lhJyxcbiAgJ1ZDJzogJ1NhaW50IFZpbmNlbnQgYW5kIHRoZSBHcmVuYWRpbmVzJyxcbiAgJ1dTJzogJ1NhbW9hJyxcbiAgJ1NNJzogJ1NhbiBNYXJpbm8nLFxuICAnU0EnOiAnU2F1ZGkgQXJhYmlhJyxcbiAgJ1NOJzogJ1NlbmVnYWwnLFxuICAnUlMnOiAnU2VyYmlhJyxcbiAgJ1NDJzogJ1NleWNoZWxsZXMnLFxuICAnU0wnOiAnU2llcnJhIExlb25lJyxcbiAgJ1NHJzogJ1NpbmdhcG9yZScsXG4gICdTSyc6ICdTbG92YWtpYScsXG4gICdTSSc6ICdTbG92ZW5pYScsXG4gICdTQic6ICdTb2xvbW9uIElzbGFuZHMnLFxuICAnU08nOiAnU29tYWxpYScsXG4gICdaQSc6ICdTb3V0aCBBZnJpY2EnLFxuICAnR1MnOiAnU291dGggR2VvcmdpYSBhbmQgdGhlIFNvdXRoIFNhbmR3aWNoIElzbGFuZHMnLFxuICAnS1InOiAnU291dGggS29yZWEnLFxuICAnRVMnOiAnU3BhaW4nLFxuICAnTEsnOiAnU3JpIExhbmthJyxcbiAgJ1NEJzogJ1N1ZGFuJyxcbiAgJ1NSJzogJ1N1cmluYW1lJyxcbiAgJ1NKJzogJ1N2YWxiYXJkIGFuZCBKYW4gTWF5ZW4gSXNsYW5kcycsXG4gICdTWic6ICdTd2F6aWxhbmQnLFxuICAnU0UnOiAnU3dlZGVuJyxcbiAgJ0NIJzogJ1N3aXR6ZXJsYW5kJyxcbiAgJ1NZJzogJ1N5cmlhJyxcbiAgJ1RXJzogJ1RhaXdhbicsXG4gICdUSic6ICdUYWppa2lzdGFuJyxcbiAgJ1RaJzogJ1RhbnphbmlhJyxcbiAgJ1RIJzogJ1RoYWlsYW5kJyxcbiAgJ0JTJzogJ1RoZSBCYWhhbWFzJyxcbiAgJ0dNJzogJ1RoZSBHYW1iaWEnLFxuICAnVEcnOiAnVG9nbycsXG4gICdUSyc6ICdUb2tlbGF1JyxcbiAgJ1RPJzogJ1RvbmdhJyxcbiAgJ1RUJzogJ1RyaW5pZGFkIGFuZCBUb2JhZ28nLFxuICAnVE4nOiAnVHVuaXNpYScsXG4gICdUUic6ICdUdXJrZXknLFxuICAnVE0nOiAnVHVya21lbmlzdGFuJyxcbiAgJ1RDJzogJ1R1cmtzIGFuZCBDYWljb3MgSXNsYW5kcycsXG4gICdUVic6ICdUdXZhbHUnLFxuICAnVkknOiAnVVMgVmlyZ2luIElzbGFuZHMnLFxuICAnVUcnOiAnVWdhbmRhJyxcbiAgJ1VBJzogJ1VrcmFpbmUnLFxuICAnQUUnOiAnVW5pdGVkIEFyYWIgRW1pcmF0ZXMnLFxuICAnR0InOiAnVW5pdGVkIEtpbmdkb20nLFxuICAnVVMnOiAnVW5pdGVkIFN0YXRlcycsXG4gICdVTSc6ICdVbml0ZWQgU3RhdGVzIE1pbm9yIE91dGx5aW5nIElzbGFuZHMnLFxuICAnVVknOiAnVXJ1Z3VheScsXG4gICdVWic6ICdVemJla2lzdGFuJyxcbiAgJ1ZVJzogJ1ZhbnVhdHUnLFxuICAnVkEnOiAnVmF0aWNhbiBDaXR5JyxcbiAgJ1ZFJzogJ1ZlbmV6dWVsYScsXG4gICdWTic6ICdWaWV0bmFtJyxcbiAgJ1dGJzogJ1dhbGxpcyBhbmQgRnV0dW5hIElzbGFuZHMnLFxuICAnRUgnOiAnV2VzdGVybiBTYWhhcmEnLFxuICAnWUUnOiAnWWVtZW4nLFxuICAnWk0nOiAnWmFtYmlhJyxcbiAgJ1pXJzogJ1ppbWJhYndlJ1xufTtcblxuIC8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIGJvb3RzdHJhcC1mb3JtaGVscGVycy1jdXJyZW5jaWVzLmVuX1VTLmpzXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdmxhbWFubmEvQm9vdHN0cmFwRm9ybUhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDEzIFZpbmNlbnQgTGFtYW5uYVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuIFxudmFyIEJGSEN1cnJlbmNpZXNMaXN0ID0ge1xuICAnQUVEJzp7J2xhYmVsJzonVW5pdGVkIEFyYWIgRW1pcmF0ZXMgZGlyaGFtJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon2K8u2KUnfSxcbiAgJ0FGTic6eydsYWJlbCc6J0FmZ2hhbiBhZmdoYW5pJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon2IsnfSxcbiAgJ0FMTCc6eydsYWJlbCc6J0FsYmFuaWFuIGxlaycsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0wnfSxcbiAgJ0FNRCc6eydsYWJlbCc6J0FybWVuaWFuIGRyYW0nLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifVpNaAJ30sXG4gICdBT0EnOnsnbGFiZWwnOidBbmdvbGFuIGt3YW56YScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0t6J30sXG4gICdBUlMnOnsnbGFiZWwnOidBcmdlbnRpbmUgcGVzbycsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6JyQnfSxcbiAgJ0FVRCc6eydsYWJlbCc6J0F1c3RyYWxpYW4gZG9sbGFyJywnY3VycmVuY3lmbGFnJzonQVVEJywnc3ltYm9sJzonJCd9LFxuICAnQVdHJzp7J2xhYmVsJzonQXJ1YmFuIGZsb3JpbicsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J8aSJ30sXG4gICdBWk4nOnsnbGFiZWwnOidBemVyYmFpamFuaSBtYW5hdCcsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6Jyd9LFxuICAnQkFNJzp7J2xhYmVsJzonQm9zbmlhIGFuZCBIZXJ6ZWdvdmluYSBjb252ZXJ0aWJsZSBtYXJrJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonS00nfSxcbiAgJ0JCRCc6eydsYWJlbCc6J0JhcmJhZGlhbiBkb2xsYXInLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOickJ30sXG4gICdCRFQnOnsnbGFiZWwnOidCYW5nbGFkZXNoaSB0YWthJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon4KezJ30sXG4gICdCR04nOnsnbGFiZWwnOidCdWxnYXJpYW4gbGV2JywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon0LvQsid9LFxuICAnQkhEJzp7J2xhYmVsJzonQmFocmFpbmkgZGluYXInLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOicu2K8u2KgnfSxcbiAgJ0JJRic6eydsYWJlbCc6J0J1cnVuZGlhbiBmcmFuYycsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0ZyJ30sXG4gICdCTUQnOnsnbGFiZWwnOidCZXJtdWRpYW4gZG9sbGFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonJCd9LFxuICAnQk5EJzp7J2xhYmVsJzonQnJ1bmVpIGRvbGxhcicsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6JyQnfSxcbiAgJ0JPQic6eydsYWJlbCc6J0JvbGl2aWFuIGJvbGl2aWFubycsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0JzJ30sXG4gICdCUkwnOnsnbGFiZWwnOidCcmF6aWxpYW4gcmVhbCcsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J1IkJ30sXG4gICdCU0QnOnsnbGFiZWwnOidCYWhhbWlhbiBkb2xsYXInLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOickJ30sXG4gICdCVE4nOnsnbGFiZWwnOidCaHV0YW5lc2Ugbmd1bHRydW0nLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOidOdSd9LFxuICAnQldQJzp7J2xhYmVsJzonQm90c3dhbmEgcHVsYScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J1AnfSxcbiAgJ0JZUic6eydsYWJlbCc6J0JlbGFydXNpYW4gcnVibGUnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOidCcid9LFxuICAnQlpEJzp7J2xhYmVsJzonQmVsaXplIGRvbGxhcicsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6JyQnfSxcbiAgJ0NBRCc6eydsYWJlbCc6J0NhbmFkaWFuIGRvbGxhcicsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6JyQnfSxcbiAgJ0NERic6eydsYWJlbCc6J0NvbmdvbGVzZSBmcmFuYycsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0ZyJ30sXG4gICdDSEYnOnsnbGFiZWwnOidTd2lzcyBmcmFuYycsJ2N1cnJlbmN5ZmxhZyc6J0NIRicsJ3N5bWJvbCc6J0ZyJ30sXG4gICdDTFAnOnsnbGFiZWwnOidDaGlsZWFuIHBlc28nLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOickJ30sXG4gICdDTlknOnsnbGFiZWwnOidDaGluZXNlIHl1YW4nLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifCpSd9LFxuICAnQ09QJzp7J2xhYmVsJzonQ29sb21iaWFuIHBlc28nLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOickJ30sXG4gICdDUkMnOnsnbGFiZWwnOidDb3N0YSBSaWNhbiBjb2zDs24nLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifigqEnfSxcbiAgJ0NVUCc6eydsYWJlbCc6J0N1YmFuIGNvbnZlcnRpYmxlIHBlc28nLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOickJ30sXG4gICdDVkUnOnsnbGFiZWwnOidDYXBlIFZlcmRlYW4gZXNjdWRvJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonJCd9LFxuICAnQ1pLJzp7J2xhYmVsJzonQ3plY2gga29ydW5hJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonS8SNJ30sXG4gICdESkYnOnsnbGFiZWwnOidEamlib3V0aWFuIGZyYW5jJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonRnInfSxcbiAgJ0RLSyc6eydsYWJlbCc6J0RhbmlzaCBrcm9uZScsJ2N1cnJlbmN5ZmxhZyc6J0RLSycsJ3N5bWJvbCc6J2tyJ30sXG4gICdET1AnOnsnbGFiZWwnOidEb21pbmljYW4gcGVzbycsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6JyQnfSxcbiAgJ0RaRCc6eydsYWJlbCc6J0FsZ2VyaWFuIGRpbmFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon2K8u2KwnfSxcbiAgJ0VHUCc6eydsYWJlbCc6J0VneXB0aWFuIHBvdW5kJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon2Kwu2YUnfSxcbiAgJ0VSTic6eydsYWJlbCc6J0VyaXRyZWFuIG5ha2ZhJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonTmZrJ30sXG4gICdFVEInOnsnbGFiZWwnOidFdGhpb3BpYW4gYmlycicsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0JyJ30sXG4gICdFVVInOnsnbGFiZWwnOidFdXJvJywnY3VycmVuY3lmbGFnJzonRVVSJywnc3ltYm9sJzon4oKsJ30sXG4gICdGSkQnOnsnbGFiZWwnOidGaWppYW4gZG9sbGFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonJCd9LFxuICAnRktQJzp7J2xhYmVsJzonRmFsa2xhbmQgSXNsYW5kcyBwb3VuZCcsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J8KjJ30sXG4gICdHQlAnOnsnbGFiZWwnOidCcml0aXNoIHBvdW5kJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonwqMnfSxcbiAgJ0dFTCc6eydsYWJlbCc6J0dlb3JnaWFuIGxhcmknLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifhg5onfSxcbiAgJ0dIUyc6eydsYWJlbCc6J0doYW5hIGNlZGknLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifigrUnfSxcbiAgJ0dNRCc6eydsYWJlbCc6J0dhbWJpYW4gZGFsYXNpJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonRCd9LFxuICAnR05GJzp7J2xhYmVsJzonR3VpbmVhbiBmcmFuYycsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0ZyJ30sXG4gICdHVFEnOnsnbGFiZWwnOidHdWF0ZW1hbGFuIHF1ZXR6YWwnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOidRJ30sXG4gICdHWUQnOnsnbGFiZWwnOidHdXlhbmVzZSBkb2xsYXInLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOickJ30sXG4gICdIS0QnOnsnbGFiZWwnOidIb25nIEtvbmcgZG9sbGFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonJCd9LFxuICAnSE5MJzp7J2xhYmVsJzonSG9uZHVyYW4gbGVtcGlyYScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0wnfSxcbiAgJ0hSSyc6eydsYWJlbCc6J0Nyb2F0aWFuIGt1bmEnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOidrbid9LFxuICAnSFRHJzp7J2xhYmVsJzonSGFpdGlhbiBnb3VyZGUnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOidHJ30sXG4gICdIVUYnOnsnbGFiZWwnOidIdW5nYXJpYW4gZm9yaW50JywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonRnQnfSxcbiAgJ0lEUic6eydsYWJlbCc6J0luZG9uZXNpYW4gcnVwaWFoJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonUnAnfSxcbiAgJ0lMUyc6eydsYWJlbCc6J0lzcmFlbGkgbmV3IHNoZWtlbCcsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J+KCqid9LFxuICAnSU1QJzp7J2xhYmVsJzonTWFueCBwb3VuZCcsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J8KjJ30sXG4gICdJTlInOnsnbGFiZWwnOidJbmRpYW4gcnVwZWUnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOicnfSxcbiAgJ0lRRCc6eydsYWJlbCc6J0lyYXFpIGRpbmFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon2Lku2K8nfSxcbiAgJ0lSUic6eydsYWJlbCc6J0lyYW5pYW4gcmlhbCcsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J++3vCd9LFxuICAnSVNLJzp7J2xhYmVsJzonSWNlbGFuZGljIGtyw7NuYScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J2tyJ30sXG4gICdKRVAnOnsnbGFiZWwnOidKZXJzZXkgcG91bmQnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifCoyd9LFxuICAnSk1EJzp7J2xhYmVsJzonSmFtYWljYW4gZG9sbGFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonJCd9LFxuICAnSk9EJzp7J2xhYmVsJzonSm9yZGFuaWFuIGRpbmFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon2K8u2KcnfSxcbiAgJ0pQWSc6eydsYWJlbCc6J0phcGFuZXNlIHllbicsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J8KlJ30sXG4gICdLRVMnOnsnbGFiZWwnOidLZW55YW4gc2hpbGxpbmcnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOidTaCd9LFxuICAnS0dTJzp7J2xhYmVsJzonS3lyZ3l6c3Rhbmkgc29tJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon0LvQsid9LFxuICAnS0hSJzp7J2xhYmVsJzonQ2FtYm9kaWFuIHJpZWwnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifhn5snfSxcbiAgJ0tNRic6eydsYWJlbCc6J0NvbW9yaWFuIGZyYW5jJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonRnInfSxcbiAgJ0tQVyc6eydsYWJlbCc6J05vcnRoIEtvcmVhbiB3b24nLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifigqknfSxcbiAgJ0tSVyc6eydsYWJlbCc6J1NvdXRoIEtvcmVhbiB3b24nLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifigqknfSxcbiAgJ0tXRCc6eydsYWJlbCc6J0t1d2FpdGkgZGluYXInLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifYry7Zgyd9LFxuICAnS1lEJzp7J2xhYmVsJzonQ2F5bWFuIElzbGFuZHMgZG9sbGFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonJCd9LFxuICAnS1pUJzp7J2xhYmVsJzonS2F6YWtoc3RhbmkgdGVuZ2UnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifigrgnfSxcbiAgJ0xBSyc6eydsYWJlbCc6J0xhbyBraXAnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifigq0nfSxcbiAgJ0xCUCc6eydsYWJlbCc6J0xlYmFuZXNlIHBvdW5kJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon2YQu2YQnfSxcbiAgJ0xLUic6eydsYWJlbCc6J1NyaSBMYW5rYW4gcnVwZWUnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOidScyd9LFxuICAnTFJEJzp7J2xhYmVsJzonTGliZXJpYW4gZG9sbGFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonJCd9LFxuICAnTFNMJzp7J2xhYmVsJzonTGVzb3RobyBsb3RpJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonTCd9LFxuICAnTFRMJzp7J2xhYmVsJzonTGl0aHVhbmlhbiBsaXRhcycsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0x0J30sXG4gICdMVkwnOnsnbGFiZWwnOidMYXR2aWFuIGxhdHMnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOidMcyd9LFxuICAnTFlEJzp7J2xhYmVsJzonTGlieWFuIGRpbmFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon2YQu2K8nfSxcbiAgJ01BRCc6eydsYWJlbCc6J01vcm9jY2FuIGRpcmhhbScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J9ivLtmFLid9LFxuICAnTURMJzp7J2xhYmVsJzonTW9sZG92YW4gbGV1JywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonTCd9LFxuICAnTUdBJzp7J2xhYmVsJzonTWFsYWdhc3kgYXJpYXJ5JywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonQXInfSxcbiAgJ01LRCc6eydsYWJlbCc6J01hY2Vkb25pYW4gZGVuYXInLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifQtNC10L0nfSxcbiAgJ01NSyc6eydsYWJlbCc6J0J1cm1lc2Uga3lhdCcsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0tzJ30sXG4gICdNTlQnOnsnbGFiZWwnOidNb25nb2xpYW4gdMO2Z3LDtmcnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifigq4nfSxcbiAgJ01PUCc6eydsYWJlbCc6J01hY2FuZXNlIHBhdGFjYScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J1AnfSxcbiAgJ01STyc6eydsYWJlbCc6J01hdXJpdGFuaWFuIG91Z3VpeWEnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOidVTSd9LFxuICAnTVVSJzp7J2xhYmVsJzonTWF1cml0aWFuIHJ1cGVlJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonUnMnfSxcbiAgJ01WUic6eydsYWJlbCc6J01hbGRpdmlhbiBydWZpeWFhJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonLt6DJ30sXG4gICdNV0snOnsnbGFiZWwnOidNYWxhd2lhbiBrd2FjaGEnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOidNSyd9LFxuICAnTVhOJzp7J2xhYmVsJzonTWV4aWNhbiBwZXNvJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonJCd9LFxuICAnTVlSJzp7J2xhYmVsJzonTWFsYXlzaWFuIHJpbmdnaXQnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOidNUid9LFxuICAnTVpOJzp7J2xhYmVsJzonTW96YW1iaWNhbiBtZXRpY2FsJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonTVQnfSxcbiAgJ05BRCc6eydsYWJlbCc6J05hbWliaWFuIGRvbGxhcicsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6JyQnfSxcbiAgJ05HTic6eydsYWJlbCc6J05pZ2VyaWFuIG5haXJhJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon4oKmJ30sXG4gICdOSU8nOnsnbGFiZWwnOidOaWNhcmFndWFuIGPDs3Jkb2JhJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonQyQnfSxcbiAgJ05PSyc6eydsYWJlbCc6J05vcndlZ2lhbiBrcm9uZScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J2tyJ30sXG4gICdOUFInOnsnbGFiZWwnOidOZXBhbGVzZSBydXBlZScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J1JzJ30sXG4gICdOWkQnOnsnbGFiZWwnOidOZXcgWmVhbGFuZCBkb2xsYXInLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOickJ30sXG4gICdPTVInOnsnbGFiZWwnOidPbWFuaSByaWFsJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon2LEu2LkuJ30sXG4gICdQQUInOnsnbGFiZWwnOidQYW5hbWFuaWFuIGJhbGJvYScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0IvLid9LFxuICAnUEVOJzp7J2xhYmVsJzonUGVydXZpYW4gbnVldm8gc29sJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonUy8uJ30sXG4gICdQR0snOnsnbGFiZWwnOidQYXB1YSBOZXcgR3VpbmVhbiBraW5hJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonSyd9LFxuICAnUEhQJzp7J2xhYmVsJzonUGhpbGlwcGluZSBwZXNvJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon4oKxJ30sXG4gICdQS1InOnsnbGFiZWwnOidQYWtpc3RhbmkgcnVwZWUnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOidScyd9LFxuICAnUExOJzp7J2xhYmVsJzonUG9saXNoIHrFgm90eScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J3rFgid9LFxuICAnUFJCJzp7J2xhYmVsJzonVHJhbnNuaXN0cmlhbiBydWJsZScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J9GALid9LFxuICAnUFlHJzp7J2xhYmVsJzonUGFyYWd1YXlhbiBndWFyYW7DrScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J+KCsid9LFxuICAnUUFSJzp7J2xhYmVsJzonUWF0YXJpIHJpeWFsJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon2LEu2YInfSxcbiAgJ1JPTic6eydsYWJlbCc6J1JvbWFuaWFuIGxldScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0wnfSxcbiAgJ1JTRCc6eydsYWJlbCc6J1NlcmJpYW4gZGluYXInLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifQtNC40L0nfSxcbiAgJ1JVQic6eydsYWJlbCc6J1J1c3NpYW4gcnVibGUnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifRgNGD0LEuJ30sXG4gICdSV0YnOnsnbGFiZWwnOidSd2FuZGFuIGZyYW5jJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonRnInfSxcbiAgJ1NBUic6eydsYWJlbCc6J1NhdWRpIHJpeWFsJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon2LEu2LMnfSxcbiAgJ1NCRCc6eydsYWJlbCc6J1NvbG9tb24gSXNsYW5kcyBkb2xsYXInLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOickJ30sXG4gICdTQ1InOnsnbGFiZWwnOidTZXljaGVsbG9pcyBydXBlZScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J1JzJ30sXG4gICdTREcnOnsnbGFiZWwnOidTaW5nYXBvcmUgZG9sbGFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonJCd9LFxuICAnU0VLJzp7J2xhYmVsJzonU3dlZGlzaCBrcm9uYScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J2tyJ30sXG4gICdTR0QnOnsnbGFiZWwnOidTaW5nYXBvcmUgZG9sbGFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonJCd9LFxuICAnU0hQJzp7J2xhYmVsJzonU2FpbnQgSGVsZW5hIHBvdW5kJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonwqMnfSxcbiAgJ1NMTCc6eydsYWJlbCc6J1NpZXJyYSBMZW9uZWFuIGxlb25lJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonTGUnfSxcbiAgJ1NPUyc6eydsYWJlbCc6J1NvbWFsaSBzaGlsbGluZycsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J1NoJ30sXG4gICdTUkQnOnsnbGFiZWwnOidTdXJpbmFtZXNlIGRvbGxhcicsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6JyQnfSxcbiAgJ1NTUCc6eydsYWJlbCc6J1NvdXRoIFN1ZGFuZXNlIHBvdW5kJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonwqMnfSxcbiAgJ1NURCc6eydsYWJlbCc6J1PDo28gVG9tw6kgYW5kIFByw61uY2lwZSBkb2JyYScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0RiJ30sXG4gICdTVkMnOnsnbGFiZWwnOidTYWx2YWRvcmFuIGNvbMOzbicsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J+KCoSd9LFxuICAnU1lQJzp7J2xhYmVsJzonU3lyaWFuIHBvdW5kJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonwqMnfSxcbiAgJ1NaTCc6eydsYWJlbCc6J1N3YXppIGxpbGFuZ2VuaScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J0wnfSxcbiAgJ1RIQic6eydsYWJlbCc6J1RoYWkgYmFodCcsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J+C4vyd9LFxuICAnVEpTJzp7J2xhYmVsJzonVGFqaWtpc3Rhbmkgc29tb25pJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonU00nfSxcbiAgJ1RNVCc6eydsYWJlbCc6J1R1cmttZW5pc3RhbiBtYW5hdCcsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J20nfSxcbiAgJ1RORCc6eydsYWJlbCc6J1R1bmlzaWFuIGRpbmFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon2K8u2KonfSxcbiAgJ1RPUCc6eydsYWJlbCc6J1RvbmdhbiBwYcq7YW5nYScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J1QkJ30sXG4gICdUUlknOnsnbGFiZWwnOidUdXJraXNoIGxpcmEnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOicmIzgzNzg7J30sXG4gICdUVEQnOnsnbGFiZWwnOidUcmluaWRhZCBhbmQgVG9iYWdvIGRvbGxhcicsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6JyQnfSxcbiAgJ1RXRCc6eydsYWJlbCc6J05ldyBUYWl3YW4gZG9sbGFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonJCd9LFxuICAnVFpTJzp7J2xhYmVsJzonVGFuemFuaWFuIHNoaWxsaW5nJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonU2gnfSxcbiAgJ1VBSCc6eydsYWJlbCc6J1VrcmFpbmlhbiBocnl2bmlhJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon4oK0J30sXG4gICdVR1gnOnsnbGFiZWwnOidVZ2FuZGFuIHNoaWxsaW5nJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonU2gnfSxcbiAgJ1VTRCc6eydsYWJlbCc6J1VuaXRlZCBTdGF0ZXMgZG9sbGFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonJCd9LFxuICAnVVlVJzp7J2xhYmVsJzonVXJ1Z3VheWFuIHBlc28nLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOickJ30sXG4gICdVWlMnOnsnbGFiZWwnOidVemJla2lzdGFuaSBzb20nLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifQu9CyJ30sXG4gICdWRUYnOnsnbGFiZWwnOidWZW5lenVlbGFuIGJvbMOtdmFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonQnMgRid9LFxuICAnVk5EJzp7J2xhYmVsJzonVmlldG5hbWVzZSDEkeG7k25nJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzon4oKrJ30sXG4gICdWVVYnOnsnbGFiZWwnOidWYW51YXR1IHZhdHUnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOidWdCd9LFxuICAnV1NUJzp7J2xhYmVsJzonU2Ftb2FuIHTEgWzEgScsJ2N1cnJlbmN5ZmxhZyc6JycsJ3N5bWJvbCc6J1QnfSxcbiAgJ1hBRic6eydsYWJlbCc6J0NlbnRyYWwgQWZyaWNhbiBDRkEgZnJhbmMnLCdjdXJyZW5jeWZsYWcnOidYQUYnLCdzeW1ib2wnOidGcid9LFxuICAnWENEJzp7J2xhYmVsJzonRWFzdCBDYXJpYmJlYW4gZG9sbGFyJywnY3VycmVuY3lmbGFnJzonWENEJywnc3ltYm9sJzonJCd9LFxuICAnWE9GJzp7J2xhYmVsJzonV2VzdCBBZnJpY2FuIENGQSBmcmFuYycsJ2N1cnJlbmN5ZmxhZyc6J1hPRicsJ3N5bWJvbCc6J0ZyJ30sXG4gICdYUEYnOnsnbGFiZWwnOidDRlAgZnJhbmMnLCdjdXJyZW5jeWZsYWcnOidYUEYnLCdzeW1ib2wnOidGcid9LFxuICAnWUVSJzp7J2xhYmVsJzonWWVtZW5pIHJpYWwnLCdjdXJyZW5jeWZsYWcnOicnLCdzeW1ib2wnOifvt7wnfSxcbiAgJ1pBUic6eydsYWJlbCc6J1NvdXRoIEFmcmljYW4gcmFuZCcsJ2N1cnJlbmN5ZmxhZyc6J1pBUicsJ3N5bWJvbCc6J1InfSxcbiAgJ1pNVyc6eydsYWJlbCc6J1phbWJpYW4ga3dhY2hhJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonWksnfSxcbiAgJ1pXTCc6eydsYWJlbCc6J1ppbWJhYndlYW4gZG9sbGFyJywnY3VycmVuY3lmbGFnJzonJywnc3ltYm9sJzonJCd9XG59O1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBib290c3RyYXAtZm9ybWhlbHBlcnMtZGF0ZXBpY2tlci5lbl9VUy5qc1xuICogaHR0cHM6Ly9naXRodWIuY29tL3ZsYW1hbm5hL0Jvb3RzdHJhcEZvcm1IZWxwZXJzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMiBWaW5jZW50IExhbWFubmFcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbiBcbnZhciBCRkhNb250aHNMaXN0ID0gW1xuICAnSmFudWFyeScsXG4gICdGZWJydWFyeScsXG4gICdNYXJjaCcsXG4gICdBcHJpbCcsXG4gICdNYXknLFxuICAnSnVuZScsXG4gICdKdWx5JyxcbiAgJ0F1Z3VzdCcsXG4gICdTZXB0ZW1iZXInLFxuICAnT2N0b2JlcicsXG4gICdOb3ZlbWJlcicsXG4gICdEZWNlbWJlcidcbl07XG4gXG52YXIgQkZIRGF5c0xpc3QgPSBbXG4gICdTVU4nLFxuICAnTU9OJyxcbiAgJ1RVRScsXG4gICdXRUQnLFxuICAnVEhVJyxcbiAgJ0ZSSScsXG4gICdTQVQnXG5dO1xuIFxudmFyIEJGSERheU9mV2Vla1N0YXJ0ID0gMDtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogYm9vdHN0cmFwLWZvcm1oZWxwZXJzLWZvbnRzLmVuX1VTLmpzXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdmxhbWFubmEvQm9vdHN0cmFwRm9ybUhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDEyIFZpbmNlbnQgTGFtYW5uYVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIilcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4gXG52YXIgQkZIRm9udHNMaXN0ID0ge1xuICAnQW5kYWxlIE1vbm8nOiAnXCJBbmRhbGUgTW9ub1wiLCBBbmRhbGVNb25vLCBtb25vc3BhY2UnLFxuICAnQXJpYWwnOiAnQXJpYWwsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmJyxcbiAgJ0FyaWFsIEJsYWNrJzogJ1wiQXJpYWwgQmxhY2tcIiwgXCJBcmlhbCBCb2xkXCIsIEdhZGdldCwgc2Fucy1zZXJpZicsXG4gICdBcmlhbCBOYXJyb3cnOiAnXCJBcmlhbCBOYXJyb3dcIiwgQXJpYWwsIHNhbnMtc2VyaWYnLFxuICAnQXJpYWwgUm91bmRlZCBNVCBCb2xkJzogJ1wiQXJpYWwgUm91bmRlZCBNVCBCb2xkXCIsIFwiSGVsdmV0aWNhIFJvdW5kZWRcIiwgQXJpYWwsIHNhbnMtc2VyaWYnLFxuICAnQXZhbnQgR2FyZGUnOiAnXCJBdmFudCBHYXJkZVwiLCBBdmFudGdhcmRlLCBcIkNlbnR1cnkgR290aGljXCIsIENlbnR1cnlHb3RoaWMsIFwiQXBwbGVHb3RoaWNcIiwgc2Fucy1zZXJpZicsXG4gICdCYXNrZXJ2aWxsZSc6ICdCYXNrZXJ2aWxsZSwgXCJCYXNrZXJ2aWxsZSBPbGQgRmFjZVwiLCBcIkhvZWZsZXIgVGV4dFwiLCBHYXJhbW9uZCwgXCJUaW1lcyBOZXcgUm9tYW5cIiwgc2VyaWYnLFxuICAnQmlnIENhc2xvbic6ICdcIkJpZyBDYXNsb25cIiwgXCJCb29rIEFudGlxdWFcIiwgXCJQYWxhdGlubyBMaW5vdHlwZVwiLCBHZW9yZ2lhLCBzZXJpZicsXG4gICdCb2RvbmkgTVQnOiAnXCJCb2RvbmkgTVRcIiwgRGlkb3QsIFwiRGlkb3QgTFQgU1REXCIsIFwiSG9lZmxlciBUZXh0XCIsIEdhcmFtb25kLCBcIlRpbWVzIE5ldyBSb21hblwiLCBzZXJpZicsXG4gICdCb29rIEFudGlxdWEnOiAnXCJCb29rIEFudGlxdWFcIiwgUGFsYXRpbm8sIFwiUGFsYXRpbm8gTGlub3R5cGVcIiwgXCJQYWxhdGlubyBMVCBTVERcIiwgR2VvcmdpYSwgc2VyaWYnLFxuICAnQnJ1c2ggU2NyaXB0IE1UJzogJ1wiQnJ1c2ggU2NyaXB0IE1UXCIsIGN1cnNpdmUnLFxuICAnQ2FsaWJyaSc6ICdDYWxpYnJpLCBDYW5kYXJhLCBTZWdvZSwgXCJTZWdvZSBVSVwiLCBPcHRpbWEsIEFyaWFsLCBzYW5zLXNlcmlmJyxcbiAgJ0NhbGlzdG8gTVQnOiAnXCJDYWxpc3RvIE1UXCIsIFwiQm9va21hbiBPbGQgU3R5bGVcIiwgQm9va21hbiwgXCJHb3VkeSBPbGQgU3R5bGVcIiwgR2FyYW1vbmQsIFwiSG9lZmxlciBUZXh0XCIsIFwiQml0c3RyZWFtIENoYXJ0ZXJcIiwgR2VvcmdpYSwgc2VyaWYnLFxuICAnQ2FtYnJpbyc6ICdDYW1icmlhLCBHZW9yZ2lhLCBzZXJpZicsXG4gICdDYW5kYXJhJzogJ0NhbmRhcmEsIENhbGlicmksIFNlZ29lLCBcIlNlZ29lIFVJXCIsIE9wdGltYSwgQXJpYWwsIHNhbnMtc2VyaWYnLFxuICAnQ2VudHVyeSBHb3RoaWMnOiAnXCJDZW50dXJ5IEdvdGhpY1wiLCBDZW50dXJ5R290aGljLCBBcHBsZUdvdGhpYywgc2Fucy1zZXJpZicsXG4gICdDb25zb2xhcyc6ICdDb25zb2xhcywgbW9uYWNvLCBtb25vc3BhY2UnLFxuICAnQ29wcGVycGxhdGUnOiAnQ29wcGVycGxhdGUsIFwiQ29wcGVycGxhdGUgR290aGljIExpZ2h0XCIsIGZhbnRhc3knLFxuICAnQ291cmllciBOZXcnOiAnXCJDb3VyaWVyIE5ld1wiLCBDb3VyaWVyLCBcIkx1Y2lkYSBTYW5zIFR5cGV3cml0ZXJcIiwgXCJMdWNpZGEgVHlwZXdyaXRlclwiLCBtb25vc3BhY2UnLFxuICAnRGlkb3QnOiAnRGlkb3QsIFwiRGlkb3QgTFQgU1REXCIsIFwiSG9lZmxlciBUZXh0XCIsIEdhcmFtb25kLCBcIlRpbWVzIE5ldyBSb21hblwiLCBzZXJpZicsXG4gICdGcmFua2xpbiBHb3RoaWMgTWVkaXVtJzogJ1wiRnJhbmtsaW4gR290aGljIE1lZGl1bVwiLCBcIkZyYW5rbGluIEdvdGhpY1wiLCBcIklUQyBGcmFua2xpbiBHb3RoaWNcIiwgQXJpYWwsIHNhbnMtc2VyaWYnLFxuICAnRnV0dXJhJzogJ0Z1dHVyYSwgXCJUcmVidWNoZXQgTVNcIiwgQXJpYWwsIHNhbnMtc2VyaWYnLFxuICAnR2FyYW1vbmQnOiAnR2FyYW1vbmQsIEJhc2tlcnZpbGxlLCBcIkJhc2tlcnZpbGxlIE9sZCBGYWNlXCIsIFwiSG9lZmxlciBUZXh0XCIsIFwiVGltZXMgTmV3IFJvbWFuXCIsIHNlcmlmJyxcbiAgJ0dlbmV2YSc6ICdHZW5ldmEsIFRhaG9tYSwgVmVyZGFuYSwgc2Fucy1zZXJpZicsXG4gICdHZW9yZ2lhJzogJ0dlb3JnaWEsIFRpbWVzLCBcIlRpbWVzIE5ldyBSb21hblwiLCBzZXJpZicsXG4gICdHaWxsIFNhbnMnOiAnXCJHaWxsIFNhbnNcIiwgXCJHaWxsIFNhbnMgTVRcIiwgQ2FsaWJyaSwgc2Fucy1zZXJpZicsXG4gICdHb3VkeSBPbGQgU3R5bGUnOiAnXCJHb3VkeSBPbGQgU3R5bGVcIiwgR2FyYW1vbmQsIFwiQmlnIENhc2xvblwiLCBcIlRpbWVzIE5ldyBSb21hblwiLCBzZXJpZicsXG4gICdIZWx2ZXRpY2EnOiAnXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmJyxcbiAgJ0hvZWZsZXIgVGV4dCc6ICdcIkhvZWZsZXIgVGV4dFwiLCBcIkJhc2tlcnZpbGxlIG9sZCBmYWNlXCIsIEdhcmFtb25kLCBcIlRpbWVzIE5ldyBSb21hblwiLCBzZXJpZicsXG4gICdJbXBhY3QnOiAnSW1wYWN0LCBIYWV0dGVuc2Nod2VpbGVyLCBcIkZyYW5rbGluIEdvdGhpYyBCb2xkXCIsIENoYXJjb2FsLCBcIkhlbHZldGljYSBJbnNlcmF0XCIsIFwiQml0c3RyZWFtIFZlcmEgU2FucyBCb2xkXCIsIFwiQXJpYWwgQmxhY2tcIiwgc2FucyBzZXJpZicsXG4gICdMdWNpZGEgQnJpZ2h0JzogJ1wiTHVjaWRhIEJyaWdodFwiLCBHZW9yZ2lhLCBzZXJpZicsXG4gICdMdWNpZGEgQ29uc29sZSc6ICdcIkx1Y2lkYSBDb25zb2xlXCIsIFwiTHVjaWRhIFNhbnMgVHlwZXdyaXRlclwiLCBNb25hY28sIFwiQml0c3RyZWFtIFZlcmEgU2FucyBNb25vXCIsIG1vbm9zcGFjZScsXG4gICdMdWNpZGEgU2FucyBUeXBld3JpdGVyJzogJ1wiTHVjaWRhIFNhbnMgVHlwZXdyaXRlclwiLCBcIkx1Y2lkYSBDb25zb2xlXCIsIE1vbmFjbywgXCJCaXRzdHJlYW0gVmVyYSBTYW5zIE1vbm9cIiwgbW9ub3NwYWNlJyxcbiAgJ0x1Y2lkYSBHcmFuZGUnOiAnXCJMdWNpZGEgR3JhbmRlXCIsIFwiTHVjaWRhIFNhbnMgVW5pY29kZVwiLCBcIkx1Y2lkYSBTYW5zXCIsIEdlbmV2YSwgVmVyZGFuYSwgc2Fucy1zZXJpZicsXG4gICdNb25hY28nOiAnTW9uYWNvLCBDb25zb2xhcywgXCJMdWNpZGEgQ29uc29sZVwiLCBtb25vc3BhY2UnLFxuICAnT3B0aW1hJzogJ09wdGltYSwgU2Vnb2UsIFwiU2Vnb2UgVUlcIiwgQ2FuZGFyYSwgQ2FsaWJyaSwgQXJpYWwsIHNhbnMtc2VyaWYnLFxuICAnUGFsYXRpbm8nOiAnUGFsYXRpbm8sIFwiUGFsYXRpbm8gTGlub3R5cGVcIiwgXCJQYWxhdGlubyBMVCBTVERcIiwgXCJCb29rIEFudGlxdWFcIiwgR2VvcmdpYSwgc2VyaWYnLFxuICAnUGFweXJ1cyc6ICdQYXB5cnVzLCBmYW50YXN5JyxcbiAgJ1BlcnBldHVhJzogJ1BlcnBldHVhLCBCYXNrZXJ2aWxsZSwgXCJCaWcgQ2FzbG9uXCIsIFwiUGFsYXRpbm8gTGlub3R5cGVcIiwgUGFsYXRpbm8sIFwiVVJXIFBhbGxhZGlvIExcIiwgXCJOaW1idXMgUm9tYW4gTm85IExcIiwgc2VyaWYnLFxuICAnUm9ja3dlbGwnOiAnUm9ja3dlbGwsIFwiQ291cmllciBCb2xkXCIsIENvdXJpZXIsIEdlb3JnaWEsIFRpbWVzLCBcIlRpbWVzIE5ldyBSb21hblwiLCBzZXJpZicsXG4gICdSb2Nrd2VsbCBFeHRyYSBCb2xkJzogJ1wiUm9ja3dlbGwgRXh0cmEgQm9sZFwiLCBcIlJvY2t3ZWxsIEJvbGRcIiwgbW9ub3NwYWNlJyxcbiAgJ1NlZ29lIFVJJzogJ1wiU2Vnb2UgVUlcIiwgRnJ1dGlnZXIsIFwiRnJ1dGlnZXIgTGlub3R5cGUnLFxuICAnVGFob21hJzogJ1RhaG9tYSwgVmVyZGFuYSwgU2Vnb2UsIHNhbnMtc2VyaWYnLFxuICAnVGltZXMgTmV3IFJvbWFuJzogJ1RpbWVzTmV3Um9tYW4sIFwiVGltZXMgTmV3IFJvbWFuXCIsIFRpbWVzLCBCYXNrZXJ2aWxsZSwgR2VvcmdpYSwgc2VyaWYnLFxuICAnVHJlYnVjaGV0IE1TJzogJ1wiVHJlYnVjaGV0IE1TXCIsIFwiTHVjaWRhIEdyYW5kZVwiLCBcIkx1Y2lkYSBTYW5zIFVuaWNvZGVcIiwgXCJMdWNpZGEgU2Fuc1wiLCBUYWhvbWEsIHNhbnMtc2VyaWYnLFxuICAnVmVyZGFuYSc6ICdWZXJkYW5hLCBHZW5ldmEsIHNhbnMtc2VyaWYnXG59O1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBib290c3RyYXAtZm9ybWhlbHBlcnMtZm9udHNpemVzLmVuX1VTLmpzXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdmxhbWFubmEvQm9vdHN0cmFwRm9ybUhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDEyIFZpbmNlbnQgTGFtYW5uYVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAnTGljZW5zZScpXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAnQVMgSVMnIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyogRG9ubmEgLSBNb2RpZmllZCBmb250IHNpemVzLiAqL1xudmFyIEJGSEZvbnRTaXplc0xpc3QgPSB7XG5cdDg6ICc4Jyxcblx0OTogJzknLFxuXHQxMDogJzEwJyxcblx0MTE6ICcxMScsXG5cdDEyOiAnMTInLFxuXHQxNDogJzE0Jyxcblx0MTg6ICcxOCcsXG5cdDI0OiAnMjQnLFxuXHQzMDogJzMwJyxcblx0MzY6ICczNicsXG5cdDQ4OiAnNDgnLFxuXHQ2MDogJzYwJyxcblx0NzI6ICc3MicsXG5cdDk2OiAnOTYnXG59O1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBib290c3RyYXAtZm9ybWhlbHBlcnMtZ29vZ2xlZm9udHMuZW5fVVMuanNcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS92bGFtYW5uYS9Cb290c3RyYXBGb3JtSGVscGVyc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTIgVmluY2VudCBMYW1hbm5hXG4gKiBjb250cmlidXRlZCBieSBBYXJvbiBDb2xsZWdlbWFuLCBTcXVpZG9vLCAyMDEyXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbnZhciBCRkhHb29nbGVGb250c0xpc3QgPSB7XG4gICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnRMaXN0JyxcbiAgJ2l0ZW1zJzogW1xuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBQmVlWmVlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQWJlbCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQWJyaWwgRmF0ZmFjZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FjbG9uaWNhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBY21lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBY3RvcicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQWRhbWluYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQWR2ZW50IFBybycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICcxMDAnLFxuICAgICAgICAnMjAwJyxcbiAgICAgICAgJzMwMCcsXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzUwMCcsXG4gICAgICAgICc2MDAnLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJyxcbiAgICAgICAgJ2dyZWVrJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FndWFmaW5hIFNjcmlwdCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0Frcm9uaW0nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBbGFkaW4nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBbGRyaWNoJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBbGVncmV5YScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJyxcbiAgICAgICAgJzkwMCcsXG4gICAgICAgICc5MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQWxlZ3JleWEgU0MnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYycsXG4gICAgICAgICc5MDAnLFxuICAgICAgICAnOTAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FsZXggQnJ1c2gnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBbGZhIFNsYWIgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBbGljZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQWxpa2UnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FsaWtlIEFuZ3VsYXInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FsbGFuJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FsbGVydGEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FsbGVydGEgU3RlbmNpbCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQWxsdXJhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQWxtZW5kcmEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBbG1lbmRyYSBEaXNwbGF5JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQWxtZW5kcmEgU0MnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FtYXJhbnRlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQW1hcmFudGgnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FtYXRpYyBTQycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FtZXRoeXN0YScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQW5haGVpbScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FuZGFkYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FuZGlrYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnY3lyaWxsaWMnLFxuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJyxcbiAgICAgICAgJ2N5cmlsbGljLWV4dCdcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBbmdrb3InLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2tobWVyJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FubmllIFVzZSBZb3VyIFRlbGVzY29wZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQW5vbnltb3VzIFBybycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnY3lyaWxsaWMnLFxuICAgICAgICAnZ3JlZWstZXh0JyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbicsXG4gICAgICAgICdncmVlaycsXG4gICAgICAgICdjeXJpbGxpYy1leHQnXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQW50aWMnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FudGljIERpZG9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQW50aWMgU2xhYicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQW50b24nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBcmFwZXknLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBcmJ1dHVzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQXJidXR1cyBTbGFiJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQXJjaGl0ZWN0cyBEYXVnaHRlcicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQXJjaGl2byBCbGFjaycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FyY2hpdm8gTmFycm93JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc3MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQXJpbW8nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FyaXpvbmlhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQXJtYXRhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQXJ0aWZpa2EnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0Fydm8nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FzYXAnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBc3NldCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQXN0bG9jaCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0FzdWwnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBdG9taWMgQWdlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBdWJyZXknLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0F1ZGlvd2lkZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0F1dG91ciBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBdmVyYWdlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQXZlcmFnZSBTYW5zJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQXZlcmlhIEdydWVzYSBMaWJyZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0F2ZXJpYSBMaWJyZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICczMDAnLFxuICAgICAgICAnMzAwaXRhbGljJyxcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc3MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBdmVyaWEgU2FucyBMaWJyZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICczMDAnLFxuICAgICAgICAnMzAwaXRhbGljJyxcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc3MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdBdmVyaWEgU2VyaWYgTGlicmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAnMzAwJyxcbiAgICAgICAgJzMwMGl0YWxpYycsXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQmFkIFNjcmlwdCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnY3lyaWxsaWMnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQmFsdGhhemFyJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdCYW5nZXJzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdCYXNpYycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0JhdHRhbWJhbmcnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdraG1lcidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdCYXVtYW5zJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdCYXlvbicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAna2htZXInXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQmVsZ3Jhbm8nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0JlbGxlemEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdCZW5jaE5pbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAnMzAwJyxcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0JlbnRoYW0nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0JlcmtzaGlyZSBTd2FzaCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0JldmFuJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdCaWdlbG93IFJ1bGVzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQmlnc2hvdCBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0JpbGJvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQmlsYm8gU3dhc2ggQ2FwcycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0JpdHRlcicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQmxhY2sgT3BzIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0Jva29yJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdraG1lcidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdCb25ib24nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0Jvb2dhbG9vJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdCb3dsYnkgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdCb3dsYnkgT25lIFNDJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQnJhd2xlcicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQnJlZSBTZXJpZicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0J1YmJsZWd1bSBTYW5zJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQnViYmxlciBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdCdWRhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzMwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0J1ZW5hcmQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQnV0Y2hlcm1hbicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0J1dHRlcmZseSBLaWRzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ2FiaW4nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNTAwJyxcbiAgICAgICAgJzUwMGl0YWxpYycsXG4gICAgICAgICc2MDAnLFxuICAgICAgICAnNjAwaXRhbGljJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc3MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDYWJpbiBDb25kZW5zZWQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc1MDAnLFxuICAgICAgICAnNjAwJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NhYmluIFNrZXRjaCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NhZXNhciBEcmVzc2luZycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ2FnbGlvc3RybycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ2FsbGlncmFmZml0dGknLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NhbWJvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDYW5kYWwnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NhbnRhcmVsbCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ2FudGF0YSBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDYW50b3JhIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NhcHJpb2xhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ2FyZG8nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnZ3JlZWstZXh0JyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbicsXG4gICAgICAgICdncmVlaydcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDYXJtZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ2Fycm9pcyBHb3RoaWMnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NhcnJvaXMgR290aGljIFNDJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDYXJ0ZXIgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDYXVkZXgnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2dyZWVrLWV4dCcsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nLFxuICAgICAgICAnZ3JlZWsnXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ2VkYXJ2aWxsZSBDdXJzaXZlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDZXZpY2hlIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ2hhbmdhIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NoYW5nbycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NoYXUgUGhpbG9tZW5lIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDaGVsYSBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDaGVsc2VhIE1hcmtldCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NoZW5sYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAna2htZXInXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ2hlcnJ5IENyZWFtIFNvZGEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NoZXJyeSBTd2FzaCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDaGV3eScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ2hpY2xlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ2hpdm8nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnOTAwJyxcbiAgICAgICAgJzkwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NpbnplbCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc5MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDaW56ZWwgRGVjb3JhdGl2ZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc5MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDbGlja2VyIFNjcmlwdCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NvZGEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc4MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDb2RhIENhcHRpb24nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAnODAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ29keXN0YXInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAnMzAwJyxcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ29tYm8nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDb21mb3J0YWEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAnMzAwJyxcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnY3lyaWxsaWMnLFxuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJyxcbiAgICAgICAgJ2dyZWVrJyxcbiAgICAgICAgJ2N5cmlsbGljLWV4dCdcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDb21pbmcgU29vbicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ29uY2VydCBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDb25kaW1lbnQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDb250ZW50JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAna2htZXInXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ29udHJhaWwgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDb252ZXJnZW5jZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ29va2llJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDb3BzZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ29yYmVuJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ291cmdldHRlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ291c2luZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ291c3RhcmQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc5MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDb3ZlcmVkIEJ5IFlvdXIgR3JhY2UnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NyYWZ0eSBHaXJscycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ3JlZXBzdGVyJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDcmV0ZSBSb3VuZCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdDcmltc29uIFRleHQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNjAwJyxcbiAgICAgICAgJzYwMGl0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnQ3JvaXNzYW50IE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0NydXNoZWQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0N1cHJ1bScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnY3lyaWxsaWMnLFxuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0N1dGl2ZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0N1dGl2ZSBNb25vJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRGFtaW9uJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdEYW5jaW5nIFNjcmlwdCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0RhbmdyZWsnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2tobWVyJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0Rhd25pbmcgb2YgYSBOZXcgRGF5JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdEYXlzIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRGVsaXVzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdEZWxpdXMgU3dhc2ggQ2FwcycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRGVsaXVzIFVuaWNhc2UnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdEZWxsYSBSZXNwaXJhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdEZXZvbnNoaXJlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRGlkYWN0IEdvdGhpYycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnY3lyaWxsaWMnLFxuICAgICAgICAnZ3JlZWstZXh0JyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbicsXG4gICAgICAgICdncmVlaycsXG4gICAgICAgICdjeXJpbGxpYy1leHQnXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRGlwbG9tYXRhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRGlwbG9tYXRhIFNDJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRG9wcGlvIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0RvcnNhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdEb3NpcycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICcyMDAnLFxuICAgICAgICAnMzAwJyxcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNTAwJyxcbiAgICAgICAgJzYwMCcsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnODAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0RyIFN1Z2l5YW1hJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRHJvaWQgU2FucycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0Ryb2lkIFNhbnMgTW9ubycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRHJvaWQgU2VyaWYnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0R1cnUgU2FucycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0R5bmFsaWdodCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0VCIEdhcmFtb25kJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdjeXJpbGxpYycsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nLFxuICAgICAgICAndmlldG5hbWVzZScsXG4gICAgICAgICdjeXJpbGxpYy1leHQnXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRWFnbGUgTGFrZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0VhdGVyJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRWNvbm9taWNhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc3MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRWxlY3Ryb2xpemUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0VtYmxlbWEgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRW1pbHlzIENhbmR5JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRW5nYWdlbWVudCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRW5nbGViZXJ0JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRW5yaXF1ZXRhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0VyaWNhIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRXN0ZWJhbicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0V1cGhvcmlhIFNjcmlwdCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0V3ZXJ0JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRXhvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzEwMCcsXG4gICAgICAgICcxMDBpdGFsaWMnLFxuICAgICAgICAnMjAwJyxcbiAgICAgICAgJzIwMGl0YWxpYycsXG4gICAgICAgICczMDAnLFxuICAgICAgICAnMzAwaXRhbGljJyxcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJyxcbiAgICAgICAgJzUwMCcsXG4gICAgICAgICc1MDBpdGFsaWMnLFxuICAgICAgICAnNjAwJyxcbiAgICAgICAgJzYwMGl0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJyxcbiAgICAgICAgJzgwMCcsXG4gICAgICAgICc4MDBpdGFsaWMnLFxuICAgICAgICAnOTAwJyxcbiAgICAgICAgJzkwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdFeHBsZXR1cyBTYW5zJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJyxcbiAgICAgICAgJzUwMCcsXG4gICAgICAgICc1MDBpdGFsaWMnLFxuICAgICAgICAnNjAwJyxcbiAgICAgICAgJzYwMGl0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRmFud29vZCBUZXh0JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRmFzY2luYXRlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdGYXNjaW5hdGUgSW5saW5lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdGYXN0ZXIgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdGYXN0aGFuZCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAna2htZXInXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRmVkZXJhbnQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0ZlZGVybycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRmVsaXBhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRmVuaXgnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdGaW5nZXIgUGFpbnQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0Zqb3JkIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRmxhbWVuY28nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAnMzAwJyxcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdGbGF2b3JzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdGb25kYW1lbnRvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0ZvbnRkaW5lciBTd2Fua3knLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0ZvcnVtJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdjeXJpbGxpYycsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nLFxuICAgICAgICAnY3lyaWxsaWMtZXh0J1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0ZyYW5jb2lzIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0ZyZWNrbGUgRmFjZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0ZyZWRlcmlja2EgdGhlIEdyZWF0JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdGcmVkb2thIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnRnJlZWhhbmQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2tobWVyJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0ZyZXNjYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0ZyaWpvbGUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0Z1Z2F6IE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnR0ZTIERpZG90JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdncmVlaydcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdHRlMgTmVvaGVsbGVuaWMnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2dyZWVrJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0dhZmF0YScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0dhbGRlYW5vJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdHYWxpbmRvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnR2VudGl1bSBCYXNpYycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0dlbnRpdW0gQm9vayBCYXNpYycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0dlbycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0dlb3N0YXInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0dlb3N0YXIgRmlsbCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnR2VybWFuaWEgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdHaWxkYSBEaXNwbGF5JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnR2l2ZSBZb3UgR2xvcnknLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0dsYXNzIEFudGlxdWEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdHbGVnb28nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdHbG9yaWEgSGFsbGVsdWphaCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnR29ibGluIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnR29jaGkgSGFuZCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnR29yZGl0YXMnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdHb3VkeSBCb29rbGV0dGVyIDE5MTEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0dyYWR1YXRlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdHcmF2aXRhcyBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0dyZWF0IFZpYmVzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnR3JpZmZ5JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnR3J1cHBvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnR3VkZWEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0hhYmliaScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0hhbW1lcnNtaXRoIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0hhbmFsZWknLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdIYW5hbGVpIEZpbGwnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdIYW5kbGVlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdIYW51bWFuJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAna2htZXInXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnSGFwcHkgTW9ua2V5JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnSGVhZGxhbmQgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnSGVubnkgUGVubnknLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0hlcnIgVm9uIE11ZWxsZXJob2ZmJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnSG9sdHdvb2QgT25lIFNDJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdIb21lbWFkZSBBcHBsZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnSG9tZW5hamUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdJTSBGZWxsIERXIFBpY2EnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdJTSBGZWxsIERXIFBpY2EgU0MnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0lNIEZlbGwgRG91YmxlIFBpY2EnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdJTSBGZWxsIERvdWJsZSBQaWNhIFNDJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdJTSBGZWxsIEVuZ2xpc2gnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdJTSBGZWxsIEVuZ2xpc2ggU0MnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0lNIEZlbGwgRnJlbmNoIENhbm9uJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnSU0gRmVsbCBGcmVuY2ggQ2Fub24gU0MnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0lNIEZlbGwgR3JlYXQgUHJpbWVyJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnSU0gRmVsbCBHcmVhdCBQcmltZXIgU0MnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0ljZWJlcmcnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0ljZWxhbmQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0ltcHJpbWEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdJbmNvbnNvbGF0YScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdJbmRlcicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0luZGllIEZsb3dlcicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnSW5pa2EnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnSXJpc2ggR3JvdmVyJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdJc3RvayBXZWInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbicsXG4gICAgICAgICdjeXJpbGxpYy1leHQnXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnSXRhbGlhbmEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0l0YWxpYW5ubycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0phY3F1ZXMgRnJhbmNvaXMnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0phY3F1ZXMgRnJhbmNvaXMgU2hhZG93JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdKaW0gTmlnaHRzaGFkZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0pvY2tleSBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdKb2xseSBMb2RnZXInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdKb3NlZmluIFNhbnMnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAnMTAwJyxcbiAgICAgICAgJzEwMGl0YWxpYycsXG4gICAgICAgICczMDAnLFxuICAgICAgICAnMzAwaXRhbGljJyxcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJyxcbiAgICAgICAgJzYwMCcsXG4gICAgICAgICc2MDBpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0pvc2VmaW4gU2xhYicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICcxMDAnLFxuICAgICAgICAnMTAwaXRhbGljJyxcbiAgICAgICAgJzMwMCcsXG4gICAgICAgICczMDBpdGFsaWMnLFxuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNjAwJyxcbiAgICAgICAgJzYwMGl0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnSm90aSBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdKdWRzb24nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnSnVsZWUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0p1bGl1cyBTYW5zIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0p1bmdlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdKdXJhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzMwMCcsXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzUwMCcsXG4gICAgICAgICc2MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdjeXJpbGxpYycsXG4gICAgICAgICdncmVlay1leHQnLFxuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJyxcbiAgICAgICAgJ2dyZWVrJyxcbiAgICAgICAgJ2N5cmlsbGljLWV4dCdcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdKdXN0IEFub3RoZXIgSGFuZCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnSnVzdCBNZSBBZ2FpbiBEb3duIEhlcmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0thbWVyb24nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdLYXJsYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0thdXNoYW4gU2NyaXB0JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnS2VhbmlhIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0tlbGx5IFNsYWInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdLZW5pYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnS2htZXInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2tobWVyJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0tpdGUgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdLbmV3YXZlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnS290dGEgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnS291bGVuJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdraG1lcidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdLcmFua3knLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0tyZW9uJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzMwMCcsXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0tyaXN0aScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnS3JvbmEgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTGEgQmVsbGUgQXVyb3JlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdMYW5jZWxvdCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTGF0bycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICcxMDAnLFxuICAgICAgICAnMTAwaXRhbGljJyxcbiAgICAgICAgJzMwMCcsXG4gICAgICAgICczMDBpdGFsaWMnLFxuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYycsXG4gICAgICAgICc5MDAnLFxuICAgICAgICAnOTAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTGVhZ3VlIFNjcmlwdCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTGVja2VybGkgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdMZWRnZXInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdMZWt0b24nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0xlbW9uJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdMaWZlIFNhdmVycycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0xpbGl0YSBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdMaW1lbGlnaHQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdMaW5kZW4gSGlsbCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0xvYnN0ZXInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbicsXG4gICAgICAgICdjeXJpbGxpYy1leHQnXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTG9ic3RlciBUd28nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0xvbmRyaW5hIE91dGxpbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0xvbmRyaW5hIFNoYWRvdycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTG9uZHJpbmEgU2tldGNoJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdMb25kcmluYSBTb2xpZCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTG9yYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTG92ZSBZYSBMaWtlIEEgU2lzdGVyJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdMb3ZlZCBieSB0aGUgS2luZycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTG92ZXJzIFF1YXJyZWwnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdMdWNraWVzdCBHdXknLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ0x1c2l0YW5hJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTHVzdHJpYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWFjb25kbycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWFjb25kbyBTd2FzaCBDYXBzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNYWdyYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNYWlkZW4gT3JhbmdlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNYWtvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNYXJjZWxsdXMnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNYXJjZWxsdXMgU0MnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNYXJjayBTY3JpcHQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNYXJnYXJpbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNYXJrbyBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ01hcm1lbGFkJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdjeXJpbGxpYycsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWFydmVsJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc3MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNYXRlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWF0ZSBTQycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWF2ZW4gUHJvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNTAwJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc5MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNY0xhcmVuJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWVkZG9uJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNZWRpZXZhbFNoYXJwJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWVkdWxhIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWVncmltJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNZWllIFNjcmlwdCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ01lcmllbmRhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ01lcmllbmRhIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWVycml3ZWF0aGVyJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzMwMCcsXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc5MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNZXRhbCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAna2htZXInXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWV0YWwgTWFuaWEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNZXRhbW9ycGhvdXMnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNZXRyb3Bob2JpYycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWljaHJvbWEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ01pbHRvbmlhbicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWlsdG9uaWFuIFRhdHRvbycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWluaXZlcicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTWlzcyBGYWphcmRvc2UnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNb2Rlcm4gQW50aXF1YScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ01vbGVuZ28nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNb2xsZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTW9ub2ZldHQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ01vbm90b24nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ01vbnNpZXVyIExhIERvdWxhaXNlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTW9udGFnYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTW9udGV6JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNb250c2VycmF0JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTW9udHNlcnJhdCBBbHRlcm5hdGVzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTW9udHNlcnJhdCBTdWJyYXlhZGEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNb3VsJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdraG1lcidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNb3VscGFsaScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAna2htZXInXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTW91bnRhaW5zIG9mIENocmlzdG1hcycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ01vdXNlIE1lbW9pcnMnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNciBCZWRmb3J0JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTXIgRGFmb2UnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNciBEZSBIYXZpbGFuZCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ01ycyBTYWludCBEZWxhZmllbGQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdNcnMgU2hlcHBhcmRzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTXVsaScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICczMDAnLFxuICAgICAgICAnMzAwaXRhbGljJyxcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTXlzdGVyeSBRdWVzdCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ05ldWNoYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnY3lyaWxsaWMnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTmV1dG9uJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzIwMCcsXG4gICAgICAgICczMDAnLFxuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzgwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdOZXdzIEN5Y2xlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ05pY29ubmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdOaXhpZSBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ05vYmlsZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTm9rb3JhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAna2htZXInXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTm9yaWNhbicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ05vc2lmZXInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdOb3RoaW5nIFlvdSBDb3VsZCBEbycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTm90aWNpYSBUZXh0JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc3MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nLFxuICAgICAgICAndmlldG5hbWVzZSdcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdOb3ZhIEN1dCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTm92YSBGbGF0JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdOb3ZhIE1vbm8nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJyxcbiAgICAgICAgJ2dyZWVrJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ05vdmEgT3ZhbCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTm92YSBSb3VuZCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTm92YSBTY3JpcHQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ05vdmEgU2xpbScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTm92YSBTcXVhcmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ051bWFucycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnTnVuaXRvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzMwMCcsXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ09kb3IgTWVhbiBDaGV5JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdraG1lcidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdPZmZzaWRlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdPbGQgU3RhbmRhcmQgVFQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnT2xkZW5idXJnJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnT2xlbyBTY3JpcHQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnT2xlbyBTY3JpcHQgU3dhc2ggQ2FwcycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdPcGVuIFNhbnMnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAnMzAwJyxcbiAgICAgICAgJzMwMGl0YWxpYycsXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc2MDAnLFxuICAgICAgICAnNjAwaXRhbGljJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc3MDBpdGFsaWMnLFxuICAgICAgICAnODAwJyxcbiAgICAgICAgJzgwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2dyZWVrLWV4dCcsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nLFxuICAgICAgICAndmlldG5hbWVzZScsXG4gICAgICAgICdncmVlaycsXG4gICAgICAgICdjeXJpbGxpYy1leHQnXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnT3BlbiBTYW5zIENvbmRlbnNlZCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICczMDAnLFxuICAgICAgICAnMzAwaXRhbGljJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2dyZWVrLWV4dCcsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nLFxuICAgICAgICAndmlldG5hbWVzZScsXG4gICAgICAgICdncmVlaycsXG4gICAgICAgICdjeXJpbGxpYy1leHQnXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnT3JhbmllbmJhdW0nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbicsXG4gICAgICAgICdjeXJpbGxpYy1leHQnXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnT3JiaXRyb24nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc1MDAnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzkwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ09yZWdhbm8nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnT3JpZW50YScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ09yaWdpbmFsIFN1cmZlcicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnT3N3YWxkJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzMwMCcsXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdPdmVyIHRoZSBSYWluYm93JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdPdmVybG9jaycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJyxcbiAgICAgICAgJzkwMCcsXG4gICAgICAgICc5MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnT3ZlcmxvY2sgU0MnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdPdm8nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ094eWdlbicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICczMDAnLFxuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnT3h5Z2VuIE1vbm8nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdQVCBNb25vJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdjeXJpbGxpYycsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nLFxuICAgICAgICAnY3lyaWxsaWMtZXh0J1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1BUIFNhbnMnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdQVCBTYW5zIENhcHRpb24nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdjeXJpbGxpYycsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUFQgU2FucyBOYXJyb3cnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdjeXJpbGxpYycsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUFQgU2VyaWYnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1BUIFNlcmlmIENhcHRpb24nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdjeXJpbGxpYycsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdQYWNpZmljbycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUGFwcmlrYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUGFyaXNpZW5uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1Bhc3Nlcm8gT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUGFzc2lvbiBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnOTAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1BhdHJpY2sgSGFuZCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1BhdHVhIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUGF5dG9uZSBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1BlcmFsdGEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdQZXJtYW5lbnQgTWFya2VyJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdQZXRpdCBGb3JtYWwgU2NyaXB0JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUGV0cm9uYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUGhpbG9zb3BoZXInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1BpZWRyYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1BpbnlvbiBTY3JpcHQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1BpcmF0YSBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdQbGFzdGVyJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUGxheScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2dyZWVrLWV4dCcsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nLFxuICAgICAgICAnZ3JlZWsnLFxuICAgICAgICAnY3lyaWxsaWMtZXh0J1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1BsYXliYWxsJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUGxheWZhaXIgRGlzcGxheScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJyxcbiAgICAgICAgJzkwMCcsXG4gICAgICAgICc5MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdjeXJpbGxpYycsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUGxheWZhaXIgRGlzcGxheSBTQycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJyxcbiAgICAgICAgJzkwMCcsXG4gICAgICAgICc5MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdjeXJpbGxpYycsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUG9ka292YScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1BvaXJldCBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdQb2xsZXIgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdQb2x5JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUG9tcGllcmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1BvbnRhbm8gU2FucycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1BvcnQgTGxpZ2F0IFNhbnMnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1BvcnQgTGxpZ2F0IFNsYWInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1ByYXRhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdQcmVhaHZpaGVhcicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAna2htZXInXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUHJlc3MgU3RhcnQgMlAnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbicsXG4gICAgICAgICdncmVlaydcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdQcmluY2VzcyBTb2ZpYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1Byb2Npb25vJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdQcm9zdG8gT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdjeXJpbGxpYycsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUHVyaXRhbicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUHVycGxlIFB1cnNlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUXVhbmRvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUXVhbnRpY28nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1F1YXR0cm9jZW50bycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdRdWF0dHJvY2VudG8gU2FucycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1F1ZXN0cmlhbCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUXVpY2tzYW5kJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzMwMCcsXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1F1aW50ZXNzZW50aWFsJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUXdpZ2xleScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1JhY2luZyBTYW5zIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1JhZGxleScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdSYWxld2F5JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzEwMCcsXG4gICAgICAgICcyMDAnLFxuICAgICAgICAnMzAwJyxcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNTAwJyxcbiAgICAgICAgJzYwMCcsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnODAwJyxcbiAgICAgICAgJzkwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1JhbGV3YXkgRG90cycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1JhbWJsYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1JhbW1ldHRvIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1JhbmNoZXJzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUmFuY2hvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdSYXRpb25hbGUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1JlZHJlc3NlZCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUmVlbmllIEJlYW5pZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUmV2YWxpYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1JpYmV5ZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1JpYmV5ZSBNYXJyb3cnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdSaWdodGVvdXMnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdSaXNxdWUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdSb2NoZXN0ZXInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1JvY2sgU2FsdCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnUm9ra2l0dCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1JvbWFuZXNjbycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1JvcGEgU2FucycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdSb3NhcmlvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc3MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdSb3Nhcml2bycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdSb3VnZSBTY3JpcHQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1J1ZGEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnOTAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1J1ZmluYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzcwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdSdWdlIEJvb2dpZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1J1bHVrbycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1J1bSBSYWlzaW4nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdSdXNsYW4gRGlzcGxheScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnY3lyaWxsaWMnLFxuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJyxcbiAgICAgICAgJ2N5cmlsbGljLWV4dCdcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdSdXNzbyBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdSdXRoaWUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdSeWUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTYWNyYW1lbnRvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU2FpbCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU2Fsc2EnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1NhbmNoZXonLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU2FuY3JlZWsnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTYW5zaXRhIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU2FyaW5hJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU2F0aXNmeScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU2NhZGEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTY2hvb2xiZWxsJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTZWF3ZWVkIFNjcmlwdCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1NldmlsbGFuYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1NleW1vdXIgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdjeXJpbGxpYycsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU2hhZG93cyBJbnRvIExpZ2h0JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTaGFkb3dzIEludG8gTGlnaHQgVHdvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU2hhbnRpJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTaGFyZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1NoYXJlIFRlY2gnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1NoYXJlIFRlY2ggTW9ubycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU2hvanVtYXJ1JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU2hvcnQgU3RhY2snLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1NpZW1yZWFwJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdraG1lcidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTaWdtYXIgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTaWduaWthJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzMwMCcsXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJzYwMCcsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU2lnbmlrYSBOZWdhdGl2ZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICczMDAnLFxuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc2MDAnLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1NpbW9uZXR0YScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc5MDAnLFxuICAgICAgICAnOTAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1NpcmluIFN0ZW5jaWwnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1NpeCBDYXBzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTa3JhbmppJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1NsYWNrZXknLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1Ntb2t1bScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU215dGhlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTbmlnbGV0JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzgwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1NuaXBwZXQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1Nub3didXJzdCBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTb2ZhZGkgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTb2ZpYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU29uc2llIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1NvcnRzIE1pbGwgR291ZHknLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU291cmNlIENvZGUgUHJvJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzIwMCcsXG4gICAgICAgICczMDAnLFxuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc2MDAnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzkwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1NvdXJjZSBTYW5zIFBybycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICcyMDAnLFxuICAgICAgICAnMjAwaXRhbGljJyxcbiAgICAgICAgJzMwMCcsXG4gICAgICAgICczMDBpdGFsaWMnLFxuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNjAwJyxcbiAgICAgICAgJzYwMGl0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJyxcbiAgICAgICAgJzkwMCcsXG4gICAgICAgICc5MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU3BlY2lhbCBFbGl0ZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU3BpY3kgUmljZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU3Bpbm5ha2VyJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU3BpcmF4JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTcXVhZGEgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTdGFsZW1hdGUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTdGFsaW5pc3QgT25lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdjeXJpbGxpYycsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU3RhcmRvcyBTdGVuY2lsJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU3RpbnQgVWx0cmEgQ29uZGVuc2VkJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU3RpbnQgVWx0cmEgRXhwYW5kZWQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTdG9rZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICczMDAnLFxuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdTdHJhaXQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1N1ZSBFbGxlbiBGcmFuY2lzY28nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1N1bnNoaW5leScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU3VwZXJtZXJjYWRvIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU3V3YW5uYXBodW0nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2tobWVyJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1N3YW5reSBhbmQgTW9vIE1vbycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnU3luY29wYXRlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVGFuZ2VyaW5lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVGFwcm9tJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdraG1lcidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdUZWxleCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVGVub3IgU2FucycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnY3lyaWxsaWMnLFxuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJyxcbiAgICAgICAgJ2N5cmlsbGljLWV4dCdcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdUZXh0IE1lIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1RoZSBHaXJsIE5leHQgRG9vcicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVGllbm5lJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzkwMCdcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1Rpbm9zJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInLFxuICAgICAgICAnaXRhbGljJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc3MDBpdGFsaWMnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdUaXRhbiBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdUaXRpbGxpdW0gV2ViJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzIwMCcsXG4gICAgICAgICcyMDBpdGFsaWMnLFxuICAgICAgICAnMzAwJyxcbiAgICAgICAgJzMwMGl0YWxpYycsXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc2MDAnLFxuICAgICAgICAnNjAwaXRhbGljJyxcbiAgICAgICAgJzcwMCcsXG4gICAgICAgICc3MDBpdGFsaWMnLFxuICAgICAgICAnOTAwJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1RyYWRlIFdpbmRzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdUcm9jY2hpJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVHJvY2h1dCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdUcnlra2VyJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVHVscGVuIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVWJ1bnR1JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzMwMCcsXG4gICAgICAgICczMDBpdGFsaWMnLFxuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNTAwJyxcbiAgICAgICAgJzUwMGl0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnY3lyaWxsaWMnLFxuICAgICAgICAnZ3JlZWstZXh0JyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbicsXG4gICAgICAgICdncmVlaycsXG4gICAgICAgICdjeXJpbGxpYy1leHQnXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVWJ1bnR1IENvbmRlbnNlZCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnY3lyaWxsaWMnLFxuICAgICAgICAnZ3JlZWstZXh0JyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbicsXG4gICAgICAgICdncmVlaycsXG4gICAgICAgICdjeXJpbGxpYy1leHQnXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVWJ1bnR1IE1vbm8nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2dyZWVrLWV4dCcsXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nLFxuICAgICAgICAnZ3JlZWsnLFxuICAgICAgICAnY3lyaWxsaWMtZXh0J1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1VsdHJhJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdVbmNpYWwgQW50aXF1YScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVW5kZXJkb2cnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2N5cmlsbGljJyxcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdVbmljYSBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluLWV4dCcsXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdVbmlmcmFrdHVyQ29vaycsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdVbmlmcmFrdHVyTWFndW50aWEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1Vua2VtcHQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdVbmxvY2snLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1VubmEnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1ZUMzIzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdWYW1waXJvIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1ZhcmVsYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1ZhcmVsYSBSb3VuZCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVmFzdCBTaGFkb3cnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1ZpYnVyJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdWaWRhbG9rYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVmlnYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1ZvY2VzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVm9sa2hvdicsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJyxcbiAgICAgICAgJ2l0YWxpYycsXG4gICAgICAgICc3MDAnLFxuICAgICAgICAnNzAwaXRhbGljJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnVm9sbGtvcm4nLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICdpdGFsaWMnLFxuICAgICAgICAnNzAwJyxcbiAgICAgICAgJzcwMGl0YWxpYydcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1ZvbHRhaXJlJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbidcbiAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICdraW5kJzogJ3dlYmZvbnRzI3dlYmZvbnQnLFxuICAgICAgJ2ZhbWlseSc6ICdXYWl0aW5nIGZvciB0aGUgU3VucmlzZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnV2FsbHBvZXQnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1dhbHRlciBUdXJuY29hdCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnV2FybmVzJyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnV2VsbGZsZWV0JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJ3JlZ3VsYXInXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnV2lyZSBPbmUnLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1lhbm9uZSBLYWZmZWVzYXR6JyxcbiAgICAgICd2YXJpYW50cyc6IFtcbiAgICAgICAgJzIwMCcsXG4gICAgICAgICczMDAnLFxuICAgICAgICAncmVndWxhcicsXG4gICAgICAgICc3MDAnXG4gICAgICBdLFxuICAgICAgJ3N1YnNldHMnOiBbXG4gICAgICAgICdsYXRpbi1leHQnLFxuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnWWVsbG93dGFpbCcsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAna2luZCc6ICd3ZWJmb250cyN3ZWJmb250JyxcbiAgICAgICdmYW1pbHknOiAnWWVzZXZhIE9uZScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnY3lyaWxsaWMnLFxuICAgICAgICAnbGF0aW4tZXh0JyxcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1llc3RlcnllYXInLFxuICAgICAgJ3ZhcmlhbnRzJzogW1xuICAgICAgICAncmVndWxhcidcbiAgICAgIF0sXG4gICAgICAnc3Vic2V0cyc6IFtcbiAgICAgICAgJ2xhdGluJ1xuICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgJ2tpbmQnOiAnd2ViZm9udHMjd2ViZm9udCcsXG4gICAgICAnZmFtaWx5JzogJ1pleWFkYScsXG4gICAgICAndmFyaWFudHMnOiBbXG4gICAgICAgICdyZWd1bGFyJ1xuICAgICAgXSxcbiAgICAgICdzdWJzZXRzJzogW1xuICAgICAgICAnbGF0aW4nXG4gICAgICBdXG4gICAgfVxuICBdXG59O1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBib290c3RyYXAtZm9ybWhlbHBlcnMtbGFuZ3VhZ2VzLmVuX1VTLmpzXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdmxhbWFubmEvQm9vdHN0cmFwRm9ybUhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDEyIFZpbmNlbnQgTGFtYW5uYVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuIFxudmFyIEJGSExhbmd1YWdlc0xpc3QgPSB7XG4gICdvbSc6ICdBZmFhbiBPcm9tb28nLFxuICAnYWEnOiAnQWZhcmFmJyxcbiAgJ2FmJzogJ0FmcmlrYWFucycsXG4gICdhayc6ICdBa2FuJyxcbiAgJ2FuJzogJ2FyYWdvbsOpcycsXG4gICdpZyc6ICdBc+G7pXPhu6UgSWdibycsXG4gICdnbic6ICdBdmHDsWVcXCfhur0nLFxuICAnYWUnOiAnYXZlc3RhJyxcbiAgJ2F5JzogJ2F5bWFyIGFydScsXG4gICdheic6ICdhesmZcmJheWNhbiBkaWxpJyxcbiAgJ2lkJzogJ0JhaGFzYSBJbmRvbmVzaWEnLFxuICAnbXMnOiAnYmFoYXNhIE1lbGF5dScsXG4gICdibSc6ICdiYW1hbmFua2FuJyxcbiAgJ2p2JzogJ2Jhc2EgSmF3YScsXG4gICdzdSc6ICdCYXNhIFN1bmRhJyxcbiAgJ2JpJzogJ0Jpc2xhbWEnLFxuICAnYnMnOiAnYm9zYW5za2kgamV6aWsnLFxuICAnYnInOiAnYnJlemhvbmVnJyxcbiAgJ2NhJzogJ2NhdGFsw6AnLFxuICAnY2gnOiAnQ2hhbW9ydScsXG4gICdueSc6ICdjaGlDaGXFtWEnLFxuICAnc24nOiAnY2hpU2hvbmEnLFxuICAnY28nOiAnY29yc3UnLFxuICAnY3knOiAnQ3ltcmFlZycsXG4gICdkYSc6ICdkYW5zaycsXG4gICdzZSc6ICdEYXZ2aXPDoW1lZ2llbGxhJyxcbiAgJ2RlJzogJ0RldXRzY2gnLFxuICAnbnYnOiAnRGluw6kgYml6YWFkJyxcbiAgJ2V0JzogJ2Vlc3RpJyxcbiAgJ25hJzogJ0VrYWthaXLFqSBOYW9lcm8nLFxuICAnZW4nOiAnRW5nbGlzaCcsXG4gICdlcyc6ICdlc3Bhw7FvbCcsXG4gICdlbyc6ICdFc3BlcmFudG8nLFxuICAnZXUnOiAnZXVza2FyYScsXG4gICdlZSc6ICdFyotlZ2JlJyxcbiAgJ3RvJzogJ2Zha2EgVG9uZ2EnLFxuICAnbWcnOiAnZml0ZW55IG1hbGFnYXN5JyxcbiAgJ2ZyJzogJ2ZyYW7Dp2FpcycsXG4gICdmeSc6ICdGcnlzaycsXG4gICdmZic6ICdGdWxmdWxkZScsXG4gICdmbyc6ICdmw7hyb3lza3QnLFxuICAnZ2EnOiAnR2FlaWxnZScsXG4gICdndic6ICdHYWVsZycsXG4gICdzbSc6ICdnYWdhbmEgZmFcXCdhIFNhbW9hJyxcbiAgJ2dsJzogJ2dhbGVnbycsXG4gICdzcSc6ICdnanVoYSBzaHFpcGUnLFxuICAnZ2QnOiAnR8OgaWRobGlnJyxcbiAgJ2tpJzogJ0fEqWvFqXnFqScsXG4gICdoYSc6ICdIYXVzYScsXG4gICdobyc6ICdIaXJpIE1vdHUnLFxuICAnaHInOiAnaHJ2YXRza2kgamV6aWsnLFxuICAnaW8nOiAnSWRvJyxcbiAgJ3J3JzogJ0lraW55YXJ3YW5kYScsXG4gICdybic6ICdJa2lydW5kaScsXG4gICdpYSc6ICdJbnRlcmxpbmd1YScsXG4gICduZCc6ICdpc2lOZGViZWxlJyxcbiAgJ25yJzogJ2lzaU5kZWJlbGUnLFxuICAneGgnOiAnaXNpWGhvc2EnLFxuICAnenUnOiAnaXNpWnVsdScsXG4gICdpdCc6ICdpdGFsaWFubycsXG4gICdpayc6ICdJw7F1cGlhcScsXG4gICdwbCc6ICdwb2xza2knLFxuICAnbWgnOiAnS2FqaW4gTcynYWplxLwnLFxuICAna2wnOiAna2FsYWFsbGlzdXQnLFxuICAna3InOiAnS2FudXJpJyxcbiAgJ2t3JzogJ0tlcm5ld2VrJyxcbiAgJ2tnJzogJ0tpS29uZ28nLFxuICAnc3cnOiAnS2lzd2FoaWxpJyxcbiAgJ2h0JzogJ0tyZXnDsmwgYXlpc3llbicsXG4gICdraic6ICdLdWFueWFtYScsXG4gICdrdSc6ICdLdXJkw64nLFxuICAnbGEnOiAnbGF0aW5lJyxcbiAgJ2x2JzogJ2xhdHZpZcWhdSB2YWxvZGEnLFxuICAnbHQnOiAnbGlldHV2acWzIGthbGJhJyxcbiAgJ3JvJzogJ2xpbWJhIHJvbcOibsSDJyxcbiAgJ2xpJzogJ0xpbWJ1cmdzJyxcbiAgJ2xuJzogJ0xpbmfDoWxhJyxcbiAgJ2xnJzogJ0x1Z2FuZGEnLFxuICAnbGInOiAnTMOrdHplYnVlcmdlc2NoJyxcbiAgJ2h1JzogJ21hZ3lhcicsXG4gICdtdCc6ICdNYWx0aScsXG4gICdubCc6ICdOZWRlcmxhbmRzJyxcbiAgJ25vJzogJ05vcnNrJyxcbiAgJ25iJzogJ05vcnNrIGJva23DpWwnLFxuICAnbm4nOiAnTm9yc2sgbnlub3JzaycsXG4gICd1eic6ICdPXFwnemJlaycsXG4gICdvYyc6ICdvY2NpdGFuJyxcbiAgJ2llJzogJ0ludGVybGluZ3VlJyxcbiAgJ2h6JzogJ090amloZXJlcm8nLFxuICAnbmcnOiAnT3dhbWJvJyxcbiAgJ3B0JzogJ3BvcnR1Z3XDqnMnLFxuICAndHknOiAnUmVvIFRhaGl0aScsXG4gICdybSc6ICdydW1hbnRzY2ggZ3Jpc2NodW4nLFxuICAncXUnOiAnUnVuYSBTaW1pJyxcbiAgJ3NjJzogJ3NhcmR1JyxcbiAgJ3phJzogJ1Nhya8gY3VlxYvGhScsXG4gICdzdCc6ICdTZXNvdGhvJyxcbiAgJ3RuJzogJ1NldHN3YW5hJyxcbiAgJ3NzJzogJ1NpU3dhdGknLFxuICAnc2wnOiAnc2xvdmVuc2tpIGplemlrJyxcbiAgJ3NrJzogJ3Nsb3ZlbsSNaW5hJyxcbiAgJ3NvJzogJ1Nvb21hYWxpZ2EnLFxuICAnZmknOiAnc3VvbWknLFxuICAnc3YnOiAnU3ZlbnNrYScsXG4gICdtaSc6ICd0ZSByZW8gTcSBb3JpJyxcbiAgJ3ZpJzogJ1Rp4bq/bmcgVmnhu4d0JyxcbiAgJ2x1JzogJ1RzaGlsdWJhJyxcbiAgJ3ZlJzogJ1RzaGl2ZW7huJNhJyxcbiAgJ3R3JzogJ1R3aScsXG4gICd0ayc6ICdUw7xya21lbicsXG4gICd0cic6ICdUw7xya8OnZScsXG4gICd1Zyc6ICdVecajdXJxyZknLFxuICAndm8nOiAnVm9sYXDDvGsnLFxuICAnZmonOiAndm9zYSBWYWthdml0aScsXG4gICd3YSc6ICd3YWxvbicsXG4gICd0bCc6ICdXaWthbmcgVGFnYWxvZycsXG4gICd3byc6ICdXb2xsb2YnLFxuICAndHMnOiAnWGl0c29uZ2EnLFxuICAneW8nOiAnWW9yw7liw6EnLFxuICAnc2cnOiAnecOibmfDoiB0w64gc8OkbmfDticsXG4gICdpcyc6ICfDjXNsZW5za2EnLFxuICAnY3MnOiAnxI1lxaF0aW5hJyxcbiAgJ2VsJzogJ861zrvOu863zr3Ouc66zqwnLFxuICAnYXYnOiAn0LDQstCw0YAg0LzQsNGG04AnLFxuICAnYWInOiAn0LDSp9GB0YPQsCDQsdGL0LfRiNOZ0LAnLFxuICAnYmEnOiAn0LHQsNGI0qHQvtGA0YIg0YLQtdC70LUnLFxuICAnYmUnOiAn0LHQtdC70LDRgNGD0YHQutCw0Y8g0LzQvtCy0LAnLFxuICAnYmcnOiAn0LHRitC70LPQsNGA0YHQutC4INC10LfQuNC6JyxcbiAgJ29zJzogJ9C40YDQvtC9IMOm0LLQt9Cw0LMnLFxuICAna3YnOiAn0LrQvtC80Lgg0LrRi9CyJyxcbiAgJ2t5JzogJ9Ca0YvRgNCz0YvQt9GH0LAnLFxuICAnbWsnOiAn0LzQsNC60LXQtNC+0L3RgdC60Lgg0ZjQsNC30LjQuicsXG4gICdtbic6ICfQvNC+0L3Qs9C+0LsnLFxuICAnY2UnOiAn0L3QvtGF0YfQuNC50L0g0LzQvtGC0YInLFxuICAncnUnOiAn0KDRg9GB0YHQutC40Lkg0Y/Qt9GL0LonLFxuICAnc3InOiAn0YHRgNC/0YHQutC4INGY0LXQt9C40LonLFxuICAndHQnOiAn0YLQsNGC0LDRgCDRgtC10LvQtScsXG4gICd0Zyc6ICfRgtC+0rfQuNC606MnLFxuICAndWsnOiAn0YPQutGA0LDRl9C90YHRjNC60LAg0LzQvtCy0LAnLFxuICAnY3YnOiAn0YfTkdCy0LDRiCDRh9OX0LvRhdC4JyxcbiAgJ2N1JzogJ9Gp0LfRi9C60Yog0YHQu9C+0LLRo9C90YzRgdC60YonLFxuICAna2snOiAn0pvQsNC30LDSmyDRgtGW0LvRlicsXG4gICdoeSc6ICfVgNWh1bXVpdaA1aXVticsXG4gICd5aSc6ICfXmdeZ1rTXk9eZ16knLFxuICAnaGUnOiAn16LXkdeo15nXqicsXG4gICd1cic6ICfYp9ix2K/ZiCcsXG4gICdhcic6ICfYp9mE2LnYsdio2YrYqScsXG4gICdmYSc6ICfZgdin2LHYs9uMJyxcbiAgJ3BzJzogJ9m+2prYqtmIJyxcbiAgJ2tzJzogJ+CkleCktuCljeCkruClgOCksOClgCcsXG4gICduZSc6ICfgpKjgpYfgpKrgpL7gpLLgpYAnLFxuICAncGknOiAn4KSq4KS+4KS04KS/JyxcbiAgJ2JoJzogJ+CkreCli+CknOCkquClgeCksOClgCcsXG4gICdtcic6ICfgpK7gpLDgpL7gpKDgpYAnLFxuICAnc2EnOiAn4KS44KSC4KS44KWN4KSV4KWD4KSk4KSu4KWNJyxcbiAgJ3NkJzogJ+CkuOCkv+CkqOCljeCkp+ClgCcsXG4gICdoaSc6ICfgpLngpL/gpKjgpY3gpKbgpYAnLFxuICAnYXMnOiAn4KaF4Ka44Kau4KeA4Kav4Ka84Ka+JyxcbiAgJ2JuJzogJ+CmrOCmvuCmguCmsuCmvicsXG4gICdwYSc6ICfgqKrgqbDgqJzgqL7gqKzgqYAnLFxuICAnZ3UnOiAn4KqX4KuB4Kqc4Kqw4Kq+4Kqk4KuAJyxcbiAgJ29yJzogJ+Csk+CsoeCsvOCsv+CshicsXG4gICd0YSc6ICfgrqTgrq7grr/grrTgr40nLFxuICAndGUnOiAn4LCk4LGG4LCy4LGB4LCX4LGBJyxcbiAgJ2tuJzogJ+CyleCyqOCzjeCyqOCyoScsXG4gICdtbCc6ICfgtK7gtLLgtK/gtL7gtLPgtIInLFxuICAnc2knOiAn4LeD4LeS4LaC4LeE4La9JyxcbiAgJ3RoJzogJ+C5hOC4l+C4oicsXG4gICdsbyc6ICfgup7gurLguqrgurLguqXgurLguqcnLFxuICAnYm8nOiAn4L2W4L284L2R4LyL4L2h4L2y4L2CJyxcbiAgJ2R6JzogJ+C9ouC+q+C9vOC9hOC8i+C9gScsXG4gICdteSc6ICfhgJfhgJnhgKzhgIXhgKwnLFxuICAna2EnOiAn4YOl4YOQ4YOg4YOX4YOj4YOa4YOYJyxcbiAgJ3RpJzogJ+GJteGMjeGIreGKmycsXG4gICdhbSc6ICfhiqDhiJvhiK3hipsnLFxuICAnaXUnOiAn4ZCD4ZOE4ZKD4ZGO4ZGQ4ZGmJyxcbiAgJ29qJzogJ+GQiuGTguGUkeGTiOGQr+GSp+GQjuGTkCcsXG4gICdjcic6ICfhk4DhkKbhkIPhlK3hkI3hkI/hkKMnLFxuICAna20nOiAn4Z6B4Z+S4Z6Y4Z+C4Z6aJyxcbiAgJ3poJzogJ+S4reaWh8KgKFpoxY1uZ3fDqW4pJyxcbiAgJ2phJzogJ+aXpeacrOiqnsKgKOOBq+OBu+OCk+OBlCknLFxuICAnaWknOiAn6oaI6oyg6pK/IE51b3N1aHhvcCcsXG4gICdrbyc6ICftlZzqta3slrTCoCjpn5PlnIvoqp4pJ1xufTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogYm9vdHN0cmFwLWZvcm1oZWxwZXJzLXBob25lLmVuX1VTLmpzXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdmxhbWFubmEvQm9vdHN0cmFwRm9ybUhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDEyIFZpbmNlbnQgTGFtYW5uYVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGVkY2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGVkcHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuIFxudmFyIEJGSFBob25lRm9ybWF0TGlzdCA9IHtcbiAgJ0FGJzogJys5MyAwZGQgZGRkIGRkZGQnLFxuICAnQUwnOiAnKzM1NSAwZGQgZGRkIGRkZCcsXG4gICdEWic6ICcrMjEzIDBkZGQgZGQgZGQgZGQnLFxuICAnQVMnOiAnKzEgKGRkZCkgZGRkLWRkZGQnLFxuICAnQUQnOiAnKzM3NiBkZGRkZGRkZGQnLFxuICAnQU8nOiAnKzI0NCBkZGQgZGRkIGRkZCcsXG4gICdBSSc6ICcrMSAoZGRkKSBkZGQtZGRkZCcsXG4gICdBUSc6ICcrNjcyIGRkZGRkZGRkZCcsXG4gICdBRyc6ICcrMSAoZGRkKSBkZGQtZGRkZCcsXG4gICdBUic6ICcrNTQgZGRkZGRkZGRkJyxcbiAgJ0FNJzogJyszNzQgMGRkIGRkZGRkZCcsXG4gICdBVyc6ICcrMjk3IGRkZCBkZGRkJyxcbiAgJ0FVJzogJys2MSBkZGQgZGRkIGRkZCcsXG4gICdBVCc6ICcrNDMgMGRkZGQgZGRkZGRkZGRkJyxcbiAgJ0FaJzogJys5OTQgZGRkZGRkZGRkJyxcbiAgJ0JIJzogJys5NzMgZGRkZGRkZGRkJyxcbiAgJ0JEJzogJys4ODAgZGRkZGRkZGRkJyxcbiAgJ0JCJzogJysxIGRkZGRkZGRkZCcsXG4gICdCWSc6ICcrMzc1IGRkZGRkZGRkZCcsXG4gICdCRSc6ICcrMzIgZGRkZGRkZGRkJyxcbiAgJ0JaJzogJys1MDEgZGRkZGRkZGRkJyxcbiAgJ0JKJzogJysyMjkgZGRkZGRkZGRkJyxcbiAgJ0JNJzogJysxIChkZGQpIGRkZC1kZGRkJyxcbiAgJ0JUJzogJys5NzUgZGRkZGRkZGRkJyxcbiAgJ0JPJzogJys1OTEgZGRkZGRkZGRkJyxcbiAgJ0JBJzogJyszODcgZGRkZGRkZGRkJyxcbiAgJ0JXJzogJysyNjcgZGRkZGRkZGRkJyxcbiAgJ0JWJzogJyswIGRkZGRkZGRkZCcsXG4gICdCUic6ICcrNTUgZGRkZGRkZGRkJyxcbiAgJ0lPJzogJyswIGRkZGRkZGRkZCcsXG4gICdWRyc6ICcrMSAoZGRkKSBkZGQtZGRkZCcsXG4gICdCTic6ICcrNjczIGRkZGRkZGRkZCcsXG4gICdCRyc6ICcrMzU5IGRkZGRkZGRkZCcsXG4gICdCRic6ICcrMjI2IGRkZGRkZGRkZCcsXG4gICdCSSc6ICcrMjU3IGRkZGRkZGRkZCcsXG4gICdDSSc6ICcrMjI1IGRkZGRkZGRkZCcsXG4gICdLSCc6ICcrODU1IGRkZGRkZGRkZCcsXG4gICdDTSc6ICcrMjM3IGRkZGRkZGRkZCcsXG4gICdDQSc6ICcrMSAoZGRkKSBkZGQtZGRkZCcsXG4gICdDVic6ICcrMjM4IGRkZGRkZGRkZCcsXG4gICdLWSc6ICcrMSAoZGRkKSBkZGQtZGRkZCcsXG4gICdDRic6ICcrMjM2IGRkZGRkZGRkZCcsXG4gICdURCc6ICcrMjM1IGRkZGRkZGRkZCcsXG4gICdDTCc6ICcrNTYgZGRkZGRkZGRkJyxcbiAgJ0NOJzogJys4NiBkZGRkZGRkZGQnLFxuICAnQ1gnOiAnKzYxIGRkZGRkZGRkZCcsXG4gICdDQyc6ICcrNjEgZGRkZGRkZGRkJyxcbiAgJ0NPJzogJys1NyBkZGRkZGRkZGQnLFxuICAnS00nOiAnKzI2OSBkZGRkZGRkZGQnLFxuICAnQ0cnOiAnKzI0MiBkZGRkZGRkZGQnLFxuICAnQ0snOiAnKzY4MiBkZGRkZGRkZGQnLFxuICAnQ1InOiAnKzUwNiBkZGRkZGRkZGQnLFxuICAnSFInOiAnKzM4NSBkZGRkZGRkZGQnLFxuICAnQ1UnOiAnKzUzIGRkZGRkZGRkZCcsXG4gICdDWSc6ICcrMzU3IGRkZGRkZGRkZCcsXG4gICdDWic6ICcrNDIwIGRkZGRkZGRkZCcsXG4gICdDRCc6ICcrMjQzIGRkZGRkZGRkZCcsXG4gICdESyc6ICcrNDUgZGRkZGRkZGRkJyxcbiAgJ0RKJzogJysyNTMgZGRkZGRkZGRkJyxcbiAgJ0RNJzogJysxIChkZGQpIGRkZC1kZGRkJyxcbiAgJ0RPJzogJysxIChkZGQpIGRkZC1kZGRkJyxcbiAgJ1RMJzogJys2NzAgZGRkZGRkZGRkJyxcbiAgJ0VDJzogJys1OTMgZGRkZGRkZGRkJyxcbiAgJ0VHJzogJysyMCBkZGRkZGRkZGQnLFxuICAnU1YnOiAnKzUwMyBkZGRkZGRkZGQnLFxuICAnR1EnOiAnKzI0MCBkZGRkZGRkZGQnLFxuICAnRVInOiAnKzI5MSBkZGRkZGRkZGQnLFxuICAnRUUnOiAnKzM3MiBkZGRkZGRkZGQnLFxuICAnRVQnOiAnKzI1MSBkZGRkZGRkZGQnLFxuICAnRk8nOiAnKzI5OCBkZGRkZGRkZGQnLFxuICAnRksnOiAnKzUwMCBkZGRkZGRkZGQnLFxuICAnRkonOiAnKzY3OSBkZGRkZGRkZGQnLFxuICAnRkknOiAnKzM1OCBkZGRkZGRkZGQnLFxuICAnTUsnOiAnKzM4OSBkZGRkZGRkZGQnLFxuICAnRlInOiAnKzMzIGQgZGQgZGQgZGQgZGQnLFxuICAnR0YnOiAnKzU5NCBkZGRkZGRkZGQnLFxuICAnUEYnOiAnKzY4OSBkZGRkZGRkZGQnLFxuICAnVEYnOiAnKzI2MiBkZGRkZGRkZGQnLFxuICAnR0EnOiAnKzI0MSBkZGRkZGRkZGQnLFxuICAnR0UnOiAnKzk5NSBkZGRkZGRkZGQnLFxuICAnREUnOiAnKzQ5IGRkZGRkZGRkZCcsXG4gICdHSCc6ICcrMjMzIGRkZGRkZGRkZCcsXG4gICdHSSc6ICcrMzUwIGRkZGRkZGRkZCcsXG4gICdHUic6ICcrMzAgZGRkZGRkZGRkJyxcbiAgJ0dMJzogJysyOTkgZGRkZGRkZGRkJyxcbiAgJ0dEJzogJysxIChkZGQpIGRkZC1kZGRkJyxcbiAgJ0dQJzogJys1OTAgZGRkZGRkZGRkJyxcbiAgJ0dVJzogJysxIChkZGQpIGRkZC1kZGRkJyxcbiAgJ0dUJzogJys1MDIgZGRkZGRkZGRkJyxcbiAgJ0dOJzogJysyMjQgZGRkZGRkZGRkJyxcbiAgJ0dXJzogJysyNDUgZGRkZGRkZGRkJyxcbiAgJ0dZJzogJys1OTIgZGRkZGRkZGRkJyxcbiAgJ0hUJzogJys1MDkgZGRkZGRkZGRkJyxcbiAgJ0hNJzogJyswIGRkZGRkZGRkZCcsXG4gICdITic6ICcrNTA0IGRkZGRkZGRkZCcsXG4gICdISyc6ICcrODUyIGRkZGRkZGRkZCcsXG4gICdIVSc6ICcrMzYgZGRkZGRkZGRkJyxcbiAgJ0lTJzogJyszNTQgZGRkZGRkZGRkJyxcbiAgJ0lOJzogJys5MSBkZGRkZGRkZGQnLFxuICAnSUQnOiAnKzYyIGRkZGRkZGRkZCcsXG4gICdJUic6ICcrOTggZGRkZGRkZGRkJyxcbiAgJ0lRJzogJys5NjQgZGRkZGRkZGRkJyxcbiAgJ0lFJzogJyszNTMgZGRkZGRkZGRkJyxcbiAgJ0lMJzogJys5NzIgZGRkZGRkZGRkJyxcbiAgJ0lUJzogJyszOSBkZGRkZGRkZGQnLFxuICAnSk0nOiAnKzEgKGRkZCkgZGRkLWRkZGQnLFxuICAnSlAnOiAnKzgxIGRkZGRkZGRkZCcsXG4gICdKTyc6ICcrOTYyIGRkZGRkZGRkZCcsXG4gICdLWic6ICcrNyBkZGRkZGRkZGQnLFxuICAnS0UnOiAnKzI1NCBkZGRkZGRkZGQnLFxuICAnS0knOiAnKzY4NiBkZGRkZGRkZGQnLFxuICAnS1cnOiAnKzk2NSBkZGRkZGRkZGQnLFxuICAnS0cnOiAnKzk5NiBkZGRkZGRkZGQnLFxuICAnTEEnOiAnKzg1NiBkZGRkZGRkZGQnLFxuICAnTFYnOiAnKzM3MSBkZGRkZGRkZGQnLFxuICAnTEInOiAnKzk2MSBkZGRkZGRkZGQnLFxuICAnTFMnOiAnKzI2NiBkZGRkZGRkZGQnLFxuICAnTFInOiAnKzIzMSBkZGRkZGRkZGQnLFxuICAnTFknOiAnKzIxOCBkZGRkZGRkZGQnLFxuICAnTEknOiAnKzQyMyBkZGRkZGRkZGQnLFxuICAnTFQnOiAnKzM3MCBkZGRkZGRkZGQnLFxuICAnTFUnOiAnKzM1MiBkZGRkZGRkZGQnLFxuICAnTU8nOiAnKzg1MyBkZGRkZGRkZGQnLFxuICAnTUcnOiAnKzI2MSBkZGRkZGRkZGQnLFxuICAnTVcnOiAnKzI2NSBkZGRkZGRkZGQnLFxuICAnTVknOiAnKzYwIGRkZGRkZGRkZCcsXG4gICdNVic6ICcrOTYwIGRkZGRkZGRkZCcsXG4gICdNTCc6ICcrMjIzIGRkZGRkZGRkZCcsXG4gICdNVCc6ICcrMzU2IGRkZGRkZGRkZCcsXG4gICdNSCc6ICcrNjkyIGRkZGRkZGRkZCcsXG4gICdNUSc6ICcrNTk2IGRkZGRkZGRkZCcsXG4gICdNUic6ICcrMjIyIGRkZGRkZGRkZCcsXG4gICdNVSc6ICcrMjMwIGRkZGRkZGRkZCcsXG4gICdZVCc6ICcrMjYyIGRkZGRkZGRkZCcsXG4gICdNWCc6ICcrNTIgZGRkZGRkZGRkJyxcbiAgJ0ZNJzogJys2OTEgZGRkZGRkZGRkJyxcbiAgJ01EJzogJyszNzMgZGRkZGRkZGRkJyxcbiAgJ01DJzogJyszNzcgZGRkZGRkZGRkJyxcbiAgJ01OJzogJys5NzYgZGRkZGRkZGRkJyxcbiAgJ01TJzogJysxIChkZGQpIGRkZC1kZGRkJyxcbiAgJ01BJzogJysyMTIgZGRkZGRkZGRkJyxcbiAgJ01aJzogJysyNTggZGRkZGRkZGRkJyxcbiAgJ01NJzogJys5NSBkZGRkZGRkZGQnLFxuICAnTkEnOiAnKzI2NCBkZGRkZGRkZGQnLFxuICAnTlInOiAnKzY3NCBkZGRkZGRkZGQnLFxuICAnTlAnOiAnKzk3NyBkZGRkZGRkZGQnLFxuICAnTkwnOiAnKzMxIGRkZGRkZGRkZCcsXG4gICdBTic6ICcrNTk5IGRkZGRkZGRkZCcsXG4gICdOQyc6ICcrNjg3IGRkZGRkZGRkZCcsXG4gICdOWic6ICcrNjQgZGRkZGRkZGRkJyxcbiAgJ05JJzogJys1MDUgZGRkZGRkZGRkJyxcbiAgJ05FJzogJysyMjcgZGRkZGRkZGRkJyxcbiAgJ05HJzogJysyMzQgZGRkZGRkZGRkJyxcbiAgJ05VJzogJys2ODMgZGRkZGRkZGRkJyxcbiAgJ05GJzogJys2NzIgZGRkZGRkZGRkJyxcbiAgJ0tQJzogJys4NTAgZGRkZGRkZGRkJyxcbiAgJ01QJzogJysxIChkZGQpIGRkZC1kZGRkJyxcbiAgJ05PJzogJys0NyBkZGRkZGRkZGQnLFxuICAnT00nOiAnKzk2OCBkZGRkZGRkZGQnLFxuICAnUEsnOiAnKzkyIGRkZGRkZGRkZCcsXG4gICdQVyc6ICcrNjgwIGRkZGRkZGRkZCcsXG4gICdQQSc6ICcrNTA3IGRkZGRkZGRkZCcsXG4gICdQRyc6ICcrNjc1IGRkZGRkZGRkZCcsXG4gICdQWSc6ICcrNTk1IGRkZGRkZGRkZCcsXG4gICdQRSc6ICcrNTEgZGRkZGRkZGRkJyxcbiAgJ1BIJzogJys2MyBkZGRkZGRkZGQnLFxuICAnUE4nOiAnKzg3MCBkZGRkZGRkZGQnLFxuICAnUEwnOiAnKzQ4IGRkZGRkZGRkZCcsXG4gICdQVCc6ICcrMzUxIGRkZGRkZGRkZCcsXG4gICdQUic6ICcrMSAoZGRkKSBkZGQtZGRkZCcsXG4gICdRQSc6ICcrOTc0IGRkZGRkZGRkZCcsXG4gICdSRSc6ICcrMjYyIGRkZGRkZGRkZCcsXG4gICdSTyc6ICcrNDAgZGRkZGRkZGRkJyxcbiAgJ1JVJzogJys3IGRkZGRkZGRkZCcsXG4gICdSVyc6ICcrMjUwIGRkZGRkZGRkZCcsXG4gICdTVCc6ICcrMjM5IGRkZGRkZGRkZCcsXG4gICdTSCc6ICcrMjkwIGRkZGRkZGRkZCcsXG4gICdLTic6ICcrMSAoZGRkKSBkZGQtZGRkZCcsXG4gICdMQyc6ICcrMSAoZGRkKSBkZGQtZGRkZCcsXG4gICdQTSc6ICcrNTA4IGRkZGRkZGRkZCcsXG4gICdWQyc6ICcrMSAoZGRkKSBkZGQtZGRkZCcsXG4gICdXUyc6ICcrNjg1IGRkZGRkZGRkZCcsXG4gICdTTSc6ICcrMzc4IGRkZGRkZGRkZCcsXG4gICdTQSc6ICcrOTY2IGRkZGRkZGRkZCcsXG4gICdTTic6ICcrMjIxIGRkZGRkZGRkZCcsXG4gICdTQyc6ICcrMjQ4IGRkZGRkZGRkZCcsXG4gICdTTCc6ICcrMjMyIGRkZGRkZGRkZCcsXG4gICdTRyc6ICcrNjUgZGRkZGRkZGRkJyxcbiAgJ1NLJzogJys0MjEgZGRkZGRkZGRkJyxcbiAgJ1NJJzogJyszODYgZGRkZGRkZGRkJyxcbiAgJ1NCJzogJys2NzcgZGRkZGRkZGRkJyxcbiAgJ1NPJzogJysyNTIgZGRkZGRkZGRkJyxcbiAgJ1pBJzogJysyNyBkZGRkZGRkZGQnLFxuICAnR1MnOiAnKzAgZGRkZGRkZGRkJyxcbiAgJ0tSJzogJys4MiBkZGRkZGRkZGQnLFxuICAnRVMnOiAnKzM0IGRkZGRkZGRkZCcsXG4gICdMSyc6ICcrOTQgZGRkZGRkZGRkJyxcbiAgJ1NEJzogJysyNDkgZGRkZGRkZGRkJyxcbiAgJ1NSJzogJys1OTcgZGRkZGRkZGRkJyxcbiAgJ1NKJzogJyswIGRkZGRkZGRkZCcsXG4gICdTWic6ICcrMjY4IGRkZGRkZGRkZCcsXG4gICdTRSc6ICcrNDYgZGRkZGRkZGRkJyxcbiAgJ0NIJzogJys0MSBkZGRkZGRkZGQnLFxuICAnU1knOiAnKzk2MyBkZGRkZGRkZGQnLFxuICAnVFcnOiAnKzg4NiBkZGRkZGRkZGQnLFxuICAnVEonOiAnKzk5MiBkZGRkZGRkZGQnLFxuICAnVFonOiAnKzI1NSBkZGRkZGRkZGQnLFxuICAnVEgnOiAnKzY2IGRkZGRkZGRkZCcsXG4gICdCUyc6ICcrMSAoZGRkKSBkZGQtZGRkZCcsXG4gICdHTSc6ICcrMjIwIGRkZGRkZGRkZCcsXG4gICdURyc6ICcrMjI4IGRkZGRkZGRkZCcsXG4gICdUSyc6ICcrNjkwIGRkZGRkZGRkZCcsXG4gICdUTyc6ICcrNjc2IGRkZGRkZGRkZCcsXG4gICdUVCc6ICcrMSAoZGRkKSBkZGQtZGRkZCcsXG4gICdUTic6ICcrMjE2IGRkZGRkZGRkZCcsXG4gICdUUic6ICcrOTAgZGRkZGRkZGRkJyxcbiAgJ1RNJzogJys5OTMgZGRkZGRkZGRkJyxcbiAgJ1RDJzogJysxIChkZGQpIGRkZC1kZGRkJyxcbiAgJ1RWJzogJys2ODggZGRkZGRkZGRkJyxcbiAgJ1ZJJzogJysxIChkZGQpIGRkZC1kZGRkJyxcbiAgJ1VHJzogJysyNTYgZGRkZGRkZGRkJyxcbiAgJ1VBJzogJyszODAgZGRkZGRkZGRkJyxcbiAgJ0FFJzogJys5NzEgZGRkZGRkZGRkJyxcbiAgJ0dCJzogJys0NCAoZGRkKSBkZGRkIGRkZGQnLFxuICAnVVMnOiAnKzEgKGRkZCkgZGRkLWRkZGQnLFxuICAnVU0nOiAnKzAgZGRkZGRkZGRkJyxcbiAgJ1VZJzogJys1OTggZGRkZGRkZGRkJyxcbiAgJ1VaJzogJys5OTggZGRkZGRkZGRkJyxcbiAgJ1ZVJzogJys2NzggZGRkZGRkZGRkJyxcbiAgJ1ZBJzogJyszOSBkZGRkZGRkZGQnLFxuICAnVkUnOiAnKzU4IGRkZGRkZGRkZCcsXG4gICdWTic6ICcrODQgZGRkZGRkZGRkJyxcbiAgJ1dGJzogJys2ODEgZGRkZGRkZGRkJyxcbiAgJ0VIJzogJyswIGRkZGRkZGRkZCcsXG4gICdZRSc6ICcrOTY3IGRkZGRkZGRkZCcsXG4gICdZVSc6ICcrMCBkZGRkZGRkZGQnLFxuICAnWk0nOiAnKzI2MCBkZGRkZGRkZGQnLFxuICAnWlcnOiAnKzI2MyBkZGRkZGRkZGQnXG59O1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBib290c3RyYXAtZm9ybWhlbHBlcnMtc3RhdGVzLmVuX1VTLmpzXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdmxhbWFubmEvQm9vdHN0cmFwRm9ybUhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDEyIFZpbmNlbnQgTGFtYW5uYVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG52YXIgQkZIU3RhdGVzTGlzdCA9IHtcbiAgJ0FGJzp7XG4gICAgJzEnIDogeydjb2RlJzonQkFMJywnbmFtZSc6J0JhbGtoJ30sXG4gICAgJzInIDogeydjb2RlJzonQkFNJywnbmFtZSc6J0JhbWlhbid9LFxuICAgICczJyA6IHsnY29kZSc6J0JERycsJ25hbWUnOidCYWRnaGlzJ30sXG4gICAgJzQnIDogeydjb2RlJzonQkRTJywnbmFtZSc6J0JhZGFraHNoYW4nfSxcbiAgICAnNScgOiB7J2NvZGUnOidCR0wnLCduYW1lJzonQmFnaGxhbid9LFxuICAgICc2JyA6IHsnY29kZSc6J0ZSQScsJ25hbWUnOidGYXJhaCd9LFxuICAgICc3JyA6IHsnY29kZSc6J0ZZQicsJ25hbWUnOidGYXJ5YWInfSxcbiAgICAnOCcgOiB7J2NvZGUnOidHSEEnLCduYW1lJzonR2hhem5pJ30sXG4gICAgJzknIDogeydjb2RlJzonR0hPJywnbmFtZSc6J0dob3dyJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0hFTCcsJ25hbWUnOidIZWxtYW5kJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0hFUicsJ25hbWUnOidIZXJhdCd9LFxuICAgICcxMicgOiB7J2NvZGUnOidKT1cnLCduYW1lJzonSm93emphbid9LFxuICAgICcxMycgOiB7J2NvZGUnOidLQUInLCduYW1lJzonS2FidWwnfSxcbiAgICAnMTQnIDogeydjb2RlJzonS0FOJywnbmFtZSc6J0thbmRhaGFyJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0tBUCcsJ25hbWUnOidLYXBpc2EnfSxcbiAgICAnMTYnIDogeydjb2RlJzonS0RaJywnbmFtZSc6J0tvbmRveid9LFxuICAgICcxNycgOiB7J2NvZGUnOidLSE8nLCduYW1lJzonS2hvc3QnfSxcbiAgICAnMTgnIDogeydjb2RlJzonS05SJywnbmFtZSc6J0tvbmFyJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0xBRycsJ25hbWUnOidMYWdobWFuJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J0xPVycsJ25hbWUnOidMb3dnYXInfSxcbiAgICAnMjEnIDogeydjb2RlJzonTkFOJywnbmFtZSc6J05hbmdyYWhhcid9LFxuICAgICcyMicgOiB7J2NvZGUnOidOSU0nLCduYW1lJzonTmltcnV6J30sXG4gICAgJzIzJyA6IHsnY29kZSc6J05VUicsJ25hbWUnOidOdXJlc3Rhbid9LFxuICAgICcyNCcgOiB7J2NvZGUnOidPUlUnLCduYW1lJzonT3J1emdhbid9LFxuICAgICcyNScgOiB7J2NvZGUnOidQQVInLCduYW1lJzonUGFyd2FuJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6J1BJQScsJ25hbWUnOidQYWt0aWEnfSxcbiAgICAnMjcnIDogeydjb2RlJzonUEtBJywnbmFtZSc6J1Bha3Rpa2EnfSxcbiAgICAnMjgnIDogeydjb2RlJzonU0FNJywnbmFtZSc6J1NhbWFuZ2FuJ30sXG4gICAgJzI5JyA6IHsnY29kZSc6J1NBUicsJ25hbWUnOidTYXItZSBQb2wnfSxcbiAgICAnMzAnIDogeydjb2RlJzonVEFLJywnbmFtZSc6J1Rha2hhcid9LFxuICAgICczMScgOiB7J2NvZGUnOidXQVInLCduYW1lJzonV2FyZGFrJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6J1pBQicsJ25hbWUnOidaYWJvbCd9XG4gIH0sXG4gICdBTCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0JSJywnbmFtZSc6J0JlcmF0J30sXG4gICAgJzInIDogeydjb2RlJzonQlUnLCduYW1lJzonQnVscWl6ZSd9LFxuICAgICczJyA6IHsnY29kZSc6J0RJJywnbmFtZSc6J0RpYmVyJ30sXG4gICAgJzQnIDogeydjb2RlJzonREwnLCduYW1lJzonRGVsdmluZSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0RSJywnbmFtZSc6J0R1cnJlcyd9LFxuICAgICc2JyA6IHsnY29kZSc6J0RWJywnbmFtZSc6J0Rldm9sbCd9LFxuICAgICc3JyA6IHsnY29kZSc6J0VMJywnbmFtZSc6J0VsYmFzYW4nfSxcbiAgICAnOCcgOiB7J2NvZGUnOidFUicsJ25hbWUnOidLb2xvbmplJ30sXG4gICAgJzknIDogeydjb2RlJzonRlInLCduYW1lJzonRmllcid9LFxuICAgICcxMCcgOiB7J2NvZGUnOidHSicsJ25hbWUnOidHamlyb2thc3Rlcid9LFxuICAgICcxMScgOiB7J2NvZGUnOidHUicsJ25hbWUnOidHcmFtc2gnfSxcbiAgICAnMTInIDogeydjb2RlJzonSEEnLCduYW1lJzonSGFzJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0tBJywnbmFtZSc6J0thdmFqZSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidLQicsJ25hbWUnOidLdXJiaW4nfSxcbiAgICAnMTUnIDogeydjb2RlJzonS0MnLCduYW1lJzonS3Vjb3ZlJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J0tPJywnbmFtZSc6J0tvcmNlJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J0tSJywnbmFtZSc6J0tydWplJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J0tVJywnbmFtZSc6J0t1a2VzJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0xCJywnbmFtZSc6J0xpYnJhemhkJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J0xFJywnbmFtZSc6J0xlemhlJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J0xVJywnbmFtZSc6J0x1c2huamUnfSxcbiAgICAnMjInIDogeydjb2RlJzonTUsnLCduYW1lJzonTWFsbGFrYXN0ZXInfSxcbiAgICAnMjMnIDogeydjb2RlJzonTU0nLCduYW1lJzonTWFsZXNpIGUgTWFkaGUnfSxcbiAgICAnMjQnIDogeydjb2RlJzonTVInLCduYW1lJzonTWlyZGl0ZSd9LFxuICAgICcyNScgOiB7J2NvZGUnOidNVCcsJ25hbWUnOidNYXQnfSxcbiAgICAnMjYnIDogeydjb2RlJzonUEcnLCduYW1lJzonUG9ncmFkZWMnfSxcbiAgICAnMjcnIDogeydjb2RlJzonUFEnLCduYW1lJzonUGVxaW4nfSxcbiAgICAnMjgnIDogeydjb2RlJzonUFInLCduYW1lJzonUGVybWV0J30sXG4gICAgJzI5JyA6IHsnY29kZSc6J1BVJywnbmFtZSc6J1B1a2UnfSxcbiAgICAnMzAnIDogeydjb2RlJzonU0gnLCduYW1lJzonU2hrb2Rlcid9LFxuICAgICczMScgOiB7J2NvZGUnOidTSycsJ25hbWUnOidTa3JhcGFyJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6J1NSJywnbmFtZSc6J1NhcmFuZGUnfSxcbiAgICAnMzMnIDogeydjb2RlJzonVEUnLCduYW1lJzonVGVwZWxlbmUnfSxcbiAgICAnMzQnIDogeydjb2RlJzonVFAnLCduYW1lJzonVHJvcG9qZSd9LFxuICAgICczNScgOiB7J2NvZGUnOidUUicsJ25hbWUnOidUaXJhbmUnfSxcbiAgICAnMzYnIDogeydjb2RlJzonVkwnLCduYW1lJzonVmxvcmUnfVxuICB9LFxuICAnRFonOntcbiAgICAnMScgOiB7J2NvZGUnOidBREUnLCduYW1lJzonQWluIERlZmxhJ30sXG4gICAgJzInIDogeydjb2RlJzonQURSJywnbmFtZSc6J0FkcmFyJ30sXG4gICAgJzMnIDogeydjb2RlJzonQUxHJywnbmFtZSc6J0FsZ2VyJ30sXG4gICAgJzQnIDogeydjb2RlJzonQU5OJywnbmFtZSc6J0FubmFiYSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0FURScsJ25hbWUnOidBaW4gVGVtb3VjaGVudCd9LFxuICAgICc2JyA6IHsnY29kZSc6J0JBVCcsJ25hbWUnOidCYXRuYSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0JCQScsJ25hbWUnOidCb3JkaiBCb3UgQXJyZXJpZGonfSxcbiAgICAnOCcgOiB7J2NvZGUnOidCRUMnLCduYW1lJzonQmVjaGFyJ30sXG4gICAgJzknIDogeydjb2RlJzonQkVKJywnbmFtZSc6J0JlamFpYSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidCSVMnLCduYW1lJzonQmlza3JhJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0JMSScsJ25hbWUnOidCbGlkYSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidCTUQnLCduYW1lJzonQm91bWVyZGVzJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0JPQScsJ25hbWUnOidCb3VpcmEnfSxcbiAgICAnMTQnIDogeydjb2RlJzonQ0hMJywnbmFtZSc6J0NobGVmJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0NPTicsJ25hbWUnOidDb25zdGFudGluZSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidESkUnLCduYW1lJzonRGplbGZhJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J0VCQScsJ25hbWUnOidFbCBCYXlhZGgnfSxcbiAgICAnMTgnIDogeydjb2RlJzonRU9VJywnbmFtZSc6J0VsIE91ZWQnfSxcbiAgICAnMTknIDogeydjb2RlJzonRVRBJywnbmFtZSc6J0VsIFRhcmYnfSxcbiAgICAnMjAnIDogeydjb2RlJzonR0hBJywnbmFtZSc6J0doYXJkYWlhJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J0dVRScsJ25hbWUnOidHdWVsbWEnfSxcbiAgICAnMjInIDogeydjb2RlJzonSUxMJywnbmFtZSc6J0lsbGl6aSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidKSUonLCduYW1lJzonSmlqZWwnfSxcbiAgICAnMjQnIDogeydjb2RlJzonS0hFJywnbmFtZSc6J0toZW5jaGVsYSd9LFxuICAgICcyNScgOiB7J2NvZGUnOidMQUcnLCduYW1lJzonTGFnaG91YXQnfSxcbiAgICAnMjYnIDogeydjb2RlJzonTUVEJywnbmFtZSc6J01lZGVhJ30sXG4gICAgJzI3JyA6IHsnY29kZSc6J01JTCcsJ25hbWUnOidNaWxhJ30sXG4gICAgJzI4JyA6IHsnY29kZSc6J01PUycsJ25hbWUnOidNb3N0YWdhbmVtJ30sXG4gICAgJzI5JyA6IHsnY29kZSc6J01TSScsJ25hbWUnOidNXFwnU2lsYSd9LFxuICAgICczMCcgOiB7J2NvZGUnOidNVUEnLCduYW1lJzonTXVhc2thcid9LFxuICAgICczMScgOiB7J2NvZGUnOidOQUEnLCduYW1lJzonTmFhbWEnfSxcbiAgICAnMzInIDogeydjb2RlJzonT0VCJywnbmFtZSc6J091bSBlbC1Cb3VhZ2hpJ30sXG4gICAgJzMzJyA6IHsnY29kZSc6J09SQScsJ25hbWUnOidPcmFuJ30sXG4gICAgJzM0JyA6IHsnY29kZSc6J09VQScsJ25hbWUnOidPdWFyZ2xhJ30sXG4gICAgJzM1JyA6IHsnY29kZSc6J1JFTCcsJ25hbWUnOidSZWxpemFuZSd9LFxuICAgICczNicgOiB7J2NvZGUnOidTQUgnLCduYW1lJzonU291ayBBaHJhcyd9LFxuICAgICczNycgOiB7J2NvZGUnOidTQUknLCduYW1lJzonU2FpZGEnfSxcbiAgICAnMzgnIDogeydjb2RlJzonU0JBJywnbmFtZSc6J1NpZGkgQmVsIEFiYmVzJ30sXG4gICAgJzM5JyA6IHsnY29kZSc6J1NFVCcsJ25hbWUnOidTZXRpZid9LFxuICAgICc0MCcgOiB7J2NvZGUnOidTS0knLCduYW1lJzonU2tpa2RhJ30sXG4gICAgJzQxJyA6IHsnY29kZSc6J1RBTScsJ25hbWUnOidUYW1hbmdoYXNzZXQnfSxcbiAgICAnNDInIDogeydjb2RlJzonVEVCJywnbmFtZSc6J1RlYmVzc2EnfSxcbiAgICAnNDMnIDogeydjb2RlJzonVElBJywnbmFtZSc6J1RpYXJldCd9LFxuICAgICc0NCcgOiB7J2NvZGUnOidUSU4nLCduYW1lJzonVGluZG91Zid9LFxuICAgICc0NScgOiB7J2NvZGUnOidUSVAnLCduYW1lJzonVGlwYXphJ30sXG4gICAgJzQ2JyA6IHsnY29kZSc6J1RJUycsJ25hbWUnOidUaXNzZW1zaWx0J30sXG4gICAgJzQ3JyA6IHsnY29kZSc6J1RMRScsJ25hbWUnOidUbGVtY2VuJ30sXG4gICAgJzQ4JyA6IHsnY29kZSc6J1RPVScsJ25hbWUnOidUaXppIE91em91J31cbiAgfSxcbiAgJ0FTJzp7XG4gICAgJzEnIDogeydjb2RlJzonRScsJ25hbWUnOidFYXN0ZXJuJ30sXG4gICAgJzInIDogeydjb2RlJzonTScsJ25hbWUnOidNYW51XFwnYSd9LFxuICAgICczJyA6IHsnY29kZSc6J1InLCduYW1lJzonUm9zZSBJc2xhbmQnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidTJywnbmFtZSc6J1N3YWlucyBJc2xhbmQnfSxcbiAgICAnNScgOiB7J2NvZGUnOidXJywnbmFtZSc6J1dlc3Rlcm4nfVxuICB9LFxuICAnQUQnOntcbiAgICAnMScgOiB7J2NvZGUnOidBTFYnLCduYW1lJzonQW5kb3JyYSBsYSBWZWxsYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0NBTicsJ25hbWUnOidDYW5pbGxvJ30sXG4gICAgJzMnIDogeydjb2RlJzonRU5DJywnbmFtZSc6J0VuY2FtcCd9LFxuICAgICc0JyA6IHsnY29kZSc6J0VTRScsJ25hbWUnOidFc2NhbGRlcy1FbmdvcmRhbnknfSxcbiAgICAnNScgOiB7J2NvZGUnOidMTUEnLCduYW1lJzonTGEgTWFzc2FuYSd9LFxuICAgICc2JyA6IHsnY29kZSc6J09SRCcsJ25hbWUnOidPcmRpbm8nfSxcbiAgICAnNycgOiB7J2NvZGUnOidTSkwnLCduYW1lJzonU2FudCBKdWxpw6AgZGUgTMOycmlhJ31cbiAgfSxcbiAgJ0FPJzp7XG4gICAgJzEnIDogeydjb2RlJzonQkdPJywnbmFtZSc6J0JlbmdvJ30sXG4gICAgJzInIDogeydjb2RlJzonQkdVJywnbmFtZSc6J0Jlbmd1ZWxhJ30sXG4gICAgJzMnIDogeydjb2RlJzonQklFJywnbmFtZSc6J0JpZSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0NBQicsJ25hbWUnOidDYWJpbmRhJ30sXG4gICAgJzUnIDogeydjb2RlJzonQ0NVJywnbmFtZSc6J0N1YW5kby1DdWJhbmdvJ30sXG4gICAgJzYnIDogeydjb2RlJzonQ05PJywnbmFtZSc6J0N1YW56YSBOb3J0ZSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0NVUycsJ25hbWUnOidDdWFuemEgU3VsJ30sXG4gICAgJzgnIDogeydjb2RlJzonQ05OJywnbmFtZSc6J0N1bmVuZSd9LFxuICAgICc5JyA6IHsnY29kZSc6J0hVQScsJ25hbWUnOidIdWFtYm8nfSxcbiAgICAnMTAnIDogeydjb2RlJzonSFVJJywnbmFtZSc6J0h1aWxhJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0xVQScsJ25hbWUnOidMdWFuZGEnfSxcbiAgICAnMTInIDogeydjb2RlJzonTE5PJywnbmFtZSc6J0x1bmRhIE5vcnRlJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0xTVScsJ25hbWUnOidMdW5kYSBTdWwnfSxcbiAgICAnMTQnIDogeydjb2RlJzonTUFMJywnbmFtZSc6J01hbGFuZ2UnfSxcbiAgICAnMTUnIDogeydjb2RlJzonTU9YJywnbmFtZSc6J01veGljbyd9LFxuICAgICcxNicgOiB7J2NvZGUnOidOQU0nLCduYW1lJzonTmFtaWJlJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J1VJRycsJ25hbWUnOidVaWdlJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J1pBSScsJ25hbWUnOidaYWlyZSd9XG4gIH0sXG4gICdBSSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FORycsJ25hbWUnOidBbmd1aWxsaXRhJ30sXG4gICAgJzInIDogeydjb2RlJzonQU5HJywnbmFtZSc6J0FuZ3VpbGEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidET0cnLCduYW1lJzonRG9nJ30sXG4gICAgJzQnIDogeydjb2RlJzonTElUJywnbmFtZSc6J0xpdHRsZSBTY3J1Yid9LFxuICAgICc1JyA6IHsnY29kZSc6J1BSSScsJ25hbWUnOidQcmlja2x5IFBlYXInfSxcbiAgICAnNicgOiB7J2NvZGUnOidTQU4nLCduYW1lJzonU2FuZHknfSxcbiAgICAnNycgOiB7J2NvZGUnOidTQ1InLCduYW1lJzonU2NydWInfSxcbiAgICAnOCcgOiB7J2NvZGUnOidTRUEnLCduYW1lJzonU2VhbCd9LFxuICAgICc5JyA6IHsnY29kZSc6J1NPTScsJ25hbWUnOidTb21icmVybyd9XG4gIH0sXG4gICdBUSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FTRycsJ25hbWUnOidTYWludCBHZW9yZ2UnfSxcbiAgICAnMicgOiB7J2NvZGUnOidBU0gnLCduYW1lJzonU2FpbnQgUGhpbGlwJ30sXG4gICAgJzMnIDogeydjb2RlJzonQVNKJywnbmFtZSc6J1NhaW50IEpvaG4nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidBU0wnLCduYW1lJzonU2FpbnQgUGF1bCd9LFxuICAgICc1JyA6IHsnY29kZSc6J0FTTScsJ25hbWUnOidTYWludCBNYXJ5J30sXG4gICAgJzYnIDogeydjb2RlJzonQVNSJywnbmFtZSc6J1NhaW50IFBldGVyJ30sXG4gICAgJzcnIDogeydjb2RlJzonQkFSJywnbmFtZSc6J0JhcmJ1ZGEnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidSRUQnLCduYW1lJzonUmVkb25kYSd9XG4gIH0sXG4gICdBUic6e1xuICAgICcxJyA6IHsnY29kZSc6J0FOJywnbmFtZSc6J0FudGFydGlkYSBlIElzbGFzIGRlbCBBdGxhbnRpY28nfSxcbiAgICAnMicgOiB7J2NvZGUnOidCQScsJ25hbWUnOidCdWVub3MgQWlyZXMnfSxcbiAgICAnMycgOiB7J2NvZGUnOidDQScsJ25hbWUnOidDYXRhbWFyY2EnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidDSCcsJ25hbWUnOidDaGFjbyd9LFxuICAgICc1JyA6IHsnY29kZSc6J0NVJywnbmFtZSc6J0NodWJ1dCd9LFxuICAgICc2JyA6IHsnY29kZSc6J0NPJywnbmFtZSc6J0NvcmRvYmEnfSxcbiAgICAnNycgOiB7J2NvZGUnOidDUicsJ25hbWUnOidDb3JyaWVudGVzJ30sXG4gICAgJzgnIDogeydjb2RlJzonQ0YnLCduYW1lJzonQ2FwaXRhbCBGZWRlcmFsJ30sXG4gICAgJzknIDogeydjb2RlJzonRVInLCduYW1lJzonRW50cmUgUmlvcyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidGTycsJ25hbWUnOidGb3Jtb3NhJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0pVJywnbmFtZSc6J0p1anV5J30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0xQJywnbmFtZSc6J0xhIFBhbXBhJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0xSJywnbmFtZSc6J0xhIFJpb2phJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J01FJywnbmFtZSc6J01lbmRvemEnfSxcbiAgICAnMTUnIDogeydjb2RlJzonTUknLCduYW1lJzonTWlzaW9uZXMnfSxcbiAgICAnMTYnIDogeydjb2RlJzonTkUnLCduYW1lJzonTmV1cXVlbid9LFxuICAgICcxNycgOiB7J2NvZGUnOidSTicsJ25hbWUnOidSaW8gTmVncm8nfSxcbiAgICAnMTgnIDogeydjb2RlJzonU0EnLCduYW1lJzonU2FsdGEnfSxcbiAgICAnMTknIDogeydjb2RlJzonU0onLCduYW1lJzonU2FuIEp1YW4nfSxcbiAgICAnMjAnIDogeydjb2RlJzonU0wnLCduYW1lJzonU2FuIEx1aXMnfSxcbiAgICAnMjEnIDogeydjb2RlJzonU0MnLCduYW1lJzonU2FudGEgQ3J1eid9LFxuICAgICcyMicgOiB7J2NvZGUnOidTRicsJ25hbWUnOidTYW50YSBGZSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidTRCcsJ25hbWUnOidTYW50aWFnbyBkZWwgRXN0ZXJvJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J1RGJywnbmFtZSc6J1RpZXJyYSBkZWwgRnVlZ28nfSxcbiAgICAnMjUnIDogeydjb2RlJzonVFUnLCduYW1lJzonVHVjdW1hbid9XG4gIH0sXG4gICdBTSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FHVCcsJ25hbWUnOidBcmFnYXRzb3RuJ30sXG4gICAgJzInIDogeydjb2RlJzonQVJSJywnbmFtZSc6J0FyYXJhdCd9LFxuICAgICczJyA6IHsnY29kZSc6J0FSTScsJ25hbWUnOidBcm1hdmlyJ30sXG4gICAgJzQnIDogeydjb2RlJzonR0VHJywnbmFtZSc6J0dlZ2hhcmsgXFwndW5pa1xcJyd9LFxuICAgICc1JyA6IHsnY29kZSc6J0tPVCcsJ25hbWUnOidLb3RheWtcXCcnfSxcbiAgICAnNicgOiB7J2NvZGUnOidMT1InLCduYW1lJzonTG9ycmknfSxcbiAgICAnNycgOiB7J2NvZGUnOidTSEknLCduYW1lJzonU2hpcmFrJ30sXG4gICAgJzgnIDogeydjb2RlJzonU1lVJywnbmFtZSc6J1N5dW5pa1xcJyd9LFxuICAgICc5JyA6IHsnY29kZSc6J1RBVicsJ25hbWUnOidUYXZ1c2gnfSxcbiAgICAnMTAnIDogeydjb2RlJzonVkFZJywnbmFtZSc6J1ZheW90c1xcJyBEem9yJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1lFUicsJ25hbWUnOidZZXJldmFuJ31cbiAgfSxcbiAgJ0FXJzp7XG4gICAgJzEnIDogeydjb2RlJzonQVJVJywnbmFtZSc6J0FydWJhJ30sXG4gICAgJzInIDogeydjb2RlJzonRFJVJywnbmFtZSc6J0RydWlmIEJlYWNoJ30sXG4gICAgJzMnIDogeydjb2RlJzonTUFOJywnbmFtZSc6J01hbmNoZWJvIEJlYWNoJ30sXG4gICAgJzQnIDogeydjb2RlJzonTk9PJywnbmFtZSc6J05vb3JkJ30sXG4gICAgJzUnIDogeydjb2RlJzonT1JBJywnbmFtZSc6J09yYW5qZXN0YWQnfSxcbiAgICAnNicgOiB7J2NvZGUnOidQQUwnLCduYW1lJzonUGFsbSBCZWFjaCd9LFxuICAgICc3JyA6IHsnY29kZSc6J1JPTycsJ25hbWUnOidSb29pIFRob21hcyd9LFxuICAgICc4JyA6IHsnY29kZSc6J1NJTicsJ25hbWUnOidTaW50IE5pY29sYWFzJ30sXG4gICAgJzknIDogeydjb2RlJzonU0lOJywnbmFtZSc6J1NpbnQgTmljb2xhcyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidXQVknLCduYW1lJzonV2F5YWNhJ31cbiAgfSxcbiAgJ0FVJzp7XG4gICAgJzEnIDogeydjb2RlJzonQUNUJywnbmFtZSc6J0F1c3RyYWxpYW4gQ2FwaXRhbCBUZXJyaXRvcnknfSxcbiAgICAnMicgOiB7J2NvZGUnOidOU1cnLCduYW1lJzonTmV3IFNvdXRoIFdhbGVzJ30sXG4gICAgJzMnIDogeydjb2RlJzonTlQnLCduYW1lJzonTm9ydGhlcm4gVGVycml0b3J5J30sXG4gICAgJzQnIDogeydjb2RlJzonUUxEJywnbmFtZSc6J1F1ZWVuc2xhbmQnfSxcbiAgICAnNScgOiB7J2NvZGUnOidTQScsJ25hbWUnOidTb3V0aCBBdXN0cmFsaWEnfSxcbiAgICAnNicgOiB7J2NvZGUnOidUQVMnLCduYW1lJzonVGFzbWFuaWEnfSxcbiAgICAnNycgOiB7J2NvZGUnOidWSUMnLCduYW1lJzonVmljdG9yaWEnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidXQScsJ25hbWUnOidXZXN0ZXJuIEF1c3RyYWxpYSd9XG4gIH0sXG4gICdBVCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0JVUicsJ25hbWUnOidCdXJnZW5sYW5kJ30sXG4gICAgJzInIDogeydjb2RlJzonS0FSJywnbmFtZSc6J0tybnRlbid9LFxuICAgICczJyA6IHsnY29kZSc6J05PUycsJ25hbWUnOidOaWVkZXLDtmVzdGVycmVpY2gnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidPT1MnLCduYW1lJzonT2JlcsO2ZXN0ZXJyZWljaCd9LFxuICAgICc1JyA6IHsnY29kZSc6J1NBTCcsJ25hbWUnOidTYWx6YnVyZyd9LFxuICAgICc2JyA6IHsnY29kZSc6J1NURScsJ25hbWUnOidTdGVpZXJtYXJrJ30sXG4gICAgJzcnIDogeydjb2RlJzonVElSJywnbmFtZSc6J1Rpcm9sJ30sXG4gICAgJzgnIDogeydjb2RlJzonVk9SJywnbmFtZSc6J1ZvcmFybGJlcmcnfSxcbiAgICAnOScgOiB7J2NvZGUnOidXSUUnLCduYW1lJzonV2llbid9XG4gIH0sXG4gICdBWic6e1xuICAgICcxJyA6IHsnY29kZSc6J0FCJywnbmFtZSc6J0FsaSBCYXlyYW1saSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FCUycsJ25hbWUnOidBYnNlcm9uJ30sXG4gICAgJzMnIDogeydjb2RlJzonQUdDJywnbmFtZSc6J0FnY2FiQWRpJ30sXG4gICAgJzQnIDogeydjb2RlJzonQUdNJywnbmFtZSc6J0FnZGFtJ30sXG4gICAgJzUnIDogeydjb2RlJzonQUdTJywnbmFtZSc6J0FnZGFzJ30sXG4gICAgJzYnIDogeydjb2RlJzonQUdBJywnbmFtZSc6J0Fnc3RhZmEnfSxcbiAgICAnNycgOiB7J2NvZGUnOidBR1UnLCduYW1lJzonQWdzdSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0FTVCcsJ25hbWUnOidBc3RhcmEnfSxcbiAgICAnOScgOiB7J2NvZGUnOidCQScsJ25hbWUnOidCYWtpJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0JBQicsJ25hbWUnOidCYWJBayd9LFxuICAgICcxMScgOiB7J2NvZGUnOidCQUwnLCduYW1lJzonQmFsYWtBbid9LFxuICAgICcxMicgOiB7J2NvZGUnOidCQVInLCduYW1lJzonQkFyZEEnfSxcbiAgICAnMTMnIDogeydjb2RlJzonQkVZJywnbmFtZSc6J0JleWxhcWFuJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0JJTCcsJ25hbWUnOidCaWxhc3V2YXInfSxcbiAgICAnMTUnIDogeydjb2RlJzonQ0FCJywnbmFtZSc6J0NhYnJheWlsJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J0NBTCcsJ25hbWUnOidDYWxpbGFiYWInfSxcbiAgICAnMTcnIDogeydjb2RlJzonQ1VMJywnbmFtZSc6J0N1bGZhJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J0RBUycsJ25hbWUnOidEYXNrYXNhbid9LFxuICAgICcxOScgOiB7J2NvZGUnOidEQVYnLCduYW1lJzonRGF2YWNpJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J0ZVWicsJ25hbWUnOidGdXp1bGknfSxcbiAgICAnMjEnIDogeydjb2RlJzonR0EnLCduYW1lJzonR2FuY2EnfSxcbiAgICAnMjInIDogeydjb2RlJzonR0FEJywnbmFtZSc6J0dhZGFiYXknfSxcbiAgICAnMjMnIDogeydjb2RlJzonR09SJywnbmFtZSc6J0dvcmFuYm95J30sXG4gICAgJzI0JyA6IHsnY29kZSc6J0dPWScsJ25hbWUnOidHb3ljYXknfSxcbiAgICAnMjUnIDogeydjb2RlJzonSEFDJywnbmFtZSc6J0hhY2lxYWJ1bCd9LFxuICAgICcyNicgOiB7J2NvZGUnOidJTUknLCduYW1lJzonSW1pc2xpJ30sXG4gICAgJzI3JyA6IHsnY29kZSc6J0lTTScsJ25hbWUnOidJc21heWlsbGknfSxcbiAgICAnMjgnIDogeydjb2RlJzonS0FMJywnbmFtZSc6J0thbGJhY2FyJ30sXG4gICAgJzI5JyA6IHsnY29kZSc6J0tVUicsJ25hbWUnOidLdXJkYW1pcid9LFxuICAgICczMCcgOiB7J2NvZGUnOidMQScsJ25hbWUnOidMYW5rYXJhbid9LFxuICAgICczMScgOiB7J2NvZGUnOidMQUMnLCduYW1lJzonTGFjaW4nfSxcbiAgICAnMzInIDogeydjb2RlJzonTEFOJywnbmFtZSc6J0xhbmthcmFuJ30sXG4gICAgJzMzJyA6IHsnY29kZSc6J0xFUicsJ25hbWUnOidMZXJpayd9LFxuICAgICczNCcgOiB7J2NvZGUnOidNQVMnLCduYW1lJzonTWFzYWxsaSd9LFxuICAgICczNScgOiB7J2NvZGUnOidNSScsJ25hbWUnOidNaW5nYWNldmlyJ30sXG4gICAgJzM2JyA6IHsnY29kZSc6J05BJywnbmFtZSc6J05hZnRhbGFuJ30sXG4gICAgJzM3JyA6IHsnY29kZSc6J05YJywnbmFtZSc6J05heGNpdmFuJ30sXG4gICAgJzM4JyA6IHsnY29kZSc6J05FRicsJ25hbWUnOidOZWZ0Y2FsYSd9LFxuICAgICczOScgOiB7J2NvZGUnOidPR1UnLCduYW1lJzonT2d1eid9LFxuICAgICc0MCcgOiB7J2NvZGUnOidPUkQnLCduYW1lJzonT3JkdWJhZCd9LFxuICAgICc0MScgOiB7J2NvZGUnOidRQUInLCduYW1lJzonUWFiYWxhJ30sXG4gICAgJzQyJyA6IHsnY29kZSc6J1FBWCcsJ25hbWUnOidRYXgnfSxcbiAgICAnNDMnIDogeydjb2RlJzonUUFaJywnbmFtZSc6J1FhemF4J30sXG4gICAgJzQ0JyA6IHsnY29kZSc6J1FPQicsJ25hbWUnOidRb2J1c3Rhbid9LFxuICAgICc0NScgOiB7J2NvZGUnOidRQkEnLCduYW1lJzonUXViYSd9LFxuICAgICc0NicgOiB7J2NvZGUnOidRQkknLCduYW1lJzonUXViYWRsaSd9LFxuICAgICc0NycgOiB7J2NvZGUnOidRVVMnLCduYW1lJzonUXVzYXInfSxcbiAgICAnNDgnIDogeydjb2RlJzonU0EnLCduYW1lJzonU2FraSd9LFxuICAgICc0OScgOiB7J2NvZGUnOidTQVQnLCduYW1lJzonU2FhdGxpJ30sXG4gICAgJzUwJyA6IHsnY29kZSc6J1NBQicsJ25hbWUnOidTYWJpcmFiYWQnfSxcbiAgICAnNTEnIDogeydjb2RlJzonU0FEJywnbmFtZSc6J1NhZGFyYWsnfSxcbiAgICAnNTInIDogeydjb2RlJzonU0FIJywnbmFtZSc6J1NhaGJ1eid9LFxuICAgICc1MycgOiB7J2NvZGUnOidTQUsnLCduYW1lJzonU2FraSd9LFxuICAgICc1NCcgOiB7J2NvZGUnOidTQUwnLCduYW1lJzonU2FseWFuJ30sXG4gICAgJzU1JyA6IHsnY29kZSc6J1NNJywnbmFtZSc6J1N1bXFheWl0J30sXG4gICAgJzU2JyA6IHsnY29kZSc6J1NNSScsJ25hbWUnOidTYW1heGknfSxcbiAgICAnNTcnIDogeydjb2RlJzonU0tSJywnbmFtZSc6J1NhbWtpcid9LFxuICAgICc1OCcgOiB7J2NvZGUnOidTTVgnLCduYW1lJzonU2FtdXgnfSxcbiAgICAnNTknIDogeydjb2RlJzonU0FSJywnbmFtZSc6J1NhcnVyJ30sXG4gICAgJzYwJyA6IHsnY29kZSc6J1NJWScsJ25hbWUnOidTaXlhemFuJ30sXG4gICAgJzYxJyA6IHsnY29kZSc6J1NTJywnbmFtZSc6J1N1c2EnfSxcbiAgICAnNjInIDogeydjb2RlJzonU1VTJywnbmFtZSc6J1N1c2EnfSxcbiAgICAnNjMnIDogeydjb2RlJzonVEFSJywnbmFtZSc6J1RhcnRhcid9LFxuICAgICc2NCcgOiB7J2NvZGUnOidUT1YnLCduYW1lJzonVG92dXonfSxcbiAgICAnNjUnIDogeydjb2RlJzonVUNBJywnbmFtZSc6J1VjYXInfSxcbiAgICAnNjYnIDogeydjb2RlJzonWEEnLCduYW1lJzonWGFua2FuZGknfSxcbiAgICAnNjcnIDogeydjb2RlJzonWEFDJywnbmFtZSc6J1hhY21heid9LFxuICAgICc2OCcgOiB7J2NvZGUnOidYQU4nLCduYW1lJzonWGFubGFyJ30sXG4gICAgJzY5JyA6IHsnY29kZSc6J1hJWicsJ25hbWUnOidYaXppJ30sXG4gICAgJzcwJyA6IHsnY29kZSc6J1hDSScsJ25hbWUnOidYb2NhbGknfSxcbiAgICAnNzEnIDogeydjb2RlJzonWFZEJywnbmFtZSc6J1hvY2F2YW5kJ30sXG4gICAgJzcyJyA6IHsnY29kZSc6J1lBUicsJ25hbWUnOidZYXJkaW1saSd9LFxuICAgICc3MycgOiB7J2NvZGUnOidZRVYnLCduYW1lJzonWWV2bGF4J30sXG4gICAgJzc0JyA6IHsnY29kZSc6J1pBTicsJ25hbWUnOidaYW5naWxhbid9LFxuICAgICc3NScgOiB7J2NvZGUnOidaQVEnLCduYW1lJzonWmFxYXRhbGEnfSxcbiAgICAnNzYnIDogeydjb2RlJzonWkFSJywnbmFtZSc6J1phcmRhYid9XG4gIH0sXG4gICdCUyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FDSycsJ25hbWUnOidBY2tsaW5zJ30sXG4gICAgJzInIDogeydjb2RlJzonQkVSJywnbmFtZSc6J0JlcnJ5IElzbGFuZHMnfSxcbiAgICAnMycgOiB7J2NvZGUnOidCSU0nLCduYW1lJzonQmltaW5pJ30sXG4gICAgJzQnIDogeydjb2RlJzonQkxLJywnbmFtZSc6J0JsYWNrIFBvaW50J30sXG4gICAgJzUnIDogeydjb2RlJzonQ0FUJywnbmFtZSc6J0NhdCBJc2xhbmQnfSxcbiAgICAnNicgOiB7J2NvZGUnOidDQUInLCduYW1lJzonQ2VudHJhbCBBYmFjbyd9LFxuICAgICc3JyA6IHsnY29kZSc6J0NBTicsJ25hbWUnOidDZW50cmFsIEFuZHJvcyd9LFxuICAgICc4JyA6IHsnY29kZSc6J0NFTCcsJ25hbWUnOidDZW50cmFsIEVsZXV0aGVyYSd9LFxuICAgICc5JyA6IHsnY29kZSc6J0ZSRScsJ25hbWUnOidDaXR5IG9mIEZyZWVwb3J0J30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0NSTycsJ25hbWUnOidDcm9va2VkIElzbGFuZCd9LFxuICAgICcxMScgOiB7J2NvZGUnOidFR0InLCduYW1lJzonRWFzdCBHcmFuZCBCYWhhbWEnfSxcbiAgICAnMTInIDogeydjb2RlJzonRVhVJywnbmFtZSc6J0V4dW1hJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0dSRCcsJ25hbWUnOidHcmFuZCBDYXknfSxcbiAgICAnMTQnIDogeydjb2RlJzonSEFSJywnbmFtZSc6J0hhcmJvdXIgSXNsYW5kJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0hPUCcsJ25hbWUnOidIb3BlIFRvd24nfSxcbiAgICAnMTYnIDogeydjb2RlJzonSU5BJywnbmFtZSc6J0luYWd1YSd9LFxuICAgICcxNycgOiB7J2NvZGUnOidMTkcnLCduYW1lJzonTG9uZyBJc2xhbmQnfSxcbiAgICAnMTgnIDogeydjb2RlJzonTUFOJywnbmFtZSc6J01hbmdyb3ZlIENheSd9LFxuICAgICcxOScgOiB7J2NvZGUnOidNQVknLCduYW1lJzonTWF5YWd1YW5hJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J01PTycsJ25hbWUnOidNb29yZVxcJ3MgSXNsYW5kJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J05BQicsJ25hbWUnOidOb3J0aCBBYmFjbyd9LFxuICAgICcyMicgOiB7J2NvZGUnOidOQU4nLCduYW1lJzonTm9ydGggQW5kcm9zJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J05FTCcsJ25hbWUnOidOb3J0aCBFbGV1dGhlcmEnfSxcbiAgICAnMjQnIDogeydjb2RlJzonUkFHJywnbmFtZSc6J1JhZ2dlZCBJc2xhbmQnfSxcbiAgICAnMjUnIDogeydjb2RlJzonUlVNJywnbmFtZSc6J1J1bSBDYXknfSxcbiAgICAnMjYnIDogeydjb2RlJzonU0FMJywnbmFtZSc6J1NhbiBTYWx2YWRvcid9LFxuICAgICcyNycgOiB7J2NvZGUnOidTQUInLCduYW1lJzonU291dGggQWJhY28nfSxcbiAgICAnMjgnIDogeydjb2RlJzonU0FOJywnbmFtZSc6J1NvdXRoIEFuZHJvcyd9LFxuICAgICcyOScgOiB7J2NvZGUnOidTRUwnLCduYW1lJzonU291dGggRWxldXRoZXJhJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J1NXRScsJ25hbWUnOidTcGFuaXNoIFdlbGxzJ30sXG4gICAgJzMxJyA6IHsnY29kZSc6J1dHQicsJ25hbWUnOidXZXN0IEdyYW5kIEJhaGFtYSd9XG4gIH0sXG4gICdCSCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0NBUCcsJ25hbWUnOidDYXBpdGFsJ30sXG4gICAgJzInIDogeydjb2RlJzonQ0VOJywnbmFtZSc6J0NlbnRyYWwnfSxcbiAgICAnMycgOiB7J2NvZGUnOidNVUgnLCduYW1lJzonTXVoYXJyYXEnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidOT1InLCduYW1lJzonTm9ydGhlcm4nfSxcbiAgICAnNScgOiB7J2NvZGUnOidTT1UnLCduYW1lJzonU291dGhlcm4nfVxuICB9LFxuICAnQkQnOntcbiAgICAnMScgOiB7J2NvZGUnOidCQVInLCduYW1lJzonQmFyaXNhbCd9LFxuICAgICcyJyA6IHsnY29kZSc6J0NISScsJ25hbWUnOidDaGl0dGFnb25nJ30sXG4gICAgJzMnIDogeydjb2RlJzonREhBJywnbmFtZSc6J0RoYWthJ30sXG4gICAgJzQnIDogeydjb2RlJzonS0hVJywnbmFtZSc6J0todWxuYSd9LFxuICAgICc1JyA6IHsnY29kZSc6J1JBSicsJ25hbWUnOidSYWpzaGFoaSd9LFxuICAgICc2JyA6IHsnY29kZSc6J1NZTCcsJ25hbWUnOidTeWxoZXQnfVxuICB9LFxuICAnQkInOntcbiAgICAnMScgOiB7J2NvZGUnOidDQycsJ25hbWUnOidDaHJpc3QgQ2h1cmNoJ30sXG4gICAgJzInIDogeydjb2RlJzonQU5EJywnbmFtZSc6J1NhaW50IEFuZHJldyd9LFxuICAgICczJyA6IHsnY29kZSc6J0dFTycsJ25hbWUnOidTYWludCBHZW9yZ2UnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidKQU0nLCduYW1lJzonU2FpbnQgSmFtZXMnfSxcbiAgICAnNScgOiB7J2NvZGUnOidKT0gnLCduYW1lJzonU2FpbnQgSm9obid9LFxuICAgICc2JyA6IHsnY29kZSc6J0pPUycsJ25hbWUnOidTYWludCBKb3NlcGgnfSxcbiAgICAnNycgOiB7J2NvZGUnOidMVUMnLCduYW1lJzonU2FpbnQgTHVjeSd9LFxuICAgICc4JyA6IHsnY29kZSc6J01JQycsJ25hbWUnOidTYWludCBNaWNoYWVsJ30sXG4gICAgJzknIDogeydjb2RlJzonUEVUJywnbmFtZSc6J1NhaW50IFBldGVyJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1BISScsJ25hbWUnOidTYWludCBQaGlsaXAnfSxcbiAgICAnMTEnIDogeydjb2RlJzonVEhPJywnbmFtZSc6J1NhaW50IFRob21hcyd9XG4gIH0sXG4gICdCWSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0JSJywnbmFtZSc6J0JyZXN0c2theWEgKEJyZXN0KSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0hPJywnbmFtZSc6J0hvbXllbFxcJ3NrYXlhIChIb215ZWxcXCcpJ30sXG4gICAgJzMnIDogeydjb2RlJzonSE0nLCduYW1lJzonSG9yYWQgTWluc2snfSxcbiAgICAnNCcgOiB7J2NvZGUnOidIUicsJ25hbWUnOidIcm9kenllbnNrYXlhIChIcm9kbmEpJ30sXG4gICAgJzUnIDogeydjb2RlJzonTUEnLCduYW1lJzonTWFoaWx5b3dza2F5YSAoTWFoaWx5b3cpJ30sXG4gICAgJzYnIDogeydjb2RlJzonTUknLCduYW1lJzonTWluc2theWEnfSxcbiAgICAnNycgOiB7J2NvZGUnOidWSScsJ25hbWUnOidWaXRzeWVic2theWEgKFZpdHN5ZWJzayknfVxuICB9LFxuICAnQkUnOntcbiAgICAnMScgOiB7J2NvZGUnOidWQU4nLCduYW1lJzonQW50d2VycGVuJ30sXG4gICAgJzInIDogeydjb2RlJzonV0JSJywnbmFtZSc6J0JyYWJhbnQgV2FsbG9uJ30sXG4gICAgJzMnIDogeydjb2RlJzonV0hUJywnbmFtZSc6J0hhaW5hdXQnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidXTEcnLCduYW1lJzonTGllZ2UnfSxcbiAgICAnNScgOiB7J2NvZGUnOidWTEknLCduYW1lJzonTGltYnVyZyd9LFxuICAgICc2JyA6IHsnY29kZSc6J1dMWCcsJ25hbWUnOidMdXhlbWJvdXJnJ30sXG4gICAgJzcnIDogeydjb2RlJzonV05BJywnbmFtZSc6J05hbXVyJ30sXG4gICAgJzgnIDogeydjb2RlJzonVk9WJywnbmFtZSc6J09vc3QtVmxhYW5kZXJlbid9LFxuICAgICc5JyA6IHsnY29kZSc6J1ZCUicsJ25hbWUnOidWbGFhbXMgQnJhYmFudCd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidWV1YnLCduYW1lJzonV2VzdC1WbGFhbmRlcmVuJ31cbiAgfSxcbiAgJ0JaJzp7XG4gICAgJzEnIDogeydjb2RlJzonQlonLCduYW1lJzonQmVsaXplJ30sXG4gICAgJzInIDogeydjb2RlJzonQ1knLCduYW1lJzonQ2F5byd9LFxuICAgICczJyA6IHsnY29kZSc6J0NSJywnbmFtZSc6J0Nvcm96YWwnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidPVycsJ25hbWUnOidPcmFuZ2UgV2Fsayd9LFxuICAgICc1JyA6IHsnY29kZSc6J1NDJywnbmFtZSc6J1N0YW5uIENyZWVrJ30sXG4gICAgJzYnIDogeydjb2RlJzonVE8nLCduYW1lJzonVG9sZWRvJ31cbiAgfSxcbiAgJ0JKJzp7XG4gICAgJzEnIDogeydjb2RlJzonQUwnLCduYW1lJzonQWxpYm9yaSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FLJywnbmFtZSc6J0F0YWtvcmEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidBUScsJ25hbWUnOidBdGxhbnRpcXVlJ30sXG4gICAgJzQnIDogeydjb2RlJzonQk8nLCduYW1lJzonQm9yZ291J30sXG4gICAgJzUnIDogeydjb2RlJzonQ08nLCduYW1lJzonQ29sbGluZXMnfSxcbiAgICAnNicgOiB7J2NvZGUnOidETycsJ25hbWUnOidEb25nYSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0tPJywnbmFtZSc6J0tvdWZmbyd9LFxuICAgICc4JyA6IHsnY29kZSc6J0xJJywnbmFtZSc6J0xpdHRvcmFsJ30sXG4gICAgJzknIDogeydjb2RlJzonTU8nLCduYW1lJzonTW9ubyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidPVScsJ25hbWUnOidPdWVtZSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidQTCcsJ25hbWUnOidQbGF0ZWF1J30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1pPJywnbmFtZSc6J1pvdSd9XG4gIH0sXG4gICdCTSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0RTJywnbmFtZSc6J0Rldm9uc2hpcmUnfSxcbiAgICAnMicgOiB7J2NvZGUnOidIQycsJ25hbWUnOidIYW1pbHRvbiBDaXR5J30sXG4gICAgJzMnIDogeydjb2RlJzonSEEnLCduYW1lJzonSGFtaWx0b24nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidQRycsJ25hbWUnOidQYWdldCd9LFxuICAgICc1JyA6IHsnY29kZSc6J1BCJywnbmFtZSc6J1BlbWJyb2tlJ30sXG4gICAgJzYnIDogeydjb2RlJzonR0MnLCduYW1lJzonU2FpbnQgR2VvcmdlIENpdHknfSxcbiAgICAnNycgOiB7J2NvZGUnOidTRycsJ25hbWUnOidTYWludCBHZW9yZ2VcXCdzJ30sXG4gICAgJzgnIDogeydjb2RlJzonU0EnLCduYW1lJzonU2FuZHlzJ30sXG4gICAgJzknIDogeydjb2RlJzonU00nLCduYW1lJzonU21pdGhcXCdzJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1NIJywnbmFtZSc6J1NvdXRoYW1wdG9uJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1dBJywnbmFtZSc6J1dhcndpY2snfVxuICB9LFxuICAnQlQnOntcbiAgICAnMScgOiB7J2NvZGUnOidCVU0nLCduYW1lJzonQnVtdGhhbmcnfSxcbiAgICAnMicgOiB7J2NvZGUnOidDSFUnLCduYW1lJzonQ2h1a2hhJ30sXG4gICAgJzMnIDogeydjb2RlJzonREFHJywnbmFtZSc6J0RhZ2FuYSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0dBUycsJ25hbWUnOidHYXNhJ30sXG4gICAgJzUnIDogeydjb2RlJzonSEFBJywnbmFtZSc6J0hhYSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0xIVScsJ25hbWUnOidMaHVudHNlJ30sXG4gICAgJzcnIDogeydjb2RlJzonTU9OJywnbmFtZSc6J01vbmdhcid9LFxuICAgICc4JyA6IHsnY29kZSc6J1BBUicsJ25hbWUnOidQYXJvJ30sXG4gICAgJzknIDogeydjb2RlJzonUEVNJywnbmFtZSc6J1BlbWFnYXRzaGVsJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1BVTicsJ25hbWUnOidQdW5ha2hhJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1NKTycsJ25hbWUnOidTYW1kcnVwIEpvbmdraGFyJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1NBVCcsJ25hbWUnOidTYW10c2UnfSxcbiAgICAnMTMnIDogeydjb2RlJzonU0FSJywnbmFtZSc6J1NhcnBhbmcnfSxcbiAgICAnMTQnIDogeydjb2RlJzonVEhJJywnbmFtZSc6J1RoaW1waHUnfSxcbiAgICAnMTUnIDogeydjb2RlJzonVFJHJywnbmFtZSc6J1RyYXNoaWdhbmcnfSxcbiAgICAnMTYnIDogeydjb2RlJzonVFJZJywnbmFtZSc6J1RyYXNoaXlhbmdzdGUnfSxcbiAgICAnMTcnIDogeydjb2RlJzonVFJPJywnbmFtZSc6J1Ryb25nc2EnfSxcbiAgICAnMTgnIDogeydjb2RlJzonVFNJJywnbmFtZSc6J1RzaXJhbmcnfSxcbiAgICAnMTknIDogeydjb2RlJzonV1BIJywnbmFtZSc6J1dhbmdkdWUgUGhvZHJhbmcnfSxcbiAgICAnMjAnIDogeydjb2RlJzonWkhFJywnbmFtZSc6J1poZW1nYW5nJ31cbiAgfSxcbiAgJ0JPJzp7XG4gICAgJzEnIDogeydjb2RlJzonQkVOJywnbmFtZSc6J0JlbmknfSxcbiAgICAnMicgOiB7J2NvZGUnOidDSFUnLCduYW1lJzonQ2h1cXVpc2FjYSd9LFxuICAgICczJyA6IHsnY29kZSc6J0NPQycsJ25hbWUnOidDb2NoYWJhbWJhJ30sXG4gICAgJzQnIDogeydjb2RlJzonTFBaJywnbmFtZSc6J0xhIFBheid9LFxuICAgICc1JyA6IHsnY29kZSc6J09SVScsJ25hbWUnOidPcnVybyd9LFxuICAgICc2JyA6IHsnY29kZSc6J1BBTicsJ25hbWUnOidQYW5kbyd9LFxuICAgICc3JyA6IHsnY29kZSc6J1BPVCcsJ25hbWUnOidQb3Rvc2knfSxcbiAgICAnOCcgOiB7J2NvZGUnOidTQ1onLCduYW1lJzonU2FudGEgQ3J1eid9LFxuICAgICc5JyA6IHsnY29kZSc6J1RBUicsJ25hbWUnOidUYXJpamEnfVxuICB9LFxuICAnQkEnOntcbiAgICAnMScgOiB7J2NvZGUnOidCUk8nLCduYW1lJzonQnJja28gZGlzdHJpY3QnfSxcbiAgICAnMicgOiB7J2NvZGUnOidGQlAnLCduYW1lJzonQm9zYW5za29wb2RyaW5qc2tpIEthbnRvbid9LFxuICAgICczJyA6IHsnY29kZSc6J0ZITicsJ25hbWUnOidIZXJjZWdvdmFja28tbmVyZXR2YW5za2kgS2FudG9uJ30sXG4gICAgJzQnIDogeydjb2RlJzonRlBPJywnbmFtZSc6J1Bvc2F2c2tpIEthbnRvbid9LFxuICAgICc1JyA6IHsnY29kZSc6J0ZTQScsJ25hbWUnOidLYW50b24gU2FyYWpldm8nfSxcbiAgICAnNicgOiB7J2NvZGUnOidGU0InLCduYW1lJzonU3JlZG5qZWJvc2Fuc2tpIEthbnRvbid9LFxuICAgICc3JyA6IHsnY29kZSc6J0ZUVScsJ25hbWUnOidUdXpsYW5za2kgS2FudG9uJ30sXG4gICAgJzgnIDogeydjb2RlJzonRlVTJywnbmFtZSc6J1Vuc2tvLVNhbnNraSBLYW50b24nfSxcbiAgICAnOScgOiB7J2NvZGUnOidGWkEnLCduYW1lJzonWmFwYWRub2Jvc2Fuc2thJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0ZaRScsJ25hbWUnOidaZW5pY2tvLURvYm9qc2tpIEthbnRvbid9LFxuICAgICcxMScgOiB7J2NvZGUnOidGWkgnLCduYW1lJzonWmFwYWRub2hlcmNlZ292YWNrYSBadXBhbmlqYSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidTQkknLCduYW1lJzonQmlqZWxqaW5hJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1NCTCcsJ25hbWUnOidCYW5qYSBMdWthJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J1NETycsJ25hbWUnOidEb2Jvaid9LFxuICAgICcxNScgOiB7J2NvZGUnOidTRk8nLCduYW1lJzonRm9jYSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidTU1InLCduYW1lJzonU2FyYWpldm8tUm9tYW5pamEgb3IgU29rb2xhYyd9LFxuICAgICcxNycgOiB7J2NvZGUnOidTVFInLCduYW1lJzonVHJlYmluamUnfSxcbiAgICAnMTgnIDogeydjb2RlJzonU1ZMJywnbmFtZSc6J1ZsYXNlbmljYSd9XG4gIH0sXG4gICdCVyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0NFJywnbmFtZSc6J0NlbnRyYWwnfSxcbiAgICAnMicgOiB7J2NvZGUnOidHSCcsJ25hbWUnOidHaGFuemknfSxcbiAgICAnMycgOiB7J2NvZGUnOidLRCcsJ25hbWUnOidLZ2FsYWdhZGknfSxcbiAgICAnNCcgOiB7J2NvZGUnOidLVCcsJ25hbWUnOidLZ2F0bGVuZyd9LFxuICAgICc1JyA6IHsnY29kZSc6J0tXJywnbmFtZSc6J0t3ZW5lbmcnfSxcbiAgICAnNicgOiB7J2NvZGUnOidORycsJ25hbWUnOidOZ2FtaWxhbmQnfSxcbiAgICAnNycgOiB7J2NvZGUnOidORScsJ25hbWUnOidOb3J0aCBFYXN0J30sXG4gICAgJzgnIDogeydjb2RlJzonTlcnLCduYW1lJzonTm9ydGggV2VzdCd9LFxuICAgICc5JyA6IHsnY29kZSc6J1NFJywnbmFtZSc6J1NvdXRoIEVhc3QnfSxcbiAgICAnMTAnIDogeydjb2RlJzonU08nLCduYW1lJzonU291dGhlcm4nfVxuICB9LFxuICAnQlInOntcbiAgICAnMScgOiB7J2NvZGUnOidBQycsJ25hbWUnOidBY3JlJ30sXG4gICAgJzInIDogeydjb2RlJzonQUwnLCduYW1lJzonQWxhZ29hcyd9LFxuICAgICczJyA6IHsnY29kZSc6J0FQJywnbmFtZSc6J0FtYXBhJ30sXG4gICAgJzQnIDogeydjb2RlJzonQU0nLCduYW1lJzonQW1hem9uYXMnfSxcbiAgICAnNScgOiB7J2NvZGUnOidCQScsJ25hbWUnOidCYWhpYSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0NFJywnbmFtZSc6J0NlYXJhJ30sXG4gICAgJzcnIDogeydjb2RlJzonREYnLCduYW1lJzonRGlzdHJpdG8gRmVkZXJhbCd9LFxuICAgICc4JyA6IHsnY29kZSc6J0VTJywnbmFtZSc6J0VzcGlyaXRvIFNhbnRvJ30sXG4gICAgJzknIDogeydjb2RlJzonR08nLCduYW1lJzonR29pYXMnfSxcbiAgICAnMTAnIDogeydjb2RlJzonTUEnLCduYW1lJzonTWFyYW5oYW8nfSxcbiAgICAnMTEnIDogeydjb2RlJzonTVQnLCduYW1lJzonTWF0byBHcm9zc28nfSxcbiAgICAnMTInIDogeydjb2RlJzonTVMnLCduYW1lJzonTWF0byBHcm9zc28gZG8gU3VsJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J01HJywnbmFtZSc6J01pbmFzIEdlcmFpcyd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidQQScsJ25hbWUnOidQYXJhJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J1BCJywnbmFtZSc6J1BhcmFpYmEnfSxcbiAgICAnMTYnIDogeydjb2RlJzonUFInLCduYW1lJzonUGFyYW5hJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J1BFJywnbmFtZSc6J1Blcm5hbWJ1Y28nfSxcbiAgICAnMTgnIDogeydjb2RlJzonUEknLCduYW1lJzonUGlhdWknfSxcbiAgICAnMTknIDogeydjb2RlJzonUkonLCduYW1lJzonUmlvIGRlIEphbmVpcm8nfSxcbiAgICAnMjAnIDogeydjb2RlJzonUk4nLCduYW1lJzonUmlvIEdyYW5kZSBkbyBOb3J0ZSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidSUycsJ25hbWUnOidSaW8gR3JhbmRlIGRvIFN1bCd9LFxuICAgICcyMicgOiB7J2NvZGUnOidSTycsJ25hbWUnOidSb25kb25pYSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidSUicsJ25hbWUnOidSb3JhaW1hJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J1NDJywnbmFtZSc6J1NhbnRhIENhdGFyaW5hJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J1NQJywnbmFtZSc6J1NhbyBQYXVsbyd9LFxuICAgICcyNicgOiB7J2NvZGUnOidTRScsJ25hbWUnOidTZXJnaXBlJ30sXG4gICAgJzI3JyA6IHsnY29kZSc6J1RPJywnbmFtZSc6J1RvY2FudGlucyd9XG4gIH0sXG4gICdJTyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0RHJywnbmFtZSc6J0RpZWdvIEdhcmNpYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0RJJywnbmFtZSc6J0RhbmdlciBJc2xhbmQnfSxcbiAgICAnMycgOiB7J2NvZGUnOidFQScsJ25hbWUnOidFYWdsZSBJc2xhbmRzJ30sXG4gICAgJzQnIDogeydjb2RlJzonRUcnLCduYW1lJzonRWdtb250IElzbGFuZHMnfSxcbiAgICAnNScgOiB7J2NvZGUnOidOSScsJ25hbWUnOidOZWxzb25zIElzbGFuZCd9LFxuICAgICc2JyA6IHsnY29kZSc6J1BCJywnbmFtZSc6J1Blcm9zIEJhbmhvcyd9LFxuICAgICc3JyA6IHsnY29kZSc6J1NJJywnbmFtZSc6J1NhbG9tb24gSXNsYW5kcyd9LFxuICAgICc4JyA6IHsnY29kZSc6J1RCJywnbmFtZSc6J1RocmVlIEJyb3RoZXJzJ31cbiAgfSxcbiAgJ0JOJzp7XG4gICAgJzEnIDogeydjb2RlJzonQkVMJywnbmFtZSc6J0JlbGFpdCd9LFxuICAgICcyJyA6IHsnY29kZSc6J0JSTScsJ25hbWUnOidCcnVuZWkgYW5kIE11YXJhJ30sXG4gICAgJzMnIDogeydjb2RlJzonVEVNJywnbmFtZSc6J1RlbWJ1cm9uZyd9LFxuICAgICc0JyA6IHsnY29kZSc6J1RVVCcsJ25hbWUnOidUdXRvbmcnfVxuICB9LFxuICAnQkcnOntcbiAgICAnMScgOiB7J2NvZGUnOidCRy0wMScsJ25hbWUnOidCbGFnb2V2Z3JhZCd9LFxuICAgICcyJyA6IHsnY29kZSc6J0JHLTAyJywnbmFtZSc6J0J1cmdhcyd9LFxuICAgICczJyA6IHsnY29kZSc6J0JHLTAzJywnbmFtZSc6J0RvYnJpY2gnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidCRy0wNCcsJ25hbWUnOidHYWJyb3ZvJ30sXG4gICAgJzUnIDogeydjb2RlJzonQkctMDUnLCduYW1lJzonSGFza292byd9LFxuICAgICc2JyA6IHsnY29kZSc6J0JHLTA2JywnbmFtZSc6J0thcmRqYWxpJ30sXG4gICAgJzcnIDogeydjb2RlJzonQkctMDcnLCduYW1lJzonS3l1c3RlbmRpbCd9LFxuICAgICc4JyA6IHsnY29kZSc6J0JHLTA4JywnbmFtZSc6J0xvdmVjaCd9LFxuICAgICc5JyA6IHsnY29kZSc6J0JHLTA5JywnbmFtZSc6J01vbnRhbmEnfSxcbiAgICAnMTAnIDogeydjb2RlJzonQkctMTAnLCduYW1lJzonUGF6YXJkamlrJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0JHLTExJywnbmFtZSc6J1Blcm5payd9LFxuICAgICcxMicgOiB7J2NvZGUnOidCRy0xMicsJ25hbWUnOidQbGV2ZW4nfSxcbiAgICAnMTMnIDogeydjb2RlJzonQkctMTMnLCduYW1lJzonUGxvdmRpdid9LFxuICAgICcxNCcgOiB7J2NvZGUnOidCRy0xNCcsJ25hbWUnOidSYXpncmFkJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0JHLTE1JywnbmFtZSc6J1NodW1lbid9LFxuICAgICcxNicgOiB7J2NvZGUnOidCRy0xNicsJ25hbWUnOidTaWxpc3RyYSd9LFxuICAgICcxNycgOiB7J2NvZGUnOidCRy0xNycsJ25hbWUnOidTbGl2ZW4nfSxcbiAgICAnMTgnIDogeydjb2RlJzonQkctMTgnLCduYW1lJzonU21vbHlhbid9LFxuICAgICcxOScgOiB7J2NvZGUnOidCRy0xOScsJ25hbWUnOidTb2ZpYSd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidCRy0yMCcsJ25hbWUnOidTb2ZpYSAtIHRvd24nfSxcbiAgICAnMjEnIDogeydjb2RlJzonQkctMjEnLCduYW1lJzonU3RhcmEgWmFnb3JhJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J0JHLTIyJywnbmFtZSc6J1RhcmdvdmlzaHRlJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J0JHLTIzJywnbmFtZSc6J1Zhcm5hJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J0JHLTI0JywnbmFtZSc6J1ZlbGlrbyBUYXJub3ZvJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J0JHLTI1JywnbmFtZSc6J1ZpZGluJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6J0JHLTI2JywnbmFtZSc6J1ZyYXR6YSd9LFxuICAgICcyNycgOiB7J2NvZGUnOidCRy0yNycsJ25hbWUnOidZYW1ib2wnfVxuICB9LFxuICAnQkYnOntcbiAgICAnMScgOiB7J2NvZGUnOidCQUwnLCduYW1lJzonQmFsZSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0JBTScsJ25hbWUnOidCYW0nfSxcbiAgICAnMycgOiB7J2NvZGUnOidCQU4nLCduYW1lJzonQmFud2EnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidCQVonLCduYW1lJzonQmF6ZWdhJ30sXG4gICAgJzUnIDogeydjb2RlJzonQk9SJywnbmFtZSc6J0JvdWdvdXJpYmEnfSxcbiAgICAnNicgOiB7J2NvZGUnOidCTEcnLCduYW1lJzonQm91bGdvdSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0JPSycsJ25hbWUnOidCb3Vsa2llbWRlJ30sXG4gICAgJzgnIDogeydjb2RlJzonQ09NJywnbmFtZSc6J0NvbW9lJ30sXG4gICAgJzknIDogeydjb2RlJzonR0FOJywnbmFtZSc6J0dhbnpvdXJnb3UnfSxcbiAgICAnMTAnIDogeydjb2RlJzonR05BJywnbmFtZSc6J0duYWduYSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidHT1UnLCduYW1lJzonR291cm1hJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0hPVScsJ25hbWUnOidIb3VldCd9LFxuICAgICcxMycgOiB7J2NvZGUnOidJT0EnLCduYW1lJzonSW9iYSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidLQUQnLCduYW1lJzonS2FkaW9nbyd9LFxuICAgICcxNScgOiB7J2NvZGUnOidLRU4nLCduYW1lJzonS2VuZWRvdWdvdSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidLT0QnLCduYW1lJzonS29tb25kamFyaSd9LFxuICAgICcxNycgOiB7J2NvZGUnOidLT1AnLCduYW1lJzonS29tcGllbmdhJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J0tPUycsJ25hbWUnOidLb3NzaSd9LFxuICAgICcxOScgOiB7J2NvZGUnOidLT0wnLCduYW1lJzonS291bHBlbG9nbyd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidLT1QnLCduYW1lJzonS291cml0ZW5nYSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidLT1cnLCduYW1lJzonS291cndlb2dvJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J0xFUicsJ25hbWUnOidMZXJhYmEnfSxcbiAgICAnMjMnIDogeydjb2RlJzonTE9SJywnbmFtZSc6J0xvcm91bSd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidNT1UnLCduYW1lJzonTW91aG91bid9LFxuICAgICcyNScgOiB7J2NvZGUnOidOQUgnLCduYW1lJzonTmFob3VyaSd9LFxuICAgICcyNicgOiB7J2NvZGUnOidOQU0nLCduYW1lJzonTmFtZW50ZW5nYSd9LFxuICAgICcyNycgOiB7J2NvZGUnOidOQVknLCduYW1lJzonTmF5YWxhJ30sXG4gICAgJzI4JyA6IHsnY29kZSc6J05PVScsJ25hbWUnOidOb3VtYmllbCd9LFxuICAgICcyOScgOiB7J2NvZGUnOidPVUInLCduYW1lJzonT3Vicml0ZW5nYSd9LFxuICAgICczMCcgOiB7J2NvZGUnOidPVUQnLCduYW1lJzonT3VkYWxhbid9LFxuICAgICczMScgOiB7J2NvZGUnOidQQVMnLCduYW1lJzonUGFzc29yZSd9LFxuICAgICczMicgOiB7J2NvZGUnOidQT04nLCduYW1lJzonUG9uaSd9LFxuICAgICczMycgOiB7J2NvZGUnOidTQUcnLCduYW1lJzonU2FuZ3VpZSd9LFxuICAgICczNCcgOiB7J2NvZGUnOidTQU0nLCduYW1lJzonU2FubWF0ZW5nYSd9LFxuICAgICczNScgOiB7J2NvZGUnOidTRU4nLCduYW1lJzonU2Vubyd9LFxuICAgICczNicgOiB7J2NvZGUnOidTSVMnLCduYW1lJzonU2lzc2lsaSd9LFxuICAgICczNycgOiB7J2NvZGUnOidTT00nLCduYW1lJzonU291bSd9LFxuICAgICczOCcgOiB7J2NvZGUnOidTT1InLCduYW1lJzonU291cm91J30sXG4gICAgJzM5JyA6IHsnY29kZSc6J1RBUCcsJ25hbWUnOidUYXBvYSd9LFxuICAgICc0MCcgOiB7J2NvZGUnOidUVVknLCduYW1lJzonVHV5J30sXG4gICAgJzQxJyA6IHsnY29kZSc6J1lBRycsJ25hbWUnOidZYWdoYSd9LFxuICAgICc0MicgOiB7J2NvZGUnOidZQVQnLCduYW1lJzonWWF0ZW5nYSd9LFxuICAgICc0MycgOiB7J2NvZGUnOidaSVInLCduYW1lJzonWmlybyd9LFxuICAgICc0NCcgOiB7J2NvZGUnOidaT0QnLCduYW1lJzonWm9uZG9tYSd9LFxuICAgICc0NScgOiB7J2NvZGUnOidaT1cnLCduYW1lJzonWm91bmR3ZW9nbyd9XG4gIH0sXG4gICdCSSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0JCJywnbmFtZSc6J0J1YmFuemEnfSxcbiAgICAnMicgOiB7J2NvZGUnOidCSicsJ25hbWUnOidCdWp1bWJ1cmEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidCUicsJ25hbWUnOidCdXJ1cmknfSxcbiAgICAnNCcgOiB7J2NvZGUnOidDQScsJ25hbWUnOidDYW5rdXpvJ30sXG4gICAgJzUnIDogeydjb2RlJzonQ0knLCduYW1lJzonQ2liaXRva2UnfSxcbiAgICAnNicgOiB7J2NvZGUnOidHSScsJ25hbWUnOidHaXRlZ2EnfSxcbiAgICAnNycgOiB7J2NvZGUnOidLUicsJ25hbWUnOidLYXJ1emknfSxcbiAgICAnOCcgOiB7J2NvZGUnOidLWScsJ25hbWUnOidLYXlhbnphJ30sXG4gICAgJzknIDogeydjb2RlJzonS0knLCduYW1lJzonS2lydW5kbyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidNQScsJ25hbWUnOidNYWthbWJhJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J01VJywnbmFtZSc6J011cmFtdnlhJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J01ZJywnbmFtZSc6J011eWluZ2EnfSxcbiAgICAnMTMnIDogeydjb2RlJzonTVcnLCduYW1lJzonTXdhcm8nfSxcbiAgICAnMTQnIDogeydjb2RlJzonTkcnLCduYW1lJzonTmdvemknfSxcbiAgICAnMTUnIDogeydjb2RlJzonUlQnLCduYW1lJzonUnV0YW5hJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J1JZJywnbmFtZSc6J1J1eWlnaSd9XG4gIH0sXG4gICdLSCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0JBJywnbmFtZSc6J0JhdHRhbWJhbmcnfSxcbiAgICAnMicgOiB7J2NvZGUnOidCTScsJ25hbWUnOidCYW50ZWF5IE1lYW5jaGV5J30sXG4gICAgJzMnIDogeydjb2RlJzonS0InLCduYW1lJzonS2ViJ30sXG4gICAgJzQnIDogeydjb2RlJzonS0snLCduYW1lJzonS2FvaCBLb25nJ30sXG4gICAgJzUnIDogeydjb2RlJzonS0wnLCduYW1lJzonS2FuZGFsJ30sXG4gICAgJzYnIDogeydjb2RlJzonS00nLCduYW1lJzonS2FtcG9uZyBDaGFtJ30sXG4gICAgJzcnIDogeydjb2RlJzonS04nLCduYW1lJzonS2FtcG9uZyBDaGhuYW5nJ30sXG4gICAgJzgnIDogeydjb2RlJzonS08nLCduYW1lJzonS2FtcG9uZyBTb20nfSxcbiAgICAnOScgOiB7J2NvZGUnOidLUCcsJ25hbWUnOidLYW1wb3QnfSxcbiAgICAnMTAnIDogeydjb2RlJzonS1InLCduYW1lJzonS3JhdGllJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0tUJywnbmFtZSc6J0thbXBvbmcgVGhvbSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidLVScsJ25hbWUnOidLYW1wb25nIFNwZXUnfSxcbiAgICAnMTMnIDogeydjb2RlJzonTUsnLCduYW1lJzonTW9uZHVsIEtpcmknfSxcbiAgICAnMTQnIDogeydjb2RlJzonT00nLCduYW1lJzonT2RkYXIgTWVhbmNoZWF5J30sXG4gICAgJzE1JyA6IHsnY29kZSc6J1BBJywnbmFtZSc6J1BhaWxpbid9LFxuICAgICcxNicgOiB7J2NvZGUnOidQRycsJ25hbWUnOidQcmV5IFZlbmcnfSxcbiAgICAnMTcnIDogeydjb2RlJzonUFAnLCduYW1lJzonUGhub20gUGVuaCd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidQUicsJ25hbWUnOidQcmVhaCBWaWhlYXInfSxcbiAgICAnMTknIDogeydjb2RlJzonUFMnLCduYW1lJzonUHJlYWggU2VpaGFudSAoS29tcG9uZyBTb20gb3IgU2kpJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J1BVJywnbmFtZSc6J1B1cnNhdCd9LFxuICAgICcyMScgOiB7J2NvZGUnOidSSycsJ25hbWUnOidSYXRhbmFrIEtpcmknfSxcbiAgICAnMjInIDogeydjb2RlJzonU0knLCduYW1lJzonU2llbXJlYXAnfSxcbiAgICAnMjMnIDogeydjb2RlJzonU1InLCduYW1lJzonU3ZheSBSaWVuZyd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidTVCcsJ25hbWUnOidTdHVuZyBUcmVuZyd9LFxuICAgICcyNScgOiB7J2NvZGUnOidUSycsJ25hbWUnOidUYWtlbyd9XG4gIH0sXG4gICdDTSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FEQScsJ25hbWUnOidBZGFtYXdhIChBZGFtYW91YSknfSxcbiAgICAnMicgOiB7J2NvZGUnOidDRU4nLCduYW1lJzonQ2VudHJlJ30sXG4gICAgJzMnIDogeydjb2RlJzonRVNUJywnbmFtZSc6J0Vhc3QgKEVzdCknfSxcbiAgICAnNCcgOiB7J2NvZGUnOidFWE4nLCduYW1lJzonRXh0csOqbWUtTm9yZCd9LFxuICAgICc1JyA6IHsnY29kZSc6J0xJVCcsJ25hbWUnOidMaXR0b3JhbCd9LFxuICAgICc2JyA6IHsnY29kZSc6J05PUicsJ25hbWUnOidOb3J0aCAoTm9yZCknfSxcbiAgICAnNycgOiB7J2NvZGUnOidOT1QnLCduYW1lJzonTm9ydGh3ZXN0IChOb3JkLU91ZXN0KSd9LFxuICAgICc4JyA6IHsnY29kZSc6J09VRScsJ25hbWUnOidXZXN0IChPdWVzdCknfSxcbiAgICAnOScgOiB7J2NvZGUnOidTVUQnLCduYW1lJzonU291dGggKFN1ZCknfSxcbiAgICAnMTAnIDogeydjb2RlJzonU09VJywnbmFtZSc6J1NvdXRod2VzdCAoU3VkLU91ZXN0KSd9XG4gIH0sXG4gICdDQSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FCJywnbmFtZSc6J0FsYmVydGEnfSxcbiAgICAnMicgOiB7J2NvZGUnOidCQycsJ25hbWUnOidCcml0aXNoIENvbHVtYmlhJ30sXG4gICAgJzMnIDogeydjb2RlJzonTUInLCduYW1lJzonTWFuaXRvYmEnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidOQicsJ25hbWUnOidOZXcgQnJ1bnN3aWNrJ30sXG4gICAgJzUnIDogeydjb2RlJzonTkwnLCduYW1lJzonTmV3Zm91bmRsYW5kIGFuZCBMYWJyYWRvcid9LFxuICAgICc2JyA6IHsnY29kZSc6J05UJywnbmFtZSc6J05vcnRod2VzdCBUZXJyaXRvcmllcyd9LFxuICAgICc3JyA6IHsnY29kZSc6J05TJywnbmFtZSc6J05vdmEgU2NvdGlhJ30sXG4gICAgJzgnIDogeydjb2RlJzonTlUnLCduYW1lJzonTnVuYXZ1dCd9LFxuICAgICc5JyA6IHsnY29kZSc6J09OJywnbmFtZSc6J09udGFyaW8nfSxcbiAgICAnMTAnIDogeydjb2RlJzonUEUnLCduYW1lJzonUHJpbmNlIEVkd2FyZCBJc2xhbmQnfSxcbiAgICAnMTEnIDogeydjb2RlJzonUUMnLCduYW1lJzonUXXDqWJlYyd9LFxuICAgICcxMicgOiB7J2NvZGUnOidTSycsJ25hbWUnOidTYXNrYXRjaGV3YW4nfSxcbiAgICAnMTMnIDogeydjb2RlJzonWVQnLCduYW1lJzonWXVrb24gVGVycml0b3J5J31cbiAgfSxcbiAgJ0NWJzp7XG4gICAgJzEnIDogeydjb2RlJzonQlYnLCduYW1lJzonQm9hIFZpc3RhJ30sXG4gICAgJzInIDogeydjb2RlJzonQlInLCduYW1lJzonQnJhdmEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidDUycsJ25hbWUnOidDYWxoZXRhIGRlIFNhbyBNaWd1ZWwnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidNQScsJ25hbWUnOidNYWlvJ30sXG4gICAgJzUnIDogeydjb2RlJzonTU8nLCduYW1lJzonTW9zdGVpcm9zJ30sXG4gICAgJzYnIDogeydjb2RlJzonUEEnLCduYW1lJzonUGF1bCd9LFxuICAgICc3JyA6IHsnY29kZSc6J1BOJywnbmFtZSc6J1BvcnRvIE5vdm8nfSxcbiAgICAnOCcgOiB7J2NvZGUnOidQUicsJ25hbWUnOidQcmFpYSd9LFxuICAgICc5JyA6IHsnY29kZSc6J1JHJywnbmFtZSc6J1JpYmVpcmEgR3JhbmRlJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1NMJywnbmFtZSc6J1NhbCd9LFxuICAgICcxMScgOiB7J2NvZGUnOidDQScsJ25hbWUnOidTYW50YSBDYXRhcmluYSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidDUicsJ25hbWUnOidTYW50YSBDcnV6J30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1NEJywnbmFtZSc6J1NhbyBEb21pbmdvcyd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidTRicsJ25hbWUnOidTYW8gRmlsaXBlJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J1NOJywnbmFtZSc6J1NhbyBOaWNvbGF1J30sXG4gICAgJzE2JyA6IHsnY29kZSc6J1NWJywnbmFtZSc6J1NhbyBWaWNlbnRlJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J1RBJywnbmFtZSc6J1RhcnJhZmFsJ31cbiAgfSxcbiAgJ0tZJzp7XG4gICAgJzEnIDogeydjb2RlJzonQ1InLCduYW1lJzonQ3JlZWsnfSxcbiAgICAnMicgOiB7J2NvZGUnOidFQScsJ25hbWUnOidFYXN0ZXJuJ30sXG4gICAgJzMnIDogeydjb2RlJzonTUwnLCduYW1lJzonTWlkbGFuZCd9LFxuICAgICc0JyA6IHsnY29kZSc6J1NUJywnbmFtZSc6J1NvdXRoIFRvd24nfSxcbiAgICAnNScgOiB7J2NvZGUnOidTUCcsJ25hbWUnOidTcG90IEJheSd9LFxuICAgICc2JyA6IHsnY29kZSc6J1NLJywnbmFtZSc6J1N0YWtlIEJheSd9LFxuICAgICc3JyA6IHsnY29kZSc6J1dEJywnbmFtZSc6J1dlc3QgRW5kJ30sXG4gICAgJzgnIDogeydjb2RlJzonV04nLCduYW1lJzonV2VzdGVybid9XG4gIH0sXG4gICdDRic6e1xuICAgICcxJyA6IHsnY29kZSc6J0JBTicsJ25hbWUnOidCYW5ndWknfSxcbiAgICAnMicgOiB7J2NvZGUnOidCQkEnLCduYW1lJzonQmFtaW5ndWktQmFuZ29yYW4nfSxcbiAgICAnMycgOiB7J2NvZGUnOidCS08nLCduYW1lJzonQmFzc2UtS290dG8nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidIS08nLCduYW1lJzonSGF1dGUtS290dG8nfSxcbiAgICAnNScgOiB7J2NvZGUnOidITUInLCduYW1lJzonSGF1dC1NYm9tb3UnfSxcbiAgICAnNicgOiB7J2NvZGUnOidLRU0nLCduYW1lJzonS2Vtbyd9LFxuICAgICc3JyA6IHsnY29kZSc6J0xPQicsJ25hbWUnOidMb2JheWUnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidNQk8nLCduYW1lJzonTWJvbW91J30sXG4gICAgJzknIDogeydjb2RlJzonTUtEJywnbmFtZSc6J01hbWLDqXLDqS1LYWTDqcOvJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J05HUicsJ25hbWUnOidOYW5hLUdyZWJpemknfSxcbiAgICAnMTEnIDogeydjb2RlJzonTk1NJywnbmFtZSc6J05hbmEtTWFtYmVyZSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidPTVAnLCduYW1lJzonT21iZWxsYS1NXFwnUG9rbyd9LFxuICAgICcxMycgOiB7J2NvZGUnOidPUEUnLCduYW1lJzonT3VoYW0tUGVuZGUnfSxcbiAgICAnMTQnIDogeydjb2RlJzonT1VIJywnbmFtZSc6J091aGFtJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J09VSycsJ25hbWUnOidPdWFrYSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidTTUInLCduYW1lJzonU2FuZ2hhLU1iYWVyZSd9LFxuICAgICcxNycgOiB7J2NvZGUnOidWQUsnLCduYW1lJzonVmFrYWdhJ31cbiAgfSxcbiAgJ1REJzp7XG4gICAgJzEnIDogeydjb2RlJzonQkEnLCduYW1lJzonQmF0aGEnfSxcbiAgICAnMicgOiB7J2NvZGUnOidCSScsJ25hbWUnOidCaWx0aW5lJ30sXG4gICAgJzMnIDogeydjb2RlJzonQkUnLCduYW1lJzonQm9ya291LUVubmVkaS1UaWJlc3RpJ30sXG4gICAgJzQnIDogeydjb2RlJzonQ0InLCduYW1lJzonQ2hhcmktQmFndWlybWknfSxcbiAgICAnNScgOiB7J2NvZGUnOidHVScsJ25hbWUnOidHdWVyYSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0tBJywnbmFtZSc6J0thbmVtJ30sXG4gICAgJzcnIDogeydjb2RlJzonTEEnLCduYW1lJzonTGFjJ30sXG4gICAgJzgnIDogeydjb2RlJzonTEMnLCduYW1lJzonTG9nb25lIE9jY2lkZW50YWwnfSxcbiAgICAnOScgOiB7J2NvZGUnOidMUicsJ25hbWUnOidMb2dvbmUgT3JpZW50YWwnfSxcbiAgICAnMTAnIDogeydjb2RlJzonTUsnLCduYW1lJzonTWF5by1LZWJiaSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidNQycsJ25hbWUnOidNb3llbi1DaGFyaSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidPVScsJ25hbWUnOidPdWFkZGFpJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1NBJywnbmFtZSc6J1NhbGFtYXQnfSxcbiAgICAnMTQnIDogeydjb2RlJzonVEEnLCduYW1lJzonVGFuZGppbGUnfVxuICB9LFxuICAnQ0wnOntcbiAgICAnMScgOiB7J2NvZGUnOidBSScsJ25hbWUnOidBaXNlbiBkZWwgR2VuZXJhbCBDYXJsb3MgSWJhbmV6J30sXG4gICAgJzInIDogeydjb2RlJzonQU4nLCduYW1lJzonQW50b2ZhZ2FzdGEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidBUicsJ25hbWUnOidBcmF1Y2FuaWEnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidBVCcsJ25hbWUnOidBdGFjYW1hJ30sXG4gICAgJzUnIDogeydjb2RlJzonQkknLCduYW1lJzonQmlvLUJpbyd9LFxuICAgICc2JyA6IHsnY29kZSc6J0NPJywnbmFtZSc6J0NvcXVpbWJvJ30sXG4gICAgJzcnIDogeydjb2RlJzonTEknLCduYW1lJzonTGliZXJ0YWRvciBHZW5lcmFsIEJlcm5hcmRvIE9cXCdIaSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0xMJywnbmFtZSc6J0xvcyBMYWdvcyd9LFxuICAgICc5JyA6IHsnY29kZSc6J01BJywnbmFtZSc6J01hZ2FsbGFuZXMgeSBkZSBsYSBBbnRhcnRpY2EgQ2hpJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J01MJywnbmFtZSc6J01hdWxlJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1JNJywnbmFtZSc6J1JlZ2lvbiBNZXRyb3BvbGl0YW5hJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1RBJywnbmFtZSc6J1RhcmFwYWNhJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1ZTJywnbmFtZSc6J1ZhbHBhcmFpc28nfVxuICB9LFxuICAnQ04nOntcbiAgICAnMScgOiB7J2NvZGUnOidBTicsJ25hbWUnOidBbmh1aSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0JFJywnbmFtZSc6J0JlaWppbmcnfSxcbiAgICAnMycgOiB7J2NvZGUnOidDSCcsJ25hbWUnOidDaG9uZ3FpbmcnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidGVScsJ25hbWUnOidGdWppYW4nfSxcbiAgICAnNScgOiB7J2NvZGUnOidHQScsJ25hbWUnOidHYW5zdSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0dVJywnbmFtZSc6J0d1YW5nZG9uZyd9LFxuICAgICc3JyA6IHsnY29kZSc6J0dYJywnbmFtZSc6J0d1YW5neGknfSxcbiAgICAnOCcgOiB7J2NvZGUnOidHWicsJ25hbWUnOidHdWl6aG91J30sXG4gICAgJzknIDogeydjb2RlJzonSEEnLCduYW1lJzonSGFpbmFuJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0hCJywnbmFtZSc6J0hlYmVpJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0hMJywnbmFtZSc6J0hlaWxvbmdqaWFuZyd9LFxuICAgICcxMicgOiB7J2NvZGUnOidIRScsJ25hbWUnOidIZW5hbid9LFxuICAgICcxMycgOiB7J2NvZGUnOidISycsJ25hbWUnOidIb25nIEtvbmcnfSxcbiAgICAnMTQnIDogeydjb2RlJzonSFUnLCduYW1lJzonSHViZWknfSxcbiAgICAnMTUnIDogeydjb2RlJzonSE4nLCduYW1lJzonSHVuYW4nfSxcbiAgICAnMTYnIDogeydjb2RlJzonSU0nLCduYW1lJzonSW5uZXIgTW9uZ29saWEnfSxcbiAgICAnMTcnIDogeydjb2RlJzonSkknLCduYW1lJzonSmlhbmdzdSd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidKWCcsJ25hbWUnOidKaWFuZ3hpJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0pMJywnbmFtZSc6J0ppbGluJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J0xJJywnbmFtZSc6J0xpYW9uaW5nJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J01BJywnbmFtZSc6J01hY2F1J30sXG4gICAgJzIyJyA6IHsnY29kZSc6J05JJywnbmFtZSc6J05pbmd4aWEnfSxcbiAgICAnMjMnIDogeydjb2RlJzonU0gnLCduYW1lJzonU2hhYW54aSd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidTQScsJ25hbWUnOidTaGFuZG9uZyd9LFxuICAgICcyNScgOiB7J2NvZGUnOidTRycsJ25hbWUnOidTaGFuZ2hhaSd9LFxuICAgICcyNicgOiB7J2NvZGUnOidTWCcsJ25hbWUnOidTaGFueGknfSxcbiAgICAnMjcnIDogeydjb2RlJzonU0knLCduYW1lJzonU2ljaHVhbid9LFxuICAgICcyOCcgOiB7J2NvZGUnOidUSScsJ25hbWUnOidUaWFuamluJ30sXG4gICAgJzI5JyA6IHsnY29kZSc6J1hJJywnbmFtZSc6J1hpbmppYW5nJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J1lVJywnbmFtZSc6J1l1bm5hbid9LFxuICAgICczMScgOiB7J2NvZGUnOidaSCcsJ25hbWUnOidaaGVqaWFuZyd9XG4gIH0sXG4gICdDQyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0QnLCduYW1lJzonRGlyZWN0aW9uIElzbGFuZCd9LFxuICAgICcyJyA6IHsnY29kZSc6J0gnLCduYW1lJzonSG9tZSBJc2xhbmQnfSxcbiAgICAnMycgOiB7J2NvZGUnOidPJywnbmFtZSc6J0hvcnNidXJnaCBJc2xhbmQnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidTJywnbmFtZSc6J1NvdXRoIElzbGFuZCd9LFxuICAgICc1JyA6IHsnY29kZSc6J1cnLCduYW1lJzonV2VzdCBJc2xhbmQnfVxuICB9LFxuICAnQ08nOntcbiAgICAnMScgOiB7J2NvZGUnOidBTVonLCduYW1lJzonQW1hem9uYXMnfSxcbiAgICAnMicgOiB7J2NvZGUnOidBTlQnLCduYW1lJzonQW50aW9xdWlhJ30sXG4gICAgJzMnIDogeydjb2RlJzonQVJBJywnbmFtZSc6J0FyYXVjYSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0FUTCcsJ25hbWUnOidBdGxhbnRpY28nfSxcbiAgICAnNScgOiB7J2NvZGUnOidCREMnLCduYW1lJzonQm9nb3RhIEQuQy4nfSxcbiAgICAnNicgOiB7J2NvZGUnOidCT0wnLCduYW1lJzonQm9saXZhcid9LFxuICAgICc3JyA6IHsnY29kZSc6J0JPWScsJ25hbWUnOidCb3lhY2EnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidDQUwnLCduYW1lJzonQ2FsZGFzJ30sXG4gICAgJzknIDogeydjb2RlJzonQ0FRJywnbmFtZSc6J0NhcXVldGEnfSxcbiAgICAnMTAnIDogeydjb2RlJzonQ0FTJywnbmFtZSc6J0Nhc2FuYXJlJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0NBVScsJ25hbWUnOidDYXVjYSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidDRVMnLCduYW1lJzonQ2VzYXInfSxcbiAgICAnMTMnIDogeydjb2RlJzonQ0hPJywnbmFtZSc6J0Nob2NvJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0NPUicsJ25hbWUnOidDb3Jkb2JhJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0NBTScsJ25hbWUnOidDdW5kaW5hbWFyY2EnfSxcbiAgICAnMTYnIDogeydjb2RlJzonR05BJywnbmFtZSc6J0d1YWluaWEnfSxcbiAgICAnMTcnIDogeydjb2RlJzonR0pSJywnbmFtZSc6J0d1YWppcmEnfSxcbiAgICAnMTgnIDogeydjb2RlJzonR1ZSJywnbmFtZSc6J0d1YXZpYXJlJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0hVSScsJ25hbWUnOidIdWlsYSd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidNQUcnLCduYW1lJzonTWFnZGFsZW5hJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J01FVCcsJ25hbWUnOidNZXRhJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J05BUicsJ25hbWUnOidOYXJpbm8nfSxcbiAgICAnMjMnIDogeydjb2RlJzonTkRTJywnbmFtZSc6J05vcnRlIGRlIFNhbnRhbmRlcid9LFxuICAgICcyNCcgOiB7J2NvZGUnOidQVVQnLCduYW1lJzonUHV0dW1heW8nfSxcbiAgICAnMjUnIDogeydjb2RlJzonUVVJJywnbmFtZSc6J1F1aW5kaW8nfSxcbiAgICAnMjYnIDogeydjb2RlJzonUklTJywnbmFtZSc6J1Jpc2FyYWxkYSd9LFxuICAgICcyNycgOiB7J2NvZGUnOidTQVAnLCduYW1lJzonU2FuIEFuZHJlcyB5IFByb3ZpZGVuY2lhJ30sXG4gICAgJzI4JyA6IHsnY29kZSc6J1NBTicsJ25hbWUnOidTYW50YW5kZXInfSxcbiAgICAnMjknIDogeydjb2RlJzonU1VDJywnbmFtZSc6J1N1Y3JlJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J1RPTCcsJ25hbWUnOidUb2xpbWEnfSxcbiAgICAnMzEnIDogeydjb2RlJzonVkRDJywnbmFtZSc6J1ZhbGxlIGRlbCBDYXVjYSd9LFxuICAgICczMicgOiB7J2NvZGUnOidWQVUnLCduYW1lJzonVmF1cGVzJ30sXG4gICAgJzMzJyA6IHsnY29kZSc6J1ZJQycsJ25hbWUnOidWaWNoYWRhJ31cbiAgfSxcbiAgJ0tNJzp7XG4gICAgJzEnIDogeydjb2RlJzonRycsJ25hbWUnOidHcmFuZGUgQ29tb3JlJ30sXG4gICAgJzInIDogeydjb2RlJzonQScsJ25hbWUnOidBbmpvdWFuJ30sXG4gICAgJzMnIDogeydjb2RlJzonTScsJ25hbWUnOidNb2hlbGknfVxuICB9LFxuICAnQ0cnOntcbiAgICAnMScgOiB7J2NvZGUnOidCTycsJ25hbWUnOidCb3VlbnphJ30sXG4gICAgJzInIDogeydjb2RlJzonQlInLCduYW1lJzonQnJhenphdmlsbGUnfSxcbiAgICAnMycgOiB7J2NvZGUnOidDVScsJ25hbWUnOidDdXZldHRlJ30sXG4gICAgJzQnIDogeydjb2RlJzonQ08nLCduYW1lJzonQ3V2ZXR0ZS1PdWVzdCd9LFxuICAgICc1JyA6IHsnY29kZSc6J0tPJywnbmFtZSc6J0tvdWlsb3UnfSxcbiAgICAnNicgOiB7J2NvZGUnOidMRScsJ25hbWUnOidMZWtvdW1vdSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0xJJywnbmFtZSc6J0xpa291YWxhJ30sXG4gICAgJzgnIDogeydjb2RlJzonTkknLCduYW1lJzonTmlhcmknfSxcbiAgICAnOScgOiB7J2NvZGUnOidQTCcsJ25hbWUnOidQbGF0ZWF1eCd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidQTycsJ25hbWUnOidQb29sJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1NBJywnbmFtZSc6J1NhbmdoYSd9XG4gIH0sXG4gICdDSyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FJJywnbmFtZSc6J0FpdHV0YWtpJ30sXG4gICAgJzInIDogeydjb2RlJzonQVQnLCduYW1lJzonQXRpdSd9LFxuICAgICczJyA6IHsnY29kZSc6J01BJywnbmFtZSc6J01hbnVhZSd9LFxuICAgICc0JyA6IHsnY29kZSc6J01HJywnbmFtZSc6J01hbmdhaWEnfSxcbiAgICAnNScgOiB7J2NvZGUnOidNSycsJ25hbWUnOidNYW5paGlraSd9LFxuICAgICc2JyA6IHsnY29kZSc6J01UJywnbmFtZSc6J01pdGlhcm8nfSxcbiAgICAnNycgOiB7J2NvZGUnOidNVScsJ25hbWUnOidNYXVrZSd9LFxuICAgICc4JyA6IHsnY29kZSc6J05JJywnbmFtZSc6J05hc3NhdSBJc2xhbmQnfSxcbiAgICAnOScgOiB7J2NvZGUnOidQQScsJ25hbWUnOidQYWxtZXJzdG9uJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1BFJywnbmFtZSc6J1BlbnJoeW4nfSxcbiAgICAnMTEnIDogeydjb2RlJzonUFUnLCduYW1lJzonUHVrYXB1a2EnfSxcbiAgICAnMTInIDogeydjb2RlJzonUksnLCduYW1lJzonUmFrYWhhbmdhJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1JSJywnbmFtZSc6J1Jhcm90b25nYSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidTVScsJ25hbWUnOidTdXJ3YXJyb3cnfSxcbiAgICAnMTUnIDogeydjb2RlJzonVEEnLCduYW1lJzonVGFrdXRlYSd9XG4gIH0sXG4gICdDUic6e1xuICAgICcxJyA6IHsnY29kZSc6J0FMJywnbmFtZSc6J0FsYWp1ZWxhJ30sXG4gICAgJzInIDogeydjb2RlJzonQ0EnLCduYW1lJzonQ2FydGFnbyd9LFxuICAgICczJyA6IHsnY29kZSc6J0dVJywnbmFtZSc6J0d1YW5hY2FzdGUnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidIRScsJ25hbWUnOidIZXJlZGlhJ30sXG4gICAgJzUnIDogeydjb2RlJzonTEknLCduYW1lJzonTGltb24nfSxcbiAgICAnNicgOiB7J2NvZGUnOidQVScsJ25hbWUnOidQdW50YXJlbmFzJ30sXG4gICAgJzcnIDogeydjb2RlJzonU0onLCduYW1lJzonU2FuIEpvc2UnfVxuICB9LFxuICAnQ0knOntcbiAgICAnMScgOiB7J2NvZGUnOidBQkUnLCduYW1lJzonQWJlbmdvdXJvdSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FCSScsJ25hbWUnOidBYmlkamFuJ30sXG4gICAgJzMnIDogeydjb2RlJzonQUJPJywnbmFtZSc6J0Fib2lzc28nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidBREknLCduYW1lJzonQWRpYWtlJ30sXG4gICAgJzUnIDogeydjb2RlJzonQURaJywnbmFtZSc6J0Fkem9wZSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0FHQicsJ25hbWUnOidBZ2JvdmlsbGUnfSxcbiAgICAnNycgOiB7J2NvZGUnOidBR04nLCduYW1lJzonQWduaWJpbGVrcm91J30sXG4gICAgJzgnIDogeydjb2RlJzonQUxFJywnbmFtZSc6J0FsZXBlJ30sXG4gICAgJzknIDogeydjb2RlJzonQk9DJywnbmFtZSc6J0JvY2FuZGEnfSxcbiAgICAnMTAnIDogeydjb2RlJzonQkFOJywnbmFtZSc6J0JhbmdvbG8nfSxcbiAgICAnMTEnIDogeydjb2RlJzonQkVPJywnbmFtZSc6J0Jlb3VtaSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidCSUEnLCduYW1lJzonQmlhbmtvdW1hJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0JESycsJ25hbWUnOidCb25kb3Vrb3UnfSxcbiAgICAnMTQnIDogeydjb2RlJzonQkdOJywnbmFtZSc6J0JvbmdvdWFub3UnfSxcbiAgICAnMTUnIDogeydjb2RlJzonQkZMJywnbmFtZSc6J0JvdWFmbGUnfSxcbiAgICAnMTYnIDogeydjb2RlJzonQktFJywnbmFtZSc6J0JvdWFrZSd9LFxuICAgICcxNycgOiB7J2NvZGUnOidCTkEnLCduYW1lJzonQm91bmEnfSxcbiAgICAnMTgnIDogeydjb2RlJzonQkRMJywnbmFtZSc6J0JvdW5kaWFsaSd9LFxuICAgICcxOScgOiB7J2NvZGUnOidES0wnLCduYW1lJzonRGFiYWthbGEnfSxcbiAgICAnMjAnIDogeydjb2RlJzonREJVJywnbmFtZSc6J0RhYm91J30sXG4gICAgJzIxJyA6IHsnY29kZSc6J0RBTCcsJ25hbWUnOidEYWxvYSd9LFxuICAgICcyMicgOiB7J2NvZGUnOidEQU4nLCduYW1lJzonRGFuYW5lJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J0RBTycsJ25hbWUnOidEYW91a3JvJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J0RJTScsJ25hbWUnOidEaW1ib2tybyd9LFxuICAgICcyNScgOiB7J2NvZGUnOidESVYnLCduYW1lJzonRGl2byd9LFxuICAgICcyNicgOiB7J2NvZGUnOidEVUUnLCduYW1lJzonRHVla291ZSd9LFxuICAgICcyNycgOiB7J2NvZGUnOidGRVInLCduYW1lJzonRmVya2Vzc2Vkb3Vnb3UnfSxcbiAgICAnMjgnIDogeydjb2RlJzonR0FHJywnbmFtZSc6J0dhZ25vYSd9LFxuICAgICcyOScgOiB7J2NvZGUnOidHQkEnLCduYW1lJzonR3JhbmQtQmFzc2FtJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J0dMQScsJ25hbWUnOidHcmFuZC1MYWhvdSd9LFxuICAgICczMScgOiB7J2NvZGUnOidHVUknLCduYW1lJzonR3VpZ2xvJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6J0lTUycsJ25hbWUnOidJc3NpYSd9LFxuICAgICczMycgOiB7J2NvZGUnOidKQUMnLCduYW1lJzonSmFjcXVldmlsbGUnfSxcbiAgICAnMzQnIDogeydjb2RlJzonS0FUJywnbmFtZSc6J0thdGlvbGEnfSxcbiAgICAnMzUnIDogeydjb2RlJzonS09SJywnbmFtZSc6J0tvcmhvZ28nfSxcbiAgICAnMzYnIDogeydjb2RlJzonTEFLJywnbmFtZSc6J0xha290YSd9LFxuICAgICczNycgOiB7J2NvZGUnOidNQU4nLCduYW1lJzonTWFuJ30sXG4gICAgJzM4JyA6IHsnY29kZSc6J01LTicsJ25hbWUnOidNYW5rb25vJ30sXG4gICAgJzM5JyA6IHsnY29kZSc6J01CQScsJ25hbWUnOidNYmFoaWFrcm8nfSxcbiAgICAnNDAnIDogeydjb2RlJzonT0RJJywnbmFtZSc6J09kaWVubmUnfSxcbiAgICAnNDEnIDogeydjb2RlJzonT1VNJywnbmFtZSc6J091bWUnfSxcbiAgICAnNDInIDogeydjb2RlJzonU0FLJywnbmFtZSc6J1Nha2Fzc291J30sXG4gICAgJzQzJyA6IHsnY29kZSc6J1NQRScsJ25hbWUnOidTYW4tUGVkcm8nfSxcbiAgICAnNDQnIDogeydjb2RlJzonU0FTJywnbmFtZSc6J1Nhc3NhbmRyYSd9LFxuICAgICc0NScgOiB7J2NvZGUnOidTRUcnLCduYW1lJzonU2VndWVsYSd9LFxuICAgICc0NicgOiB7J2NvZGUnOidTSU4nLCduYW1lJzonU2luZnJhJ30sXG4gICAgJzQ3JyA6IHsnY29kZSc6J1NPVScsJ25hbWUnOidTb3VicmUnfSxcbiAgICAnNDgnIDogeydjb2RlJzonVEFCJywnbmFtZSc6J1RhYm91J30sXG4gICAgJzQ5JyA6IHsnY29kZSc6J1RBTicsJ25hbWUnOidUYW5kYSd9LFxuICAgICc1MCcgOiB7J2NvZGUnOidUSUUnLCduYW1lJzonVGllYmlzc291J30sXG4gICAgJzUxJyA6IHsnY29kZSc6J1RJTicsJ25hbWUnOidUaW5ncmVsYSd9LFxuICAgICc1MicgOiB7J2NvZGUnOidUSUEnLCduYW1lJzonVGlhc3NhbGUnfSxcbiAgICAnNTMnIDogeydjb2RlJzonVEJBJywnbmFtZSc6J1RvdWJhJ30sXG4gICAgJzU0JyA6IHsnY29kZSc6J1RMUCcsJ25hbWUnOidUb3VsZXBsZXUnfSxcbiAgICAnNTUnIDogeydjb2RlJzonVE1EJywnbmFtZSc6J1RvdW1vZGknfSxcbiAgICAnNTYnIDogeydjb2RlJzonVkFWJywnbmFtZSc6J1Zhdm91YSd9LFxuICAgICc1NycgOiB7J2NvZGUnOidZQU0nLCduYW1lJzonWWFtb3Vzc291a3JvJ30sXG4gICAgJzU4JyA6IHsnY29kZSc6J1pVRScsJ25hbWUnOidadWVub3VsYSd9XG4gIH0sXG4gICdIUic6e1xuICAgICcxJyA6IHsnY29kZSc6J0JCJywnbmFtZSc6J0JqZWxvdmFyLUJpbG9nb3JhJ30sXG4gICAgJzInIDogeydjb2RlJzonQ1onLCduYW1lJzonQ2l0eSBvZiBaYWdyZWInfSxcbiAgICAnMycgOiB7J2NvZGUnOidETicsJ25hbWUnOidEdWJyb3ZuaWstTmVyZXR2YSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0lTJywnbmFtZSc6J0lzdHJhJ30sXG4gICAgJzUnIDogeydjb2RlJzonS0EnLCduYW1lJzonS2FybG92YWMnfSxcbiAgICAnNicgOiB7J2NvZGUnOidLSycsJ25hbWUnOidLb3ByaXZuaWNhLUtyaXpldmNpJ30sXG4gICAgJzcnIDogeydjb2RlJzonS1onLCduYW1lJzonS3JhcGluYS1aYWdvcmplJ30sXG4gICAgJzgnIDogeydjb2RlJzonTFMnLCduYW1lJzonTGlrYS1TZW5qJ30sXG4gICAgJzknIDogeydjb2RlJzonTUUnLCduYW1lJzonTWVkaW11cmplJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J09CJywnbmFtZSc6J09zaWplay1CYXJhbmphJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1BTJywnbmFtZSc6J1BvemVnYS1TbGF2b25pYSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidQRycsJ25hbWUnOidQcmltb3JqZS1Hb3Jza2kgS290YXInfSxcbiAgICAnMTMnIDogeydjb2RlJzonU0knLCduYW1lJzonU2liZW5payd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidTTScsJ25hbWUnOidTaXNhay1Nb3NsYXZpbmEnfSxcbiAgICAnMTUnIDogeydjb2RlJzonU0InLCduYW1lJzonU2xhdm9uc2tpIEJyb2QtUG9zYXZpbmEnfSxcbiAgICAnMTYnIDogeydjb2RlJzonU0QnLCduYW1lJzonU3BsaXQtRGFsbWF0aWEnfSxcbiAgICAnMTcnIDogeydjb2RlJzonVkEnLCduYW1lJzonVmFyYXpkaW4nfSxcbiAgICAnMTgnIDogeydjb2RlJzonVlAnLCduYW1lJzonVmlyb3ZpdGljYS1Qb2RyYXZpbmEnfSxcbiAgICAnMTknIDogeydjb2RlJzonVlMnLCduYW1lJzonVnVrb3Zhci1TcmlqZW0nfSxcbiAgICAnMjAnIDogeydjb2RlJzonWksnLCduYW1lJzonWmFkYXItS25pbid9LFxuICAgICcyMScgOiB7J2NvZGUnOidaQScsJ25hbWUnOidaYWdyZWInfVxuICB9LFxuICAnQ1UnOntcbiAgICAnMScgOiB7J2NvZGUnOidDQScsJ25hbWUnOidDYW1hZ3VleSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0NEJywnbmFtZSc6J0NpZWdvIGRlIEF2aWxhJ30sXG4gICAgJzMnIDogeydjb2RlJzonQ0knLCduYW1lJzonQ2llbmZ1ZWdvcyd9LFxuICAgICc0JyA6IHsnY29kZSc6J0NIJywnbmFtZSc6J0NpdWRhZCBkZSBMYSBIYWJhbmEnfSxcbiAgICAnNScgOiB7J2NvZGUnOidHUicsJ25hbWUnOidHcmFubWEnfSxcbiAgICAnNicgOiB7J2NvZGUnOidHVScsJ25hbWUnOidHdWFudGFuYW1vJ30sXG4gICAgJzcnIDogeydjb2RlJzonSE8nLCduYW1lJzonSG9sZ3Vpbid9LFxuICAgICc4JyA6IHsnY29kZSc6J0lKJywnbmFtZSc6J0lzbGEgZGUgbGEgSnV2ZW50dWQnfSxcbiAgICAnOScgOiB7J2NvZGUnOidMSCcsJ25hbWUnOidMYSBIYWJhbmEnfSxcbiAgICAnMTAnIDogeydjb2RlJzonTFQnLCduYW1lJzonTGFzIFR1bmFzJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J01BJywnbmFtZSc6J01hdGFuemFzJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1BSJywnbmFtZSc6J1BpbmFyIGRlbCBSaW8nfSxcbiAgICAnMTMnIDogeydjb2RlJzonU1MnLCduYW1lJzonU2FuY3RpIFNwaXJpdHVzJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J1NDJywnbmFtZSc6J1NhbnRpYWdvIGRlIEN1YmEnfSxcbiAgICAnMTUnIDogeydjb2RlJzonVkMnLCduYW1lJzonVmlsbGEgQ2xhcmEnfVxuICB9LFxuICAnQ1knOntcbiAgICAnMScgOiB7J2NvZGUnOidGJywnbmFtZSc6J0ZhbWFndXN0YSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0snLCduYW1lJzonS3lyZW5pYSd9LFxuICAgICczJyA6IHsnY29kZSc6J0EnLCduYW1lJzonTGFybmFjYSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0knLCduYW1lJzonTGltYXNzb2wnfSxcbiAgICAnNScgOiB7J2NvZGUnOidOJywnbmFtZSc6J05pY29zaWEnfSxcbiAgICAnNicgOiB7J2NvZGUnOidQJywnbmFtZSc6J1BhcGhvcyd9XG4gIH0sXG4gICdDWic6e1xuICAgICcxJyA6IHsnY29kZSc6J0EnLCduYW1lJzonSGxhdm7DrSBtxJtzdG8gUHJhaGEnfSxcbiAgICAnMicgOiB7J2NvZGUnOidCJywnbmFtZSc6J0ppaG9tb3JhdnNrw70nfSxcbiAgICAnMycgOiB7J2NvZGUnOidDJywnbmFtZSc6J0ppaG/EjWVza8O9J30sXG4gICAgJzQnIDogeydjb2RlJzonRScsJ25hbWUnOidQYXJkdWJpY2vDvSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0gnLCduYW1lJzonS3LDoWxvdsOpaHJhZGVja8O9J30sXG4gICAgJzYnIDogeydjb2RlJzonSicsJ25hbWUnOidWeXNvxI1pbmEnfSxcbiAgICAnNycgOiB7J2NvZGUnOidLJywnbmFtZSc6J0thcmxvdmFyc2vDvSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0wnLCduYW1lJzonTGliZXJlY2vDvSd9LFxuICAgICc5JyA6IHsnY29kZSc6J00nLCduYW1lJzonT2xvbW91Y2vDvSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidQJywnbmFtZSc6J1BsemXFiHNrw70nfSxcbiAgICAnMTEnIDogeydjb2RlJzonUycsJ25hbWUnOidTdMWZZWRvxI1lc2vDvSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidUJywnbmFtZSc6J01vcmF2c2tvc2xlenNrw70nfSxcbiAgICAnMTMnIDogeydjb2RlJzonVScsJ25hbWUnOifDmnN0ZWNrw70nfSxcbiAgICAnMTQnIDogeydjb2RlJzonWicsJ25hbWUnOidabMOtbnNrw70nfVxuICB9LFxuICAnREsnOntcbiAgICAnMScgOiB7J2NvZGUnOidBUicsJ25hbWUnOidBcmh1cyd9LFxuICAgICcyJyA6IHsnY29kZSc6J0JIJywnbmFtZSc6J0Jvcm5ob2xtJ30sXG4gICAgJzMnIDogeydjb2RlJzonQ08nLCduYW1lJzonQ29wZW5oYWdlbid9LFxuICAgICc0JyA6IHsnY29kZSc6J0ZPJywnbmFtZSc6J0Zhcm9lIElzbGFuZHMnfSxcbiAgICAnNScgOiB7J2NvZGUnOidGUicsJ25hbWUnOidGcmVkZXJpa3Nib3JnJ30sXG4gICAgJzYnIDogeydjb2RlJzonRlknLCduYW1lJzonRnluJ30sXG4gICAgJzcnIDogeydjb2RlJzonS08nLCduYW1lJzonS29iZW5oYXZuJ30sXG4gICAgJzgnIDogeydjb2RlJzonTk8nLCduYW1lJzonTm9yZGp5bGxhbmQnfSxcbiAgICAnOScgOiB7J2NvZGUnOidSSScsJ25hbWUnOidSaWJlJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1JLJywnbmFtZSc6J1Jpbmdrb2JpbmcnfSxcbiAgICAnMTEnIDogeydjb2RlJzonUk8nLCduYW1lJzonUm9za2lsZGUnfSxcbiAgICAnMTInIDogeydjb2RlJzonU08nLCduYW1lJzonU29uZGVyanlsbGFuZCd9LFxuICAgICcxMycgOiB7J2NvZGUnOidTVCcsJ25hbWUnOidTdG9yc3Ryb20nfSxcbiAgICAnMTQnIDogeydjb2RlJzonVksnLCduYW1lJzonVmVqbGUnfSxcbiAgICAnMTUnIDogeydjb2RlJzonVkonLCduYW1lJzonVmVzdGrDpmxsYW5kJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J1ZCJywnbmFtZSc6J1ZpYm9yZyd9XG4gIH0sXG4gICdESic6e1xuICAgICcxJyA6IHsnY29kZSc6J1MnLCduYW1lJzonXFwnQWxpIFNhYmloJ30sXG4gICAgJzInIDogeydjb2RlJzonSycsJ25hbWUnOidEaWtoaWwnfSxcbiAgICAnMycgOiB7J2NvZGUnOidKJywnbmFtZSc6J0RqaWJvdXRpJ30sXG4gICAgJzQnIDogeydjb2RlJzonTycsJ25hbWUnOidPYm9jayd9LFxuICAgICc1JyA6IHsnY29kZSc6J1QnLCduYW1lJzonVGFkam91cmEnfVxuICB9LFxuICAnRE0nOntcbiAgICAnMScgOiB7J2NvZGUnOidBTkQnLCduYW1lJzonU2FpbnQgQW5kcmV3IFBhcmlzaCd9LFxuICAgICcyJyA6IHsnY29kZSc6J0RBVicsJ25hbWUnOidTYWludCBEYXZpZCBQYXJpc2gnfSxcbiAgICAnMycgOiB7J2NvZGUnOidHRU8nLCduYW1lJzonU2FpbnQgR2VvcmdlIFBhcmlzaCd9LFxuICAgICc0JyA6IHsnY29kZSc6J0pPSCcsJ25hbWUnOidTYWludCBKb2huIFBhcmlzaCd9LFxuICAgICc1JyA6IHsnY29kZSc6J0pPUycsJ25hbWUnOidTYWludCBKb3NlcGggUGFyaXNoJ30sXG4gICAgJzYnIDogeydjb2RlJzonTFVLJywnbmFtZSc6J1NhaW50IEx1a2UgUGFyaXNoJ30sXG4gICAgJzcnIDogeydjb2RlJzonTUFSJywnbmFtZSc6J1NhaW50IE1hcmsgUGFyaXNoJ30sXG4gICAgJzgnIDogeydjb2RlJzonUEFUJywnbmFtZSc6J1NhaW50IFBhdHJpY2sgUGFyaXNoJ30sXG4gICAgJzknIDogeydjb2RlJzonUEFVJywnbmFtZSc6J1NhaW50IFBhdWwgUGFyaXNoJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1BFVCcsJ25hbWUnOidTYWludCBQZXRlciBQYXJpc2gnfVxuICB9LFxuICAnRE8nOntcbiAgICAnMScgOiB7J2NvZGUnOidETicsJ25hbWUnOidEaXN0cml0byBOYWNpb25hbCd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FaJywnbmFtZSc6J0F6dWEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidCQycsJ25hbWUnOidCYW9ydWNvJ30sXG4gICAgJzQnIDogeydjb2RlJzonQkgnLCduYW1lJzonQmFyYWhvbmEnfSxcbiAgICAnNScgOiB7J2NvZGUnOidESicsJ25hbWUnOidEYWphYm9uJ30sXG4gICAgJzYnIDogeydjb2RlJzonRFUnLCduYW1lJzonRHVhcnRlJ30sXG4gICAgJzcnIDogeydjb2RlJzonRUwnLCduYW1lJzonRWxpYXMgUGluYSd9LFxuICAgICc4JyA6IHsnY29kZSc6J1NZJywnbmFtZSc6J0VsIFNleWJvJ30sXG4gICAgJzknIDogeydjb2RlJzonRVQnLCduYW1lJzonRXNwYWlsbGF0J30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0hNJywnbmFtZSc6J0hhdG8gTWF5b3InfSxcbiAgICAnMTEnIDogeydjb2RlJzonSU4nLCduYW1lJzonSW5kZXBlbmRlbmNpYSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidBTCcsJ25hbWUnOidMYSBBbHRhZ3JhY2lhJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1JPJywnbmFtZSc6J0xhIFJvbWFuYSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidWRScsJ25hbWUnOidMYSBWZWdhJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J01UJywnbmFtZSc6J01hcmlhIFRyaW5pZGFkIFNhbmNoZXonfSxcbiAgICAnMTYnIDogeydjb2RlJzonTU4nLCduYW1lJzonTW9uc2Vub3IgTm91ZWwnfSxcbiAgICAnMTcnIDogeydjb2RlJzonTUMnLCduYW1lJzonTW9udGUgQ3Jpc3RpJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J01QJywnbmFtZSc6J01vbnRlIFBsYXRhJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J1BEJywnbmFtZSc6J1BlZGVybmFsZXMnfSxcbiAgICAnMjAnIDogeydjb2RlJzonUFInLCduYW1lJzonUGVyYXZpYSAoQmFuaSknfSxcbiAgICAnMjEnIDogeydjb2RlJzonUFAnLCduYW1lJzonUHVlcnRvIFBsYXRhJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J1NMJywnbmFtZSc6J1NhbGNlZG8nfSxcbiAgICAnMjMnIDogeydjb2RlJzonU00nLCduYW1lJzonU2FtYW5hJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J1NIJywnbmFtZSc6J1NhbmNoZXogUmFtaXJleid9LFxuICAgICcyNScgOiB7J2NvZGUnOidTQycsJ25hbWUnOidTYW4gQ3Jpc3RvYmFsJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6J0pPJywnbmFtZSc6J1NhbiBKb3NlIGRlIE9jb2EnfSxcbiAgICAnMjcnIDogeydjb2RlJzonU0onLCduYW1lJzonU2FuIEp1YW4nfSxcbiAgICAnMjgnIDogeydjb2RlJzonUE0nLCduYW1lJzonU2FuIFBlZHJvIGRlIE1hY29yaXMnfSxcbiAgICAnMjknIDogeydjb2RlJzonU0EnLCduYW1lJzonU2FudGlhZ28nfSxcbiAgICAnMzAnIDogeydjb2RlJzonU1QnLCduYW1lJzonU2FudGlhZ28gUm9kcmlndWV6J30sXG4gICAgJzMxJyA6IHsnY29kZSc6J1NEJywnbmFtZSc6J1NhbnRvIERvbWluZ28nfSxcbiAgICAnMzInIDogeydjb2RlJzonVkEnLCduYW1lJzonVmFsdmVyZGUnfVxuICB9LFxuICAnVFAnOntcbiAgICAnMScgOiB7J2NvZGUnOidBTCcsJ25hbWUnOidBaWxldSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FOJywnbmFtZSc6J0FpbmFybyd9LFxuICAgICczJyA6IHsnY29kZSc6J0JBJywnbmFtZSc6J0JhdWNhdSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0JPJywnbmFtZSc6J0JvYm9uYXJvJ30sXG4gICAgJzUnIDogeydjb2RlJzonQ08nLCduYW1lJzonQ292YSBMaW1hJ30sXG4gICAgJzYnIDogeydjb2RlJzonREknLCduYW1lJzonRGlsaSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0VSJywnbmFtZSc6J0VybWVyYSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0xBJywnbmFtZSc6J0xhdXRlbSd9LFxuICAgICc5JyA6IHsnY29kZSc6J0xJJywnbmFtZSc6J0xpcXVpY2EnfSxcbiAgICAnMTAnIDogeydjb2RlJzonTVQnLCduYW1lJzonTWFuYXR1dG8nfSxcbiAgICAnMTEnIDogeydjb2RlJzonTUYnLCduYW1lJzonTWFudWZhaGknfSxcbiAgICAnMTInIDogeydjb2RlJzonT0UnLCduYW1lJzonT2VjdXNzaSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidWSScsJ25hbWUnOidWaXF1ZXF1ZSd9XG4gIH0sXG4gICdFQyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FaVScsJ25hbWUnOidBenVheSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0JPTCcsJ25hbWUnOidCb2xpdmFyJ30sXG4gICAgJzMnIDogeydjb2RlJzonQ0FOJywnbmFtZSc6J0Nhw7Fhcid9LFxuICAgICc0JyA6IHsnY29kZSc6J0NBUicsJ25hbWUnOidDYXJjaGknfSxcbiAgICAnNScgOiB7J2NvZGUnOidDSEknLCduYW1lJzonQ2hpbWJvcmF6byd9LFxuICAgICc2JyA6IHsnY29kZSc6J0NPVCcsJ25hbWUnOidDb3RvcGF4aSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0VPUicsJ25hbWUnOidFbCBPcm8nfSxcbiAgICAnOCcgOiB7J2NvZGUnOidFU00nLCduYW1lJzonRXNtZXJhbGRhcyd9LFxuICAgICc5JyA6IHsnY29kZSc6J0dQUycsJ25hbWUnOidHYWzDoXBhZ29zJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0dVQScsJ25hbWUnOidHdWF5YXMnfSxcbiAgICAnMTEnIDogeydjb2RlJzonSU1CJywnbmFtZSc6J0ltYmFidXJhJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0xPSicsJ25hbWUnOidMb2phJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0xSTycsJ25hbWUnOidMb3MgUsOtb3MnfSxcbiAgICAnMTQnIDogeydjb2RlJzonTUFOJywnbmFtZSc6J01hbmFiw60nfSxcbiAgICAnMTUnIDogeydjb2RlJzonTVNBJywnbmFtZSc6J01vcm9uYSBTYW50aWFnbyd9LFxuICAgICcxNicgOiB7J2NvZGUnOidOQVAnLCduYW1lJzonTmFwbyd9LFxuICAgICcxNycgOiB7J2NvZGUnOidPUkUnLCduYW1lJzonT3JlbGxhbmEnfSxcbiAgICAnMTgnIDogeydjb2RlJzonUEFTJywnbmFtZSc6J1Bhc3RhemEnfSxcbiAgICAnMTknIDogeydjb2RlJzonUElDJywnbmFtZSc6J1BpY2hpbmNoYSd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidTVUMnLCduYW1lJzonU3VjdW1iw61vcyd9LFxuICAgICcyMScgOiB7J2NvZGUnOidUVU4nLCduYW1lJzonVHVuZ3VyYWh1YSd9LFxuICAgICcyMicgOiB7J2NvZGUnOidaQ0gnLCduYW1lJzonWmFtb3JhIENoaW5jaGlwZSd9XG4gIH0sXG4gICdFRyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0RIWScsJ25hbWUnOidBZCBEYXFhaGxpeWFoJ30sXG4gICAgJzInIDogeydjb2RlJzonQkFNJywnbmFtZSc6J0FsIEJhaHIgYWwgQWhtYXInfSxcbiAgICAnMycgOiB7J2NvZGUnOidCSFknLCduYW1lJzonQWwgQnVoYXlyYWgnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidGWU0nLCduYW1lJzonQWwgRmF5eXVtJ30sXG4gICAgJzUnIDogeydjb2RlJzonR0JZJywnbmFtZSc6J0FsIEdoYXJiaXlhaCd9LFxuICAgICc2JyA6IHsnY29kZSc6J0lEUicsJ25hbWUnOidBbCBJc2thbmRhcml5YWgnfSxcbiAgICAnNycgOiB7J2NvZGUnOidJTUwnLCduYW1lJzonQWwgSXNtYSBcXCdpbGl5YWgnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidKWkgnLCduYW1lJzonQWwgSml6YWgnfSxcbiAgICAnOScgOiB7J2NvZGUnOidNRlknLCduYW1lJzonQWwgTWludWZpeWFoJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J01OWScsJ25hbWUnOidBbCBNaW55YSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidRSFInLCduYW1lJzonQWwgUWFoaXJhaCd9LFxuICAgICcxMicgOiB7J2NvZGUnOidRTFknLCduYW1lJzonQWwgUWFseXViaXlhaCd9LFxuICAgICcxMycgOiB7J2NvZGUnOidXSkQnLCduYW1lJzonQWwgV2FkaSBhbCBKYWRpZCd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidTSFEnLCduYW1lJzonQXNoIFNoYXJxaXlhaCd9LFxuICAgICcxNScgOiB7J2NvZGUnOidTV1knLCduYW1lJzonQXMgU3V3YXlzJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J0FTVycsJ25hbWUnOidBc3dhbid9LFxuICAgICcxNycgOiB7J2NvZGUnOidBU1knLCduYW1lJzonQXN5dXQnfSxcbiAgICAnMTgnIDogeydjb2RlJzonQlNXJywnbmFtZSc6J0JhbmkgU3V3YXlmJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0JTRCcsJ25hbWUnOidCdXIgU2FcXCdpZCd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidETVknLCduYW1lJzonRHVteWF0J30sXG4gICAgJzIxJyA6IHsnY29kZSc6J0pOUycsJ25hbWUnOidKYW51YiBTaW5hXFwnJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J0tTSCcsJ25hbWUnOidLYWZyIGFzaCBTaGF5a2gnfSxcbiAgICAnMjMnIDogeydjb2RlJzonTUFUJywnbmFtZSc6J01hdHJ1aCd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidRSU4nLCduYW1lJzonUWluYSd9LFxuICAgICcyNScgOiB7J2NvZGUnOidTSFMnLCduYW1lJzonU2hhbWFsIFNpbmFcXCcnfSxcbiAgICAnMjYnIDogeydjb2RlJzonU1VIJywnbmFtZSc6J1N1aGFqJ31cbiAgfSxcbiAgJ1NWJzp7XG4gICAgJzEnIDogeydjb2RlJzonQUgnLCduYW1lJzonQWh1YWNoYXBhbid9LFxuICAgICcyJyA6IHsnY29kZSc6J0NBJywnbmFtZSc6J0NhYmFuYXMnfSxcbiAgICAnMycgOiB7J2NvZGUnOidDSCcsJ25hbWUnOidDaGFsYXRlbmFuZ28nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidDVScsJ25hbWUnOidDdXNjYXRsYW4nfSxcbiAgICAnNScgOiB7J2NvZGUnOidMQicsJ25hbWUnOidMYSBMaWJlcnRhZCd9LFxuICAgICc2JyA6IHsnY29kZSc6J1BaJywnbmFtZSc6J0xhIFBheid9LFxuICAgICc3JyA6IHsnY29kZSc6J1VOJywnbmFtZSc6J0xhIFVuaW9uJ30sXG4gICAgJzgnIDogeydjb2RlJzonTU8nLCduYW1lJzonTW9yYXphbid9LFxuICAgICc5JyA6IHsnY29kZSc6J1NNJywnbmFtZSc6J1NhbiBNaWd1ZWwnfSxcbiAgICAnMTAnIDogeydjb2RlJzonU1MnLCduYW1lJzonU2FuIFNhbHZhZG9yJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1NWJywnbmFtZSc6J1NhbiBWaWNlbnRlJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1NBJywnbmFtZSc6J1NhbnRhIEFuYSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidTTycsJ25hbWUnOidTb25zb25hdGUnfSxcbiAgICAnMTQnIDogeydjb2RlJzonVVMnLCduYW1lJzonVXN1bHV0YW4nfVxuICB9LFxuICAnR1EnOntcbiAgICAnMScgOiB7J2NvZGUnOidBTicsJ25hbWUnOidQcm92aW5jaWEgQW5ub2Jvbid9LFxuICAgICcyJyA6IHsnY29kZSc6J0JOJywnbmFtZSc6J1Byb3ZpbmNpYSBCaW9rbyBOb3J0ZSd9LFxuICAgICczJyA6IHsnY29kZSc6J0JTJywnbmFtZSc6J1Byb3ZpbmNpYSBCaW9rbyBTdXInfSxcbiAgICAnNCcgOiB7J2NvZGUnOidDUycsJ25hbWUnOidQcm92aW5jaWEgQ2VudHJvIFN1cid9LFxuICAgICc1JyA6IHsnY29kZSc6J0tOJywnbmFtZSc6J1Byb3ZpbmNpYSBLaWUtTnRlbSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0xJJywnbmFtZSc6J1Byb3ZpbmNpYSBMaXRvcmFsJ30sXG4gICAgJzcnIDogeydjb2RlJzonV04nLCduYW1lJzonUHJvdmluY2lhIFdlbGUtTnphcyd9XG4gIH0sXG4gICdFUic6e1xuICAgICcxJyA6IHsnY29kZSc6J01BJywnbmFtZSc6J0NlbnRyYWwgKE1hZWtlbCknfSxcbiAgICAnMicgOiB7J2NvZGUnOidLRScsJ25hbWUnOidBbnNlYmEgKEtlcmVuKSd9LFxuICAgICczJyA6IHsnY29kZSc6J0RLJywnbmFtZSc6J1NvdXRoZXJuIFJlZCBTZWEgKERlYnViLUtlaWgtQmFoKSd9LFxuICAgICc0JyA6IHsnY29kZSc6J1NLJywnbmFtZSc6J05vcnRoZXJuIFJlZCBTZWEgKFNlbWllbi1LZWloLUJhKSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0RFJywnbmFtZSc6J1NvdXRoZXJuIChEZWJ1YiknfSxcbiAgICAnNicgOiB7J2NvZGUnOidCUicsJ25hbWUnOidHYXNoLUJhcmthIChCYXJlbnR1KSd9XG4gIH0sXG4gICdFRSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0hBJywnbmFtZSc6J0hhcmp1bWFhIChUYWxsaW5uKSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0hJJywnbmFtZSc6J0hpaXVtYWEgKEthcmRsYSknfSxcbiAgICAnMycgOiB7J2NvZGUnOidJVicsJ25hbWUnOidJZGEtVmlydW1hYSAoSm9odmkpJ30sXG4gICAgJzQnIDogeydjb2RlJzonSkEnLCduYW1lJzonSmFydmFtYWEgKFBhaWRlKSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0pPJywnbmFtZSc6J0pvZ2V2YW1hYSAoSm9nZXZhKSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0xWJywnbmFtZSc6J0xhYW5lLVZpcnVtYWEgKFJha3ZlcmUpJ30sXG4gICAgJzcnIDogeydjb2RlJzonTEEnLCduYW1lJzonTGFhbmVtYWEgKEhhYXBzYWx1KSd9LFxuICAgICc4JyA6IHsnY29kZSc6J1BBJywnbmFtZSc6J1Bhcm51bWFhIChQYXJudSknfSxcbiAgICAnOScgOiB7J2NvZGUnOidQTycsJ25hbWUnOidQb2x2YW1hYSAoUG9sdmEpJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1JBJywnbmFtZSc6J1JhcGxhbWFhIChSYXBsYSknfSxcbiAgICAnMTEnIDogeydjb2RlJzonU0EnLCduYW1lJzonU2FhcmVtYWEgKEt1ZXNzYWFyZSknfSxcbiAgICAnMTInIDogeydjb2RlJzonVEEnLCduYW1lJzonVGFydHVtYWEgKFRhcnR1KSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidWQScsJ25hbWUnOidWYWxnYW1hYSAoVmFsZ2EpJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J1ZJJywnbmFtZSc6J1ZpbGphbmRpbWFhIChWaWxqYW5kaSknfSxcbiAgICAnMTUnIDogeydjb2RlJzonVk8nLCduYW1lJzonVm9ydW1hYSAoVm9ydSknfVxuICB9LFxuICAnRVQnOntcbiAgICAnMScgOiB7J2NvZGUnOidBRicsJ25hbWUnOidBZmFyJ30sXG4gICAgJzInIDogeydjb2RlJzonQUgnLCduYW1lJzonQW1oYXJhJ30sXG4gICAgJzMnIDogeydjb2RlJzonQkcnLCduYW1lJzonQmVuaXNoYW5ndWwtR3VtYXonfSxcbiAgICAnNCcgOiB7J2NvZGUnOidHQicsJ25hbWUnOidHYW1iZWxhJ30sXG4gICAgJzUnIDogeydjb2RlJzonSFInLCduYW1lJzonSGFyaWFpJ30sXG4gICAgJzYnIDogeydjb2RlJzonT1InLCduYW1lJzonT3JvbWlhJ30sXG4gICAgJzcnIDogeydjb2RlJzonU00nLCduYW1lJzonU29tYWxpJ30sXG4gICAgJzgnIDogeydjb2RlJzonU04nLCduYW1lJzonU291dGhlcm4gTmF0aW9ucyAtIE5hdGlvbmFsaXRpZXMnfSxcbiAgICAnOScgOiB7J2NvZGUnOidURycsJ25hbWUnOidUaWdyYXknfSxcbiAgICAnMTAnIDogeydjb2RlJzonQUEnLCduYW1lJzonQWRkaXMgQWJhYmEnfSxcbiAgICAnMTEnIDogeydjb2RlJzonREQnLCduYW1lJzonRGlyZSBEYXdhJ31cbiAgfSxcbiAgJ0ZPJzp7XG4gICAgJzEnIDogeydjb2RlJzonVMObUicsJ25hbWUnOidUw7tyc2hhdm5hciBLb21tdW5hJ30sXG4gICAgJzInIDogeydjb2RlJzonS0xBJywnbmFtZSc6J0tsYWtzdsOtayd9LFxuICAgICczJyA6IHsnY29kZSc6J1JVTicsJ25hbWUnOidSdW5hdsOtayd9LFxuICAgICc0JyA6IHsnY29kZSc6J1RWw5gnLCduYW1lJzonVHbDuHJveXJpJ30sXG4gICAgJzUnIDogeydjb2RlJzonRlVHJywnbmFtZSc6J0Z1Z2xhZmrDuHLDsHVyJ30sXG4gICAgJzYnIDogeydjb2RlJzonU1VOJywnbmFtZSc6J1N1bmRhIEtvbW11bmEnfSxcbiAgICAnNycgOiB7J2NvZGUnOidWw6FHJywnbmFtZSc6J1bDoWd1cid9LFxuICAgICc4JyA6IHsnY29kZSc6J05FUycsJ25hbWUnOidOZXMnfSxcbiAgICAnOScgOiB7J2NvZGUnOidWRVMnLCduYW1lJzonVmVzdG1hbm5hJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J01Jw7AnLCduYW1lJzonTWnDsHbDoWd1cid9LFxuICAgICcxMScgOiB7J2NvZGUnOidTw5hSJywnbmFtZSc6J1PDuHJ2w6FndXInfSxcbiAgICAnMTInIDogeydjb2RlJzonR8OYVCcsJ25hbWUnOidHw7h0dSBLb21tdW5hJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1NKw7snLCduYW1lJzonU2rDu3ZhciBLb21tdW5hJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0xFSScsJ25hbWUnOidMZWlydsOtayd9LFxuICAgICcxNScgOiB7J2NvZGUnOidTQU4nLCduYW1lJzonU2FuZGF2w6FndXInfSxcbiAgICAnMTYnIDogeydjb2RlJzonSFZBJywnbmFtZSc6J0h2YWxiYSd9LFxuICAgICcxNycgOiB7J2NvZGUnOidFScOwJywnbmFtZSc6J0Vpw7BpJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J0tWw60nLCduYW1lJzonS3bDrXbDrWsnfSxcbiAgICAnMTknIDogeydjb2RlJzonU0FOJywnbmFtZSc6J1NhbmR1cid9LFxuICAgICcyMCcgOiB7J2NvZGUnOidTS08nLCduYW1lJzonU2tvcHVuJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J0hWQScsJ25hbWUnOidIdmFubmFzdW5kJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J1NVTScsJ25hbWUnOidTdW1iYSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidWScOwJywnbmFtZSc6J1Zpw7BhcmVpw7BpJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J1BPUicsJ25hbWUnOidQb3JrZXJpJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J1NLw6EnLCduYW1lJzonU2vDoWxhdsOtayd9LFxuICAgICcyNicgOiB7J2NvZGUnOidLVU4nLCduYW1lJzonS3Vub3knfSxcbiAgICAnMjcnIDogeydjb2RlJzonSMOaUycsJ25hbWUnOidIw5pzYXbDrWsnfSxcbiAgICAnMjgnIDogeydjb2RlJzonSE9WJywnbmFtZSc6J0hvdid9LFxuICAgICcyOScgOiB7J2NvZGUnOidGw6FNJywnbmFtZSc6J0bDoW1qaW4nfSxcbiAgICAnMzAnIDogeydjb2RlJzonRlVOJywnbmFtZSc6J0Z1bm5pbmd1cid9LFxuICAgICczMScgOiB7J2NvZGUnOidIw5pTJywnbmFtZSc6J0jDmnNhcid9LFxuICAgICczMicgOiB7J2NvZGUnOidTS8OaJywnbmFtZSc6J1Nrw5p2b3knfSxcbiAgICAnMzMnIDogeydjb2RlJzonU1bDrScsJ25hbWUnOidTdsOtbm95J30sXG4gICAgJzM0JyA6IHsnY29kZSc6J0ZVRycsJ25hbWUnOidGdWdsb3knfVxuICB9LFxuICAnRkonOntcbiAgICAnMScgOiB7J2NvZGUnOidDJywnbmFtZSc6J0NlbnRyYWwgRGl2aXNpb24nfSxcbiAgICAnMicgOiB7J2NvZGUnOidFJywnbmFtZSc6J0Vhc3Rlcm4gRGl2aXNpb24nfSxcbiAgICAnMycgOiB7J2NvZGUnOidOJywnbmFtZSc6J05vcnRoZXJuIERpdmlzaW9uJ30sXG4gICAgJzQnIDogeydjb2RlJzonUicsJ25hbWUnOidSb3R1bWEnfSxcbiAgICAnNScgOiB7J2NvZGUnOidXJywnbmFtZSc6J1dlc3Rlcm4gRGl2aXNpb24nfVxuICB9LFxuICAnRkknOntcbiAgICAnMScgOiB7J2NvZGUnOidBTCcsJ25hbWUnOidBaHZlbmFubWFhbiBMYWFuaSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0VTJywnbmFtZSc6J0V0ZWxhLVN1b21lbiBMYWFuaSd9LFxuICAgICczJyA6IHsnY29kZSc6J0lTJywnbmFtZSc6J0l0YS1TdW9tZW4gTGFhbmknfSxcbiAgICAnNCcgOiB7J2NvZGUnOidMUycsJ25hbWUnOidMYW5zaS1TdW9tZW4gTGFhbmknfSxcbiAgICAnNScgOiB7J2NvZGUnOidMQScsJ25hbWUnOidMYXBpbiBMYW5hbmknfSxcbiAgICAnNicgOiB7J2NvZGUnOidPVScsJ25hbWUnOidPdWx1biBMYWFuaSd9XG4gIH0sXG4gICdGUic6e1xuICAgICcxJyA6IHsnY29kZSc6J0FMJywnbmFtZSc6J0Fsc2FjZSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FRJywnbmFtZSc6J0FxdWl0YWluZSd9LFxuICAgICczJyA6IHsnY29kZSc6J0FVJywnbmFtZSc6J0F1dmVyZ25lJ30sXG4gICAgJzQnIDogeydjb2RlJzonQlInLCduYW1lJzonQnJpdHRhbnknfSxcbiAgICAnNScgOiB7J2NvZGUnOidCVScsJ25hbWUnOidCdXJndW5keSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0NFJywnbmFtZSc6J0NlbnRlciBMb2lyZSBWYWxsZXknfSxcbiAgICAnNycgOiB7J2NvZGUnOidDSCcsJ25hbWUnOidDaGFtcGFnbmUnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidDTycsJ25hbWUnOidDb3JzZSd9LFxuICAgICc5JyA6IHsnY29kZSc6J0ZSJywnbmFtZSc6J0ZyYW5jZSBDb210ZSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidMQScsJ25hbWUnOidMYW5ndWVkb2MgUm91c3NpbGxvbid9LFxuICAgICcxMScgOiB7J2NvZGUnOidMSScsJ25hbWUnOidMaW1vdXNpbid9LFxuICAgICcxMicgOiB7J2NvZGUnOidMTycsJ25hbWUnOidMb3JyYWluZSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidNSScsJ25hbWUnOidNaWRpIFB5cmVuZWVzJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J05PJywnbmFtZSc6J05vcmQgUGFzIGRlIENhbGFpcyd9LFxuICAgICcxNScgOiB7J2NvZGUnOidOUicsJ25hbWUnOidOb3JtYW5keSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidQQScsJ25hbWUnOidQYXJpcyAvIElsZSBkZSBGcmFuY2UnfSxcbiAgICAnMTcnIDogeydjb2RlJzonUEknLCduYW1lJzonUGljYXJkaWUnfSxcbiAgICAnMTgnIDogeydjb2RlJzonUE8nLCduYW1lJzonUG9pdG91IENoYXJlbnRlJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J1BSJywnbmFtZSc6J1Byb3ZlbmNlJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J1JIJywnbmFtZSc6J1Job25lIEFscHMnfSxcbiAgICAnMjEnIDogeydjb2RlJzonUkknLCduYW1lJzonUml2aWVyYSd9LFxuICAgICcyMicgOiB7J2NvZGUnOidXRScsJ25hbWUnOidXZXN0ZXJuIExvaXJlIFZhbGxleSd9XG4gIH0sXG4gICdGWCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0V0JywnbmFtZSc6J0V0cmFuZ2VyJ30sXG4gICAgJzInIDogeydjb2RlJzonMDEnLCduYW1lJzonQWluJ30sXG4gICAgJzMnIDogeydjb2RlJzonMDInLCduYW1lJzonQWlzbmUnfSxcbiAgICAnNCcgOiB7J2NvZGUnOicwMycsJ25hbWUnOidBbGxpZXInfSxcbiAgICAnNScgOiB7J2NvZGUnOicwNCcsJ25hbWUnOidBbHBlcyBkZSBIYXV0ZSBQcm92ZW5jZSd9LFxuICAgICc2JyA6IHsnY29kZSc6JzA1JywnbmFtZSc6J0hhdXRlcy1BbHBlcyd9LFxuICAgICc3JyA6IHsnY29kZSc6JzA2JywnbmFtZSc6J0FscGVzIE1hcml0aW1lcyd9LFxuICAgICc4JyA6IHsnY29kZSc6JzA3JywnbmFtZSc6J0FyZMOoY2hlJ30sXG4gICAgJzknIDogeydjb2RlJzonMDgnLCduYW1lJzonQXJkZW5uZXMnfSxcbiAgICAnMTAnIDogeydjb2RlJzonMDknLCduYW1lJzonQXJpw6hnZSd9LFxuICAgICcxMScgOiB7J2NvZGUnOicxMCcsJ25hbWUnOidBdWJlJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6JzExJywnbmFtZSc6J0F1ZGUnfSxcbiAgICAnMTMnIDogeydjb2RlJzonMTInLCduYW1lJzonQXZleXJvbid9LFxuICAgICcxNCcgOiB7J2NvZGUnOicxMycsJ25hbWUnOidCb3VjaGVzIGR1IFJow7RuZSd9LFxuICAgICcxNScgOiB7J2NvZGUnOicxNCcsJ25hbWUnOidDYWx2YWRvcyd9LFxuICAgICcxNicgOiB7J2NvZGUnOicxNScsJ25hbWUnOidDYW50YWwnfSxcbiAgICAnMTcnIDogeydjb2RlJzonMTYnLCduYW1lJzonQ2hhcmVudGUnfSxcbiAgICAnMTgnIDogeydjb2RlJzonMTcnLCduYW1lJzonQ2hhcmVudGUgTWFyaXRpbWUnfSxcbiAgICAnMTknIDogeydjb2RlJzonMTgnLCduYW1lJzonQ2hlcid9LFxuICAgICcyMCcgOiB7J2NvZGUnOicxOScsJ25hbWUnOidDb3Jyw6h6ZSd9LFxuICAgICcyMScgOiB7J2NvZGUnOicyQScsJ25hbWUnOidDb3JzZSBkdSBTdWQnfSxcbiAgICAnMjInIDogeydjb2RlJzonMkInLCduYW1lJzonSGF1dGUgQ29yc2UnfSxcbiAgICAnMjMnIDogeydjb2RlJzonMjEnLCduYW1lJzonQ8O0dGUgZFxcJ29yJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6JzIyJywnbmFtZSc6J0PDtHRlcyBkXFwnQXJtb3InfSxcbiAgICAnMjUnIDogeydjb2RlJzonMjMnLCduYW1lJzonQ3JldXNlJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6JzI0JywnbmFtZSc6J0RvcmRvZ25lJ30sXG4gICAgJzI3JyA6IHsnY29kZSc6JzI1JywnbmFtZSc6J0RvdWJzJ30sXG4gICAgJzI4JyA6IHsnY29kZSc6JzI2JywnbmFtZSc6J0Ryw7RtZSd9LFxuICAgICcyOScgOiB7J2NvZGUnOicyNycsJ25hbWUnOidFdXJlJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6JzI4JywnbmFtZSc6J0V1cmUgZXQgTG9pcid9LFxuICAgICczMScgOiB7J2NvZGUnOicyOScsJ25hbWUnOidGaW5pc3TDqHJlJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6JzMwJywnbmFtZSc6J0dhcmQnfSxcbiAgICAnMzMnIDogeydjb2RlJzonMzEnLCduYW1lJzonSGF1dGUgR2Fyb25uZSd9LFxuICAgICczNCcgOiB7J2NvZGUnOiczMicsJ25hbWUnOidHZXJzJ30sXG4gICAgJzM1JyA6IHsnY29kZSc6JzMzJywnbmFtZSc6J0dpcm9uZGUnfSxcbiAgICAnMzYnIDogeydjb2RlJzonMzQnLCduYW1lJzonSMOpcmF1bHQnfSxcbiAgICAnMzcnIDogeydjb2RlJzonMzUnLCduYW1lJzonSWxsZSBldCBWaWxhaW5lJ30sXG4gICAgJzM4JyA6IHsnY29kZSc6JzM2JywnbmFtZSc6J0luZHJlJ30sXG4gICAgJzM5JyA6IHsnY29kZSc6JzM3JywnbmFtZSc6J0luZHJlIGV0IExvaXJlJ30sXG4gICAgJzQwJyA6IHsnY29kZSc6JzM4JywnbmFtZSc6J0lzw6lyZSd9LFxuICAgICc0MScgOiB7J2NvZGUnOiczOScsJ25hbWUnOidKdXJhJ30sXG4gICAgJzQyJyA6IHsnY29kZSc6JzQwJywnbmFtZSc6J0xhbmRlcyd9LFxuICAgICc0MycgOiB7J2NvZGUnOic0MScsJ25hbWUnOidMb2lyIGV0IENoZXInfSxcbiAgICAnNDQnIDogeydjb2RlJzonNDInLCduYW1lJzonTG9pcmUnfSxcbiAgICAnNDUnIDogeydjb2RlJzonNDMnLCduYW1lJzonSGF1dGUgTG9pcmUnfSxcbiAgICAnNDYnIDogeydjb2RlJzonNDQnLCduYW1lJzonTG9pcmUgQXRsYW50aXF1ZSd9LFxuICAgICc0NycgOiB7J2NvZGUnOic0NScsJ25hbWUnOidMb2lyZXQnfSxcbiAgICAnNDgnIDogeydjb2RlJzonNDYnLCduYW1lJzonTG90J30sXG4gICAgJzQ5JyA6IHsnY29kZSc6JzQ3JywnbmFtZSc6J0xvdCBldCBHYXJvbm5lJ30sXG4gICAgJzUwJyA6IHsnY29kZSc6JzQ4JywnbmFtZSc6J0xvesOocmUnfSxcbiAgICAnNTEnIDogeydjb2RlJzonNDknLCduYW1lJzonTWFpbmUgZXQgTG9pcmUnfSxcbiAgICAnNTInIDogeydjb2RlJzonNTAnLCduYW1lJzonTWFuY2hlJ30sXG4gICAgJzUzJyA6IHsnY29kZSc6JzUxJywnbmFtZSc6J01hcm5lJ30sXG4gICAgJzU0JyA6IHsnY29kZSc6JzUyJywnbmFtZSc6J0hhdXRlIE1hcm5lJ30sXG4gICAgJzU1JyA6IHsnY29kZSc6JzUzJywnbmFtZSc6J01heWVubmUnfSxcbiAgICAnNTYnIDogeydjb2RlJzonNTQnLCduYW1lJzonTWV1cnRoZSBldCBNb3NlbGxlJ30sXG4gICAgJzU3JyA6IHsnY29kZSc6JzU1JywnbmFtZSc6J01ldXNlJ30sXG4gICAgJzU4JyA6IHsnY29kZSc6JzU2JywnbmFtZSc6J01vcmJpaGFuJ30sXG4gICAgJzU5JyA6IHsnY29kZSc6JzU3JywnbmFtZSc6J01vc2VsbGUnfSxcbiAgICAnNjAnIDogeydjb2RlJzonNTgnLCduYW1lJzonTmnDqHZyZSd9LFxuICAgICc2MScgOiB7J2NvZGUnOic1OScsJ25hbWUnOidOb3JkJ30sXG4gICAgJzYyJyA6IHsnY29kZSc6JzYwJywnbmFtZSc6J09pc2UnfSxcbiAgICAnNjMnIDogeydjb2RlJzonNjEnLCduYW1lJzonT3JuZSd9LFxuICAgICc2NCcgOiB7J2NvZGUnOic2MicsJ25hbWUnOidQYXMgZGUgQ2FsYWlzJ30sXG4gICAgJzY1JyA6IHsnY29kZSc6JzYzJywnbmFtZSc6J1B1eSBkZSBEw7RtZSd9LFxuICAgICc2NicgOiB7J2NvZGUnOic2NCcsJ25hbWUnOidQeXJlbmVlcyBBdGxhbnRpcXVlJ30sXG4gICAgJzY3JyA6IHsnY29kZSc6JzY1JywnbmFtZSc6J0hhdXRlcyBQeXJlbmVlcyd9LFxuICAgICc2OCcgOiB7J2NvZGUnOic2NicsJ25hbWUnOidQeXJlbmVlcyBPcmllbnRhbGUnfSxcbiAgICAnNjknIDogeydjb2RlJzonNjcnLCduYW1lJzonQmFzIFJoaW4nfSxcbiAgICAnNzAnIDogeydjb2RlJzonNjgnLCduYW1lJzonSGF1dCBSaGluJ30sXG4gICAgJzcxJyA6IHsnY29kZSc6JzY5JywnbmFtZSc6J1Jow7RuZSd9LFxuICAgICc3MicgOiB7J2NvZGUnOic3MCcsJ25hbWUnOidIYXV0ZSBTYcO0bmUnfSxcbiAgICAnNzMnIDogeydjb2RlJzonNzEnLCduYW1lJzonU2HDtG5lIGV0IExvaXJlJ30sXG4gICAgJzc0JyA6IHsnY29kZSc6JzcyJywnbmFtZSc6J1NhcnRoZSd9LFxuICAgICc3NScgOiB7J2NvZGUnOic3MycsJ25hbWUnOidTYXZvaWUnfSxcbiAgICAnNzYnIDogeydjb2RlJzonNzQnLCduYW1lJzonSGF1dGUgU2F2b2llJ30sXG4gICAgJzc3JyA6IHsnY29kZSc6Jzc1JywnbmFtZSc6J1BhcmlzJ30sXG4gICAgJzc4JyA6IHsnY29kZSc6Jzc2JywnbmFtZSc6J1NlaW5lIE1hcnRpdGltZSd9LFxuICAgICc3OScgOiB7J2NvZGUnOic3NycsJ25hbWUnOidTZWluZSBldCBNYXJuZSd9LFxuICAgICc4MCcgOiB7J2NvZGUnOic3OCcsJ25hbWUnOidZdmVsaW5lcyd9LFxuICAgICc4MScgOiB7J2NvZGUnOic3OScsJ25hbWUnOidEZXV4IFPDqHZyZXMnfSxcbiAgICAnODInIDogeydjb2RlJzonODAnLCduYW1lJzonU29tbWUnfSxcbiAgICAnODMnIDogeydjb2RlJzonODEnLCduYW1lJzonVGFybid9LFxuICAgICc4NCcgOiB7J2NvZGUnOic4MicsJ25hbWUnOidUYXJuIGV0IEdhcm9ubmUnfSxcbiAgICAnODUnIDogeydjb2RlJzonODMnLCduYW1lJzonVmFyJ30sXG4gICAgJzg2JyA6IHsnY29kZSc6Jzg0JywnbmFtZSc6J1ZhdWNsdXNlJ30sXG4gICAgJzg3JyA6IHsnY29kZSc6Jzg1JywnbmFtZSc6J1ZlbmTDqWUnfSxcbiAgICAnODgnIDogeydjb2RlJzonODYnLCduYW1lJzonVmllbm5lJ30sXG4gICAgJzg5JyA6IHsnY29kZSc6Jzg3JywnbmFtZSc6J0hhdXRlIFZpZW5uZSd9LFxuICAgICc5MCcgOiB7J2NvZGUnOic4OCcsJ25hbWUnOidWb3NnZXMnfSxcbiAgICAnOTEnIDogeydjb2RlJzonODknLCduYW1lJzonWW9ubmUnfSxcbiAgICAnOTInIDogeydjb2RlJzonOTAnLCduYW1lJzonVGVycml0b2lyZSBkZSBCZWxmb3J0J30sXG4gICAgJzkzJyA6IHsnY29kZSc6JzkxJywnbmFtZSc6J0Vzc29ubmUnfSxcbiAgICAnOTQnIDogeydjb2RlJzonOTInLCduYW1lJzonSGF1dHMgZGUgU2VpbmUnfSxcbiAgICAnOTUnIDogeydjb2RlJzonOTMnLCduYW1lJzonU2VpbmUgU3QtRGVuaXMnfSxcbiAgICAnOTYnIDogeydjb2RlJzonOTQnLCduYW1lJzonVmFsIGRlIE1hcm5lJ30sXG4gICAgJzk3JyA6IHsnY29kZSc6Jzk1JywnbmFtZSc6J1ZhbCBkXFwnb2lzZSd9XG4gIH0sXG4gICdHRic6e1xuICAgICcxJyA6IHsnY29kZSc6J0FXQScsJ25hbWUnOidBd2FsYS1ZYWxpbWFwbyd9LFxuICAgICcyJyA6IHsnY29kZSc6J01BTicsJ25hbWUnOidNYW5hJ30sXG4gICAgJzMnIDogeydjb2RlJzonU0FJJywnbmFtZSc6J1NhaW50LUxhdXJlbnQtRHUtTWFyb25pJ30sXG4gICAgJzQnIDogeydjb2RlJzonQVBBJywnbmFtZSc6J0FwYXRvdSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0dSQScsJ25hbWUnOidHcmFuZC1TYW50aSd9LFxuICAgICc2JyA6IHsnY29kZSc6J1BBUCcsJ25hbWUnOidQYXBhw69jaHRvbid9LFxuICAgICc3JyA6IHsnY29kZSc6J1NBw5wnLCduYW1lJzonU2HDnGwnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidNQVInLCduYW1lJzonTWFyaXBhc291bGEnfSxcbiAgICAnOScgOiB7J2NvZGUnOidDQU0nLCduYW1lJzonQ2Ftb3BpJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1NBSScsJ25hbWUnOidTYWludC1HZW9yZ2VzJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J09VQScsJ25hbWUnOidPdWFuYXJ5J30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1LDqUcnLCduYW1lJzonUsOpZ2luYSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidST1UnLCduYW1lJzonUm91cmEnfSxcbiAgICAnMTQnIDogeydjb2RlJzonU0FJJywnbmFtZSc6J1NhaW50LcOpbGllJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0lSQScsJ25hbWUnOidJcmFjb3Vibyd9LFxuICAgICcxNicgOiB7J2NvZGUnOidTSU4nLCduYW1lJzonU2lubmFtYXJ5J30sXG4gICAgJzE3JyA6IHsnY29kZSc6J0tPVScsJ25hbWUnOidLb3Vyb3UnfSxcbiAgICAnMTgnIDogeydjb2RlJzonTUFDJywnbmFtZSc6J01hY291cmlhJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J01PTicsJ25hbWUnOidNb250c2luw6lyeS1Ub25uZWdyYW5kZSd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidNQVQnLCduYW1lJzonTWF0b3VyeSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidDQVknLCduYW1lJzonQ2F5ZW5uZSd9LFxuICAgICcyMicgOiB7J2NvZGUnOidSRU0nLCduYW1lJzonUmVtaXJlLU1vbnRqb2x5J31cbiAgfSxcbiAgJ1BGJzp7XG4gICAgJzEnIDogeydjb2RlJzonTScsJ25hbWUnOidBcmNoaXBlbCBkZXMgTWFycXVpc2VzJ30sXG4gICAgJzInIDogeydjb2RlJzonVCcsJ25hbWUnOidBcmNoaXBlbCBkZXMgVHVhbW90dSd9LFxuICAgICczJyA6IHsnY29kZSc6J0knLCduYW1lJzonQXJjaGlwZWwgZGVzIFR1YnVhaSd9LFxuICAgICc0JyA6IHsnY29kZSc6J1YnLCduYW1lJzonSWxlcyBkdSBWZW50J30sXG4gICAgJzUnIDogeydjb2RlJzonUycsJ25hbWUnOidJbGVzIFNvdXMtbGUtVmVudCd9XG4gIH0sXG4gICdURic6e1xuICAgICcxJyA6IHsnY29kZSc6J0MnLCduYW1lJzonSWxlcyBDcm96ZXQnfSxcbiAgICAnMicgOiB7J2NvZGUnOidLJywnbmFtZSc6J0lsZXMgS2VyZ3VlbGVuJ30sXG4gICAgJzMnIDogeydjb2RlJzonQScsJ25hbWUnOidJbGUgQW1zdGVyZGFtJ30sXG4gICAgJzQnIDogeydjb2RlJzonUCcsJ25hbWUnOidJbGUgU2FpbnQtUGF1bCd9LFxuICAgICc1JyA6IHsnY29kZSc6J0QnLCduYW1lJzonQWRlbGllIExhbmQnfVxuICB9LFxuICAnR0EnOntcbiAgICAnMScgOiB7J2NvZGUnOidFUycsJ25hbWUnOidFc3R1YWlyZSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0hPJywnbmFtZSc6J0hhdXQtT2dvb3VlJ30sXG4gICAgJzMnIDogeydjb2RlJzonTU8nLCduYW1lJzonTW95ZW4tT2dvb3VlJ30sXG4gICAgJzQnIDogeydjb2RlJzonTkcnLCduYW1lJzonTmdvdW5pZSd9LFxuICAgICc1JyA6IHsnY29kZSc6J05ZJywnbmFtZSc6J055YW5nYSd9LFxuICAgICc2JyA6IHsnY29kZSc6J09JJywnbmFtZSc6J09nb291ZS1JdmluZG8nfSxcbiAgICAnNycgOiB7J2NvZGUnOidPTCcsJ25hbWUnOidPZ29vdWUtTG9sbyd9LFxuICAgICc4JyA6IHsnY29kZSc6J09NJywnbmFtZSc6J09nb291ZS1NYXJpdGltZSd9LFxuICAgICc5JyA6IHsnY29kZSc6J1dOJywnbmFtZSc6J1dvbGV1LU50ZW0nfVxuICB9LFxuICAnR00nOntcbiAgICAnMScgOiB7J2NvZGUnOidCSicsJ25hbWUnOidCYW5qdWwnfSxcbiAgICAnMicgOiB7J2NvZGUnOidCUycsJ25hbWUnOidCYXNzZSd9LFxuICAgICczJyA6IHsnY29kZSc6J0JSJywnbmFtZSc6J0JyaWthbWEnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidKQScsJ25hbWUnOidKYW5qYW5nYnVyZSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0tBJywnbmFtZSc6J0thbmlmZW5nJ30sXG4gICAgJzYnIDogeydjb2RlJzonS0UnLCduYW1lJzonS2VyZXdhbid9LFxuICAgICc3JyA6IHsnY29kZSc6J0tVJywnbmFtZSc6J0t1bnRhdXInfSxcbiAgICAnOCcgOiB7J2NvZGUnOidNQScsJ25hbWUnOidNYW5zYWtvbmtvJ30sXG4gICAgJzknIDogeydjb2RlJzonTFInLCduYW1lJzonTG93ZXIgUml2ZXInfSxcbiAgICAnMTAnIDogeydjb2RlJzonQ1InLCduYW1lJzonQ2VudHJhbCBSaXZlcid9LFxuICAgICcxMScgOiB7J2NvZGUnOidOQicsJ25hbWUnOidOb3J0aCBCYW5rJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1VSJywnbmFtZSc6J1VwcGVyIFJpdmVyJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1dFJywnbmFtZSc6J1dlc3Rlcm4nfVxuICB9LFxuICAnR0UnOntcbiAgICAnMScgOiB7J2NvZGUnOidBQicsJ25hbWUnOidBYmtoYXppYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FKJywnbmFtZSc6J0FqYXJpYSd9LFxuICAgICczJyA6IHsnY29kZSc6J0dVJywnbmFtZSc6J0d1cmlhJ30sXG4gICAgJzQnIDogeydjb2RlJzonSU0nLCduYW1lJzonSW1lcmV0aSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0tBJywnbmFtZSc6J0tha2hldGknfSxcbiAgICAnNicgOiB7J2NvZGUnOidLSycsJ25hbWUnOidLdmVtbyBLYXJ0bGknfSxcbiAgICAnNycgOiB7J2NvZGUnOidNTScsJ25hbWUnOidNdHNraGV0YS1NdGlhbmV0aSd9LFxuICAgICc4JyA6IHsnY29kZSc6J1JMJywnbmFtZSc6J1JhY2hhIExlY2hraHVtaSBhbmQgS3ZlbW8gU3ZhbmV0J30sXG4gICAgJzknIDogeydjb2RlJzonU0onLCduYW1lJzonU2FtdHNraGUtSmF2YWtoZXRpJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1NLJywnbmFtZSc6J1NoaWRhIEthcnRsaSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidTWicsJ25hbWUnOidTYW1lZ3JlbG8tWmVtbyBTdmFuZXRpJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1RCJywnbmFtZSc6J1RiaWxpc2knfVxuICB9LFxuICAnREUnOntcbiAgICAnMScgOiB7J2NvZGUnOidCQVcnLCduYW1lJzonQmFkZW4tV8O8cnR0ZW1iZXJnJ30sXG4gICAgJzInIDogeydjb2RlJzonQkFZJywnbmFtZSc6J0JheWVybid9LFxuICAgICczJyA6IHsnY29kZSc6J0JFUicsJ25hbWUnOidCZXJsaW4nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidCUkcnLCduYW1lJzonQnJhbmRlbmJ1cmcnfSxcbiAgICAnNScgOiB7J2NvZGUnOidCUkUnLCduYW1lJzonQnJlbWVuJ30sXG4gICAgJzYnIDogeydjb2RlJzonSEFNJywnbmFtZSc6J0hhbWJ1cmcnfSxcbiAgICAnNycgOiB7J2NvZGUnOidIRVMnLCduYW1lJzonSGVzc2VuJ30sXG4gICAgJzgnIDogeydjb2RlJzonTUVDJywnbmFtZSc6J01lY2tsZW5idXJnLVZvcnBvbW1lcm4nfSxcbiAgICAnOScgOiB7J2NvZGUnOidORFMnLCduYW1lJzonTmllZGVyc2FjaHNlbid9LFxuICAgICcxMCcgOiB7J2NvZGUnOidOUlcnLCduYW1lJzonTm9yZHJoZWluLVdlc3RmYWxlbid9LFxuICAgICcxMScgOiB7J2NvZGUnOidSSEUnLCduYW1lJzonUmhlaW5sYW5kLVBmYWx6J30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1NBUicsJ25hbWUnOidTYWFybGFuZCd9LFxuICAgICcxMycgOiB7J2NvZGUnOidTQVMnLCduYW1lJzonU2FjaHNlbid9LFxuICAgICcxNCcgOiB7J2NvZGUnOidTQUMnLCduYW1lJzonU2FjaHNlbi1BbmhhbHQnfSxcbiAgICAnMTUnIDogeydjb2RlJzonU0NOJywnbmFtZSc6J1NjaGxlc3dpZy1Ib2xzdGVpbid9LFxuICAgICcxNicgOiB7J2NvZGUnOidUSEUnLCduYW1lJzonVGjDvHJpbmdlbid9XG4gIH0sXG4gICdHSCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FTJywnbmFtZSc6J0FzaGFudGkgUmVnaW9uJ30sXG4gICAgJzInIDogeydjb2RlJzonQkEnLCduYW1lJzonQnJvbmctQWhhZm8gUmVnaW9uJ30sXG4gICAgJzMnIDogeydjb2RlJzonQ0UnLCduYW1lJzonQ2VudHJhbCBSZWdpb24nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidFQScsJ25hbWUnOidFYXN0ZXJuIFJlZ2lvbid9LFxuICAgICc1JyA6IHsnY29kZSc6J0dBJywnbmFtZSc6J0dyZWF0ZXIgQWNjcmEgUmVnaW9uJ30sXG4gICAgJzYnIDogeydjb2RlJzonTk8nLCduYW1lJzonTm9ydGhlcm4gUmVnaW9uJ30sXG4gICAgJzcnIDogeydjb2RlJzonVUUnLCduYW1lJzonVXBwZXIgRWFzdCBSZWdpb24nfSxcbiAgICAnOCcgOiB7J2NvZGUnOidVVycsJ25hbWUnOidVcHBlciBXZXN0IFJlZ2lvbid9LFxuICAgICc5JyA6IHsnY29kZSc6J1ZPJywnbmFtZSc6J1ZvbHRhIFJlZ2lvbid9LFxuICAgICcxMCcgOiB7J2NvZGUnOidXRScsJ25hbWUnOidXZXN0ZXJuIFJlZ2lvbid9XG4gIH0sXG4gICdHSSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0VBUycsJ25hbWUnOidFYXN0IFNpZGUnfSxcbiAgICAnMicgOiB7J2NvZGUnOidOT1InLCduYW1lJzonTm9ydGggRGlzdHJpY3QnfSxcbiAgICAnMycgOiB7J2NvZGUnOidSRUMnLCduYW1lJzonUmVjbGFtYXRpb24gQXJlYXMnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidTQU4nLCduYW1lJzonU2FuZHBpdHMgQXJlYSd9LFxuICAgICc1JyA6IHsnY29kZSc6J1NPVScsJ25hbWUnOidTb3V0aCBEaXN0cmljdCd9LFxuICAgICc2JyA6IHsnY29kZSc6J1RPVycsJ25hbWUnOidUb3duIEFyZWEnfSxcbiAgICAnNycgOiB7J2NvZGUnOidVUFAnLCduYW1lJzonVXBwZXIgVG93bid9LFxuICAgICc4JyA6IHsnY29kZSc6J09USCcsJ25hbWUnOidPdGhlcid9XG4gIH0sXG4gICdHUic6e1xuICAgICcxJyA6IHsnY29kZSc6J0FUJywnbmFtZSc6J0F0dGljYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0NOJywnbmFtZSc6J0NlbnRyYWwgR3JlZWNlJ30sXG4gICAgJzMnIDogeydjb2RlJzonQ00nLCduYW1lJzonQ2VudHJhbCBNYWNlZG9uaWEnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidDUicsJ25hbWUnOidDcmV0ZSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0VNJywnbmFtZSc6J0Vhc3QgTWFjZWRvbmlhIGFuZCBUaHJhY2UnfSxcbiAgICAnNicgOiB7J2NvZGUnOidFUCcsJ25hbWUnOidFcGlydXMnfSxcbiAgICAnNycgOiB7J2NvZGUnOidJSScsJ25hbWUnOidJb25pYW4gSXNsYW5kcyd9LFxuICAgICc4JyA6IHsnY29kZSc6J05BJywnbmFtZSc6J05vcnRoIEFlZ2Vhbid9LFxuICAgICc5JyA6IHsnY29kZSc6J1BQJywnbmFtZSc6J1BlbG9wb25uZXNvcyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidTQScsJ25hbWUnOidTb3V0aCBBZWdlYW4nfSxcbiAgICAnMTEnIDogeydjb2RlJzonVEgnLCduYW1lJzonVGhlc3NhbHknfSxcbiAgICAnMTInIDogeydjb2RlJzonV0cnLCduYW1lJzonV2VzdCBHcmVlY2UnfSxcbiAgICAnMTMnIDogeydjb2RlJzonV00nLCduYW1lJzonV2VzdCBNYWNlZG9uaWEnfVxuICB9LFxuICAnR0wnOntcbiAgICAnMScgOiB7J2NvZGUnOidBJywnbmFtZSc6J0F2YW5uYWEnfSxcbiAgICAnMicgOiB7J2NvZGUnOidUJywnbmFtZSc6J1R1bnUnfSxcbiAgICAnMycgOiB7J2NvZGUnOidLJywnbmFtZSc6J0tpdGFhJ31cbiAgfSxcbiAgJzg2Jzp7XG4gICAgJzEnIDogeydjb2RlJzonQScsJ25hbWUnOidTYWludCBBbmRyZXcnfSxcbiAgICAnMicgOiB7J2NvZGUnOidEJywnbmFtZSc6J1NhaW50IERhdmlkJ30sXG4gICAgJzMnIDogeydjb2RlJzonRycsJ25hbWUnOidTYWludCBHZW9yZ2UnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidKJywnbmFtZSc6J1NhaW50IEpvaG4nfSxcbiAgICAnNScgOiB7J2NvZGUnOidNJywnbmFtZSc6J1NhaW50IE1hcmsnfSxcbiAgICAnNicgOiB7J2NvZGUnOidQJywnbmFtZSc6J1NhaW50IFBhdHJpY2snfSxcbiAgICAnNycgOiB7J2NvZGUnOidDJywnbmFtZSc6J0NhcnJpYWNvdSd9LFxuICAgICc4JyA6IHsnY29kZSc6J1EnLCduYW1lJzonUGV0aXQgTWFydGluaXF1ZSd9XG4gIH0sXG4gICdHUCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FSUicsJ25hbWUnOidBcnJvbmRpc3NlbWVudHMgT2YgVGhlIEd1YWRlbG91cCd9LFxuICAgICcyJyA6IHsnY29kZSc6J0NBTicsJ25hbWUnOidDYW50b25zIE9mIFRoZSBHdWFkZWxvdXAgRGVwYXJ0J30sXG4gICAgJzMnIDogeydjb2RlJzonQ09NJywnbmFtZSc6J0NvbW11bmVzIE9mIFRoZSBHdWFkZWxvdXAgRGVwYXJ0J31cbiAgfSxcbiAgJ0dVJzp7XG4gICAgJzEnIDogeydjb2RlJzonQUdBJywnbmFtZSc6J0FnYW5hIEhlaWdodHMnfSxcbiAgICAnMicgOiB7J2NvZGUnOidBR0EnLCduYW1lJzonQWdhdCd9LFxuICAgICczJyA6IHsnY29kZSc6J0FTQScsJ25hbWUnOidBc2FuIE1haW5hJ30sXG4gICAgJzQnIDogeydjb2RlJzonQkFSJywnbmFtZSc6J0JhcnJpZ2FkYSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0NIQScsJ25hbWUnOidDaGFsYW4gUGFnbyBPcmRvdCd9LFxuICAgICc2JyA6IHsnY29kZSc6J0RFRCcsJ25hbWUnOidEZWRlZG8nfSxcbiAgICAnNycgOiB7J2NvZGUnOidIQUcnLCduYW1lJzonSGFnw4V0w7FhJ30sXG4gICAgJzgnIDogeydjb2RlJzonSU5BJywnbmFtZSc6J0luYXJhamFuJ30sXG4gICAgJzknIDogeydjb2RlJzonTUFOJywnbmFtZSc6J01hbmdpbGFvJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J01FUicsJ25hbWUnOidNZXJpem8nfSxcbiAgICAnMTEnIDogeydjb2RlJzonTU9OJywnbmFtZSc6J01vbmdtb25nIFRvdG8gTWFpdGUnfSxcbiAgICAnMTInIDogeydjb2RlJzonUElUJywnbmFtZSc6J1BpdGknfSxcbiAgICAnMTMnIDogeydjb2RlJzonU0FOJywnbmFtZSc6J1NhbnRhIFJpdGEnfSxcbiAgICAnMTQnIDogeydjb2RlJzonU0lOJywnbmFtZSc6J1NpbmFqYW5hJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J1RBTCcsJ25hbWUnOidUYWxvZm9mbyd9LFxuICAgICcxNicgOiB7J2NvZGUnOidUQU0nLCduYW1lJzonVGFtdW5pbmcnfSxcbiAgICAnMTcnIDogeydjb2RlJzonVU1BJywnbmFtZSc6J1VtYXRhYyd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidZSUcnLCduYW1lJzonWWlnbyd9LFxuICAgICcxOScgOiB7J2NvZGUnOidZT04nLCduYW1lJzonWW9uYSd9XG4gIH0sXG4gICdHVCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FWJywnbmFtZSc6J0FsdGEgVmVyYXBheid9LFxuICAgICcyJyA6IHsnY29kZSc6J0JWJywnbmFtZSc6J0JhamEgVmVyYXBheid9LFxuICAgICczJyA6IHsnY29kZSc6J0NNJywnbmFtZSc6J0NoaW1hbHRlbmFuZ28nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidDUScsJ25hbWUnOidDaGlxdWltdWxhJ30sXG4gICAgJzUnIDogeydjb2RlJzonUEUnLCduYW1lJzonRWwgUGV0ZW4nfSxcbiAgICAnNicgOiB7J2NvZGUnOidQUicsJ25hbWUnOidFbCBQcm9ncmVzbyd9LFxuICAgICc3JyA6IHsnY29kZSc6J1FDJywnbmFtZSc6J0VsIFF1aWNoZSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0VTJywnbmFtZSc6J0VzY3VpbnRsYSd9LFxuICAgICc5JyA6IHsnY29kZSc6J0dVJywnbmFtZSc6J0d1YXRlbWFsYSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidIVScsJ25hbWUnOidIdWVodWV0ZW5hbmdvJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0laJywnbmFtZSc6J0l6YWJhbCd9LFxuICAgICcxMicgOiB7J2NvZGUnOidKQScsJ25hbWUnOidKYWxhcGEnfSxcbiAgICAnMTMnIDogeydjb2RlJzonSlUnLCduYW1lJzonSnV0aWFwYSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidRWicsJ25hbWUnOidRdWV0emFsdGVuYW5nbyd9LFxuICAgICcxNScgOiB7J2NvZGUnOidSRScsJ25hbWUnOidSZXRhbGh1bGV1J30sXG4gICAgJzE2JyA6IHsnY29kZSc6J1NUJywnbmFtZSc6J1NhY2F0ZXBlcXVleid9LFxuICAgICcxNycgOiB7J2NvZGUnOidTTScsJ25hbWUnOidTYW4gTWFyY29zJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J1NSJywnbmFtZSc6J1NhbnRhIFJvc2EnfSxcbiAgICAnMTknIDogeydjb2RlJzonU08nLCduYW1lJzonU29sb2xhJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J1NVJywnbmFtZSc6J1N1Y2hpdGVwZXF1ZXonfSxcbiAgICAnMjEnIDogeydjb2RlJzonVE8nLCduYW1lJzonVG90b25pY2FwYW4nfSxcbiAgICAnMjInIDogeydjb2RlJzonWkEnLCduYW1lJzonWmFjYXBhJ31cbiAgfSxcbiAgJ0dOJzp7XG4gICAgJzEnIDogeydjb2RlJzonQ05LJywnbmFtZSc6J0NvbmFrcnknfSxcbiAgICAnMicgOiB7J2NvZGUnOidCWUwnLCduYW1lJzonQmV5bGEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidCRkEnLCduYW1lJzonQm9mZmEnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidCT0snLCduYW1lJzonQm9rZSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0NPWScsJ25hbWUnOidDb3lhaCd9LFxuICAgICc2JyA6IHsnY29kZSc6J0RCTCcsJ25hbWUnOidEYWJvbGEnfSxcbiAgICAnNycgOiB7J2NvZGUnOidETEInLCduYW1lJzonRGFsYWJhJ30sXG4gICAgJzgnIDogeydjb2RlJzonREdSJywnbmFtZSc6J0Rpbmd1aXJheWUnfSxcbiAgICAnOScgOiB7J2NvZGUnOidEQlInLCduYW1lJzonRHVicmVrYSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidGUk4nLCduYW1lJzonRmFyYW5haCd9LFxuICAgICcxMScgOiB7J2NvZGUnOidGUkMnLCduYW1lJzonRm9yZWNhcmlhaCd9LFxuICAgICcxMicgOiB7J2NvZGUnOidGUkknLCduYW1lJzonRnJpYSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidHQU8nLCduYW1lJzonR2FvdWFsJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0dDRCcsJ25hbWUnOidHdWVja2Vkb3UnfSxcbiAgICAnMTUnIDogeydjb2RlJzonS05LJywnbmFtZSc6J0thbmthbid9LFxuICAgICcxNicgOiB7J2NvZGUnOidLUk4nLCduYW1lJzonS2Vyb3VhbmUnfSxcbiAgICAnMTcnIDogeydjb2RlJzonS05EJywnbmFtZSc6J0tpbmRpYSd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidLU0QnLCduYW1lJzonS2lzc2lkb3Vnb3UnfSxcbiAgICAnMTknIDogeydjb2RlJzonS0JBJywnbmFtZSc6J0tvdWJpYSd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidLREEnLCduYW1lJzonS291bmRhcmEnfSxcbiAgICAnMjEnIDogeydjb2RlJzonS1JBJywnbmFtZSc6J0tvdXJvdXNzYSd9LFxuICAgICcyMicgOiB7J2NvZGUnOidMQUInLCduYW1lJzonTGFiZSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidMTE0nLCduYW1lJzonTGVsb3VtYSd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidMT0wnLCduYW1lJzonTG9sYSd9LFxuICAgICcyNScgOiB7J2NvZGUnOidNQ1QnLCduYW1lJzonTWFjZW50YSd9LFxuICAgICcyNicgOiB7J2NvZGUnOidNQUwnLCduYW1lJzonTWFsaSd9LFxuICAgICcyNycgOiB7J2NvZGUnOidNQU0nLCduYW1lJzonTWFtb3UnfSxcbiAgICAnMjgnIDogeydjb2RlJzonTUFOJywnbmFtZSc6J01hbmRpYW5hJ30sXG4gICAgJzI5JyA6IHsnY29kZSc6J05aUicsJ25hbWUnOidOemVyZWtvcmUnfSxcbiAgICAnMzAnIDogeydjb2RlJzonUElUJywnbmFtZSc6J1BpdGEnfSxcbiAgICAnMzEnIDogeydjb2RlJzonU0lHJywnbmFtZSc6J1NpZ3VpcmknfSxcbiAgICAnMzInIDogeydjb2RlJzonVExNJywnbmFtZSc6J1RlbGltZWxlJ30sXG4gICAgJzMzJyA6IHsnY29kZSc6J1RPRycsJ25hbWUnOidUb3VndWUnfSxcbiAgICAnMzQnIDogeydjb2RlJzonWU9NJywnbmFtZSc6J1lvbW91J31cbiAgfSxcbiAgJ0dXJzp7XG4gICAgJzEnIDogeydjb2RlJzonQkYnLCduYW1lJzonQmFmYXRhIFJlZ2lvbid9LFxuICAgICcyJyA6IHsnY29kZSc6J0JCJywnbmFtZSc6J0Jpb21ibyBSZWdpb24nfSxcbiAgICAnMycgOiB7J2NvZGUnOidCUycsJ25hbWUnOidCaXNzYXUgUmVnaW9uJ30sXG4gICAgJzQnIDogeydjb2RlJzonQkwnLCduYW1lJzonQm9sYW1hIFJlZ2lvbid9LFxuICAgICc1JyA6IHsnY29kZSc6J0NBJywnbmFtZSc6J0NhY2hldSBSZWdpb24nfSxcbiAgICAnNicgOiB7J2NvZGUnOidHQScsJ25hbWUnOidHYWJ1IFJlZ2lvbid9LFxuICAgICc3JyA6IHsnY29kZSc6J09JJywnbmFtZSc6J09pbyBSZWdpb24nfSxcbiAgICAnOCcgOiB7J2NvZGUnOidRVScsJ25hbWUnOidRdWluYXJhIFJlZ2lvbid9LFxuICAgICc5JyA6IHsnY29kZSc6J1RPJywnbmFtZSc6J1RvbWJhbGkgUmVnaW9uJ31cbiAgfSxcbiAgJ0dZJzp7XG4gICAgJzEnIDogeydjb2RlJzonQlcnLCduYW1lJzonQmFyaW1hLVdhaW5pJ30sXG4gICAgJzInIDogeydjb2RlJzonQ00nLCduYW1lJzonQ3V5dW5pLU1hemFydW5pJ30sXG4gICAgJzMnIDogeydjb2RlJzonRE0nLCduYW1lJzonRGVtZXJhcmEtTWFoYWljYSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0VDJywnbmFtZSc6J0Vhc3QgQmVyYmljZS1Db3JlbnR5bmUnfSxcbiAgICAnNScgOiB7J2NvZGUnOidFVycsJ25hbWUnOidFc3NlcXVpYm8gSXNsYW5kcy1XZXN0IERlbWVyYXJhJ30sXG4gICAgJzYnIDogeydjb2RlJzonTUInLCduYW1lJzonTWFoYWljYS1CZXJiaWNlJ30sXG4gICAgJzcnIDogeydjb2RlJzonUE0nLCduYW1lJzonUG9tZXJvb24tU3VwZW5hYW0nfSxcbiAgICAnOCcgOiB7J2NvZGUnOidQSScsJ25hbWUnOidQb3Rhcm8tU2lwYXJ1bmknfSxcbiAgICAnOScgOiB7J2NvZGUnOidVRCcsJ25hbWUnOidVcHBlciBEZW1lcmFyYS1CZXJiaWNlJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1VUJywnbmFtZSc6J1VwcGVyIFRha3V0dS1VcHBlciBFc3NlcXVpYm8nfVxuICB9LFxuICAnSFQnOntcbiAgICAnMScgOiB7J2NvZGUnOidBUicsJ25hbWUnOidBcnRpYm9uaXRlJ30sXG4gICAgJzInIDogeydjb2RlJzonQ0UnLCduYW1lJzonQ2VudHJlJ30sXG4gICAgJzMnIDogeydjb2RlJzonR0EnLCduYW1lJzonR3JhbmRcXCdBbnNlJ30sXG4gICAgJzQnIDogeydjb2RlJzonTkQnLCduYW1lJzonTm9yZCd9LFxuICAgICc1JyA6IHsnY29kZSc6J05FJywnbmFtZSc6J05vcmQtRXN0J30sXG4gICAgJzYnIDogeydjb2RlJzonTk8nLCduYW1lJzonTm9yZC1PdWVzdCd9LFxuICAgICc3JyA6IHsnY29kZSc6J09VJywnbmFtZSc6J091ZXN0J30sXG4gICAgJzgnIDogeydjb2RlJzonU0QnLCduYW1lJzonU3VkJ30sXG4gICAgJzknIDogeydjb2RlJzonU0UnLCduYW1lJzonU3VkLUVzdCd9XG4gIH0sXG4gICdITSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0YnLCduYW1lJzonRmxhdCBJc2xhbmQnfSxcbiAgICAnMicgOiB7J2NvZGUnOidNJywnbmFtZSc6J01jRG9uYWxkIElzbGFuZCd9LFxuICAgICczJyA6IHsnY29kZSc6J1MnLCduYW1lJzonU2hhZyBJc2xhbmQnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidIJywnbmFtZSc6J0hlYXJkIElzbGFuZCd9XG4gIH0sXG4gICdITic6e1xuICAgICcxJyA6IHsnY29kZSc6J0FUJywnbmFtZSc6J0F0bGFudGlkYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0NIJywnbmFtZSc6J0Nob2x1dGVjYSd9LFxuICAgICczJyA6IHsnY29kZSc6J0NMJywnbmFtZSc6J0NvbG9uJ30sXG4gICAgJzQnIDogeydjb2RlJzonQ00nLCduYW1lJzonQ29tYXlhZ3VhJ30sXG4gICAgJzUnIDogeydjb2RlJzonQ1AnLCduYW1lJzonQ29wYW4nfSxcbiAgICAnNicgOiB7J2NvZGUnOidDUicsJ25hbWUnOidDb3J0ZXMnfSxcbiAgICAnNycgOiB7J2NvZGUnOidQQScsJ25hbWUnOidFbCBQYXJhaXNvJ30sXG4gICAgJzgnIDogeydjb2RlJzonRk0nLCduYW1lJzonRnJhbmNpc2NvIE1vcmF6YW4nfSxcbiAgICAnOScgOiB7J2NvZGUnOidHRCcsJ25hbWUnOidHcmFjaWFzIGEgRGlvcyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidJTicsJ25hbWUnOidJbnRpYnVjYSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidJQicsJ25hbWUnOidJc2xhcyBkZSBsYSBCYWhpYSAoQmF5IElzbGFuZHMpJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1BaJywnbmFtZSc6J0xhIFBheid9LFxuICAgICcxMycgOiB7J2NvZGUnOidMRScsJ25hbWUnOidMZW1waXJhJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J09DJywnbmFtZSc6J09jb3RlcGVxdWUnfSxcbiAgICAnMTUnIDogeydjb2RlJzonT0wnLCduYW1lJzonT2xhbmNobyd9LFxuICAgICcxNicgOiB7J2NvZGUnOidTQicsJ25hbWUnOidTYW50YSBCYXJiYXJhJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J1ZBJywnbmFtZSc6J1ZhbGxlJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J1lPJywnbmFtZSc6J1lvcm8nfVxuICB9LFxuICAnSEsnOntcbiAgICAnMScgOiB7J2NvZGUnOidIQ1cnLCduYW1lJzonQ2VudHJhbCBhbmQgV2VzdGVybiBIb25nIEtvbmcgSXMnfSxcbiAgICAnMicgOiB7J2NvZGUnOidIRUEnLCduYW1lJzonRWFzdGVybiBIb25nIEtvbmcgSXNsYW5kJ30sXG4gICAgJzMnIDogeydjb2RlJzonSFNPJywnbmFtZSc6J1NvdXRoZXJuIEhvbmcgS29uZyBJc2xhbmQnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidIV0MnLCduYW1lJzonV2FuIENoYWkgSG9uZyBLb25nIElzbGFuZCd9LFxuICAgICc1JyA6IHsnY29kZSc6J0tLQycsJ25hbWUnOidLb3dsb29uIENpdHkgS293bG9vbid9LFxuICAgICc2JyA6IHsnY29kZSc6J0tLVCcsJ25hbWUnOidLd3VuIFRvbmcgS293bG9vbid9LFxuICAgICc3JyA6IHsnY29kZSc6J0tTUycsJ25hbWUnOidTaGFtIFNodWkgUG8gS293bG9vbid9LFxuICAgICc4JyA6IHsnY29kZSc6J0tXVCcsJ25hbWUnOidXb25nIFRhaSBTaW4gS293bG9vbid9LFxuICAgICc5JyA6IHsnY29kZSc6J0tZVCcsJ25hbWUnOidZYXUgVHNpbSBNb25nIEtvd2xvb24nfSxcbiAgICAnMTAnIDogeydjb2RlJzonTklTJywnbmFtZSc6J0lzbGFuZHMgTmV3IFRlcnJpdG9yaWVzJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J05LVCcsJ25hbWUnOidLd2FpIFRzaW5nIE5ldyBUZXJyaXRvcmllcyd9LFxuICAgICcxMicgOiB7J2NvZGUnOidOTk8nLCduYW1lJzonTm9ydGggTmV3IFRlcnJpdG9yaWVzJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J05TSycsJ25hbWUnOidTYWkgS3VuZyBOZXcgVGVycml0b3JpZXMnfSxcbiAgICAnMTQnIDogeydjb2RlJzonTlNUJywnbmFtZSc6J1NoYSBUaW4gTmV3IFRlcnJpdG9yaWVzJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J05UUCcsJ25hbWUnOidUYWkgUG8gTmV3IFRlcnJpdG9yaWVzJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J05UVycsJ25hbWUnOidUc3VlbiBXYW4gTmV3IFRlcnJpdG9yaWVzJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J05UTScsJ25hbWUnOidUdWVuIE11biBOZXcgVGVycml0b3JpZXMnfSxcbiAgICAnMTgnIDogeydjb2RlJzonTllMJywnbmFtZSc6J1l1ZW4gTG9uZyBOZXcgVGVycml0b3JpZXMnfVxuICB9LFxuICAnSFUnOntcbiAgICAnMScgOiB7J2NvZGUnOidCSycsJ25hbWUnOidCYWNzLUtpc2t1bid9LFxuICAgICcyJyA6IHsnY29kZSc6J0JBJywnbmFtZSc6J0JhcmFueWEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidCRScsJ25hbWUnOidCZWtlcyd9LFxuICAgICc0JyA6IHsnY29kZSc6J0JTJywnbmFtZSc6J0Jla2VzY3NhYmEnfSxcbiAgICAnNScgOiB7J2NvZGUnOidCWicsJ25hbWUnOidCb3Jzb2QtQWJhdWotWmVtcGxlbid9LFxuICAgICc2JyA6IHsnY29kZSc6J0JVJywnbmFtZSc6J0J1ZGFwZXN0J30sXG4gICAgJzcnIDogeydjb2RlJzonQ1MnLCduYW1lJzonQ3NvbmdyYWQnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidERScsJ25hbWUnOidEZWJyZWNlbid9LFxuICAgICc5JyA6IHsnY29kZSc6J0RVJywnbmFtZSc6J0R1bmF1anZhcm9zJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0VHJywnbmFtZSc6J0VnZXInfSxcbiAgICAnMTEnIDogeydjb2RlJzonRkUnLCduYW1lJzonRmVqZXInfSxcbiAgICAnMTInIDogeydjb2RlJzonR1knLCduYW1lJzonR3lvcid9LFxuICAgICcxMycgOiB7J2NvZGUnOidHTScsJ25hbWUnOidHeW9yLU1vc29uLVNvcHJvbid9LFxuICAgICcxNCcgOiB7J2NvZGUnOidIQicsJ25hbWUnOidIYWpkdS1CaWhhcid9LFxuICAgICcxNScgOiB7J2NvZGUnOidIRScsJ25hbWUnOidIZXZlcyd9LFxuICAgICcxNicgOiB7J2NvZGUnOidITycsJ25hbWUnOidIb2RtZXpvdmFzYXJoZWx5J30sXG4gICAgJzE3JyA6IHsnY29kZSc6J0pOJywnbmFtZSc6J0phc3otTmFneWt1bi1Tem9sbm9rJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J0tBJywnbmFtZSc6J0thcG9zdmFyJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0tFJywnbmFtZSc6J0tlY3NrZW1ldCd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidLTycsJ25hbWUnOidLb21hcm9tLUVzenRlcmdvbSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidNSScsJ25hbWUnOidNaXNrb2xjJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J05BJywnbmFtZSc6J05hZ3lrYW5penNhJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J05PJywnbmFtZSc6J05vZ3JhZCd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidOWScsJ25hbWUnOidOeWlyZWd5aGF6YSd9LFxuICAgICcyNScgOiB7J2NvZGUnOidQRScsJ25hbWUnOidQZWNzJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6J1BTJywnbmFtZSc6J1Blc3QnfSxcbiAgICAnMjcnIDogeydjb2RlJzonU08nLCduYW1lJzonU29tb2d5J30sXG4gICAgJzI4JyA6IHsnY29kZSc6J1NQJywnbmFtZSc6J1NvcHJvbid9LFxuICAgICcyOScgOiB7J2NvZGUnOidTUycsJ25hbWUnOidTemFib2xjcy1TemF0bWFyLUJlcmVnJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J1NaJywnbmFtZSc6J1N6ZWdlZCd9LFxuICAgICczMScgOiB7J2NvZGUnOidTRScsJ25hbWUnOidTemVrZXNmZWhlcnZhcid9LFxuICAgICczMicgOiB7J2NvZGUnOidTTCcsJ25hbWUnOidTem9sbm9rJ30sXG4gICAgJzMzJyA6IHsnY29kZSc6J1NNJywnbmFtZSc6J1N6b21iYXRoZWx5J30sXG4gICAgJzM0JyA6IHsnY29kZSc6J1RBJywnbmFtZSc6J1RhdGFiYW55YSd9LFxuICAgICczNScgOiB7J2NvZGUnOidUTycsJ25hbWUnOidUb2xuYSd9LFxuICAgICczNicgOiB7J2NvZGUnOidWQScsJ25hbWUnOidWYXMnfSxcbiAgICAnMzcnIDogeydjb2RlJzonVkUnLCduYW1lJzonVmVzenByZW0nfSxcbiAgICAnMzgnIDogeydjb2RlJzonWkEnLCduYW1lJzonWmFsYSd9LFxuICAgICczOScgOiB7J2NvZGUnOidaWicsJ25hbWUnOidaYWxhZWdlcnN6ZWcnfVxuICB9LFxuICAnSVMnOntcbiAgICAnMScgOiB7J2NvZGUnOidBTCcsJ25hbWUnOidBdXN0dXJsYW5kJ30sXG4gICAgJzInIDogeydjb2RlJzonSEYnLCduYW1lJzonSG9mdW9ib3JnYXJzdmFlb2knfSxcbiAgICAnMycgOiB7J2NvZGUnOidORScsJ25hbWUnOidOb3JvdXJsYW5kIGV5c3RyYSd9LFxuICAgICc0JyA6IHsnY29kZSc6J05WJywnbmFtZSc6J05vcm91cmxhbmQgdmVzdHJhJ30sXG4gICAgJzUnIDogeydjb2RlJzonU0wnLCduYW1lJzonU3VvdXJsYW5kJ30sXG4gICAgJzYnIDogeydjb2RlJzonU04nLCduYW1lJzonU3VvdXJuZXMnfSxcbiAgICAnNycgOiB7J2NvZGUnOidWRicsJ25hbWUnOidWZXN0Zmlyb2lyJ30sXG4gICAgJzgnIDogeydjb2RlJzonVkwnLCduYW1lJzonVmVzdHVybGFuZCd9XG4gIH0sXG4gICdJTic6e1xuICAgICcxJyA6IHsnY29kZSc6J0FOJywnbmFtZSc6J0FuZGFtYW4gYW5kIE5pY29iYXIgSXNsYW5kcyd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FQJywnbmFtZSc6J0FuZGhyYSBQcmFkZXNoJ30sXG4gICAgJzMnIDogeydjb2RlJzonQVInLCduYW1lJzonQXJ1bmFjaGFsIFByYWRlc2gnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidBUycsJ25hbWUnOidBc3NhbSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0JJJywnbmFtZSc6J0JpaGFyJ30sXG4gICAgJzYnIDogeydjb2RlJzonQ0gnLCduYW1lJzonQ2hhbmRpZ2FyaCd9LFxuICAgICc3JyA6IHsnY29kZSc6J0RBJywnbmFtZSc6J0RhZHJhIGFuZCBOYWdhciBIYXZlbGknfSxcbiAgICAnOCcgOiB7J2NvZGUnOidETScsJ25hbWUnOidEYW1hbiBhbmQgRGl1J30sXG4gICAgJzknIDogeydjb2RlJzonREUnLCduYW1lJzonRGVsaGknfSxcbiAgICAnMTAnIDogeydjb2RlJzonR08nLCduYW1lJzonR29hJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0dVJywnbmFtZSc6J0d1amFyYXQnfSxcbiAgICAnMTInIDogeydjb2RlJzonSEEnLCduYW1lJzonSGFyeWFuYSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidIUCcsJ25hbWUnOidIaW1hY2hhbCBQcmFkZXNoJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0pBJywnbmFtZSc6J0phbW11IGFuZCBLYXNobWlyJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0tBJywnbmFtZSc6J0thcm5hdGFrYSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidLRScsJ25hbWUnOidLZXJhbGEnfSxcbiAgICAnMTcnIDogeydjb2RlJzonTEknLCduYW1lJzonTGFrc2hhZHdlZXAgSXNsYW5kcyd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidNUCcsJ25hbWUnOidNYWRoeWEgUHJhZGVzaCd9LFxuICAgICcxOScgOiB7J2NvZGUnOidNQScsJ25hbWUnOidNYWhhcmFzaHRyYSd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidNTicsJ25hbWUnOidNYW5pcHVyJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J01FJywnbmFtZSc6J01lZ2hhbGF5YSd9LFxuICAgICcyMicgOiB7J2NvZGUnOidNSScsJ25hbWUnOidNaXpvcmFtJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J05BJywnbmFtZSc6J05hZ2FsYW5kJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J09SJywnbmFtZSc6J09yaXNzYSd9LFxuICAgICcyNScgOiB7J2NvZGUnOidQTycsJ25hbWUnOidQb25kaWNoZXJyeSd9LFxuICAgICcyNicgOiB7J2NvZGUnOidQVScsJ25hbWUnOidQdW5qYWInfSxcbiAgICAnMjcnIDogeydjb2RlJzonUkEnLCduYW1lJzonUmFqYXN0aGFuJ30sXG4gICAgJzI4JyA6IHsnY29kZSc6J1NJJywnbmFtZSc6J1Npa2tpbSd9LFxuICAgICcyOScgOiB7J2NvZGUnOidUTicsJ25hbWUnOidUYW1pbCBOYWR1J30sXG4gICAgJzMwJyA6IHsnY29kZSc6J1RSJywnbmFtZSc6J1RyaXB1cmEnfSxcbiAgICAnMzEnIDogeydjb2RlJzonVVAnLCduYW1lJzonVXR0YXIgUHJhZGVzaCd9LFxuICAgICczMicgOiB7J2NvZGUnOidXQicsJ25hbWUnOidXZXN0IEJlbmdhbCd9XG4gIH0sXG4gICdJRCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0RBJywnbmFtZSc6J0RhaXN0YSBBY2VoJ30sXG4gICAgJzInIDogeydjb2RlJzonU1UnLCduYW1lJzonU3VtYXRlcmEgVXRhcmEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidTQicsJ25hbWUnOidTdW1hdGVyYSBCYXJhdCd9LFxuICAgICc0JyA6IHsnY29kZSc6J1NJJywnbmFtZSc6J1JpYXUnfSxcbiAgICAnNScgOiB7J2NvZGUnOidKQScsJ25hbWUnOidKYW1iaSd9LFxuICAgICc2JyA6IHsnY29kZSc6J1NTJywnbmFtZSc6J1N1bWF0ZXJhIFNlbGF0YW4nfSxcbiAgICAnNycgOiB7J2NvZGUnOidCRScsJ25hbWUnOidCZW5na3VsdSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0xBJywnbmFtZSc6J0xhbXB1bmcnfSxcbiAgICAnOScgOiB7J2NvZGUnOidKSycsJ25hbWUnOidEa2kgSmFrYXJ0YSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidKQicsJ25hbWUnOidKYXdhIEJhcmF0J30sXG4gICAgJzExJyA6IHsnY29kZSc6J0pUJywnbmFtZSc6J0phd2EgVGVuZ2FoJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0RZJywnbmFtZSc6J0RhaXN0YSBZb2d5YWthcnRhJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0pUJywnbmFtZSc6J0phd2EgVGltdXInfSxcbiAgICAnMTQnIDogeydjb2RlJzonS0InLCduYW1lJzonS2FsaW1hbnRhbiBCYXJhdCd9LFxuICAgICcxNScgOiB7J2NvZGUnOidLVCcsJ25hbWUnOidLYWxpbWFudGFuIFRlbmdhaCd9LFxuICAgICcxNicgOiB7J2NvZGUnOidLSScsJ25hbWUnOidLYWxpbWFudGFuIFRpbXVyJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J0tTJywnbmFtZSc6J0thbGltYW50YW4gU2VsYXRhbid9LFxuICAgICcxOCcgOiB7J2NvZGUnOidCQScsJ25hbWUnOidCYWxpJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J05CJywnbmFtZSc6J051c2EgVGVuZ2dhcmEgQmFyYXQnfSxcbiAgICAnMjAnIDogeydjb2RlJzonTlQnLCduYW1lJzonTnVzYSBUZW5nZ2FyYSBUaW11cid9LFxuICAgICcyMScgOiB7J2NvZGUnOidTTicsJ25hbWUnOidTdWxhd2VzaSBTZWxhdGFuJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J1NUJywnbmFtZSc6J1N1bGF3ZXNpIFRlbmdhaCd9LFxuICAgICcyMycgOiB7J2NvZGUnOidTQScsJ25hbWUnOidTdWxhd2VzaSBVdGFyYSd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidTRycsJ25hbWUnOidTdWxhd2VzaSBUZW5nZ2FyYSd9LFxuICAgICcyNScgOiB7J2NvZGUnOidNQScsJ25hbWUnOidNYWx1a3UnfSxcbiAgICAnMjYnIDogeydjb2RlJzonTVUnLCduYW1lJzonTWFsdWt1IFV0YXJhJ30sXG4gICAgJzI3JyA6IHsnY29kZSc6J0lKJywnbmFtZSc6J0lyaWFuIEpheWEgVGltdXInfSxcbiAgICAnMjgnIDogeydjb2RlJzonSVQnLCduYW1lJzonSXJpYW4gSmF5YSBUZW5nYWgnfSxcbiAgICAnMjknIDogeydjb2RlJzonSUInLCduYW1lJzonSXJpYW4gSmF3YSBCYXJhdCd9LFxuICAgICczMCcgOiB7J2NvZGUnOidCVCcsJ25hbWUnOidCYW50ZW4nfSxcbiAgICAnMzEnIDogeydjb2RlJzonQkInLCduYW1lJzonQmFuZ2thIEJlbGl0dW5nJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6J0dPJywnbmFtZSc6J0dvcm9udGFsbyd9XG4gIH0sXG4gICdJUic6e1xuICAgICcxJyA6IHsnY29kZSc6J0FSRCcsJ25hbWUnOidBcmRhYmlsJ30sXG4gICAgJzInIDogeydjb2RlJzonQlNIJywnbmFtZSc6J0J1c2hlaHInfSxcbiAgICAnMycgOiB7J2NvZGUnOidDTUInLCduYW1lJzonQ2hhaGFyIE1haGFhbCBhbmQgQmFraHRpYXJpJ30sXG4gICAgJzQnIDogeydjb2RlJzonRUFaJywnbmFtZSc6J0Vhc3QgQXphcmJhaWphbid9LFxuICAgICc1JyA6IHsnY29kZSc6J0VGSCcsJ25hbWUnOidFc2ZhaGFuJ30sXG4gICAgJzYnIDogeydjb2RlJzonRkFSJywnbmFtZSc6J0ZhcnMnfSxcbiAgICAnNycgOiB7J2NvZGUnOidHSUwnLCduYW1lJzonR2lsYW4nfSxcbiAgICAnOCcgOiB7J2NvZGUnOidHTFMnLCduYW1lJzonR29sZXN0YW4nfSxcbiAgICAnOScgOiB7J2NvZGUnOidITUQnLCduYW1lJzonSGFtYWRhbid9LFxuICAgICcxMCcgOiB7J2NvZGUnOidIUk0nLCduYW1lJzonSG9ybW96Z2FuJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0lMTScsJ25hbWUnOidJbGFtJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0tCQScsJ25hbWUnOidLb2hraWx1eWVoIGFuZCBCdXllciBBaG1hZCd9LFxuICAgICcxMycgOiB7J2NvZGUnOidLUkInLCduYW1lJzonS2VybWFuJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0tSRCcsJ25hbWUnOidLdXJkaXN0YW4nfSxcbiAgICAnMTUnIDogeydjb2RlJzonS1JNJywnbmFtZSc6J0tlcm1hbnNoYWgnfSxcbiAgICAnMTYnIDogeydjb2RlJzonS1pUJywnbmFtZSc6J0todXplc3Rhbid9LFxuICAgICcxNycgOiB7J2NvZGUnOidMUlMnLCduYW1lJzonTG9yZXN0YW4nfSxcbiAgICAnMTgnIDogeydjb2RlJzonTUtaJywnbmFtZSc6J01hcmthemknfSxcbiAgICAnMTknIDogeydjb2RlJzonTVpEJywnbmFtZSc6J01hemFuZGFyYW4nfSxcbiAgICAnMjAnIDogeydjb2RlJzonTktIJywnbmFtZSc6J05vcnRoIEtob3Jhc2FuJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J1FBWicsJ25hbWUnOidRYXp2aW4nfSxcbiAgICAnMjInIDogeydjb2RlJzonUU9NJywnbmFtZSc6J1FvbSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidSS0gnLCduYW1lJzonUmF6YXZpIEtob3Jhc2FuJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J1NCTCcsJ25hbWUnOidTaXN0YW4gYW5kIEJhbHVjaGlzdGFuJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J1NLSCcsJ25hbWUnOidTb3V0aCBLaG9yYXNhbid9LFxuICAgICcyNicgOiB7J2NvZGUnOidTTU4nLCduYW1lJzonU2VtbmFuJ30sXG4gICAgJzI3JyA6IHsnY29kZSc6J1RFSCcsJ25hbWUnOidUZWhyYW4nfSxcbiAgICAnMjgnIDogeydjb2RlJzonV0VaJywnbmFtZSc6J1dlc3QgQXphcmJhaWphbid9LFxuICAgICcyOScgOiB7J2NvZGUnOidZWkQnLCduYW1lJzonWWF6ZCd9LFxuICAgICczMCcgOiB7J2NvZGUnOidaQU4nLCduYW1lJzonWmFuamFuJ31cbiAgfSxcbiAgJ0lRJzp7XG4gICAgJzEnIDogeydjb2RlJzonQUInLCduYW1lJzonQWwgQW5iYXInfSxcbiAgICAnMicgOiB7J2NvZGUnOidBTCcsJ25hbWUnOidBcmJpbCd9LFxuICAgICczJyA6IHsnY29kZSc6J0JBJywnbmFtZSc6J0FsIEJhc3JhaCd9LFxuICAgICc0JyA6IHsnY29kZSc6J0JCJywnbmFtZSc6J0JhYmlsJ30sXG4gICAgJzUnIDogeydjb2RlJzonQkQnLCduYW1lJzonQmFnaGRhZCd9LFxuICAgICc2JyA6IHsnY29kZSc6J0RIJywnbmFtZSc6J0RhaHVrJ30sXG4gICAgJzcnIDogeydjb2RlJzonRFEnLCduYW1lJzonRGhpIFFhcid9LFxuICAgICc4JyA6IHsnY29kZSc6J0RZJywnbmFtZSc6J0RpeWFsYSd9LFxuICAgICc5JyA6IHsnY29kZSc6J0tCJywnbmFtZSc6J0FsIEthcmJhbGEnfSxcbiAgICAnMTAnIDogeydjb2RlJzonTVUnLCduYW1lJzonQWwgTXV0aGFubmEnfSxcbiAgICAnMTEnIDogeydjb2RlJzonTVknLCduYW1lJzonTWF5c2FuJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J05KJywnbmFtZSc6J0FuIE5hamFmJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J05OJywnbmFtZSc6J05pbmF3YSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidRQScsJ25hbWUnOidBbCBRYWRpc3lhaCd9LFxuICAgICcxNScgOiB7J2NvZGUnOidTRCcsJ25hbWUnOidTYWxhaCBhZCBEaW4nfSxcbiAgICAnMTYnIDogeydjb2RlJzonU0wnLCduYW1lJzonQXMgU3VsYXltYW5peWFoJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J1RNJywnbmFtZSc6J0F0IFRhXFwnbWltJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J1dTJywnbmFtZSc6J1dhc2l0J31cbiAgfSxcbiAgJ0lFJzp7XG4gICAgJzEnIDogeydjb2RlJzonQ0EnLCduYW1lJzonQ2FybG93J30sXG4gICAgJzInIDogeydjb2RlJzonQ1YnLCduYW1lJzonQ2F2YW4nfSxcbiAgICAnMycgOiB7J2NvZGUnOidDTCcsJ25hbWUnOidDbGFyZSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0NPJywnbmFtZSc6J0NvcmsnfSxcbiAgICAnNScgOiB7J2NvZGUnOidETycsJ25hbWUnOidEb25lZ2FsJ30sXG4gICAgJzYnIDogeydjb2RlJzonRFUnLCduYW1lJzonRHVibGluJ30sXG4gICAgJzcnIDogeydjb2RlJzonR0EnLCduYW1lJzonR2Fsd2F5J30sXG4gICAgJzgnIDogeydjb2RlJzonS0UnLCduYW1lJzonS2VycnknfSxcbiAgICAnOScgOiB7J2NvZGUnOidLSScsJ25hbWUnOidLaWxkYXJlJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0tMJywnbmFtZSc6J0tpbGtlbm55J30sXG4gICAgJzExJyA6IHsnY29kZSc6J0xBJywnbmFtZSc6J0xhb2lzJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0xFJywnbmFtZSc6J0xlaXRyaW0nfSxcbiAgICAnMTMnIDogeydjb2RlJzonTEknLCduYW1lJzonTGltZXJpY2snfSxcbiAgICAnMTQnIDogeydjb2RlJzonTE8nLCduYW1lJzonTG9uZ2ZvcmQnfSxcbiAgICAnMTUnIDogeydjb2RlJzonTFUnLCduYW1lJzonTG91dGgnfSxcbiAgICAnMTYnIDogeydjb2RlJzonTUEnLCduYW1lJzonTWF5byd9LFxuICAgICcxNycgOiB7J2NvZGUnOidNRScsJ25hbWUnOidNZWF0aCd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidNTycsJ25hbWUnOidNb25hZ2hhbid9LFxuICAgICcxOScgOiB7J2NvZGUnOidPRicsJ25hbWUnOidPZmZhbHknfSxcbiAgICAnMjAnIDogeydjb2RlJzonUk8nLCduYW1lJzonUm9zY29tbW9uJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J1NMJywnbmFtZSc6J1NsaWdvJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J1RJJywnbmFtZSc6J1RpcHBlcmFyeSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidXQScsJ25hbWUnOidXYXRlcmZvcmQnfSxcbiAgICAnMjQnIDogeydjb2RlJzonV0UnLCduYW1lJzonV2VzdG1lYXRoJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J1dYJywnbmFtZSc6J1dleGZvcmQnfSxcbiAgICAnMjYnIDogeydjb2RlJzonV0knLCduYW1lJzonV2lja2xvdyd9XG4gIH0sXG4gICdJTCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0JTJywnbmFtZSc6J0JlXFwnZXIgU2hldmEnfSxcbiAgICAnMicgOiB7J2NvZGUnOidCSCcsJ25hbWUnOidCaWthXFwnYXQgSGF5YXJkZW4nfSxcbiAgICAnMycgOiB7J2NvZGUnOidFQScsJ25hbWUnOidFaWxhdCBhbmQgQXJhdmEnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidHQScsJ25hbWUnOidHYWxpbCd9LFxuICAgICc1JyA6IHsnY29kZSc6J0hBJywnbmFtZSc6J0hhaWZhJ30sXG4gICAgJzYnIDogeydjb2RlJzonSk0nLCduYW1lJzonSmVodWRhIE1vdW50YWlucyd9LFxuICAgICc3JyA6IHsnY29kZSc6J0pFJywnbmFtZSc6J0plcnVzYWxlbSd9LFxuICAgICc4JyA6IHsnY29kZSc6J05FJywnbmFtZSc6J05lZ2V2J30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1NFJywnbmFtZSc6J1NlbWFyaWEnfSxcbiAgICAnMTEnIDogeydjb2RlJzonU0gnLCduYW1lJzonU2hhcm9uJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1RBJywnbmFtZSc6J1RlbCBBdml2IChHb3NoIERhbiknfVxuICB9LFxuICAnSVQnOntcbiAgICAnMScgOiB7J2NvZGUnOidBRycsJ25hbWUnOidBZ3JpZ2VudG8nfSxcbiAgICAnMicgOiB7J2NvZGUnOidBTCcsJ25hbWUnOidBbGVzc2FuZHJpYSd9LFxuICAgICczJyA6IHsnY29kZSc6J0FOJywnbmFtZSc6J0FuY29uYSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0FPJywnbmFtZSc6J0Fvc3RhJ30sXG4gICAgJzUnIDogeydjb2RlJzonQVInLCduYW1lJzonQXJlenpvJ30sXG4gICAgJzYnIDogeydjb2RlJzonQVAnLCduYW1lJzonQXNjb2xpIFBpY2Vubyd9LFxuICAgICc3JyA6IHsnY29kZSc6J0FUJywnbmFtZSc6J0FzdGknfSxcbiAgICAnOCcgOiB7J2NvZGUnOidBVicsJ25hbWUnOidBdmVsbGlubyd9LFxuICAgICc5JyA6IHsnY29kZSc6J0JBJywnbmFtZSc6J0JhcmknfSxcbiAgICAnMTAnIDogeydjb2RlJzonQkwnLCduYW1lJzonQmVsbHVubyd9LFxuICAgICcxMScgOiB7J2NvZGUnOidCTicsJ25hbWUnOidCZW5ldmVudG8nfSxcbiAgICAnMTInIDogeydjb2RlJzonQkcnLCduYW1lJzonQmVyZ2Ftbyd9LFxuICAgICcxMycgOiB7J2NvZGUnOidCSScsJ25hbWUnOidCaWVsbGEnfSxcbiAgICAnMTQnIDogeydjb2RlJzonQk8nLCduYW1lJzonQm9sb2duYSd9LFxuICAgICcxNScgOiB7J2NvZGUnOidCWicsJ25hbWUnOidCb2x6YW5vJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J0JTJywnbmFtZSc6J0JyZXNjaWEnfSxcbiAgICAnMTcnIDogeydjb2RlJzonQlInLCduYW1lJzonQnJpbmRpc2knfSxcbiAgICAnMTgnIDogeydjb2RlJzonQ0EnLCduYW1lJzonQ2FnbGlhcmknfSxcbiAgICAnMTknIDogeydjb2RlJzonQ0wnLCduYW1lJzonQ2FsdGFuaXNzZXR0YSd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidDQicsJ25hbWUnOidDYW1wb2Jhc3NvJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J0NFJywnbmFtZSc6J0Nhc2VydGEnfSxcbiAgICAnMjInIDogeydjb2RlJzonQ1QnLCduYW1lJzonQ2F0YW5pYSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidDWicsJ25hbWUnOidDYXRhbnphcm8nfSxcbiAgICAnMjQnIDogeydjb2RlJzonQ0gnLCduYW1lJzonQ2hpZXRpJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J0NPJywnbmFtZSc6J0NvbW8nfSxcbiAgICAnMjYnIDogeydjb2RlJzonQ1MnLCduYW1lJzonQ29zZW56YSd9LFxuICAgICcyNycgOiB7J2NvZGUnOidDUicsJ25hbWUnOidDcmVtb25hJ30sXG4gICAgJzI4JyA6IHsnY29kZSc6J0tSJywnbmFtZSc6J0Nyb3RvbmUnfSxcbiAgICAnMjknIDogeydjb2RlJzonQ04nLCduYW1lJzonQ3VuZW8nfSxcbiAgICAnMzAnIDogeydjb2RlJzonRU4nLCduYW1lJzonRW5uYSd9LFxuICAgICczMScgOiB7J2NvZGUnOidGRScsJ25hbWUnOidGZXJyYXJhJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6J0ZJJywnbmFtZSc6J0ZpcmVuemUnfSxcbiAgICAnMzMnIDogeydjb2RlJzonRkcnLCduYW1lJzonRm9nZ2lhJ30sXG4gICAgJzM0JyA6IHsnY29kZSc6J0ZPJywnbmFtZSc6J0ZvcmzDrCd9LFxuICAgICczNScgOiB7J2NvZGUnOidGUicsJ25hbWUnOidGcm9zaW5vbmUnfSxcbiAgICAnMzYnIDogeydjb2RlJzonR0UnLCduYW1lJzonR2Vub3ZhJ30sXG4gICAgJzM3JyA6IHsnY29kZSc6J0dPJywnbmFtZSc6J0dvcml6aWEnfSxcbiAgICAnMzgnIDogeydjb2RlJzonR1InLCduYW1lJzonR3Jvc3NldG8nfSxcbiAgICAnMzknIDogeydjb2RlJzonSU0nLCduYW1lJzonSW1wZXJpYSd9LFxuICAgICc0MCcgOiB7J2NvZGUnOidJUycsJ25hbWUnOidJc2VybmlhJ30sXG4gICAgJzQxJyA6IHsnY29kZSc6J0FRJywnbmFtZSc6J0FxdWlsYSd9LFxuICAgICc0MicgOiB7J2NvZGUnOidTUCcsJ25hbWUnOidMYSBTcGV6aWEnfSxcbiAgICAnNDMnIDogeydjb2RlJzonTFQnLCduYW1lJzonTGF0aW5hJ30sXG4gICAgJzQ0JyA6IHsnY29kZSc6J0xFJywnbmFtZSc6J0xlY2NlJ30sXG4gICAgJzQ1JyA6IHsnY29kZSc6J0xDJywnbmFtZSc6J0xlY2NvJ30sXG4gICAgJzQ2JyA6IHsnY29kZSc6J0xJJywnbmFtZSc6J0xpdm9ybm8nfSxcbiAgICAnNDcnIDogeydjb2RlJzonTE8nLCduYW1lJzonTG9kaSd9LFxuICAgICc0OCcgOiB7J2NvZGUnOidMVScsJ25hbWUnOidMdWNjYSd9LFxuICAgICc0OScgOiB7J2NvZGUnOidNQycsJ25hbWUnOidNYWNlcmF0YSd9LFxuICAgICc1MCcgOiB7J2NvZGUnOidNTicsJ25hbWUnOidNYW50b3ZhJ30sXG4gICAgJzUxJyA6IHsnY29kZSc6J01TJywnbmFtZSc6J01hc3NhLUNhcnJhcmEnfSxcbiAgICAnNTInIDogeydjb2RlJzonTVQnLCduYW1lJzonTWF0ZXJhJ30sXG4gICAgJzUzJyA6IHsnY29kZSc6J01FJywnbmFtZSc6J01lc3NpbmEnfSxcbiAgICAnNTQnIDogeydjb2RlJzonTUknLCduYW1lJzonTWlsYW5vJ30sXG4gICAgJzU1JyA6IHsnY29kZSc6J01PJywnbmFtZSc6J01vZGVuYSd9LFxuICAgICc1NicgOiB7J2NvZGUnOidOQScsJ25hbWUnOidOYXBvbGknfSxcbiAgICAnNTcnIDogeydjb2RlJzonTk8nLCduYW1lJzonTm92YXJhJ30sXG4gICAgJzU4JyA6IHsnY29kZSc6J05VJywnbmFtZSc6J051b3JvJ30sXG4gICAgJzU5JyA6IHsnY29kZSc6J09SJywnbmFtZSc6J09yaXN0YW5vJ30sXG4gICAgJzYwJyA6IHsnY29kZSc6J1BEJywnbmFtZSc6J1BhZG92YSd9LFxuICAgICc2MScgOiB7J2NvZGUnOidQQScsJ25hbWUnOidQYWxlcm1vJ30sXG4gICAgJzYyJyA6IHsnY29kZSc6J1BSJywnbmFtZSc6J1Bhcm1hJ30sXG4gICAgJzYzJyA6IHsnY29kZSc6J1BHJywnbmFtZSc6J1BlcnVnaWEnfSxcbiAgICAnNjQnIDogeydjb2RlJzonUFYnLCduYW1lJzonUGF2aWEnfSxcbiAgICAnNjUnIDogeydjb2RlJzonUFUnLCduYW1lJzonUGVzYXJvIFVyYmlubyd9LFxuICAgICc2NicgOiB7J2NvZGUnOidQRScsJ25hbWUnOidQZXNjYXJhJ30sXG4gICAgJzY3JyA6IHsnY29kZSc6J1BDJywnbmFtZSc6J1BpYWNlbnphJ30sXG4gICAgJzY4JyA6IHsnY29kZSc6J1BJJywnbmFtZSc6J1Bpc2EnfSxcbiAgICAnNjknIDogeydjb2RlJzonUFQnLCduYW1lJzonUGlzdG9pYSd9LFxuICAgICc3MCcgOiB7J2NvZGUnOidQTicsJ25hbWUnOidQb3JkZW5vbmUnfSxcbiAgICAnNzEnIDogeydjb2RlJzonUFonLCduYW1lJzonUG90ZW56YSd9LFxuICAgICc3MicgOiB7J2NvZGUnOidQTycsJ25hbWUnOidQcmF0byd9LFxuICAgICc3MycgOiB7J2NvZGUnOidSRycsJ25hbWUnOidSYWd1c2EnfSxcbiAgICAnNzQnIDogeydjb2RlJzonUkEnLCduYW1lJzonUmF2ZW5uYSd9LFxuICAgICc3NScgOiB7J2NvZGUnOidSQycsJ25hbWUnOidSZWdnaW8gQ2FsYWJyaWEnfSxcbiAgICAnNzYnIDogeydjb2RlJzonUkUnLCduYW1lJzonUmVnZ2lvIEVtaWxpYSd9LFxuICAgICc3NycgOiB7J2NvZGUnOidSSScsJ25hbWUnOidSaWV0aSd9LFxuICAgICc3OCcgOiB7J2NvZGUnOidSTicsJ25hbWUnOidSaW1pbmknfSxcbiAgICAnNzknIDogeydjb2RlJzonUk0nLCduYW1lJzonUm9tYSd9LFxuICAgICc4MCcgOiB7J2NvZGUnOidSTycsJ25hbWUnOidSb3ZpZ28nfSxcbiAgICAnODEnIDogeydjb2RlJzonU0EnLCduYW1lJzonU2FsZXJubyd9LFxuICAgICc4MicgOiB7J2NvZGUnOidTUycsJ25hbWUnOidTYXNzYXJpJ30sXG4gICAgJzgzJyA6IHsnY29kZSc6J1NWJywnbmFtZSc6J1Nhdm9uYSd9LFxuICAgICc4NCcgOiB7J2NvZGUnOidTSScsJ25hbWUnOidTaWVuYSd9LFxuICAgICc4NScgOiB7J2NvZGUnOidTUicsJ25hbWUnOidTaXJhY3VzYSd9LFxuICAgICc4NicgOiB7J2NvZGUnOidTTycsJ25hbWUnOidTb25kcmlvJ30sXG4gICAgJzg3JyA6IHsnY29kZSc6J1RBJywnbmFtZSc6J1RhcmFudG8nfSxcbiAgICAnODgnIDogeydjb2RlJzonVEUnLCduYW1lJzonVGVyYW1vJ30sXG4gICAgJzg5JyA6IHsnY29kZSc6J1RSJywnbmFtZSc6J1Rlcm5pJ30sXG4gICAgJzkwJyA6IHsnY29kZSc6J1RPJywnbmFtZSc6J1Rvcmlubyd9LFxuICAgICc5MScgOiB7J2NvZGUnOidUUCcsJ25hbWUnOidUcmFwYW5pJ30sXG4gICAgJzkyJyA6IHsnY29kZSc6J1ROJywnbmFtZSc6J1RyZW50byd9LFxuICAgICc5MycgOiB7J2NvZGUnOidUVicsJ25hbWUnOidUcmV2aXNvJ30sXG4gICAgJzk0JyA6IHsnY29kZSc6J1RTJywnbmFtZSc6J1RyaWVzdGUnfSxcbiAgICAnOTUnIDogeydjb2RlJzonVUQnLCduYW1lJzonVWRpbmUnfSxcbiAgICAnOTYnIDogeydjb2RlJzonVkEnLCduYW1lJzonVmFyZXNlJ30sXG4gICAgJzk3JyA6IHsnY29kZSc6J1ZFJywnbmFtZSc6J1ZlbmV6aWEnfSxcbiAgICAnOTgnIDogeydjb2RlJzonVkInLCduYW1lJzonVmVyYmFuaWEnfSxcbiAgICAnOTknIDogeydjb2RlJzonVkMnLCduYW1lJzonVmVyY2VsbGknfSxcbiAgICAnMTAwJyA6IHsnY29kZSc6J1ZSJywnbmFtZSc6J1Zlcm9uYSd9LFxuICAgICcxMDEnIDogeydjb2RlJzonVlYnLCduYW1lJzonVmlibyBWYWxlbnRpYSd9LFxuICAgICcxMDInIDogeydjb2RlJzonVkknLCduYW1lJzonVmljZW56YSd9LFxuICAgICcxMDMnIDogeydjb2RlJzonVlQnLCduYW1lJzonVml0ZXJibyd9LFxuICAgICcxMDQnIDogeydjb2RlJzonQ0knLCduYW1lJzonQ2FyYm9uaWEtSWdsZXNpYXMnfSxcbiAgICAnMTA1JyA6IHsnY29kZSc6J1ZTJywnbmFtZSc6J01lZGlvIENhbXBpZGFubyd9LFxuICAgICcxMDYnIDogeydjb2RlJzonT0cnLCduYW1lJzonT2dsaWFzdHJhJ30sXG4gICAgJzEwNycgOiB7J2NvZGUnOidPVCcsJ25hbWUnOidPbGJpYS1UZW1waW8nfSxcbiAgICAnMTA4JyA6IHsnY29kZSc6J01CJywnbmFtZSc6J01vbnphIGUgQnJpYW56YSd9LFxuICAgICcxMDknIDogeydjb2RlJzonRk0nLCduYW1lJzonRmVybW8nfSxcbiAgICAnMTEwJyA6IHsnY29kZSc6J0JUJywnbmFtZSc6J0JhcmxldHRhLUFuZHJpYS1UcmFuaSd9XG4gIH0sXG4gICdKTSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0NMQScsJ25hbWUnOidDbGFyZW5kb24gUGFyaXNoJ30sXG4gICAgJzInIDogeydjb2RlJzonSEFOJywnbmFtZSc6J0hhbm92ZXIgUGFyaXNoJ30sXG4gICAgJzMnIDogeydjb2RlJzonS0lOJywnbmFtZSc6J0tpbmdzdG9uIFBhcmlzaCd9LFxuICAgICc0JyA6IHsnY29kZSc6J01BTicsJ25hbWUnOidNYW5jaGVzdGVyIFBhcmlzaCd9LFxuICAgICc1JyA6IHsnY29kZSc6J1BPUicsJ25hbWUnOidQb3J0bGFuZCBQYXJpc2gnfSxcbiAgICAnNicgOiB7J2NvZGUnOidBTkQnLCduYW1lJzonU2FpbnQgQW5kcmV3IFBhcmlzaCd9LFxuICAgICc3JyA6IHsnY29kZSc6J0FOTicsJ25hbWUnOidTYWludCBBbm4gUGFyaXNoJ30sXG4gICAgJzgnIDogeydjb2RlJzonQ0FUJywnbmFtZSc6J1NhaW50IENhdGhlcmluZSBQYXJpc2gnfSxcbiAgICAnOScgOiB7J2NvZGUnOidFTEknLCduYW1lJzonU2FpbnQgRWxpemFiZXRoIFBhcmlzaCd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidKQU0nLCduYW1lJzonU2FpbnQgSmFtZXMgUGFyaXNoJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J01BUicsJ25hbWUnOidTYWludCBNYXJ5IFBhcmlzaCd9LFxuICAgICcxMicgOiB7J2NvZGUnOidUSE8nLCduYW1lJzonU2FpbnQgVGhvbWFzIFBhcmlzaCd9LFxuICAgICcxMycgOiB7J2NvZGUnOidUUkwnLCduYW1lJzonVHJlbGF3bnkgUGFyaXNoJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J1dNTCcsJ25hbWUnOidXZXN0bW9yZWxhbmQgUGFyaXNoJ31cbiAgfSxcbiAgJ0pQJzp7XG4gICAgJzEnIDogeydjb2RlJzonQUknLCduYW1lJzonQWljaGknfSxcbiAgICAnMicgOiB7J2NvZGUnOidBSycsJ25hbWUnOidBa2l0YSd9LFxuICAgICczJyA6IHsnY29kZSc6J0FPJywnbmFtZSc6J0FvbW9yaSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0NIJywnbmFtZSc6J0NoaWJhJ30sXG4gICAgJzUnIDogeydjb2RlJzonRUgnLCduYW1lJzonRWhpbWUnfSxcbiAgICAnNicgOiB7J2NvZGUnOidGSycsJ25hbWUnOidGdWt1aSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0ZVJywnbmFtZSc6J0Z1a3Vva2EnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidGUycsJ25hbWUnOidGdWt1c2hpbWEnfSxcbiAgICAnOScgOiB7J2NvZGUnOidHSScsJ25hbWUnOidHaWZ1J30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0dVJywnbmFtZSc6J0d1bW1hJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0hJJywnbmFtZSc6J0hpcm9zaGltYSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidITycsJ25hbWUnOidIb2trYWlkbyd9LFxuICAgICcxMycgOiB7J2NvZGUnOidIWScsJ25hbWUnOidIeW9nbyd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidJQicsJ25hbWUnOidJYmFyYWtpJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0lTJywnbmFtZSc6J0lzaGlrYXdhJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J0lXJywnbmFtZSc6J0l3YXRlJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J0tBJywnbmFtZSc6J0thZ2F3YSd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidLRycsJ25hbWUnOidLYWdvc2hpbWEnfSxcbiAgICAnMTknIDogeydjb2RlJzonS04nLCduYW1lJzonS2FuYWdhd2EnfSxcbiAgICAnMjAnIDogeydjb2RlJzonS08nLCduYW1lJzonS29jaGknfSxcbiAgICAnMjEnIDogeydjb2RlJzonS1UnLCduYW1lJzonS3VtYW1vdG8nfSxcbiAgICAnMjInIDogeydjb2RlJzonS1knLCduYW1lJzonS3lvdG8nfSxcbiAgICAnMjMnIDogeydjb2RlJzonTUknLCduYW1lJzonTWllJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J01ZJywnbmFtZSc6J01peWFnaSd9LFxuICAgICcyNScgOiB7J2NvZGUnOidNWicsJ25hbWUnOidNaXlhemFraSd9LFxuICAgICcyNicgOiB7J2NvZGUnOidOQScsJ25hbWUnOidOYWdhbm8nfSxcbiAgICAnMjcnIDogeydjb2RlJzonTkcnLCduYW1lJzonTmFnYXNha2knfSxcbiAgICAnMjgnIDogeydjb2RlJzonTlInLCduYW1lJzonTmFyYSd9LFxuICAgICcyOScgOiB7J2NvZGUnOidOSScsJ25hbWUnOidOaWlnYXRhJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J09JJywnbmFtZSc6J09pdGEnfSxcbiAgICAnMzEnIDogeydjb2RlJzonT0snLCduYW1lJzonT2theWFtYSd9LFxuICAgICczMicgOiB7J2NvZGUnOidPTicsJ25hbWUnOidPa2luYXdhJ30sXG4gICAgJzMzJyA6IHsnY29kZSc6J09TJywnbmFtZSc6J09zYWthJ30sXG4gICAgJzM0JyA6IHsnY29kZSc6J1NBJywnbmFtZSc6J1NhZ2EnfSxcbiAgICAnMzUnIDogeydjb2RlJzonU0knLCduYW1lJzonU2FpdGFtYSd9LFxuICAgICczNicgOiB7J2NvZGUnOidTSCcsJ25hbWUnOidTaGlnYSd9LFxuICAgICczNycgOiB7J2NvZGUnOidTTScsJ25hbWUnOidTaGltYW5lJ30sXG4gICAgJzM4JyA6IHsnY29kZSc6J1NaJywnbmFtZSc6J1NoaXp1b2thJ30sXG4gICAgJzM5JyA6IHsnY29kZSc6J1RPJywnbmFtZSc6J1RvY2hpZ2knfSxcbiAgICAnNDAnIDogeydjb2RlJzonVFMnLCduYW1lJzonVG9rdXNoaW1hJ30sXG4gICAgJzQxJyA6IHsnY29kZSc6J1RLJywnbmFtZSc6J1Rva3lvJ30sXG4gICAgJzQyJyA6IHsnY29kZSc6J1RUJywnbmFtZSc6J1RvdHRvcmknfSxcbiAgICAnNDMnIDogeydjb2RlJzonVFknLCduYW1lJzonVG95YW1hJ30sXG4gICAgJzQ0JyA6IHsnY29kZSc6J1dBJywnbmFtZSc6J1dha2F5YW1hJ30sXG4gICAgJzQ1JyA6IHsnY29kZSc6J1lBJywnbmFtZSc6J1lhbWFnYXRhJ30sXG4gICAgJzQ2JyA6IHsnY29kZSc6J1lNJywnbmFtZSc6J1lhbWFndWNoaSd9LFxuICAgICc0NycgOiB7J2NvZGUnOidZTicsJ25hbWUnOidZYW1hbmFzaGknfVxuICB9LFxuICAnSk8nOntcbiAgICAnMScgOiB7J2NvZGUnOidBTScsJ25hbWUnOidcXCdBbW1hbid9LFxuICAgICcyJyA6IHsnY29kZSc6J0FKJywnbmFtZSc6J0FqbHVuJ30sXG4gICAgJzMnIDogeydjb2RlJzonQUEnLCduYW1lJzonQWxcXCdBcWFiYWgnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidBQicsJ25hbWUnOidBbCBCYWxxYVxcJyd9LFxuICAgICc1JyA6IHsnY29kZSc6J0FLJywnbmFtZSc6J0FsIEthcmFrJ30sXG4gICAgJzYnIDogeydjb2RlJzonQUwnLCduYW1lJzonQWwgTWFmcmFxJ30sXG4gICAgJzcnIDogeydjb2RlJzonQVQnLCduYW1lJzonQXQgVGFmaWxhaCd9LFxuICAgICc4JyA6IHsnY29kZSc6J0FaJywnbmFtZSc6J0F6IFphcnFhXFwnJ30sXG4gICAgJzknIDogeydjb2RlJzonSVInLCduYW1lJzonSXJiaWQnfSxcbiAgICAnMTAnIDogeydjb2RlJzonSkEnLCduYW1lJzonSmFyYXNoJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J01BJywnbmFtZSc6J01hXFwnYW4nfSxcbiAgICAnMTInIDogeydjb2RlJzonTUQnLCduYW1lJzonTWFkYWJhJ31cbiAgfSxcbiAgJ0taJzp7XG4gICAgJzEnIDogeydjb2RlJzonQUwnLCduYW1lJzonQWxtYXR5J30sXG4gICAgJzInIDogeydjb2RlJzonQUMnLCduYW1lJzonQWxtYXR5IENpdHknfSxcbiAgICAnMycgOiB7J2NvZGUnOidBTScsJ25hbWUnOidBcW1vbGEnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidBUScsJ25hbWUnOidBcXRvYmUnfSxcbiAgICAnNScgOiB7J2NvZGUnOidBUycsJ25hbWUnOidBc3RhbmEgQ2l0eSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0FUJywnbmFtZSc6J0F0eXJhdSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0JBJywnbmFtZSc6J0JhdHlzIFFhemFxc3Rhbid9LFxuICAgICc4JyA6IHsnY29kZSc6J0JZJywnbmFtZSc6J0JheXFvbmd5ciBDaXR5J30sXG4gICAgJzknIDogeydjb2RlJzonTUEnLCduYW1lJzonTWFuZ2doeXN0YXUnfSxcbiAgICAnMTAnIDogeydjb2RlJzonT04nLCduYW1lJzonT25ndHVzdGlrIFFhemFxc3Rhbid9LFxuICAgICcxMScgOiB7J2NvZGUnOidQQScsJ25hbWUnOidQYXZsb2Rhcid9LFxuICAgICcxMicgOiB7J2NvZGUnOidRQScsJ25hbWUnOidRYXJhZ2hhbmR5J30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1FPJywnbmFtZSc6J1Fvc3RhbmF5J30sXG4gICAgJzE0JyA6IHsnY29kZSc6J1FZJywnbmFtZSc6J1F5enlsb3JkYSd9LFxuICAgICcxNScgOiB7J2NvZGUnOidTSCcsJ25hbWUnOidTaHlnaHlzIFFhemFxc3Rhbid9LFxuICAgICcxNicgOiB7J2NvZGUnOidTTycsJ25hbWUnOidTb2x0dXN0aWsgUWF6YXFzdGFuJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J1pIJywnbmFtZSc6J1poYW1ieWwnfVxuICB9LFxuICAnS0UnOntcbiAgICAnMScgOiB7J2NvZGUnOidDRScsJ25hbWUnOidDZW50cmFsJ30sXG4gICAgJzInIDogeydjb2RlJzonQ08nLCduYW1lJzonQ29hc3QnfSxcbiAgICAnMycgOiB7J2NvZGUnOidFQScsJ25hbWUnOidFYXN0ZXJuJ30sXG4gICAgJzQnIDogeydjb2RlJzonTkEnLCduYW1lJzonTmFpcm9iaSBBcmVhJ30sXG4gICAgJzUnIDogeydjb2RlJzonTkUnLCduYW1lJzonTm9ydGggRWFzdGVybid9LFxuICAgICc2JyA6IHsnY29kZSc6J05ZJywnbmFtZSc6J055YW56YSd9LFxuICAgICc3JyA6IHsnY29kZSc6J1JWJywnbmFtZSc6J1JpZnQgVmFsbGV5J30sXG4gICAgJzgnIDogeydjb2RlJzonV0UnLCduYW1lJzonV2VzdGVybid9XG4gIH0sXG4gICdLSSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FHJywnbmFtZSc6J0FiYWlhbmcnfSxcbiAgICAnMicgOiB7J2NvZGUnOidBTScsJ25hbWUnOidBYmVtYW1hJ30sXG4gICAgJzMnIDogeydjb2RlJzonQUsnLCduYW1lJzonQXJhbnVrYSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0FPJywnbmFtZSc6J0Fyb3JhZSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0JBJywnbmFtZSc6J0JhbmFiYSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0JFJywnbmFtZSc6J0JlcnUnfSxcbiAgICAnNycgOiB7J2NvZGUnOidiVCcsJ25hbWUnOidCdXRhcml0YXJpJ30sXG4gICAgJzgnIDogeydjb2RlJzonS0EnLCduYW1lJzonS2FudG9uJ30sXG4gICAgJzknIDogeydjb2RlJzonS1InLCduYW1lJzonS2lyaXRpbWF0aSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidLVScsJ25hbWUnOidLdXJpYSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidNSScsJ25hbWUnOidNYWlhbmEnfSxcbiAgICAnMTInIDogeydjb2RlJzonTU4nLCduYW1lJzonTWFraW4nfSxcbiAgICAnMTMnIDogeydjb2RlJzonTUUnLCduYW1lJzonTWFyYWtlaSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidOSScsJ25hbWUnOidOaWt1bmF1J30sXG4gICAgJzE1JyA6IHsnY29kZSc6J05PJywnbmFtZSc6J05vbm91dGknfSxcbiAgICAnMTYnIDogeydjb2RlJzonT04nLCduYW1lJzonT25vdG9hJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J1RUJywnbmFtZSc6J1RhYml0ZXVlYSd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidUUicsJ25hbWUnOidUYWJ1YWVyYW4nfSxcbiAgICAnMTknIDogeydjb2RlJzonVE0nLCduYW1lJzonVGFtYW5hJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J1RXJywnbmFtZSc6J1RhcmF3YSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidURScsJ25hbWUnOidUZXJhaW5hJ31cbiAgfSxcbiAgJ0tQJzp7XG4gICAgJzEnIDogeydjb2RlJzonQ0hBJywnbmFtZSc6J0NoYWdhbmctZG8nfSxcbiAgICAnMicgOiB7J2NvZGUnOidIQUInLCduYW1lJzonSGFtZ3lvbmctYnVrdG8nfSxcbiAgICAnMycgOiB7J2NvZGUnOidIQU4nLCduYW1lJzonSGFtZ3lvbmctbmFtZG8nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidIV0InLCduYW1lJzonSHdhbmdoYWUtYnVrdG8nfSxcbiAgICAnNScgOiB7J2NvZGUnOidIV04nLCduYW1lJzonSHdhbmdoYWUtbmFtZG8nfSxcbiAgICAnNicgOiB7J2NvZGUnOidLQU4nLCduYW1lJzonS2FuZ3dvbi1kbyd9LFxuICAgICc3JyA6IHsnY29kZSc6J1BZQicsJ25hbWUnOidQXFwneW9uZ2FuLWJ1a3RvJ30sXG4gICAgJzgnIDogeydjb2RlJzonUFlOJywnbmFtZSc6J1BcXCd5b25nYW4tbmFtZG8nfSxcbiAgICAnOScgOiB7J2NvZGUnOidZQU4nLCduYW1lJzonUnlhbmdnYW5nLWRvIChZYW5nZ2FuZy1kbyknfSxcbiAgICAnMTAnIDogeydjb2RlJzonTkFKJywnbmFtZSc6J1Jhc29uIERpcmVjdGx5IEdvdmVybmVkIENpdHknfSxcbiAgICAnMTEnIDogeydjb2RlJzonUFlPJywnbmFtZSc6J1BcXCd5b25neWFuZyBTcGVjaWFsIENpdHknfVxuICB9LFxuICAnS1InOntcbiAgICAnMScgOiB7J2NvZGUnOidDTycsJ25hbWUnOidDaFxcJ3VuZ2NoXFwnb25nLWJ1a3RvJ30sXG4gICAgJzInIDogeydjb2RlJzonQ0gnLCduYW1lJzonQ2hcXCd1bmdjaFxcJ29uZy1uYW1kbyd9LFxuICAgICczJyA6IHsnY29kZSc6J0NEJywnbmFtZSc6J0NoZWp1LWRvJ30sXG4gICAgJzQnIDogeydjb2RlJzonQ0InLCduYW1lJzonQ2hvbGxhLWJ1a3RvJ30sXG4gICAgJzUnIDogeydjb2RlJzonQ04nLCduYW1lJzonQ2hvbGxhLW5hbWRvJ30sXG4gICAgJzYnIDogeydjb2RlJzonSUcnLCduYW1lJzonSW5jaFxcJ29uLWd3YW5neW9rc2knfSxcbiAgICAnNycgOiB7J2NvZGUnOidLQScsJ25hbWUnOidLYW5nd29uLWRvJ30sXG4gICAgJzgnIDogeydjb2RlJzonS0cnLCduYW1lJzonS3dhbmdqdS1nd2FuZ3lva3NpJ30sXG4gICAgJzknIDogeydjb2RlJzonS0QnLCduYW1lJzonS3lvbmdnaS1kbyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidLQicsJ25hbWUnOidLeW9uZ3NhbmctYnVrdG8nfSxcbiAgICAnMTEnIDogeydjb2RlJzonS04nLCduYW1lJzonS3lvbmdzYW5nLW5hbWRvJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1BHJywnbmFtZSc6J1B1c2FuLWd3YW5neW9rc2knfSxcbiAgICAnMTMnIDogeydjb2RlJzonU08nLCduYW1lJzonU291bC10XFwndWtweW9sc2knfSxcbiAgICAnMTQnIDogeydjb2RlJzonVEEnLCduYW1lJzonVGFlZ3UtZ3dhbmd5b2tzaSd9LFxuICAgICcxNScgOiB7J2NvZGUnOidURycsJ25hbWUnOidUYWVqb24tZ3dhbmd5b2tzaSd9XG4gIH0sXG4gICdLVyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FMJywnbmFtZSc6J0FsXFwnQXNpbWFoJ30sXG4gICAgJzInIDogeydjb2RlJzonQUEnLCduYW1lJzonQWwgQWhtYWRpJ30sXG4gICAgJzMnIDogeydjb2RlJzonQUYnLCduYW1lJzonQWwgRmFyd2FuaXlhaCd9LFxuICAgICc0JyA6IHsnY29kZSc6J0FKJywnbmFtZSc6J0FsIEphaHJhXFwnJ30sXG4gICAgJzUnIDogeydjb2RlJzonSEEnLCduYW1lJzonSGF3YWxsaSd9XG4gIH0sXG4gICdLRyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0dCJywnbmFtZSc6J0Jpc2hrZWsnfSxcbiAgICAnMicgOiB7J2NvZGUnOidCJywnbmFtZSc6J0JhdGtlbid9LFxuICAgICczJyA6IHsnY29kZSc6J0MnLCduYW1lJzonQ2h1J30sXG4gICAgJzQnIDogeydjb2RlJzonSicsJ25hbWUnOidKYWxhbC1BYmFkJ30sXG4gICAgJzUnIDogeydjb2RlJzonTicsJ25hbWUnOidOYXJ5bid9LFxuICAgICc2JyA6IHsnY29kZSc6J08nLCduYW1lJzonT3NoJ30sXG4gICAgJzcnIDogeydjb2RlJzonVCcsJ25hbWUnOidUYWxhcyd9LFxuICAgICc4JyA6IHsnY29kZSc6J1knLCduYW1lJzonWXN5ay1Lb2wnfVxuICB9LFxuICAnTEEnOntcbiAgICAnMScgOiB7J2NvZGUnOidWVCcsJ25hbWUnOidWaWVudGlhbmUnfSxcbiAgICAnMicgOiB7J2NvZGUnOidBVCcsJ25hbWUnOidBdHRhcHUnfSxcbiAgICAnMycgOiB7J2NvZGUnOidCSycsJ25hbWUnOidCb2tlbyd9LFxuICAgICc0JyA6IHsnY29kZSc6J0JMJywnbmFtZSc6J0JvbGlraGFteGFpJ30sXG4gICAgJzUnIDogeydjb2RlJzonQ0gnLCduYW1lJzonQ2hhbXBhc2FrJ30sXG4gICAgJzYnIDogeydjb2RlJzonSE8nLCduYW1lJzonSG91YXBoYW4nfSxcbiAgICAnNycgOiB7J2NvZGUnOidLSCcsJ25hbWUnOidLaGFtbW91YW4nfSxcbiAgICAnOCcgOiB7J2NvZGUnOidMTScsJ25hbWUnOidMb3VhbmcgTmFtdGhhJ30sXG4gICAgJzknIDogeydjb2RlJzonTFAnLCduYW1lJzonTG91YW5ncGhhYmFuZyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidPVScsJ25hbWUnOidPdWRvbXhhaSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidQSCcsJ25hbWUnOidQaG9uZ3NhbGknfSxcbiAgICAnMTInIDogeydjb2RlJzonU0wnLCduYW1lJzonU2FsYXZhbid9LFxuICAgICcxMycgOiB7J2NvZGUnOidTVicsJ25hbWUnOidTYXZhbm5ha2hldCd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidWSScsJ25hbWUnOidWaWVudGlhbmUnfSxcbiAgICAnMTUnIDogeydjb2RlJzonWEEnLCduYW1lJzonWGFpZ25hYm91bGknfSxcbiAgICAnMTYnIDogeydjb2RlJzonWEUnLCduYW1lJzonWGVrb25nJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J1hJJywnbmFtZSc6J1hpYW5na2hvYW5nJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J1hOJywnbmFtZSc6J1hhaXNvbWJvdW4nfVxuICB9LFxuICAnTFYnOntcbiAgICAnMScgOiB7J2NvZGUnOidBSVonLCduYW1lJzonQWl6a3JhdWtsZXMgUmFqb25zJ30sXG4gICAgJzInIDogeydjb2RlJzonQUxVJywnbmFtZSc6J0FsdWtzbmVzIFJham9ucyd9LFxuICAgICczJyA6IHsnY29kZSc6J0JBTCcsJ25hbWUnOidCYWx2dSBSYWpvbnMnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidCQVUnLCduYW1lJzonQmF1c2thcyBSYWpvbnMnfSxcbiAgICAnNScgOiB7J2NvZGUnOidDRVMnLCduYW1lJzonQ2VzdSBSYWpvbnMnfSxcbiAgICAnNicgOiB7J2NvZGUnOidER1InLCduYW1lJzonRGF1Z2F2cGlscyBSYWpvbnMnfSxcbiAgICAnNycgOiB7J2NvZGUnOidET0InLCduYW1lJzonRG9iZWxlcyBSYWpvbnMnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidHVUwnLCduYW1lJzonR3VsYmVuZXMgUmFqb25zJ30sXG4gICAgJzknIDogeydjb2RlJzonSkVLJywnbmFtZSc6J0pla2FicGlscyBSYWpvbnMnfSxcbiAgICAnMTAnIDogeydjb2RlJzonSkdSJywnbmFtZSc6J0plbGdhdmFzIFJham9ucyd9LFxuICAgICcxMScgOiB7J2NvZGUnOidLUkEnLCduYW1lJzonS3Jhc2xhdmFzIFJham9ucyd9LFxuICAgICcxMicgOiB7J2NvZGUnOidLVUwnLCduYW1lJzonS3VsZGlnYXMgUmFqb25zJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0xQUicsJ25hbWUnOidMaWVwYWphcyBSYWpvbnMnfSxcbiAgICAnMTQnIDogeydjb2RlJzonTElNJywnbmFtZSc6J0xpbWJhenUgUmFqb25zJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0xVRCcsJ25hbWUnOidMdWR6YXMgUmFqb25zJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J01BRCcsJ25hbWUnOidNYWRvbmFzIFJham9ucyd9LFxuICAgICcxNycgOiB7J2NvZGUnOidPR1InLCduYW1lJzonT2dyZXMgUmFqb25zJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J1BSRScsJ25hbWUnOidQcmVpbHUgUmFqb25zJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J1JaUicsJ25hbWUnOidSZXpla25lcyBSYWpvbnMnfSxcbiAgICAnMjAnIDogeydjb2RlJzonUkdSJywnbmFtZSc6J1JpZ2FzIFJham9ucyd9LFxuICAgICcyMScgOiB7J2NvZGUnOidTQUwnLCduYW1lJzonU2FsZHVzIFJham9ucyd9LFxuICAgICcyMicgOiB7J2NvZGUnOidUQUwnLCduYW1lJzonVGFsc3UgUmFqb25zJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J1RVSycsJ25hbWUnOidUdWt1bWEgUmFqb25zJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J1ZMSycsJ25hbWUnOidWYWxrYXMgUmFqb25zJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J1ZMTScsJ25hbWUnOidWYWxtaWVyYXMgUmFqb25zJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6J1ZTUicsJ25hbWUnOidWZW50c3BpbHMgUmFqb25zJ30sXG4gICAgJzI3JyA6IHsnY29kZSc6J0RHVicsJ25hbWUnOidEYXVnYXZwaWxzJ30sXG4gICAgJzI4JyA6IHsnY29kZSc6J0pHVicsJ25hbWUnOidKZWxnYXZhJ30sXG4gICAgJzI5JyA6IHsnY29kZSc6J0pVUicsJ25hbWUnOidKdXJtYWxhJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J0xQSycsJ25hbWUnOidMaWVwYWphJ30sXG4gICAgJzMxJyA6IHsnY29kZSc6J1JaSycsJ25hbWUnOidSZXpla25lJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6J1JHQScsJ25hbWUnOidSaWdhJ30sXG4gICAgJzMzJyA6IHsnY29kZSc6J1ZTTCcsJ25hbWUnOidWZW50c3BpbHMnfVxuICB9LFxuICAnTEInOntcbiAgICAnMScgOiB7J2NvZGUnOidCSU4nLCduYW1lJzonQmludCBKYmVpbCd9LFxuICAgICcyJyA6IHsnY29kZSc6J0hBUycsJ25hbWUnOidIYXNiYXlhJ30sXG4gICAgJzMnIDogeydjb2RlJzonTUFSJywnbmFtZSc6J01hcmpleW91bid9LFxuICAgICc0JyA6IHsnY29kZSc6J05BQicsJ25hbWUnOidOYWJhdGllaCd9LFxuICAgICc1JyA6IHsnY29kZSc6J0JBQScsJ25hbWUnOidCYWFsYmVrJ30sXG4gICAgJzYnIDogeydjb2RlJzonSEVSJywnbmFtZSc6J0hlcm1lbCd9LFxuICAgICc3JyA6IHsnY29kZSc6J1JBUycsJ25hbWUnOidSYXNoYXlhJ30sXG4gICAgJzgnIDogeydjb2RlJzonV0VTJywnbmFtZSc6J1dlc3Rlcm4gQmVxYWEnfSxcbiAgICAnOScgOiB7J2NvZGUnOidaQUgnLCduYW1lJzonWmFobGUnfSxcbiAgICAnMTAnIDogeydjb2RlJzonQUtLJywnbmFtZSc6J0Fra2FyJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0JBVCcsJ25hbWUnOidCYXRyb3VuJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0JTSCcsJ25hbWUnOidCc2hhcnJpJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0tPVScsJ25hbWUnOidLb3VyYSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidNSU4nLCduYW1lJzonTWluaXllaC1EYW5uaXllaCd9LFxuICAgICcxNScgOiB7J2NvZGUnOidUUkknLCduYW1lJzonVHJpcG9saSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidaR0gnLCduYW1lJzonWmdoYXJ0YSd9LFxuICAgICcxNycgOiB7J2NvZGUnOidBTEUnLCduYW1lJzonQWxleSd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidCQUEnLCduYW1lJzonQmFhYmRhJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0JZQicsJ25hbWUnOidCeWJsb3MnfSxcbiAgICAnMjAnIDogeydjb2RlJzonQ0hPJywnbmFtZSc6J0Nob3VmJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J0tFUycsJ25hbWUnOidLZXNyd2FuJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J01BVCcsJ25hbWUnOidNYXRuJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J0pFWicsJ25hbWUnOidKZXp6aW5lJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J1NJRCcsJ25hbWUnOidTaWRvbid9LFxuICAgICcyNScgOiB7J2NvZGUnOidUWVInLCduYW1lJzonVHlyZSd9XG4gIH0sXG4gICdMUyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0JFJywnbmFtZSc6J0JlcmVhJ30sXG4gICAgJzInIDogeydjb2RlJzonQkInLCduYW1lJzonQnV0aGEtQnV0aGUnfSxcbiAgICAnMycgOiB7J2NvZGUnOidMRScsJ25hbWUnOidMZXJpYmUnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidNRicsJ25hbWUnOidNYWZldGVuZyd9LFxuICAgICc1JyA6IHsnY29kZSc6J01TJywnbmFtZSc6J01hc2VydSd9LFxuICAgICc2JyA6IHsnY29kZSc6J01IJywnbmFtZSc6J01vaGFsZVxcJ3MgSG9layd9LFxuICAgICc3JyA6IHsnY29kZSc6J01LJywnbmFtZSc6J01va2hvdGxvbmcnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidRTicsJ25hbWUnOidRYWNoYVxcJ3MgTmVrJ30sXG4gICAgJzknIDogeydjb2RlJzonUVQnLCduYW1lJzonUXV0aGluZyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidUVCcsJ25hbWUnOidUaGFiYS1Uc2VrYSd9XG4gIH0sXG4gICdMUic6e1xuICAgICcxJyA6IHsnY29kZSc6J0JJJywnbmFtZSc6J0JvbWknfSxcbiAgICAnMicgOiB7J2NvZGUnOidCRycsJ25hbWUnOidCb25nJ30sXG4gICAgJzMnIDogeydjb2RlJzonR0InLCduYW1lJzonR3JhbmQgQmFzc2EnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidDTScsJ25hbWUnOidHcmFuZCBDYXBlIE1vdW50J30sXG4gICAgJzUnIDogeydjb2RlJzonR0cnLCduYW1lJzonR3JhbmQgR2VkZWgnfSxcbiAgICAnNicgOiB7J2NvZGUnOidHSycsJ25hbWUnOidHcmFuZCBLcnUnfSxcbiAgICAnNycgOiB7J2NvZGUnOidMTycsJ25hbWUnOidMb2ZhJ30sXG4gICAgJzgnIDogeydjb2RlJzonTUcnLCduYW1lJzonTWFyZ2liaSd9LFxuICAgICc5JyA6IHsnY29kZSc6J01MJywnbmFtZSc6J01hcnlsYW5kJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J01TJywnbmFtZSc6J01vbnRzZXJyYWRvJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J05CJywnbmFtZSc6J05pbWJhJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1JDJywnbmFtZSc6J1JpdmVyIENlc3MnfSxcbiAgICAnMTMnIDogeydjb2RlJzonU04nLCduYW1lJzonU2lub2UnfVxuICB9LFxuICAnTFknOntcbiAgICAnMScgOiB7J2NvZGUnOidBSicsJ25hbWUnOidBamRhYml5YSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FaJywnbmFtZSc6J0FsIFxcJ0F6aXppeWFoJ30sXG4gICAgJzMnIDogeydjb2RlJzonRkEnLCduYW1lJzonQWwgRmF0aWgnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidKQScsJ25hbWUnOidBbCBKYWJhbCBhbCBBa2hkYXInfSxcbiAgICAnNScgOiB7J2NvZGUnOidKVScsJ25hbWUnOidBbCBKdWZyYWgnfSxcbiAgICAnNicgOiB7J2NvZGUnOidLSCcsJ25hbWUnOidBbCBLaHVtcyd9LFxuICAgICc3JyA6IHsnY29kZSc6J0tVJywnbmFtZSc6J0FsIEt1ZnJhaCd9LFxuICAgICc4JyA6IHsnY29kZSc6J05LJywnbmFtZSc6J0FuIE51cWF0IGFsIEtoYW1zJ30sXG4gICAgJzknIDogeydjb2RlJzonQVMnLCduYW1lJzonQXNoIFNoYXRpXFwnJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0FXJywnbmFtZSc6J0F3YmFyaSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidaQScsJ25hbWUnOidBeiBaYXdpeWFoJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0JBJywnbmFtZSc6J0JhbmdoYXppJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0RBJywnbmFtZSc6J0Rhcm5haCd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidHRCcsJ25hbWUnOidHaGFkYW1pcyd9LFxuICAgICcxNScgOiB7J2NvZGUnOidHWScsJ25hbWUnOidHaGFyeWFuJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J01JJywnbmFtZSc6J01pc3JhdGFoJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J01aJywnbmFtZSc6J011cnp1cSd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidTQicsJ25hbWUnOidTYWJoYSd9LFxuICAgICcxOScgOiB7J2NvZGUnOidTVycsJ25hbWUnOidTYXdmYWpqaW4nfSxcbiAgICAnMjAnIDogeydjb2RlJzonU1UnLCduYW1lJzonU3VydCd9LFxuICAgICcyMScgOiB7J2NvZGUnOidUTCcsJ25hbWUnOidUYXJhYnVsdXMgKFRyaXBvbGkpJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J1RIJywnbmFtZSc6J1Rhcmh1bmFoJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J1RVJywnbmFtZSc6J1R1YnJ1cSd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidZQScsJ25hbWUnOidZYWZyYW4nfSxcbiAgICAnMjUnIDogeydjb2RlJzonWkwnLCduYW1lJzonWmxpdGFuJ31cbiAgfSxcbiAgJ0xJJzp7XG4gICAgJzEnIDogeydjb2RlJzonVicsJ25hbWUnOidWYWR1eid9LFxuICAgICcyJyA6IHsnY29kZSc6J0EnLCduYW1lJzonU2NoYWFuJ30sXG4gICAgJzMnIDogeydjb2RlJzonQicsJ25hbWUnOidCYWx6ZXJzJ30sXG4gICAgJzQnIDogeydjb2RlJzonTicsJ25hbWUnOidUcmllc2VuJ30sXG4gICAgJzUnIDogeydjb2RlJzonRScsJ25hbWUnOidFc2NoZW4nfSxcbiAgICAnNicgOiB7J2NvZGUnOidNJywnbmFtZSc6J01hdXJlbid9LFxuICAgICc3JyA6IHsnY29kZSc6J1QnLCduYW1lJzonVHJpZXNlbmJlcmcnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidSJywnbmFtZSc6J1J1Z2dlbGwnfSxcbiAgICAnOScgOiB7J2NvZGUnOidHJywnbmFtZSc6J0dhbXByaW4nfSxcbiAgICAnMTAnIDogeydjb2RlJzonTCcsJ25hbWUnOidTY2hlbGxlbmJlcmcnfSxcbiAgICAnMTEnIDogeydjb2RlJzonUCcsJ25hbWUnOidQbGFua2VuJ31cbiAgfSxcbiAgJ0xUJzp7XG4gICAgJzEnIDogeydjb2RlJzonQUwnLCduYW1lJzonQWx5dHVzJ30sXG4gICAgJzInIDogeydjb2RlJzonS0EnLCduYW1lJzonS2F1bmFzJ30sXG4gICAgJzMnIDogeydjb2RlJzonS0wnLCduYW1lJzonS2xhaXBlZGEnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidNQScsJ25hbWUnOidNYXJpamFtcG9sZSd9LFxuICAgICc1JyA6IHsnY29kZSc6J1BBJywnbmFtZSc6J1BhbmV2ZXp5cyd9LFxuICAgICc2JyA6IHsnY29kZSc6J1NJJywnbmFtZSc6J1NpYXVsaWFpJ30sXG4gICAgJzcnIDogeydjb2RlJzonVEEnLCduYW1lJzonVGF1cmFnZSd9LFxuICAgICc4JyA6IHsnY29kZSc6J1RFJywnbmFtZSc6J1RlbHNpYWknfSxcbiAgICAnOScgOiB7J2NvZGUnOidVVCcsJ25hbWUnOidVdGVuYSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidWSScsJ25hbWUnOidWaWxuaXVzJ31cbiAgfSxcbiAgJ0xVJzp7XG4gICAgJzEnIDogeydjb2RlJzonREQnLCduYW1lJzonRGlla2lyY2gnfSxcbiAgICAnMicgOiB7J2NvZGUnOidEQycsJ25hbWUnOidDbGVydmF1eCd9LFxuICAgICczJyA6IHsnY29kZSc6J0RSJywnbmFtZSc6J1JlZGFuZ2UnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidEVicsJ25hbWUnOidWaWFuZGVuJ30sXG4gICAgJzUnIDogeydjb2RlJzonRFcnLCduYW1lJzonV2lsdHonfSxcbiAgICAnNicgOiB7J2NvZGUnOidHRycsJ25hbWUnOidHcmV2ZW5tYWNoZXInfSxcbiAgICAnNycgOiB7J2NvZGUnOidHRScsJ25hbWUnOidFY2h0ZXJuYWNoJ30sXG4gICAgJzgnIDogeydjb2RlJzonR1InLCduYW1lJzonUmVtaWNoJ30sXG4gICAgJzknIDogeydjb2RlJzonTEwnLCduYW1lJzonTHV4ZW1ib3VyZyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidMQycsJ25hbWUnOidDYXBlbGxlbid9LFxuICAgICcxMScgOiB7J2NvZGUnOidMRScsJ25hbWUnOidFc2NoLXN1ci1BbHpldHRlJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0xNJywnbmFtZSc6J01lcnNjaCd9XG4gIH0sXG4gICdNTyc6e1xuICAgICcxJyA6IHsnY29kZSc6J09MRicsJ25hbWUnOidPdXIgTGFkeSBGYXRpbWEgUGFyaXNoJ30sXG4gICAgJzInIDogeydjb2RlJzonQU5UJywnbmFtZSc6J1N0LiBBbnRob255IFBhcmlzaCd9LFxuICAgICczJyA6IHsnY29kZSc6J0xBWicsJ25hbWUnOidTdC4gTGF6YXJ1cyBQYXJpc2gnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidDQVQnLCduYW1lJzonQ2F0aGVkcmFsIFBhcmlzaCd9LFxuICAgICc1JyA6IHsnY29kZSc6J0xBVycsJ25hbWUnOidTdC4gTGF3cmVuY2UgUGFyaXNoJ31cbiAgfSxcbiAgJ01LJzp7XG4gICAgJzEnIDogeydjb2RlJzonQUVSJywnbmFtZSc6J0Flcm9kcm9tJ30sXG4gICAgJzInIDogeydjb2RlJzonQVJBJywnbmFtZSc6J0FyYcSNaW5vdm8nfSxcbiAgICAnMycgOiB7J2NvZGUnOidCRVInLCduYW1lJzonQmVyb3ZvJ30sXG4gICAgJzQnIDogeydjb2RlJzonQklUJywnbmFtZSc6J0JpdG9sYSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0JPRycsJ25hbWUnOidCb2dkYW5jaSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0JPRycsJ25hbWUnOidCb2dvdmluamUnfSxcbiAgICAnNycgOiB7J2NvZGUnOidCT1MnLCduYW1lJzonQm9zaWxvdm8nfSxcbiAgICAnOCcgOiB7J2NvZGUnOidCUlYnLCduYW1lJzonQnJ2ZW5pY2EnfSxcbiAgICAnOScgOiB7J2NvZGUnOidCVVQnLCduYW1lJzonQnV0ZWwnfSxcbiAgICAnMTAnIDogeydjb2RlJzonxIxBSScsJ25hbWUnOifEjGFpcid9LFxuICAgICcxMScgOiB7J2NvZGUnOifEjEHFoScsJ25hbWUnOifEjGHFoWthJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0NFTicsJ25hbWUnOidDZW50YXInfSxcbiAgICAnMTMnIDogeydjb2RlJzonQ0VOJywnbmFtZSc6J0NlbnRhciDFvXVwYSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOifEjGXFoScsJ25hbWUnOifEjGXFoWlub3ZvLU9ibGXFoSd9LFxuICAgICcxNScgOiB7J2NvZGUnOifEjFXEjCcsJ25hbWUnOifEjHXEjWVyLVNhbmRldm8nfSxcbiAgICAnMTYnIDogeydjb2RlJzonREVCJywnbmFtZSc6J0RlYmFyJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J0RFQicsJ25hbWUnOidEZWJhcmNhJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J0RFTCcsJ25hbWUnOidEZWzEjWV2byd9LFxuICAgICcxOScgOiB7J2NvZGUnOidERU0nLCduYW1lJzonRGVtaXIgSGlzYXInfSxcbiAgICAnMjAnIDogeydjb2RlJzonREVNJywnbmFtZSc6J0RlbWlyIEthcGlqYSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidET0wnLCduYW1lJzonRG9sbmVuaSd9LFxuICAgICcyMicgOiB7J2NvZGUnOidEUlUnLCduYW1lJzonRHJ1Z292byd9LFxuICAgICcyMycgOiB7J2NvZGUnOidHQVonLCduYW1lJzonR2F6aSBCYWJhJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J0dFVicsJ25hbWUnOidHZXZnZWxpamEnfSxcbiAgICAnMjUnIDogeydjb2RlJzonR0pPJywnbmFtZSc6J0dqb3LEjWUgUGV0cm92J30sXG4gICAgJzI2JyA6IHsnY29kZSc6J0dPUycsJ25hbWUnOidHb3N0aXZhcid9LFxuICAgICcyNycgOiB7J2NvZGUnOidHUkEnLCduYW1lJzonR3JhZHNrbyd9LFxuICAgICcyOCcgOiB7J2NvZGUnOidJTEknLCduYW1lJzonSWxpbmRlbid9LFxuICAgICcyOScgOiB7J2NvZGUnOidKRUcnLCduYW1lJzonSmVndW5vdmNlJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J0tBUicsJ25hbWUnOidLYXJiaW5jaSd9LFxuICAgICczMScgOiB7J2NvZGUnOidLQVInLCduYW1lJzonS2FycG/FoSd9LFxuICAgICczMicgOiB7J2NvZGUnOidLQVYnLCduYW1lJzonS2F2YWRhcmNpJ30sXG4gICAgJzMzJyA6IHsnY29kZSc6J0tJxIwnLCduYW1lJzonS2nEjWV2byd9LFxuICAgICczNCcgOiB7J2NvZGUnOidLSVMnLCduYW1lJzonS2lzZWxhIFZvZGEnfSxcbiAgICAnMzUnIDogeydjb2RlJzonS0/EjScsJ25hbWUnOidLb8SNYW5pJ30sXG4gICAgJzM2JyA6IHsnY29kZSc6J0tPTicsJ25hbWUnOidLb27EjWUnfSxcbiAgICAnMzcnIDogeydjb2RlJzonS1JBJywnbmFtZSc6J0tyYXRvdm8nfSxcbiAgICAnMzgnIDogeydjb2RlJzonS1JJJywnbmFtZSc6J0tyaXZhIFBhbGFua2EnfSxcbiAgICAnMzknIDogeydjb2RlJzonS1JJJywnbmFtZSc6J0tyaXZvZ2HFoXRhbmknfSxcbiAgICAnNDAnIDogeydjb2RlJzonS1JVJywnbmFtZSc6J0tydcWhZXZvJ30sXG4gICAgJzQxJyA6IHsnY29kZSc6J0tVTScsJ25hbWUnOidLdW1hbm92byd9LFxuICAgICc0MicgOiB7J2NvZGUnOidMSVAnLCduYW1lJzonTGlwa292byd9LFxuICAgICc0MycgOiB7J2NvZGUnOidMT1onLCduYW1lJzonTG96b3ZvJ30sXG4gICAgJzQ0JyA6IHsnY29kZSc6J01BSycsJ25hbWUnOidNYWtlZG9uc2thIEthbWVuaWNhJ30sXG4gICAgJzQ1JyA6IHsnY29kZSc6J01BSycsJ25hbWUnOidNYWtlZG9uc2tpIEJyb2QnfSxcbiAgICAnNDYnIDogeydjb2RlJzonTUFWJywnbmFtZSc6J01hdnJvdm8gYW5kIFJvc3R1xaFhJ30sXG4gICAgJzQ3JyA6IHsnY29kZSc6J01PRycsJ25hbWUnOidNb2dpbGEnfSxcbiAgICAnNDgnIDogeydjb2RlJzonTkVHJywnbmFtZSc6J05lZ290aW5vJ30sXG4gICAgJzQ5JyA6IHsnY29kZSc6J05PVicsJ25hbWUnOidOb3ZhY2knfSxcbiAgICAnNTAnIDogeydjb2RlJzonTk9WJywnbmFtZSc6J05vdm8gU2Vsbyd9LFxuICAgICc1MScgOiB7J2NvZGUnOidPSFInLCduYW1lJzonT2hyaWQnfSxcbiAgICAnNTInIDogeydjb2RlJzonT1NMJywnbmFtZSc6J09zbG9tZWonfSxcbiAgICAnNTMnIDogeydjb2RlJzonUEVIJywnbmFtZSc6J1BlaMSNZXZvJ30sXG4gICAgJzU0JyA6IHsnY29kZSc6J1BFVCcsJ25hbWUnOidQZXRyb3ZlYyd9LFxuICAgICc1NScgOiB7J2NvZGUnOidQTEEnLCduYW1lJzonUGxhc25pY2EnfSxcbiAgICAnNTYnIDogeydjb2RlJzonUFJJJywnbmFtZSc6J1ByaWxlcCd9LFxuICAgICc1NycgOiB7J2NvZGUnOidQUk8nLCduYW1lJzonUHJvYmnFoXRpcCd9LFxuICAgICc1OCcgOiB7J2NvZGUnOidSQUQnLCduYW1lJzonUmFkb3ZpxaEnfSxcbiAgICAnNTknIDogeydjb2RlJzonUkFOJywnbmFtZSc6J1JhbmtvdmNlJ30sXG4gICAgJzYwJyA6IHsnY29kZSc6J1JFUycsJ25hbWUnOidSZXNlbid9LFxuICAgICc2MScgOiB7J2NvZGUnOidST1MnLCduYW1lJzonUm9zb21hbid9LFxuICAgICc2MicgOiB7J2NvZGUnOidTQVInLCduYW1lJzonU2FyYWonfSxcbiAgICAnNjMnIDogeydjb2RlJzonU09QJywnbmFtZSc6J1NvcGnFoXRlJ30sXG4gICAgJzY0JyA6IHsnY29kZSc6J1NUQScsJ25hbWUnOidTdGFyIERvanJhbid9LFxuICAgICc2NScgOiB7J2NvZGUnOidTVEEnLCduYW1lJzonU3Rhcm8gTmFnb3JpxI1hbmUnfSxcbiAgICAnNjYnIDogeydjb2RlJzonxaBUSScsJ25hbWUnOifFoHRpcCd9LFxuICAgICc2NycgOiB7J2NvZGUnOidTVFInLCduYW1lJzonU3RydWdhJ30sXG4gICAgJzY4JyA6IHsnY29kZSc6J1NUUicsJ25hbWUnOidTdHJ1bWljYSd9LFxuICAgICc2OScgOiB7J2NvZGUnOidTVFUnLCduYW1lJzonU3R1ZGVuacSNYW5pJ30sXG4gICAgJzcwJyA6IHsnY29kZSc6J8WgVVQnLCduYW1lJzonxaB1dG8gT3JpemFyaSd9LFxuICAgICc3MScgOiB7J2NvZGUnOidTVkUnLCduYW1lJzonU3ZldGkgTmlrb2xlJ30sXG4gICAgJzcyJyA6IHsnY29kZSc6J1RFQScsJ25hbWUnOidUZWFyY2UnfSxcbiAgICAnNzMnIDogeydjb2RlJzonVEVUJywnbmFtZSc6J1RldG92byd9LFxuICAgICc3NCcgOiB7J2NvZGUnOidWQUwnLCduYW1lJzonVmFsYW5kb3ZvJ30sXG4gICAgJzc1JyA6IHsnY29kZSc6J1ZBUycsJ25hbWUnOidWYXNpbGV2byd9LFxuICAgICc3NicgOiB7J2NvZGUnOidWRUwnLCduYW1lJzonVmVsZXMnfSxcbiAgICAnNzcnIDogeydjb2RlJzonVkVWJywnbmFtZSc6J1ZldsSNYW5pJ30sXG4gICAgJzc4JyA6IHsnY29kZSc6J1ZJTicsJ25hbWUnOidWaW5pY2EnfSxcbiAgICAnNzknIDogeydjb2RlJzonVlJBJywnbmFtZSc6J1ZyYW5lxaF0aWNhJ30sXG4gICAgJzgwJyA6IHsnY29kZSc6J1ZSQScsJ25hbWUnOidWcmFwxI1pxaF0ZSd9LFxuICAgICc4MScgOiB7J2NvZGUnOidaQUonLCduYW1lJzonWmFqYXMnfSxcbiAgICAnODInIDogeydjb2RlJzonWkVMJywnbmFtZSc6J1plbGVuaWtvdm8nfSxcbiAgICAnODMnIDogeydjb2RlJzonxb1FTCcsJ25hbWUnOifFvWVsaW5vJ30sXG4gICAgJzg0JyA6IHsnY29kZSc6J1pSTicsJ25hbWUnOidacm5vdmNpJ31cbiAgfSxcbiAgJ01HJzp7XG4gICAgJzEnIDogeydjb2RlJzonQU4nLCduYW1lJzonQW50YW5hbmFyaXZvJ30sXG4gICAgJzInIDogeydjb2RlJzonQVMnLCduYW1lJzonQW50c2lyYW5hbmEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidGTicsJ25hbWUnOidGaWFuYXJhbnRzb2EnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidNSicsJ25hbWUnOidNYWhhamFuZ2EnfSxcbiAgICAnNScgOiB7J2NvZGUnOidUTScsJ25hbWUnOidUb2FtYXNpbmEnfSxcbiAgICAnNicgOiB7J2NvZGUnOidUTCcsJ25hbWUnOidUb2xpYXJhJ31cbiAgfSxcbiAgJ01XJzp7XG4gICAgJzEnIDogeydjb2RlJzonQkxLJywnbmFtZSc6J0JhbGFrYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0JMVCcsJ25hbWUnOidCbGFudHlyZSd9LFxuICAgICczJyA6IHsnY29kZSc6J0NLVycsJ25hbWUnOidDaGlrd2F3YSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0NSRCcsJ25hbWUnOidDaGlyYWR6dWx1J30sXG4gICAgJzUnIDogeydjb2RlJzonQ1RQJywnbmFtZSc6J0NoaXRpcGEnfSxcbiAgICAnNicgOiB7J2NvZGUnOidERFonLCduYW1lJzonRGVkemEnfSxcbiAgICAnNycgOiB7J2NvZGUnOidEV0EnLCduYW1lJzonRG93YSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0tSRycsJ25hbWUnOidLYXJvbmdhJ30sXG4gICAgJzknIDogeydjb2RlJzonS1NHJywnbmFtZSc6J0thc3VuZ3UnfSxcbiAgICAnMTAnIDogeydjb2RlJzonTEtNJywnbmFtZSc6J0xpa29tYSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidMTEcnLCduYW1lJzonTGlsb25nd2UnfSxcbiAgICAnMTInIDogeydjb2RlJzonTUNHJywnbmFtZSc6J01hY2hpbmdhJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J01HQycsJ25hbWUnOidNYW5nb2NoaSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidNQ0gnLCduYW1lJzonTWNoaW5qaSd9LFxuICAgICcxNScgOiB7J2NvZGUnOidNTEonLCduYW1lJzonTXVsYW5qZSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidNV1onLCduYW1lJzonTXdhbnphJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J01aTScsJ25hbWUnOidNemltYmEnfSxcbiAgICAnMTgnIDogeydjb2RlJzonTlRVJywnbmFtZSc6J050Y2hldSd9LFxuICAgICcxOScgOiB7J2NvZGUnOidOS0InLCduYW1lJzonTmtoYXRhIEJheSd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidOS0gnLCduYW1lJzonTmtob3Rha290YSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidOU0onLCduYW1lJzonTnNhbmplJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J05USScsJ25hbWUnOidOdGNoaXNpJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J1BITCcsJ25hbWUnOidQaGFsb21iZSd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidSTVAnLCduYW1lJzonUnVtcGhpJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J1NMTScsJ25hbWUnOidTYWxpbWEnfSxcbiAgICAnMjYnIDogeydjb2RlJzonVEhZJywnbmFtZSc6J1RoeW9sbyd9LFxuICAgICcyNycgOiB7J2NvZGUnOidaQkEnLCduYW1lJzonWm9tYmEnfVxuICB9LFxuICAnTVknOntcbiAgICAnMScgOiB7J2NvZGUnOidKb2hvcicsJ25hbWUnOidKb2hvcid9LFxuICAgICcyJyA6IHsnY29kZSc6J0tlZGFoJywnbmFtZSc6J0tlZGFoJ30sXG4gICAgJzMnIDogeydjb2RlJzonS2VsYW50YW4nLCduYW1lJzonS2VsYW50YW4nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidMYWJ1YW4nLCduYW1lJzonTGFidWFuJ30sXG4gICAgJzUnIDogeydjb2RlJzonTWVsYWthJywnbmFtZSc6J01lbGFrYSd9LFxuICAgICc2JyA6IHsnY29kZSc6J05lZ2VyaSBTZW1iaWxhbicsJ25hbWUnOidOZWdlcmkgU2VtYmlsYW4nfSxcbiAgICAnNycgOiB7J2NvZGUnOidQYWhhbmcnLCduYW1lJzonUGFoYW5nJ30sXG4gICAgJzgnIDogeydjb2RlJzonUGVyYWsnLCduYW1lJzonUGVyYWsnfSxcbiAgICAnOScgOiB7J2NvZGUnOidQZXJsaXMnLCduYW1lJzonUGVybGlzJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1B1bGF1IFBpbmFuZycsJ25hbWUnOidQdWxhdSBQaW5hbmcnfSxcbiAgICAnMTEnIDogeydjb2RlJzonU2FiYWgnLCduYW1lJzonU2FiYWgnfSxcbiAgICAnMTInIDogeydjb2RlJzonU2FyYXdhaycsJ25hbWUnOidTYXJhd2FrJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1NlbGFuZ29yJywnbmFtZSc6J1NlbGFuZ29yJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J1RlcmVuZ2dhbnUnLCduYW1lJzonVGVyZW5nZ2FudSd9LFxuICAgICcxNScgOiB7J2NvZGUnOidLdWFsYSBMdW1wdXInLCduYW1lJzonS3VhbGEgTHVtcHVyJ31cbiAgfSxcbiAgJ01WJzp7XG4gICAgJzEnIDogeydjb2RlJzonQUFEJywnbmFtZSc6J0FyaSBBdG9sbCBEaGVrbnUnfSxcbiAgICAnMicgOiB7J2NvZGUnOidBQVUnLCduYW1lJzonQXJpIEF0b2xsIFV0aHVydSd9LFxuICAgICczJyA6IHsnY29kZSc6J0FERCcsJ25hbWUnOidBZGR1J30sXG4gICAgJzQnIDogeydjb2RlJzonRkFBJywnbmFtZSc6J0ZhYWRoaXBwb2xodSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0ZFQScsJ25hbWUnOidGZWxpZGhlIEF0b2xsJ30sXG4gICAgJzYnIDogeydjb2RlJzonRk1VJywnbmFtZSc6J0Z1YSBNdWxha3UnfSxcbiAgICAnNycgOiB7J2NvZGUnOidIQUQnLCduYW1lJzonSHV2YWRodSBBdG9sbCBEaGVrdW51J30sXG4gICAgJzgnIDogeydjb2RlJzonSEFVJywnbmFtZSc6J0h1dmFkaHUgQXRvbGwgVXRodXJ1J30sXG4gICAgJzknIDogeydjb2RlJzonSERIJywnbmFtZSc6J0hhZGhkaHVubWF0aGknfSxcbiAgICAnMTAnIDogeydjb2RlJzonS0xIJywnbmFtZSc6J0tvbGh1bWFkdWx1J30sXG4gICAgJzExJyA6IHsnY29kZSc6J01BQScsJ25hbWUnOidNYWxlIEF0b2xsJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J01BRCcsJ25hbWUnOidNYWFsaG9zbWFkdWx1IERoZWt1bnUnfSxcbiAgICAnMTMnIDogeydjb2RlJzonTUFVJywnbmFtZSc6J01hYWxob3NtYWR1bHUgVXRodXJ1J30sXG4gICAgJzE0JyA6IHsnY29kZSc6J01MRCcsJ25hbWUnOidNaWxhZGh1bm1hZHVsdSBEaGVrdW51J30sXG4gICAgJzE1JyA6IHsnY29kZSc6J01MVScsJ25hbWUnOidNaWxhZGh1bm1hZHVsdSBVdGh1cnUnfSxcbiAgICAnMTYnIDogeydjb2RlJzonTVVBJywnbmFtZSc6J011bGFrdSBBdG9sbCd9LFxuICAgICcxNycgOiB7J2NvZGUnOidOQUQnLCduYW1lJzonTmlsYW5kaGUgQXRvbGwgRGhla3VudSd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidOQVUnLCduYW1lJzonTmlsYW5kaGUgQXRvbGwgVXRodXJ1J30sXG4gICAgJzE5JyA6IHsnY29kZSc6J1RIRCcsJ25hbWUnOidUaGlsYWRodW5tYXRoaSBEaGVrdW51J30sXG4gICAgJzIwJyA6IHsnY29kZSc6J1RIVScsJ25hbWUnOidUaGlsYWRodW5tYXRoaSBVdGh1cnUnfVxuICB9LFxuICAnTUwnOntcbiAgICAnMScgOiB7J2NvZGUnOidHQScsJ25hbWUnOidHYW8nfSxcbiAgICAnMicgOiB7J2NvZGUnOidLWScsJ25hbWUnOidLYXllcyd9LFxuICAgICczJyA6IHsnY29kZSc6J0tEJywnbmFtZSc6J0tpZGFsJ30sXG4gICAgJzQnIDogeydjb2RlJzonS0wnLCduYW1lJzonS291bGlrb3JvJ30sXG4gICAgJzUnIDogeydjb2RlJzonTVAnLCduYW1lJzonTW9wdGknfSxcbiAgICAnNicgOiB7J2NvZGUnOidTRycsJ25hbWUnOidTZWdvdSd9LFxuICAgICc3JyA6IHsnY29kZSc6J1NLJywnbmFtZSc6J1Npa2Fzc28nfSxcbiAgICAnOCcgOiB7J2NvZGUnOidUQicsJ25hbWUnOidUb21ib3VjdG91J30sXG4gICAgJzknIDogeydjb2RlJzonQ0QnLCduYW1lJzonQmFtYWtvIENhcGl0YWwgRGlzdHJpY3QnfVxuICB9LFxuICAnTVQnOntcbiAgICAnMScgOiB7J2NvZGUnOidBVFQnLCduYW1lJzonQXR0YXJkJ30sXG4gICAgJzInIDogeydjb2RlJzonQkFMJywnbmFtZSc6J0JhbHphbid9LFxuICAgICczJyA6IHsnY29kZSc6J0JHVScsJ25hbWUnOidCaXJndSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0JLSycsJ25hbWUnOidCaXJraXJrYXJhJ30sXG4gICAgJzUnIDogeydjb2RlJzonQlJaJywnbmFtZSc6J0JpcnplYmJ1Z2EnfSxcbiAgICAnNicgOiB7J2NvZGUnOidCT1InLCduYW1lJzonQm9ybWxhJ30sXG4gICAgJzcnIDogeydjb2RlJzonRElOJywnbmFtZSc6J0RpbmdsaSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0ZHVScsJ25hbWUnOidGZ3VyYSd9LFxuICAgICc5JyA6IHsnY29kZSc6J0ZMTycsJ25hbWUnOidGbG9yaWFuYSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidHREonLCduYW1lJzonR3VkamEnfSxcbiAgICAnMTEnIDogeydjb2RlJzonR1pSJywnbmFtZSc6J0d6aXJhJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0dSRycsJ25hbWUnOidHYXJndXInfSxcbiAgICAnMTMnIDogeydjb2RlJzonR1hRJywnbmFtZSc6J0dheGFxJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0hNUicsJ25hbWUnOidIYW1ydW4nfSxcbiAgICAnMTUnIDogeydjb2RlJzonSUtMJywnbmFtZSc6J0lrbGluJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J0lTTCcsJ25hbWUnOidJc2xhJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J0tMSycsJ25hbWUnOidLYWxrYXJhJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J0tSSycsJ25hbWUnOidLaXJrb3AnfSxcbiAgICAnMTknIDogeydjb2RlJzonTElKJywnbmFtZSc6J0xpamEnfSxcbiAgICAnMjAnIDogeydjb2RlJzonTFVRJywnbmFtZSc6J0x1cWEnfSxcbiAgICAnMjEnIDogeydjb2RlJzonTVJTJywnbmFtZSc6J01hcnNhJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J01LTCcsJ25hbWUnOidNYXJzYXNrYWxhJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J01YTCcsJ25hbWUnOidNYXJzYXhsb2trJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J01ETicsJ25hbWUnOidNZGluYSd9LFxuICAgICcyNScgOiB7J2NvZGUnOidNRUwnLCduYW1lJzonTWVsbGllYSd9LFxuICAgICcyNicgOiB7J2NvZGUnOidNR1InLCduYW1lJzonTWdhcnInfSxcbiAgICAnMjcnIDogeydjb2RlJzonTVNUJywnbmFtZSc6J01vc3RhJ30sXG4gICAgJzI4JyA6IHsnY29kZSc6J01RQScsJ25hbWUnOidNcWFiYmEnfSxcbiAgICAnMjknIDogeydjb2RlJzonTVNJJywnbmFtZSc6J01zaWRhJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J01URicsJ25hbWUnOidNdGFyZmEnfSxcbiAgICAnMzEnIDogeydjb2RlJzonTkFYJywnbmFtZSc6J05heHhhcid9LFxuICAgICczMicgOiB7J2NvZGUnOidQQU8nLCduYW1lJzonUGFvbGEnfSxcbiAgICAnMzMnIDogeydjb2RlJzonUEVNJywnbmFtZSc6J1BlbWJyb2tlJ30sXG4gICAgJzM0JyA6IHsnY29kZSc6J1BJRScsJ25hbWUnOidQaWV0YSd9LFxuICAgICczNScgOiB7J2NvZGUnOidRT1InLCduYW1lJzonUW9ybWknfSxcbiAgICAnMzYnIDogeydjb2RlJzonUVJFJywnbmFtZSc6J1FyZW5kaSd9LFxuICAgICczNycgOiB7J2NvZGUnOidSQUInLCduYW1lJzonUmFiYXQnfSxcbiAgICAnMzgnIDogeydjb2RlJzonU0FGJywnbmFtZSc6J1NhZmknfSxcbiAgICAnMzknIDogeydjb2RlJzonU0dJJywnbmFtZSc6J1NhbiBHaWxqYW4nfSxcbiAgICAnNDAnIDogeydjb2RlJzonU0xVJywnbmFtZSc6J1NhbnRhIEx1Y2lqYSd9LFxuICAgICc0MScgOiB7J2NvZGUnOidTUEInLCduYW1lJzonU2FuIFBhd2wgaWwtQmFoYXInfSxcbiAgICAnNDInIDogeydjb2RlJzonU0dXJywnbmFtZSc6J1NhbiBHd2Fubid9LFxuICAgICc0MycgOiB7J2NvZGUnOidTVkUnLCduYW1lJzonU2FudGEgVmVuZXJhJ30sXG4gICAgJzQ0JyA6IHsnY29kZSc6J1NJRycsJ25hbWUnOidTaWdnaWV3aSd9LFxuICAgICc0NScgOiB7J2NvZGUnOidTTE0nLCduYW1lJzonU2xpZW1hJ30sXG4gICAgJzQ2JyA6IHsnY29kZSc6J1NXUScsJ25hbWUnOidTd2llcWknfSxcbiAgICAnNDcnIDogeydjb2RlJzonVFhCJywnbmFtZSc6J1RhIFhiaWV4J30sXG4gICAgJzQ4JyA6IHsnY29kZSc6J1RSWCcsJ25hbWUnOidUYXJ4aWVuJ30sXG4gICAgJzQ5JyA6IHsnY29kZSc6J1ZMVCcsJ25hbWUnOidWYWxsZXR0YSd9LFxuICAgICc1MCcgOiB7J2NvZGUnOidYR0onLCduYW1lJzonWGdhanJhJ30sXG4gICAgJzUxJyA6IHsnY29kZSc6J1pCUicsJ25hbWUnOidaYWJiYXInfSxcbiAgICAnNTInIDogeydjb2RlJzonWkJHJywnbmFtZSc6J1plYmJ1Zyd9LFxuICAgICc1MycgOiB7J2NvZGUnOidaSlQnLCduYW1lJzonWmVqdHVuJ30sXG4gICAgJzU0JyA6IHsnY29kZSc6J1pSUScsJ25hbWUnOidadXJyaWVxJ30sXG4gICAgJzU1JyA6IHsnY29kZSc6J0ZOVCcsJ25hbWUnOidGb250YW5hJ30sXG4gICAgJzU2JyA6IHsnY29kZSc6J0dISicsJ25hbWUnOidHaGFqbnNpZWxlbSd9LFxuICAgICc1NycgOiB7J2NvZGUnOidHSFInLCduYW1lJzonR2hhcmInfSxcbiAgICAnNTgnIDogeydjb2RlJzonR0hTJywnbmFtZSc6J0doYXNyaSd9LFxuICAgICc1OScgOiB7J2NvZGUnOidLUkMnLCduYW1lJzonS2VyY2VtJ30sXG4gICAgJzYwJyA6IHsnY29kZSc6J01VTicsJ25hbWUnOidNdW54YXInfSxcbiAgICAnNjEnIDogeydjb2RlJzonTkFEJywnbmFtZSc6J05hZHVyJ30sXG4gICAgJzYyJyA6IHsnY29kZSc6J1FBTCcsJ25hbWUnOidRYWxhJ30sXG4gICAgJzYzJyA6IHsnY29kZSc6J1ZJQycsJ25hbWUnOidWaWN0b3JpYSd9LFxuICAgICc2NCcgOiB7J2NvZGUnOidTTEEnLCduYW1lJzonU2FuIExhd3JlbnonfSxcbiAgICAnNjUnIDogeydjb2RlJzonU05UJywnbmFtZSc6J1Nhbm5hdCd9LFxuICAgICc2NicgOiB7J2NvZGUnOidaQUcnLCduYW1lJzonWGFncmEnfSxcbiAgICAnNjcnIDogeydjb2RlJzonWEVXJywnbmFtZSc6J1hld2tpamEnfSxcbiAgICAnNjgnIDogeydjb2RlJzonWkVCJywnbmFtZSc6J1plYmJ1Zyd9XG4gIH0sXG4gICdNSCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FMRycsJ25hbWUnOidBaWxpbmdpbmFlJ30sXG4gICAgJzInIDogeydjb2RlJzonQUxMJywnbmFtZSc6J0FpbGluZ2xhcGxhcCd9LFxuICAgICczJyA6IHsnY29kZSc6J0FMSycsJ25hbWUnOidBaWx1ayd9LFxuICAgICc0JyA6IHsnY29kZSc6J0FSTicsJ25hbWUnOidBcm5vJ30sXG4gICAgJzUnIDogeydjb2RlJzonQVVSJywnbmFtZSc6J0F1cid9LFxuICAgICc2JyA6IHsnY29kZSc6J0JLUicsJ25hbWUnOidCaWthcid9LFxuICAgICc3JyA6IHsnY29kZSc6J0JLTicsJ25hbWUnOidCaWtpbmknfSxcbiAgICAnOCcgOiB7J2NvZGUnOidCS0snLCduYW1lJzonQm9rYWsnfSxcbiAgICAnOScgOiB7J2NvZGUnOidFQk4nLCduYW1lJzonRWJvbid9LFxuICAgICcxMCcgOiB7J2NvZGUnOidFTlQnLCduYW1lJzonRW5ld2V0YWsnfSxcbiAgICAnMTEnIDogeydjb2RlJzonRUtCJywnbmFtZSc6J0VyaWt1Yid9LFxuICAgICcxMicgOiB7J2NvZGUnOidKQlQnLCduYW1lJzonSmFiYXQnfSxcbiAgICAnMTMnIDogeydjb2RlJzonSkxUJywnbmFtZSc6J0phbHVpdCd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidKRU0nLCduYW1lJzonSmVtbyd9LFxuICAgICcxNScgOiB7J2NvZGUnOidLSUwnLCduYW1lJzonS2lsaSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidLV0onLCduYW1lJzonS3dhamFsZWluJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J0xBRScsJ25hbWUnOidMYWUnfSxcbiAgICAnMTgnIDogeydjb2RlJzonTElCJywnbmFtZSc6J0xpYid9LFxuICAgICcxOScgOiB7J2NvZGUnOidMS1AnLCduYW1lJzonTGlraWVwJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J01KUicsJ25hbWUnOidNYWp1cm8nfSxcbiAgICAnMjEnIDogeydjb2RlJzonTUxQJywnbmFtZSc6J01hbG9lbGFwJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J01KVCcsJ25hbWUnOidNZWppdCd9LFxuICAgICcyMycgOiB7J2NvZGUnOidNSUwnLCduYW1lJzonTWlsaSd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidOTUsnLCduYW1lJzonTmFtb3Jpayd9LFxuICAgICcyNScgOiB7J2NvZGUnOidOQU0nLCduYW1lJzonTmFtdSd9LFxuICAgICcyNicgOiB7J2NvZGUnOidSR0wnLCduYW1lJzonUm9uZ2VsYXAnfSxcbiAgICAnMjcnIDogeydjb2RlJzonUkdLJywnbmFtZSc6J1JvbmdyaWsnfSxcbiAgICAnMjgnIDogeydjb2RlJzonVE9LJywnbmFtZSc6J1Rva2UnfSxcbiAgICAnMjknIDogeydjb2RlJzonVUpBJywnbmFtZSc6J1VqYWUnfSxcbiAgICAnMzAnIDogeydjb2RlJzonVUpMJywnbmFtZSc6J1VqZWxhbmcnfSxcbiAgICAnMzEnIDogeydjb2RlJzonVVRLJywnbmFtZSc6J1V0aXJpayd9LFxuICAgICczMicgOiB7J2NvZGUnOidXVEgnLCduYW1lJzonV290aG8nfSxcbiAgICAnMzMnIDogeydjb2RlJzonV1RKJywnbmFtZSc6J1dvdGplJ31cbiAgfSxcbiAgJ01RJzp7XG4gICAgJzEnIDogeydjb2RlJzonTEFKJywnbmFtZSc6J0xcXCdBam91cGEtQm91aWxsb24nfSxcbiAgICAnMicgOiB7J2NvZGUnOidMRVMnLCduYW1lJzonTGVzIEFuc2VzLWRcXCdBcmxldCd9LFxuICAgICczJyA6IHsnY29kZSc6J0JBUycsJ25hbWUnOidCYXNzZS1Qb2ludGUnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidCRUwnLCduYW1lJzonQmVsbGVmb250YWluZSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0xFJywnbmFtZSc6J0xlIENhcmJldCd9LFxuICAgICc2JyA6IHsnY29kZSc6J0NBUycsJ25hbWUnOidDYXNlLVBpbG90ZSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0xFJywnbmFtZSc6J0xlIERpYW1hbnQnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidEVUMnLCduYW1lJzonRHVjb3MnfSxcbiAgICAnOScgOiB7J2NvZGUnOidGT04nLCduYW1lJzonRm9uZHMtU2FpbnQtRGVuaXMnfSxcbiAgICAnMTAnIDogeydjb2RlJzonRk9SJywnbmFtZSc6J0ZvcnQtRGUtRnJhbmNlJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0xFJywnbmFtZSc6J0xlIEZyYW7Dp29pcyd9LFxuICAgICcxMicgOiB7J2NvZGUnOidHUkEnLCduYW1lJzonR3JhbmRcXCdSaXZpw6hyZSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidHUk8nLCduYW1lJzonR3Jvcy1Nb3JuZSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidMRScsJ25hbWUnOidMZSBMYW1lbnRpbid9LFxuICAgICcxNScgOiB7J2NvZGUnOidMRScsJ25hbWUnOidMZSBMb3JyYWluJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J01BQycsJ25hbWUnOidNYWNvdWJhJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J0xFJywnbmFtZSc6J0xlIE1hcmlnb3QnfSxcbiAgICAnMTgnIDogeydjb2RlJzonTEUnLCduYW1lJzonTGUgTWFyaW4nfSxcbiAgICAnMTknIDogeydjb2RlJzonTEUnLCduYW1lJzonTGUgTW9ybmUtUm91Z2UnfSxcbiAgICAnMjAnIDogeydjb2RlJzonTEUnLCduYW1lJzonTGUgTW9ybmUtVmVydCd9LFxuICAgICcyMScgOiB7J2NvZGUnOidMRScsJ25hbWUnOidMZSBQcsOqY2hldXInfSxcbiAgICAnMjInIDogeydjb2RlJzonUklWJywnbmFtZSc6J1JpdmnDqHJlLVBpbG90ZSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidSSVYnLCduYW1lJzonUml2acOocmUtU2Fsw6llJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J0xFJywnbmFtZSc6J0xlIFJvYmVydCd9LFxuICAgICcyNScgOiB7J2NvZGUnOidTQUknLCduYW1lJzonU2FpbnRlLUFubmUnfSxcbiAgICAnMjYnIDogeydjb2RlJzonU0FJJywnbmFtZSc6J1NhaW50ZS1MdWNlJ30sXG4gICAgJzI3JyA6IHsnY29kZSc6J1NBSScsJ25hbWUnOidTYWludGUtTWFyaWUnfSxcbiAgICAnMjgnIDogeydjb2RlJzonU0FJJywnbmFtZSc6J1NhaW50LUVzcHJpdCd9LFxuICAgICcyOScgOiB7J2NvZGUnOidTQUknLCduYW1lJzonU2FpbnQtSm9zZXBoJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J1NBSScsJ25hbWUnOidTYWludC1QaWVycmUnfSxcbiAgICAnMzEnIDogeydjb2RlJzonU0NIJywnbmFtZSc6J1NjaMWTbGNoZXInfSxcbiAgICAnMzInIDogeydjb2RlJzonTEEnLCduYW1lJzonTGEgVHJpbml0w6knfSxcbiAgICAnMzMnIDogeydjb2RlJzonTEVTJywnbmFtZSc6J0xlcyBUcm9pcy3DjmxldHMnfSxcbiAgICAnMzQnIDogeydjb2RlJzonTEUnLCduYW1lJzonTGUgVmF1Y2xpbid9XG4gIH0sXG4gICdNUic6e1xuICAgICcxJyA6IHsnY29kZSc6J0FEJywnbmFtZSc6J0FkcmFyJ30sXG4gICAgJzInIDogeydjb2RlJzonQVMnLCduYW1lJzonQXNzYWJhJ30sXG4gICAgJzMnIDogeydjb2RlJzonQlInLCduYW1lJzonQnJha25hJ30sXG4gICAgJzQnIDogeydjb2RlJzonRE4nLCduYW1lJzonRGFraGxldCBOb3VhZGhpYm91J30sXG4gICAgJzUnIDogeydjb2RlJzonR08nLCduYW1lJzonR29yZ29sJ30sXG4gICAgJzYnIDogeydjb2RlJzonR00nLCduYW1lJzonR3VpZGltYWthJ30sXG4gICAgJzcnIDogeydjb2RlJzonSEMnLCduYW1lJzonSG9kaCBFY2ggQ2hhcmd1aSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0hHJywnbmFtZSc6J0hvZGggRWwgR2hhcmJpJ30sXG4gICAgJzknIDogeydjb2RlJzonSU4nLCduYW1lJzonSW5jaGlyaSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidUQScsJ25hbWUnOidUYWdhbnQnfSxcbiAgICAnMTEnIDogeydjb2RlJzonVFonLCduYW1lJzonVGlyaXMgWmVtbW91cid9LFxuICAgICcxMicgOiB7J2NvZGUnOidUUicsJ25hbWUnOidUcmFyemEnfSxcbiAgICAnMTMnIDogeydjb2RlJzonTk8nLCduYW1lJzonTm91YWtjaG90dCd9XG4gIH0sXG4gICdNVSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FHJywnbmFtZSc6J0FnYWxlZ2EgSXNsYW5kcyd9LFxuICAgICcyJyA6IHsnY29kZSc6J0JMJywnbmFtZSc6J0JsYWNrIFJpdmVyJ30sXG4gICAgJzMnIDogeydjb2RlJzonQlInLCduYW1lJzonQmVhdSBCYXNzaW4tUm9zZSBIaWxsJ30sXG4gICAgJzQnIDogeydjb2RlJzonQ0MnLCduYW1lJzonQ2FyZ2Fkb3MgQ2FyYWpvcyBTaG9hbHMgKFNhaW50IEIpJ30sXG4gICAgJzUnIDogeydjb2RlJzonQ1UnLCduYW1lJzonQ3VyZXBpcGUnfSxcbiAgICAnNicgOiB7J2NvZGUnOidGTCcsJ25hbWUnOidGbGFjcSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0dQJywnbmFtZSc6J0dyYW5kIFBvcnQnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidNTycsJ25hbWUnOidNb2thJ30sXG4gICAgJzknIDogeydjb2RlJzonUEEnLCduYW1lJzonUGFtcGxlbW91c3Nlcyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidQTCcsJ25hbWUnOidQb3J0IExvdWlzJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1BVJywnbmFtZSc6J1BvcnQgTG91aXMnfSxcbiAgICAnMTInIDogeydjb2RlJzonUFcnLCduYW1lJzonUGxhaW5lcyBXaWxoZW1zJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1FCJywnbmFtZSc6J1F1YXRyZSBCb3JuZXMnfSxcbiAgICAnMTQnIDogeydjb2RlJzonUk8nLCduYW1lJzonUm9kcmlndWVzJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J1JSJywnbmFtZSc6J1JpdmllcmUgZHUgUmVtcGFydCd9LFxuICAgICcxNicgOiB7J2NvZGUnOidTQScsJ25hbWUnOidTYXZhbm5lJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J1ZQJywnbmFtZSc6J1ZhY29hcy1QaG9lbml4J31cbiAgfSxcbiAgJ1lUJzp7XG4gICAgJzEnIDogeydjb2RlJzonRFpBJywnbmFtZSc6J0R6YW91ZHppJ30sXG4gICAgJzInIDogeydjb2RlJzonUEFNJywnbmFtZSc6J1BhbWFuZHppJ30sXG4gICAgJzMnIDogeydjb2RlJzonTUFNJywnbmFtZSc6J01hbW91ZHpvdSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0RFTScsJ25hbWUnOidEZW1iZW5pJ30sXG4gICAgJzUnIDogeydjb2RlJzonQkFOJywnbmFtZSc6J0JhbmRyZWxlJ30sXG4gICAgJzYnIDogeydjb2RlJzonS0FOJywnbmFtZSc6J0thbmktS8OpbGknfSxcbiAgICAnNycgOiB7J2NvZGUnOidCT1UnLCduYW1lJzonQm91w6luaSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0NISScsJ25hbWUnOidDaGlyb25ndWknfSxcbiAgICAnOScgOiB7J2NvZGUnOidTQUQnLCduYW1lJzonU2FkYSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidPVUEnLCduYW1lJzonT3VhbmdhbmknfSxcbiAgICAnMTEnIDogeydjb2RlJzonQ0hJJywnbmFtZSc6J0NoaWNvbmknfSxcbiAgICAnMTInIDogeydjb2RlJzonVFNJJywnbmFtZSc6J1RzaW5nb25pJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J01UUycsJ25hbWUnOidNXFwnVHNhbmdhbW91amknfSxcbiAgICAnMTQnIDogeydjb2RlJzonQUNPJywnbmFtZSc6J0Fjb3VhJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J01UUycsJ25hbWUnOidNdHNhbWJvcm8nfSxcbiAgICAnMTYnIDogeydjb2RlJzonQkFOJywnbmFtZSc6J0JhbmRyYWJvdWEnfSxcbiAgICAnMTcnIDogeydjb2RlJzonS09VJywnbmFtZSc6J0tvdW5nb3UnfVxuICB9LFxuICAnTVgnOntcbiAgICAnMScgOiB7J2NvZGUnOidBR1UnLCduYW1lJzonQWd1YXNjYWxpZW50ZXMnfSxcbiAgICAnMicgOiB7J2NvZGUnOidCQ04nLCduYW1lJzonQmFqYSBDYWxpZm9ybmlhIE5vcnRlJ30sXG4gICAgJzMnIDogeydjb2RlJzonQkNTJywnbmFtZSc6J0JhamEgQ2FsaWZvcm5pYSBTdXInfSxcbiAgICAnNCcgOiB7J2NvZGUnOidDQU0nLCduYW1lJzonQ2FtcGVjaGUnfSxcbiAgICAnNScgOiB7J2NvZGUnOidDSFAnLCduYW1lJzonQ2hpYXBhcyd9LFxuICAgICc2JyA6IHsnY29kZSc6J0NISCcsJ25hbWUnOidDaGlodWFodWEnfSxcbiAgICAnNycgOiB7J2NvZGUnOidDT0EnLCduYW1lJzonQ29haHVpbGEgZGUgWmFyYWdvemEnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidDT0wnLCduYW1lJzonQ29saW1hJ30sXG4gICAgJzknIDogeydjb2RlJzonRElGJywnbmFtZSc6J0Rpc3RyaXRvIEZlZGVyYWwnfSxcbiAgICAnMTAnIDogeydjb2RlJzonRFVSJywnbmFtZSc6J0R1cmFuZ28nfSxcbiAgICAnMTEnIDogeydjb2RlJzonR1VBJywnbmFtZSc6J0d1YW5hanVhdG8nfSxcbiAgICAnMTInIDogeydjb2RlJzonR1JPJywnbmFtZSc6J0d1ZXJyZXJvJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0hJRCcsJ25hbWUnOidIaWRhbGdvJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0pBTCcsJ25hbWUnOidKYWxpc2NvJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J01FWCcsJ25hbWUnOidNZXhpY28nfSxcbiAgICAnMTYnIDogeydjb2RlJzonTUlDJywnbmFtZSc6J01pY2hvYWNhbiBkZSBPY2FtcG8nfSxcbiAgICAnMTcnIDogeydjb2RlJzonTU9SJywnbmFtZSc6J01vcmVsb3MnfSxcbiAgICAnMTgnIDogeydjb2RlJzonTkFZJywnbmFtZSc6J05heWFyaXQnfSxcbiAgICAnMTknIDogeydjb2RlJzonTkxFJywnbmFtZSc6J051ZXZvIExlb24nfSxcbiAgICAnMjAnIDogeydjb2RlJzonT0FYJywnbmFtZSc6J09heGFjYSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidQVUUnLCduYW1lJzonUHVlYmxhJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J1FVRScsJ25hbWUnOidRdWVyZXRhcm8gZGUgQXJ0ZWFnYSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidST08nLCduYW1lJzonUXVpbnRhbmEgUm9vJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J1NMUCcsJ25hbWUnOidTYW4gTHVpcyBQb3Rvc2knfSxcbiAgICAnMjUnIDogeydjb2RlJzonU0lOJywnbmFtZSc6J1NpbmFsb2EnfSxcbiAgICAnMjYnIDogeydjb2RlJzonU09OJywnbmFtZSc6J1Nvbm9yYSd9LFxuICAgICcyNycgOiB7J2NvZGUnOidUQUInLCduYW1lJzonVGFiYXNjbyd9LFxuICAgICcyOCcgOiB7J2NvZGUnOidUQU0nLCduYW1lJzonVGFtYXVsaXBhcyd9LFxuICAgICcyOScgOiB7J2NvZGUnOidUTEEnLCduYW1lJzonVGxheGNhbGEnfSxcbiAgICAnMzAnIDogeydjb2RlJzonVkVSJywnbmFtZSc6J1ZlcmFjcnV6LUxsYXZlJ30sXG4gICAgJzMxJyA6IHsnY29kZSc6J1lVQycsJ25hbWUnOidZdWNhdGFuJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6J1pBQycsJ25hbWUnOidaYWNhdGVjYXMnfVxuICB9LFxuICAnRk0nOntcbiAgICAnMScgOiB7J2NvZGUnOidDJywnbmFtZSc6J0NodXVrJ30sXG4gICAgJzInIDogeydjb2RlJzonSycsJ25hbWUnOidLb3NyYWUnfSxcbiAgICAnMycgOiB7J2NvZGUnOidQJywnbmFtZSc6J1BvaG5wZWknfSxcbiAgICAnNCcgOiB7J2NvZGUnOidZJywnbmFtZSc6J1lhcCd9XG4gIH0sXG4gICdNRCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0dBJywnbmFtZSc6J0dhZ2F1emlhJ30sXG4gICAgJzInIDogeydjb2RlJzonQ1UnLCduYW1lJzonQ2hpc2luYXUnfSxcbiAgICAnMycgOiB7J2NvZGUnOidCQScsJ25hbWUnOidCYWx0aSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0NBJywnbmFtZSc6J0NhaHVsJ30sXG4gICAgJzUnIDogeydjb2RlJzonRUQnLCduYW1lJzonRWRpbmV0J30sXG4gICAgJzYnIDogeydjb2RlJzonTEEnLCduYW1lJzonTGFwdXNuYSd9LFxuICAgICc3JyA6IHsnY29kZSc6J09SJywnbmFtZSc6J09yaGVpJ30sXG4gICAgJzgnIDogeydjb2RlJzonU08nLCduYW1lJzonU29yb2NhJ30sXG4gICAgJzknIDogeydjb2RlJzonVEknLCduYW1lJzonVGlnaGluYSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidVTicsJ25hbWUnOidVbmdoZW5pJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1NOJywnbmFtZSc6J1N0w6JuZ2EgTmlzdHJ1bHVpJ31cbiAgfSxcbiAgJ01DJzp7XG4gICAgJzEnIDogeydjb2RlJzonRlYnLCduYW1lJzonRm9udHZpZWlsbGUnfSxcbiAgICAnMicgOiB7J2NvZGUnOidMQycsJ25hbWUnOidMYSBDb25kYW1pbmUnfSxcbiAgICAnMycgOiB7J2NvZGUnOidNVicsJ25hbWUnOidNb25hY28tVmlsbGUnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidNQycsJ25hbWUnOidNb250ZS1DYXJsbyd9XG4gIH0sXG4gICdNTic6e1xuICAgICcxJyA6IHsnY29kZSc6JzEnLCduYW1lJzonVWxhbmJhYXRhcid9LFxuICAgICcyJyA6IHsnY29kZSc6JzAzNScsJ25hbWUnOidPcmhvbid9LFxuICAgICczJyA6IHsnY29kZSc6JzAzNycsJ25hbWUnOidEYXJoYW4gdXVsJ30sXG4gICAgJzQnIDogeydjb2RlJzonMDM5JywnbmFtZSc6J0hlbnRpeSd9LFxuICAgICc1JyA6IHsnY29kZSc6JzA0MScsJ25hbWUnOidIb3ZzZ29sJ30sXG4gICAgJzYnIDogeydjb2RlJzonMDQzJywnbmFtZSc6J0hvdmQnfSxcbiAgICAnNycgOiB7J2NvZGUnOicwNDYnLCduYW1lJzonVXZzJ30sXG4gICAgJzgnIDogeydjb2RlJzonMDQ3JywnbmFtZSc6J1Rvdid9LFxuICAgICc5JyA6IHsnY29kZSc6JzA0OScsJ25hbWUnOidTZWxlbmdlJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6JzA1MScsJ25hbWUnOidTdWhiYWF0YXInfSxcbiAgICAnMTEnIDogeydjb2RlJzonMDUzJywnbmFtZSc6J09tbm9nb3ZpJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6JzA1NScsJ25hbWUnOidPdm9yaGFuZ2F5J30sXG4gICAgJzEzJyA6IHsnY29kZSc6JzA1NycsJ25hbWUnOidEemF2aGFuJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6JzA1OScsJ25hbWUnOidEdW5kZ292TCd9LFxuICAgICcxNScgOiB7J2NvZGUnOicwNjEnLCduYW1lJzonRG9ybm9kJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6JzA2MycsJ25hbWUnOidEb3Jub2dvdid9LFxuICAgICcxNycgOiB7J2NvZGUnOicwNjQnLCduYW1lJzonR292aS1TdW1iZXInfSxcbiAgICAnMTgnIDogeydjb2RlJzonMDY1JywnbmFtZSc6J0dvdmktQWx0YXknfSxcbiAgICAnMTknIDogeydjb2RlJzonMDY3JywnbmFtZSc6J0J1bGdhbid9LFxuICAgICcyMCcgOiB7J2NvZGUnOicwNjknLCduYW1lJzonQmF5YW5ob25nb3InfSxcbiAgICAnMjEnIDogeydjb2RlJzonMDcxJywnbmFtZSc6J0JheWFuLU9sZ2l5J30sXG4gICAgJzIyJyA6IHsnY29kZSc6JzA3MycsJ25hbWUnOidBcmhhbmdheSd9XG4gIH0sXG4gICdNUyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0EnLCduYW1lJzonU2FpbnQgQW50aG9ueSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0cnLCduYW1lJzonU2FpbnQgR2Vvcmdlcyd9LFxuICAgICczJyA6IHsnY29kZSc6J1AnLCduYW1lJzonU2FpbnQgUGV0ZXInfVxuICB9LFxuICAnTUEnOntcbiAgICAnMScgOiB7J2NvZGUnOidBR0QnLCduYW1lJzonQWdhZGlyJ30sXG4gICAgJzInIDogeydjb2RlJzonSE9DJywnbmFtZSc6J0FsIEhvY2VpbWEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidBWkknLCduYW1lJzonQXppbGFsJ30sXG4gICAgJzQnIDogeydjb2RlJzonQk1FJywnbmFtZSc6J0JlbmkgTWVsbGFsJ30sXG4gICAgJzUnIDogeydjb2RlJzonQlNMJywnbmFtZSc6J0JlbiBTbGltYW5lJ30sXG4gICAgJzYnIDogeydjb2RlJzonQkxNJywnbmFtZSc6J0JvdWxlbWFuZSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0NCTCcsJ25hbWUnOidDYXNhYmxhbmNhJ30sXG4gICAgJzgnIDogeydjb2RlJzonQ0hBJywnbmFtZSc6J0NoYW91ZW4nfSxcbiAgICAnOScgOiB7J2NvZGUnOidFSkEnLCduYW1lJzonRWwgSmFkaWRhJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0VLUycsJ25hbWUnOidFbCBLZWxhYSBkZXMgU3JhZ2huYSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidFUkEnLCduYW1lJzonRXIgUmFjaGlkaWEnfSxcbiAgICAnMTInIDogeydjb2RlJzonRVNTJywnbmFtZSc6J0Vzc2FvdWlyYSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidGRVMnLCduYW1lJzonRmVzJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0ZJRycsJ25hbWUnOidGaWd1aWcnfSxcbiAgICAnMTUnIDogeydjb2RlJzonR0xNJywnbmFtZSc6J0d1ZWxtaW0nfSxcbiAgICAnMTYnIDogeydjb2RlJzonSUZSJywnbmFtZSc6J0lmcmFuZSd9LFxuICAgICcxNycgOiB7J2NvZGUnOidLRU4nLCduYW1lJzonS2VuaXRyYSd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidLSE0nLCduYW1lJzonS2hlbWlzc2V0J30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0tITicsJ25hbWUnOidLaGVuaWZyYSd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidLSE8nLCduYW1lJzonS2hvdXJpYmdhJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J0xZTicsJ25hbWUnOidMYWF5b3VuZSd9LFxuICAgICcyMicgOiB7J2NvZGUnOidMQVInLCduYW1lJzonTGFyYWNoZSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidNUksnLCduYW1lJzonTWFycmFrZWNoJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J01LTicsJ25hbWUnOidNZWtuZXMnfSxcbiAgICAnMjUnIDogeydjb2RlJzonTkFEJywnbmFtZSc6J05hZG9yJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6J09SWicsJ25hbWUnOidPdWFyemF6YXRlJ30sXG4gICAgJzI3JyA6IHsnY29kZSc6J09VSicsJ25hbWUnOidPdWpkYSd9LFxuICAgICcyOCcgOiB7J2NvZGUnOidSU0EnLCduYW1lJzonUmFiYXQtU2FsZSd9LFxuICAgICcyOScgOiB7J2NvZGUnOidTQUYnLCduYW1lJzonU2FmaSd9LFxuICAgICczMCcgOiB7J2NvZGUnOidTRVQnLCduYW1lJzonU2V0dGF0J30sXG4gICAgJzMxJyA6IHsnY29kZSc6J1NLQScsJ25hbWUnOidTaWRpIEthY2VtJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6J1RHUicsJ25hbWUnOidUYW5naWVyJ30sXG4gICAgJzMzJyA6IHsnY29kZSc6J1RBTicsJ25hbWUnOidUYW4tVGFuJ30sXG4gICAgJzM0JyA6IHsnY29kZSc6J1RBTycsJ25hbWUnOidUYW91bmF0ZSd9LFxuICAgICczNScgOiB7J2NvZGUnOidUUkQnLCduYW1lJzonVGFyb3VkYW5udCd9LFxuICAgICczNicgOiB7J2NvZGUnOidUQVQnLCduYW1lJzonVGF0YSd9LFxuICAgICczNycgOiB7J2NvZGUnOidUQVonLCduYW1lJzonVGF6YSd9LFxuICAgICczOCcgOiB7J2NvZGUnOidURVQnLCduYW1lJzonVGV0b3Vhbid9LFxuICAgICczOScgOiB7J2NvZGUnOidUSVonLCduYW1lJzonVGl6bml0J30sXG4gICAgJzQwJyA6IHsnY29kZSc6J0FESycsJ25hbWUnOidBZCBEYWtobGEnfSxcbiAgICAnNDEnIDogeydjb2RlJzonQkpEJywnbmFtZSc6J0JvdWpkb3VyJ30sXG4gICAgJzQyJyA6IHsnY29kZSc6J0VTTScsJ25hbWUnOidFcyBTbWFyYSd9XG4gIH0sXG4gICdNWic6e1xuICAgICcxJyA6IHsnY29kZSc6J0NEJywnbmFtZSc6J0NhYm8gRGVsZ2Fkbyd9LFxuICAgICcyJyA6IHsnY29kZSc6J0daJywnbmFtZSc6J0dhemEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidJTicsJ25hbWUnOidJbmhhbWJhbmUnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidNTicsJ25hbWUnOidNYW5pY2EnfSxcbiAgICAnNScgOiB7J2NvZGUnOidNQycsJ25hbWUnOidNYXB1dG8gKGNpdHkpJ30sXG4gICAgJzYnIDogeydjb2RlJzonTVAnLCduYW1lJzonTWFwdXRvJ30sXG4gICAgJzcnIDogeydjb2RlJzonTkEnLCduYW1lJzonTmFtcHVsYSd9LFxuICAgICc4JyA6IHsnY29kZSc6J05JJywnbmFtZSc6J05pYXNzYSd9LFxuICAgICc5JyA6IHsnY29kZSc6J1NPJywnbmFtZSc6J1NvZmFsYSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidURScsJ25hbWUnOidUZXRlJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1pBJywnbmFtZSc6J1phbWJlemlhJ31cbiAgfSxcbiAgJ01NJzp7XG4gICAgJzEnIDogeydjb2RlJzonQVknLCduYW1lJzonQXlleWFyd2FkeSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0JHJywnbmFtZSc6J0JhZ28nfSxcbiAgICAnMycgOiB7J2NvZGUnOidNRycsJ25hbWUnOidNYWd3YXknfSxcbiAgICAnNCcgOiB7J2NvZGUnOidNRCcsJ25hbWUnOidNYW5kYWxheSd9LFxuICAgICc1JyA6IHsnY29kZSc6J1NHJywnbmFtZSc6J1NhZ2FpbmcnfSxcbiAgICAnNicgOiB7J2NvZGUnOidUTicsJ25hbWUnOidUYW5pbnRoYXJ5aSd9LFxuICAgICc3JyA6IHsnY29kZSc6J1lHJywnbmFtZSc6J1lhbmdvbid9LFxuICAgICc4JyA6IHsnY29kZSc6J0NIJywnbmFtZSc6J0NoaW4gU3RhdGUnfSxcbiAgICAnOScgOiB7J2NvZGUnOidLQycsJ25hbWUnOidLYWNoaW4gU3RhdGUnfSxcbiAgICAnMTAnIDogeydjb2RlJzonS0gnLCduYW1lJzonS2F5YWggU3RhdGUnfSxcbiAgICAnMTEnIDogeydjb2RlJzonS04nLCduYW1lJzonS2F5aW4gU3RhdGUnfSxcbiAgICAnMTInIDogeydjb2RlJzonTU4nLCduYW1lJzonTW9uIFN0YXRlJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1JLJywnbmFtZSc6J1Jha2hpbmUgU3RhdGUnfSxcbiAgICAnMTQnIDogeydjb2RlJzonU0gnLCduYW1lJzonU2hhbiBTdGF0ZSd9XG4gIH0sXG4gICdOQSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0NBJywnbmFtZSc6J0NhcHJpdmknfSxcbiAgICAnMicgOiB7J2NvZGUnOidFUicsJ25hbWUnOidFcm9uZ28nfSxcbiAgICAnMycgOiB7J2NvZGUnOidIQScsJ25hbWUnOidIYXJkYXAnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidLUicsJ25hbWUnOidLYXJhcyd9LFxuICAgICc1JyA6IHsnY29kZSc6J0tWJywnbmFtZSc6J0thdmFuZ28nfSxcbiAgICAnNicgOiB7J2NvZGUnOidLSCcsJ25hbWUnOidLaG9tYXMnfSxcbiAgICAnNycgOiB7J2NvZGUnOidLVScsJ25hbWUnOidLdW5lbmUnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidPVycsJ25hbWUnOidPaGFuZ3dlbmEnfSxcbiAgICAnOScgOiB7J2NvZGUnOidPSycsJ25hbWUnOidPbWFoZWtlJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J09UJywnbmFtZSc6J09tdXNhdGknfSxcbiAgICAnMTEnIDogeydjb2RlJzonT04nLCduYW1lJzonT3NoYW5hJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J09PJywnbmFtZSc6J09zaGlrb3RvJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J09KJywnbmFtZSc6J090am96b25kanVwYSd9XG4gIH0sXG4gICdOUic6e1xuICAgICcxJyA6IHsnY29kZSc6J0FPJywnbmFtZSc6J0Fpd28nfSxcbiAgICAnMicgOiB7J2NvZGUnOidBQScsJ25hbWUnOidBbmFiYXInfSxcbiAgICAnMycgOiB7J2NvZGUnOidBVCcsJ25hbWUnOidBbmV0YW4nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidBSScsJ25hbWUnOidBbmliYXJlJ30sXG4gICAgJzUnIDogeydjb2RlJzonQkEnLCduYW1lJzonQmFpdGknfSxcbiAgICAnNicgOiB7J2NvZGUnOidCTycsJ25hbWUnOidCb2UnfSxcbiAgICAnNycgOiB7J2NvZGUnOidCVScsJ25hbWUnOidCdWFkYSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0RFJywnbmFtZSc6J0Rlbmlnb21vZHUnfSxcbiAgICAnOScgOiB7J2NvZGUnOidFVycsJ25hbWUnOidFd2EnfSxcbiAgICAnMTAnIDogeydjb2RlJzonSUonLCduYW1lJzonSWp1dyd9LFxuICAgICcxMScgOiB7J2NvZGUnOidNRScsJ25hbWUnOidNZW5lbmcnfSxcbiAgICAnMTInIDogeydjb2RlJzonTkknLCduYW1lJzonTmlib2snfSxcbiAgICAnMTMnIDogeydjb2RlJzonVUEnLCduYW1lJzonVWFib2UnfSxcbiAgICAnMTQnIDogeydjb2RlJzonWUEnLCduYW1lJzonWWFyZW4nfVxuICB9LFxuICAnTlAnOntcbiAgICAnMScgOiB7J2NvZGUnOidCQScsJ25hbWUnOidCYWdtYXRpJ30sXG4gICAgJzInIDogeydjb2RlJzonQkgnLCduYW1lJzonQmhlcmknfSxcbiAgICAnMycgOiB7J2NvZGUnOidESCcsJ25hbWUnOidEaGF3YWxhZ2lyaSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0dBJywnbmFtZSc6J0dhbmRha2knfSxcbiAgICAnNScgOiB7J2NvZGUnOidKQScsJ25hbWUnOidKYW5ha3B1cid9LFxuICAgICc2JyA6IHsnY29kZSc6J0tBJywnbmFtZSc6J0thcm5hbGknfSxcbiAgICAnNycgOiB7J2NvZGUnOidLTycsJ25hbWUnOidLb3NpJ30sXG4gICAgJzgnIDogeydjb2RlJzonTFUnLCduYW1lJzonTHVtYmluaSd9LFxuICAgICc5JyA6IHsnY29kZSc6J01BJywnbmFtZSc6J01haGFrYWxpJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J01FJywnbmFtZSc6J01lY2hpJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J05BJywnbmFtZSc6J05hcmF5YW5pJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1JBJywnbmFtZSc6J1JhcHRpJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1NBJywnbmFtZSc6J1NhZ2FybWF0aGEnfSxcbiAgICAnMTQnIDogeydjb2RlJzonU0UnLCduYW1lJzonU2V0aSd9XG4gIH0sXG4gICdOTCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0RSJywnbmFtZSc6J0RyZW50aGUnfSxcbiAgICAnMicgOiB7J2NvZGUnOidGTCcsJ25hbWUnOidGbGV2b2xhbmQnfSxcbiAgICAnMycgOiB7J2NvZGUnOidGUicsJ25hbWUnOidGcmllc2xhbmQnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidHRScsJ25hbWUnOidHZWxkZXJsYW5kJ30sXG4gICAgJzUnIDogeydjb2RlJzonR1InLCduYW1lJzonR3JvbmluZ2VuJ30sXG4gICAgJzYnIDogeydjb2RlJzonTEknLCduYW1lJzonTGltYnVyZyd9LFxuICAgICc3JyA6IHsnY29kZSc6J05CJywnbmFtZSc6J05vb3JkIEJyYWJhbnQnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidOSCcsJ25hbWUnOidOb29yZCBIb2xsYW5kJ30sXG4gICAgJzknIDogeydjb2RlJzonT1YnLCduYW1lJzonT3Zlcmlqc3NlbCd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidVVCcsJ25hbWUnOidVdHJlY2h0J30sXG4gICAgJzExJyA6IHsnY29kZSc6J1pFJywnbmFtZSc6J1plZWxhbmQnfSxcbiAgICAnMTInIDogeydjb2RlJzonWkgnLCduYW1lJzonWnVpZCBIb2xsYW5kJ31cbiAgfSxcbiAgJ0FOJzp7XG4gICAgJzEnIDogeydjb2RlJzonQk9OJywnbmFtZSc6J0JvbmFpcmUnfSxcbiAgICAnMicgOiB7J2NvZGUnOidDVVInLCduYW1lJzonQ3VyYcOnYW8nfSxcbiAgICAnMycgOiB7J2NvZGUnOidTQUInLCduYW1lJzonU2FiYSd9LFxuICAgICc0JyA6IHsnY29kZSc6J1NFVScsJ25hbWUnOidTaW50IEV1c3RhdGl1cyd9LFxuICAgICc1JyA6IHsnY29kZSc6J1NNQScsJ25hbWUnOidTaW50IE1hYXJ0ZW4nfVxuICB9LFxuICAnTkMnOntcbiAgICAnMScgOiB7J2NvZGUnOidMJywnbmFtZSc6J0lsZXMgTG95YXV0ZSd9LFxuICAgICcyJyA6IHsnY29kZSc6J04nLCduYW1lJzonTm9yZCd9LFxuICAgICczJyA6IHsnY29kZSc6J1MnLCduYW1lJzonU3VkJ31cbiAgfSxcbiAgJ05aJzp7XG4gICAgJzEnIDogeydjb2RlJzonQVVLJywnbmFtZSc6J0F1Y2tsYW5kJ30sXG4gICAgJzInIDogeydjb2RlJzonQk9QJywnbmFtZSc6J0JheSBvZiBQbGVudHknfSxcbiAgICAnMycgOiB7J2NvZGUnOidDQU4nLCduYW1lJzonQ2FudGVyYnVyeSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0NPUicsJ25hbWUnOidDb3JvbWFuZGVsJ30sXG4gICAgJzUnIDogeydjb2RlJzonR0lTJywnbmFtZSc6J0dpc2Jvcm5lJ30sXG4gICAgJzYnIDogeydjb2RlJzonRklPJywnbmFtZSc6J0Zpb3JkbGFuZCd9LFxuICAgICc3JyA6IHsnY29kZSc6J0hLQicsJ25hbWUnOidIYXdrZVxcJ3MgQmF5J30sXG4gICAgJzgnIDogeydjb2RlJzonTUJIJywnbmFtZSc6J01hcmxib3JvdWdoJ30sXG4gICAgJzknIDogeydjb2RlJzonTVdUJywnbmFtZSc6J01hbmF3YXR1LVdhbmdhbnVpJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J01DTScsJ25hbWUnOidNdCBDb29rLU1hY2tlbnppZSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidOU04nLCduYW1lJzonTmVsc29uJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J05UTCcsJ25hbWUnOidOb3J0aGxhbmQnfSxcbiAgICAnMTMnIDogeydjb2RlJzonT1RBJywnbmFtZSc6J090YWdvJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J1NUTCcsJ25hbWUnOidTb3V0aGxhbmQnfSxcbiAgICAnMTUnIDogeydjb2RlJzonVEtJJywnbmFtZSc6J1RhcmFuYWtpJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J1dHTicsJ25hbWUnOidXZWxsaW5ndG9uJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J1dLTycsJ25hbWUnOidXYWlrYXRvJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J1dBSScsJ25hbWUnOidXYWlycHJhcmFwYSd9LFxuICAgICcxOScgOiB7J2NvZGUnOidXVEMnLCduYW1lJzonV2VzdCBDb2FzdCd9XG4gIH0sXG4gICdOSSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FOJywnbmFtZSc6J0F0bGFudGljbyBOb3J0ZSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FTJywnbmFtZSc6J0F0bGFudGljbyBTdXInfSxcbiAgICAnMycgOiB7J2NvZGUnOidCTycsJ25hbWUnOidCb2Fjbyd9LFxuICAgICc0JyA6IHsnY29kZSc6J0NBJywnbmFtZSc6J0NhcmF6byd9LFxuICAgICc1JyA6IHsnY29kZSc6J0NJJywnbmFtZSc6J0NoaW5hbmRlZ2EnfSxcbiAgICAnNicgOiB7J2NvZGUnOidDTycsJ25hbWUnOidDaG9udGFsZXMnfSxcbiAgICAnNycgOiB7J2NvZGUnOidFUycsJ25hbWUnOidFc3RlbGknfSxcbiAgICAnOCcgOiB7J2NvZGUnOidHUicsJ25hbWUnOidHcmFuYWRhJ30sXG4gICAgJzknIDogeydjb2RlJzonSkknLCduYW1lJzonSmlub3RlZ2EnfSxcbiAgICAnMTAnIDogeydjb2RlJzonTEUnLCduYW1lJzonTGVvbid9LFxuICAgICcxMScgOiB7J2NvZGUnOidNRCcsJ25hbWUnOidNYWRyaXonfSxcbiAgICAnMTInIDogeydjb2RlJzonTU4nLCduYW1lJzonTWFuYWd1YSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidNUycsJ25hbWUnOidNYXNheWEnfSxcbiAgICAnMTQnIDogeydjb2RlJzonTVQnLCduYW1lJzonTWF0YWdhbHBhJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J05TJywnbmFtZSc6J051ZXZvIFNlZ292aWEnfSxcbiAgICAnMTYnIDogeydjb2RlJzonUlMnLCduYW1lJzonUmlvIFNhbiBKdWFuJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J1JJJywnbmFtZSc6J1JpdmFzJ31cbiAgfSxcbiAgJ05FJzp7XG4gICAgJzEnIDogeydjb2RlJzonQUcnLCduYW1lJzonQWdhZGV6J30sXG4gICAgJzInIDogeydjb2RlJzonREYnLCduYW1lJzonRGlmZmEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidEUycsJ25hbWUnOidEb3Nzbyd9LFxuICAgICc0JyA6IHsnY29kZSc6J01BJywnbmFtZSc6J01hcmFkaSd9LFxuICAgICc1JyA6IHsnY29kZSc6J05NJywnbmFtZSc6J05pYW1leSd9LFxuICAgICc2JyA6IHsnY29kZSc6J1RIJywnbmFtZSc6J1RhaG91YSd9LFxuICAgICc3JyA6IHsnY29kZSc6J1RMJywnbmFtZSc6J1RpbGxhYmVyaSd9LFxuICAgICc4JyA6IHsnY29kZSc6J1pEJywnbmFtZSc6J1ppbmRlcid9XG4gIH0sXG4gICdORyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FCJywnbmFtZSc6J0FiaWEnfSxcbiAgICAnMicgOiB7J2NvZGUnOidDVCcsJ25hbWUnOidBYnVqYSBGZWRlcmFsIENhcGl0YWwgVGVycml0b3J5J30sXG4gICAgJzMnIDogeydjb2RlJzonQUQnLCduYW1lJzonQWRhbWF3YSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0FLJywnbmFtZSc6J0Frd2EgSWJvbSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0FOJywnbmFtZSc6J0FuYW1icmEnfSxcbiAgICAnNicgOiB7J2NvZGUnOidCQycsJ25hbWUnOidCYXVjaGknfSxcbiAgICAnNycgOiB7J2NvZGUnOidCWScsJ25hbWUnOidCYXllbHNhJ30sXG4gICAgJzgnIDogeydjb2RlJzonQk4nLCduYW1lJzonQmVudWUnfSxcbiAgICAnOScgOiB7J2NvZGUnOidCTycsJ25hbWUnOidCb3Jubyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidDUicsJ25hbWUnOidDcm9zcyBSaXZlcid9LFxuICAgICcxMScgOiB7J2NvZGUnOidERScsJ25hbWUnOidEZWx0YSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidFQicsJ25hbWUnOidFYm9ueWknfSxcbiAgICAnMTMnIDogeydjb2RlJzonRUQnLCduYW1lJzonRWRvJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0VLJywnbmFtZSc6J0VraXRpJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0VOJywnbmFtZSc6J0VudWd1J30sXG4gICAgJzE2JyA6IHsnY29kZSc6J0dPJywnbmFtZSc6J0dvbWJlJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J0lNJywnbmFtZSc6J0ltbyd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidKSScsJ25hbWUnOidKaWdhd2EnfSxcbiAgICAnMTknIDogeydjb2RlJzonS0QnLCduYW1lJzonS2FkdW5hJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J0tOJywnbmFtZSc6J0thbm8nfSxcbiAgICAnMjEnIDogeydjb2RlJzonS1QnLCduYW1lJzonS2F0c2luYSd9LFxuICAgICcyMicgOiB7J2NvZGUnOidLRScsJ25hbWUnOidLZWJiaSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidLTycsJ25hbWUnOidLb2dpJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J0tXJywnbmFtZSc6J0t3YXJhJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J0xBJywnbmFtZSc6J0xhZ29zJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6J05BJywnbmFtZSc6J05hc3NhcmF3YSd9LFxuICAgICcyNycgOiB7J2NvZGUnOidOSScsJ25hbWUnOidOaWdlcid9LFxuICAgICcyOCcgOiB7J2NvZGUnOidPRycsJ25hbWUnOidPZ3VuJ30sXG4gICAgJzI5JyA6IHsnY29kZSc6J09ORycsJ25hbWUnOidPbmRvJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J09TJywnbmFtZSc6J09zdW4nfSxcbiAgICAnMzEnIDogeydjb2RlJzonT1knLCduYW1lJzonT3lvJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6J1BMJywnbmFtZSc6J1BsYXRlYXUnfSxcbiAgICAnMzMnIDogeydjb2RlJzonUkknLCduYW1lJzonUml2ZXJzJ30sXG4gICAgJzM0JyA6IHsnY29kZSc6J1NPJywnbmFtZSc6J1Nva290byd9LFxuICAgICczNScgOiB7J2NvZGUnOidUQScsJ25hbWUnOidUYXJhYmEnfSxcbiAgICAnMzYnIDogeydjb2RlJzonWU8nLCduYW1lJzonWW9iZSd9LFxuICAgICczNycgOiB7J2NvZGUnOidaQScsJ25hbWUnOidaYW1mYXJhJ31cbiAgfSxcbiAgJ05VJzp7XG4gICAgJzEnIDogeydjb2RlJzonTUFLJywnbmFtZSc6J01ha2VmdSd9LFxuICAgICcyJyA6IHsnY29kZSc6J1RVQScsJ25hbWUnOidUdWFwYSd9LFxuICAgICczJyA6IHsnY29kZSc6J05BTScsJ25hbWUnOidOYW11a3VsdSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0hJSycsJ25hbWUnOidIaWt1dGF2YWtlJ30sXG4gICAgJzUnIDogeydjb2RlJzonVE9JJywnbmFtZSc6J1RvaSd9LFxuICAgICc2JyA6IHsnY29kZSc6J01VVCcsJ25hbWUnOidNdXRhbGF1J30sXG4gICAgJzcnIDogeydjb2RlJzonTEFLJywnbmFtZSc6J0xha2VwYSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0xJSycsJ25hbWUnOidMaWt1J30sXG4gICAgJzknIDogeydjb2RlJzonSEFLJywnbmFtZSc6J0hha3VwdSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidWQUknLCduYW1lJzonVmFpZWEnfSxcbiAgICAnMTEnIDogeydjb2RlJzonQVZBJywnbmFtZSc6J0F2YXRlbGUnfSxcbiAgICAnMTInIDogeydjb2RlJzonVEFNJywnbmFtZSc6J1RhbWFrYXV0b2dhJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0FMTycsJ25hbWUnOidBbG9maSBTb3V0aCd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidBTE8nLCduYW1lJzonQWxvZmkgTm9ydGgnfVxuICB9LFxuICAnTkYnOntcbiAgICAnMScgOiB7J2NvZGUnOidOT1InLCduYW1lJzonTm9yZm9sayBJc2xhbmQnfVxuICB9LFxuICAnTVAnOntcbiAgICAnMScgOiB7J2NvZGUnOidOJywnbmFtZSc6J05vcnRoZXJuIElzbGFuZHMnfSxcbiAgICAnMicgOiB7J2NvZGUnOidSJywnbmFtZSc6J1JvdGEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidTJywnbmFtZSc6J1NhaXBhbid9LFxuICAgICc0JyA6IHsnY29kZSc6J1QnLCduYW1lJzonVGluaWFuJ31cbiAgfSxcbiAgJ05PJzp7XG4gICAgJzEnIDogeydjb2RlJzonQUsnLCduYW1lJzonQWtlcnNodXMnfSxcbiAgICAnMicgOiB7J2NvZGUnOidBQScsJ25hbWUnOidBdXN0LUFnZGVyJ30sXG4gICAgJzMnIDogeydjb2RlJzonQlUnLCduYW1lJzonQnVza2VydWQnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidGTScsJ25hbWUnOidGaW5ubWFyayd9LFxuICAgICc1JyA6IHsnY29kZSc6J0hNJywnbmFtZSc6J0hlZG1hcmsnfSxcbiAgICAnNicgOiB7J2NvZGUnOidITCcsJ25hbWUnOidIb3JkYWxhbmQnfSxcbiAgICAnNycgOiB7J2NvZGUnOidNUicsJ25hbWUnOidNw7hyZSBvZyBSb21zZGFsJ30sXG4gICAgJzgnIDogeydjb2RlJzonTkwnLCduYW1lJzonTm9yZGxhbmQnfSxcbiAgICAnOScgOiB7J2NvZGUnOidOVCcsJ25hbWUnOidOb3JkLVRyw7huZGVsYWcnfSxcbiAgICAnMTAnIDogeydjb2RlJzonT1AnLCduYW1lJzonT3BwbGFuZCd9LFxuICAgICcxMScgOiB7J2NvZGUnOidPTCcsJ25hbWUnOidPc2xvJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1JMJywnbmFtZSc6J1JvZ2FsYW5kJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1NKJywnbmFtZSc6J1NvZ24gb2cgRmpvcmRhbmUnfSxcbiAgICAnMTQnIDogeydjb2RlJzonU1QnLCduYW1lJzonU8O4ci1UcsO4bmRlbGFnJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J1NWJywnbmFtZSc6J1N2YWxiYXJkJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J1RNJywnbmFtZSc6J1RlbGVtYXJrJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J1RSJywnbmFtZSc6J1Ryb21zJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J1ZBJywnbmFtZSc6J1Zlc3QtQWdkZXInfSxcbiAgICAnMTknIDogeydjb2RlJzonVkYnLCduYW1lJzonVmVzdGZvbGQnfSxcbiAgICAnMjAnIDogeydjb2RlJzonT0YnLCduYW1lJzonw5hzdGZvbGQnfVxuICB9LFxuICAnT00nOntcbiAgICAnMScgOiB7J2NvZGUnOidEQScsJ25hbWUnOidBZCBEYWtoaWxpeWFoJ30sXG4gICAgJzInIDogeydjb2RlJzonQkEnLCduYW1lJzonQWwgQmF0aW5haCd9LFxuICAgICczJyA6IHsnY29kZSc6J1dVJywnbmFtZSc6J0FsIFd1c3RhJ30sXG4gICAgJzQnIDogeydjb2RlJzonU0gnLCduYW1lJzonQXNoIFNoYXJxaXlhaCd9LFxuICAgICc1JyA6IHsnY29kZSc6J1pBJywnbmFtZSc6J0F6IFphaGlyYWgnfSxcbiAgICAnNicgOiB7J2NvZGUnOidNQScsJ25hbWUnOidNYXNxYXQnfSxcbiAgICAnNycgOiB7J2NvZGUnOidNVScsJ25hbWUnOidNdXNhbmRhbSd9LFxuICAgICc4JyA6IHsnY29kZSc6J1pVJywnbmFtZSc6J1p1ZmFyJ31cbiAgfSxcbiAgJ1BLJzp7XG4gICAgJzEnIDogeydjb2RlJzonQicsJ25hbWUnOidCYWxvY2hpc3Rhbid9LFxuICAgICcyJyA6IHsnY29kZSc6J1QnLCduYW1lJzonRmVkZXJhbGx5IEFkbWluaXN0ZXJlZCBUcmliYWwgQXInfSxcbiAgICAnMycgOiB7J2NvZGUnOidJJywnbmFtZSc6J0lzbGFtYWJhZCBDYXBpdGFsIFRlcnJpdG9yeSd9LFxuICAgICc0JyA6IHsnY29kZSc6J04nLCduYW1lJzonTm9ydGgtV2VzdCBGcm9udGllcid9LFxuICAgICc1JyA6IHsnY29kZSc6J1AnLCduYW1lJzonUHVuamFiJ30sXG4gICAgJzYnIDogeydjb2RlJzonUycsJ25hbWUnOidTaW5kaCd9XG4gIH0sXG4gICdQVyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FNJywnbmFtZSc6J0FpbWVsaWlrJ30sXG4gICAgJzInIDogeydjb2RlJzonQVInLCduYW1lJzonQWlyYWknfSxcbiAgICAnMycgOiB7J2NvZGUnOidBTicsJ25hbWUnOidBbmdhdXInfSxcbiAgICAnNCcgOiB7J2NvZGUnOidIQScsJ25hbWUnOidIYXRvaG9iZWknfSxcbiAgICAnNScgOiB7J2NvZGUnOidLQScsJ25hbWUnOidLYXlhbmdlbCd9LFxuICAgICc2JyA6IHsnY29kZSc6J0tPJywnbmFtZSc6J0tvcm9yJ30sXG4gICAgJzcnIDogeydjb2RlJzonTUUnLCduYW1lJzonTWVsZWtlb2snfSxcbiAgICAnOCcgOiB7J2NvZGUnOidOQScsJ25hbWUnOidOZ2FyYWFyZCd9LFxuICAgICc5JyA6IHsnY29kZSc6J05HJywnbmFtZSc6J05nYXJjaGVsb25nJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J05EJywnbmFtZSc6J05nYXJkbWF1J30sXG4gICAgJzExJyA6IHsnY29kZSc6J05UJywnbmFtZSc6J05nYXRwYW5nJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J05DJywnbmFtZSc6J05nY2hlc2FyJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J05SJywnbmFtZSc6J05nZXJlbWxlbmd1aSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidOVycsJ25hbWUnOidOZ2l3YWwnfSxcbiAgICAnMTUnIDogeydjb2RlJzonUEUnLCduYW1lJzonUGVsZWxpdSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidTTycsJ25hbWUnOidTb25zb3JvbCd9XG4gIH0sXG4gICdQQSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0JUJywnbmFtZSc6J0JvY2FzIGRlbCBUb3JvJ30sXG4gICAgJzInIDogeydjb2RlJzonQ0gnLCduYW1lJzonQ2hpcmlxdWknfSxcbiAgICAnMycgOiB7J2NvZGUnOidDQycsJ25hbWUnOidDb2NsZSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0NMJywnbmFtZSc6J0NvbG9uJ30sXG4gICAgJzUnIDogeydjb2RlJzonREEnLCduYW1lJzonRGFyaWVuJ30sXG4gICAgJzYnIDogeydjb2RlJzonSEUnLCduYW1lJzonSGVycmVyYSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0xTJywnbmFtZSc6J0xvcyBTYW50b3MnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidQQScsJ25hbWUnOidQYW5hbWEnfSxcbiAgICAnOScgOiB7J2NvZGUnOidTQicsJ25hbWUnOidTYW4gQmxhcyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidWRycsJ25hbWUnOidWZXJhZ3Vhcyd9XG4gIH0sXG4gICdQRyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0JWJywnbmFtZSc6J0JvdWdhaW52aWxsZSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0NFJywnbmFtZSc6J0NlbnRyYWwnfSxcbiAgICAnMycgOiB7J2NvZGUnOidDSCcsJ25hbWUnOidDaGltYnUnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidFSCcsJ25hbWUnOidFYXN0ZXJuIEhpZ2hsYW5kcyd9LFxuICAgICc1JyA6IHsnY29kZSc6J0VCJywnbmFtZSc6J0Vhc3QgTmV3IEJyaXRhaW4nfSxcbiAgICAnNicgOiB7J2NvZGUnOidFUycsJ25hbWUnOidFYXN0IFNlcGlrJ30sXG4gICAgJzcnIDogeydjb2RlJzonRU4nLCduYW1lJzonRW5nYSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0dVJywnbmFtZSc6J0d1bGYnfSxcbiAgICAnOScgOiB7J2NvZGUnOidNRCcsJ25hbWUnOidNYWRhbmcnfSxcbiAgICAnMTAnIDogeydjb2RlJzonTU4nLCduYW1lJzonTWFudXMnfSxcbiAgICAnMTEnIDogeydjb2RlJzonTUInLCduYW1lJzonTWlsbmUgQmF5J30sXG4gICAgJzEyJyA6IHsnY29kZSc6J01SJywnbmFtZSc6J01vcm9iZSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidOQycsJ25hbWUnOidOYXRpb25hbCBDYXBpdGFsJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J05JJywnbmFtZSc6J05ldyBJcmVsYW5kJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J05PJywnbmFtZSc6J05vcnRoZXJuJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J1NBJywnbmFtZSc6J1NhbmRhdW4nfSxcbiAgICAnMTcnIDogeydjb2RlJzonU0gnLCduYW1lJzonU291dGhlcm4gSGlnaGxhbmRzJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J1dFJywnbmFtZSc6J1dlc3Rlcm4nfSxcbiAgICAnMTknIDogeydjb2RlJzonV0gnLCduYW1lJzonV2VzdGVybiBIaWdobGFuZHMnfSxcbiAgICAnMjAnIDogeydjb2RlJzonV0InLCduYW1lJzonV2VzdCBOZXcgQnJpdGFpbid9XG4gIH0sXG4gICdQWSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FHJywnbmFtZSc6J0FsdG8gUGFyYWd1YXknfSxcbiAgICAnMicgOiB7J2NvZGUnOidBTicsJ25hbWUnOidBbHRvIFBhcmFuYSd9LFxuICAgICczJyA6IHsnY29kZSc6J0FNJywnbmFtZSc6J0FtYW1iYXknfSxcbiAgICAnNCcgOiB7J2NvZGUnOidBUycsJ25hbWUnOidBc3VuY2lvbid9LFxuICAgICc1JyA6IHsnY29kZSc6J0JPJywnbmFtZSc6J0JvcXVlcm9uJ30sXG4gICAgJzYnIDogeydjb2RlJzonQ0cnLCduYW1lJzonQ2FhZ3VhenUnfSxcbiAgICAnNycgOiB7J2NvZGUnOidDWicsJ25hbWUnOidDYWF6YXBhJ30sXG4gICAgJzgnIDogeydjb2RlJzonQ04nLCduYW1lJzonQ2FuaW5kZXl1J30sXG4gICAgJzknIDogeydjb2RlJzonQ0UnLCduYW1lJzonQ2VudHJhbCd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidDQycsJ25hbWUnOidDb25jZXBjaW9uJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0NEJywnbmFtZSc6J0NvcmRpbGxlcmEnfSxcbiAgICAnMTInIDogeydjb2RlJzonR1UnLCduYW1lJzonR3VhaXJhJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0lUJywnbmFtZSc6J0l0YXB1YSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidNSScsJ25hbWUnOidNaXNpb25lcyd9LFxuICAgICcxNScgOiB7J2NvZGUnOidORScsJ25hbWUnOidOZWVtYnVjdSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidQQScsJ25hbWUnOidQYXJhZ3VhcmknfSxcbiAgICAnMTcnIDogeydjb2RlJzonUEgnLCduYW1lJzonUHJlc2lkZW50ZSBIYXllcyd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidTUCcsJ25hbWUnOidTYW4gUGVkcm8nfVxuICB9LFxuICAnUEUnOntcbiAgICAnMScgOiB7J2NvZGUnOidBTScsJ25hbWUnOidBbWF6b25hcyd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FOJywnbmFtZSc6J0FuY2FzaCd9LFxuICAgICczJyA6IHsnY29kZSc6J0FQJywnbmFtZSc6J0FwdXJpbWFjJ30sXG4gICAgJzQnIDogeydjb2RlJzonQVInLCduYW1lJzonQXJlcXVpcGEnfSxcbiAgICAnNScgOiB7J2NvZGUnOidBWScsJ25hbWUnOidBeWFjdWNobyd9LFxuICAgICc2JyA6IHsnY29kZSc6J0NKJywnbmFtZSc6J0NhamFtYXJjYSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0NMJywnbmFtZSc6J0NhbGxhbyd9LFxuICAgICc4JyA6IHsnY29kZSc6J0NVJywnbmFtZSc6J0N1c2NvJ30sXG4gICAgJzknIDogeydjb2RlJzonSFYnLCduYW1lJzonSHVhbmNhdmVsaWNhJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0hPJywnbmFtZSc6J0h1YW51Y28nfSxcbiAgICAnMTEnIDogeydjb2RlJzonSUMnLCduYW1lJzonSWNhJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0pVJywnbmFtZSc6J0p1bmluJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0xEJywnbmFtZSc6J0xhIExpYmVydGFkJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0xZJywnbmFtZSc6J0xhbWJheWVxdWUnfSxcbiAgICAnMTUnIDogeydjb2RlJzonTEknLCduYW1lJzonTGltYSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidMTycsJ25hbWUnOidMb3JldG8nfSxcbiAgICAnMTcnIDogeydjb2RlJzonTUQnLCduYW1lJzonTWFkcmUgZGUgRGlvcyd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidNTycsJ25hbWUnOidNb3F1ZWd1YSd9LFxuICAgICcxOScgOiB7J2NvZGUnOidQQScsJ25hbWUnOidQYXNjbyd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidQSScsJ25hbWUnOidQaXVyYSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidQVScsJ25hbWUnOidQdW5vJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J1NNJywnbmFtZSc6J1NhbiBNYXJ0aW4nfSxcbiAgICAnMjMnIDogeydjb2RlJzonVEEnLCduYW1lJzonVGFjbmEnfSxcbiAgICAnMjQnIDogeydjb2RlJzonVFUnLCduYW1lJzonVHVtYmVzJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J1VDJywnbmFtZSc6J1VjYXlhbGknfVxuICB9LFxuICAnUEgnOntcbiAgICAnMScgOiB7J2NvZGUnOidBQlInLCduYW1lJzonQWJyYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FOTycsJ25hbWUnOidBZ3VzYW4gZGVsIE5vcnRlJ30sXG4gICAgJzMnIDogeydjb2RlJzonQVNVJywnbmFtZSc6J0FndXNhbiBkZWwgU3VyJ30sXG4gICAgJzQnIDogeydjb2RlJzonQUtMJywnbmFtZSc6J0FrbGFuJ30sXG4gICAgJzUnIDogeydjb2RlJzonQUxCJywnbmFtZSc6J0FsYmF5J30sXG4gICAgJzYnIDogeydjb2RlJzonQU5UJywnbmFtZSc6J0FudGlxdWUnfSxcbiAgICAnNycgOiB7J2NvZGUnOidBUFknLCduYW1lJzonQXBheWFvJ30sXG4gICAgJzgnIDogeydjb2RlJzonQVVSJywnbmFtZSc6J0F1cm9yYSd9LFxuICAgICc5JyA6IHsnY29kZSc6J0JBUycsJ25hbWUnOidCYXNpbGFuJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0JUQScsJ25hbWUnOidCYXRhYW4nfSxcbiAgICAnMTEnIDogeydjb2RlJzonQlRFJywnbmFtZSc6J0JhdGFuZXMnfSxcbiAgICAnMTInIDogeydjb2RlJzonQlRHJywnbmFtZSc6J0JhdGFuZ2FzJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0JMUicsJ25hbWUnOidCaWxpcmFuJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0JFTicsJ25hbWUnOidCZW5ndWV0J30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0JPTCcsJ25hbWUnOidCb2hvbCd9LFxuICAgICcxNicgOiB7J2NvZGUnOidCVUsnLCduYW1lJzonQnVraWRub24nfSxcbiAgICAnMTcnIDogeydjb2RlJzonQlVMJywnbmFtZSc6J0J1bGFjYW4nfSxcbiAgICAnMTgnIDogeydjb2RlJzonQ0FHJywnbmFtZSc6J0NhZ2F5YW4nfSxcbiAgICAnMTknIDogeydjb2RlJzonQ05PJywnbmFtZSc6J0NhbWFyaW5lcyBOb3J0ZSd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidDU1UnLCduYW1lJzonQ2FtYXJpbmVzIFN1cid9LFxuICAgICcyMScgOiB7J2NvZGUnOidDQU0nLCduYW1lJzonQ2FtaWd1aW4nfSxcbiAgICAnMjInIDogeydjb2RlJzonQ0FQJywnbmFtZSc6J0NhcGl6J30sXG4gICAgJzIzJyA6IHsnY29kZSc6J0NBVCcsJ25hbWUnOidDYXRhbmR1YW5lcyd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidDQVYnLCduYW1lJzonQ2F2aXRlJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J0NFQicsJ25hbWUnOidDZWJ1J30sXG4gICAgJzI2JyA6IHsnY29kZSc6J0NNUCcsJ25hbWUnOidDb21wb3N0ZWxhJ30sXG4gICAgJzI3JyA6IHsnY29kZSc6J0ROTycsJ25hbWUnOidEYXZhbyBkZWwgTm9ydGUnfSxcbiAgICAnMjgnIDogeydjb2RlJzonRFNVJywnbmFtZSc6J0RhdmFvIGRlbCBTdXInfSxcbiAgICAnMjknIDogeydjb2RlJzonRE9SJywnbmFtZSc6J0RhdmFvIE9yaWVudGFsJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J0VTQScsJ25hbWUnOidFYXN0ZXJuIFNhbWFyJ30sXG4gICAgJzMxJyA6IHsnY29kZSc6J0dVSScsJ25hbWUnOidHdWltYXJhcyd9LFxuICAgICczMicgOiB7J2NvZGUnOidJRlUnLCduYW1lJzonSWZ1Z2FvJ30sXG4gICAgJzMzJyA6IHsnY29kZSc6J0lOTycsJ25hbWUnOidJbG9jb3MgTm9ydGUnfSxcbiAgICAnMzQnIDogeydjb2RlJzonSVNVJywnbmFtZSc6J0lsb2NvcyBTdXInfSxcbiAgICAnMzUnIDogeydjb2RlJzonSUxPJywnbmFtZSc6J0lsb2lsbyd9LFxuICAgICczNicgOiB7J2NvZGUnOidJU0EnLCduYW1lJzonSXNhYmVsYSd9LFxuICAgICczNycgOiB7J2NvZGUnOidLQUwnLCduYW1lJzonS2FsaW5nYSd9LFxuICAgICczOCcgOiB7J2NvZGUnOidMQUcnLCduYW1lJzonTGFndW5hJ30sXG4gICAgJzM5JyA6IHsnY29kZSc6J0xOTycsJ25hbWUnOidMYW5hbyBkZWwgTm9ydGUnfSxcbiAgICAnNDAnIDogeydjb2RlJzonTFNVJywnbmFtZSc6J0xhbmFvIGRlbCBTdXInfSxcbiAgICAnNDEnIDogeydjb2RlJzonVU5JJywnbmFtZSc6J0xhIFVuaW9uJ30sXG4gICAgJzQyJyA6IHsnY29kZSc6J0xFWScsJ25hbWUnOidMZXl0ZSd9LFxuICAgICc0MycgOiB7J2NvZGUnOidNQUcnLCduYW1lJzonTWFndWluZGFuYW8nfSxcbiAgICAnNDQnIDogeydjb2RlJzonTVJOJywnbmFtZSc6J01hcmluZHVxdWUnfSxcbiAgICAnNDUnIDogeydjb2RlJzonTVNCJywnbmFtZSc6J01hc2JhdGUnfSxcbiAgICAnNDYnIDogeydjb2RlJzonTUlDJywnbmFtZSc6J01pbmRvcm8gT2NjaWRlbnRhbCd9LFxuICAgICc0NycgOiB7J2NvZGUnOidNSVInLCduYW1lJzonTWluZG9ybyBPcmllbnRhbCd9LFxuICAgICc0OCcgOiB7J2NvZGUnOidNU0MnLCduYW1lJzonTWlzYW1pcyBPY2NpZGVudGFsJ30sXG4gICAgJzQ5JyA6IHsnY29kZSc6J01PUicsJ25hbWUnOidNaXNhbWlzIE9yaWVudGFsJ30sXG4gICAgJzUwJyA6IHsnY29kZSc6J01PUCcsJ25hbWUnOidNb3VudGFpbid9LFxuICAgICc1MScgOiB7J2NvZGUnOidOT0MnLCduYW1lJzonTmVncm9zIE9jY2lkZW50YWwnfSxcbiAgICAnNTInIDogeydjb2RlJzonTk9SJywnbmFtZSc6J05lZ3JvcyBPcmllbnRhbCd9LFxuICAgICc1MycgOiB7J2NvZGUnOidOQ1QnLCduYW1lJzonTm9ydGggQ290YWJhdG8nfSxcbiAgICAnNTQnIDogeydjb2RlJzonTlNNJywnbmFtZSc6J05vcnRoZXJuIFNhbWFyJ30sXG4gICAgJzU1JyA6IHsnY29kZSc6J05FQycsJ25hbWUnOidOdWV2YSBFY2lqYSd9LFxuICAgICc1NicgOiB7J2NvZGUnOidOVlonLCduYW1lJzonTnVldmEgVml6Y2F5YSd9LFxuICAgICc1NycgOiB7J2NvZGUnOidQTFcnLCduYW1lJzonUGFsYXdhbid9LFxuICAgICc1OCcgOiB7J2NvZGUnOidQTVAnLCduYW1lJzonUGFtcGFuZ2EnfSxcbiAgICAnNTknIDogeydjb2RlJzonUE5HJywnbmFtZSc6J1Bhbmdhc2luYW4nfSxcbiAgICAnNjAnIDogeydjb2RlJzonUVpOJywnbmFtZSc6J1F1ZXpvbid9LFxuICAgICc2MScgOiB7J2NvZGUnOidRUk4nLCduYW1lJzonUXVpcmlubyd9LFxuICAgICc2MicgOiB7J2NvZGUnOidSSVonLCduYW1lJzonUml6YWwnfSxcbiAgICAnNjMnIDogeydjb2RlJzonUk9NJywnbmFtZSc6J1JvbWJsb24nfSxcbiAgICAnNjQnIDogeydjb2RlJzonU01SJywnbmFtZSc6J1NhbWFyJ30sXG4gICAgJzY1JyA6IHsnY29kZSc6J1NSRycsJ25hbWUnOidTYXJhbmdhbmknfSxcbiAgICAnNjYnIDogeydjb2RlJzonU1FKJywnbmFtZSc6J1NpcXVpam9yJ30sXG4gICAgJzY3JyA6IHsnY29kZSc6J1NSUycsJ25hbWUnOidTb3Jzb2dvbid9LFxuICAgICc2OCcgOiB7J2NvZGUnOidTQ08nLCduYW1lJzonU291dGggQ290YWJhdG8nfSxcbiAgICAnNjknIDogeydjb2RlJzonU0xFJywnbmFtZSc6J1NvdXRoZXJuIExleXRlJ30sXG4gICAgJzcwJyA6IHsnY29kZSc6J1NLVScsJ25hbWUnOidTdWx0YW4gS3VkYXJhdCd9LFxuICAgICc3MScgOiB7J2NvZGUnOidTTFUnLCduYW1lJzonU3VsdSd9LFxuICAgICc3MicgOiB7J2NvZGUnOidTTk8nLCduYW1lJzonU3VyaWdhbyBkZWwgTm9ydGUnfSxcbiAgICAnNzMnIDogeydjb2RlJzonU1NVJywnbmFtZSc6J1N1cmlnYW8gZGVsIFN1cid9LFxuICAgICc3NCcgOiB7J2NvZGUnOidUQVInLCduYW1lJzonVGFybGFjJ30sXG4gICAgJzc1JyA6IHsnY29kZSc6J1RBVycsJ25hbWUnOidUYXdpLVRhd2knfSxcbiAgICAnNzYnIDogeydjb2RlJzonWkJMJywnbmFtZSc6J1phbWJhbGVzJ30sXG4gICAgJzc3JyA6IHsnY29kZSc6J1pOTycsJ25hbWUnOidaYW1ib2FuZ2EgZGVsIE5vcnRlJ30sXG4gICAgJzc4JyA6IHsnY29kZSc6J1pTVScsJ25hbWUnOidaYW1ib2FuZ2EgZGVsIFN1cid9LFxuICAgICc3OScgOiB7J2NvZGUnOidaU0knLCduYW1lJzonWmFtYm9hbmdhIFNpYnVnYXknfVxuICB9LFxuICAnUE4nOntcbiAgICAnMScgOiB7J2NvZGUnOidQSVQnLCduYW1lJzonUGl0Y2Fpcm4gSXNsYW5kJ31cbiAgfSxcbiAgJ1BMJzp7XG4gICAgJzEnOiB7J2NvZGUnOidETycsJ25hbWUnOidEb2xub8WbbMSFc2tpZSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0tQJywnbmFtZSc6J0t1amF3c2tvLVBvbW9yc2tpZSd9LFxuICAgICczJzogeydjb2RlJzonTEwnLCduYW1lJzonTHViZWxza2llJ30sXG4gICAgJzQnOiB7J2NvZGUnOidMVScsJ25hbWUnOidMdWJ1c2tpZSd9LFxuICAgICc1Jzogeydjb2RlJzonTE8nLCduYW1lJzonxYHDs2R6a2llJ30sXG4gICAgJzYnOiB7J2NvZGUnOidNTCcsJ25hbWUnOidNYcWCb3BvbHNraWUnfSxcbiAgICAnNycgOiB7J2NvZGUnOidNWicsJ25hbWUnOidNYXpvd2llY2tpZSd9LFxuICAgICc4JyA6IHsnY29kZSc6J09QJywnbmFtZSc6J09wb2xza2llJ30sXG4gICAgJzknIDogeydjb2RlJzonUFAnLCduYW1lJzonUG9ka2FycGFja2llJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1BMJywnbmFtZSc6J1BvZGxhc2tpZSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidQTScsJ25hbWUnOidQb21vcnNraWUnfSxcbiAgICAnMTInOiB7J2NvZGUnOidTTCcsJ25hbWUnOifFmmzEhXNraWUnfSxcbiAgICAnMTMnOiB7J2NvZGUnOidTVycsJ25hbWUnOifFmndpxJl0b2tyenlza2llJ30sXG4gICAgJzE0Jzogeydjb2RlJzonV00nLCduYW1lJzonV2FybWnFhHNrby1NYXp1cnNraWUnfSxcbiAgICAnMTUnIDogeydjb2RlJzonV1AnLCduYW1lJzonV2llbGtvcG9sc2tpZSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidaQScsJ25hbWUnOidaYWNob2RuaW9wb21vcnNraWUnfVxuICB9LFxuICAnUFQnOntcbiAgICAnMScgOiB7J2NvZGUnOidBQycsJ25hbWUnOidBw6dvcmVzJ30sXG4gICAgJzInIDogeydjb2RlJzonQVYnLCduYW1lJzonQXZlaXJvJ30sXG4gICAgJzMnIDogeydjb2RlJzonQkUnLCduYW1lJzonQmVqYSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0JSJywnbmFtZSc6J0JyYWdhJ30sXG4gICAgJzUnIDogeydjb2RlJzonQkEnLCduYW1lJzonQnJhZ2Fuw6dhJ30sXG4gICAgJzYnIDogeydjb2RlJzonQ0InLCduYW1lJzonQ2FzdGVsbyBCcmFuY28nfSxcbiAgICAnNycgOiB7J2NvZGUnOidDTycsJ25hbWUnOidDb2ltYnJhJ30sXG4gICAgJzgnIDogeydjb2RlJzonRVYnLCduYW1lJzonw6l2b3JhJ30sXG4gICAgJzknIDogeydjb2RlJzonRkEnLCduYW1lJzonRmFybyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidHVScsJ25hbWUnOidHdWFyZGEnfSxcbiAgICAnMTInIDogeydjb2RlJzonTEUnLCduYW1lJzonTGVpcmlhJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0xJJywnbmFtZSc6J0xpc2JvYSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidNRScsJ25hbWUnOidNYWRlaXJhJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J1BPJywnbmFtZSc6J1BvcnRhbGVncmUnfSxcbiAgICAnMTYnIDogeydjb2RlJzonUFInLCduYW1lJzonUG9ydG8nfSxcbiAgICAnMTcnIDogeydjb2RlJzonU0EnLCduYW1lJzonU2FudGFyw6ltJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J1NFJywnbmFtZSc6J1NldMOaYmFsJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J1ZDJywnbmFtZSc6J1ZpYW5hIGRvIENhc3RlbG8nfSxcbiAgICAnMjAnIDogeydjb2RlJzonVlInLCduYW1lJzonVmlsYSBSZWFsJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J1ZJJywnbmFtZSc6J1Zpc2V1J31cbiAgfSxcbiAgJ1BSJzp7XG4gICAgJzEnIDogeydjb2RlJzonQS1BJywnbmFtZSc6J0HDsWFzY28nfSxcbiAgICAnMicgOiB7J2NvZGUnOidBREonLCduYW1lJzonQWRqdW50YXMnfSxcbiAgICAnMycgOiB7J2NvZGUnOidBR1UnLCduYW1lJzonQWd1YWRhJ30sXG4gICAgJzQnIDogeydjb2RlJzonQUdVJywnbmFtZSc6J0FndWFkaWxsYSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0FHVScsJ25hbWUnOidBZ3VhcyBCdWVuYXMnfSxcbiAgICAnNicgOiB7J2NvZGUnOidBSUInLCduYW1lJzonQWlib25pdG8nfSxcbiAgICAnNycgOiB7J2NvZGUnOidBUkUnLCduYW1lJzonQXJlY2libyd9LFxuICAgICc4JyA6IHsnY29kZSc6J0FSUicsJ25hbWUnOidBcnJveW8nfSxcbiAgICAnOScgOiB7J2NvZGUnOidCQVInLCduYW1lJzonQmFyY2Vsb25ldGEnfSxcbiAgICAnMTAnIDogeydjb2RlJzonQkFSJywnbmFtZSc6J0JhcnJhbnF1aXRhcyd9LFxuICAgICcxMScgOiB7J2NvZGUnOidCQVknLCduYW1lJzonQmF5YW3Ds24nfSxcbiAgICAnMTInIDogeydjb2RlJzonQ0FCJywnbmFtZSc6J0NhYm8gUm9qbyd9LFxuICAgICcxMycgOiB7J2NvZGUnOidDQUcnLCduYW1lJzonQ2FndWFzJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0NBTScsJ25hbWUnOidDYW11eSd9LFxuICAgICcxNScgOiB7J2NvZGUnOidDQU4nLCduYW1lJzonQ2Fuw7N2YW5hcyd9LFxuICAgICcxNicgOiB7J2NvZGUnOidDQVInLCduYW1lJzonQ2Fyb2xpbmEnfSxcbiAgICAnMTcnIDogeydjb2RlJzonQ0FUJywnbmFtZSc6J0NhdGHDsW8nfSxcbiAgICAnMTgnIDogeydjb2RlJzonQ0FZJywnbmFtZSc6J0NheWV5J30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0NFSScsJ25hbWUnOidDZWliYSd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidDSUEnLCduYW1lJzonQ2lhbGVzJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J0NJRCcsJ25hbWUnOidDaWRyYSd9LFxuICAgICcyMicgOiB7J2NvZGUnOidDT0EnLCduYW1lJzonQ29hbW8nfSxcbiAgICAnMjMnIDogeydjb2RlJzonQ09NJywnbmFtZSc6J0NvbWVyw61vJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J0NPUicsJ25hbWUnOidDb3JvemFsJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J0NVTCcsJ25hbWUnOidDdWxlYnJhJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6J0RPUicsJ25hbWUnOidEb3JhZG8nfSxcbiAgICAnMjcnIDogeydjb2RlJzonRkFKJywnbmFtZSc6J0ZhamFyZG8nfSxcbiAgICAnMjgnIDogeydjb2RlJzonRkxPJywnbmFtZSc6J0Zsb3JpZGEnfSxcbiAgICAnMjknIDogeydjb2RlJzonR1VBJywnbmFtZSc6J0d1YXlhbWEnfSxcbiAgICAnMzAnIDogeydjb2RlJzonR1VBJywnbmFtZSc6J0d1YXlhbmlsbGEnfSxcbiAgICAnMzEnIDogeydjb2RlJzonR1VBJywnbmFtZSc6J0d1YXluYWJvJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6J0dVUicsJ25hbWUnOidHdXJhYm8nfSxcbiAgICAnMzMnIDogeydjb2RlJzonR1XCoScsJ25hbWUnOidHdcOhbmljYSd9LFxuICAgICczNCcgOiB7J2NvZGUnOidIQVQnLCduYW1lJzonSGF0aWxsbyd9LFxuICAgICczNScgOiB7J2NvZGUnOidIT1InLCduYW1lJzonSG9ybWlndWVyb3MnfSxcbiAgICAnMzYnIDogeydjb2RlJzonSFVNJywnbmFtZSc6J0h1bWFjYW8nfSxcbiAgICAnMzcnIDogeydjb2RlJzonSVNBJywnbmFtZSc6J0lzYWJlbGEnfSxcbiAgICAnMzgnIDogeydjb2RlJzonSkFZJywnbmFtZSc6J0pheXV5YSd9LFxuICAgICczOScgOiB7J2NvZGUnOidKVUEnLCduYW1lJzonSnVhbmEgRMOtYXonfSxcbiAgICAnNDAnIDogeydjb2RlJzonSlVOJywnbmFtZSc6J0p1bmNvcyd9LFxuICAgICc0MScgOiB7J2NvZGUnOidMQUonLCduYW1lJzonTGFqYXMnfSxcbiAgICAnNDInIDogeydjb2RlJzonTEFSJywnbmFtZSc6J0xhcmVzJ30sXG4gICAgJzQzJyA6IHsnY29kZSc6J0xBUycsJ25hbWUnOidMYXMgTWFyw61hcyd9LFxuICAgICc0NCcgOiB7J2NvZGUnOidMQVMnLCduYW1lJzonTGFzIFBpZWRyYXMnfSxcbiAgICAnNDUnIDogeydjb2RlJzonTE/DlScsJ25hbWUnOidMb8OtemEnfSxcbiAgICAnNDYnIDogeydjb2RlJzonTFVRJywnbmFtZSc6J0x1cXVpbGxvJ30sXG4gICAgJzQ3JyA6IHsnY29kZSc6J01BTicsJ25hbWUnOidNYW5hdMOtJ30sXG4gICAgJzQ4JyA6IHsnY29kZSc6J01BUicsJ25hbWUnOidNYXJpY2FvJ30sXG4gICAgJzQ5JyA6IHsnY29kZSc6J01BVScsJ25hbWUnOidNYXVuYWJvJ30sXG4gICAgJzUwJyA6IHsnY29kZSc6J01BWScsJ25hbWUnOidNYXlhZ8O8ZXonfSxcbiAgICAnNTEnIDogeydjb2RlJzonTU9DJywnbmFtZSc6J01vY2EnfSxcbiAgICAnNTInIDogeydjb2RlJzonTU9SJywnbmFtZSc6J01vcm92aXMnfSxcbiAgICAnNTMnIDogeydjb2RlJzonTkFHJywnbmFtZSc6J05hZ3VhYm8nfSxcbiAgICAnNTQnIDogeydjb2RlJzonTkFSJywnbmFtZSc6J05hcmFuaml0byd9LFxuICAgICc1NScgOiB7J2NvZGUnOidPUk8nLCduYW1lJzonT3JvY292aXMnfSxcbiAgICAnNTYnIDogeydjb2RlJzonUEFUJywnbmFtZSc6J1BhdGlsbGFzJ30sXG4gICAgJzU3JyA6IHsnY29kZSc6J1BFLScsJ25hbWUnOidQZcOxdWVsYXMnfSxcbiAgICAnNTgnIDogeydjb2RlJzonUE9OJywnbmFtZSc6J1BvbmNlJ30sXG4gICAgJzU5JyA6IHsnY29kZSc6J1FVRScsJ25hbWUnOidRdWVicmFkaWxsYXMnfSxcbiAgICAnNjAnIDogeydjb2RlJzonUklOJywnbmFtZSc6J1JpbmPDs24nfSxcbiAgICAnNjEnIDogeydjb2RlJzonUklPJywnbmFtZSc6J1JpbyBHcmFuZGUnfSxcbiAgICAnNjInIDogeydjb2RlJzonU0FCJywnbmFtZSc6J1NhYmFuYSBHcmFuZGUnfSxcbiAgICAnNjMnIDogeydjb2RlJzonU0FMJywnbmFtZSc6J1NhbGluYXMnfSxcbiAgICAnNjQnIDogeydjb2RlJzonU0FOJywnbmFtZSc6J1NhbiBHZXJtw6BuJ30sXG4gICAgJzY1JyA6IHsnY29kZSc6J1NBTicsJ25hbWUnOidTYW4gSnVhbid9LFxuICAgICc2NicgOiB7J2NvZGUnOidTQU4nLCduYW1lJzonU2FuIExvcmVuem8nfSxcbiAgICAnNjcnIDogeydjb2RlJzonU0FOJywnbmFtZSc6J1NhbiBTZWJhc3Rpw6BuJ30sXG4gICAgJzY4JyA6IHsnY29kZSc6J1NBTicsJ25hbWUnOidTYW50YSBJc2FiZWwnfSxcbiAgICAnNjknIDogeydjb2RlJzonVE9BJywnbmFtZSc6J1RvYSBBbHRhJ30sXG4gICAgJzcwJyA6IHsnY29kZSc6J1RPQScsJ25hbWUnOidUb2EgQmFqYSd9LFxuICAgICc3MScgOiB7J2NvZGUnOidUUlUnLCduYW1lJzonVHJ1amlsbG8gQWx0byd9LFxuICAgICc3MicgOiB7J2NvZGUnOidVVFUnLCduYW1lJzonVXR1YWRvJ30sXG4gICAgJzczJyA6IHsnY29kZSc6J1ZFRycsJ25hbWUnOidWZWdhIEFsdGEnfSxcbiAgICAnNzQnIDogeydjb2RlJzonVkVHJywnbmFtZSc6J1ZlZ2EgQmFqYSd9LFxuICAgICc3NScgOiB7J2NvZGUnOidWSUUnLCduYW1lJzonVmllcXVlcyd9LFxuICAgICc3NicgOiB7J2NvZGUnOidWSUwnLCduYW1lJzonVmlsbGFsYmEnfSxcbiAgICAnNzcnIDogeydjb2RlJzonWUFCJywnbmFtZSc6J1lhYnVjb2EnfSxcbiAgICAnNzgnIDogeydjb2RlJzonWUFVJywnbmFtZSc6J1lhdWNvJ31cbiAgfSxcbiAgJ1FBJzp7XG4gICAgJzEnIDogeydjb2RlJzonRFcnLCduYW1lJzonQWQgRGF3aGFoJ30sXG4gICAgJzInIDogeydjb2RlJzonR1cnLCduYW1lJzonQWwgR2h1d2F5cml5YWgnfSxcbiAgICAnMycgOiB7J2NvZGUnOidKTScsJ25hbWUnOidBbCBKdW1heWxpeWFoJ30sXG4gICAgJzQnIDogeydjb2RlJzonS1InLCduYW1lJzonQWwgS2hhd3InfSxcbiAgICAnNScgOiB7J2NvZGUnOidXSycsJ25hbWUnOidBbCBXYWtyYWgnfSxcbiAgICAnNicgOiB7J2NvZGUnOidSTicsJ25hbWUnOidBciBSYXl5YW4nfSxcbiAgICAnNycgOiB7J2NvZGUnOidKQicsJ25hbWUnOidKYXJheWFuIGFsIEJhdGluYWgnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidNUycsJ25hbWUnOidNYWRpbmF0IGFzaCBTaGFtYWwnfSxcbiAgICAnOScgOiB7J2NvZGUnOidVRCcsJ25hbWUnOidVbW0gU2FcXCdpZCd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidVTCcsJ25hbWUnOidVbW0gU2FsYWwnfVxuICB9LFxuICAnUk8nOntcbiAgICAnMScgOiB7J2NvZGUnOidBQicsJ25hbWUnOidBbGJhJ30sXG4gICAgJzInIDogeydjb2RlJzonQVInLCduYW1lJzonQXJhZCd9LFxuICAgICczJyA6IHsnY29kZSc6J0FHJywnbmFtZSc6J0FyZ2VzJ30sXG4gICAgJzQnIDogeydjb2RlJzonQkMnLCduYW1lJzonQmFjYXUnfSxcbiAgICAnNScgOiB7J2NvZGUnOidCSCcsJ25hbWUnOidCaWhvcid9LFxuICAgICc2JyA6IHsnY29kZSc6J0JOJywnbmFtZSc6J0Jpc3RyaXRhLU5hc2F1ZCd9LFxuICAgICc3JyA6IHsnY29kZSc6J0JUJywnbmFtZSc6J0JvdG9zYW5pJ30sXG4gICAgJzgnIDogeydjb2RlJzonQlYnLCduYW1lJzonQnJhc292J30sXG4gICAgJzknIDogeydjb2RlJzonQlInLCduYW1lJzonQnJhaWxhJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0InLCduYW1lJzonQnVjdXJlc3RpJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0JaJywnbmFtZSc6J0J1emF1J30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0NTJywnbmFtZSc6J0NhcmFzLVNldmVyaW4nfSxcbiAgICAnMTMnIDogeydjb2RlJzonQ0wnLCduYW1lJzonQ2FsYXJhc2knfSxcbiAgICAnMTQnIDogeydjb2RlJzonQ0onLCduYW1lJzonQ2x1aid9LFxuICAgICcxNScgOiB7J2NvZGUnOidDVCcsJ25hbWUnOidDb25zdGFudGEnfSxcbiAgICAnMTYnIDogeydjb2RlJzonQ1YnLCduYW1lJzonQ292YXNuYSd9LFxuICAgICcxNycgOiB7J2NvZGUnOidEQicsJ25hbWUnOidEaW1ib3ZpdGEnfSxcbiAgICAnMTgnIDogeydjb2RlJzonREonLCduYW1lJzonRG9said9LFxuICAgICcxOScgOiB7J2NvZGUnOidHTCcsJ25hbWUnOidHYWxhdGknfSxcbiAgICAnMjAnIDogeydjb2RlJzonR1InLCduYW1lJzonR2l1cmdpdSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidHSicsJ25hbWUnOidHb3JqJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J0hSJywnbmFtZSc6J0hhcmdoaXRhJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J0hEJywnbmFtZSc6J0h1bmVkb2FyYSd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidJTCcsJ25hbWUnOidJYWxvbWl0YSd9LFxuICAgICcyNScgOiB7J2NvZGUnOidJUycsJ25hbWUnOidJYXNpJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6J0lGJywnbmFtZSc6J0lsZm92J30sXG4gICAgJzI3JyA6IHsnY29kZSc6J01NJywnbmFtZSc6J01hcmFtdXJlcyd9LFxuICAgICcyOCcgOiB7J2NvZGUnOidNSCcsJ25hbWUnOidNZWhlZGludGknfSxcbiAgICAnMjknIDogeydjb2RlJzonTVMnLCduYW1lJzonTXVyZXMnfSxcbiAgICAnMzAnIDogeydjb2RlJzonTlQnLCduYW1lJzonTmVhbXQnfSxcbiAgICAnMzEnIDogeydjb2RlJzonT1QnLCduYW1lJzonT2x0J30sXG4gICAgJzMyJyA6IHsnY29kZSc6J1BIJywnbmFtZSc6J1ByYWhvdmEnfSxcbiAgICAnMzMnIDogeydjb2RlJzonU00nLCduYW1lJzonU2F0dS1NYXJlJ30sXG4gICAgJzM0JyA6IHsnY29kZSc6J1NKJywnbmFtZSc6J1NhbGFqJ30sXG4gICAgJzM1JyA6IHsnY29kZSc6J1NCJywnbmFtZSc6J1NpYml1J30sXG4gICAgJzM2JyA6IHsnY29kZSc6J1NWJywnbmFtZSc6J1N1Y2VhdmEnfSxcbiAgICAnMzcnIDogeydjb2RlJzonVFInLCduYW1lJzonVGVsZW9ybWFuJ30sXG4gICAgJzM4JyA6IHsnY29kZSc6J1RNJywnbmFtZSc6J1RpbWlzJ30sXG4gICAgJzM5JyA6IHsnY29kZSc6J1RMJywnbmFtZSc6J1R1bGNlYSd9LFxuICAgICc0MCcgOiB7J2NvZGUnOidWUycsJ25hbWUnOidWYXNsdWknfSxcbiAgICAnNDEnIDogeydjb2RlJzonVkwnLCduYW1lJzonVmFsY2VhJ30sXG4gICAgJzQyJyA6IHsnY29kZSc6J1ZOJywnbmFtZSc6J1ZyYW5jZWEnfVxuICB9LFxuICAnUlUnOntcbiAgICAnMScgOiB7J2NvZGUnOidBQicsJ25hbWUnOidBYmFrYW4nfSxcbiAgICAnMicgOiB7J2NvZGUnOidBRycsJ25hbWUnOidBZ2luc2tveWUnfSxcbiAgICAnMycgOiB7J2NvZGUnOidBTicsJ25hbWUnOidBbmFkeXInfSxcbiAgICAnNCcgOiB7J2NvZGUnOidBUicsJ25hbWUnOidBcmthaGFuZ2Vsc2snfSxcbiAgICAnNScgOiB7J2NvZGUnOidBUycsJ25hbWUnOidBc3RyYWtoYW4nfSxcbiAgICAnNicgOiB7J2NvZGUnOidCQScsJ25hbWUnOidCYXJuYXVsJ30sXG4gICAgJzcnIDogeydjb2RlJzonQkUnLCduYW1lJzonQmVsZ29yb2QnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidCSScsJ25hbWUnOidCaXJvYmlkemhhbid9LFxuICAgICc5JyA6IHsnY29kZSc6J0JMJywnbmFtZSc6J0JsYWdvdmVzaGNoZW5zayd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidCUicsJ25hbWUnOidCcnlhbnNrJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0NIJywnbmFtZSc6J0NoZWJva3NhcnknfSxcbiAgICAnMTInIDogeydjb2RlJzonQ0wnLCduYW1lJzonQ2hlbHlhYmluc2snfSxcbiAgICAnMTMnIDogeydjb2RlJzonQ1InLCduYW1lJzonQ2hlcmtlc3NrJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0NJJywnbmFtZSc6J0NoaXRhJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0RVJywnbmFtZSc6J0R1ZGlua2EnfSxcbiAgICAnMTYnIDogeydjb2RlJzonRUwnLCduYW1lJzonRWxpc3RhJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J0dPJywnbmFtZSc6J0dvbW8tQWx0YXlzayd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidHQScsJ25hbWUnOidHb3Juby1BbHRheXNrJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0dSJywnbmFtZSc6J0dyb3pueXknfSxcbiAgICAnMjAnIDogeydjb2RlJzonSVInLCduYW1lJzonSXJrdXRzayd9LFxuICAgICcyMScgOiB7J2NvZGUnOidJVicsJ25hbWUnOidJdmFub3ZvJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J0laJywnbmFtZSc6J0l6aGV2c2snfSxcbiAgICAnMjMnIDogeydjb2RlJzonS0EnLCduYW1lJzonS2FsaW5pZ3JhZCd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidLTCcsJ25hbWUnOidLYWx1Z2EnfSxcbiAgICAnMjUnIDogeydjb2RlJzonS1MnLCduYW1lJzonS2Fzbm9kYXInfSxcbiAgICAnMjYnIDogeydjb2RlJzonS1onLCduYW1lJzonS2F6YW4nfSxcbiAgICAnMjcnIDogeydjb2RlJzonS0UnLCduYW1lJzonS2VtZXJvdm8nfSxcbiAgICAnMjgnIDogeydjb2RlJzonS0gnLCduYW1lJzonS2hhYmFyb3Zzayd9LFxuICAgICcyOScgOiB7J2NvZGUnOidLTScsJ25hbWUnOidLaGFudHktTWFuc2l5c2snfSxcbiAgICAnMzAnIDogeydjb2RlJzonS08nLCduYW1lJzonS29zdHJvbWEnfSxcbiAgICAnMzEnIDogeydjb2RlJzonS1InLCduYW1lJzonS3Jhc25vZGFyJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6J0tOJywnbmFtZSc6J0tyYXNub3lhcnNrJ30sXG4gICAgJzMzJyA6IHsnY29kZSc6J0tVJywnbmFtZSc6J0t1ZHlta2FyJ30sXG4gICAgJzM0JyA6IHsnY29kZSc6J0tHJywnbmFtZSc6J0t1cmdhbid9LFxuICAgICczNScgOiB7J2NvZGUnOidLSycsJ25hbWUnOidLdXJzayd9LFxuICAgICczNicgOiB7J2NvZGUnOidLWScsJ25hbWUnOidLeXp5bCd9LFxuICAgICczNycgOiB7J2NvZGUnOidMSScsJ25hbWUnOidMaXBldHNrJ30sXG4gICAgJzM4JyA6IHsnY29kZSc6J01BJywnbmFtZSc6J01hZ2FkYW4nfSxcbiAgICAnMzknIDogeydjb2RlJzonTUsnLCduYW1lJzonTWFraGFjaGthbGEnfSxcbiAgICAnNDAnIDogeydjb2RlJzonTVknLCduYW1lJzonTWF5a29wJ30sXG4gICAgJzQxJyA6IHsnY29kZSc6J01PJywnbmFtZSc6J01vc2Nvdyd9LFxuICAgICc0MicgOiB7J2NvZGUnOidNVScsJ25hbWUnOidNdXJtYW5zayd9LFxuICAgICc0MycgOiB7J2NvZGUnOidOQScsJ25hbWUnOidOYWxjaGlrJ30sXG4gICAgJzQ0JyA6IHsnY29kZSc6J05SJywnbmFtZSc6J05hcnlhbiBNYXInfSxcbiAgICAnNDUnIDogeydjb2RlJzonTlonLCduYW1lJzonTmF6cmFuJ30sXG4gICAgJzQ2JyA6IHsnY29kZSc6J05JJywnbmFtZSc6J05pemhuaXkgTm92Z29yb2QnfSxcbiAgICAnNDcnIDogeydjb2RlJzonTk8nLCduYW1lJzonTm92Z29yb2QnfSxcbiAgICAnNDgnIDogeydjb2RlJzonTlYnLCduYW1lJzonTm92b3NpYmlyc2snfSxcbiAgICAnNDknIDogeydjb2RlJzonT00nLCduYW1lJzonT21zayd9LFxuICAgICc1MCcgOiB7J2NvZGUnOidPUicsJ25hbWUnOidPcmVsJ30sXG4gICAgJzUxJyA6IHsnY29kZSc6J09FJywnbmFtZSc6J09yZW5idXJnJ30sXG4gICAgJzUyJyA6IHsnY29kZSc6J1BBJywnbmFtZSc6J1BhbGFuYSd9LFxuICAgICc1MycgOiB7J2NvZGUnOidQRScsJ25hbWUnOidQZW56YSd9LFxuICAgICc1NCcgOiB7J2NvZGUnOidQUicsJ25hbWUnOidQZXJtJ30sXG4gICAgJzU1JyA6IHsnY29kZSc6J1BLJywnbmFtZSc6J1BldHJvcGF2bG92c2stS2FtY2hhdHNraXknfSxcbiAgICAnNTYnIDogeydjb2RlJzonUFQnLCduYW1lJzonUGV0cm96YXZvZHNrJ30sXG4gICAgJzU3JyA6IHsnY29kZSc6J1BTJywnbmFtZSc6J1Bza292J30sXG4gICAgJzU4JyA6IHsnY29kZSc6J1JPJywnbmFtZSc6J1Jvc3Rvdi1uYS1Eb251J30sXG4gICAgJzU5JyA6IHsnY29kZSc6J1JZJywnbmFtZSc6J1J5YXphbid9LFxuICAgICc2MCcgOiB7J2NvZGUnOidTTCcsJ25hbWUnOidTYWxla2hhcmQnfSxcbiAgICAnNjEnIDogeydjb2RlJzonU0EnLCduYW1lJzonU2FtYXJhJ30sXG4gICAgJzYyJyA6IHsnY29kZSc6J1NSJywnbmFtZSc6J1NhcmFuc2snfSxcbiAgICAnNjMnIDogeydjb2RlJzonU1YnLCduYW1lJzonU2FyYXRvdid9LFxuICAgICc2NCcgOiB7J2NvZGUnOidTTScsJ25hbWUnOidTbW9sZW5zayd9LFxuICAgICc2NScgOiB7J2NvZGUnOidTUCcsJ25hbWUnOidTdC4gUGV0ZXJzYnVyZyd9LFxuICAgICc2NicgOiB7J2NvZGUnOidTVCcsJ25hbWUnOidTdGF2cm9wb2wnfSxcbiAgICAnNjcnIDogeydjb2RlJzonU1knLCduYW1lJzonU3lrdHl2a2FyJ30sXG4gICAgJzY4JyA6IHsnY29kZSc6J1RBJywnbmFtZSc6J1RhbWJvdid9LFxuICAgICc2OScgOiB7J2NvZGUnOidUTycsJ25hbWUnOidUb21zayd9LFxuICAgICc3MCcgOiB7J2NvZGUnOidUVScsJ25hbWUnOidUdWxhJ30sXG4gICAgJzcxJyA6IHsnY29kZSc6J1RSJywnbmFtZSc6J1R1cmEnfSxcbiAgICAnNzInIDogeydjb2RlJzonVFYnLCduYW1lJzonVHZlcid9LFxuICAgICc3MycgOiB7J2NvZGUnOidUWScsJ25hbWUnOidUeXVtZW4nfSxcbiAgICAnNzQnIDogeydjb2RlJzonVUYnLCduYW1lJzonVWZhJ30sXG4gICAgJzc1JyA6IHsnY29kZSc6J1VMJywnbmFtZSc6J1VsXFwneWFub3Zzayd9LFxuICAgICc3NicgOiB7J2NvZGUnOidVVScsJ25hbWUnOidVbGFuLVVkZSd9LFxuICAgICc3NycgOiB7J2NvZGUnOidVUycsJ25hbWUnOidVc3RcXCctT3JkeW5za2l5J30sXG4gICAgJzc4JyA6IHsnY29kZSc6J1ZMJywnbmFtZSc6J1ZsYWRpa2F2a2F6J30sXG4gICAgJzc5JyA6IHsnY29kZSc6J1ZBJywnbmFtZSc6J1ZsYWRpbWlyJ30sXG4gICAgJzgwJyA6IHsnY29kZSc6J1ZWJywnbmFtZSc6J1ZsYWRpdm9zdG9rJ30sXG4gICAgJzgxJyA6IHsnY29kZSc6J1ZHJywnbmFtZSc6J1ZvbGdvZ3JhZCd9LFxuICAgICc4MicgOiB7J2NvZGUnOidWRCcsJ25hbWUnOidWb2xvZ2RhJ30sXG4gICAgJzgzJyA6IHsnY29kZSc6J1ZPJywnbmFtZSc6J1Zvcm9uZXpoJ30sXG4gICAgJzg0JyA6IHsnY29kZSc6J1ZZJywnbmFtZSc6J1Z5YXRrYSd9LFxuICAgICc4NScgOiB7J2NvZGUnOidZQScsJ25hbWUnOidZYWt1dHNrJ30sXG4gICAgJzg2JyA6IHsnY29kZSc6J1lSJywnbmFtZSc6J1lhcm9zbGF2bCd9LFxuICAgICc4NycgOiB7J2NvZGUnOidZRScsJ25hbWUnOidZZWthdGVyaW5idXJnJ30sXG4gICAgJzg4JyA6IHsnY29kZSc6J1lPJywnbmFtZSc6J1lvc2hrYXItT2xhJ31cbiAgfSxcbiAgJ1JXJzp7XG4gICAgJzEnIDogeydjb2RlJzonQlUnLCduYW1lJzonQnV0YXJlJ30sXG4gICAgJzInIDogeydjb2RlJzonQlknLCduYW1lJzonQnl1bWJhJ30sXG4gICAgJzMnIDogeydjb2RlJzonQ1knLCduYW1lJzonQ3lhbmd1Z3UnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidHSycsJ25hbWUnOidHaWtvbmdvcm8nfSxcbiAgICAnNScgOiB7J2NvZGUnOidHUycsJ25hbWUnOidHaXNlbnlpJ30sXG4gICAgJzYnIDogeydjb2RlJzonR1QnLCduYW1lJzonR2l0YXJhbWEnfSxcbiAgICAnNycgOiB7J2NvZGUnOidLRycsJ25hbWUnOidLaWJ1bmdvJ30sXG4gICAgJzgnIDogeydjb2RlJzonS1knLCduYW1lJzonS2lidXllJ30sXG4gICAgJzknIDogeydjb2RlJzonS1InLCduYW1lJzonS2lnYWxpIFJ1cmFsZSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidLVicsJ25hbWUnOidLaWdhbGktdmlsbGUnfSxcbiAgICAnMTEnIDogeydjb2RlJzonUlUnLCduYW1lJzonUnVoZW5nZXJpJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1VNJywnbmFtZSc6J1VtdXRhcmEnfVxuICB9LFxuICAnS04nOntcbiAgICAnMScgOiB7J2NvZGUnOidDQ04nLCduYW1lJzonQ2hyaXN0IENodXJjaCBOaWNob2xhIFRvd24nfSxcbiAgICAnMicgOiB7J2NvZGUnOidTQVMnLCduYW1lJzonU2FpbnQgQW5uZSBTYW5keSBQb2ludCd9LFxuICAgICczJyA6IHsnY29kZSc6J1NHQicsJ25hbWUnOidTYWludCBHZW9yZ2UgQmFzc2V0ZXJyZSd9LFxuICAgICc0JyA6IHsnY29kZSc6J1NHRycsJ25hbWUnOidTYWludCBHZW9yZ2UgR2luZ2VybGFuZCd9LFxuICAgICc1JyA6IHsnY29kZSc6J1NKVycsJ25hbWUnOidTYWludCBKYW1lcyBXaW5kd2FyZCd9LFxuICAgICc2JyA6IHsnY29kZSc6J1NKQycsJ25hbWUnOidTYWludCBKb2huIENhcGVzdGVycmUnfSxcbiAgICAnNycgOiB7J2NvZGUnOidTSkYnLCduYW1lJzonU2FpbnQgSm9obiBGaWd0cmVlJ30sXG4gICAgJzgnIDogeydjb2RlJzonU01DJywnbmFtZSc6J1NhaW50IE1hcnkgQ2F5b24nfSxcbiAgICAnOScgOiB7J2NvZGUnOidDQVAnLCduYW1lJzonU2FpbnQgUGF1bCBDYXBlc3RlcnJlJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0NIQScsJ25hbWUnOidTYWludCBQYXVsIENoYXJsZXN0b3duJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1NQQicsJ25hbWUnOidTYWludCBQZXRlciBCYXNzZXRlcnJlJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1NUTCcsJ25hbWUnOidTYWludCBUaG9tYXMgTG93bGFuZCd9LFxuICAgICcxMycgOiB7J2NvZGUnOidTVE0nLCduYW1lJzonU2FpbnQgVGhvbWFzIE1pZGRsZSBJc2xhbmQnfSxcbiAgICAnMTQnIDogeydjb2RlJzonVFBQJywnbmFtZSc6J1RyaW5pdHkgUGFsbWV0dG8gUG9pbnQnfVxuICB9LFxuICAnTEMnOntcbiAgICAnMScgOiB7J2NvZGUnOidBUicsJ25hbWUnOidBbnNlLWxhLVJheWUnfSxcbiAgICAnMicgOiB7J2NvZGUnOidDQScsJ25hbWUnOidDYXN0cmllcyd9LFxuICAgICczJyA6IHsnY29kZSc6J0NIJywnbmFtZSc6J0Nob2lzZXVsJ30sXG4gICAgJzQnIDogeydjb2RlJzonREEnLCduYW1lJzonRGF1cGhpbid9LFxuICAgICc1JyA6IHsnY29kZSc6J0RFJywnbmFtZSc6J0Rlbm5lcnknfSxcbiAgICAnNicgOiB7J2NvZGUnOidHSScsJ25hbWUnOidHcm9zLUlzbGV0J30sXG4gICAgJzcnIDogeydjb2RlJzonTEEnLCduYW1lJzonTGFib3JpZSd9LFxuICAgICc4JyA6IHsnY29kZSc6J01JJywnbmFtZSc6J01pY291ZCd9LFxuICAgICc5JyA6IHsnY29kZSc6J1BSJywnbmFtZSc6J1ByYXNsaW4nfSxcbiAgICAnMTAnIDogeydjb2RlJzonU08nLCduYW1lJzonU291ZnJpZXJlJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1ZGJywnbmFtZSc6J1ZpZXV4LUZvcnQnfVxuICB9LFxuICAnVkMnOntcbiAgICAnMScgOiB7J2NvZGUnOidDJywnbmFtZSc6J0NoYXJsb3R0ZSd9LFxuICAgICcyJyA6IHsnY29kZSc6J1InLCduYW1lJzonR3JlbmFkaW5lcyd9LFxuICAgICczJyA6IHsnY29kZSc6J0EnLCduYW1lJzonU2FpbnQgQW5kcmV3J30sXG4gICAgJzQnIDogeydjb2RlJzonRCcsJ25hbWUnOidTYWludCBEYXZpZCd9LFxuICAgICc1JyA6IHsnY29kZSc6J0cnLCduYW1lJzonU2FpbnQgR2VvcmdlJ30sXG4gICAgJzYnIDogeydjb2RlJzonUCcsJ25hbWUnOidTYWludCBQYXRyaWNrJ31cbiAgfSxcbiAgJ1dTJzp7XG4gICAgJzEnIDogeydjb2RlJzonQU4nLCduYW1lJzonQVxcJ2FuYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FJJywnbmFtZSc6J0FpZ2EtaS1sZS1UYWknfSxcbiAgICAnMycgOiB7J2NvZGUnOidBVCcsJ25hbWUnOidBdHVhJ30sXG4gICAgJzQnIDogeydjb2RlJzonRkEnLCduYW1lJzonRmFcXCdhc2FsZWxlYWdhJ30sXG4gICAgJzUnIDogeydjb2RlJzonR0UnLCduYW1lJzonR2FnYVxcJ2VtYXVnYSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0dGJywnbmFtZSc6J0dhZ2FpZm9tYXVnYSd9LFxuICAgICc3JyA6IHsnY29kZSc6J1BBJywnbmFtZSc6J1BhbGF1bGknfSxcbiAgICAnOCcgOiB7J2NvZGUnOidTQScsJ25hbWUnOidTYXR1cGFcXCdpdGVhJ30sXG4gICAgJzknIDogeydjb2RlJzonVFUnLCduYW1lJzonVHVhbWFzYWdhJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1ZGJywnbmFtZSc6J1ZhXFwnYS1vLUZvbm90aSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidWUycsJ25hbWUnOidWYWlzaWdhbm8nfVxuICB9LFxuICAnU00nOntcbiAgICAnMScgOiB7J2NvZGUnOidBQycsJ25hbWUnOidBY3F1YXZpdmEnfSxcbiAgICAnMicgOiB7J2NvZGUnOidCTScsJ25hbWUnOidCb3JnbyBNYWdnaW9yZSd9LFxuICAgICczJyA6IHsnY29kZSc6J0NIJywnbmFtZSc6J0NoaWVzYW51b3ZhJ30sXG4gICAgJzQnIDogeydjb2RlJzonRE8nLCduYW1lJzonRG9tYWduYW5vJ30sXG4gICAgJzUnIDogeydjb2RlJzonRkEnLCduYW1lJzonRmFldGFubyd9LFxuICAgICc2JyA6IHsnY29kZSc6J0ZJJywnbmFtZSc6J0Zpb3JlbnRpbm8nfSxcbiAgICAnNycgOiB7J2NvZGUnOidNTycsJ25hbWUnOidNb250ZWdpYXJkaW5vJ30sXG4gICAgJzgnIDogeydjb2RlJzonU00nLCduYW1lJzonQ2l0dGEgZGkgU2FuIE1hcmlubyd9LFxuICAgICc5JyA6IHsnY29kZSc6J1NFJywnbmFtZSc6J1NlcnJhdmFsbGUnfVxuICB9LFxuICAnU1QnOntcbiAgICAnMScgOiB7J2NvZGUnOidTJywnbmFtZSc6J1NhbyBUb21lJ30sXG4gICAgJzInIDogeydjb2RlJzonUCcsJ25hbWUnOidQcmluY2lwZSd9XG4gIH0sXG4gICdTQSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0JIJywnbmFtZSc6J0FsIEJhaGFoJ30sXG4gICAgJzInIDogeydjb2RlJzonSFMnLCduYW1lJzonQWwgSHVkdWQgYXNoIFNoYW1hbGl5YWgnfSxcbiAgICAnMycgOiB7J2NvZGUnOidKRicsJ25hbWUnOidBbCBKYXdmJ30sXG4gICAgJzQnIDogeydjb2RlJzonTUQnLCduYW1lJzonQWwgTWFkaW5haCd9LFxuICAgICc1JyA6IHsnY29kZSc6J1FTJywnbmFtZSc6J0FsIFFhc2ltJ30sXG4gICAgJzYnIDogeydjb2RlJzonUkQnLCduYW1lJzonQXIgUml5YWQnfSxcbiAgICAnNycgOiB7J2NvZGUnOidBUScsJ25hbWUnOidBc2ggU2hhcnFpeWFoIChFYXN0ZXJuKSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0FTJywnbmFtZSc6J1xcJ0FzaXInfSxcbiAgICAnOScgOiB7J2NvZGUnOidITCcsJ25hbWUnOidIYVxcJ2lsJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0paJywnbmFtZSc6J0ppemFuJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J01MJywnbmFtZSc6J01ha2thaCd9LFxuICAgICcxMicgOiB7J2NvZGUnOidOUicsJ25hbWUnOidOYWpyYW4nfSxcbiAgICAnMTMnIDogeydjb2RlJzonVEInLCduYW1lJzonVGFidWsnfVxuICB9LFxuICAnU04nOntcbiAgICAnMScgOiB7J2NvZGUnOidEQScsJ25hbWUnOidEYWthcid9LFxuICAgICcyJyA6IHsnY29kZSc6J0RJJywnbmFtZSc6J0Rpb3VyYmVsJ30sXG4gICAgJzMnIDogeydjb2RlJzonRkEnLCduYW1lJzonRmF0aWNrJ30sXG4gICAgJzQnIDogeydjb2RlJzonS0EnLCduYW1lJzonS2FvbGFjayd9LFxuICAgICc1JyA6IHsnY29kZSc6J0tPJywnbmFtZSc6J0tvbGRhJ30sXG4gICAgJzYnIDogeydjb2RlJzonTE8nLCduYW1lJzonTG91Z2EnfSxcbiAgICAnNycgOiB7J2NvZGUnOidNQScsJ25hbWUnOidNYXRhbSd9LFxuICAgICc4JyA6IHsnY29kZSc6J1NMJywnbmFtZSc6J1NhaW50LUxvdWlzJ30sXG4gICAgJzknIDogeydjb2RlJzonVEEnLCduYW1lJzonVGFtYmFjb3VuZGEnfSxcbiAgICAnMTAnIDogeydjb2RlJzonVEgnLCduYW1lJzonVGhpZXMnfSxcbiAgICAnMTEnIDogeydjb2RlJzonWkknLCduYW1lJzonWmlndWluY2hvcid9XG4gIH0sXG4gICdTQyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FQJywnbmFtZSc6J0Fuc2UgYXV4IFBpbnMnfSxcbiAgICAnMicgOiB7J2NvZGUnOidBQicsJ25hbWUnOidBbnNlIEJvaWxlYXUnfSxcbiAgICAnMycgOiB7J2NvZGUnOidBRScsJ25hbWUnOidBbnNlIEV0b2lsZSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0FMJywnbmFtZSc6J0Fuc2UgTG91aXMnfSxcbiAgICAnNScgOiB7J2NvZGUnOidBUicsJ25hbWUnOidBbnNlIFJveWFsZSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0JMJywnbmFtZSc6J0JhaWUgTGF6YXJlJ30sXG4gICAgJzcnIDogeydjb2RlJzonQlMnLCduYW1lJzonQmFpZSBTYWludGUgQW5uZSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0JWJywnbmFtZSc6J0JlYXUgVmFsbG9uJ30sXG4gICAgJzknIDogeydjb2RlJzonQkEnLCduYW1lJzonQmVsIEFpcid9LFxuICAgICcxMCcgOiB7J2NvZGUnOidCTycsJ25hbWUnOidCZWwgT21icmUnfSxcbiAgICAnMTEnIDogeydjb2RlJzonQ0EnLCduYW1lJzonQ2FzY2FkZSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidHTCcsJ25hbWUnOidHbGFjaXMnfSxcbiAgICAnMTMnIDogeydjb2RlJzonR00nLCduYW1lJzonR3JhbmRcXCcgQW5zZSAob24gTWFoZSknfSxcbiAgICAnMTQnIDogeydjb2RlJzonR1AnLCduYW1lJzonR3JhbmRcXCcgQW5zZSAob24gUHJhc2xpbiknfSxcbiAgICAnMTUnIDogeydjb2RlJzonREcnLCduYW1lJzonTGEgRGlndWUnfSxcbiAgICAnMTYnIDogeydjb2RlJzonUkEnLCduYW1lJzonTGEgUml2aWVyZSBBbmdsYWlzZSd9LFxuICAgICcxNycgOiB7J2NvZGUnOidNQicsJ25hbWUnOidNb250IEJ1eHRvbid9LFxuICAgICcxOCcgOiB7J2NvZGUnOidNRicsJ25hbWUnOidNb250IEZsZXVyaSd9LFxuICAgICcxOScgOiB7J2NvZGUnOidQTCcsJ25hbWUnOidQbGFpc2FuY2UnfSxcbiAgICAnMjAnIDogeydjb2RlJzonUFInLCduYW1lJzonUG9pbnRlIExhIFJ1ZSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidQRycsJ25hbWUnOidQb3J0IEdsYXVkJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J1NMJywnbmFtZSc6J1NhaW50IExvdWlzJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J1RBJywnbmFtZSc6J1Rha2FtYWthJ31cbiAgfSxcbiAgJ1NMJzp7XG4gICAgJzEnIDogeydjb2RlJzonRScsJ25hbWUnOidFYXN0ZXJuJ30sXG4gICAgJzInIDogeydjb2RlJzonTicsJ25hbWUnOidOb3J0aGVybid9LFxuICAgICczJyA6IHsnY29kZSc6J1MnLCduYW1lJzonU291dGhlcm4nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidXJywnbmFtZSc6J1dlc3Rlcm4nfVxuICB9LFxuICAnU0snOntcbiAgICAnMScgOiB7J2NvZGUnOidCQScsJ25hbWUnOidCYW5za29ieXN0cmlja3knfSxcbiAgICAnMicgOiB7J2NvZGUnOidCUicsJ25hbWUnOidCcmF0aXNsYXZza3knfSxcbiAgICAnMycgOiB7J2NvZGUnOidLTycsJ25hbWUnOidLb3NpY2t5J30sXG4gICAgJzQnIDogeydjb2RlJzonTkknLCduYW1lJzonTml0cmlhbnNreSd9LFxuICAgICc1JyA6IHsnY29kZSc6J1BSJywnbmFtZSc6J1ByZXNvdnNreSd9LFxuICAgICc2JyA6IHsnY29kZSc6J1RDJywnbmFtZSc6J1RyZW5jaWFuc2t5J30sXG4gICAgJzcnIDogeydjb2RlJzonVFYnLCduYW1lJzonVHJuYXZza3knfSxcbiAgICAnOCcgOiB7J2NvZGUnOidaSScsJ25hbWUnOidaaWxpbnNreSd9XG4gIH0sXG4gICdTSSc6e1xuICAgICcxJyA6IHsnY29kZSc6JzQnLCduYW1lJzonxaB0YWplcnNrYSd9LFxuICAgICcyJyA6IHsnY29kZSc6JzJBJywnbmFtZSc6J0dvcmVuanNrYSd9LFxuICAgICczJyA6IHsnY29kZSc6JzUnLCduYW1lJzonUHJla211cmplJ30sXG4gICAgJzQnIDogeydjb2RlJzonMycsJ25hbWUnOidLb3JvxaFrYSd9LFxuICAgICc1JyA6IHsnY29kZSc6JzJCJywnbmFtZSc6J05vdHJhbmpza2EnfSxcbiAgICAnNicgOiB7J2NvZGUnOicxJywnbmFtZSc6J1ByaW1vcnNrYSd9LFxuICAgICc3JyA6IHsnY29kZSc6JzJDJywnbmFtZSc6J0RvbGVuanNrYSd9LFxuICAgICc4JyA6IHsnY29kZSc6JzJDJywnbmFtZSc6J0JlbGEgS3JhamluYSd9XG4gIH0sXG4gICdTQic6e1xuICAgICcxJyA6IHsnY29kZSc6J0NFJywnbmFtZSc6J0NlbnRyYWwnfSxcbiAgICAnMicgOiB7J2NvZGUnOidDSCcsJ25hbWUnOidDaG9pc2V1bCd9LFxuICAgICczJyA6IHsnY29kZSc6J0dDJywnbmFtZSc6J0d1YWRhbGNhbmFsJ30sXG4gICAgJzQnIDogeydjb2RlJzonSE8nLCduYW1lJzonSG9uaWFyYSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0lTJywnbmFtZSc6J0lzYWJlbCd9LFxuICAgICc2JyA6IHsnY29kZSc6J01LJywnbmFtZSc6J01ha2lyYSd9LFxuICAgICc3JyA6IHsnY29kZSc6J01MJywnbmFtZSc6J01hbGFpdGEnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidSQicsJ25hbWUnOidSZW5uZWxsIGFuZCBCZWxsb25hJ30sXG4gICAgJzknIDogeydjb2RlJzonVE0nLCduYW1lJzonVGVtb3R1J30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1dFJywnbmFtZSc6J1dlc3Rlcm4nfVxuICB9LFxuICAnU08nOntcbiAgICAnMScgOiB7J2NvZGUnOidBVycsJ25hbWUnOidBd2RhbCd9LFxuICAgICcyJyA6IHsnY29kZSc6J0JLJywnbmFtZSc6J0Jha29vbCd9LFxuICAgICczJyA6IHsnY29kZSc6J0JOJywnbmFtZSc6J0JhbmFhZGlyJ30sXG4gICAgJzQnIDogeydjb2RlJzonQlInLCduYW1lJzonQmFyaSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0JZJywnbmFtZSc6J0JheSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0dBJywnbmFtZSc6J0dhbGd1ZHV1ZCd9LFxuICAgICc3JyA6IHsnY29kZSc6J0dFJywnbmFtZSc6J0dlZG8nfSxcbiAgICAnOCcgOiB7J2NvZGUnOidISScsJ25hbWUnOidIaWlyYWFuJ30sXG4gICAgJzknIDogeydjb2RlJzonSkQnLCduYW1lJzonSnViYmFkYSBEaGV4ZSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidKSCcsJ25hbWUnOidKdWJiYWRhIEhvb3NlJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J01VJywnbmFtZSc6J011ZHVnJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J05VJywnbmFtZSc6J051Z2FhbCd9LFxuICAgICcxMycgOiB7J2NvZGUnOidTQScsJ25hbWUnOidTYW5hYWcnfSxcbiAgICAnMTQnIDogeydjb2RlJzonU0QnLCduYW1lJzonU2hhYmVlbGxhaGEgRGhleGUnfSxcbiAgICAnMTUnIDogeydjb2RlJzonU0gnLCduYW1lJzonU2hhYmVlbGxhaGEgSG9vc2UnfSxcbiAgICAnMTYnIDogeydjb2RlJzonU0wnLCduYW1lJzonU29vbCd9LFxuICAgICcxNycgOiB7J2NvZGUnOidUTycsJ25hbWUnOidUb2dkaGVlcid9LFxuICAgICcxOCcgOiB7J2NvZGUnOidXRycsJ25hbWUnOidXb3Fvb3lpIEdhbGJlZWQnfVxuICB9LFxuICAnWkEnOntcbiAgICAnMScgOiB7J2NvZGUnOidFQycsJ25hbWUnOidFYXN0ZXJuIENhcGUnfSxcbiAgICAnMicgOiB7J2NvZGUnOidGUycsJ25hbWUnOidGcmVlIFN0YXRlJ30sXG4gICAgJzMnIDogeydjb2RlJzonR1QnLCduYW1lJzonR2F1dGVuZyd9LFxuICAgICc0JyA6IHsnY29kZSc6J0tOJywnbmFtZSc6J0t3YVp1bHUtTmF0YWwnfSxcbiAgICAnNScgOiB7J2NvZGUnOidMUCcsJ25hbWUnOidMaW1wb3BvJ30sXG4gICAgJzYnIDogeydjb2RlJzonTVAnLCduYW1lJzonTXB1bWFsYW5nYSd9LFxuICAgICc3JyA6IHsnY29kZSc6J05XJywnbmFtZSc6J05vcnRoIFdlc3QnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidOQycsJ25hbWUnOidOb3J0aGVybiBDYXBlJ30sXG4gICAgJzknIDogeydjb2RlJzonV0MnLCduYW1lJzonV2VzdGVybiBDYXBlJ31cbiAgfSxcbiAgJ0VTJzp7XG4gICAgJzEnIDogeydjb2RlJzonQ0EnLCduYW1lJzonTGEgQ29ydcOxYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FMJywnbmFtZSc6J8OBbGF2YSd9LFxuICAgICczJyA6IHsnY29kZSc6J0FCJywnbmFtZSc6J0FsYmFjZXRlJ30sXG4gICAgJzQnIDogeydjb2RlJzonQUMnLCduYW1lJzonQWxpY2FudGUnfSxcbiAgICAnNScgOiB7J2NvZGUnOidBTScsJ25hbWUnOidBbG1lcmlhJ30sXG4gICAgJzYnIDogeydjb2RlJzonQVMnLCduYW1lJzonQXN0dXJpYXMnfSxcbiAgICAnNycgOiB7J2NvZGUnOidBVicsJ25hbWUnOifDgXZpbGEnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidCSicsJ25hbWUnOidCYWRham96J30sXG4gICAgJzknIDogeydjb2RlJzonSUInLCduYW1lJzonQmFsZWFyZXMnfSxcbiAgICAnMTAnIDogeydjb2RlJzonQkEnLCduYW1lJzonQmFyY2Vsb25hJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0JVJywnbmFtZSc6J0J1cmdvcyd9LFxuICAgICcxMicgOiB7J2NvZGUnOidDQycsJ25hbWUnOidDw6FjZXJlcyd9LFxuICAgICcxMycgOiB7J2NvZGUnOidDWicsJ25hbWUnOidDw6FkaXonfSxcbiAgICAnMTQnIDogeydjb2RlJzonQ1QnLCduYW1lJzonQ2FudGFicmlhJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0NMJywnbmFtZSc6J0Nhc3RlbGzDs24nfSxcbiAgICAnMTYnIDogeydjb2RlJzonQ0UnLCduYW1lJzonQ2V1dGEnfSxcbiAgICAnMTcnIDogeydjb2RlJzonQ1InLCduYW1lJzonQ2l1ZGFkIFJlYWwnfSxcbiAgICAnMTgnIDogeydjb2RlJzonQ0QnLCduYW1lJzonQ8OzcmRvYmEnfSxcbiAgICAnMTknIDogeydjb2RlJzonQ1UnLCduYW1lJzonQ3VlbmNhJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J0dJJywnbmFtZSc6J0dlcm9uYSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidHRCcsJ25hbWUnOidHcmFuYWRhJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J0dKJywnbmFtZSc6J0d1YWRhbGFqYXJhJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J0dQJywnbmFtZSc6J0d1aXDDunpjb2EnfSxcbiAgICAnMjQnIDogeydjb2RlJzonSEwnLCduYW1lJzonSHVlbHZhJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J0hTJywnbmFtZSc6J0h1ZXNjYSd9LFxuICAgICcyNicgOiB7J2NvZGUnOidKTicsJ25hbWUnOidKYcOpbid9LFxuICAgICcyNycgOiB7J2NvZGUnOidSSicsJ25hbWUnOidMYSBSaW9qYSd9LFxuICAgICcyOCcgOiB7J2NvZGUnOidQTScsJ25hbWUnOidMYXMgUGFsbWFzJ30sXG4gICAgJzI5JyA6IHsnY29kZSc6J0xFJywnbmFtZSc6J0xlw7NuJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J0xMJywnbmFtZSc6J0zDqXJpZGEnfSxcbiAgICAnMzEnIDogeydjb2RlJzonTEcnLCduYW1lJzonTHVnbyd9LFxuICAgICczMicgOiB7J2NvZGUnOidNRCcsJ25hbWUnOidNYWRyaWQnfSxcbiAgICAnMzMnIDogeydjb2RlJzonTUEnLCduYW1lJzonTcOhbGFnYSd9LFxuICAgICczNCcgOiB7J2NvZGUnOidNTCcsJ25hbWUnOidNZWxpbGxhJ30sXG4gICAgJzM1JyA6IHsnY29kZSc6J01VJywnbmFtZSc6J011cmNpYSd9LFxuICAgICczNicgOiB7J2NvZGUnOidOVicsJ25hbWUnOidOYXZhcnJhJ30sXG4gICAgJzM3JyA6IHsnY29kZSc6J09VJywnbmFtZSc6J091cmVuc2UnfSxcbiAgICAnMzgnIDogeydjb2RlJzonUEwnLCduYW1lJzonUGFsZW5jaWEnfSxcbiAgICAnMzknIDogeydjb2RlJzonUE8nLCduYW1lJzonUG9udGV2ZWRyYSd9LFxuICAgICc0MCcgOiB7J2NvZGUnOidTTCcsJ25hbWUnOidTYWxhbWFuY2EnfSxcbiAgICAnNDEnIDogeydjb2RlJzonU0MnLCduYW1lJzonU2FudGEgQ3J1eiBkZSBUZW5lcmlmZSd9LFxuICAgICc0MicgOiB7J2NvZGUnOidTRycsJ25hbWUnOidTZWdvdmlhJ30sXG4gICAgJzQzJyA6IHsnY29kZSc6J1NWJywnbmFtZSc6J1NldmlsbGEnfSxcbiAgICAnNDQnIDogeydjb2RlJzonU08nLCduYW1lJzonU29yaWEnfSxcbiAgICAnNDUnIDogeydjb2RlJzonVEEnLCduYW1lJzonVGFycmFnb25hJ30sXG4gICAgJzQ2JyA6IHsnY29kZSc6J1RFJywnbmFtZSc6J1RlcnVlbCd9LFxuICAgICc0NycgOiB7J2NvZGUnOidUTycsJ25hbWUnOidUb2xlZG8nfSxcbiAgICAnNDgnIDogeydjb2RlJzonVkMnLCduYW1lJzonVmFsZW5jaWEnfSxcbiAgICAnNDknIDogeydjb2RlJzonVkQnLCduYW1lJzonVmFsbGFkb2xpZCd9LFxuICAgICc1MCcgOiB7J2NvZGUnOidWWicsJ25hbWUnOidWaXpjYXlhJ30sXG4gICAgJzUxJyA6IHsnY29kZSc6J1pNJywnbmFtZSc6J1phbW9yYSd9LFxuICAgICc1MicgOiB7J2NvZGUnOidaUicsJ25hbWUnOidaYXJhZ296YSd9XG4gIH0sXG4gICdMSyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0NFJywnbmFtZSc6J0NlbnRyYWwnfSxcbiAgICAnMicgOiB7J2NvZGUnOidFQScsJ25hbWUnOidFYXN0ZXJuJ30sXG4gICAgJzMnIDogeydjb2RlJzonTkMnLCduYW1lJzonTm9ydGggQ2VudHJhbCd9LFxuICAgICc0JyA6IHsnY29kZSc6J05PJywnbmFtZSc6J05vcnRoZXJuJ30sXG4gICAgJzUnIDogeydjb2RlJzonTlcnLCduYW1lJzonTm9ydGggV2VzdGVybid9LFxuICAgICc2JyA6IHsnY29kZSc6J1NBJywnbmFtZSc6J1NhYmFyYWdhbXV3YSd9LFxuICAgICc3JyA6IHsnY29kZSc6J1NPJywnbmFtZSc6J1NvdXRoZXJuJ30sXG4gICAgJzgnIDogeydjb2RlJzonVVYnLCduYW1lJzonVXZhJ30sXG4gICAgJzknIDogeydjb2RlJzonV0UnLCduYW1lJzonV2VzdGVybid9XG4gIH0sXG4gICdTSCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0EnLCduYW1lJzonQXNjZW5zaW9uJ30sXG4gICAgJzInIDogeydjb2RlJzonUycsJ25hbWUnOidTYWludCBIZWxlbmEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidUJywnbmFtZSc6J1RyaXN0YW4gZGEgQ3VuaGEnfVxuICB9LFxuICAnUE0nOntcbiAgICAnMScgOiB7J2NvZGUnOidQJywnbmFtZSc6J1NhaW50IFBpZXJyZSd9LFxuICAgICcyJyA6IHsnY29kZSc6J00nLCduYW1lJzonTWlxdWVsb24nfVxuICB9LFxuICAnU0QnOntcbiAgICAnMScgOiB7J2NvZGUnOidBTkwnLCduYW1lJzonQVxcJ2FsaSBhbiBOaWwnfSxcbiAgICAnMicgOiB7J2NvZGUnOidCQU0nLCduYW1lJzonQWwgQmFociBhbCBBaG1hcid9LFxuICAgICczJyA6IHsnY29kZSc6J0JSVCcsJ25hbWUnOidBbCBCdWhheXJhdCd9LFxuICAgICc0JyA6IHsnY29kZSc6J0paUicsJ25hbWUnOidBbCBKYXppcmFoJ30sXG4gICAgJzUnIDogeydjb2RlJzonS1JUJywnbmFtZSc6J0FsIEtoYXJ0dW0nfSxcbiAgICAnNicgOiB7J2NvZGUnOidRRFInLCduYW1lJzonQWwgUWFkYXJpZid9LFxuICAgICc3JyA6IHsnY29kZSc6J1dESCcsJ25hbWUnOidBbCBXYWhkYWgnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidBTkInLCduYW1lJzonQW4gTmlsIGFsIEFieWFkJ30sXG4gICAgJzknIDogeydjb2RlJzonQU5aJywnbmFtZSc6J0FuIE5pbCBhbCBBenJhcSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidBU0gnLCduYW1lJzonQXNoIFNoYW1hbGl5YWgnfSxcbiAgICAnMTEnIDogeydjb2RlJzonQkpBJywnbmFtZSc6J0JhaHIgYWwgSmFiYWwnfSxcbiAgICAnMTInIDogeydjb2RlJzonR0lTJywnbmFtZSc6J0doYXJiIGFsIElzdGl3YVxcJ2l5YWgnfSxcbiAgICAnMTMnIDogeydjb2RlJzonR0JHJywnbmFtZSc6J0doYXJiIEJhaHIgYWwgR2hhemFsJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0dEQScsJ25hbWUnOidHaGFyYiBEYXJmdXInfSxcbiAgICAnMTUnIDogeydjb2RlJzonR0tVJywnbmFtZSc6J0doYXJiIEt1cmR1ZmFuJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J0pEQScsJ25hbWUnOidKYW51YiBEYXJmdXInfSxcbiAgICAnMTcnIDogeydjb2RlJzonSktVJywnbmFtZSc6J0phbnViIEt1cmR1ZmFuJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J0pRTCcsJ25hbWUnOidKdW5xYWxpJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0tTTCcsJ25hbWUnOidLYXNzYWxhJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J05OTCcsJ25hbWUnOidOYWhyIGFuIE5pbCd9LFxuICAgICcyMScgOiB7J2NvZGUnOidTQkcnLCduYW1lJzonU2hhbWFsIEJhaHIgYWwgR2hhemFsJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J1NEQScsJ25hbWUnOidTaGFtYWwgRGFyZnVyJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J1NLVScsJ25hbWUnOidTaGFtYWwgS3VyZHVmYW4nfSxcbiAgICAnMjQnIDogeydjb2RlJzonU0lTJywnbmFtZSc6J1NoYXJxIGFsIElzdGl3YVxcJ2l5YWgnfSxcbiAgICAnMjUnIDogeydjb2RlJzonU05SJywnbmFtZSc6J1Npbm5hcid9LFxuICAgICcyNicgOiB7J2NvZGUnOidXUkInLCduYW1lJzonV2FyYWInfVxuICB9LFxuICAnU1InOntcbiAgICAnMScgOiB7J2NvZGUnOidCUicsJ25hbWUnOidCcm9rb3BvbmRvJ30sXG4gICAgJzInIDogeydjb2RlJzonQ00nLCduYW1lJzonQ29tbWV3aWpuZSd9LFxuICAgICczJyA6IHsnY29kZSc6J0NSJywnbmFtZSc6J0Nvcm9uaWUnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidNQScsJ25hbWUnOidNYXJvd2lqbmUnfSxcbiAgICAnNScgOiB7J2NvZGUnOidOSScsJ25hbWUnOidOaWNrZXJpZSd9LFxuICAgICc2JyA6IHsnY29kZSc6J1BBJywnbmFtZSc6J1BhcmEnfSxcbiAgICAnNycgOiB7J2NvZGUnOidQTScsJ25hbWUnOidQYXJhbWFyaWJvJ30sXG4gICAgJzknIDogeydjb2RlJzonU0EnLCduYW1lJzonU2FyYW1hY2NhJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1NJJywnbmFtZSc6J1NpcGFsaXdpbmknfSxcbiAgICAnMTEnIDogeydjb2RlJzonV0EnLCduYW1lJzonV2FuaWNhJ31cbiAgfSxcbiAgJ1NaJzp7XG4gICAgJzEnIDogeydjb2RlJzonSCcsJ25hbWUnOidIaG9oaG8nfSxcbiAgICAnMicgOiB7J2NvZGUnOidMJywnbmFtZSc6J0x1Ym9tYm8nfSxcbiAgICAnMycgOiB7J2NvZGUnOidNJywnbmFtZSc6J01hbnppbmknfSxcbiAgICAnNCcgOiB7J2NvZGUnOidTJywnbmFtZSc6J1NoaXNoZWx3ZW5pJ31cbiAgfSxcbiAgJ1NFJzp7XG4gICAgJzEnIDogeydjb2RlJzonSycsJ25hbWUnOidCbGVraW5nZSd9LFxuICAgICcyJyA6IHsnY29kZSc6J1cnLCduYW1lJzonRGFsYW1hJ30sXG4gICAgJzMnIDogeydjb2RlJzonSScsJ25hbWUnOidHb3RsYW5kJ30sXG4gICAgJzQnIDogeydjb2RlJzonWCcsJ25hbWUnOidHw6R2bGVib3JnJ30sXG4gICAgJzUnIDogeydjb2RlJzonTicsJ25hbWUnOidIYWxsYW5kJ30sXG4gICAgJzYnIDogeydjb2RlJzonWicsJ25hbWUnOidKw6RtdGxhbmQnfSxcbiAgICAnNycgOiB7J2NvZGUnOidGJywnbmFtZSc6J0rDtm5rw7ZwaW5nJ30sXG4gICAgJzgnIDogeydjb2RlJzonSCcsJ25hbWUnOidLYWxtYXInfSxcbiAgICAnOScgOiB7J2NvZGUnOidHJywnbmFtZSc6J0tyb25vYmVyZyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidCRCcsJ25hbWUnOidOb3JyYm90dGVuJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J00nLCduYW1lJzonU2vDpW5lJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0FCJywnbmFtZSc6J1N0b2NraG9sbSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidEJywnbmFtZSc6J1PDtmRlcm1hbmxhbmQnfSxcbiAgICAnMTQnIDogeydjb2RlJzonQycsJ25hbWUnOidVcHBzYWxhJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J1MnLCduYW1lJzonVsOkcm1sYW5kJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J0FDJywnbmFtZSc6J1bDpHN0ZXJib3R0ZW4nfSxcbiAgICAnMTcnIDogeydjb2RlJzonWScsJ25hbWUnOidWw6RzdGVybm9ycmxhbmQnfSxcbiAgICAnMTgnIDogeydjb2RlJzonVScsJ25hbWUnOidWw6RzdG1hbmxhbmQnfSxcbiAgICAnMTknIDogeydjb2RlJzonTycsJ25hbWUnOidWw6RzdHJhIEfDtnRhbGFuZCd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidUJywnbmFtZSc6J8OWcmVicm8nfSxcbiAgICAnMjEnIDogeydjb2RlJzonRScsJ25hbWUnOifDlnN0ZXJnw7Z0bGFuZCd9XG4gIH0sXG4gICdDSCc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FHJywnbmFtZSc6J0FhcmdhdSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FSJywnbmFtZSc6J0FwcGVuemVsbCBBdXNzZXJyaG9kZW4nfSxcbiAgICAnMycgOiB7J2NvZGUnOidBSScsJ25hbWUnOidBcHBlbnplbGwgSW5uZXJyaG9kZW4nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidCUycsJ25hbWUnOidCYXNlbC1TdGFkdCd9LFxuICAgICc1JyA6IHsnY29kZSc6J0JMJywnbmFtZSc6J0Jhc2VsLUxhbmRzY2hhZnQnfSxcbiAgICAnNicgOiB7J2NvZGUnOidCRScsJ25hbWUnOidCZXJuJ30sXG4gICAgJzcnIDogeydjb2RlJzonRlInLCduYW1lJzonRnJpYm91cmcnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidHRScsJ25hbWUnOidHZW7DqHZlJ30sXG4gICAgJzknIDogeydjb2RlJzonR0wnLCduYW1lJzonR2xhcnVzJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0dSJywnbmFtZSc6J0dyYXViw7xuZGVuJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0pVJywnbmFtZSc6J0p1cmEnfSxcbiAgICAnMTInIDogeydjb2RlJzonTFUnLCduYW1lJzonTHVjZXJuZSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidORScsJ25hbWUnOidOZXVjaMOidGVsJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J05XJywnbmFtZSc6J05pZHdhbGRlbid9LFxuICAgICcxNScgOiB7J2NvZGUnOidPVycsJ25hbWUnOidPYndhbGRlbid9LFxuICAgICcxNicgOiB7J2NvZGUnOidTRycsJ25hbWUnOidTdC4gR2FsbGVuJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J1NIJywnbmFtZSc6J1NjaGFmZmhhdXNlbid9LFxuICAgICcxOCcgOiB7J2NvZGUnOidTWicsJ25hbWUnOidTY2h3eXonfSxcbiAgICAnMTknIDogeydjb2RlJzonU08nLCduYW1lJzonU29sb3RodXJuJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J1RHJywnbmFtZSc6J1RodXJnYXUnfSxcbiAgICAnMjEnIDogeydjb2RlJzonVEknLCduYW1lJzonVGljaW5vJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J1VSJywnbmFtZSc6J1VyaSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidWUycsJ25hbWUnOidWYWxhaXMnfSxcbiAgICAnMjQnIDogeydjb2RlJzonVkQnLCduYW1lJzonVmF1ZCd9LFxuICAgICcyNScgOiB7J2NvZGUnOidaRycsJ25hbWUnOidadWcnfSxcbiAgICAnMjYnIDogeydjb2RlJzonWkgnLCduYW1lJzonWsO8cmljaCd9XG4gIH0sXG4gICdTWSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0hBJywnbmFtZSc6J0FsIEhhc2FrYWgnfSxcbiAgICAnMicgOiB7J2NvZGUnOidMQScsJ25hbWUnOidBbCBMYWRoaXFpeWFoJ30sXG4gICAgJzMnIDogeydjb2RlJzonUVUnLCduYW1lJzonQWwgUXVuYXl0aXJhaCd9LFxuICAgICc0JyA6IHsnY29kZSc6J1JRJywnbmFtZSc6J0FyIFJhcXFhaCd9LFxuICAgICc1JyA6IHsnY29kZSc6J1NVJywnbmFtZSc6J0FzIFN1d2F5ZGEnfSxcbiAgICAnNicgOiB7J2NvZGUnOidEQScsJ25hbWUnOidEYXJhJ30sXG4gICAgJzcnIDogeydjb2RlJzonRFonLCduYW1lJzonRGF5ciBheiBaYXdyJ30sXG4gICAgJzgnIDogeydjb2RlJzonREknLCduYW1lJzonRGltYXNocSd9LFxuICAgICc5JyA6IHsnY29kZSc6J0hMJywnbmFtZSc6J0hhbGFiJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0hNJywnbmFtZSc6J0hhbWFoJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J0hJJywnbmFtZSc6J0hpbXMnfSxcbiAgICAnMTInIDogeydjb2RlJzonSUQnLCduYW1lJzonSWRsaWInfSxcbiAgICAnMTMnIDogeydjb2RlJzonUkQnLCduYW1lJzonUmlmIERpbWFzaHEnfSxcbiAgICAnMTQnIDogeydjb2RlJzonVEEnLCduYW1lJzonVGFydHVzJ31cbiAgfSxcbiAgJ1RXJzp7XG4gICAgJzEnIDogeydjb2RlJzonQ0gnLCduYW1lJzonQ2hhbmctaHVhJ30sXG4gICAgJzInIDogeydjb2RlJzonQ0knLCduYW1lJzonQ2hpYS1pJ30sXG4gICAgJzMnIDogeydjb2RlJzonSFMnLCduYW1lJzonSHNpbi1jaHUnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidITCcsJ25hbWUnOidIdWEtbGllbid9LFxuICAgICc1JyA6IHsnY29kZSc6J0lMJywnbmFtZSc6J0ktbGFuJ30sXG4gICAgJzYnIDogeydjb2RlJzonS0gnLCduYW1lJzonS2FvLWhzaXVuZyBjb3VudHknfSxcbiAgICAnNycgOiB7J2NvZGUnOidLTScsJ25hbWUnOidLaW4tbWVuJ30sXG4gICAgJzgnIDogeydjb2RlJzonTEMnLCduYW1lJzonTGllbi1jaGlhbmcnfSxcbiAgICAnOScgOiB7J2NvZGUnOidNTCcsJ25hbWUnOidNaWFvLWxpJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J05UJywnbmFtZSc6J05hbi10XFwnb3UnfSxcbiAgICAnMTEnIDogeydjb2RlJzonUEgnLCduYW1lJzonUFxcJ2VuZy1odSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidQVCcsJ25hbWUnOidQXFwnaW5nLXR1bmcnfSxcbiAgICAnMTMnIDogeydjb2RlJzonVEcnLCduYW1lJzonVFxcJ2FpLWNodW5nJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J1RBJywnbmFtZSc6J1RcXCdhaS1uYW4nfSxcbiAgICAnMTUnIDogeydjb2RlJzonVFAnLCduYW1lJzonVFxcJ2FpLXBlaSBjb3VudHknfSxcbiAgICAnMTYnIDogeydjb2RlJzonVFQnLCduYW1lJzonVFxcJ2FpLXR1bmcnfSxcbiAgICAnMTcnIDogeydjb2RlJzonVFknLCduYW1lJzonVFxcJ2FvLXl1YW4nfSxcbiAgICAnMTgnIDogeydjb2RlJzonWUwnLCduYW1lJzonWXVuLWxpbid9LFxuICAgICcxOScgOiB7J2NvZGUnOidDQycsJ25hbWUnOidDaGlhLWkgY2l0eSd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidDTCcsJ25hbWUnOidDaGktbHVuZyd9LFxuICAgICcyMScgOiB7J2NvZGUnOidIQycsJ25hbWUnOidIc2luLWNodSd9LFxuICAgICcyMicgOiB7J2NvZGUnOidUSCcsJ25hbWUnOidUXFwnYWktY2h1bmcnfSxcbiAgICAnMjMnIDogeydjb2RlJzonVE4nLCduYW1lJzonVFxcJ2FpLW5hbid9LFxuICAgICcyNCcgOiB7J2NvZGUnOidLQycsJ25hbWUnOidLYW8taHNpdW5nIGNpdHknfSxcbiAgICAnMjUnIDogeydjb2RlJzonVEMnLCduYW1lJzonVFxcJ2FpLXBlaSBjaXR5J31cbiAgfSxcbiAgJ1RKJzp7XG4gICAgJzEnIDogeydjb2RlJzonR0InLCduYW1lJzonR29ybm8tQmFkYWtoc3Rhbid9LFxuICAgICcyJyA6IHsnY29kZSc6J0tUJywnbmFtZSc6J0toYXRsb24nfSxcbiAgICAnMycgOiB7J2NvZGUnOidTVScsJ25hbWUnOidTdWdoZCd9XG4gIH0sXG4gICdUWic6e1xuICAgICcxJyA6IHsnY29kZSc6J0FSJywnbmFtZSc6J0FydXNoYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0RTJywnbmFtZSc6J0RhciBlcyBTYWxhYW0nfSxcbiAgICAnMycgOiB7J2NvZGUnOidETycsJ25hbWUnOidEb2RvbWEnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidJUicsJ25hbWUnOidJcmluZ2EnfSxcbiAgICAnNScgOiB7J2NvZGUnOidLQScsJ25hbWUnOidLYWdlcmEnfSxcbiAgICAnNicgOiB7J2NvZGUnOidLSScsJ25hbWUnOidLaWdvbWEnfSxcbiAgICAnNycgOiB7J2NvZGUnOidLSicsJ25hbWUnOidLaWxpbWFuamFybyd9LFxuICAgICc4JyA6IHsnY29kZSc6J0xOJywnbmFtZSc6J0xpbmRpJ30sXG4gICAgJzknIDogeydjb2RlJzonTVknLCduYW1lJzonTWFueWFyYSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidNUicsJ25hbWUnOidNYXJhJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J01CJywnbmFtZSc6J01iZXlhJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J01PJywnbmFtZSc6J01vcm9nb3JvJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J01UJywnbmFtZSc6J010d2FyYSd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidNVycsJ25hbWUnOidNd2FuemEnfSxcbiAgICAnMTUnIDogeydjb2RlJzonUE4nLCduYW1lJzonUGVtYmEgTm9ydGgnfSxcbiAgICAnMTYnIDogeydjb2RlJzonUFMnLCduYW1lJzonUGVtYmEgU291dGgnfSxcbiAgICAnMTcnIDogeydjb2RlJzonUFcnLCduYW1lJzonUHdhbmknfSxcbiAgICAnMTgnIDogeydjb2RlJzonUksnLCduYW1lJzonUnVrd2EnfSxcbiAgICAnMTknIDogeydjb2RlJzonUlYnLCduYW1lJzonUnV2dW1hJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J1NIJywnbmFtZSc6J1NoaW55YW5nYSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidTSScsJ25hbWUnOidTaW5naWRhJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J1RCJywnbmFtZSc6J1RhYm9yYSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidUTicsJ25hbWUnOidUYW5nYSd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidaQycsJ25hbWUnOidaYW56aWJhciBDZW50cmFsL1NvdXRoJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J1pOJywnbmFtZSc6J1phbnppYmFyIE5vcnRoJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6J1pVJywnbmFtZSc6J1phbnppYmFyIFVyYmFuL1dlc3QnfVxuICB9LFxuICAnVEgnOntcbiAgICAnMScgOiB7J2NvZGUnOidBbW5hdCBDaGFyb2VuJywnbmFtZSc6J0FtbmF0IENoYXJvZW4nfSxcbiAgICAnMicgOiB7J2NvZGUnOidBbmcgVGhvbmcnLCduYW1lJzonQW5nIFRob25nJ30sXG4gICAgJzMnIDogeydjb2RlJzonQXl1dHRoYXlhJywnbmFtZSc6J0F5dXR0aGF5YSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0Jhbmdrb2snLCduYW1lJzonQmFuZ2tvayd9LFxuICAgICc1JyA6IHsnY29kZSc6J0J1cmlyYW0nLCduYW1lJzonQnVyaXJhbSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0NoYWNob2VuZ3NhbycsJ25hbWUnOidDaGFjaG9lbmdzYW8nfSxcbiAgICAnNycgOiB7J2NvZGUnOidDaGFpIE5hdCcsJ25hbWUnOidDaGFpIE5hdCd9LFxuICAgICc4JyA6IHsnY29kZSc6J0NoYWl5YXBodW0nLCduYW1lJzonQ2hhaXlhcGh1bSd9LFxuICAgICc5JyA6IHsnY29kZSc6J0NoYW50aGFidXJpJywnbmFtZSc6J0NoYW50aGFidXJpJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0NoaWFuZyBNYWknLCduYW1lJzonQ2hpYW5nIE1haSd9LFxuICAgICcxMScgOiB7J2NvZGUnOidDaGlhbmcgUmFpJywnbmFtZSc6J0NoaWFuZyBSYWknfSxcbiAgICAnMTInIDogeydjb2RlJzonQ2hvbiBCdXJpJywnbmFtZSc6J0Nob24gQnVyaSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidDaHVtcGhvbicsJ25hbWUnOidDaHVtcGhvbid9LFxuICAgICcxNCcgOiB7J2NvZGUnOidLYWxhc2luJywnbmFtZSc6J0thbGFzaW4nfSxcbiAgICAnMTUnIDogeydjb2RlJzonS2FtcGhhZW5nIFBoZXQnLCduYW1lJzonS2FtcGhhZW5nIFBoZXQnfSxcbiAgICAnMTYnIDogeydjb2RlJzonS2FuY2hhbmFidXJpJywnbmFtZSc6J0thbmNoYW5hYnVyaSd9LFxuICAgICcxNycgOiB7J2NvZGUnOidLaG9uIEthZW4nLCduYW1lJzonS2hvbiBLYWVuJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J0tyYWJpJywnbmFtZSc6J0tyYWJpJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0xhbXBhbmcnLCduYW1lJzonTGFtcGFuZyd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidMYW1waHVuJywnbmFtZSc6J0xhbXBodW4nfSxcbiAgICAnMjEnIDogeydjb2RlJzonTG9laScsJ25hbWUnOidMb2VpJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J0xvcCBCdXJpJywnbmFtZSc6J0xvcCBCdXJpJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J01hZSBIb25nIFNvbicsJ25hbWUnOidNYWUgSG9uZyBTb24nfSxcbiAgICAnMjQnIDogeydjb2RlJzonTWFoYSBTYXJha2hhbScsJ25hbWUnOidNYWhhIFNhcmFraGFtJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J011a2RhaGFuJywnbmFtZSc6J011a2RhaGFuJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6J05ha2hvbiBOYXlvaycsJ25hbWUnOidOYWtob24gTmF5b2snfSxcbiAgICAnMjcnIDogeydjb2RlJzonTmFraG9uIFBhdGhvbScsJ25hbWUnOidOYWtob24gUGF0aG9tJ30sXG4gICAgJzI4JyA6IHsnY29kZSc6J05ha2hvbiBQaGFub20nLCduYW1lJzonTmFraG9uIFBoYW5vbSd9LFxuICAgICcyOScgOiB7J2NvZGUnOidOYWtob24gUmF0Y2hhc2ltYScsJ25hbWUnOidOYWtob24gUmF0Y2hhc2ltYSd9LFxuICAgICczMCcgOiB7J2NvZGUnOidOYWtob24gU2F3YW4nLCduYW1lJzonTmFraG9uIFNhd2FuJ30sXG4gICAgJzMxJyA6IHsnY29kZSc6J05ha2hvbiBTaSBUaGFtbWFyYXQnLCduYW1lJzonTmFraG9uIFNpIFRoYW1tYXJhdCd9LFxuICAgICczMicgOiB7J2NvZGUnOidOYW4nLCduYW1lJzonTmFuJ30sXG4gICAgJzMzJyA6IHsnY29kZSc6J05hcmF0aGl3YXQnLCduYW1lJzonTmFyYXRoaXdhdCd9LFxuICAgICczNCcgOiB7J2NvZGUnOidOb25nIEJ1YSBMYW1waHUnLCduYW1lJzonTm9uZyBCdWEgTGFtcGh1J30sXG4gICAgJzM1JyA6IHsnY29kZSc6J05vbmcgS2hhaScsJ25hbWUnOidOb25nIEtoYWknfSxcbiAgICAnMzYnIDogeydjb2RlJzonTm9udGhhYnVyaScsJ25hbWUnOidOb250aGFidXJpJ30sXG4gICAgJzM3JyA6IHsnY29kZSc6J1BhdGh1bSBUaGFuaScsJ25hbWUnOidQYXRodW0gVGhhbmknfSxcbiAgICAnMzgnIDogeydjb2RlJzonUGF0dGFuaScsJ25hbWUnOidQYXR0YW5pJ30sXG4gICAgJzM5JyA6IHsnY29kZSc6J1BoYW5nbmdhJywnbmFtZSc6J1BoYW5nbmdhJ30sXG4gICAgJzQwJyA6IHsnY29kZSc6J1BoYXR0aGFsdW5nJywnbmFtZSc6J1BoYXR0aGFsdW5nJ30sXG4gICAgJzQxJyA6IHsnY29kZSc6J1BoYXlhbycsJ25hbWUnOidQaGF5YW8nfSxcbiAgICAnNDInIDogeydjb2RlJzonUGhldGNoYWJ1bicsJ25hbWUnOidQaGV0Y2hhYnVuJ30sXG4gICAgJzQzJyA6IHsnY29kZSc6J1BoZXRjaGFidXJpJywnbmFtZSc6J1BoZXRjaGFidXJpJ30sXG4gICAgJzQ0JyA6IHsnY29kZSc6J1BoaWNoaXQnLCduYW1lJzonUGhpY2hpdCd9LFxuICAgICc0NScgOiB7J2NvZGUnOidQaGl0c2FudWxvaycsJ25hbWUnOidQaGl0c2FudWxvayd9LFxuICAgICc0NicgOiB7J2NvZGUnOidQaHJhZScsJ25hbWUnOidQaHJhZSd9LFxuICAgICc0NycgOiB7J2NvZGUnOidQaHVrZXQnLCduYW1lJzonUGh1a2V0J30sXG4gICAgJzQ4JyA6IHsnY29kZSc6J1ByYWNoaW4gQnVyaScsJ25hbWUnOidQcmFjaGluIEJ1cmknfSxcbiAgICAnNDknIDogeydjb2RlJzonUHJhY2h1YXAgS2hpcmkgS2hhbicsJ25hbWUnOidQcmFjaHVhcCBLaGlyaSBLaGFuJ30sXG4gICAgJzUwJyA6IHsnY29kZSc6J1Jhbm9uZycsJ25hbWUnOidSYW5vbmcnfSxcbiAgICAnNTEnIDogeydjb2RlJzonUmF0Y2hhYnVyaScsJ25hbWUnOidSYXRjaGFidXJpJ30sXG4gICAgJzUyJyA6IHsnY29kZSc6J1JheW9uZycsJ25hbWUnOidSYXlvbmcnfSxcbiAgICAnNTMnIDogeydjb2RlJzonUm9pIEV0JywnbmFtZSc6J1JvaSBFdCd9LFxuICAgICc1NCcgOiB7J2NvZGUnOidTYSBLYWVvJywnbmFtZSc6J1NhIEthZW8nfSxcbiAgICAnNTUnIDogeydjb2RlJzonU2Frb24gTmFraG9uJywnbmFtZSc6J1Nha29uIE5ha2hvbid9LFxuICAgICc1NicgOiB7J2NvZGUnOidTYW11dCBQcmFrYW4nLCduYW1lJzonU2FtdXQgUHJha2FuJ30sXG4gICAgJzU3JyA6IHsnY29kZSc6J1NhbXV0IFNha2hvbicsJ25hbWUnOidTYW11dCBTYWtob24nfSxcbiAgICAnNTgnIDogeydjb2RlJzonU2FtdXQgU29uZ2tocmFtJywnbmFtZSc6J1NhbXV0IFNvbmdraHJhbSd9LFxuICAgICc1OScgOiB7J2NvZGUnOidTYXJhIEJ1cmknLCduYW1lJzonU2FyYSBCdXJpJ30sXG4gICAgJzYwJyA6IHsnY29kZSc6J1NhdHVuJywnbmFtZSc6J1NhdHVuJ30sXG4gICAgJzYxJyA6IHsnY29kZSc6J1NpbmcgQnVyaScsJ25hbWUnOidTaW5nIEJ1cmknfSxcbiAgICAnNjInIDogeydjb2RlJzonU2lzYWtldCcsJ25hbWUnOidTaXNha2V0J30sXG4gICAgJzYzJyA6IHsnY29kZSc6J1NvbmdraGxhJywnbmFtZSc6J1NvbmdraGxhJ30sXG4gICAgJzY0JyA6IHsnY29kZSc6J1N1a2hvdGhhaScsJ25hbWUnOidTdWtob3RoYWknfSxcbiAgICAnNjUnIDogeydjb2RlJzonU3VwaGFuIEJ1cmknLCduYW1lJzonU3VwaGFuIEJ1cmknfSxcbiAgICAnNjYnIDogeydjb2RlJzonU3VyYXQgVGhhbmknLCduYW1lJzonU3VyYXQgVGhhbmknfSxcbiAgICAnNjcnIDogeydjb2RlJzonU3VyaW4nLCduYW1lJzonU3VyaW4nfSxcbiAgICAnNjgnIDogeydjb2RlJzonVGFrJywnbmFtZSc6J1Rhayd9LFxuICAgICc2OScgOiB7J2NvZGUnOidUcmFuZycsJ25hbWUnOidUcmFuZyd9LFxuICAgICc3MCcgOiB7J2NvZGUnOidUcmF0JywnbmFtZSc6J1RyYXQnfSxcbiAgICAnNzEnIDogeydjb2RlJzonVWJvbiBSYXRjaGF0aGFuaScsJ25hbWUnOidVYm9uIFJhdGNoYXRoYW5pJ30sXG4gICAgJzcyJyA6IHsnY29kZSc6J1Vkb24gVGhhbmknLCduYW1lJzonVWRvbiBUaGFuaSd9LFxuICAgICc3MycgOiB7J2NvZGUnOidVdGhhaSBUaGFuaScsJ25hbWUnOidVdGhhaSBUaGFuaSd9LFxuICAgICc3NCcgOiB7J2NvZGUnOidVdHRhcmFkaXQnLCduYW1lJzonVXR0YXJhZGl0J30sXG4gICAgJzc1JyA6IHsnY29kZSc6J1lhbGEnLCduYW1lJzonWWFsYSd9LFxuICAgICc3NicgOiB7J2NvZGUnOidZYXNvdGhvbicsJ25hbWUnOidZYXNvdGhvbid9XG4gIH0sXG4gICdURyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0snLCduYW1lJzonS2FyYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J1AnLCduYW1lJzonUGxhdGVhdXgnfSxcbiAgICAnMycgOiB7J2NvZGUnOidTJywnbmFtZSc6J1NhdmFuZXMnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidDJywnbmFtZSc6J0NlbnRyYWxlJ30sXG4gICAgJzUnIDogeydjb2RlJzonTScsJ25hbWUnOidNYXJpdGltZSd9XG4gIH0sXG4gICdUSyc6e1xuICAgICcxJyA6IHsnY29kZSc6J0EnLCduYW1lJzonQXRhZnUnfSxcbiAgICAnMicgOiB7J2NvZGUnOidGJywnbmFtZSc6J0Zha2FvZm8nfSxcbiAgICAnMycgOiB7J2NvZGUnOidOJywnbmFtZSc6J051a3Vub251J31cbiAgfSxcbiAgJ1RPJzp7XG4gICAgJzEnIDogeydjb2RlJzonSCcsJ25hbWUnOidIYVxcJ2FwYWknfSxcbiAgICAnMicgOiB7J2NvZGUnOidUJywnbmFtZSc6J1RvbmdhdGFwdSd9LFxuICAgICczJyA6IHsnY29kZSc6J1YnLCduYW1lJzonVmF2YVxcJ3UnfVxuICB9LFxuICAnVFQnOntcbiAgICAnMScgOiB7J2NvZGUnOidDVCcsJ25hbWUnOidDb3V2YS9UYWJhcXVpdGUvVGFscGFybyd9LFxuICAgICcyJyA6IHsnY29kZSc6J0RNJywnbmFtZSc6J0RpZWdvIE1hcnRpbid9LFxuICAgICczJyA6IHsnY29kZSc6J01SJywnbmFtZSc6J01heWFyby9SaW8gQ2xhcm8nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidQRCcsJ25hbWUnOidQZW5hbC9EZWJlJ30sXG4gICAgJzUnIDogeydjb2RlJzonUFQnLCduYW1lJzonUHJpbmNlcyBUb3duJ30sXG4gICAgJzYnIDogeydjb2RlJzonU0cnLCduYW1lJzonU2FuZ3JlIEdyYW5kZSd9LFxuICAgICc3JyA6IHsnY29kZSc6J1NMJywnbmFtZSc6J1NhbiBKdWFuL0xhdmVudGlsbGUnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidTSScsJ25hbWUnOidTaXBhcmlhJ30sXG4gICAgJzknIDogeydjb2RlJzonVFAnLCduYW1lJzonVHVuYXB1bmEvUGlhcmNvJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1BTJywnbmFtZSc6J1BvcnQgb2YgU3BhaW4nfSxcbiAgICAnMTEnIDogeydjb2RlJzonU0YnLCduYW1lJzonU2FuIEZlcm5hbmRvJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0FSJywnbmFtZSc6J0FyaW1hJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1BGJywnbmFtZSc6J1BvaW50IEZvcnRpbid9LFxuICAgICcxNCcgOiB7J2NvZGUnOidDSCcsJ25hbWUnOidDaGFndWFuYXMnfSxcbiAgICAnMTUnIDogeydjb2RlJzonVE8nLCduYW1lJzonVG9iYWdvJ31cbiAgfSxcbiAgJ1ROJzp7XG4gICAgJzEnIDogeydjb2RlJzonQVInLCduYW1lJzonQXJpYW5hJ30sXG4gICAgJzInIDogeydjb2RlJzonQkonLCduYW1lJzonQmVqYSd9LFxuICAgICczJyA6IHsnY29kZSc6J0JBJywnbmFtZSc6J0JlbiBBcm91cyd9LFxuICAgICc0JyA6IHsnY29kZSc6J0JJJywnbmFtZSc6J0JpemVydGUnfSxcbiAgICAnNScgOiB7J2NvZGUnOidHQicsJ25hbWUnOidHYWJlcyd9LFxuICAgICc2JyA6IHsnY29kZSc6J0dGJywnbmFtZSc6J0dhZnNhJ30sXG4gICAgJzcnIDogeydjb2RlJzonSkUnLCduYW1lJzonSmVuZG91YmEnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidLUicsJ25hbWUnOidLYWlyb3Vhbid9LFxuICAgICc5JyA6IHsnY29kZSc6J0tTJywnbmFtZSc6J0thc3NlcmluZSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidLQicsJ25hbWUnOidLZWJpbGknfSxcbiAgICAnMTEnIDogeydjb2RlJzonS0YnLCduYW1lJzonS2VmJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J01IJywnbmFtZSc6J01haGRpYSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidNTicsJ25hbWUnOidNYW5vdWJhJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J01FJywnbmFtZSc6J01lZGVuaW5lJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J01PJywnbmFtZSc6J01vbmFzdGlyJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J05BJywnbmFtZSc6J05hYmV1bCd9LFxuICAgICcxNycgOiB7J2NvZGUnOidTRicsJ25hbWUnOidTZmF4J30sXG4gICAgJzE4JyA6IHsnY29kZSc6J1NEJywnbmFtZSc6J1NpZGknfSxcbiAgICAnMTknIDogeydjb2RlJzonU0wnLCduYW1lJzonU2lsaWFuYSd9LFxuICAgICcyMCcgOiB7J2NvZGUnOidTTycsJ25hbWUnOidTb3Vzc2UnfSxcbiAgICAnMjEnIDogeydjb2RlJzonVEEnLCduYW1lJzonVGF0YW91aW5lJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J1RPJywnbmFtZSc6J1RvemV1cid9LFxuICAgICcyMycgOiB7J2NvZGUnOidUVScsJ25hbWUnOidUdW5pcyd9LFxuICAgICcyNCcgOiB7J2NvZGUnOidaQScsJ25hbWUnOidaYWdob3Vhbid9XG4gIH0sXG4gICdUUic6e1xuICAgICcxJyA6IHsnY29kZSc6J0FEQScsJ25hbWUnOidBZGFuYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FESScsJ25hbWUnOidBZGl5YW1hbid9LFxuICAgICczJyA6IHsnY29kZSc6J0FGWScsJ25hbWUnOidBZnlvbmthcmFoaXNhcid9LFxuICAgICc0JyA6IHsnY29kZSc6J0FHUicsJ25hbWUnOidBZ3JpJ30sXG4gICAgJzUnIDogeydjb2RlJzonQUtTJywnbmFtZSc6J0Frc2FyYXknfSxcbiAgICAnNicgOiB7J2NvZGUnOidBTUEnLCduYW1lJzonQW1hc3lhJ30sXG4gICAgJzcnIDogeydjb2RlJzonQU5LJywnbmFtZSc6J0Fua2FyYSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0FOVCcsJ25hbWUnOidBbnRhbHlhJ30sXG4gICAgJzknIDogeydjb2RlJzonQVJEJywnbmFtZSc6J0FyZGFoYW4nfSxcbiAgICAnMTAnIDogeydjb2RlJzonQVJUJywnbmFtZSc6J0FydHZpbid9LFxuICAgICcxMScgOiB7J2NvZGUnOidBWUknLCduYW1lJzonQXlkaW4nfSxcbiAgICAnMTInIDogeydjb2RlJzonQkFMJywnbmFtZSc6J0JhbGlrZXNpcid9LFxuICAgICcxMycgOiB7J2NvZGUnOidCQVInLCduYW1lJzonQmFydGluJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0JBVCcsJ25hbWUnOidCYXRtYW4nfSxcbiAgICAnMTUnIDogeydjb2RlJzonQkFZJywnbmFtZSc6J0JheWJ1cnQnfSxcbiAgICAnMTYnIDogeydjb2RlJzonQklMJywnbmFtZSc6J0JpbGVjaWsnfSxcbiAgICAnMTcnIDogeydjb2RlJzonQklOJywnbmFtZSc6J0JpbmdvbCd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidCSVQnLCduYW1lJzonQml0bGlzJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0JPTCcsJ25hbWUnOidCb2x1J30sXG4gICAgJzIwJyA6IHsnY29kZSc6J0JSRCcsJ25hbWUnOidCdXJkdXInfSxcbiAgICAnMjEnIDogeydjb2RlJzonQlJTJywnbmFtZSc6J0J1cnNhJ30sXG4gICAgJzIyJyA6IHsnY29kZSc6J0NLTCcsJ25hbWUnOidDYW5ha2thbGUnfSxcbiAgICAnMjMnIDogeydjb2RlJzonQ0tSJywnbmFtZSc6J0NhbmtpcmknfSxcbiAgICAnMjQnIDogeydjb2RlJzonQ09SJywnbmFtZSc6J0NvcnVtJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J0RFTicsJ25hbWUnOidEZW5pemxpJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6J0RJWScsJ25hbWUnOidEaXlhcmJha2lyJ30sXG4gICAgJzI3JyA6IHsnY29kZSc6J0RVWicsJ25hbWUnOidEdXpjZSd9LFxuICAgICcyOCcgOiB7J2NvZGUnOidFREknLCduYW1lJzonRWRpcm5lJ30sXG4gICAgJzI5JyA6IHsnY29kZSc6J0VMQScsJ25hbWUnOidFbGF6aWcnfSxcbiAgICAnMzAnIDogeydjb2RlJzonRVpDJywnbmFtZSc6J0VyemluY2FuJ30sXG4gICAgJzMxJyA6IHsnY29kZSc6J0VaUicsJ25hbWUnOidFcnp1cnVtJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6J0VTSycsJ25hbWUnOidFc2tpc2VoaXInfSxcbiAgICAnMzMnIDogeydjb2RlJzonR0FaJywnbmFtZSc6J0dhemlhbnRlcCd9LFxuICAgICczNCcgOiB7J2NvZGUnOidHSVInLCduYW1lJzonR2lyZXN1bid9LFxuICAgICczNScgOiB7J2NvZGUnOidHTVMnLCduYW1lJzonR3VtdXNoYW5lJ30sXG4gICAgJzM2JyA6IHsnY29kZSc6J0hLUicsJ25hbWUnOidIYWtrYXJpJ30sXG4gICAgJzM3JyA6IHsnY29kZSc6J0hUWScsJ25hbWUnOidIYXRheSd9LFxuICAgICczOCcgOiB7J2NvZGUnOidJR0QnLCduYW1lJzonSWdkaXInfSxcbiAgICAnMzknIDogeydjb2RlJzonSVNQJywnbmFtZSc6J0lzcGFydGEnfSxcbiAgICAnNDAnIDogeydjb2RlJzonSVNUJywnbmFtZSc6J0lzdGFuYnVsJ30sXG4gICAgJzQxJyA6IHsnY29kZSc6J0laTScsJ25hbWUnOidJem1pcid9LFxuICAgICc0MicgOiB7J2NvZGUnOidLQUgnLCduYW1lJzonS2FocmFtYW5tYXJhcyd9LFxuICAgICc0MycgOiB7J2NvZGUnOidLUkInLCduYW1lJzonS2FyYWJ1ayd9LFxuICAgICc0NCcgOiB7J2NvZGUnOidLUk0nLCduYW1lJzonS2FyYW1hbid9LFxuICAgICc0NScgOiB7J2NvZGUnOidLUlMnLCduYW1lJzonS2Fycyd9LFxuICAgICc0NicgOiB7J2NvZGUnOidLQVMnLCduYW1lJzonS2FzdGFtb251J30sXG4gICAgJzQ3JyA6IHsnY29kZSc6J0tBWScsJ25hbWUnOidLYXlzZXJpJ30sXG4gICAgJzQ4JyA6IHsnY29kZSc6J0tMUycsJ25hbWUnOidLaWxpcyd9LFxuICAgICc0OScgOiB7J2NvZGUnOidLUksnLCduYW1lJzonS2lyaWtrYWxlJ30sXG4gICAgJzUwJyA6IHsnY29kZSc6J0tMUicsJ25hbWUnOidLaXJrbGFyZWxpJ30sXG4gICAgJzUxJyA6IHsnY29kZSc6J0tSSCcsJ25hbWUnOidLaXJzZWhpcid9LFxuICAgICc1MicgOiB7J2NvZGUnOidLT0MnLCduYW1lJzonS29jYWVsaSd9LFxuICAgICc1MycgOiB7J2NvZGUnOidLT04nLCduYW1lJzonS29ueWEnfSxcbiAgICAnNTQnIDogeydjb2RlJzonS1VUJywnbmFtZSc6J0t1dGFoeWEnfSxcbiAgICAnNTUnIDogeydjb2RlJzonTUFMJywnbmFtZSc6J01hbGF0eWEnfSxcbiAgICAnNTYnIDogeydjb2RlJzonTUFOJywnbmFtZSc6J01hbmlzYSd9LFxuICAgICc1NycgOiB7J2NvZGUnOidNQVInLCduYW1lJzonTWFyZGluJ30sXG4gICAgJzU4JyA6IHsnY29kZSc6J01FUicsJ25hbWUnOidNZXJzaW4nfSxcbiAgICAnNTknIDogeydjb2RlJzonTVVHJywnbmFtZSc6J011Z2xhJ30sXG4gICAgJzYwJyA6IHsnY29kZSc6J01VUycsJ25hbWUnOidNdXMnfSxcbiAgICAnNjEnIDogeydjb2RlJzonTkVWJywnbmFtZSc6J05ldnNlaGlyJ30sXG4gICAgJzYyJyA6IHsnY29kZSc6J05JRycsJ25hbWUnOidOaWdkZSd9LFxuICAgICc2MycgOiB7J2NvZGUnOidPUkQnLCduYW1lJzonT3JkdSd9LFxuICAgICc2NCcgOiB7J2NvZGUnOidPU00nLCduYW1lJzonT3NtYW5peWUnfSxcbiAgICAnNjUnIDogeydjb2RlJzonUklaJywnbmFtZSc6J1JpemUnfSxcbiAgICAnNjYnIDogeydjb2RlJzonU0FLJywnbmFtZSc6J1Nha2FyeWEnfSxcbiAgICAnNjcnIDogeydjb2RlJzonU0FNJywnbmFtZSc6J1NhbXN1bid9LFxuICAgICc2OCcgOiB7J2NvZGUnOidTQU4nLCduYW1lJzonU2FubGl1cmZhJ30sXG4gICAgJzY5JyA6IHsnY29kZSc6J1NJSScsJ25hbWUnOidTaWlydCd9LFxuICAgICc3MCcgOiB7J2NvZGUnOidTSU4nLCduYW1lJzonU2lub3AnfSxcbiAgICAnNzEnIDogeydjb2RlJzonU0lSJywnbmFtZSc6J1Npcm5hayd9LFxuICAgICc3MicgOiB7J2NvZGUnOidTSVYnLCduYW1lJzonU2l2YXMnfSxcbiAgICAnNzMnIDogeydjb2RlJzonVEVMJywnbmFtZSc6J1Rla2lyZGFnJ30sXG4gICAgJzc0JyA6IHsnY29kZSc6J1RPSycsJ25hbWUnOidUb2thdCd9LFxuICAgICc3NScgOiB7J2NvZGUnOidUUkEnLCduYW1lJzonVHJhYnpvbid9LFxuICAgICc3NicgOiB7J2NvZGUnOidUVU4nLCduYW1lJzonVHVuY2VsaSd9LFxuICAgICc3NycgOiB7J2NvZGUnOidVU0snLCduYW1lJzonVXNhayd9LFxuICAgICc3OCcgOiB7J2NvZGUnOidWQU4nLCduYW1lJzonVmFuJ30sXG4gICAgJzc5JyA6IHsnY29kZSc6J1lBTCcsJ25hbWUnOidZYWxvdmEnfSxcbiAgICAnODAnIDogeydjb2RlJzonWU9aJywnbmFtZSc6J1lvemdhdCd9LFxuICAgICc4MScgOiB7J2NvZGUnOidaT04nLCduYW1lJzonWm9uZ3VsZGFrJ31cbiAgfSxcbiAgJ1RNJzp7XG4gICAgJzEnIDogeydjb2RlJzonQScsJ25hbWUnOidBaGFsIFdlbGF5YXR5J30sXG4gICAgJzInIDogeydjb2RlJzonQicsJ25hbWUnOidCYWxrYW4gV2VsYXlhdHknfSxcbiAgICAnMycgOiB7J2NvZGUnOidEJywnbmFtZSc6J0Rhc2hob3d1eiBXZWxheWF0eSd9LFxuICAgICc0JyA6IHsnY29kZSc6J0wnLCduYW1lJzonTGViYXAgV2VsYXlhdHknfSxcbiAgICAnNScgOiB7J2NvZGUnOidNJywnbmFtZSc6J01hcnkgV2VsYXlhdHknfVxuICB9LFxuICAnVEMnOntcbiAgICAnMScgOiB7J2NvZGUnOidBQycsJ25hbWUnOidBbWJlcmdyaXMgQ2F5cyd9LFxuICAgICcyJyA6IHsnY29kZSc6J0RDJywnbmFtZSc6J0RlbGxpcyBDYXknfSxcbiAgICAnMycgOiB7J2NvZGUnOidGQycsJ25hbWUnOidGcmVuY2ggQ2F5J30sXG4gICAgJzQnIDogeydjb2RlJzonTFcnLCduYW1lJzonTGl0dGxlIFdhdGVyIENheSd9LFxuICAgICc1JyA6IHsnY29kZSc6J1JDJywnbmFtZSc6J1BhcnJvdCBDYXknfSxcbiAgICAnNicgOiB7J2NvZGUnOidQTicsJ25hbWUnOidQaW5lIENheSd9LFxuICAgICc3JyA6IHsnY29kZSc6J1NMJywnbmFtZSc6J1NhbHQgQ2F5J30sXG4gICAgJzgnIDogeydjb2RlJzonR1QnLCduYW1lJzonR3JhbmQgVHVyayd9LFxuICAgICc5JyA6IHsnY29kZSc6J1NDJywnbmFtZSc6J1NvdXRoIENhaWNvcyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidFQycsJ25hbWUnOidFYXN0IENhaWNvcyd9LFxuICAgICcxMScgOiB7J2NvZGUnOidNQycsJ25hbWUnOidNaWRkbGUgQ2FpY29zJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J05DJywnbmFtZSc6J05vcnRoIENhaWNvcyd9LFxuICAgICcxMycgOiB7J2NvZGUnOidQUicsJ25hbWUnOidQcm92aWRlbmNpYWxlcyd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidXQycsJ25hbWUnOidXZXN0IENhaWNvcyd9XG4gIH0sXG4gICdUVic6e1xuICAgICcxJyA6IHsnY29kZSc6J05NRycsJ25hbWUnOidOYW51bWFuZ2EnfSxcbiAgICAnMicgOiB7J2NvZGUnOidOTEsnLCduYW1lJzonTml1bGFraXRhJ30sXG4gICAgJzMnIDogeydjb2RlJzonTlRPJywnbmFtZSc6J05pdXRhbyd9LFxuICAgICc0JyA6IHsnY29kZSc6J0ZVTicsJ25hbWUnOidGdW5hZnV0aSd9LFxuICAgICc1JyA6IHsnY29kZSc6J05NRScsJ25hbWUnOidOYW51bWVhJ30sXG4gICAgJzYnIDogeydjb2RlJzonTlVJJywnbmFtZSc6J051aSd9LFxuICAgICc3JyA6IHsnY29kZSc6J05GVCcsJ25hbWUnOidOdWt1ZmV0YXUnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidOTEwnLCduYW1lJzonTnVrdWxhZWxhZSd9LFxuICAgICc5JyA6IHsnY29kZSc6J1ZBSScsJ25hbWUnOidWYWl0dXB1J31cbiAgfSxcbiAgJ1VHJzp7XG4gICAgJzEnIDogeydjb2RlJzonS0FMJywnbmFtZSc6J0thbGFuZ2FsYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0tNUCcsJ25hbWUnOidLYW1wYWxhJ30sXG4gICAgJzMnIDogeydjb2RlJzonS0FZJywnbmFtZSc6J0theXVuZ2EnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidLSUInLCduYW1lJzonS2lib2dhJ30sXG4gICAgJzUnIDogeydjb2RlJzonTFVXJywnbmFtZSc6J0x1d2Vybyd9LFxuICAgICc2JyA6IHsnY29kZSc6J01BUycsJ25hbWUnOidNYXNha2EnfSxcbiAgICAnNycgOiB7J2NvZGUnOidNUEknLCduYW1lJzonTXBpZ2knfSxcbiAgICAnOCcgOiB7J2NvZGUnOidNVUInLCduYW1lJzonTXViZW5kZSd9LFxuICAgICc5JyA6IHsnY29kZSc6J01VSycsJ25hbWUnOidNdWtvbm8nfSxcbiAgICAnMTAnIDogeydjb2RlJzonTktTJywnbmFtZSc6J05ha2Fzb25nb2xhJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1JBSycsJ25hbWUnOidSYWthaSd9LFxuICAgICcxMicgOiB7J2NvZGUnOidTRU0nLCduYW1lJzonU2VtYmFidWxlJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J1dBSycsJ25hbWUnOidXYWtpc28nfSxcbiAgICAnMTQnIDogeydjb2RlJzonQlVHJywnbmFtZSc6J0J1Z2lyaSd9LFxuICAgICcxNScgOiB7J2NvZGUnOidCVVMnLCduYW1lJzonQnVzaWEnfSxcbiAgICAnMTYnIDogeydjb2RlJzonSUdBJywnbmFtZSc6J0lnYW5nYSd9LFxuICAgICcxNycgOiB7J2NvZGUnOidKSU4nLCduYW1lJzonSmluamEnfSxcbiAgICAnMTgnIDogeydjb2RlJzonS0FCJywnbmFtZSc6J0thYmVyYW1haWRvJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0tNTCcsJ25hbWUnOidLYW11bGknfSxcbiAgICAnMjAnIDogeydjb2RlJzonS1BDJywnbmFtZSc6J0thcGNob3J3YSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidLVEsnLCduYW1lJzonS2F0YWt3aSd9LFxuICAgICcyMicgOiB7J2NvZGUnOidLVU0nLCduYW1lJzonS3VtaSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidNQVknLCduYW1lJzonTWF5dWdlJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J01CQScsJ25hbWUnOidNYmFsZSd9LFxuICAgICcyNScgOiB7J2NvZGUnOidQQUwnLCduYW1lJzonUGFsbGlzYSd9LFxuICAgICcyNicgOiB7J2NvZGUnOidTSVInLCduYW1lJzonU2lyb25rbyd9LFxuICAgICcyNycgOiB7J2NvZGUnOidTT1InLCduYW1lJzonU29yb3RpJ30sXG4gICAgJzI4JyA6IHsnY29kZSc6J1RPUicsJ25hbWUnOidUb3Jvcm8nfSxcbiAgICAnMjknIDogeydjb2RlJzonQURKJywnbmFtZSc6J0FkanVtYW5pJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J0FQQycsJ25hbWUnOidBcGFjJ30sXG4gICAgJzMxJyA6IHsnY29kZSc6J0FSVScsJ25hbWUnOidBcnVhJ30sXG4gICAgJzMyJyA6IHsnY29kZSc6J0dVTCcsJ25hbWUnOidHdWx1J30sXG4gICAgJzMzJyA6IHsnY29kZSc6J0tJVCcsJ25hbWUnOidLaXRndW0nfSxcbiAgICAnMzQnIDogeydjb2RlJzonS09UJywnbmFtZSc6J0tvdGlkbyd9LFxuICAgICczNScgOiB7J2NvZGUnOidMSVInLCduYW1lJzonTGlyYSd9LFxuICAgICczNicgOiB7J2NvZGUnOidNUlQnLCduYW1lJzonTW9yb3RvJ30sXG4gICAgJzM3JyA6IHsnY29kZSc6J01PWScsJ25hbWUnOidNb3lvJ30sXG4gICAgJzM4JyA6IHsnY29kZSc6J05BSycsJ25hbWUnOidOYWthcGlyaXBpcml0J30sXG4gICAgJzM5JyA6IHsnY29kZSc6J05FQicsJ25hbWUnOidOZWJiaSd9LFxuICAgICc0MCcgOiB7J2NvZGUnOidQQUQnLCduYW1lJzonUGFkZXInfSxcbiAgICAnNDEnIDogeydjb2RlJzonWVVNJywnbmFtZSc6J1l1bWJlJ30sXG4gICAgJzQyJyA6IHsnY29kZSc6J0JVTicsJ25hbWUnOidCdW5kaWJ1Z3lvJ30sXG4gICAgJzQzJyA6IHsnY29kZSc6J0JTSCcsJ25hbWUnOidCdXNoZW55aSd9LFxuICAgICc0NCcgOiB7J2NvZGUnOidIT0knLCduYW1lJzonSG9pbWEnfSxcbiAgICAnNDUnIDogeydjb2RlJzonS0JMJywnbmFtZSc6J0thYmFsZSd9LFxuICAgICc0NicgOiB7J2NvZGUnOidLQVInLCduYW1lJzonS2FiYXJvbGUnfSxcbiAgICAnNDcnIDogeydjb2RlJzonS0FNJywnbmFtZSc6J0thbXdlbmdlJ30sXG4gICAgJzQ4JyA6IHsnY29kZSc6J0tBTicsJ25hbWUnOidLYW51bmd1J30sXG4gICAgJzQ5JyA6IHsnY29kZSc6J0tBUycsJ25hbWUnOidLYXNlc2UnfSxcbiAgICAnNTAnIDogeydjb2RlJzonS0JBJywnbmFtZSc6J0tpYmFhbGUnfSxcbiAgICAnNTEnIDogeydjb2RlJzonS0lTJywnbmFtZSc6J0tpc29ybyd9LFxuICAgICc1MicgOiB7J2NvZGUnOidLWUUnLCduYW1lJzonS3llbmpvam8nfSxcbiAgICAnNTMnIDogeydjb2RlJzonTVNOJywnbmFtZSc6J01hc2luZGknfSxcbiAgICAnNTQnIDogeydjb2RlJzonTUJSJywnbmFtZSc6J01iYXJhcmEnfSxcbiAgICAnNTUnIDogeydjb2RlJzonTlRVJywnbmFtZSc6J050dW5nYW1vJ30sXG4gICAgJzU2JyA6IHsnY29kZSc6J1JVSycsJ25hbWUnOidSdWt1bmdpcmknfVxuICB9LFxuICAnVUEnOntcbiAgICAnMScgOiB7J2NvZGUnOidDSycsJ25hbWUnOidDaGVya2FzeSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0NIJywnbmFtZSc6J0NoZXJuaWhpdid9LFxuICAgICczJyA6IHsnY29kZSc6J0NWJywnbmFtZSc6J0NoZXJuaXZ0c2knfSxcbiAgICAnNCcgOiB7J2NvZGUnOidDUicsJ25hbWUnOidDcmltZWEnfSxcbiAgICAnNScgOiB7J2NvZGUnOidETicsJ25hbWUnOidEbmlwcm9wZXRyb3ZzXFwnayd9LFxuICAgICc2JyA6IHsnY29kZSc6J0RPJywnbmFtZSc6J0RvbmV0c1xcJ2snfSxcbiAgICAnNycgOiB7J2NvZGUnOidJVicsJ25hbWUnOidJdmFuby1GcmFua2l2c1xcJ2snfSxcbiAgICAnOCcgOiB7J2NvZGUnOidLTCcsJ25hbWUnOidLaGFya2l2IEtoZXJzb24nfSxcbiAgICAnOScgOiB7J2NvZGUnOidLTScsJ25hbWUnOidLaG1lbFxcJ255dHNcXCdreXknfSxcbiAgICAnMTAnIDogeydjb2RlJzonS1InLCduYW1lJzonS2lyb3ZvaHJhZCd9LFxuICAgICcxMScgOiB7J2NvZGUnOidLVicsJ25hbWUnOidLaWV2J30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0tZJywnbmFtZSc6J0t5eWl2J30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0xVJywnbmFtZSc6J0x1aGFuc1xcJ2snfSxcbiAgICAnMTQnIDogeydjb2RlJzonTFYnLCduYW1lJzonTFxcJ3Zpdid9LFxuICAgICcxNScgOiB7J2NvZGUnOidNWScsJ25hbWUnOidNeWtvbGF5aXYnfSxcbiAgICAnMTYnIDogeydjb2RlJzonT0QnLCduYW1lJzonT2Rlc2EnfSxcbiAgICAnMTcnIDogeydjb2RlJzonUE8nLCduYW1lJzonUG9sdGF2YSd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidSSScsJ25hbWUnOidSaXZuZSd9LFxuICAgICcxOScgOiB7J2NvZGUnOidTRScsJ25hbWUnOidTZXZhc3RvcG9sJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J1NVJywnbmFtZSc6J1N1bXknfSxcbiAgICAnMjEnIDogeydjb2RlJzonVEUnLCduYW1lJzonVGVybm9waWxcXCcnfSxcbiAgICAnMjInIDogeydjb2RlJzonVkknLCduYW1lJzonVmlubnl0c3lhJ30sXG4gICAgJzIzJyA6IHsnY29kZSc6J1ZPJywnbmFtZSc6J1ZvbHluXFwnJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J1pLJywnbmFtZSc6J1pha2FycGF0dHlhJ30sXG4gICAgJzI1JyA6IHsnY29kZSc6J1pBJywnbmFtZSc6J1phcG9yaXpoemh5YSd9LFxuICAgICcyNicgOiB7J2NvZGUnOidaSCcsJ25hbWUnOidaaHl0b215cid9XG4gIH0sXG4gICdBRSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FaJywnbmFtZSc6J0FidSBaYWJ5J30sXG4gICAgJzInIDogeydjb2RlJzonQUonLCduYW1lJzonXFwnQWptYW4nfSxcbiAgICAnMycgOiB7J2NvZGUnOidGVScsJ25hbWUnOidBbCBGdWpheXJhaCd9LFxuICAgICc0JyA6IHsnY29kZSc6J1NIJywnbmFtZSc6J0FzaCBTaGFyaXFhaCd9LFxuICAgICc1JyA6IHsnY29kZSc6J0RVJywnbmFtZSc6J0R1YmF5eSd9LFxuICAgICc2JyA6IHsnY29kZSc6J1JLJywnbmFtZSc6J1JcXCdhcyBhbCBLaGF5bWFoJ30sXG4gICAgJzcnIDogeydjb2RlJzonVVEnLCduYW1lJzonVW1tIGFsIFFheXdheW4nfVxuICB9LFxuICAnR0InOntcbiAgICAnMScgOiB7J2NvZGUnOidBQk4nLCduYW1lJzonQWJlcmRlZW4nfSxcbiAgICAnMicgOiB7J2NvZGUnOidBQk5TJywnbmFtZSc6J0FiZXJkZWVuc2hpcmUnfSxcbiAgICAnMycgOiB7J2NvZGUnOidBTkcnLCduYW1lJzonQW5nbGVzZXknfSxcbiAgICAnNCcgOiB7J2NvZGUnOidBR1MnLCduYW1lJzonQW5ndXMnfSxcbiAgICAnNScgOiB7J2NvZGUnOidBUlknLCduYW1lJzonQXJneWxsIGFuZCBCdXRlJ30sXG4gICAgJzYnIDogeydjb2RlJzonQkVEUycsJ25hbWUnOidCZWRmb3Jkc2hpcmUnfSxcbiAgICAnNycgOiB7J2NvZGUnOidCRVJLUycsJ25hbWUnOidCZXJrc2hpcmUnfSxcbiAgICAnOCcgOiB7J2NvZGUnOidCTEEnLCduYW1lJzonQmxhZW5hdSBHd2VudCd9LFxuICAgICc5JyA6IHsnY29kZSc6J0JSSScsJ25hbWUnOidCcmlkZ2VuZCd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidCU1RMJywnbmFtZSc6J0JyaXN0b2wnfSxcbiAgICAnMTEnIDogeydjb2RlJzonQlVDS1MnLCduYW1lJzonQnVja2luZ2hhbXNoaXJlJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0NBRScsJ25hbWUnOidDYWVycGhpbGx5J30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0NBTUJTJywnbmFtZSc6J0NhbWJyaWRnZXNoaXJlJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0NERicsJ25hbWUnOidDYXJkaWZmJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0NBUk0nLCduYW1lJzonQ2FybWFydGhlbnNoaXJlJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J0NER04nLCduYW1lJzonQ2VyZWRpZ2lvbid9LFxuICAgICcxNycgOiB7J2NvZGUnOidDSEVTJywnbmFtZSc6J0NoZXNoaXJlJ30sXG4gICAgJzE4JyA6IHsnY29kZSc6J0NMQUNLJywnbmFtZSc6J0NsYWNrbWFubmFuc2hpcmUnfSxcbiAgICAnMTknIDogeydjb2RlJzonQ09OJywnbmFtZSc6J0Nvbnd5J30sXG4gICAgJzIwJyA6IHsnY29kZSc6J0NPUk4nLCduYW1lJzonQ29ybndhbGwnfSxcbiAgICAnMjEnIDogeydjb2RlJzonRE5CRycsJ25hbWUnOidEZW5iaWdoc2hpcmUnfSxcbiAgICAnMjInIDogeydjb2RlJzonREVSQlknLCduYW1lJzonRGVyYnlzaGlyZSd9LFxuICAgICcyMycgOiB7J2NvZGUnOidEVk4nLCduYW1lJzonRGV2b24nfSxcbiAgICAnMjQnIDogeydjb2RlJzonRE9SJywnbmFtZSc6J0RvcnNldCd9LFxuICAgICcyNScgOiB7J2NvZGUnOidER0wnLCduYW1lJzonRHVtZnJpZXMgYW5kIEdhbGxvd2F5J30sXG4gICAgJzI2JyA6IHsnY29kZSc6J0RVTkQnLCduYW1lJzonRHVuZGVlJ30sXG4gICAgJzI3JyA6IHsnY29kZSc6J0RITScsJ25hbWUnOidEdXJoYW0nfSxcbiAgICAnMjgnIDogeydjb2RlJzonQVJZRScsJ25hbWUnOidFYXN0IEF5cnNoaXJlJ30sXG4gICAgJzI5JyA6IHsnY29kZSc6J0RVTkJFJywnbmFtZSc6J0Vhc3QgRHVuYmFydG9uc2hpcmUnfSxcbiAgICAnMzAnIDogeydjb2RlJzonTE9URScsJ25hbWUnOidFYXN0IExvdGhpYW4nfSxcbiAgICAnMzEnIDogeydjb2RlJzonUkVORScsJ25hbWUnOidFYXN0IFJlbmZyZXdzaGlyZSd9LFxuICAgICczMicgOiB7J2NvZGUnOidFUllTJywnbmFtZSc6J0Vhc3QgUmlkaW5nIG9mIFlvcmtzaGlyZSd9LFxuICAgICczMycgOiB7J2NvZGUnOidTWEUnLCduYW1lJzonRWFzdCBTdXNzZXgnfSxcbiAgICAnMzQnIDogeydjb2RlJzonRURJTicsJ25hbWUnOidFZGluYnVyZ2gnfSxcbiAgICAnMzUnIDogeydjb2RlJzonRVNYJywnbmFtZSc6J0Vzc2V4J30sXG4gICAgJzM2JyA6IHsnY29kZSc6J0ZBTEsnLCduYW1lJzonRmFsa2lyayd9LFxuICAgICczNycgOiB7J2NvZGUnOidGRkUnLCduYW1lJzonRmlmZSd9LFxuICAgICczOCcgOiB7J2NvZGUnOidGTElOVCcsJ25hbWUnOidGbGludHNoaXJlJ30sXG4gICAgJzM5JyA6IHsnY29kZSc6J0dMQVMnLCduYW1lJzonR2xhc2dvdyd9LFxuICAgICc0MCcgOiB7J2NvZGUnOidHTE9TJywnbmFtZSc6J0dsb3VjZXN0ZXJzaGlyZSd9LFxuICAgICc0MScgOiB7J2NvZGUnOidMRE4nLCduYW1lJzonR3JlYXRlciBMb25kb24nfSxcbiAgICAnNDInIDogeydjb2RlJzonTUNIJywnbmFtZSc6J0dyZWF0ZXIgTWFuY2hlc3Rlcid9LFxuICAgICc0MycgOiB7J2NvZGUnOidHREQnLCduYW1lJzonR3d5bmVkZCd9LFxuICAgICc0NCcgOiB7J2NvZGUnOidIQU5UUycsJ25hbWUnOidIYW1wc2hpcmUnfSxcbiAgICAnNDUnIDogeydjb2RlJzonSFdSJywnbmFtZSc6J0hlcmVmb3Jkc2hpcmUnfSxcbiAgICAnNDYnIDogeydjb2RlJzonSEVSVFMnLCduYW1lJzonSGVydGZvcmRzaGlyZSd9LFxuICAgICc0NycgOiB7J2NvZGUnOidITEQnLCduYW1lJzonSGlnaGxhbmRzJ30sXG4gICAgJzQ4JyA6IHsnY29kZSc6J0lWRVInLCduYW1lJzonSW52ZXJjbHlkZSd9LFxuICAgICc0OScgOiB7J2NvZGUnOidJT1cnLCduYW1lJzonSXNsZSBvZiBXaWdodCd9LFxuICAgICc1MCcgOiB7J2NvZGUnOidLTlQnLCduYW1lJzonS2VudCd9LFxuICAgICc1MScgOiB7J2NvZGUnOidMQU5DUycsJ25hbWUnOidMYW5jYXNoaXJlJ30sXG4gICAgJzUyJyA6IHsnY29kZSc6J0xFSUNTJywnbmFtZSc6J0xlaWNlc3RlcnNoaXJlJ30sXG4gICAgJzUzJyA6IHsnY29kZSc6J0xJTkNTJywnbmFtZSc6J0xpbmNvbG5zaGlyZSd9LFxuICAgICc1NCcgOiB7J2NvZGUnOidNU1knLCduYW1lJzonTWVyc2V5c2lkZSd9LFxuICAgICc1NScgOiB7J2NvZGUnOidNRVJUJywnbmFtZSc6J01lcnRoeXIgVHlkZmlsJ30sXG4gICAgJzU2JyA6IHsnY29kZSc6J01MT1QnLCduYW1lJzonTWlkbG90aGlhbid9LFxuICAgICc1NycgOiB7J2NvZGUnOidNTU9VVEgnLCduYW1lJzonTW9ubW91dGhzaGlyZSd9LFxuICAgICc1OCcgOiB7J2NvZGUnOidNT1JBWScsJ25hbWUnOidNb3JheSd9LFxuICAgICc1OScgOiB7J2NvZGUnOidOUFJUQUwnLCduYW1lJzonTmVhdGggUG9ydCBUYWxib3QnfSxcbiAgICAnNjAnIDogeydjb2RlJzonTkVXUFQnLCduYW1lJzonTmV3cG9ydCd9LFxuICAgICc2MScgOiB7J2NvZGUnOidOT1InLCduYW1lJzonTm9yZm9sayd9LFxuICAgICc2MicgOiB7J2NvZGUnOidBUllOJywnbmFtZSc6J05vcnRoIEF5cnNoaXJlJ30sXG4gICAgJzYzJyA6IHsnY29kZSc6J0xBTk4nLCduYW1lJzonTm9ydGggTGFuYXJrc2hpcmUnfSxcbiAgICAnNjQnIDogeydjb2RlJzonWVNOJywnbmFtZSc6J05vcnRoIFlvcmtzaGlyZSd9LFxuICAgICc2NScgOiB7J2NvZGUnOidOSE0nLCduYW1lJzonTm9ydGhhbXB0b25zaGlyZSd9LFxuICAgICc2NicgOiB7J2NvZGUnOidOTEQnLCduYW1lJzonTm9ydGh1bWJlcmxhbmQnfSxcbiAgICAnNjcnIDogeydjb2RlJzonTk9UJywnbmFtZSc6J05vdHRpbmdoYW1zaGlyZSd9LFxuICAgICc2OCcgOiB7J2NvZGUnOidPUksnLCduYW1lJzonT3JrbmV5IElzbGFuZHMnfSxcbiAgICAnNjknIDogeydjb2RlJzonT0ZFJywnbmFtZSc6J094Zm9yZHNoaXJlJ30sXG4gICAgJzcwJyA6IHsnY29kZSc6J1BFTScsJ25hbWUnOidQZW1icm9rZXNoaXJlJ30sXG4gICAgJzcxJyA6IHsnY29kZSc6J1BFUlRIJywnbmFtZSc6J1BlcnRoIGFuZCBLaW5yb3NzJ30sXG4gICAgJzcyJyA6IHsnY29kZSc6J1BXUycsJ25hbWUnOidQb3d5cyd9LFxuICAgICc3MycgOiB7J2NvZGUnOidSRU4nLCduYW1lJzonUmVuZnJld3NoaXJlJ30sXG4gICAgJzc0JyA6IHsnY29kZSc6J1JIT04nLCduYW1lJzonUmhvbmRkYSBDeW5vbiBUYWZmJ30sXG4gICAgJzc1JyA6IHsnY29kZSc6J1JVVCcsJ25hbWUnOidSdXRsYW5kJ30sXG4gICAgJzc2JyA6IHsnY29kZSc6J0JPUicsJ25hbWUnOidTY290dGlzaCBCb3JkZXJzJ30sXG4gICAgJzc3JyA6IHsnY29kZSc6J1NIRVQnLCduYW1lJzonU2hldGxhbmQgSXNsYW5kcyd9LFxuICAgICc3OCcgOiB7J2NvZGUnOidTUEUnLCduYW1lJzonU2hyb3BzaGlyZSd9LFxuICAgICc3OScgOiB7J2NvZGUnOidTT00nLCduYW1lJzonU29tZXJzZXQnfSxcbiAgICAnODAnIDogeydjb2RlJzonQVJZUycsJ25hbWUnOidTb3V0aCBBeXJzaGlyZSd9LFxuICAgICc4MScgOiB7J2NvZGUnOidMQU5TJywnbmFtZSc6J1NvdXRoIExhbmFya3NoaXJlJ30sXG4gICAgJzgyJyA6IHsnY29kZSc6J1lTUycsJ25hbWUnOidTb3V0aCBZb3Jrc2hpcmUnfSxcbiAgICAnODMnIDogeydjb2RlJzonU0ZEJywnbmFtZSc6J1N0YWZmb3Jkc2hpcmUnfSxcbiAgICAnODQnIDogeydjb2RlJzonU1RJUicsJ25hbWUnOidTdGlybGluZyd9LFxuICAgICc4NScgOiB7J2NvZGUnOidTRksnLCduYW1lJzonU3VmZm9sayd9LFxuICAgICc4NicgOiB7J2NvZGUnOidTUlknLCduYW1lJzonU3VycmV5J30sXG4gICAgJzg3JyA6IHsnY29kZSc6J1NXQU4nLCduYW1lJzonU3dhbnNlYSd9LFxuICAgICc4OCcgOiB7J2NvZGUnOidUT1JGJywnbmFtZSc6J1RvcmZhZW4nfSxcbiAgICAnODknIDogeydjb2RlJzonVFdSJywnbmFtZSc6J1R5bmUgYW5kIFdlYXInfSxcbiAgICAnOTAnIDogeydjb2RlJzonVkdMQU0nLCduYW1lJzonVmFsZSBvZiBHbGFtb3JnYW4nfSxcbiAgICAnOTEnIDogeydjb2RlJzonV0FSS1MnLCduYW1lJzonV2Fyd2lja3NoaXJlJ30sXG4gICAgJzkyJyA6IHsnY29kZSc6J1dEVU4nLCduYW1lJzonV2VzdCBEdW5iYXJ0b25zaGlyZSd9LFxuICAgICc5MycgOiB7J2NvZGUnOidXTE9UJywnbmFtZSc6J1dlc3QgTG90aGlhbid9LFxuICAgICc5NCcgOiB7J2NvZGUnOidXTUQnLCduYW1lJzonV2VzdCBNaWRsYW5kcyd9LFxuICAgICc5NScgOiB7J2NvZGUnOidTWFcnLCduYW1lJzonV2VzdCBTdXNzZXgnfSxcbiAgICAnOTYnIDogeydjb2RlJzonWVNXJywnbmFtZSc6J1dlc3QgWW9ya3NoaXJlJ30sXG4gICAgJzk3JyA6IHsnY29kZSc6J1dJTCcsJ25hbWUnOidXZXN0ZXJuIElzbGVzJ30sXG4gICAgJzk4JyA6IHsnY29kZSc6J1dMVCcsJ25hbWUnOidXaWx0c2hpcmUnfSxcbiAgICAnOTknIDogeydjb2RlJzonV09SQ1MnLCduYW1lJzonV29yY2VzdGVyc2hpcmUnfSxcbiAgICAnMTAwJyA6IHsnY29kZSc6J1dSWCcsJ25hbWUnOidXcmV4aGFtJ31cbiAgfSxcbiAgJ1VTJzp7XG4gICAgJzEnIDogeydjb2RlJzonQUwnLCduYW1lJzonQWxhYmFtYSd9LFxuICAgICcyJyA6IHsnY29kZSc6J0FLJywnbmFtZSc6J0FsYXNrYSd9LFxuICAgICczJyA6IHsnY29kZSc6J0FTJywnbmFtZSc6J0FtZXJpY2FuIFNhbW9hJ30sXG4gICAgJzQnIDogeydjb2RlJzonQVonLCduYW1lJzonQXJpem9uYSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0FSJywnbmFtZSc6J0Fya2Fuc2FzJ30sXG4gICAgJzYnIDogeydjb2RlJzonQUYnLCduYW1lJzonQXJtZWQgRm9yY2VzIEFmcmljYSd9LFxuICAgICc3JyA6IHsnY29kZSc6J0FBJywnbmFtZSc6J0FybWVkIEZvcmNlcyBBbWVyaWNhcyd9LFxuICAgICc4JyA6IHsnY29kZSc6J0FDJywnbmFtZSc6J0FybWVkIEZvcmNlcyBDYW5hZGEnfSxcbiAgICAnOScgOiB7J2NvZGUnOidBRScsJ25hbWUnOidBcm1lZCBGb3JjZXMgRXVyb3BlJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0FNJywnbmFtZSc6J0FybWVkIEZvcmNlcyBNaWRkbGUgRWFzdCd9LFxuICAgICcxMScgOiB7J2NvZGUnOidBUCcsJ25hbWUnOidBcm1lZCBGb3JjZXMgUGFjaWZpYyd9LFxuICAgICcxMicgOiB7J2NvZGUnOidDQScsJ25hbWUnOidDYWxpZm9ybmlhJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J0NPJywnbmFtZSc6J0NvbG9yYWRvJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0NUJywnbmFtZSc6J0Nvbm5lY3RpY3V0J30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0RFJywnbmFtZSc6J0RlbGF3YXJlJ30sXG4gICAgJzE2JyA6IHsnY29kZSc6J0RDJywnbmFtZSc6J0Rpc3RyaWN0IG9mIENvbHVtYmlhJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J0ZNJywnbmFtZSc6J0ZlZGVyYXRlZCBTdGF0ZXMgT2YgTWljcm9uZXNpYSd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidGTCcsJ25hbWUnOidGbG9yaWRhJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J0dBJywnbmFtZSc6J0dlb3JnaWEnfSxcbiAgICAnMjAnIDogeydjb2RlJzonR1UnLCduYW1lJzonR3VhbSd9LFxuICAgICcyMScgOiB7J2NvZGUnOidISScsJ25hbWUnOidIYXdhaWknfSxcbiAgICAnMjInIDogeydjb2RlJzonSUQnLCduYW1lJzonSWRhaG8nfSxcbiAgICAnMjMnIDogeydjb2RlJzonSUwnLCduYW1lJzonSWxsaW5vaXMnfSxcbiAgICAnMjQnIDogeydjb2RlJzonSU4nLCduYW1lJzonSW5kaWFuYSd9LFxuICAgICcyNScgOiB7J2NvZGUnOidJQScsJ25hbWUnOidJb3dhJ30sXG4gICAgJzI2JyA6IHsnY29kZSc6J0tTJywnbmFtZSc6J0thbnNhcyd9LFxuICAgICcyNycgOiB7J2NvZGUnOidLWScsJ25hbWUnOidLZW50dWNreSd9LFxuICAgICcyOCcgOiB7J2NvZGUnOidMQScsJ25hbWUnOidMb3Vpc2lhbmEnfSxcbiAgICAnMjknIDogeydjb2RlJzonTUUnLCduYW1lJzonTWFpbmUnfSxcbiAgICAnMzAnIDogeydjb2RlJzonTUgnLCduYW1lJzonTWFyc2hhbGwgSXNsYW5kcyd9LFxuICAgICczMScgOiB7J2NvZGUnOidNRCcsJ25hbWUnOidNYXJ5bGFuZCd9LFxuICAgICczMicgOiB7J2NvZGUnOidNQScsJ25hbWUnOidNYXNzYWNodXNldHRzJ30sXG4gICAgJzMzJyA6IHsnY29kZSc6J01JJywnbmFtZSc6J01pY2hpZ2FuJ30sXG4gICAgJzM0JyA6IHsnY29kZSc6J01OJywnbmFtZSc6J01pbm5lc290YSd9LFxuICAgICczNScgOiB7J2NvZGUnOidNUycsJ25hbWUnOidNaXNzaXNzaXBwaSd9LFxuICAgICczNicgOiB7J2NvZGUnOidNTycsJ25hbWUnOidNaXNzb3VyaSd9LFxuICAgICczNycgOiB7J2NvZGUnOidNVCcsJ25hbWUnOidNb250YW5hJ30sXG4gICAgJzM4JyA6IHsnY29kZSc6J05FJywnbmFtZSc6J05lYnJhc2thJ30sXG4gICAgJzM5JyA6IHsnY29kZSc6J05WJywnbmFtZSc6J05ldmFkYSd9LFxuICAgICc0MCcgOiB7J2NvZGUnOidOSCcsJ25hbWUnOidOZXcgSGFtcHNoaXJlJ30sXG4gICAgJzQxJyA6IHsnY29kZSc6J05KJywnbmFtZSc6J05ldyBKZXJzZXknfSxcbiAgICAnNDInIDogeydjb2RlJzonTk0nLCduYW1lJzonTmV3IE1leGljbyd9LFxuICAgICc0MycgOiB7J2NvZGUnOidOWScsJ25hbWUnOidOZXcgWW9yayd9LFxuICAgICc0NCcgOiB7J2NvZGUnOidOQycsJ25hbWUnOidOb3J0aCBDYXJvbGluYSd9LFxuICAgICc0NScgOiB7J2NvZGUnOidORCcsJ25hbWUnOidOb3J0aCBEYWtvdGEnfSxcbiAgICAnNDYnIDogeydjb2RlJzonTVAnLCduYW1lJzonTm9ydGhlcm4gTWFyaWFuYSBJc2xhbmRzJ30sXG4gICAgJzQ3JyA6IHsnY29kZSc6J09IJywnbmFtZSc6J09oaW8nfSxcbiAgICAnNDgnIDogeydjb2RlJzonT0snLCduYW1lJzonT2tsYWhvbWEnfSxcbiAgICAnNDknIDogeydjb2RlJzonT1InLCduYW1lJzonT3JlZ29uJ30sXG4gICAgJzUwJyA6IHsnY29kZSc6J1BXJywnbmFtZSc6J1BhbGF1J30sXG4gICAgJzUxJyA6IHsnY29kZSc6J1BBJywnbmFtZSc6J1Blbm5zeWx2YW5pYSd9LFxuICAgICc1MicgOiB7J2NvZGUnOidQUicsJ25hbWUnOidQdWVydG8gUmljbyd9LFxuICAgICc1MycgOiB7J2NvZGUnOidSSScsJ25hbWUnOidSaG9kZSBJc2xhbmQnfSxcbiAgICAnNTQnIDogeydjb2RlJzonU0MnLCduYW1lJzonU291dGggQ2Fyb2xpbmEnfSxcbiAgICAnNTUnIDogeydjb2RlJzonU0QnLCduYW1lJzonU291dGggRGFrb3RhJ30sXG4gICAgJzU2JyA6IHsnY29kZSc6J1ROJywnbmFtZSc6J1Rlbm5lc3NlZSd9LFxuICAgICc1NycgOiB7J2NvZGUnOidUWCcsJ25hbWUnOidUZXhhcyd9LFxuICAgICc1OCcgOiB7J2NvZGUnOidVVCcsJ25hbWUnOidVdGFoJ30sXG4gICAgJzU5JyA6IHsnY29kZSc6J1ZUJywnbmFtZSc6J1Zlcm1vbnQnfSxcbiAgICAnNjAnIDogeydjb2RlJzonVkknLCduYW1lJzonVmlyZ2luIElzbGFuZHMnfSxcbiAgICAnNjEnIDogeydjb2RlJzonVkEnLCduYW1lJzonVmlyZ2luaWEnfSxcbiAgICAnNjInIDogeydjb2RlJzonV0EnLCduYW1lJzonV2FzaGluZ3Rvbid9LFxuICAgICc2MycgOiB7J2NvZGUnOidXVicsJ25hbWUnOidXZXN0IFZpcmdpbmlhJ30sXG4gICAgJzY0JyA6IHsnY29kZSc6J1dJJywnbmFtZSc6J1dpc2NvbnNpbid9LFxuICAgICc2NScgOiB7J2NvZGUnOidXWScsJ25hbWUnOidXeW9taW5nJ31cbiAgfSxcbiAgJ1VNJzp7XG4gICAgJzEnIDogeydjb2RlJzonQkknLCduYW1lJzonQmFrZXIgSXNsYW5kJ30sXG4gICAgJzInIDogeydjb2RlJzonSEknLCduYW1lJzonSG93bGFuZCBJc2xhbmQnfSxcbiAgICAnMycgOiB7J2NvZGUnOidKSScsJ25hbWUnOidKYXJ2aXMgSXNsYW5kJ30sXG4gICAgJzQnIDogeydjb2RlJzonSkEnLCduYW1lJzonSm9obnN0b24gQXRvbGwnfSxcbiAgICAnNScgOiB7J2NvZGUnOidLUicsJ25hbWUnOidLaW5nbWFuIFJlZWYnfSxcbiAgICAnNicgOiB7J2NvZGUnOidNQScsJ25hbWUnOidNaWR3YXkgQXRvbGwnfSxcbiAgICAnNycgOiB7J2NvZGUnOidOSScsJ25hbWUnOidOYXZhc3NhIElzbGFuZCd9LFxuICAgICc4JyA6IHsnY29kZSc6J1BBJywnbmFtZSc6J1BhbG15cmEgQXRvbGwnfSxcbiAgICAnOScgOiB7J2NvZGUnOidXSScsJ25hbWUnOidXYWtlIElzbGFuZCd9XG4gIH0sXG4gICdVWSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FSJywnbmFtZSc6J0FydGlnYXMnfSxcbiAgICAnMicgOiB7J2NvZGUnOidDQScsJ25hbWUnOidDYW5lbG9uZXMnfSxcbiAgICAnMycgOiB7J2NvZGUnOidDTCcsJ25hbWUnOidDZXJybyBMYXJnbyd9LFxuICAgICc0JyA6IHsnY29kZSc6J0NPJywnbmFtZSc6J0NvbG9uaWEnfSxcbiAgICAnNScgOiB7J2NvZGUnOidEVScsJ25hbWUnOidEdXJhem5vJ30sXG4gICAgJzYnIDogeydjb2RlJzonRlMnLCduYW1lJzonRmxvcmVzJ30sXG4gICAgJzcnIDogeydjb2RlJzonRkEnLCduYW1lJzonRmxvcmlkYSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0xBJywnbmFtZSc6J0xhdmFsbGVqYSd9LFxuICAgICc5JyA6IHsnY29kZSc6J01BJywnbmFtZSc6J01hbGRvbmFkbyd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidNTycsJ25hbWUnOidNb250ZXZpZGVvJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1BBJywnbmFtZSc6J1BheXNhbmR1J30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1JOJywnbmFtZSc6J1JpbyBOZWdybyd9LFxuICAgICcxMycgOiB7J2NvZGUnOidSVicsJ25hbWUnOidSaXZlcmEnfSxcbiAgICAnMTQnIDogeydjb2RlJzonUk8nLCduYW1lJzonUm9jaGEnfSxcbiAgICAnMTUnIDogeydjb2RlJzonU0wnLCduYW1lJzonU2FsdG8nfSxcbiAgICAnMTYnIDogeydjb2RlJzonU0onLCduYW1lJzonU2FuIEpvc2UnfSxcbiAgICAnMTcnIDogeydjb2RlJzonU08nLCduYW1lJzonU29yaWFubyd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidUQScsJ25hbWUnOidUYWN1YXJlbWJvJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J1RUJywnbmFtZSc6J1RyZWludGEgeSBUcmVzJ31cbiAgfSxcbiAgJ1VaJzp7XG4gICAgJzEnIDogeydjb2RlJzonQU4nLCduYW1lJzonQW5kaWpvbid9LFxuICAgICcyJyA6IHsnY29kZSc6J0JVJywnbmFtZSc6J0J1eG9ybyd9LFxuICAgICczJyA6IHsnY29kZSc6J0ZBJywnbmFtZSc6J0ZhcmdcXCdvbmEnfSxcbiAgICAnNCcgOiB7J2NvZGUnOidKSScsJ25hbWUnOidKaXp6YXgnfSxcbiAgICAnNScgOiB7J2NvZGUnOidORycsJ25hbWUnOidOYW1hbmdhbid9LFxuICAgICc2JyA6IHsnY29kZSc6J05XJywnbmFtZSc6J05hdm9peSd9LFxuICAgICc3JyA6IHsnY29kZSc6J1FBJywnbmFtZSc6J1Fhc2hxYWRhcnlvJ30sXG4gICAgJzgnIDogeydjb2RlJzonUVInLCduYW1lJzonUW9yYXFhbHBvZ1xcJ2lzdG9uIFJlcHVibGlrYXNpJ30sXG4gICAgJzknIDogeydjb2RlJzonU0EnLCduYW1lJzonU2FtYXJxYW5kJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J1NJJywnbmFtZSc6J1NpcmRhcnlvJ30sXG4gICAgJzExJyA6IHsnY29kZSc6J1NVJywnbmFtZSc6J1N1cnhvbmRhcnlvJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J1RLJywnbmFtZSc6J1Rvc2hrZW50IENpdHknfSxcbiAgICAnMTMnIDogeydjb2RlJzonVE8nLCduYW1lJzonVG9zaGtlbnQgUmVnaW9uJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J1hPJywnbmFtZSc6J1hvcmF6bSd9XG4gIH0sXG4gICdWVSc6e1xuICAgICcxJyA6IHsnY29kZSc6J01BJywnbmFtZSc6J01hbGFtcGEnfSxcbiAgICAnMicgOiB7J2NvZGUnOidQRScsJ25hbWUnOidQZW5hbWEnfSxcbiAgICAnMycgOiB7J2NvZGUnOidTQScsJ25hbWUnOidTYW5tYSd9LFxuICAgICc0JyA6IHsnY29kZSc6J1NIJywnbmFtZSc6J1NoZWZhJ30sXG4gICAgJzUnIDogeydjb2RlJzonVEEnLCduYW1lJzonVGFmZWEnfSxcbiAgICAnNicgOiB7J2NvZGUnOidUTycsJ25hbWUnOidUb3JiYSd9XG4gIH0sXG4gICdWRSc6e1xuICAgICcxJyA6IHsnY29kZSc6J0FNJywnbmFtZSc6J0FtYXpvbmFzJ30sXG4gICAgJzInIDogeydjb2RlJzonQU4nLCduYW1lJzonQW56b2F0ZWd1aSd9LFxuICAgICczJyA6IHsnY29kZSc6J0FQJywnbmFtZSc6J0FwdXJlJ30sXG4gICAgJzQnIDogeydjb2RlJzonQVInLCduYW1lJzonQXJhZ3VhJ30sXG4gICAgJzUnIDogeydjb2RlJzonQkEnLCduYW1lJzonQmFyaW5hcyd9LFxuICAgICc2JyA6IHsnY29kZSc6J0JPJywnbmFtZSc6J0JvbGl2YXInfSxcbiAgICAnNycgOiB7J2NvZGUnOidDQScsJ25hbWUnOidDYXJhYm9ibyd9LFxuICAgICc4JyA6IHsnY29kZSc6J0NPJywnbmFtZSc6J0NvamVkZXMnfSxcbiAgICAnOScgOiB7J2NvZGUnOidEQScsJ25hbWUnOidEZWx0YSBBbWFjdXJvJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0RGJywnbmFtZSc6J0RlcGVuZGVuY2lhcyBGZWRlcmFsZXMnfSxcbiAgICAnMTEnIDogeydjb2RlJzonREknLCduYW1lJzonRGlzdHJpdG8gRmVkZXJhbCd9LFxuICAgICcxMicgOiB7J2NvZGUnOidGQScsJ25hbWUnOidGYWxjb24nfSxcbiAgICAnMTMnIDogeydjb2RlJzonR1UnLCduYW1lJzonR3Vhcmljbyd9LFxuICAgICcxNCcgOiB7J2NvZGUnOidMQScsJ25hbWUnOidMYXJhJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J01FJywnbmFtZSc6J01lcmlkYSd9LFxuICAgICcxNicgOiB7J2NvZGUnOidNSScsJ25hbWUnOidNaXJhbmRhJ30sXG4gICAgJzE3JyA6IHsnY29kZSc6J01PJywnbmFtZSc6J01vbmFnYXMnfSxcbiAgICAnMTgnIDogeydjb2RlJzonTkUnLCduYW1lJzonTnVldmEgRXNwYXJ0YSd9LFxuICAgICcxOScgOiB7J2NvZGUnOidQTycsJ25hbWUnOidQb3J0dWd1ZXNhJ30sXG4gICAgJzIwJyA6IHsnY29kZSc6J1NVJywnbmFtZSc6J1N1Y3JlJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J1RBJywnbmFtZSc6J1RhY2hpcmEnfSxcbiAgICAnMjInIDogeydjb2RlJzonVFInLCduYW1lJzonVHJ1amlsbG8nfSxcbiAgICAnMjMnIDogeydjb2RlJzonVkEnLCduYW1lJzonVmFyZ2FzJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J1lBJywnbmFtZSc6J1lhcmFjdXknfSxcbiAgICAnMjUnIDogeydjb2RlJzonWlUnLCduYW1lJzonWnVsaWEnfVxuICB9LFxuICAnVk4nOntcbiAgICAnMScgOiB7J2NvZGUnOidBRycsJ25hbWUnOidBbiBHaWFuZyd9LFxuICAgICcyJyA6IHsnY29kZSc6J0JHJywnbmFtZSc6J0JhYyBHaWFuZyd9LFxuICAgICczJyA6IHsnY29kZSc6J0JLJywnbmFtZSc6J0JhYyBLYW4nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidCTCcsJ25hbWUnOidCYWMgTGlldSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0JDJywnbmFtZSc6J0JhYyBOaW5oJ30sXG4gICAgJzYnIDogeydjb2RlJzonQlInLCduYW1lJzonQmEgUmlhLVZ1bmcgVGF1J30sXG4gICAgJzcnIDogeydjb2RlJzonQk4nLCduYW1lJzonQmVuIFRyZSd9LFxuICAgICc4JyA6IHsnY29kZSc6J0JIJywnbmFtZSc6J0JpbmggRGluaCd9LFxuICAgICc5JyA6IHsnY29kZSc6J0JVJywnbmFtZSc6J0JpbmggRHVvbmcnfSxcbiAgICAnMTAnIDogeydjb2RlJzonQlAnLCduYW1lJzonQmluaCBQaHVvYyd9LFxuICAgICcxMScgOiB7J2NvZGUnOidCVCcsJ25hbWUnOidCaW5oIFRodWFuJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0NNJywnbmFtZSc6J0NhIE1hdSd9LFxuICAgICcxMycgOiB7J2NvZGUnOidDVCcsJ25hbWUnOidDYW4gVGhvJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J0NCJywnbmFtZSc6J0NhbyBCYW5nJ30sXG4gICAgJzE1JyA6IHsnY29kZSc6J0RMJywnbmFtZSc6J0RhayBMYWsnfSxcbiAgICAnMTYnIDogeydjb2RlJzonREcnLCduYW1lJzonRGFrIE5vbmcnfSxcbiAgICAnMTcnIDogeydjb2RlJzonRE4nLCduYW1lJzonRGEgTmFuZyd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidEQicsJ25hbWUnOidEaWVuIEJpZW4nfSxcbiAgICAnMTknIDogeydjb2RlJzonREknLCduYW1lJzonRG9uZyBOYWknfSxcbiAgICAnMjAnIDogeydjb2RlJzonRFQnLCduYW1lJzonRG9uZyBUaGFwJ30sXG4gICAgJzIxJyA6IHsnY29kZSc6J0dMJywnbmFtZSc6J0dpYSBMYWknfSxcbiAgICAnMjInIDogeydjb2RlJzonSEcnLCduYW1lJzonSGEgR2lhbmcnfSxcbiAgICAnMjMnIDogeydjb2RlJzonSEQnLCduYW1lJzonSGFpIER1b25nJ30sXG4gICAgJzI0JyA6IHsnY29kZSc6J0hQJywnbmFtZSc6J0hhaSBQaG9uZyd9LFxuICAgICcyNScgOiB7J2NvZGUnOidITScsJ25hbWUnOidIYSBOYW0nfSxcbiAgICAnMjYnIDogeydjb2RlJzonSEknLCduYW1lJzonSGEgTm9pJ30sXG4gICAgJzI3JyA6IHsnY29kZSc6J0hUJywnbmFtZSc6J0hhIFRheSd9LFxuICAgICcyOCcgOiB7J2NvZGUnOidISCcsJ25hbWUnOidIYSBUaW5oJ30sXG4gICAgJzI5JyA6IHsnY29kZSc6J0hCJywnbmFtZSc6J0hvYSBCaW5oJ30sXG4gICAgJzMwJyA6IHsnY29kZSc6J0hDJywnbmFtZSc6J0hvIENoaW4gTWluaCd9LFxuICAgICczMScgOiB7J2NvZGUnOidIVScsJ25hbWUnOidIYXUgR2lhbmcnfSxcbiAgICAnMzInIDogeydjb2RlJzonSFknLCduYW1lJzonSHVuZyBZZW4nfVxuICB9LFxuICAnVkknOntcbiAgICAnMScgOiB7J2NvZGUnOidDJywnbmFtZSc6J1NhaW50IENyb2l4J30sXG4gICAgJzInIDogeydjb2RlJzonSicsJ25hbWUnOidTYWludCBKb2huJ30sXG4gICAgJzMnIDogeydjb2RlJzonVCcsJ25hbWUnOidTYWludCBUaG9tYXMnfVxuICB9LFxuICAnV0YnOntcbiAgICAnMScgOiB7J2NvZGUnOidBJywnbmFtZSc6J0Fsbyd9LFxuICAgICcyJyA6IHsnY29kZSc6J1MnLCduYW1lJzonU2lnYXZlJ30sXG4gICAgJzMnIDogeydjb2RlJzonVycsJ25hbWUnOidXYWxsaXMnfVxuICB9LFxuICAnWUUnOntcbiAgICAnMScgOiB7J2NvZGUnOidBQicsJ25hbWUnOidBYnlhbid9LFxuICAgICcyJyA6IHsnY29kZSc6J0FEJywnbmFtZSc6J0FkYW4nfSxcbiAgICAnMycgOiB7J2NvZGUnOidBTScsJ25hbWUnOidBbXJhbid9LFxuICAgICc0JyA6IHsnY29kZSc6J0JBJywnbmFtZSc6J0FsIEJheWRhJ30sXG4gICAgJzUnIDogeydjb2RlJzonREEnLCduYW1lJzonQWQgRGFsaSd9LFxuICAgICc2JyA6IHsnY29kZSc6J0RIJywnbmFtZSc6J0RoYW1hcid9LFxuICAgICc3JyA6IHsnY29kZSc6J0hEJywnbmFtZSc6J0hhZHJhbWF3dCd9LFxuICAgICc4JyA6IHsnY29kZSc6J0hKJywnbmFtZSc6J0hhamphaCd9LFxuICAgICc5JyA6IHsnY29kZSc6J0hVJywnbmFtZSc6J0FsIEh1ZGF5ZGFoJ30sXG4gICAgJzEwJyA6IHsnY29kZSc6J0lCJywnbmFtZSc6J0liYid9LFxuICAgICcxMScgOiB7J2NvZGUnOidKQScsJ25hbWUnOidBbCBKYXdmJ30sXG4gICAgJzEyJyA6IHsnY29kZSc6J0xBJywnbmFtZSc6J0xhaGlqJ30sXG4gICAgJzEzJyA6IHsnY29kZSc6J01BJywnbmFtZSc6J01hXFwncmliJ30sXG4gICAgJzE0JyA6IHsnY29kZSc6J01SJywnbmFtZSc6J0FsIE1haHJhaCd9LFxuICAgICcxNScgOiB7J2NvZGUnOidNVycsJ25hbWUnOidBbCBNYWh3aXQnfSxcbiAgICAnMTYnIDogeydjb2RlJzonU0QnLCduYW1lJzonU2FcXCdkYWgnfSxcbiAgICAnMTcnIDogeydjb2RlJzonU04nLCduYW1lJzonU2FuXFwnYSd9LFxuICAgICcxOCcgOiB7J2NvZGUnOidTSCcsJ25hbWUnOidTaGFid2FoJ30sXG4gICAgJzE5JyA6IHsnY29kZSc6J1RBJywnbmFtZSc6J1RhXFwnaXp6J31cbiAgfSxcbiAgJ1lVJzp7XG4gICAgJzEnIDogeydjb2RlJzonS09TJywnbmFtZSc6J0tvc292byd9LFxuICAgICcyJyA6IHsnY29kZSc6J01PTicsJ25hbWUnOidNb250ZW5lZ3JvJ30sXG4gICAgJzMnIDogeydjb2RlJzonU0VSJywnbmFtZSc6J1NlcmJpYSd9LFxuICAgICc0JyA6IHsnY29kZSc6J1ZPSicsJ25hbWUnOidWb2p2b2RpbmEnfVxuICB9LFxuICAnWlInOntcbiAgICAnMScgOiB7J2NvZGUnOidCQycsJ25hbWUnOidCYXMtQ29uZ28nfSxcbiAgICAnMicgOiB7J2NvZGUnOidCTicsJ25hbWUnOidCYW5kdW5kdSd9LFxuICAgICczJyA6IHsnY29kZSc6J0VRJywnbmFtZSc6J0VxdWF0ZXVyJ30sXG4gICAgJzQnIDogeydjb2RlJzonS0EnLCduYW1lJzonS2F0YW5nYSd9LFxuICAgICc1JyA6IHsnY29kZSc6J0tFJywnbmFtZSc6J0thc2FpLU9yaWVudGFsJ30sXG4gICAgJzYnIDogeydjb2RlJzonS04nLCduYW1lJzonS2luc2hhc2EnfSxcbiAgICAnNycgOiB7J2NvZGUnOidLVycsJ25hbWUnOidLYXNhaS1PY2NpZGVudGFsJ30sXG4gICAgJzgnIDogeydjb2RlJzonTUEnLCduYW1lJzonTWFuaWVtYSd9LFxuICAgICc5JyA6IHsnY29kZSc6J05LJywnbmFtZSc6J05vcmQtS2l2dSd9LFxuICAgICcxMCcgOiB7J2NvZGUnOidPUicsJ25hbWUnOidPcmllbnRhbGUnfSxcbiAgICAnMTEnIDogeydjb2RlJzonU0snLCduYW1lJzonU3VkLUtpdnUnfVxuICB9LFxuICAnWk0nOntcbiAgICAnMScgOiB7J2NvZGUnOidDRScsJ25hbWUnOidDZW50cmFsJ30sXG4gICAgJzInIDogeydjb2RlJzonQ0InLCduYW1lJzonQ29wcGVyYmVsdCd9LFxuICAgICczJyA6IHsnY29kZSc6J0VBJywnbmFtZSc6J0Vhc3Rlcm4nfSxcbiAgICAnNCcgOiB7J2NvZGUnOidMUCcsJ25hbWUnOidMdWFwdWxhJ30sXG4gICAgJzUnIDogeydjb2RlJzonTEsnLCduYW1lJzonTHVzYWthJ30sXG4gICAgJzYnIDogeydjb2RlJzonTk8nLCduYW1lJzonTm9ydGhlcm4nfSxcbiAgICAnNycgOiB7J2NvZGUnOidOVycsJ25hbWUnOidOb3J0aC1XZXN0ZXJuJ30sXG4gICAgJzgnIDogeydjb2RlJzonU08nLCduYW1lJzonU291dGhlcm4nfSxcbiAgICAnOScgOiB7J2NvZGUnOidXRScsJ25hbWUnOidXZXN0ZXJuJ31cbiAgfSxcbiAgJ1pXJzp7XG4gICAgJzEnIDogeydjb2RlJzonQlUnLCduYW1lJzonQnVsYXdheW8nfSxcbiAgICAnMicgOiB7J2NvZGUnOidIQScsJ25hbWUnOidIYXJhcmUnfSxcbiAgICAnMycgOiB7J2NvZGUnOidNTCcsJ25hbWUnOidNYW5pY2FsYW5kJ30sXG4gICAgJzQnIDogeydjb2RlJzonTUMnLCduYW1lJzonTWFzaG9uYWxhbmQgQ2VudHJhbCd9LFxuICAgICc1JyA6IHsnY29kZSc6J01FJywnbmFtZSc6J01hc2hvbmFsYW5kIEVhc3QnfSxcbiAgICAnNicgOiB7J2NvZGUnOidNVycsJ25hbWUnOidNYXNob25hbGFuZCBXZXN0J30sXG4gICAgJzcnIDogeydjb2RlJzonTVYnLCduYW1lJzonTWFzdmluZ28nfSxcbiAgICAnOCcgOiB7J2NvZGUnOidNTicsJ25hbWUnOidNYXRhYmVsZWxhbmQgTm9ydGgnfSxcbiAgICAnOScgOiB7J2NvZGUnOidNUycsJ25hbWUnOidNYXRhYmVsZWxhbmQgU291dGgnfSxcbiAgICAnMTAnIDogeydjb2RlJzonTUQnLCduYW1lJzonTWlkbGFuZHMnfVxuICB9XG59O1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBib290c3RyYXAtZm9ybWhlbHBlcnMtdGltZXBpY2tlci5lbl9VUy5qc1xuICogaHR0cHM6Ly9naXRodWIuY29tL3ZsYW1hbm5hL0Jvb3RzdHJhcEZvcm1IZWxwZXJzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMiBWaW5jZW50IExhbWFubmFcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbiBcbnZhciBCRkhUaW1lUGlja2VyRGVsaW1pdGVyID0gJzonO1xuXG52YXIgQkZIVGltZVBpY2tlck1vZGVzID0ge1xuICAnYW0nOiAnQU0nLFxuICAncG0nOiAnUE0nXG59O1xuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogYm9vdHN0cmFwLWZvcm1oZWxwZXJzLXRpbWV6b25lcy5lbl9VUy5qc1xuICogaHR0cHM6Ly9naXRodWIuY29tL3ZsYW1hbm5hL0Jvb3RzdHJhcEZvcm1IZWxwZXJzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMiBWaW5jZW50IExhbWFubmFcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbiBcbnZhciBCRkhUaW1lem9uZXNMaXN0ID0ge1xuICAnQUYnOiB7XG4gICAgJ0FzaWEvS2FidWwnOiAnS2FidWwnXG4gIH0sXG4gICdBTCc6IHtcbiAgICAnRXVyb3BlL1RpcmFuZSc6ICdUaXJhbmUnXG4gIH0sXG4gICdEWic6IHtcbiAgICAnQWZyaWNhL0FsZ2llcnMnOiAnQWxnaWVycydcbiAgfSxcbiAgJ0FTJzoge1xuICAgICdQYWNpZmljL1BhZ29fUGFnbyc6ICdQYWdvIFBhZ28nXG4gIH0sXG4gICdBRCc6IHtcbiAgICAnRXVyb3BlL0FuZG9ycmEnOiAnQW5kb3JyYSdcbiAgfSxcbiAgJ0FPJzoge1xuICAgICdBZnJpY2EvTHVhbmRhJzogJ0x1YW5kYSdcbiAgfSxcbiAgJ0FJJzoge1xuICAgICdBbWVyaWNhL0FuZ3VpbGxhJzogJ0FuZ3VpbGxhJ1xuICB9LFxuICAnQVEnOiB7XG4gICAgJ0FudGFyY3RpY2EvQ2FzZXknOiAnQ2FzZXknLFxuICAgICdBbnRhcmN0aWNhL0RhdmlzJzogJ0RhdmlzJyxcbiAgICAnQW50YXJjdGljYS9EdW1vbnREVXJ2aWxsZSc6ICdEdW1vbnREVXJ2aWxsZScsXG4gICAgJ0FudGFyY3RpY2EvTWFjcXVhcmllJzogJ01hY3F1YXJpZScsXG4gICAgJ0FudGFyY3RpY2EvTWF3c29uJzogJ01hd3NvbicsXG4gICAgJ0FudGFyY3RpY2EvTWNNdXJkbyc6ICdNY011cmRvJyxcbiAgICAnQW50YXJjdGljYS9QYWxtZXInOiAnUGFsbWVyJyxcbiAgICAnQW50YXJjdGljYS9Sb3RoZXJhJzogJ1JvdGhlcmEnLFxuICAgICdBbnRhcmN0aWNhL1NvdXRoX1BvbGUnOiAnU291dGggUG9sZScsXG4gICAgJ0FudGFyY3RpY2EvU3lvd2EnOiAnU3lvd2EnLFxuICAgICdBbnRhcmN0aWNhL1Zvc3Rvayc6ICdWb3N0b2snXG4gIH0sXG4gICdBRyc6IHtcbiAgICAnQW1lcmljYS9BbnRpZ3VhJzogJ0FudGlndWEnXG4gIH0sXG4gICdBUic6IHtcbiAgICAnQW1lcmljYS9BcmdlbnRpbmEvQnVlbm9zX0FpcmVzJzogJ0FyZ2VudGluYSAvIEJ1ZW5vcyBBaXJlcycsXG4gICAgJ0FtZXJpY2EvQXJnZW50aW5hL0NhdGFtYXJjYSc6ICdBcmdlbnRpbmEgLyBDYXRhbWFyY2EnLFxuICAgICdBbWVyaWNhL0FyZ2VudGluYS9Db3Jkb2JhJzogJ0FyZ2VudGluYSAvIENvcmRvYmEnLFxuICAgICdBbWVyaWNhL0FyZ2VudGluYS9KdWp1eSc6ICdBcmdlbnRpbmEgLyBKdWp1eScsXG4gICAgJ0FtZXJpY2EvQXJnZW50aW5hL0xhX1Jpb2phJzogJ0FyZ2VudGluYSAvIExhIFJpb2phJyxcbiAgICAnQW1lcmljYS9BcmdlbnRpbmEvTWVuZG96YSc6ICdBcmdlbnRpbmEgLyBNZW5kb3phJyxcbiAgICAnQW1lcmljYS9BcmdlbnRpbmEvUmlvX0dhbGxlZ29zJzogJ0FyZ2VudGluYSAvIFJpbyBHYWxsZWdvcycsXG4gICAgJ0FtZXJpY2EvQXJnZW50aW5hL1NhbHRhJzogJ0FyZ2VudGluYSAvIFNhbHRhJyxcbiAgICAnQW1lcmljYS9BcmdlbnRpbmEvU2FuX0p1YW4nOiAnQXJnZW50aW5hIC8gU2FuIEp1YW4nLFxuICAgICdBbWVyaWNhL0FyZ2VudGluYS9TYW5fTHVpcyc6ICdBcmdlbnRpbmEgLyBTYW4gTHVpcycsXG4gICAgJ0FtZXJpY2EvQXJnZW50aW5hL1R1Y3VtYW4nOiAnQXJnZW50aW5hIC8gVHVjdW1hbicsXG4gICAgJ0FtZXJpY2EvQXJnZW50aW5hL1VzaHVhaWEnOiAnQXJnZW50aW5hIC8gVXNodWFpYSdcbiAgfSxcbiAgJ0FNJzoge1xuICAgICdBc2lhL1llcmV2YW4nOiAnWWVyZXZhbidcbiAgfSxcbiAgJ0FXJzoge1xuICAgICdBbWVyaWNhL0FydWJhJzogJ0FydWJhJ1xuICB9LFxuICAnQVUnOiB7XG4gICAgJ0F1c3RyYWxpYS9BZGVsYWlkZSc6ICdBZGVsYWlkZScsXG4gICAgJ0F1c3RyYWxpYS9CcmlzYmFuZSc6ICdCcmlzYmFuZScsXG4gICAgJ0F1c3RyYWxpYS9Ccm9rZW5fSGlsbCc6ICdCcm9rZW4gSGlsbCcsXG4gICAgJ0F1c3RyYWxpYS9DdXJyaWUnOiAnQ3VycmllJyxcbiAgICAnQXVzdHJhbGlhL0Rhcndpbic6ICdEYXJ3aW4nLFxuICAgICdBdXN0cmFsaWEvRXVjbGEnOiAnRXVjbGEnLFxuICAgICdBdXN0cmFsaWEvSG9iYXJ0JzogJ0hvYmFydCcsXG4gICAgJ0F1c3RyYWxpYS9MaW5kZW1hbic6ICdMaW5kZW1hbicsXG4gICAgJ0F1c3RyYWxpYS9Mb3JkX0hvd2UnOiAnTG9yZCBIb3dlJyxcbiAgICAnQXVzdHJhbGlhL01lbGJvdXJuZSc6ICdNZWxib3VybmUnLFxuICAgICdBdXN0cmFsaWEvUGVydGgnOiAnUGVydGgnLFxuICAgICdBdXN0cmFsaWEvU3lkbmV5JzogJ1N5ZG5leSdcbiAgfSxcbiAgJ0FUJzoge1xuICAgICdFdXJvcGUvVmllbm5hJzogJ1ZpZW5uYSdcbiAgfSxcbiAgJ0FaJzoge1xuICAgICdBc2lhL0Jha3UnOiAnQmFrdSdcbiAgfSxcbiAgJ0JIJzoge1xuICAgICdBc2lhL0JhaHJhaW4nOiAnQmFocmFpbidcbiAgfSxcbiAgJ0JEJzoge1xuICAgICdBc2lhL0RoYWthJzogJ0RoYWthJ1xuICB9LFxuICAnQkInOiB7XG4gICAgJ0FtZXJpY2EvQmFyYmFkb3MnOiAnQmFyYmFkb3MnXG4gIH0sXG4gICdCWSc6IHtcbiAgICAnRXVyb3BlL01pbnNrJzogJ01pbnNrJ1xuICB9LFxuICAnQkUnOiB7XG4gICAgJ0V1cm9wZS9CcnVzc2Vscyc6ICdCcnVzc2VscydcbiAgfSxcbiAgJ0JaJzoge1xuICAgICdBbWVyaWNhL0JlbGl6ZSc6ICdCZWxpemUnXG4gIH0sXG4gICdCSic6IHtcbiAgICAnQWZyaWNhL1BvcnRvLU5vdm8nOiAnUG9ydG8tTm92bydcbiAgfSxcbiAgJ0JNJzoge1xuICAgICdBdGxhbnRpYy9CZXJtdWRhJzogJ0Jlcm11ZGEnXG4gIH0sXG4gICdCVCc6IHtcbiAgICAnQXNpYS9UaGltcGh1JzogJ1RoaW1waHUnXG4gIH0sXG4gICdCTyc6IHtcbiAgICAnQW1lcmljYS9MYV9QYXonOiAnTGEgUGF6J1xuICB9LFxuICAnQkEnOiB7XG4gICAgJ0V1cm9wZS9TYXJhamV2byc6ICdTYXJhamV2bydcbiAgfSxcbiAgJ0JXJzoge1xuICAgICdBZnJpY2EvR2Fib3JvbmUnOiAnR2Fib3JvbmUnXG4gIH0sXG4gICdCUic6IHtcbiAgICAnQW1lcmljYS9BcmFndWFpbmEnOiAnQXJhZ3VhaW5hJyxcbiAgICAnQW1lcmljYS9CYWhpYSc6ICdCYWhpYScsXG4gICAgJ0FtZXJpY2EvQmVsZW0nOiAnQmVsZW0nLFxuICAgICdBbWVyaWNhL0JvYV9WaXN0YSc6ICdCb2EgVmlzdGEnLFxuICAgICdBbWVyaWNhL0NhbXBvX0dyYW5kZSc6ICdDYW1wbyBHcmFuZGUnLFxuICAgICdBbWVyaWNhL0N1aWFiYSc6ICdDdWlhYmEnLFxuICAgICdBbWVyaWNhL0VpcnVuZXBlJzogJ0VpcnVuZXBlJyxcbiAgICAnQW1lcmljYS9Gb3J0YWxlemEnOiAnRm9ydGFsZXphJyxcbiAgICAnQW1lcmljYS9NYWNlaW8nOiAnTWFjZWlvJyxcbiAgICAnQW1lcmljYS9NYW5hdXMnOiAnTWFuYXVzJyxcbiAgICAnQW1lcmljYS9Ob3JvbmhhJzogJ05vcm9uaGEnLFxuICAgICdBbWVyaWNhL1BvcnRvX1ZlbGhvJzogJ1BvcnRvIFZlbGhvJyxcbiAgICAnQW1lcmljYS9SZWNpZmUnOiAnUmVjaWZlJyxcbiAgICAnQW1lcmljYS9SaW9fQnJhbmNvJzogJ1JpbyBCcmFuY28nLFxuICAgICdBbWVyaWNhL1NhbnRhcmVtJzogJ1NhbnRhcmVtJyxcbiAgICAnQW1lcmljYS9TYW9fUGF1bG8nOiAnU2FvIFBhdWxvJ1xuICB9LFxuICAnVkcnOiB7XG4gICAgJ0FtZXJpY2EvVG9ydG9sYSc6ICdUb3J0b2xhJ1xuICB9LFxuICAnQk4nOiB7XG4gICAgJ0FzaWEvQnJ1bmVpJzogJ0JydW5laSdcbiAgfSxcbiAgJ0JHJzoge1xuICAgICdFdXJvcGUvU29maWEnOiAnU29maWEnXG4gIH0sXG4gICdCRic6IHtcbiAgICAnQWZyaWNhL091YWdhZG91Z291JzogJ091YWdhZG91Z291J1xuICB9LFxuICAnQkknOiB7XG4gICAgJ0FmcmljYS9CdWp1bWJ1cmEnOiAnQnVqdW1idXJhJ1xuICB9LFxuICAnQ0knOiB7XG4gICAgJ0FmcmljYS9BYmlkamFuJzogJ0FiaWRqYW4nXG4gIH0sXG4gICdLSCc6IHtcbiAgICAnQXNpYS9QaG5vbV9QZW5oJzogJ1Bobm9tIFBlbmgnXG4gIH0sXG4gICdDTSc6IHtcbiAgICAnQWZyaWNhL0RvdWFsYSc6ICdEb3VhbGEnXG4gIH0sXG4gICdDQSc6IHtcbiAgICAnQW1lcmljYS9BdGlrb2thbic6ICdBdGlrb2thbicsXG4gICAgJ0FtZXJpY2EvQmxhbmMtU2FibG9uJzogJ0JsYW5jLVNhYmxvbicsXG4gICAgJ0FtZXJpY2EvQ2FtYnJpZGdlX0JheSc6ICdDYW1icmlkZ2UgQmF5JyxcbiAgICAnQW1lcmljYS9DcmVzdG9uJzogJ0NyZXN0b24nLFxuICAgICdBbWVyaWNhL0Rhd3Nvbic6ICdEYXdzb24nLFxuICAgICdBbWVyaWNhL0Rhd3Nvbl9DcmVlayc6ICdEYXdzb24gQ3JlZWsnLFxuICAgICdBbWVyaWNhL0VkbW9udG9uJzogJ0VkbW9udG9uJyxcbiAgICAnQW1lcmljYS9HbGFjZV9CYXknOiAnR2xhY2UgQmF5JyxcbiAgICAnQW1lcmljYS9Hb29zZV9CYXknOiAnR29vc2UgQmF5JyxcbiAgICAnQW1lcmljYS9IYWxpZmF4JzogJ0hhbGlmYXgnLFxuICAgICdBbWVyaWNhL0ludXZpayc6ICdJbnV2aWsnLFxuICAgICdBbWVyaWNhL0lxYWx1aXQnOiAnSXFhbHVpdCcsXG4gICAgJ0FtZXJpY2EvTW9uY3Rvbic6ICdNb25jdG9uJyxcbiAgICAnQW1lcmljYS9Nb250cmVhbCc6ICdNb250cmVhbCcsXG4gICAgJ0FtZXJpY2EvTmlwaWdvbic6ICdOaXBpZ29uJyxcbiAgICAnQW1lcmljYS9QYW5nbmlydHVuZyc6ICdQYW5nbmlydHVuZycsXG4gICAgJ0FtZXJpY2EvUmFpbnlfUml2ZXInOiAnUmFpbnkgUml2ZXInLFxuICAgICdBbWVyaWNhL1Jhbmtpbl9JbmxldCc6ICdSYW5raW4gSW5sZXQnLFxuICAgICdBbWVyaWNhL1JlZ2luYSc6ICdSZWdpbmEnLFxuICAgICdBbWVyaWNhL1Jlc29sdXRlJzogJ1Jlc29sdXRlJyxcbiAgICAnQW1lcmljYS9TdF9Kb2hucyc6ICdTdCBKb2hucycsXG4gICAgJ0FtZXJpY2EvU3dpZnRfQ3VycmVudCc6ICdTd2lmdCBDdXJyZW50JyxcbiAgICAnQW1lcmljYS9UaHVuZGVyX0JheSc6ICdUaHVuZGVyIEJheScsXG4gICAgJ0FtZXJpY2EvVG9yb250byc6ICdUb3JvbnRvJyxcbiAgICAnQW1lcmljYS9WYW5jb3V2ZXInOiAnVmFuY291dmVyJyxcbiAgICAnQW1lcmljYS9XaGl0ZWhvcnNlJzogJ1doaXRlaG9yc2UnLFxuICAgICdBbWVyaWNhL1dpbm5pcGVnJzogJ1dpbm5pcGVnJyxcbiAgICAnQW1lcmljYS9ZZWxsb3drbmlmZSc6ICdZZWxsb3drbmlmZSdcbiAgfSxcbiAgJ0NWJzoge1xuICAgICdBdGxhbnRpYy9DYXBlX1ZlcmRlJzogJ0NhcGUgVmVyZGUnXG4gIH0sXG4gICdLWSc6IHtcbiAgICAnQW1lcmljYS9DYXltYW4nOiAnQ2F5bWFuJ1xuICB9LFxuICAnQ0YnOiB7XG4gICAgJ0FmcmljYS9CYW5ndWknOiAnQmFuZ3VpJ1xuICB9LFxuICAnVEQnOiB7XG4gICAgJ0FmcmljYS9OZGphbWVuYSc6ICdOZGphbWVuYSdcbiAgfSxcbiAgJ0NMJzoge1xuICAgICdBbWVyaWNhL1NhbnRpYWdvJzogJ1NhbnRpYWdvJyxcbiAgICAnUGFjaWZpYy9FYXN0ZXInOiAnRWFzdGVyJ1xuICB9LFxuICAnQ04nOiB7XG4gICAgJ0FzaWEvQ2hvbmdxaW5nJzogJ0Nob25ncWluZycsXG4gICAgJ0FzaWEvSGFyYmluJzogJ0hhcmJpbicsXG4gICAgJ0FzaWEvS2FzaGdhcic6ICdLYXNoZ2FyJyxcbiAgICAnQXNpYS9TaGFuZ2hhaSc6ICdTaGFuZ2hhaScsXG4gICAgJ0FzaWEvVXJ1bXFpJzogJ1VydW1xaSdcbiAgfSxcbiAgJ0NPJzoge1xuICAgICdBbWVyaWNhL0JvZ290YSc6ICdCb2dvdGEnXG4gIH0sXG4gICdLTSc6IHtcbiAgICAnSW5kaWFuL0NvbW9ybyc6ICdDb21vcm8nXG4gIH0sXG4gICdDRyc6IHtcbiAgICAnQWZyaWNhL0JyYXp6YXZpbGxlJzogJ0JyYXp6YXZpbGxlJ1xuICB9LFxuICAnQ1InOiB7XG4gICAgJ0FtZXJpY2EvQ29zdGFfUmljYSc6ICdDb3N0YSBSaWNhJ1xuICB9LFxuICAnSFInOiB7XG4gICAgJ0V1cm9wZS9aYWdyZWInOiAnWmFncmViJ1xuICB9LFxuICAnQ1UnOiB7XG4gICAgJ0FtZXJpY2EvSGF2YW5hJzogJ0hhdmFuYSdcbiAgfSxcbiAgJ0NZJzoge1xuICAgICdBc2lhL05pY29zaWEnOiAnTmljb3NpYSdcbiAgfSxcbiAgJ0NaJzoge1xuICAgICdFdXJvcGUvUHJhZ3VlJzogJ1ByYWd1ZSdcbiAgfSxcbiAgJ0NEJzoge1xuICAgICdBZnJpY2EvS2luc2hhc2EnOiAnS2luc2hhc2EnLFxuICAgICdBZnJpY2EvTHVidW1iYXNoaSc6ICdMdWJ1bWJhc2hpJ1xuICB9LFxuICAnREsnOiB7XG4gICAgJ0V1cm9wZS9Db3BlbmhhZ2VuJzogJ0NvcGVuaGFnZW4nXG4gIH0sXG4gICdESic6IHtcbiAgICAnQWZyaWNhL0RqaWJvdXRpJzogJ0RqaWJvdXRpJ1xuICB9LFxuICAnRE0nOiB7XG4gICAgJ0FtZXJpY2EvRG9taW5pY2EnOiAnRG9taW5pY2EnXG4gIH0sXG4gICdETyc6IHtcbiAgICAnQW1lcmljYS9TYW50b19Eb21pbmdvJzogJ1NhbnRvIERvbWluZ28nXG4gIH0sXG4gICdUUCc6IHtcbiAgfSxcbiAgJ0VDJzoge1xuICAgICdBbWVyaWNhL0d1YXlhcXVpbCc6ICdHdWF5YXF1aWwnLFxuICAgICdQYWNpZmljL0dhbGFwYWdvcyc6ICdHYWxhcGFnb3MnXG4gIH0sXG4gICdFRyc6IHtcbiAgICAnQWZyaWNhL0NhaXJvJzogJ0NhaXJvJ1xuICB9LFxuICAnU1YnOiB7XG4gICAgJ0FtZXJpY2EvRWxfU2FsdmFkb3InOiAnRWwgU2FsdmFkb3InXG4gIH0sXG4gICdHUSc6IHtcbiAgICAnQWZyaWNhL01hbGFibyc6ICdNYWxhYm8nXG4gIH0sXG4gICdFUic6IHtcbiAgICAnQWZyaWNhL0FzbWFyYSc6ICdBc21hcmEnXG4gIH0sXG4gICdFRSc6IHtcbiAgICAnRXVyb3BlL1RhbGxpbm4nOiAnVGFsbGlubidcbiAgfSxcbiAgJ0VUJzoge1xuICAgICdBZnJpY2EvQWRkaXNfQWJhYmEnOiAnQWRkaXMgQWJhYmEnXG4gIH0sXG4gICdGTyc6IHtcbiAgICAnQXRsYW50aWMvRmFyb2UnOiAnRmFyb2UnXG4gIH0sXG4gICdGSyc6IHtcbiAgICAnQXRsYW50aWMvU3RhbmxleSc6ICdTdGFubGV5J1xuICB9LFxuICAnRkonOiB7XG4gICAgJ1BhY2lmaWMvRmlqaSc6ICdGaWppJ1xuICB9LFxuICAnRkknOiB7XG4gICAgJ0V1cm9wZS9IZWxzaW5raSc6ICdIZWxzaW5raSdcbiAgfSxcbiAgJ01LJzoge1xuICAgICdFdXJvcGUvU2tvcGplJzogJ1Nrb3BqZSdcbiAgfSxcbiAgJ0ZSJzoge1xuICAgICdFdXJvcGUvUGFyaXMnOiAnUGFyaXMnXG4gIH0sXG4gICdHQSc6IHtcbiAgICAnQWZyaWNhL0xpYnJldmlsbGUnOiAnTGlicmV2aWxsZSdcbiAgfSxcbiAgJ0dFJzoge1xuICAgICdBc2lhL1RiaWxpc2knOiAnVGJpbGlzaSdcbiAgfSxcbiAgJ0RFJzoge1xuICAgICdFdXJvcGUvQmVybGluJzogJ0JlcmxpbidcbiAgfSxcbiAgJ0dIJzoge1xuICAgICdBZnJpY2EvQWNjcmEnOiAnQWNjcmEnXG4gIH0sXG4gICdHUic6IHtcbiAgICAnRXVyb3BlL0F0aGVucyc6ICdBdGhlbnMnXG4gIH0sXG4gICdHTCc6IHtcbiAgICAnQW1lcmljYS9EYW5tYXJrc2hhdm4nOiAnRGFubWFya3NoYXZuJyxcbiAgICAnQW1lcmljYS9Hb2R0aGFiJzogJ0dvZHRoYWInLFxuICAgICdBbWVyaWNhL1Njb3Jlc2J5c3VuZCc6ICdTY29yZXNieXN1bmQnLFxuICAgICdBbWVyaWNhL1RodWxlJzogJ1RodWxlJ1xuICB9LFxuICAnR0QnOiB7XG4gICAgJ0FtZXJpY2EvR3JlbmFkYSc6ICdHcmVuYWRhJ1xuICB9LFxuICAnR1UnOiB7XG4gICAgJ1BhY2lmaWMvR3VhbSc6ICdHdWFtJ1xuICB9LFxuICAnR1QnOiB7XG4gICAgJ0FtZXJpY2EvR3VhdGVtYWxhJzogJ0d1YXRlbWFsYSdcbiAgfSxcbiAgJ0dOJzoge1xuICAgICdBZnJpY2EvQ29uYWtyeSc6ICdDb25ha3J5J1xuICB9LFxuICAnR1cnOiB7XG4gICAgJ0FmcmljYS9CaXNzYXUnOiAnQmlzc2F1J1xuICB9LFxuICAnR1knOiB7XG4gICAgJ0FtZXJpY2EvR3V5YW5hJzogJ0d1eWFuYSdcbiAgfSxcbiAgJ0hUJzoge1xuICAgICdBbWVyaWNhL1BvcnQtYXUtUHJpbmNlJzogJ1BvcnQtYXUtUHJpbmNlJ1xuICB9LFxuICAnSE4nOiB7XG4gICAgJ0FtZXJpY2EvVGVndWNpZ2FscGEnOiAnVGVndWNpZ2FscGEnXG4gIH0sXG4gICdISyc6IHtcbiAgICAnQXNpYS9Ib25nX0tvbmcnOiAnSG9uZyBLb25nJ1xuICB9LFxuICAnSFUnOiB7XG4gICAgJ0V1cm9wZS9CdWRhcGVzdCc6ICdCdWRhcGVzdCdcbiAgfSxcbiAgJ0lTJzoge1xuICAgICdBdGxhbnRpYy9SZXlramF2aWsnOiAnUmV5a2phdmlrJ1xuICB9LFxuICAnSU4nOiB7XG4gICAgJ0FzaWEvS29sa2F0YSc6ICdLb2xrYXRhJ1xuICB9LFxuICAnSUQnOiB7XG4gICAgJ0FzaWEvSmFrYXJ0YSc6ICdKYWthcnRhJyxcbiAgICAnQXNpYS9KYXlhcHVyYSc6ICdKYXlhcHVyYScsXG4gICAgJ0FzaWEvTWFrYXNzYXInOiAnTWFrYXNzYXInLFxuICAgICdBc2lhL1BvbnRpYW5hayc6ICdQb250aWFuYWsnXG4gIH0sXG4gICdJUic6IHtcbiAgICAnQXNpYS9UZWhyYW4nOiAnVGVocmFuJ1xuICB9LFxuICAnSVEnOiB7XG4gICAgJ0FzaWEvQmFnaGRhZCc6ICdCYWdoZGFkJ1xuICB9LFxuICAnSUUnOiB7XG4gICAgJ0V1cm9wZS9EdWJsaW4nOiAnRHVibGluJ1xuICB9LFxuICAnSUwnOiB7XG4gICAgJ0FzaWEvSmVydXNhbGVtJzogJ0plcnVzYWxlbSdcbiAgfSxcbiAgJ0lUJzoge1xuICAgICdFdXJvcGUvUm9tZSc6ICdSb21lJ1xuICB9LFxuICAnSk0nOiB7XG4gICAgJ0FtZXJpY2EvSmFtYWljYSc6ICdKYW1haWNhJ1xuICB9LFxuICAnSlAnOiB7XG4gICAgJ0FzaWEvVG9reW8nOiAnVG9reW8nXG4gIH0sXG4gICdKTyc6IHtcbiAgICAnQXNpYS9BbW1hbic6ICdBbW1hbidcbiAgfSxcbiAgJ0taJzoge1xuICAgICdBc2lhL0FsbWF0eSc6ICdBbG1hdHknLFxuICAgICdBc2lhL0FxdGF1JzogJ0FxdGF1JyxcbiAgICAnQXNpYS9BcXRvYmUnOiAnQXF0b2JlJyxcbiAgICAnQXNpYS9PcmFsJzogJ09yYWwnLFxuICAgICdBc2lhL1F5enlsb3JkYSc6ICdReXp5bG9yZGEnXG4gIH0sXG4gICdLRSc6IHtcbiAgICAnQWZyaWNhL05haXJvYmknOiAnTmFpcm9iaSdcbiAgfSxcbiAgJ0tJJzoge1xuICAgICdQYWNpZmljL0VuZGVyYnVyeSc6ICdFbmRlcmJ1cnknLFxuICAgICdQYWNpZmljL0tpcml0aW1hdGknOiAnS2lyaXRpbWF0aScsXG4gICAgJ1BhY2lmaWMvVGFyYXdhJzogJ1RhcmF3YSdcbiAgfSxcbiAgJ0tXJzoge1xuICAgICdBc2lhL0t1d2FpdCc6ICdLdXdhaXQnXG4gIH0sXG4gICdLRyc6IHtcbiAgICAnQXNpYS9CaXNoa2VrJzogJ0Jpc2hrZWsnXG4gIH0sXG4gICdMQSc6IHtcbiAgICAnQXNpYS9WaWVudGlhbmUnOiAnVmllbnRpYW5lJ1xuICB9LFxuICAnTFYnOiB7XG4gICAgJ0V1cm9wZS9SaWdhJzogJ1JpZ2EnXG4gIH0sXG4gICdMQic6IHtcbiAgICAnQXNpYS9CZWlydXQnOiAnQmVpcnV0J1xuICB9LFxuICAnTFMnOiB7XG4gICAgJ0FmcmljYS9NYXNlcnUnOiAnTWFzZXJ1J1xuICB9LFxuICAnTFInOiB7XG4gICAgJ0FmcmljYS9Nb25yb3ZpYSc6ICdNb25yb3ZpYSdcbiAgfSxcbiAgJ0xZJzoge1xuICAgICdBZnJpY2EvVHJpcG9saSc6ICdUcmlwb2xpJ1xuICB9LFxuICAnTEknOiB7XG4gICAgJ0V1cm9wZS9WYWR1eic6ICdWYWR1eidcbiAgfSxcbiAgJ0xUJzoge1xuICAgICdFdXJvcGUvVmlsbml1cyc6ICdWaWxuaXVzJ1xuICB9LFxuICAnTFUnOiB7XG4gICAgJ0V1cm9wZS9MdXhlbWJvdXJnJzogJ0x1eGVtYm91cmcnXG4gIH0sXG4gICdNTyc6IHtcbiAgICAnQXNpYS9NYWNhdSc6ICdNYWNhdSdcbiAgfSxcbiAgJ01HJzoge1xuICAgICdJbmRpYW4vQW50YW5hbmFyaXZvJzogJ0FudGFuYW5hcml2bydcbiAgfSxcbiAgJ01XJzoge1xuICAgICdBZnJpY2EvQmxhbnR5cmUnOiAnQmxhbnR5cmUnXG4gIH0sXG4gICdNWSc6IHtcbiAgICAnQXNpYS9LdWFsYV9MdW1wdXInOiAnS3VhbGEgTHVtcHVyJyxcbiAgICAnQXNpYS9LdWNoaW5nJzogJ0t1Y2hpbmcnXG4gIH0sXG4gICdNVic6IHtcbiAgICAnSW5kaWFuL01hbGRpdmVzJzogJ01hbGRpdmVzJ1xuICB9LFxuICAnTUwnOiB7XG4gICAgJ0FmcmljYS9CYW1ha28nOiAnQmFtYWtvJ1xuICB9LFxuICAnTVQnOiB7XG4gICAgJ0V1cm9wZS9NYWx0YSc6ICdNYWx0YSdcbiAgfSxcbiAgJ01IJzoge1xuICAgICdQYWNpZmljL0t3YWphbGVpbic6ICdLd2FqYWxlaW4nLFxuICAgICdQYWNpZmljL01hanVybyc6ICdNYWp1cm8nXG4gIH0sXG4gICdNUic6IHtcbiAgICAnQWZyaWNhL05vdWFrY2hvdHQnOiAnTm91YWtjaG90dCdcbiAgfSxcbiAgJ01VJzoge1xuICAgICdJbmRpYW4vTWF1cml0aXVzJzogJ01hdXJpdGl1cydcbiAgfSxcbiAgJ01YJzoge1xuICAgICdBbWVyaWNhL0JhaGlhX0JhbmRlcmFzJzogJ0JhaGlhIEJhbmRlcmFzJyxcbiAgICAnQW1lcmljYS9DYW5jdW4nOiAnQ2FuY3VuJyxcbiAgICAnQW1lcmljYS9DaGlodWFodWEnOiAnQ2hpaHVhaHVhJyxcbiAgICAnQW1lcmljYS9IZXJtb3NpbGxvJzogJ0hlcm1vc2lsbG8nLFxuICAgICdBbWVyaWNhL01hdGFtb3Jvcyc6ICdNYXRhbW9yb3MnLFxuICAgICdBbWVyaWNhL01hemF0bGFuJzogJ01hemF0bGFuJyxcbiAgICAnQW1lcmljYS9NZXJpZGEnOiAnTWVyaWRhJyxcbiAgICAnQW1lcmljYS9NZXhpY29fQ2l0eSc6ICdNZXhpY28gQ2l0eScsXG4gICAgJ0FtZXJpY2EvTW9udGVycmV5JzogJ01vbnRlcnJleScsXG4gICAgJ0FtZXJpY2EvT2ppbmFnYSc6ICdPamluYWdhJyxcbiAgICAnQW1lcmljYS9TYW50YV9Jc2FiZWwnOiAnU2FudGEgSXNhYmVsJyxcbiAgICAnQW1lcmljYS9UaWp1YW5hJzogJ1RpanVhbmEnXG4gIH0sXG4gICdGTSc6IHtcbiAgICAnUGFjaWZpYy9DaHV1ayc6ICdDaHV1aycsXG4gICAgJ1BhY2lmaWMvS29zcmFlJzogJ0tvc3JhZScsXG4gICAgJ1BhY2lmaWMvUG9obnBlaSc6ICdQb2hucGVpJ1xuICB9LFxuICAnTUQnOiB7XG4gICAgJ0V1cm9wZS9DaGlzaW5hdSc6ICdDaGlzaW5hdSdcbiAgfSxcbiAgJ01DJzoge1xuICAgICdFdXJvcGUvTW9uYWNvJzogJ01vbmFjbydcbiAgfSxcbiAgJ01OJzoge1xuICAgICdBc2lhL0Nob2liYWxzYW4nOiAnQ2hvaWJhbHNhbicsXG4gICAgJ0FzaWEvSG92ZCc6ICdIb3ZkJyxcbiAgICAnQXNpYS9VbGFhbmJhYXRhcic6ICdVbGFhbmJhYXRhcidcbiAgfSxcbiAgJ01FJzoge1xuICAgICdFdXJvcGUvUG9kZ29yaWNhJzogJ1BvZGdvcmljYSdcbiAgfSxcbiAgJ01TJzoge1xuICAgICdBbWVyaWNhL01vbnRzZXJyYXQnOiAnTW9udHNlcnJhdCdcbiAgfSxcbiAgJ01BJzoge1xuICAgICdBZnJpY2EvQ2FzYWJsYW5jYSc6ICdDYXNhYmxhbmNhJ1xuICB9LFxuICAnTVonOiB7XG4gICAgJ0FmcmljYS9NYXB1dG8nOiAnTWFwdXRvJ1xuICB9LFxuICAnTU0nOiB7XG4gICAgJ0FzaWEvUmFuZ29vbic6ICdSYW5nb29uJ1xuICB9LFxuICAnTkEnOiB7XG4gICAgJ0FmcmljYS9XaW5kaG9layc6ICdXaW5kaG9laydcbiAgfSxcbiAgJ05SJzoge1xuICAgICdQYWNpZmljL05hdXJ1JzogJ05hdXJ1J1xuICB9LFxuICAnTlAnOiB7XG4gICAgJ0FzaWEvS2F0aG1hbmR1JzogJ0thdGhtYW5kdSdcbiAgfSxcbiAgJ05MJzoge1xuICAgICdFdXJvcGUvQW1zdGVyZGFtJzogJ0Ftc3RlcmRhbSdcbiAgfSxcbiAgJ0FOJzoge1xuICB9LFxuICAnTlonOiB7XG4gICAgJ1BhY2lmaWMvQXVja2xhbmQnOiAnQXVja2xhbmQnLFxuICAgICdQYWNpZmljL0NoYXRoYW0nOiAnQ2hhdGhhbSdcbiAgfSxcbiAgJ05JJzoge1xuICAgICdBbWVyaWNhL01hbmFndWEnOiAnTWFuYWd1YSdcbiAgfSxcbiAgJ05FJzoge1xuICAgICdBZnJpY2EvTmlhbWV5JzogJ05pYW1leSdcbiAgfSxcbiAgJ05HJzoge1xuICAgICdBZnJpY2EvTGFnb3MnOiAnTGFnb3MnXG4gIH0sXG4gICdORic6IHtcbiAgICAnUGFjaWZpYy9Ob3Jmb2xrJzogJ05vcmZvbGsnXG4gIH0sXG4gICdLUCc6IHtcbiAgICAnQXNpYS9QeW9uZ3lhbmcnOiAnUHlvbmd5YW5nJ1xuICB9LFxuICAnTVAnOiB7XG4gICAgJ1BhY2lmaWMvU2FpcGFuJzogJ1NhaXBhbidcbiAgfSxcbiAgJ05PJzoge1xuICAgICdFdXJvcGUvT3Nsbyc6ICdPc2xvJ1xuICB9LFxuICAnT00nOiB7XG4gICAgJ0FzaWEvTXVzY2F0JzogJ011c2NhdCdcbiAgfSxcbiAgJ1BLJzoge1xuICAgICdBc2lhL0thcmFjaGknOiAnS2FyYWNoaSdcbiAgfSxcbiAgJ1BXJzoge1xuICAgICdQYWNpZmljL1BhbGF1JzogJ1BhbGF1J1xuICB9LFxuICAnUEEnOiB7XG4gICAgJ0FtZXJpY2EvUGFuYW1hJzogJ1BhbmFtYSdcbiAgfSxcbiAgJ1BHJzoge1xuICAgICdQYWNpZmljL1BvcnRfTW9yZXNieSc6ICdQb3J0IE1vcmVzYnknXG4gIH0sXG4gICdQWSc6IHtcbiAgICAnQW1lcmljYS9Bc3VuY2lvbic6ICdBc3VuY2lvbidcbiAgfSxcbiAgJ1BFJzoge1xuICAgICdBbWVyaWNhL0xpbWEnOiAnTGltYSdcbiAgfSxcbiAgJ1BIJzoge1xuICAgICdBc2lhL01hbmlsYSc6ICdNYW5pbGEnXG4gIH0sXG4gICdQTic6IHtcbiAgICAnUGFjaWZpYy9QaXRjYWlybic6ICdQaXRjYWlybidcbiAgfSxcbiAgJ1BMJzoge1xuICAgICdFdXJvcGUvV2Fyc2F3JzogJ1dhcnNhdydcbiAgfSxcbiAgJ1BUJzoge1xuICAgICdBdGxhbnRpYy9Bem9yZXMnOiAnQXpvcmVzJyxcbiAgICAnQXRsYW50aWMvTWFkZWlyYSc6ICdNYWRlaXJhJyxcbiAgICAnRXVyb3BlL0xpc2Jvbic6ICdMaXNib24nXG4gIH0sXG4gICdQUic6IHtcbiAgICAnQW1lcmljYS9QdWVydG9fUmljbyc6ICdQdWVydG8gUmljbydcbiAgfSxcbiAgJ1FBJzoge1xuICAgICdBc2lhL1FhdGFyJzogJ1FhdGFyJ1xuICB9LFxuICAnUk8nOiB7XG4gICAgJ0V1cm9wZS9CdWNoYXJlc3QnOiAnQnVjaGFyZXN0J1xuICB9LFxuICAnUlUnOiB7XG4gICAgJ0FzaWEvQW5hZHlyJzogJ0FuYWR5cicsXG4gICAgJ0FzaWEvSXJrdXRzayc6ICdJcmt1dHNrJyxcbiAgICAnQXNpYS9LYW1jaGF0a2EnOiAnS2FtY2hhdGthJyxcbiAgICAnQXNpYS9LcmFzbm95YXJzayc6ICdLcmFzbm95YXJzaycsXG4gICAgJ0FzaWEvTWFnYWRhbic6ICdNYWdhZGFuJyxcbiAgICAnQXNpYS9Ob3Zva3V6bmV0c2snOiAnTm92b2t1em5ldHNrJyxcbiAgICAnQXNpYS9Ob3Zvc2liaXJzayc6ICdOb3Zvc2liaXJzaycsXG4gICAgJ0FzaWEvT21zayc6ICdPbXNrJyxcbiAgICAnQXNpYS9TYWtoYWxpbic6ICdTYWtoYWxpbicsXG4gICAgJ0FzaWEvVmxhZGl2b3N0b2snOiAnVmxhZGl2b3N0b2snLFxuICAgICdBc2lhL1lha3V0c2snOiAnWWFrdXRzaycsXG4gICAgJ0FzaWEvWWVrYXRlcmluYnVyZyc6ICdZZWthdGVyaW5idXJnJyxcbiAgICAnRXVyb3BlL0thbGluaW5ncmFkJzogJ0thbGluaW5ncmFkJyxcbiAgICAnRXVyb3BlL01vc2Nvdyc6ICdNb3Njb3cnLFxuICAgICdFdXJvcGUvU2FtYXJhJzogJ1NhbWFyYScsXG4gICAgJ0V1cm9wZS9Wb2xnb2dyYWQnOiAnVm9sZ29ncmFkJ1xuICB9LFxuICAnUlcnOiB7XG4gICAgJ0FmcmljYS9LaWdhbGknOiAnS2lnYWxpJ1xuICB9LFxuICAnU1QnOiB7XG4gICAgJ0FmcmljYS9TYW9fVG9tZSc6ICdTYW8gVG9tZSdcbiAgfSxcbiAgJ1NIJzoge1xuICAgICdBdGxhbnRpYy9TdF9IZWxlbmEnOiAnU3QgSGVsZW5hJ1xuICB9LFxuICAnS04nOiB7XG4gICAgJ0FtZXJpY2EvU3RfS2l0dHMnOiAnU3QgS2l0dHMnXG4gIH0sXG4gICdMQyc6IHtcbiAgICAnQW1lcmljYS9TdF9MdWNpYSc6ICdTdCBMdWNpYSdcbiAgfSxcbiAgJ1ZDJzoge1xuICAgICdBbWVyaWNhL1N0X1ZpbmNlbnQnOiAnU3QgVmluY2VudCdcbiAgfSxcbiAgJ1dTJzoge1xuICAgICdQYWNpZmljL0FwaWEnOiAnQXBpYSdcbiAgfSxcbiAgJ1NNJzoge1xuICAgICdFdXJvcGUvU2FuX01hcmlubyc6ICdTYW4gTWFyaW5vJ1xuICB9LFxuICAnU0EnOiB7XG4gICAgJ0FzaWEvUml5YWRoJzogJ1JpeWFkaCdcbiAgfSxcbiAgJ1NOJzoge1xuICAgICdBZnJpY2EvRGFrYXInOiAnRGFrYXInXG4gIH0sXG4gICdSUyc6IHtcbiAgICAnRXVyb3BlL0JlbGdyYWRlJzogJ0JlbGdyYWRlJ1xuICB9LFxuICAnU0MnOiB7XG4gICAgJ0luZGlhbi9NYWhlJzogJ01haGUnXG4gIH0sXG4gICdTTCc6IHtcbiAgICAnQWZyaWNhL0ZyZWV0b3duJzogJ0ZyZWV0b3duJ1xuICB9LFxuICAnU0cnOiB7XG4gICAgJ0FzaWEvU2luZ2Fwb3JlJzogJ1NpbmdhcG9yZSdcbiAgfSxcbiAgJ1NLJzoge1xuICAgICdFdXJvcGUvQnJhdGlzbGF2YSc6ICdCcmF0aXNsYXZhJ1xuICB9LFxuICAnU0knOiB7XG4gICAgJ0V1cm9wZS9ManVibGphbmEnOiAnTGp1YmxqYW5hJ1xuICB9LFxuICAnU0InOiB7XG4gICAgJ1BhY2lmaWMvR3VhZGFsY2FuYWwnOiAnR3VhZGFsY2FuYWwnXG4gIH0sXG4gICdTTyc6IHtcbiAgICAnQWZyaWNhL01vZ2FkaXNodSc6ICdNb2dhZGlzaHUnXG4gIH0sXG4gICdaQSc6IHtcbiAgICAnQWZyaWNhL0pvaGFubmVzYnVyZyc6ICdKb2hhbm5lc2J1cmcnXG4gIH0sXG4gICdHUyc6IHtcbiAgICAnQXRsYW50aWMvU291dGhfR2VvcmdpYSc6ICdTb3V0aCBHZW9yZ2lhJ1xuICB9LFxuICAnS1InOiB7XG4gICAgJ0FzaWEvU2VvdWwnOiAnU2VvdWwnXG4gIH0sXG4gICdFUyc6IHtcbiAgICAnQWZyaWNhL0NldXRhJzogJ0NldXRhJyxcbiAgICAnQXRsYW50aWMvQ2FuYXJ5JzogJ0NhbmFyeScsXG4gICAgJ0V1cm9wZS9NYWRyaWQnOiAnTWFkcmlkJ1xuICB9LFxuICAnTEsnOiB7XG4gICAgJ0FzaWEvQ29sb21ibyc6ICdDb2xvbWJvJ1xuICB9LFxuICAnU0QnOiB7XG4gICAgJ0FmcmljYS9LaGFydG91bSc6ICdLaGFydG91bSdcbiAgfSxcbiAgJ1NSJzoge1xuICAgICdBbWVyaWNhL1BhcmFtYXJpYm8nOiAnUGFyYW1hcmlibydcbiAgfSxcbiAgJ1NaJzoge1xuICAgICdBZnJpY2EvTWJhYmFuZSc6ICdNYmFiYW5lJ1xuICB9LFxuICAnU0UnOiB7XG4gICAgJ0V1cm9wZS9TdG9ja2hvbG0nOiAnU3RvY2tob2xtJ1xuICB9LFxuICAnQ0gnOiB7XG4gICAgJ0V1cm9wZS9adXJpY2gnOiAnWnVyaWNoJ1xuICB9LFxuICAnU1knOiB7XG4gICAgJ0FzaWEvRGFtYXNjdXMnOiAnRGFtYXNjdXMnXG4gIH0sXG4gICdUVyc6IHtcbiAgICAnQXNpYS9UYWlwZWknOiAnVGFpcGVpJ1xuICB9LFxuICAnVEonOiB7XG4gICAgJ0FzaWEvRHVzaGFuYmUnOiAnRHVzaGFuYmUnXG4gIH0sXG4gICdUWic6IHtcbiAgICAnQWZyaWNhL0Rhcl9lc19TYWxhYW0nOiAnRGFyIGVzIFNhbGFhbSdcbiAgfSxcbiAgJ1RIJzoge1xuICAgICdBc2lhL0Jhbmdrb2snOiAnQmFuZ2tvaydcbiAgfSxcbiAgJ0JTJzoge1xuICAgICdBbWVyaWNhL05hc3NhdSc6ICdOYXNzYXUnXG4gIH0sXG4gICdHTSc6IHtcbiAgICAnQWZyaWNhL0Jhbmp1bCc6ICdCYW5qdWwnXG4gIH0sXG4gICdURyc6IHtcbiAgICAnQWZyaWNhL0xvbWUnOiAnTG9tZSdcbiAgfSxcbiAgJ1RPJzoge1xuICAgICdQYWNpZmljL1RvbmdhdGFwdSc6ICdUb25nYXRhcHUnXG4gIH0sXG4gICdUVCc6IHtcbiAgICAnQW1lcmljYS9Qb3J0X29mX1NwYWluJzogJ1BvcnQgb2YgU3BhaW4nXG4gIH0sXG4gICdUTic6IHtcbiAgICAnQWZyaWNhL1R1bmlzJzogJ1R1bmlzJ1xuICB9LFxuICAnVFInOiB7XG4gICAgJ0V1cm9wZS9Jc3RhbmJ1bCc6ICdJc3RhbmJ1bCdcbiAgfSxcbiAgJ1RNJzoge1xuICAgICdBc2lhL0FzaGdhYmF0JzogJ0FzaGdhYmF0J1xuICB9LFxuICAnVEMnOiB7XG4gICAgJ0FtZXJpY2EvR3JhbmRfVHVyayc6ICdHcmFuZCBUdXJrJ1xuICB9LFxuICAnVFYnOiB7XG4gICAgJ1BhY2lmaWMvRnVuYWZ1dGknOiAnRnVuYWZ1dGknXG4gIH0sXG4gICdWSSc6IHtcbiAgICAnQW1lcmljYS9TdF9UaG9tYXMnOiAnU3QgVGhvbWFzJ1xuICB9LFxuICAnVUcnOiB7XG4gICAgJ0FmcmljYS9LYW1wYWxhJzogJ0thbXBhbGEnXG4gIH0sXG4gICdVQSc6IHtcbiAgICAnRXVyb3BlL0tpZXYnOiAnS2lldicsXG4gICAgJ0V1cm9wZS9TaW1mZXJvcG9sJzogJ1NpbWZlcm9wb2wnLFxuICAgICdFdXJvcGUvVXpoZ29yb2QnOiAnVXpoZ29yb2QnLFxuICAgICdFdXJvcGUvWmFwb3Jvemh5ZSc6ICdaYXBvcm96aHllJ1xuICB9LFxuICAnQUUnOiB7XG4gICAgJ0FzaWEvRHViYWknOiAnRHViYWknXG4gIH0sXG4gICdHQic6IHtcbiAgICAnRXVyb3BlL0xvbmRvbic6ICdMb25kb24nXG4gIH0sXG4gICdVUyc6IHtcbiAgICAnQW1lcmljYS9BZGFrJzogJ0FkYWsnLFxuICAgICdBbWVyaWNhL0FuY2hvcmFnZSc6ICdBbmNob3JhZ2UnLFxuICAgICdBbWVyaWNhL0JvaXNlJzogJ0JvaXNlJyxcbiAgICAnQW1lcmljYS9DaGljYWdvJzogJ0NoaWNhZ28nLFxuICAgICdBbWVyaWNhL0RlbnZlcic6ICdEZW52ZXInLFxuICAgICdBbWVyaWNhL0RldHJvaXQnOiAnRGV0cm9pdCcsXG4gICAgJ0FtZXJpY2EvSW5kaWFuYS9JbmRpYW5hcG9saXMnOiAnSW5kaWFuYSAvIEluZGlhbmFwb2xpcycsXG4gICAgJ0FtZXJpY2EvSW5kaWFuYS9Lbm94JzogJ0luZGlhbmEgLyBLbm94JyxcbiAgICAnQW1lcmljYS9JbmRpYW5hL01hcmVuZ28nOiAnSW5kaWFuYSAvIE1hcmVuZ28nLFxuICAgICdBbWVyaWNhL0luZGlhbmEvUGV0ZXJzYnVyZyc6ICdJbmRpYW5hIC8gUGV0ZXJzYnVyZycsXG4gICAgJ0FtZXJpY2EvSW5kaWFuYS9UZWxsX0NpdHknOiAnSW5kaWFuYSAvIFRlbGwgQ2l0eScsXG4gICAgJ0FtZXJpY2EvSW5kaWFuYS9WZXZheSc6ICdJbmRpYW5hIC8gVmV2YXknLFxuICAgICdBbWVyaWNhL0luZGlhbmEvVmluY2VubmVzJzogJ0luZGlhbmEgLyBWaW5jZW5uZXMnLFxuICAgICdBbWVyaWNhL0luZGlhbmEvV2luYW1hYyc6ICdJbmRpYW5hIC8gV2luYW1hYycsXG4gICAgJ0FtZXJpY2EvSnVuZWF1JzogJ0p1bmVhdScsXG4gICAgJ0FtZXJpY2EvS2VudHVja3kvTG91aXN2aWxsZSc6ICdLZW50dWNreSAvIExvdWlzdmlsbGUnLFxuICAgICdBbWVyaWNhL0tlbnR1Y2t5L01vbnRpY2VsbG8nOiAnS2VudHVja3kgLyBNb250aWNlbGxvJyxcbiAgICAnQW1lcmljYS9Mb3NfQW5nZWxlcyc6ICdMb3MgQW5nZWxlcycsXG4gICAgJ0FtZXJpY2EvTWVub21pbmVlJzogJ01lbm9taW5lZScsXG4gICAgJ0FtZXJpY2EvTWV0bGFrYXRsYSc6ICdNZXRsYWthdGxhJyxcbiAgICAnQW1lcmljYS9OZXdfWW9yayc6ICdOZXcgWW9yaycsXG4gICAgJ0FtZXJpY2EvTm9tZSc6ICdOb21lJyxcbiAgICAnQW1lcmljYS9Ob3J0aF9EYWtvdGEvQmV1bGFoJzogJ05vcnRoIERha290YSAvIEJldWxhaCcsXG4gICAgJ0FtZXJpY2EvTm9ydGhfRGFrb3RhL0NlbnRlcic6ICdOb3J0aCBEYWtvdGEgLyBDZW50ZXInLFxuICAgICdBbWVyaWNhL05vcnRoX0Rha290YS9OZXdfU2FsZW0nOiAnTm9ydGggRGFrb3RhIC8gTmV3IFNhbGVtJyxcbiAgICAnQW1lcmljYS9QaG9lbml4JzogJ1Bob2VuaXgnLFxuICAgICdBbWVyaWNhL1NoaXByb2NrJzogJ1NoaXByb2NrJyxcbiAgICAnQW1lcmljYS9TaXRrYSc6ICdTaXRrYScsXG4gICAgJ0FtZXJpY2EvWWFrdXRhdCc6ICdZYWt1dGF0JyxcbiAgICAnUGFjaWZpYy9Ib25vbHVsdSc6ICdIb25vbHVsdSdcbiAgfSxcbiAgJ1VZJzoge1xuICAgICdBbWVyaWNhL01vbnRldmlkZW8nOiAnTW9udGV2aWRlbydcbiAgfSxcbiAgJ1VaJzoge1xuICAgICdBc2lhL1NhbWFya2FuZCc6ICdTYW1hcmthbmQnLFxuICAgICdBc2lhL1Rhc2hrZW50JzogJ1Rhc2hrZW50J1xuICB9LFxuICAnVlUnOiB7XG4gICAgJ1BhY2lmaWMvRWZhdGUnOiAnRWZhdGUnXG4gIH0sXG4gICdWQSc6IHtcbiAgICAnRXVyb3BlL1ZhdGljYW4nOiAnVmF0aWNhbidcbiAgfSxcbiAgJ1ZFJzoge1xuICAgICdBbWVyaWNhL0NhcmFjYXMnOiAnQ2FyYWNhcydcbiAgfSxcbiAgJ1ZOJzoge1xuICAgICdBc2lhL0hvX0NoaV9NaW5oJzogJ0hvIENoaSBNaW5oJ1xuICB9LFxuICAnRUgnOiB7XG4gICAgJ0FmcmljYS9FbF9BYWl1bic6ICdFbCBBYWl1bidcbiAgfSxcbiAgJ1lFJzoge1xuICAgICdBc2lhL0FkZW4nOiAnQWRlbidcbiAgfSxcbiAgJ1pNJzoge1xuICAgICdBZnJpY2EvTHVzYWthJzogJ0x1c2FrYSdcbiAgfSxcbiAgJ1pXJzoge1xuICAgICdBZnJpY2EvSGFyYXJlJzogJ0hhcmFyZSdcbiAgfVxufTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogYm9vdHN0cmFwLWZvcm1oZWxwZXJzLWNvbG9ycGlja2VyLmpzXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdmxhbWFubmEvQm9vdHN0cmFwRm9ybUhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDEyIFZpbmNlbnQgTGFtYW5uYVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuIFxuIFxuK2Z1bmN0aW9uICgkKSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuICBcbiAgXG4gIC8qIENPTE9SUElDS0VSIENMQVNTIERFRklOSVRJT05cbiAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgdmFyIHRvZ2dsZSA9ICdbZGF0YS10b2dnbGU9YmZoLWNvbG9ycGlja2VyXScsXG4gICAgICBCRkhDb2xvclBpY2tlciA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCAkLmZuLmJmaGNvbG9ycGlja2VyLmRlZmF1bHRzLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy4kZWxlbWVudCA9ICQoZWxlbWVudCk7XG5cbiAgICAgICAgdGhpcy5pbml0UG9wb3ZlcigpO1xuICAgICAgfTtcblxuICBCRkhDb2xvclBpY2tlci5wcm90b3R5cGUgPSB7XG5cbiAgICBjb25zdHJ1Y3RvcjogQkZIQ29sb3JQaWNrZXIsXG5cbiAgICBpbml0UGFsZXR0ZTogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgJGNhbnZhcyxcbiAgICAgICAgICBjb250ZXh0LFxuICAgICAgICAgIGdyYWRpZW50O1xuICAgICAgICAgIFxuICAgICAgJGNhbnZhcyA9IHRoaXMuJGVsZW1lbnQuZmluZCgnY2FudmFzJyk7XG4gICAgICBjb250ZXh0ID0gJGNhbnZhc1swXS5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgXG4gICAgICBncmFkaWVudCA9IGNvbnRleHQuY3JlYXRlTGluZWFyR3JhZGllbnQoMCwgMCwgJGNhbnZhcy53aWR0aCgpLCAwKTtcbiAgICAgIFxuICAgICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKDAsICAgICdyZ2IoMjU1LCAyNTUsIDI1NSknKTtcbiAgICAgIGdyYWRpZW50LmFkZENvbG9yU3RvcCgwLjEsICAncmdiKDI1NSwgICAwLCAgIDApJyk7XG4gICAgICBncmFkaWVudC5hZGRDb2xvclN0b3AoMC4yNSwgJ3JnYigyNTUsICAgMCwgMjU1KScpO1xuICAgICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKDAuNCwgICdyZ2IoMCwgICAgIDAsIDI1NSknKTtcbiAgICAgIGdyYWRpZW50LmFkZENvbG9yU3RvcCgwLjU1LCAncmdiKDAsICAgMjU1LCAyNTUpJyk7XG4gICAgICBncmFkaWVudC5hZGRDb2xvclN0b3AoMC43LCAgJ3JnYigwLCAgIDI1NSwgICAwKScpO1xuICAgICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKDAuODUsICdyZ2IoMjU1LCAyNTUsICAgMCknKTtcbiAgICAgIGdyYWRpZW50LmFkZENvbG9yU3RvcCgxLCAgICAncmdiKDI1NSwgICAwLCAgIDApJyk7XG4gICAgICBcbiAgICAgIGNvbnRleHQuZmlsbFN0eWxlID0gZ3JhZGllbnQ7XG4gICAgICBjb250ZXh0LmZpbGxSZWN0KDAsIDAsIGNvbnRleHQuY2FudmFzLndpZHRoLCBjb250ZXh0LmNhbnZhcy5oZWlnaHQpO1xuICAgICAgXG4gICAgICBncmFkaWVudCA9IGNvbnRleHQuY3JlYXRlTGluZWFyR3JhZGllbnQoMCwgMCwgMCwgJGNhbnZhcy5oZWlnaHQoKSk7XG4gICAgICBncmFkaWVudC5hZGRDb2xvclN0b3AoMCwgICAncmdiYSgyNTUsIDI1NSwgMjU1LCAxKScpO1xuICAgICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKDAuNSwgJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMCknKTtcbiAgICAgIGdyYWRpZW50LmFkZENvbG9yU3RvcCgwLjUsICdyZ2JhKDAsICAgICAwLCAgIDAsIDApJyk7XG4gICAgICBncmFkaWVudC5hZGRDb2xvclN0b3AoMSwgICAncmdiYSgwLCAgICAgMCwgICAwLCAxKScpO1xuICAgICAgXG4gICAgICBjb250ZXh0LmZpbGxTdHlsZSA9IGdyYWRpZW50O1xuICAgICAgY29udGV4dC5maWxsUmVjdCgwLCAwLCBjb250ZXh0LmNhbnZhcy53aWR0aCwgY29udGV4dC5jYW52YXMuaGVpZ2h0KTtcbiAgICB9LFxuICAgIFxuICAgIGluaXRQb3BvdmVyOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBpY29uTGVmdCxcbiAgICAgICAgICBpY29uUmlnaHQ7XG5cbiAgICAgIGljb25MZWZ0ID0gJyc7XG4gICAgICBpY29uUmlnaHQgPSAnJztcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYWxpZ24gPT09ICdyaWdodCcpIHtcbiAgICAgICAgaWNvblJpZ2h0ID0gJzxzcGFuIGNsYXNzPVwiaW5wdXQtZ3JvdXAtYWRkb25cIj48c3BhbiBjbGFzcz1cImJmaC1jb2xvcnBpY2tlci1pY29uXCI+PC9zcGFuPjwvc3Bhbj4nO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWNvbkxlZnQgPSAnPHNwYW4gY2xhc3M9XCJpbnB1dC1ncm91cC1hZGRvblwiPjxzcGFuIGNsYXNzPVwiYmZoLWNvbG9ycGlja2VyLWljb25cIj48L3NwYW4+PC9zcGFuPic7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuJGVsZW1lbnQuaHRtbChcbiAgICAgICAgJzxkaXYgY2xhc3M9XCJpbnB1dC1ncm91cCBiZmgtY29sb3JwaWNrZXItdG9nZ2xlXCIgZGF0YS10b2dnbGU9XCJiZmgtY29sb3JwaWNrZXJcIj4nICtcbiAgICAgICAgaWNvbkxlZnQgK1xuICAgICAgICAnPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cIicgKyB0aGlzLm9wdGlvbnMubmFtZSArICdcIiBjbGFzcz1cIicgKyB0aGlzLm9wdGlvbnMuaW5wdXQgKyAnXCIgcGxhY2Vob2xkZXI9XCInICsgdGhpcy5vcHRpb25zLnBsYWNlaG9sZGVyICsgJ1wiIHJlYWRvbmx5PicgK1xuICAgICAgICBpY29uUmlnaHQgK1xuICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICc8ZGl2IGNsYXNzPVwiYmZoLWNvbG9ycGlja2VyLXBvcG92ZXJcIj4nICtcbiAgICAgICAgJzxjYW52YXMgY2xhc3M9XCJiZmgtY29sb3JwaWNrZXItcGFsZXR0ZVwiIHdpZHRoPVwiMzg0XCIgaGVpZ2h0PVwiMjU2XCI+PC9jYW52YXM+JyArXG4gICAgICAgICc8L2Rpdj4nXG4gICAgICApO1xuXG4gICAgICB0aGlzLiRlbGVtZW50XG4gICAgICAgIC5vbignY2xpY2suYmZoY29sb3JwaWNrZXIuZGF0YS1hcGkgdG91Y2hzdGFydC5iZmhjb2xvcnBpY2tlci5kYXRhLWFwaScsIHRvZ2dsZSwgQkZIQ29sb3JQaWNrZXIucHJvdG90eXBlLnRvZ2dsZSlcbiAgICAgICAgLm9uKCdtb3VzZWRvd24uYmZoY29sb3JwaWNrZXIuZGF0YS1hcGknLCAnY2FudmFzJywgQkZIQ29sb3JQaWNrZXIucHJvdG90eXBlLm1vdXNlRG93bilcbiAgICAgICAgLm9uKCdjbGljay5iZmhjb2xvcnBpY2tlci5kYXRhLWFwaSB0b3VjaHN0YXJ0LmJmaGNvbG9ycGlja2VyLmRhdGEtYXBpJywgJy5iZmgtY29sb3JwaWNrZXItcG9wb3ZlcicsIGZ1bmN0aW9uKCkgeyByZXR1cm4gZmFsc2U7IH0pO1xuXG4gICAgICB0aGlzLmluaXRQYWxldHRlKCk7XG4gICAgICBcbiAgICAgIHRoaXMuJGVsZW1lbnQudmFsKHRoaXMub3B0aW9ucy5jb2xvcik7XG4gICAgfSxcbiAgICBcbiAgICB1cGRhdGVWYWw6IGZ1bmN0aW9uKHBvc2l0aW9uWCwgcG9zaXRpb25ZKSB7XG4gICAgICB2YXIgJGNhbnZhcyxcbiAgICAgICAgICBjb250ZXh0LFxuICAgICAgICAgIGNvbG9yWCxcbiAgICAgICAgICBjb2xvclksXG4gICAgICAgICAgc25hcHBpbmVzcyxcbiAgICAgICAgICBpbWFnZURhdGEsXG4gICAgICAgICAgbmV3Q29sb3I7XG4gICAgICBcbiAgICAgIHNuYXBwaW5lc3MgPSA1O1xuICAgICAgXG4gICAgICAkY2FudmFzID0gdGhpcy4kZWxlbWVudC5maW5kKCdjYW52YXMnKTtcbiAgICAgIGNvbnRleHQgPSAkY2FudmFzWzBdLmdldENvbnRleHQoJzJkJyk7XG4gICAgICBcbiAgICAgIGNvbG9yWCA9IHBvc2l0aW9uWCAtICRjYW52YXMub2Zmc2V0KCkubGVmdDtcbiAgICAgIGNvbG9yWSA9IHBvc2l0aW9uWSAtICRjYW52YXMub2Zmc2V0KCkudG9wO1xuICAgICAgXG4gICAgICBjb2xvclggPSBNYXRoLnJvdW5kKGNvbG9yWCAvIHNuYXBwaW5lc3MpICogc25hcHBpbmVzcztcbiAgICAgIGNvbG9yWSA9IE1hdGgucm91bmQoY29sb3JZIC8gc25hcHBpbmVzcykgKiBzbmFwcGluZXNzO1xuICAgICAgXG4gICAgICBpZiAoY29sb3JYIDwgMCkge1xuICAgICAgICBjb2xvclggPSAwO1xuICAgICAgfVxuICAgICAgaWYgKGNvbG9yWCA+PSAkY2FudmFzLndpZHRoKCkpIHtcbiAgICAgICAgY29sb3JYID0gJGNhbnZhcy53aWR0aCgpIC0gMTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYgKGNvbG9yWSA8IDApIHtcbiAgICAgICAgY29sb3JZID0gMDtcbiAgICAgIH1cbiAgICAgIGlmIChjb2xvclkgPiAkY2FudmFzLmhlaWdodCgpKSB7XG4gICAgICAgIGNvbG9yWSA9ICRjYW52YXMuaGVpZ2h0KCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGltYWdlRGF0YSA9IGNvbnRleHQuZ2V0SW1hZ2VEYXRhKGNvbG9yWCwgY29sb3JZLCAxLCAxKTtcbiAgICAgIG5ld0NvbG9yID0gcmdiVG9IZXgoaW1hZ2VEYXRhLmRhdGFbMF0sIGltYWdlRGF0YS5kYXRhWzFdLCBpbWFnZURhdGEuZGF0YVsyXSk7XG4gICAgICBcbiAgICAgIGlmIChuZXdDb2xvciAhPT0gdGhpcy4kZWxlbWVudC52YWwoKSkge1xuICAgICAgICB0aGlzLiRlbGVtZW50LnZhbChuZXdDb2xvcik7XG4gICAgICAgIFxuICAgICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoJ2NoYW5nZS5iZmhjb2xvcnBpY2tlcicpO1xuICAgICAgfVxuICAgIH0sXG4gICAgXG4gICAgbW91c2VEb3duOiBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgJHBhcmVudDtcbiAgICAgIFxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgJHBhcmVudCA9IGdldFBhcmVudCgkdGhpcyk7XG4gICAgICBcbiAgICAgICQoZG9jdW1lbnQpXG4gICAgICAgIC5vbignbW91c2Vtb3ZlLmJmaGNvbG9ycGlja2VyLmRhdGEtYXBpJywge2NvbG9ycGlja2VyOiAkcGFyZW50fSwgQkZIQ29sb3JQaWNrZXIucHJvdG90eXBlLm1vdXNlTW92ZSlcbiAgICAgICAgLm9uZSgnbW91c2V1cC5iZmhjb2xvcnBpY2tlci5kYXRhLWFwaScsIHtjb2xvcnBpY2tlcjogJHBhcmVudH0sIEJGSENvbG9yUGlja2VyLnByb3RvdHlwZS5tb3VzZVVwKTtcbiAgICB9LFxuICAgIFxuICAgIG1vdXNlTW92ZTogZnVuY3Rpb24oZSkge1xuICAgICAgdmFyICR0aGlzO1xuICAgICAgXG4gICAgICAkdGhpcyA9IGUuZGF0YS5jb2xvcnBpY2tlcjtcbiAgICAgIFxuICAgICAgJHRoaXMuZGF0YSgnYmZoY29sb3JwaWNrZXInKS51cGRhdGVWYWwoZS5wYWdlWCwgZS5wYWdlWSk7XG4gICAgfSxcbiAgICBcbiAgICBtb3VzZVVwOiBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgJHRoaXM7XG4gICAgICBcbiAgICAgICR0aGlzID0gZS5kYXRhLmNvbG9ycGlja2VyO1xuICAgICAgXG4gICAgICAkdGhpcy5kYXRhKCdiZmhjb2xvcnBpY2tlcicpLnVwZGF0ZVZhbChlLnBhZ2VYLCBlLnBhZ2VZKTtcbiAgICAgIFxuICAgICAgJChkb2N1bWVudCkub2ZmKCdtb3VzZW1vdmUuYmZoY29sb3JwaWNrZXIuZGF0YS1hcGknKTtcbiAgICAgIFxuICAgICAgaWYgKCR0aGlzLmRhdGEoJ2JmaGNvbG9ycGlja2VyJykub3B0aW9ucy5jbG9zZSA9PT0gdHJ1ZSkge1xuICAgICAgICBjbGVhck1lbnVzKCk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHRvZ2dsZTogZnVuY3Rpb24gKGUpIHtcbiAgICAgIHZhciAkdGhpcyxcbiAgICAgICAgICAkcGFyZW50LFxuICAgICAgICAgIGlzQWN0aXZlO1xuXG4gICAgICAkdGhpcyA9ICQodGhpcyk7XG4gICAgICAkcGFyZW50ID0gZ2V0UGFyZW50KCR0aGlzKTtcblxuICAgICAgaWYgKCRwYXJlbnQuaXMoJy5kaXNhYmxlZCcpIHx8ICRwYXJlbnQuYXR0cignZGlzYWJsZWQnKSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICBpc0FjdGl2ZSA9ICRwYXJlbnQuaGFzQ2xhc3MoJ29wZW4nKTtcblxuICAgICAgY2xlYXJNZW51cygpO1xuXG4gICAgICBpZiAoIWlzQWN0aXZlKSB7XG4gICAgICAgICRwYXJlbnQudHJpZ2dlcihlID0gJC5FdmVudCgnc2hvdy5iZmhjb2xvcnBpY2tlcicpKTtcblxuICAgICAgICBpZiAoZS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgJHBhcmVudFxuICAgICAgICAgIC50b2dnbGVDbGFzcygnb3BlbicpXG4gICAgICAgICAgLnRyaWdnZXIoJ3Nob3duLmJmaGNvbG9ycGlja2VyJyk7XG5cbiAgICAgICAgJHRoaXMuZm9jdXMoKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfTtcbiAgXG4gIGZ1bmN0aW9uIGNvbXBvbmVudFRvSGV4KGMpIHtcbiAgICB2YXIgaGV4ID0gYy50b1N0cmluZygxNik7XG4gICAgcmV0dXJuIGhleC5sZW5ndGggPT09IDEgPyAnMCcgKyBoZXggOiBoZXg7XG4gIH1cblxuICBmdW5jdGlvbiByZ2JUb0hleChyLCBnLCBiKSB7XG4gICAgcmV0dXJuICcjJyArIGNvbXBvbmVudFRvSGV4KHIpICsgY29tcG9uZW50VG9IZXgoZykgKyBjb21wb25lbnRUb0hleChiKTtcbiAgfVxuICAgICAgXG4gIGZ1bmN0aW9uIGNsZWFyTWVudXMoKSB7XG4gICAgdmFyICRwYXJlbnQ7XG5cbiAgICAkKHRvZ2dsZSkuZWFjaChmdW5jdGlvbiAoZSkge1xuICAgICAgJHBhcmVudCA9IGdldFBhcmVudCgkKHRoaXMpKTtcblxuICAgICAgaWYgKCEkcGFyZW50Lmhhc0NsYXNzKCdvcGVuJykpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgICRwYXJlbnQudHJpZ2dlcihlID0gJC5FdmVudCgnaGlkZS5iZmhjb2xvcnBpY2tlcicpKTtcblxuICAgICAgaWYgKGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgICRwYXJlbnRcbiAgICAgICAgLnJlbW92ZUNsYXNzKCdvcGVuJylcbiAgICAgICAgLnRyaWdnZXIoJ2hpZGRlbi5iZmhjb2xvcnBpY2tlcicpO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0UGFyZW50KCR0aGlzKSB7XG4gICAgcmV0dXJuICR0aGlzLmNsb3Nlc3QoJy5iZmgtY29sb3JwaWNrZXInKTtcbiAgfVxuICBcbiAgXG4gIC8qIENPTE9SUElDS0VSIFBMVUdJTiBERUZJTklUSU9OXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgdmFyIG9sZCA9ICQuZm4uYmZoY29sb3JwaWNrZXI7XG5cbiAgJC5mbi5iZmhjb2xvcnBpY2tlciA9IGZ1bmN0aW9uIChvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyxcbiAgICAgICAgICBkYXRhLFxuICAgICAgICAgIG9wdGlvbnM7XG5cbiAgICAgICR0aGlzID0gJCh0aGlzKTtcbiAgICAgIGRhdGEgPSAkdGhpcy5kYXRhKCdiZmhjb2xvcnBpY2tlcicpO1xuICAgICAgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT09ICdvYmplY3QnICYmIG9wdGlvbjtcbiAgICAgIHRoaXMudHlwZSA9ICdiZmhjb2xvcnBpY2tlcic7XG5cbiAgICAgIGlmICghZGF0YSkge1xuICAgICAgICAkdGhpcy5kYXRhKCdiZmhjb2xvcnBpY2tlcicsIChkYXRhID0gbmV3IEJGSENvbG9yUGlja2VyKHRoaXMsIG9wdGlvbnMpKSk7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZGF0YVtvcHRpb25dLmNhbGwoJHRoaXMpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gICQuZm4uYmZoY29sb3JwaWNrZXIuQ29uc3RydWN0b3IgPSBCRkhDb2xvclBpY2tlcjtcblxuICAkLmZuLmJmaGNvbG9ycGlja2VyLmRlZmF1bHRzID0ge1xuICAgIGFsaWduOiAnbGVmdCcsXG4gICAgaW5wdXQ6ICdmb3JtLWNvbnRyb2wnLFxuICAgIHBsYWNlaG9sZGVyOiAnJyxcbiAgICBuYW1lOiAnJyxcbiAgICBjb2xvcjogJyMwMDAwMDAnLFxuICAgIGNsb3NlOiB0cnVlXG4gIH07XG4gIFxuICBcbiAgLyogQ09MT1JQSUNLRVIgTk8gQ09ORkxJQ1RcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAkLmZuLmJmaGNvbG9ycGlja2VyLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5iZmhjb2xvcnBpY2tlciA9IG9sZDtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcbiAgXG4gIFxuICAvKiBDT0xPUlBJQ0tFUiBWQUxIT09LU1xuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIHZhciBvcmlnSG9vaztcbiAgaWYgKCQudmFsSG9va3MuZGl2KXtcbiAgICBvcmlnSG9vayA9ICQudmFsSG9va3MuZGl2O1xuICB9XG4gICQudmFsSG9va3MuZGl2ID0ge1xuICAgIGdldDogZnVuY3Rpb24oZWwpIHtcbiAgICAgIGlmICgkKGVsKS5oYXNDbGFzcygnYmZoLWNvbG9ycGlja2VyJykpIHtcbiAgICAgICAgcmV0dXJuICQoZWwpLmZpbmQoJ2lucHV0W3R5cGU9XCJ0ZXh0XCJdJykudmFsKCk7XG4gICAgICB9IGVsc2UgaWYgKG9yaWdIb29rKSB7XG4gICAgICAgIHJldHVybiBvcmlnSG9vay5nZXQoZWwpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbihlbCwgdmFsKSB7XG4gICAgICBpZiAoJChlbCkuaGFzQ2xhc3MoJ2JmaC1jb2xvcnBpY2tlcicpKSB7XG4gICAgICAgICQoZWwpLmZpbmQoJy5iZmgtY29sb3JwaWNrZXItaWNvbicpLmNzcygnYmFja2dyb3VuZC1jb2xvcicsIHZhbCk7XG4gICAgICAgICQoZWwpLmZpbmQoJ2lucHV0W3R5cGU9XCJ0ZXh0XCJdJykudmFsKHZhbCk7XG4gICAgICB9IGVsc2UgaWYgKG9yaWdIb29rKSB7XG4gICAgICAgIHJldHVybiBvcmlnSG9vay5zZXQoZWwsdmFsKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG4gIFxuICBcbiAgLyogQ09MT1JQSUNLRVIgREFUQS1BUElcbiAgICogPT09PT09PT09PT09PT0gKi9cblxuICAkKGRvY3VtZW50KS5yZWFkeSggZnVuY3Rpb24gKCkge1xuICAgICQoJ2Rpdi5iZmgtY29sb3JwaWNrZXInKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkY29sb3JwaWNrZXI7XG5cbiAgICAgICRjb2xvcnBpY2tlciA9ICQodGhpcyk7XG5cbiAgICAgICRjb2xvcnBpY2tlci5iZmhjb2xvcnBpY2tlcigkY29sb3JwaWNrZXIuZGF0YSgpKTtcbiAgICB9KTtcbiAgfSk7XG4gIFxuICBcbiAgLyogQVBQTFkgVE8gU1RBTkRBUkQgQ09MT1JQSUNLRVIgRUxFTUVOVFNcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAkKGRvY3VtZW50KVxuICAgIC5vbignY2xpY2suYmZoY29sb3JwaWNrZXIuZGF0YS1hcGknLCBjbGVhck1lbnVzKTtcblxufSh3aW5kb3cualF1ZXJ5KTtcbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIGJvb3RzdHJhcC1mb3JtaGVscGVycy1jb3VudHJpZXMuanNcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS92bGFtYW5uYS9Cb290c3RyYXBGb3JtSGVscGVyc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTIgVmluY2VudCBMYW1hbm5hXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbitmdW5jdGlvbiAoJCkge1xuXG4gICd1c2Ugc3RyaWN0JztcblxuXG4gIC8qIENPVU5UUklFUyBDTEFTUyBERUZJTklUSU9OXG4gICAqID09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgQkZIQ291bnRyaWVzID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgJC5mbi5iZmhjb3VudHJpZXMuZGVmYXVsdHMsIG9wdGlvbnMpO1xuICAgIHRoaXMuJGVsZW1lbnQgPSAkKGVsZW1lbnQpO1xuXG4gICAgaWYgKHRoaXMuJGVsZW1lbnQuaXMoJ3NlbGVjdCcpKSB7XG4gICAgICB0aGlzLmFkZENvdW50cmllcygpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdiZmgtc2VsZWN0Ym94JykpIHtcbiAgICAgIHRoaXMuYWRkQm9vdHN0cmFwQ291bnRyaWVzKCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuJGVsZW1lbnQuaXMoJ3NwYW4nKSkge1xuICAgICAgdGhpcy5kaXNwbGF5Q291bnRyeSgpO1xuICAgIH1cbiAgfTtcblxuICBCRkhDb3VudHJpZXMucHJvdG90eXBlID0ge1xuXG4gICAgY29uc3RydWN0b3I6IEJGSENvdW50cmllcyxcblxuICAgIGdldENvdW50cmllczogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgY291bnRyeSxcbiAgICAgICAgICBjb3VudHJpZXM7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYXZhaWxhYmxlKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLmF2YWlsYWJsZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICBjb3VudHJpZXMgPSBbXTtcbiAgXG4gICAgICAgICAgdGhpcy5vcHRpb25zLmF2YWlsYWJsZSA9IHRoaXMub3B0aW9ucy5hdmFpbGFibGUuc3BsaXQoJywnKTtcbiAgXG4gICAgICAgICAgZm9yIChjb3VudHJ5IGluIEJGSENvdW50cmllc0xpc3QpIHtcbiAgICAgICAgICAgIGlmIChCRkhDb3VudHJpZXNMaXN0Lmhhc093blByb3BlcnR5KGNvdW50cnkpKSB7XG4gICAgICAgICAgICAgIGlmICgkLmluQXJyYXkoY291bnRyeSwgdGhpcy5vcHRpb25zLmF2YWlsYWJsZSkgPj0gMCkge1xuICAgICAgICAgICAgICAgIGNvdW50cmllc1tjb3VudHJ5XSA9IEJGSENvdW50cmllc0xpc3RbY291bnRyeV07XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY291bnRyaWVzID0gdGhpcy5vcHRpb25zLmF2YWlsYWJsZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjb3VudHJpZXM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gQkZIQ291bnRyaWVzTGlzdDtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgYWRkQ291bnRyaWVzOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdmFsdWUsXG4gICAgICAgICAgY291bnRyeSxcbiAgICAgICAgICBjb3VudHJpZXM7XG5cbiAgICAgIHZhbHVlID0gdGhpcy5vcHRpb25zLmNvdW50cnk7XG4gICAgICBjb3VudHJpZXMgPSB0aGlzLmdldENvdW50cmllcygpO1xuXG4gICAgICB0aGlzLiRlbGVtZW50Lmh0bWwoJycpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmJsYW5rID09PSB0cnVlKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuYXBwZW5kKCc8b3B0aW9uIHZhbHVlPVwiXCI+PC9vcHRpb24+Jyk7XG4gICAgICB9XG5cbiAgICAgIGZvciAoY291bnRyeSBpbiBjb3VudHJpZXMpIHtcbiAgICAgICAgaWYgKGNvdW50cmllcy5oYXNPd25Qcm9wZXJ0eShjb3VudHJ5KSkge1xuICAgICAgICAgIHRoaXMuJGVsZW1lbnQuYXBwZW5kKCc8b3B0aW9uIHZhbHVlPVwiJyArIGNvdW50cnkgKyAnXCI+JyArIGNvdW50cmllc1tjb3VudHJ5XSArICc8L29wdGlvbj4nKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLiRlbGVtZW50LnZhbCh2YWx1ZSk7XG4gICAgfSxcblxuICAgIGFkZEJvb3RzdHJhcENvdW50cmllczogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgJGlucHV0LFxuICAgICAgICAgICR0b2dnbGUsXG4gICAgICAgICAgJG9wdGlvbnMsXG4gICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgY291bnRyeSxcbiAgICAgICAgICBjb3VudHJpZXM7XG5cbiAgICAgIHZhbHVlID0gdGhpcy5vcHRpb25zLmNvdW50cnk7XG4gICAgICAkaW5wdXQgPSB0aGlzLiRlbGVtZW50LmZpbmQoJ2lucHV0W3R5cGU9XCJoaWRkZW5cIl0nKTtcbiAgICAgICR0b2dnbGUgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5iZmgtc2VsZWN0Ym94LW9wdGlvbicpO1xuICAgICAgJG9wdGlvbnMgPSB0aGlzLiRlbGVtZW50LmZpbmQoJ1tyb2xlPW9wdGlvbl0nKTtcbiAgICAgIGNvdW50cmllcyA9IHRoaXMuZ2V0Q291bnRyaWVzKCk7XG5cbiAgICAgICRvcHRpb25zLmh0bWwoJycpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmJsYW5rID09PSB0cnVlKSB7XG4gICAgICAgICRvcHRpb25zLmFwcGVuZCgnPGxpPjxhIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiI1wiIGRhdGEtb3B0aW9uPVwiXCI+PC9hPjwvbGk+Jyk7XG4gICAgICB9XG5cbiAgICAgIGZvciAoY291bnRyeSBpbiBjb3VudHJpZXMpIHtcbiAgICAgICAgaWYgKGNvdW50cmllcy5oYXNPd25Qcm9wZXJ0eShjb3VudHJ5KSkge1xuICAgICAgICAgIGlmICh0aGlzLm9wdGlvbnMuZmxhZ3MgPT09IHRydWUpIHtcbiAgICAgICAgICAgICRvcHRpb25zLmFwcGVuZCgnPGxpPjxhIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiI1wiIGRhdGEtb3B0aW9uPVwiJyArIGNvdW50cnkgKyAnXCI+PGkgY2xhc3M9XCJnbHlwaGljb24gYmZoLWZsYWctJyArIGNvdW50cnkgKyAnXCI+PC9pPicgKyBjb3VudHJpZXNbY291bnRyeV0gKyAnPC9hPjwvbGk+Jyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICRvcHRpb25zLmFwcGVuZCgnPGxpPjxhIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiI1wiIGRhdGEtb3B0aW9uPVwiJyArIGNvdW50cnkgKyAnXCI+JyArIGNvdW50cmllc1tjb3VudHJ5XSArICc8L2E+PC9saT4nKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy4kZWxlbWVudC52YWwodmFsdWUpO1xuICAgIH0sXG5cbiAgICBkaXNwbGF5Q291bnRyeTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHZhbHVlO1xuXG4gICAgICB2YWx1ZSA9IHRoaXMub3B0aW9ucy5jb3VudHJ5O1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmZsYWdzID09PSB0cnVlKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuaHRtbCgnPGkgY2xhc3M9XCJnbHlwaGljb24gYmZoLWZsYWctJyArIHZhbHVlICsgJ1wiPjwvaT4gJyArIEJGSENvdW50cmllc0xpc3RbdmFsdWVdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuaHRtbChCRkhDb3VudHJpZXNMaXN0W3ZhbHVlXSk7XG4gICAgICB9XG4gICAgfVxuXG4gIH07XG5cblxuICAvKiBDT1VOVFJZIFBMVUdJTiBERUZJTklUSU9OXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgdmFyIG9sZCA9ICQuZm4uYmZoY291bnRyaWVzO1xuXG4gICQuZm4uYmZoY291bnRyaWVzID0gZnVuY3Rpb24gKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzLFxuICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgb3B0aW9ucztcblxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgZGF0YSA9ICR0aGlzLmRhdGEoJ2JmaGNvdW50cmllcycpO1xuICAgICAgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT09ICdvYmplY3QnICYmIG9wdGlvbjtcblxuICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICR0aGlzLmRhdGEoJ2JmaGNvdW50cmllcycsIChkYXRhID0gbmV3IEJGSENvdW50cmllcyh0aGlzLCBvcHRpb25zKSkpO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGRhdGFbb3B0aW9uXS5jYWxsKCR0aGlzKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICAkLmZuLmJmaGNvdW50cmllcy5Db25zdHJ1Y3RvciA9IEJGSENvdW50cmllcztcblxuICAkLmZuLmJmaGNvdW50cmllcy5kZWZhdWx0cyA9IHtcbiAgICBjb3VudHJ5OiAnJyxcbiAgICBhdmFpbGFibGU6ICcnLFxuICAgIGZsYWdzOiBmYWxzZSxcbiAgICBibGFuazogdHJ1ZVxuICB9O1xuXG5cbiAgLyogQ09VTlRSWSBOTyBDT05GTElDVFxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICQuZm4uYmZoY291bnRyaWVzLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5iZmhjb3VudHJpZXMgPSBvbGQ7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cblxuICAvKiBDT1VOVFJZIERBVEEtQVBJXG4gICAqID09PT09PT09PT09PT09ICovXG5cbiAgJChkb2N1bWVudCkucmVhZHkoIGZ1bmN0aW9uICgpIHtcbiAgICAkKCdmb3JtIHNlbGVjdC5iZmgtY291bnRyaWVzLCBzcGFuLmJmaC1jb3VudHJpZXMsIGRpdi5iZmgtY291bnRyaWVzJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJGNvdW50cmllcztcblxuICAgICAgJGNvdW50cmllcyA9ICQodGhpcyk7XG5cbiAgICAgIGlmICgkY291bnRyaWVzLmhhc0NsYXNzKCdiZmgtc2VsZWN0Ym94JykpIHtcbiAgICAgICAgJGNvdW50cmllcy5iZmhzZWxlY3Rib3goJGNvdW50cmllcy5kYXRhKCkpO1xuICAgICAgfVxuICAgICAgJGNvdW50cmllcy5iZmhjb3VudHJpZXMoJGNvdW50cmllcy5kYXRhKCkpO1xuICAgIH0pO1xuICB9KTtcblxufSh3aW5kb3cualF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogYm9vdHN0cmFwLWZvcm1oZWxwZXJzLWN1cnJlbmNpZXMuanNcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS92bGFtYW5uYS9Cb290c3RyYXBGb3JtSGVscGVyc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTMgVmluY2VudCBMYW1hbm5hXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbitmdW5jdGlvbiAoJCkge1xuXG4gICd1c2Ugc3RyaWN0JztcblxuXG4gIC8qIENPVU5UUklFUyBDTEFTUyBERUZJTklUSU9OXG4gICAqID09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgQkZIQ3VycmVuY2llcyA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sICQuZm4uYmZoY3VycmVuY2llcy5kZWZhdWx0cywgb3B0aW9ucyk7XG4gICAgdGhpcy4kZWxlbWVudCA9ICQoZWxlbWVudCk7XG5cbiAgICBpZiAodGhpcy4kZWxlbWVudC5pcygnc2VsZWN0JykpIHtcbiAgICAgIHRoaXMuYWRkQ3VycmVuY2llcygpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdiZmgtc2VsZWN0Ym94JykpIHtcbiAgICAgIHRoaXMuYWRkQm9vdHN0cmFwQ3VycmVuY2llcygpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLiRlbGVtZW50LmlzKCdzcGFuJykpIHtcbiAgICAgIHRoaXMuZGlzcGxheUN1cnJlbmN5KCk7XG4gICAgfVxuICB9O1xuXG4gIEJGSEN1cnJlbmNpZXMucHJvdG90eXBlID0ge1xuXG4gICAgY29uc3RydWN0b3I6IEJGSEN1cnJlbmNpZXMsXG5cbiAgICBnZXRDdXJyZW5jaWVzOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgY3VycmVuY3ksXG4gICAgICAgICAgY3VycmVuY2llcztcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5hdmFpbGFibGUpIHtcbiAgICAgICAgY3VycmVuY2llcyA9IFtdO1xuXG4gICAgICAgIHRoaXMub3B0aW9ucy5hdmFpbGFibGUgPSB0aGlzLm9wdGlvbnMuYXZhaWxhYmxlLnNwbGl0KCcsJyk7XG5cbiAgICAgICAgZm9yIChjdXJyZW5jeSBpbiBCRkhDdXJyZW5jaWVzTGlzdCkge1xuICAgICAgICAgIGlmIChCRkhDdXJyZW5jaWVzTGlzdC5oYXNPd25Qcm9wZXJ0eShjdXJyZW5jeSkpIHtcbiAgICAgICAgICAgIGlmICgkLmluQXJyYXkoY3VycmVuY3ksIHRoaXMub3B0aW9ucy5hdmFpbGFibGUpID49IDApIHtcbiAgICAgICAgICAgICAgY3VycmVuY2llc1tjdXJyZW5jeV0gPSBCRkhDdXJyZW5jaWVzTGlzdFtjdXJyZW5jeV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGN1cnJlbmNpZXM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gQkZIQ3VycmVuY2llc0xpc3Q7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGFkZEN1cnJlbmNpZXM6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciB2YWx1ZSxcbiAgICAgICAgICBjdXJyZW5jeSxcbiAgICAgICAgICBjdXJyZW5jaWVzO1xuXG4gICAgICB2YWx1ZSA9IHRoaXMub3B0aW9ucy5jdXJyZW5jeTtcbiAgICAgIGN1cnJlbmNpZXMgPSB0aGlzLmdldEN1cnJlbmNpZXMoKTtcblxuICAgICAgdGhpcy4kZWxlbWVudC5odG1sKCcnKTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5ibGFuayA9PT0gdHJ1ZSkge1xuICAgICAgICB0aGlzLiRlbGVtZW50LmFwcGVuZCgnPG9wdGlvbiB2YWx1ZT1cIlwiPjwvb3B0aW9uPicpO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGN1cnJlbmN5IGluIGN1cnJlbmNpZXMpIHtcbiAgICAgICAgaWYgKGN1cnJlbmNpZXMuaGFzT3duUHJvcGVydHkoY3VycmVuY3kpKSB7XG4gICAgICAgICAgdGhpcy4kZWxlbWVudC5hcHBlbmQoJzxvcHRpb24gdmFsdWU9XCInICsgY3VycmVuY3kgKyAnXCI+JyArIGN1cnJlbmNpZXNbY3VycmVuY3ldLmxhYmVsICsgJzwvb3B0aW9uPicpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMuJGVsZW1lbnQudmFsKHZhbHVlKTtcbiAgICB9LFxuXG5cbiAgICBhZGRCb290c3RyYXBDdXJyZW5jaWVzOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciAkaW5wdXQsXG4gICAgICAgICAgJHRvZ2dsZSxcbiAgICAgICAgICAkb3B0aW9ucyxcbiAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICBjdXJyZW5jeSxcbiAgICAgICAgICBjdXJyZW5jaWVzLFxuICAgICAgICAgIGZsYWc7XG5cbiAgICAgIHZhbHVlID0gdGhpcy5vcHRpb25zLmN1cnJlbmN5O1xuICAgICAgJGlucHV0ID0gdGhpcy4kZWxlbWVudC5maW5kKCdpbnB1dFt0eXBlPVwiaGlkZGVuXCJdJyk7XG4gICAgICAkdG9nZ2xlID0gdGhpcy4kZWxlbWVudC5maW5kKCcuYmZoLXNlbGVjdGJveC1vcHRpb24nKTtcbiAgICAgICRvcHRpb25zID0gdGhpcy4kZWxlbWVudC5maW5kKCdbcm9sZT1vcHRpb25dJyk7XG4gICAgICBjdXJyZW5jaWVzID0gdGhpcy5nZXRDdXJyZW5jaWVzKCk7XG5cbiAgICAgICRvcHRpb25zLmh0bWwoJycpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmJsYW5rID09PSB0cnVlKSB7XG4gICAgICAgICRvcHRpb25zLmFwcGVuZCgnPGxpPjxhIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiI1wiIGRhdGEtb3B0aW9uPVwiXCI+PC9hPjwvbGk+Jyk7XG4gICAgICB9XG5cbiAgICAgIGZvciAoY3VycmVuY3kgaW4gY3VycmVuY2llcykge1xuICAgICAgICBpZiAoY3VycmVuY2llcy5oYXNPd25Qcm9wZXJ0eShjdXJyZW5jeSkpIHtcbiAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmZsYWdzID09PSB0cnVlKSB7XG4gICAgICAgICAgICBpZiAoY3VycmVuY2llc1tjdXJyZW5jeV0uY3VycmVuY3lmbGFnKSB7XG4gICAgICAgICAgICAgIGZsYWcgPSBjdXJyZW5jaWVzW2N1cnJlbmN5XS5jdXJyZW5jeWZsYWc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBmbGFnID0gY3VycmVuY3kuc3Vic3RyKDAsMik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAkb3B0aW9ucy5hcHBlbmQoJzxsaT48YSB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIiNcIiBkYXRhLW9wdGlvbj1cIicgKyBjdXJyZW5jeSArICAnXCI+PGkgY2xhc3M9XCJnbHlwaGljb24gYmZoLWZsYWctJyArIGZsYWcgKyAnXCI+PC9pPicgKyBjdXJyZW5jaWVzW2N1cnJlbmN5XS5sYWJlbCArICc8L2E+PC9saT4nKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgJG9wdGlvbnMuYXBwZW5kKCc8bGk+PGEgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIjXCIgZGF0YS1vcHRpb249XCInICsgY3VycmVuY3kgKyAnXCI+JyArIGN1cnJlbmNpZXNbY3VycmVuY3ldLmxhYmVsICsgJzwvYT48L2xpPicpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLiRlbGVtZW50LnZhbCh2YWx1ZSk7XG4gICAgfSxcblxuICAgIGRpc3BsYXlDdXJyZW5jeTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHZhbHVlLFxuICAgICAgICAgIGZsYWc7XG5cbiAgICAgIHZhbHVlID0gdGhpcy5vcHRpb25zLmN1cnJlbmN5O1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmZsYWdzID09PSB0cnVlKSB7XG4gICAgICAgIGlmIChCRkhDdXJyZW5jaWVzTGlzdFt2YWx1ZV0uY3VycmVuY3lmbGFnKSB7XG4gICAgICAgICAgZmxhZyA9IEJGSEN1cnJlbmNpZXNMaXN0W3ZhbHVlXS5jdXJyZW5jeWZsYWc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZmxhZyA9IHZhbHVlLnN1YnN0cigwLDIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuaHRtbCgnPGkgY2xhc3M9XCJnbHlwaGljb24gYmZoLWZsYWctJyArIGZsYWcgKyAnXCI+PC9pPiAnICsgQkZIQ3VycmVuY2llc0xpc3RbdmFsdWVdLmxhYmVsKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuaHRtbChCRkhDdXJyZW5jaWVzTGlzdFt2YWx1ZV0ubGFiZWwpO1xuICAgICAgfVxuICAgIH1cblxuICB9O1xuXG5cbiAgLyogQ1VSUkVOQ1kgUExVR0lOIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgb2xkID0gJC5mbi5iZmhjdXJyZW5jaWVzO1xuXG4gICQuZm4uYmZoY3VycmVuY2llcyA9IGZ1bmN0aW9uIChvcHRpb24pIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyxcbiAgICAgICAgICBkYXRhLFxuICAgICAgICAgIG9wdGlvbnM7XG5cbiAgICAgICR0aGlzID0gJCh0aGlzKTtcbiAgICAgIGRhdGEgPSAkdGhpcy5kYXRhKCdiZmhjdXJyZW5jaWVzJyk7XG4gICAgICBvcHRpb25zID0gdHlwZW9mIG9wdGlvbiA9PT0gJ29iamVjdCcgJiYgb3B0aW9uO1xuXG4gICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgJHRoaXMuZGF0YSgnYmZoY3VycmVuY2llcycsIChkYXRhID0gbmV3IEJGSEN1cnJlbmNpZXModGhpcywgb3B0aW9ucykpKTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2Ygb3B0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgICBkYXRhW29wdGlvbl0uY2FsbCgkdGhpcyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgJC5mbi5iZmhjdXJyZW5jaWVzLkNvbnN0cnVjdG9yID0gQkZIQ3VycmVuY2llcztcblxuICAkLmZuLmJmaGN1cnJlbmNpZXMuZGVmYXVsdHMgPSB7XG4gICAgY3VycmVuY3k6ICcnLFxuICAgIGF2YWlsYWJsZTogJycsXG4gICAgZmxhZ3M6IGZhbHNlLFxuICAgIGJsYW5rOiB0cnVlXG4gIH07XG5cblxuICAvKiBDVVJSRU5DWSBOTyBDT05GTElDVFxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICQuZm4uYmZoY3VycmVuY2llcy5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uYmZoY3VycmVuY2llcyA9IG9sZDtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuXG4gIC8qIENVUlJFTkNZIERBVEEtQVBJXG4gICAqID09PT09PT09PT09PT09ICovXG5cbiAgJChkb2N1bWVudCkucmVhZHkoIGZ1bmN0aW9uICgpIHtcbiAgICAkKCdmb3JtIHNlbGVjdC5iZmgtY3VycmVuY2llcywgc3Bhbi5iZmgtY3VycmVuY2llcywgZGl2LmJmaC1jdXJyZW5jaWVzJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJGN1cnJlbmNpZXM7XG5cbiAgICAgICRjdXJyZW5jaWVzID0gJCh0aGlzKTtcblxuICAgICAgaWYgKCRjdXJyZW5jaWVzLmhhc0NsYXNzKCdiZmgtc2VsZWN0Ym94JykpIHtcbiAgICAgICAgJGN1cnJlbmNpZXMuYmZoc2VsZWN0Ym94KCRjdXJyZW5jaWVzLmRhdGEoKSk7XG4gICAgICB9XG4gICAgICAkY3VycmVuY2llcy5iZmhjdXJyZW5jaWVzKCRjdXJyZW5jaWVzLmRhdGEoKSk7XG4gICAgfSk7XG4gIH0pO1xuXG5cbn0od2luZG93LmpRdWVyeSk7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIGJvb3RzdHJhcC1mb3JtaGVscGVycy1kYXRlcGlja2VyLmpzXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdmxhbWFubmEvQm9vdHN0cmFwRm9ybUhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDEyIFZpbmNlbnQgTGFtYW5uYVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4rZnVuY3Rpb24gKCQpIHtcblxuICAndXNlIHN0cmljdCc7XG5cblxuICAvKiBCRkhEQVRFUElDS0VSIENMQVNTIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIHZhciB0b2dnbGUgPSAnW2RhdGEtdG9nZ2xlPWJmaC1kYXRlcGlja2VyXScsXG4gICAgICBCRkhEYXRlUGlja2VyID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sICQuZm4uYmZoZGF0ZXBpY2tlci5kZWZhdWx0cywgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQgPSAkKGVsZW1lbnQpO1xuXG4gICAgICAgIHRoaXMuaW5pdENhbGVuZGFyKCk7XG4gICAgICB9O1xuXG4gIEJGSERhdGVQaWNrZXIucHJvdG90eXBlID0ge1xuXG4gICAgY29uc3RydWN0b3I6IEJGSERhdGVQaWNrZXIsXG5cbiAgICBzZXREYXRlOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBkYXRlLFxuICAgICAgICAgIHRvZGF5LFxuICAgICAgICAgIGZvcm1hdDtcblxuICAgICAgZGF0ZSA9IHRoaXMub3B0aW9ucy5kYXRlO1xuICAgICAgZm9ybWF0ID0gdGhpcy5vcHRpb25zLmZvcm1hdDtcblxuICAgICAgaWYgKGRhdGUgPT09ICcnIHx8IGRhdGUgPT09ICd0b2RheScgfHwgZGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRvZGF5ID0gbmV3IERhdGUoKTtcblxuICAgICAgICBpZiAoZGF0ZSA9PT0gJ3RvZGF5Jykge1xuICAgICAgICAgIHRoaXMuJGVsZW1lbnQudmFsKGZvcm1hdERhdGUoZm9ybWF0LCB0b2RheS5nZXRNb250aCgpLCB0b2RheS5nZXRGdWxsWWVhcigpLCB0b2RheS5nZXREYXRlKCkpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuJGVsZW1lbnQuZGF0YSgnbW9udGgnLCB0b2RheS5nZXRNb250aCgpKTtcbiAgICAgICAgdGhpcy4kZWxlbWVudC5kYXRhKCd5ZWFyJywgdG9kYXkuZ2V0RnVsbFllYXIoKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLiRlbGVtZW50LnZhbChkYXRlKTtcbiAgICAgICAgdGhpcy4kZWxlbWVudC5kYXRhKCdtb250aCcsIE51bWJlcihnZXREYXRlUGFydChmb3JtYXQsIGRhdGUsICdtJykgLSAxKSk7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuZGF0YSgneWVhcicsIE51bWJlcihnZXREYXRlUGFydChmb3JtYXQsIGRhdGUsICd5JykpKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc2V0RGF0ZUxpbWl0OiBmdW5jdGlvbihkYXRlLCBsaW1pdFByZWZpeCkge1xuICAgICAgdmFyIHRvZGF5LFxuICAgICAgICAgIGZvcm1hdDtcblxuICAgICAgZm9ybWF0ID0gdGhpcy5vcHRpb25zLmZvcm1hdDtcblxuICAgICAgaWYgKGRhdGUgIT09ICcnKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuZGF0YShsaW1pdFByZWZpeCArICdsaW1pdCcsIHRydWUpO1xuXG4gICAgICAgIGlmIChkYXRlID09PSAndG9kYXknKSB7XG4gICAgICAgICAgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuXG4gICAgICAgICAgdGhpcy4kZWxlbWVudC5kYXRhKGxpbWl0UHJlZml4ICsgJ2RheScsIHRvZGF5LmdldERhdGUoKSk7XG4gICAgICAgICAgdGhpcy4kZWxlbWVudC5kYXRhKGxpbWl0UHJlZml4ICsgJ21vbnRoJywgdG9kYXkuZ2V0TW9udGgoKSk7XG4gICAgICAgICAgdGhpcy4kZWxlbWVudC5kYXRhKGxpbWl0UHJlZml4ICsgJ3llYXInLCB0b2RheS5nZXRGdWxsWWVhcigpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLiRlbGVtZW50LmRhdGEobGltaXRQcmVmaXggKyAnZGF5JywgTnVtYmVyKGdldERhdGVQYXJ0KGZvcm1hdCwgZGF0ZSwgJ2QnKSkpO1xuICAgICAgICAgIHRoaXMuJGVsZW1lbnQuZGF0YShsaW1pdFByZWZpeCArICdtb250aCcsIE51bWJlcihnZXREYXRlUGFydChmb3JtYXQsIGRhdGUsICdtJykgLSAxKSk7XG4gICAgICAgICAgdGhpcy4kZWxlbWVudC5kYXRhKGxpbWl0UHJlZml4ICsgJ3llYXInLCBOdW1iZXIoZ2V0RGF0ZVBhcnQoZm9ybWF0LCBkYXRlLCAneScpKSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuZGF0YShsaW1pdFByZWZpeCArICdsaW1pdCcsIGZhbHNlKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgaW5pdENhbGVuZGFyOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBpY29uTGVmdCxcbiAgICAgICAgICBpY29uUmlnaHQsXG4gICAgICAgICAgaWNvbkFkZG9uO1xuXG4gICAgICBpY29uTGVmdCA9ICcnO1xuICAgICAgaWNvblJpZ2h0ID0gJyc7XG4gICAgICBpY29uQWRkb24gPSAnJztcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuaWNvbiAhPT0gJycpIHtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5hbGlnbiA9PT0gJ3JpZ2h0Jykge1xuICAgICAgICAgIGljb25SaWdodCA9ICc8c3BhbiBjbGFzcz1cImlucHV0LWdyb3VwLWFkZG9uXCI+PGkgY2xhc3M9XCInICsgdGhpcy5vcHRpb25zLmljb24gKyAnXCI+PC9pPjwvc3Bhbj4nO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGljb25MZWZ0ID0gJzxzcGFuIGNsYXNzPVwiaW5wdXQtZ3JvdXAtYWRkb25cIj48aSBjbGFzcz1cIicgKyB0aGlzLm9wdGlvbnMuaWNvbiArICdcIj48L2k+PC9zcGFuPic7XG4gICAgICAgIH1cbiAgICAgICAgaWNvbkFkZG9uID0gJ2lucHV0LWdyb3VwJztcbiAgICAgIH1cblxuICAgICAgdGhpcy4kZWxlbWVudC5odG1sKFxuICAgICAgICAnPGRpdiBjbGFzcz1cIicgKyBpY29uQWRkb24gKyAnIGJmaC1kYXRlcGlja2VyLXRvZ2dsZVwiIGRhdGEtdG9nZ2xlPVwiYmZoLWRhdGVwaWNrZXJcIj4nICtcbiAgICAgICAgaWNvbkxlZnQgK1xuICAgICAgICAnPGlucHV0IHR5cGU9XCJ0ZXh0XCIgbmFtZT1cIicgKyB0aGlzLm9wdGlvbnMubmFtZSArICdcIiBjbGFzcz1cIicgKyB0aGlzLm9wdGlvbnMuaW5wdXQgKyAnXCIgcGxhY2Vob2xkZXI9XCInICsgdGhpcy5vcHRpb25zLnBsYWNlaG9sZGVyICsgJ1wiIHJlYWRvbmx5PicgK1xuICAgICAgICBpY29uUmlnaHQgK1xuICAgICAgICAnPC9kaXY+JyArXG4gICAgICAgICc8ZGl2IGNsYXNzPVwiYmZoLWRhdGVwaWNrZXItY2FsZW5kYXJcIj4nICtcbiAgICAgICAgJzx0YWJsZSBjbGFzcz1cImNhbGVuZGFyIHRhYmxlIHRhYmxlLWJvcmRlcmVkXCI+JyArXG4gICAgICAgICc8dGhlYWQ+JyArXG4gICAgICAgICc8dHIgY2xhc3M9XCJtb250aHMtaGVhZGVyXCI+JyArXG4gICAgICAgICc8dGggY2xhc3M9XCJtb250aFwiIGNvbHNwYW49XCI0XCI+JyArXG4gICAgICAgICc8YSBjbGFzcz1cInByZXZpb3VzXCIgaHJlZj1cIiNcIj48aSBjbGFzcz1cImdseXBoaWNvbiBnbHlwaGljb24tY2hldnJvbi1sZWZ0XCI+PC9pPjwvYT4nICtcbiAgICAgICAgJzxzcGFuPjwvc3Bhbj4nICtcbiAgICAgICAgJzxhIGNsYXNzPVwibmV4dFwiIGhyZWY9XCIjXCI+PGkgY2xhc3M9XCJnbHlwaGljb24gZ2x5cGhpY29uLWNoZXZyb24tcmlnaHRcIj48L2k+PC9hPicgK1xuICAgICAgICAnPC90aD4nICtcbiAgICAgICAgJzx0aCBjbGFzcz1cInllYXJcIiBjb2xzcGFuPVwiM1wiPicgK1xuICAgICAgICAnPGEgY2xhc3M9XCJwcmV2aW91c1wiIGhyZWY9XCIjXCI+PGkgY2xhc3M9XCJnbHlwaGljb24gZ2x5cGhpY29uLWNoZXZyb24tbGVmdFwiPjwvaT48L2E+JyArXG4gICAgICAgICc8c3Bhbj48L3NwYW4+JyArXG4gICAgICAgICc8YSBjbGFzcz1cIm5leHRcIiBocmVmPVwiI1wiPjxpIGNsYXNzPVwiZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLXJpZ2h0XCI+PC9pPjwvYT4nICtcbiAgICAgICAgJzwvdGg+JyArXG4gICAgICAgICc8L3RyPicgK1xuICAgICAgICAnPHRyIGNsYXNzPVwiZGF5cy1oZWFkZXJcIj4nICtcbiAgICAgICAgJzwvdHI+JyArXG4gICAgICAgICc8L3RoZWFkPicgK1xuICAgICAgICAnPHRib2R5PicgK1xuICAgICAgICAnPC90Ym9keT4nICtcbiAgICAgICAgJzwvdGFibGU+JyArXG4gICAgICAgICc8L2Rpdj4nXG4gICAgICApO1xuXG4gICAgICB0aGlzLiRlbGVtZW50XG4gICAgICAgIC5vbignY2xpY2suYmZoZGF0ZXBpY2tlci5kYXRhLWFwaSB0b3VjaHN0YXJ0LmJmaGRhdGVwaWNrZXIuZGF0YS1hcGknLCB0b2dnbGUsIEJGSERhdGVQaWNrZXIucHJvdG90eXBlLnRvZ2dsZSlcbiAgICAgICAgLm9uKCdjbGljay5iZmhkYXRlcGlja2VyLmRhdGEtYXBpIHRvdWNoc3RhcnQuYmZoZGF0ZXBpY2tlci5kYXRhLWFwaScsICcuYmZoLWRhdGVwaWNrZXItY2FsZW5kYXIgPiB0YWJsZS5jYWxlbmRhciAubW9udGggPiAucHJldmlvdXMnLCBCRkhEYXRlUGlja2VyLnByb3RvdHlwZS5wcmV2aW91c01vbnRoKVxuICAgICAgICAub24oJ2NsaWNrLmJmaGRhdGVwaWNrZXIuZGF0YS1hcGkgdG91Y2hzdGFydC5iZmhkYXRlcGlja2VyLmRhdGEtYXBpJywgJy5iZmgtZGF0ZXBpY2tlci1jYWxlbmRhciA+IHRhYmxlLmNhbGVuZGFyIC5tb250aCA+IC5uZXh0JywgQkZIRGF0ZVBpY2tlci5wcm90b3R5cGUubmV4dE1vbnRoKVxuICAgICAgICAub24oJ2NsaWNrLmJmaGRhdGVwaWNrZXIuZGF0YS1hcGkgdG91Y2hzdGFydC5iZmhkYXRlcGlja2VyLmRhdGEtYXBpJywgJy5iZmgtZGF0ZXBpY2tlci1jYWxlbmRhciA+IHRhYmxlLmNhbGVuZGFyIC55ZWFyID4gLnByZXZpb3VzJywgQkZIRGF0ZVBpY2tlci5wcm90b3R5cGUucHJldmlvdXNZZWFyKVxuICAgICAgICAub24oJ2NsaWNrLmJmaGRhdGVwaWNrZXIuZGF0YS1hcGkgdG91Y2hzdGFydC5iZmhkYXRlcGlja2VyLmRhdGEtYXBpJywgJy5iZmgtZGF0ZXBpY2tlci1jYWxlbmRhciA+IHRhYmxlLmNhbGVuZGFyIC55ZWFyID4gLm5leHQnLCBCRkhEYXRlUGlja2VyLnByb3RvdHlwZS5uZXh0WWVhcilcbiAgICAgICAgLm9uKCdjbGljay5iZmhkYXRlcGlja2VyLmRhdGEtYXBpIHRvdWNoc3RhcnQuYmZoZGF0ZXBpY2tlci5kYXRhLWFwaScsICcuYmZoLWRhdGVwaWNrZXItY2FsZW5kYXIgPiB0YWJsZS5jYWxlbmRhciB0ZDpub3QoLm9mZiknLCBCRkhEYXRlUGlja2VyLnByb3RvdHlwZS5zZWxlY3QpXG4gICAgICAgIC5vbignY2xpY2suYmZoZGF0ZXBpY2tlci5kYXRhLWFwaSB0b3VjaHN0YXJ0LmJmaGRhdGVwaWNrZXIuZGF0YS1hcGknLCAnLmJmaC1kYXRlcGlja2VyLWNhbGVuZGFyID4gdGFibGUuY2FsZW5kYXInLCBmdW5jdGlvbigpIHsgcmV0dXJuIGZhbHNlOyB9KTtcblxuICAgICAgdGhpcy5zZXREYXRlKCk7XG4gICAgICB0aGlzLnNldERhdGVMaW1pdCh0aGlzLm9wdGlvbnMubWluLCAnbG93ZXInKTtcbiAgICAgIHRoaXMuc2V0RGF0ZUxpbWl0KHRoaXMub3B0aW9ucy5tYXgsICdoaWdoZXInKTtcblxuICAgICAgdGhpcy51cGRhdGVDYWxlbmRhcigpO1xuICAgIH0sXG5cbiAgICB1cGRhdGVDYWxlbmRhckhlYWRlcjogZnVuY3Rpb24oJGNhbGVuZGFyLCBtb250aCwgeWVhcikge1xuICAgICAgdmFyICRkYXlzSGVhZGVyLFxuICAgICAgICAgIGRheTtcblxuICAgICAgJGNhbGVuZGFyLmZpbmQoJ3RhYmxlID4gdGhlYWQgPiB0ciA+IHRoLm1vbnRoID4gc3BhbicpLnRleHQoQkZITW9udGhzTGlzdFttb250aF0pO1xuICAgICAgJGNhbGVuZGFyLmZpbmQoJ3RhYmxlID4gdGhlYWQgPiB0ciA+IHRoLnllYXIgPiBzcGFuJykudGV4dCh5ZWFyKTtcblxuICAgICAgJGRheXNIZWFkZXIgPSAkY2FsZW5kYXIuZmluZCgndGFibGUgPiB0aGVhZCA+IHRyLmRheXMtaGVhZGVyJyk7XG4gICAgICAkZGF5c0hlYWRlci5odG1sKCcnKTtcbiAgICAgIGZvciAoZGF5PUJGSERheU9mV2Vla1N0YXJ0OyBkYXkgPCBCRkhEYXlzTGlzdC5sZW5ndGg7IGRheT1kYXkrMSkge1xuICAgICAgICAkZGF5c0hlYWRlci5hcHBlbmQoJzx0aD4nICsgQkZIRGF5c0xpc3RbZGF5XSArICc8L3RoPicpO1xuICAgICAgfVxuICAgICAgZm9yIChkYXk9MDsgZGF5IDwgQkZIRGF5T2ZXZWVrU3RhcnQ7IGRheT1kYXkrMSkge1xuICAgICAgICAkZGF5c0hlYWRlci5hcHBlbmQoJzx0aD4nICsgQkZIRGF5c0xpc3RbZGF5XSArICc8L3RoPicpO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBjaGVja01pbkRhdGU6IGZ1bmN0aW9uKGRheSwgbW9udGgsIHllYXIpIHtcbiAgICAgIHZhciBsb3dlcmxpbWl0LFxuICAgICAgICAgIGxvd2VyZGF5LFxuICAgICAgICAgIGxvd2VybW9udGgsXG4gICAgICAgICAgbG93ZXJ5ZWFyO1xuXG4gICAgICBsb3dlcmxpbWl0ID0gdGhpcy4kZWxlbWVudC5kYXRhKCdsb3dlcmxpbWl0Jyk7XG5cbiAgICAgIGlmIChsb3dlcmxpbWl0ID09PSB0cnVlKSB7XG4gICAgICAgIGxvd2VyZGF5ID0gdGhpcy4kZWxlbWVudC5kYXRhKCdsb3dlcmRheScpO1xuICAgICAgICBsb3dlcm1vbnRoID0gdGhpcy4kZWxlbWVudC5kYXRhKCdsb3dlcm1vbnRoJyk7XG4gICAgICAgIGxvd2VyeWVhciA9IHRoaXMuJGVsZW1lbnQuZGF0YSgnbG93ZXJ5ZWFyJyk7XG5cbiAgICAgICAgaWYgKChkYXkgPCBsb3dlcmRheSAmJiBtb250aCA9PT0gbG93ZXJtb250aCAmJiB5ZWFyID09PSBsb3dlcnllYXIpIHx8IChtb250aCA8IGxvd2VybW9udGggJiYgeWVhciA9PT0gbG93ZXJ5ZWFyKSB8fCAoeWVhciA8IGxvd2VyeWVhcikpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSxcblxuICAgIGNoZWNrTWF4RGF0ZTogZnVuY3Rpb24oZGF5LCBtb250aCwgeWVhcikge1xuICAgICAgdmFyIGhpZ2hlcmxpbWl0LFxuICAgICAgICAgIGhpZ2hlcmRheSxcbiAgICAgICAgICBoaWdoZXJtb250aCxcbiAgICAgICAgICBoaWdoZXJ5ZWFyO1xuXG4gICAgICBoaWdoZXJsaW1pdCA9IHRoaXMuJGVsZW1lbnQuZGF0YSgnaGlnaGVybGltaXQnKTtcblxuICAgICAgaWYgKGhpZ2hlcmxpbWl0ID09PSB0cnVlKSB7XG4gICAgICAgIGhpZ2hlcmRheSA9IHRoaXMuJGVsZW1lbnQuZGF0YSgnaGlnaGVyZGF5Jyk7XG4gICAgICAgIGhpZ2hlcm1vbnRoID0gdGhpcy4kZWxlbWVudC5kYXRhKCdoaWdoZXJtb250aCcpO1xuICAgICAgICBoaWdoZXJ5ZWFyID0gdGhpcy4kZWxlbWVudC5kYXRhKCdoaWdoZXJ5ZWFyJyk7XG5cbiAgICAgICAgaWYgKChkYXkgPiBoaWdoZXJkYXkgJiYgbW9udGggPT09IGhpZ2hlcm1vbnRoICYmIHllYXIgPT09IGhpZ2hlcnllYXIpIHx8IChtb250aCA+IGhpZ2hlcm1vbnRoICYmIHllYXIgPT09IGhpZ2hlcnllYXIpIHx8ICh5ZWFyID4gaGlnaGVyeWVhcikpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSxcblxuICAgIGNoZWNrVG9kYXk6IGZ1bmN0aW9uKGRheSwgbW9udGgsIHllYXIpIHtcbiAgICAgIHZhciB0b2RheTtcblxuICAgICAgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuXG4gICAgICBpZiAoZGF5ID09PSB0b2RheS5nZXREYXRlKCkgJiYgbW9udGggPT09IHRvZGF5LmdldE1vbnRoKCkgJiYgeWVhciA9PT0gdG9kYXkuZ2V0RnVsbFllYXIoKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sXG5cbiAgICB1cGRhdGVDYWxlbmRhckRheXM6IGZ1bmN0aW9uKCRjYWxlbmRhciwgbW9udGgsIHllYXIpIHtcbiAgICAgIHZhciAkZGF5cyxcbiAgICAgICAgICBudW1EYXlzUHJldmlvdXNNb250aCxcbiAgICAgICAgICBudW1EYXlzQ3VycmVudE1vbnRoLFxuICAgICAgICAgIGZpcnN0RGF5LFxuICAgICAgICAgIGxhc3REYXksXG4gICAgICAgICAgcm93LFxuICAgICAgICAgIGRheTtcblxuICAgICAgJGRheXMgPSAkY2FsZW5kYXIuZmluZCgndGFibGUgPiB0Ym9keScpLmh0bWwoJycpO1xuICAgICAgbnVtRGF5c1ByZXZpb3VzTW9udGggPSBnZXROdW1EYXlzSW5Nb250aChtb250aCwgeWVhcik7XG4gICAgICBudW1EYXlzQ3VycmVudE1vbnRoID0gZ2V0TnVtRGF5c0luTW9udGgobW9udGggKyAxLCB5ZWFyKTtcbiAgICAgIGZpcnN0RGF5ID0gZ2V0RGF5T2ZXZWVrKG1vbnRoLCB5ZWFyLCAxKTtcbiAgICAgIGxhc3REYXkgPSBnZXREYXlPZldlZWsobW9udGgsIHllYXIsIG51bURheXNDdXJyZW50TW9udGgpO1xuXG4gICAgICByb3cgPSAnJztcbiAgICAgIGZvciAoZGF5PTA7IGRheSA8IChmaXJzdERheSAtIEJGSERheU9mV2Vla1N0YXJ0ICsgNykgJSA3OyBkYXk9ZGF5KzEpIHtcbiAgICAgICAgcm93ICs9ICc8dGQgY2xhc3M9XCJvZmZcIj4nICsgKG51bURheXNQcmV2aW91c01vbnRoIC0gKGZpcnN0RGF5IC0gQkZIRGF5T2ZXZWVrU3RhcnQgKyA3KSAlIDcgKyBkYXkgKyAxKSArICc8L3RkPic7XG4gICAgICB9XG5cbiAgICAgIGZvciAoZGF5PTE7IGRheSA8PSBudW1EYXlzQ3VycmVudE1vbnRoOyBkYXk9ZGF5KzEpIHtcbiAgICAgICAgaWYgKHRoaXMuY2hlY2tNaW5EYXRlKGRheSwgbW9udGgsIHllYXIpKSB7XG4gICAgICAgICAgcm93ICs9ICc8dGQgZGF0YS1kYXk9XCInICsgZGF5ICsgJ1wiIGNsYXNzPVwib2ZmXCI+JyArIGRheSArICc8L3RkPic7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5jaGVja01heERhdGUoZGF5LCBtb250aCwgeWVhcikpIHtcbiAgICAgICAgICByb3cgKz0gJzx0ZCBkYXRhLWRheT1cIicgKyBkYXkgKyAnXCIgY2xhc3M9XCJvZmZcIj4nICsgZGF5ICsgJzwvdGQ+JztcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmNoZWNrVG9kYXkoZGF5LCBtb250aCwgeWVhcikpIHtcbiAgICAgICAgICByb3cgKz0gJzx0ZCBkYXRhLWRheT1cIicgKyBkYXkgKyAnXCIgY2xhc3M9XCJ0b2RheVwiPicgKyBkYXkgKyAnPC90ZD4nO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJvdyArPSAnPHRkIGRhdGEtZGF5PVwiJyArIGRheSArICdcIj4nICsgZGF5ICsgJzwvdGQ+JztcbiAgICAgICAgfVxuICAgICAgICBpZiAoZ2V0RGF5T2ZXZWVrKG1vbnRoLCB5ZWFyLCBkYXkpID09PSAoNiArIEJGSERheU9mV2Vla1N0YXJ0KSAlIDcpIHtcbiAgICAgICAgICAkZGF5cy5hcHBlbmQoJzx0cj4nICsgcm93ICsgJzwvdHI+Jyk7XG4gICAgICAgICAgcm93ID0gJyc7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZm9yIChkYXk9MTsgZGF5IDw9ICg3IC0gKChsYXN0RGF5ICsgMSAtIEJGSERheU9mV2Vla1N0YXJ0ICsgNykgJSA3KSkgJSA3ICsgMTsgZGF5PWRheSsxKSB7XG4gICAgICAgIHJvdyArPSAnPHRkIGNsYXNzPVwib2ZmXCI+JyArIGRheSArICc8L3RkPic7XG4gICAgICAgIGlmIChkYXkgPT09ICg3IC0gKChsYXN0RGF5ICsgMSAtIEJGSERheU9mV2Vla1N0YXJ0ICsgNykgJSA3KSkgJSA3KSB7XG4gICAgICAgICAgJGRheXMuYXBwZW5kKCc8dHI+JyArIHJvdyArICc8L3RyPicpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIHVwZGF0ZUNhbGVuZGFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJGNhbGVuZGFyLFxuICAgICAgICAgIG1vbnRoLFxuICAgICAgICAgIHllYXI7XG5cbiAgICAgICRjYWxlbmRhciA9IHRoaXMuJGVsZW1lbnQuZmluZCgnLmJmaC1kYXRlcGlja2VyLWNhbGVuZGFyJyk7XG4gICAgICBtb250aCA9IHRoaXMuJGVsZW1lbnQuZGF0YSgnbW9udGgnKTtcbiAgICAgIHllYXIgPSB0aGlzLiRlbGVtZW50LmRhdGEoJ3llYXInKTtcblxuICAgICAgdGhpcy51cGRhdGVDYWxlbmRhckhlYWRlcigkY2FsZW5kYXIsIG1vbnRoLCB5ZWFyKTtcbiAgICAgIHRoaXMudXBkYXRlQ2FsZW5kYXJEYXlzKCRjYWxlbmRhciwgbW9udGgsIHllYXIpO1xuICAgIH0sXG5cbiAgICBwcmV2aW91c01vbnRoOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgJHBhcmVudCxcbiAgICAgICAgICAkZGF0ZVBpY2tlcjtcblxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgJHBhcmVudCA9IGdldFBhcmVudCgkdGhpcyk7XG5cbiAgICAgIGlmIChOdW1iZXIoJHBhcmVudC5kYXRhKCdtb250aCcpKSA9PT0gMCkge1xuICAgICAgICAkcGFyZW50LmRhdGEoJ21vbnRoJywgMTEpO1xuICAgICAgICAkcGFyZW50LmRhdGEoJ3llYXInLCBOdW1iZXIoJHBhcmVudC5kYXRhKCd5ZWFyJykpIC0gMSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkcGFyZW50LmRhdGEoJ21vbnRoJywgTnVtYmVyKCRwYXJlbnQuZGF0YSgnbW9udGgnKSkgLSAxKTtcbiAgICAgIH1cblxuICAgICAgJGRhdGVQaWNrZXIgPSAkcGFyZW50LmRhdGEoJ2JmaGRhdGVwaWNrZXInKTtcbiAgICAgICRkYXRlUGlja2VyLnVwZGF0ZUNhbGVuZGFyKCk7XG5cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxuXG4gICAgbmV4dE1vbnRoOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgJHBhcmVudCxcbiAgICAgICAgICAkZGF0ZVBpY2tlcjtcblxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgJHBhcmVudCA9IGdldFBhcmVudCgkdGhpcyk7XG5cbiAgICAgIGlmIChOdW1iZXIoJHBhcmVudC5kYXRhKCdtb250aCcpKSA9PT0gMTEpIHtcbiAgICAgICAgJHBhcmVudC5kYXRhKCdtb250aCcsIDApO1xuICAgICAgICAkcGFyZW50LmRhdGEoJ3llYXInLCBOdW1iZXIoJHBhcmVudC5kYXRhKCd5ZWFyJykpICsgMSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAkcGFyZW50LmRhdGEoJ21vbnRoJywgTnVtYmVyKCRwYXJlbnQuZGF0YSgnbW9udGgnKSkgKyAxKTtcbiAgICAgIH1cblxuICAgICAgJGRhdGVQaWNrZXIgPSAkcGFyZW50LmRhdGEoJ2JmaGRhdGVwaWNrZXInKTtcbiAgICAgICRkYXRlUGlja2VyLnVwZGF0ZUNhbGVuZGFyKCk7XG5cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxuXG4gICAgcHJldmlvdXNZZWFyOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgJHBhcmVudCxcbiAgICAgICAgICAkZGF0ZVBpY2tlcjtcblxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgJHBhcmVudCA9IGdldFBhcmVudCgkdGhpcyk7XG5cbiAgICAgICRwYXJlbnQuZGF0YSgneWVhcicsIE51bWJlcigkcGFyZW50LmRhdGEoJ3llYXInKSkgLSAxKTtcblxuICAgICAgJGRhdGVQaWNrZXIgPSAkcGFyZW50LmRhdGEoJ2JmaGRhdGVwaWNrZXInKTtcbiAgICAgICRkYXRlUGlja2VyLnVwZGF0ZUNhbGVuZGFyKCk7XG5cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9LFxuXG4gICAgbmV4dFllYXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcyxcbiAgICAgICAgICAkcGFyZW50LFxuICAgICAgICAgICRkYXRlUGlja2VyO1xuXG4gICAgICAkdGhpcyA9ICQodGhpcyk7XG4gICAgICAkcGFyZW50ID0gZ2V0UGFyZW50KCR0aGlzKTtcblxuICAgICAgJHBhcmVudC5kYXRhKCd5ZWFyJywgTnVtYmVyKCRwYXJlbnQuZGF0YSgneWVhcicpKSArIDEpO1xuXG4gICAgICAkZGF0ZVBpY2tlciA9ICRwYXJlbnQuZGF0YSgnYmZoZGF0ZXBpY2tlcicpO1xuICAgICAgJGRhdGVQaWNrZXIudXBkYXRlQ2FsZW5kYXIoKTtcblxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sXG5cbiAgICBzZWxlY3Q6IGZ1bmN0aW9uIChlKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgJHBhcmVudCxcbiAgICAgICAgICAkZGF0ZVBpY2tlcixcbiAgICAgICAgICBtb250aCxcbiAgICAgICAgICB5ZWFyLFxuICAgICAgICAgIGRheTtcblxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICAkcGFyZW50ID0gZ2V0UGFyZW50KCR0aGlzKTtcbiAgICAgICRkYXRlUGlja2VyID0gJHBhcmVudC5kYXRhKCdiZmhkYXRlcGlja2VyJyk7XG4gICAgICBtb250aCA9ICRwYXJlbnQuZGF0YSgnbW9udGgnKTtcbiAgICAgIHllYXIgPSAkcGFyZW50LmRhdGEoJ3llYXInKTtcbiAgICAgIGRheSA9ICR0aGlzLmRhdGEoJ2RheScpO1xuXG4gICAgICAkcGFyZW50LnZhbChmb3JtYXREYXRlKCRkYXRlUGlja2VyLm9wdGlvbnMuZm9ybWF0LCBtb250aCwgeWVhciwgZGF5KSk7XG4gICAgICAkcGFyZW50LnRyaWdnZXIoJ2NoYW5nZS5iZmhkYXRlcGlja2VyJyk7XG5cbiAgICAgIGlmICgkZGF0ZVBpY2tlci5vcHRpb25zLmNsb3NlID09PSB0cnVlKSB7XG4gICAgICAgIGNsZWFyTWVudXMoKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgdG9nZ2xlOiBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyICR0aGlzLFxuICAgICAgICAgICRwYXJlbnQsXG4gICAgICAgICAgaXNBY3RpdmU7XG5cbiAgICAgICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICRwYXJlbnQgPSBnZXRQYXJlbnQoJHRoaXMpO1xuXG4gICAgICBpZiAoJHBhcmVudC5pcygnLmRpc2FibGVkJykgfHwgJHBhcmVudC5hdHRyKCdkaXNhYmxlZCcpICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlzQWN0aXZlID0gJHBhcmVudC5oYXNDbGFzcygnb3BlbicpO1xuXG4gICAgICBjbGVhck1lbnVzKCk7XG5cbiAgICAgIGlmICghaXNBY3RpdmUpIHtcbiAgICAgICAgJHBhcmVudC50cmlnZ2VyKGUgPSAkLkV2ZW50KCdzaG93LmJmaGRhdGVwaWNrZXInKSk7XG5cbiAgICAgICAgaWYgKGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgICRwYXJlbnRcbiAgICAgICAgICAudG9nZ2xlQ2xhc3MoJ29wZW4nKVxuICAgICAgICAgIC50cmlnZ2VyKCdzaG93bi5iZmhkYXRlcGlja2VyJyk7XG5cbiAgICAgICAgJHRoaXMuZm9jdXMoKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfTtcblxuICBmdW5jdGlvbiBnZXROdW1EYXlzSW5Nb250aChtb250aCwgeWVhcikge1xuICAgIHJldHVybiBuZXcgRGF0ZSh5ZWFyLCBtb250aCwgMCkuZ2V0RGF0ZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0RGF5T2ZXZWVrKG1vbnRoLCB5ZWFyLCBkYXkpIHtcbiAgICByZXR1cm4gbmV3IERhdGUoeWVhciwgbW9udGgsIGRheSkuZ2V0RGF5KCk7XG4gIH1cblxuICBmdW5jdGlvbiBmb3JtYXREYXRlKGZvcm1hdCwgbW9udGgsIHllYXIsIGRheSkge1xuICAgIG1vbnRoICs9IDE7XG4gICAgbW9udGggPSBTdHJpbmcobW9udGgpO1xuICAgIGRheSA9IFN0cmluZyhkYXkpO1xuXG4gICAgaWYgKG1vbnRoLmxlbmd0aCA9PT0gMSkge1xuICAgICAgbW9udGggPSAnMCcgKyBtb250aDtcbiAgICB9XG4gICAgaWYgKGRheS5sZW5ndGggPT09IDEpIHtcbiAgICAgIGRheSA9ICcwJyArIGRheTtcbiAgICB9XG5cbiAgICByZXR1cm4gZm9ybWF0LnJlcGxhY2UoJ20nLCBtb250aCkucmVwbGFjZSgneScsIHllYXIpLnJlcGxhY2UoJ2QnLCBkYXkpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0RGF0ZVBhcnQoZm9ybWF0LCBkYXRlLCBwYXJ0KSB7XG4gICAgdmFyIHBhcnRQb3NpdGlvbnMsXG4gICAgICAgIHBhcnRQb3NpdGlvbixcbiAgICAgICAgcGFydHM7XG5cbiAgICBwYXJ0UG9zaXRpb25zID0gW1xuICAgICAgeydwYXJ0JzogJ20nLCAncG9zaXRpb24nOiBmb3JtYXQuaW5kZXhPZignbScpfSxcbiAgICAgIHsncGFydCc6ICd5JywgJ3Bvc2l0aW9uJzogZm9ybWF0LmluZGV4T2YoJ3knKX0sXG4gICAgICB7J3BhcnQnOiAnZCcsICdwb3NpdGlvbic6IGZvcm1hdC5pbmRleE9mKCdkJyl9XG4gICAgXTtcblxuICAgIHBhcnRQb3NpdGlvbnMuc29ydChmdW5jdGlvbihhLCBiKSB7cmV0dXJuIGEucG9zaXRpb24gLSBiLnBvc2l0aW9uO30pO1xuXG4gICAgcGFydHMgPSBkYXRlLm1hdGNoKC8oXFxkKykvZyk7XG5cbiAgICBmb3IgKHBhcnRQb3NpdGlvbiBpbiBwYXJ0UG9zaXRpb25zKSB7XG4gICAgICBpZiAocGFydFBvc2l0aW9ucy5oYXNPd25Qcm9wZXJ0eShwYXJ0UG9zaXRpb24pKSB7XG4gICAgICAgIGlmIChwYXJ0UG9zaXRpb25zW3BhcnRQb3NpdGlvbl0ucGFydCA9PT0gcGFydCkge1xuICAgICAgICAgIHJldHVybiBOdW1iZXIocGFydHNbcGFydFBvc2l0aW9uXSkudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNsZWFyTWVudXMoKSB7XG4gICAgdmFyICRwYXJlbnQ7XG5cbiAgICAkKHRvZ2dsZSkuZWFjaChmdW5jdGlvbiAoZSkge1xuICAgICAgJHBhcmVudCA9IGdldFBhcmVudCgkKHRoaXMpKTtcblxuICAgICAgaWYgKCEkcGFyZW50Lmhhc0NsYXNzKCdvcGVuJykpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgICRwYXJlbnQudHJpZ2dlcihlID0gJC5FdmVudCgnaGlkZS5iZmhkYXRlcGlja2VyJykpO1xuXG4gICAgICBpZiAoZS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgJHBhcmVudFxuICAgICAgICAucmVtb3ZlQ2xhc3MoJ29wZW4nKVxuICAgICAgICAudHJpZ2dlcignaGlkZGVuLmJmaGRhdGVwaWNrZXInKTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFBhcmVudCgkdGhpcykge1xuICAgIHJldHVybiAkdGhpcy5jbG9zZXN0KCcuYmZoLWRhdGVwaWNrZXInKTtcbiAgfVxuXG5cbiAgLyogREFURVBJQ0tFUiBQTFVHSU4gREVGSU5JVElPTlxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIHZhciBvbGQgPSAkLmZuLmJmaGRhdGVwaWNrZXI7XG5cbiAgJC5mbi5iZmhkYXRlcGlja2VyID0gZnVuY3Rpb24gKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzLFxuICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgb3B0aW9ucztcblxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgZGF0YSA9ICR0aGlzLmRhdGEoJ2JmaGRhdGVwaWNrZXInKTtcbiAgICAgIG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9uID09PSAnb2JqZWN0JyAmJiBvcHRpb247XG4gICAgICB0aGlzLnR5cGUgPSAnYmZoZGF0ZXBpY2tlcic7XG5cbiAgICAgIGlmICghZGF0YSkge1xuICAgICAgICAkdGhpcy5kYXRhKCdiZmhkYXRlcGlja2VyJywgKGRhdGEgPSBuZXcgQkZIRGF0ZVBpY2tlcih0aGlzLCBvcHRpb25zKSkpO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGRhdGFbb3B0aW9uXS5jYWxsKCR0aGlzKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICAkLmZuLmJmaGRhdGVwaWNrZXIuQ29uc3RydWN0b3IgPSBCRkhEYXRlUGlja2VyO1xuXG4gICQuZm4uYmZoZGF0ZXBpY2tlci5kZWZhdWx0cyA9IHtcbiAgICBpY29uOiAnZ2x5cGhpY29uIGdseXBoaWNvbi1jYWxlbmRhcicsXG4gICAgYWxpZ246ICdsZWZ0JyxcbiAgICBpbnB1dDogJ2Zvcm0tY29udHJvbCcsXG4gICAgcGxhY2Vob2xkZXI6ICcnLFxuICAgIG5hbWU6ICcnLFxuICAgIGRhdGU6ICd0b2RheScsXG4gICAgZm9ybWF0OiAnbS9kL3knLFxuICAgIG1pbjogJycsXG4gICAgbWF4OiAnJyxcbiAgICBjbG9zZTogdHJ1ZVxuICB9O1xuXG5cbiAgLyogREFURVBJQ0tFUiBOTyBDT05GTElDVFxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICQuZm4uYmZoZGF0ZXBpY2tlci5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uYmZoZGF0ZXBpY2tlciA9IG9sZDtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuXG4gIC8qIERBVEVQSUNLRVIgVkFMSE9PS1NcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgb3JpZ0hvb2s7XG4gIGlmICgkLnZhbEhvb2tzLmRpdil7XG4gICAgb3JpZ0hvb2sgPSAkLnZhbEhvb2tzLmRpdjtcbiAgfVxuICAkLnZhbEhvb2tzLmRpdiA9IHtcbiAgICBnZXQ6IGZ1bmN0aW9uKGVsKSB7XG4gICAgICBpZiAoJChlbCkuaGFzQ2xhc3MoJ2JmaC1kYXRlcGlja2VyJykpIHtcbiAgICAgICAgcmV0dXJuICQoZWwpLmZpbmQoJ2lucHV0W3R5cGU9XCJ0ZXh0XCJdJykudmFsKCk7XG4gICAgICB9IGVsc2UgaWYgKG9yaWdIb29rKSB7XG4gICAgICAgIHJldHVybiBvcmlnSG9vay5nZXQoZWwpO1xuICAgICAgfVxuICAgIH0sXG4gICAgc2V0OiBmdW5jdGlvbihlbCwgdmFsKSB7XG4gICAgICBpZiAoJChlbCkuaGFzQ2xhc3MoJ2JmaC1kYXRlcGlja2VyJykpIHtcbiAgICAgICAgJChlbCkuZmluZCgnaW5wdXRbdHlwZT1cInRleHRcIl0nKS52YWwodmFsKTtcbiAgICAgIH0gZWxzZSBpZiAob3JpZ0hvb2spIHtcbiAgICAgICAgcmV0dXJuIG9yaWdIb29rLnNldChlbCx2YWwpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuXG4gIC8qIERBVEVQSUNLRVIgREFUQS1BUElcbiAgICogPT09PT09PT09PT09PT0gKi9cblxuICAkKGRvY3VtZW50KS5yZWFkeSggZnVuY3Rpb24gKCkge1xuICAgICQoJ2Rpdi5iZmgtZGF0ZXBpY2tlcicpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICRkYXRlcGlja2VyO1xuXG4gICAgICAkZGF0ZXBpY2tlciA9ICQodGhpcyk7XG5cbiAgICAgICRkYXRlcGlja2VyLmJmaGRhdGVwaWNrZXIoJGRhdGVwaWNrZXIuZGF0YSgpKTtcbiAgICB9KTtcbiAgfSk7XG5cblxuICAvKiBBUFBMWSBUTyBTVEFOREFSRCBEQVRFUElDS0VSIEVMRU1FTlRTXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgJChkb2N1bWVudClcbiAgICAub24oJ2NsaWNrLmJmaGRhdGVwaWNrZXIuZGF0YS1hcGknLCBjbGVhck1lbnVzKTtcblxufSh3aW5kb3cualF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogYm9vdHN0cmFwLWZvcm1oZWxwZXJzLWZvbnRzLmpzXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdmxhbWFubmEvQm9vdHN0cmFwRm9ybUhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDEyIFZpbmNlbnQgTGFtYW5uYVxuICogY29udHJpYnV0ZWQgYnkgQWFyb24gQ29sbGVnZW1hbiwgU3F1aWRvbywgMjAxMlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4rZnVuY3Rpb24gKCQpIHtcblxuICAndXNlIHN0cmljdCc7XG5cblxuICAvKiBGT05UUyBDTEFTUyBERUZJTklUSU9OXG4gICAqID09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgQkZIRm9udHMgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCAkLmZuLmJmaGZvbnRzLmRlZmF1bHRzLCBvcHRpb25zKTtcbiAgICB0aGlzLiRlbGVtZW50ID0gJChlbGVtZW50KTtcblxuICAgIGlmICh0aGlzLiRlbGVtZW50LmlzKCdzZWxlY3QnKSkge1xuICAgICAgdGhpcy5hZGRGb250cygpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdiZmgtc2VsZWN0Ym94JykpIHtcbiAgICAgIHRoaXMuYWRkQm9vdHN0cmFwRm9udHMoKTtcbiAgICB9XG4gIH07XG5cbiAgQkZIRm9udHMucHJvdG90eXBlID0ge1xuXG4gICAgY29uc3RydWN0b3I6IEJGSEZvbnRzLFxuXG4gICAgZ2V0Rm9udHM6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGZvbnQsXG4gICAgICAgICAgZm9udHM7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYXZhaWxhYmxlKSB7XG4gICAgICAgIGZvbnRzID0gW107XG5cbiAgICAgICAgdGhpcy5vcHRpb25zLmF2YWlsYWJsZSA9IHRoaXMub3B0aW9ucy5hdmFpbGFibGUuc3BsaXQoJywnKTtcblxuICAgICAgICBmb3IgKGZvbnQgaW4gQkZIRm9udHNMaXN0KSB7XG4gICAgICAgICAgaWYgKEJGSEZvbnRzTGlzdC5oYXNPd25Qcm9wZXJ0eShmb250KSkge1xuICAgICAgICAgICAgaWYgKCQuaW5BcnJheShmb250LCB0aGlzLm9wdGlvbnMuYXZhaWxhYmxlKSA+PSAwKSB7XG4gICAgICAgICAgICAgIGZvbnRzW2ZvbnRdID0gQkZIRm9udHNMaXN0W2ZvbnRdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmb250cztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBCRkhGb250c0xpc3Q7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGFkZEZvbnRzOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdmFsdWUsXG4gICAgICAgICAgZm9udCxcbiAgICAgICAgICBmb250cztcblxuICAgICAgdmFsdWUgPSB0aGlzLm9wdGlvbnMuZm9udDtcbiAgICAgIGZvbnRzID0gdGhpcy5nZXRGb250cygpO1xuXG4gICAgICB0aGlzLiRlbGVtZW50Lmh0bWwoJycpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmJsYW5rID09PSB0cnVlKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuYXBwZW5kKCc8b3B0aW9uIHZhbHVlPVwiXCI+PC9vcHRpb24+Jyk7XG4gICAgICB9XG5cbiAgICAgIGZvciAoZm9udCBpbiBmb250cykge1xuICAgICAgICBpZiAoZm9udHMuaGFzT3duUHJvcGVydHkoZm9udCkpIHtcbiAgICAgICAgICB0aGlzLiRlbGVtZW50LmFwcGVuZCgnPG9wdGlvbiB2YWx1ZT1cIicgKyBmb250ICsgJ1wiPicgKyBmb250ICsgJzwvb3B0aW9uPicpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vRG9ubmEgU3RhcnRcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2hvd0N1c3RvbSkge1xuICAgICAgICB0aGlzLiRlbGVtZW50LmFwcGVuZCgnPG9wdGlvbiB2YWx1ZT1cIkN1c3RvbVwiPlVzZSBDdXN0b20gRm9udDwvb3B0aW9uPicpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLnNob3dNb3JlKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuYXBwZW5kKCc8b3B0aW9uIHZhbHVlPVwiR29vZ2xlXCI+TW9yZSBGb250cy4uLjwvb3B0aW9uPicpO1xuICAgICAgfVxuICAgICAgLy9Eb25uYSBFbmRcblxuICAgICAgdGhpcy4kZWxlbWVudC52YWwodmFsdWUpO1xuICAgIH0sXG5cbiAgICBhZGRCb290c3RyYXBGb250czogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgJGlucHV0LFxuICAgICAgICAgICR0b2dnbGUsXG4gICAgICAgICAgJG9wdGlvbnMsXG4gICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgZm9udCxcbiAgICAgICAgICBmb250cztcblxuICAgICAgdmFsdWUgPSB0aGlzLm9wdGlvbnMuZm9udDtcbiAgICAgICRpbnB1dCA9IHRoaXMuJGVsZW1lbnQuZmluZCgnaW5wdXRbdHlwZT1cImhpZGRlblwiXScpO1xuICAgICAgJHRvZ2dsZSA9IHRoaXMuJGVsZW1lbnQuZmluZCgnLmJmaC1zZWxlY3Rib3gtb3B0aW9uJyk7XG4gICAgICAkb3B0aW9ucyA9IHRoaXMuJGVsZW1lbnQuZmluZCgnW3JvbGU9b3B0aW9uXScpO1xuICAgICAgZm9udHMgPSB0aGlzLmdldEZvbnRzKCk7XG5cbiAgICAgICRvcHRpb25zLmh0bWwoJycpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmJsYW5rID09PSB0cnVlKSB7XG4gICAgICAgICRvcHRpb25zLmFwcGVuZCgnPGxpPjxhIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiI1wiIGRhdGEtb3B0aW9uPVwiXCI+PC9hPjwvbGk+Jyk7XG4gICAgICB9XG5cbiAgICAgIGZvciAoZm9udCBpbiBmb250cykge1xuICAgICAgICBpZiAoZm9udHMuaGFzT3duUHJvcGVydHkoZm9udCkpIHtcbiAgICAgICAgICAkb3B0aW9ucy5hcHBlbmQoJzxsaT48YSB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIiNcIiBzdHlsZT1cXCdmb250LWZhbWlseTogJyArIGZvbnRzW2ZvbnRdICsgJ1xcJyBkYXRhLW9wdGlvbj1cIicgKyBmb250ICsgJ1wiPicgKyBmb250ICsgJzwvYT48L2xpPicpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vRG9ubmEgU3RhcnRcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2hvd0N1c3RvbSkge1xuICAgICAgICAkb3B0aW9ucy5hcHBlbmQoJzxsaT48YSB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIiNcIiBzdHlsZT1cXCdmb250LWZhbWlseTogQ3VzdG9tXFwnIGRhdGEtb3B0aW9uPVwiVXNlIEN1c3RvbSBGb250XCI+VXNlIEN1c3RvbSBGb250PC9hPjwvbGk+Jyk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2hvd01vcmUpIHtcbiAgICAgICAgJG9wdGlvbnMuYXBwZW5kKCc8bGk+PGEgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIjXCIgc3R5bGU9XFwnZm9udC1mYW1pbHk6IEdvb2dsZVxcJyBkYXRhLW9wdGlvbj1cIk1vcmUgRm9udHMuLi5cIj5Nb3JlIEZvbnRzLi4uPC9hPjwvbGk+Jyk7XG4gICAgICB9XG4gICAgICAvL0Rvbm5hIEVuZFxuXG4gICAgICB0aGlzLiRlbGVtZW50LnZhbCh2YWx1ZSk7XG4gICAgfVxuXG4gIH07XG5cblxuICAvKiBGT05UUyBQTFVHSU4gREVGSU5JVElPTlxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIHZhciBvbGQgPSAkLmZuLmJmaGZvbnRzO1xuXG4gICQuZm4uYmZoZm9udHMgPSBmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgZGF0YSxcbiAgICAgICAgICBvcHRpb25zO1xuXG4gICAgICAkdGhpcyA9ICQodGhpcyk7XG4gICAgICBkYXRhID0gJHRoaXMuZGF0YSgnYmZoZm9udHMnKTtcbiAgICAgIG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9uID09PSAnb2JqZWN0JyAmJiBvcHRpb247XG5cbiAgICAgIGlmICghZGF0YSkge1xuICAgICAgICAkdGhpcy5kYXRhKCdiZmhmb250cycsIChkYXRhID0gbmV3IEJGSEZvbnRzKHRoaXMsIG9wdGlvbnMpKSk7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZGF0YVtvcHRpb25dLmNhbGwoJHRoaXMpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gICQuZm4uYmZoZm9udHMuQ29uc3RydWN0b3IgPSBCRkhGb250cztcblxuICAkLmZuLmJmaGZvbnRzLmRlZmF1bHRzID0ge1xuICAgIGZvbnQ6ICcnLFxuICAgIGF2YWlsYWJsZTogJycsXG4gICAgYmxhbms6IHRydWUsXG4gICAgc2hvd0N1c3RvbSA6IGZhbHNlLCAvL0Rvbm5hXG4gICAgc2hvd01vcmUgOiBmYWxzZVx0Ly9Eb25uYVxuICB9O1xuXG5cbiAgLyogRk9OVFMgTk8gQ09ORkxJQ1RcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAkLmZuLmJmaGZvbnRzLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5iZmhmb250cyA9IG9sZDtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuXG4gIC8qIEZPTlRTIERBVEEtQVBJXG4gICAqID09PT09PT09PT09PT09ICovXG5cbiAgJChkb2N1bWVudCkucmVhZHkoIGZ1bmN0aW9uICgpIHtcbiAgICAkKCdmb3JtIHNlbGVjdC5iZmgtZm9udHMsIHNwYW4uYmZoLWZvbnRzLCBkaXYuYmZoLWZvbnRzJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJGZvbnRzO1xuXG4gICAgICAkZm9udHMgPSAkKHRoaXMpO1xuXG4gICAgICBpZiAoJGZvbnRzLmhhc0NsYXNzKCdiZmgtc2VsZWN0Ym94JykpIHtcbiAgICAgICAgJGZvbnRzLmJmaHNlbGVjdGJveCgkZm9udHMuZGF0YSgpKTtcbiAgICAgIH1cbiAgICAgICRmb250cy5iZmhmb250cygkZm9udHMuZGF0YSgpKTtcbiAgICB9KTtcbiAgfSk7XG5cbn0od2luZG93LmpRdWVyeSk7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIGJvb3RzdHJhcC1mb3JtaGVscGVycy1mb250c2l6ZXMuanNcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS92bGFtYW5uYS9Cb290c3RyYXBGb3JtSGVscGVyc1xuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogQ29weXJpZ2h0IDIwMTIgVmluY2VudCBMYW1hbm5hXG4gKiBjb250cmlidXRlZCBieSBBYXJvbiBDb2xsZWdlbWFuLCBTcXVpZG9vLCAyMDEyXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbitmdW5jdGlvbiAoJCkge1xuXG4gICd1c2Ugc3RyaWN0JztcblxuXG4gIC8qIEZPTlRTSVpFUyBDTEFTUyBERUZJTklUSU9OXG4gICAqID09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgQkZIRm9udFNpemVzID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgJC5mbi5iZmhmb250c2l6ZXMuZGVmYXVsdHMsIG9wdGlvbnMpO1xuICAgIHRoaXMuJGVsZW1lbnQgPSAkKGVsZW1lbnQpO1xuXG4gICAgaWYgKHRoaXMuJGVsZW1lbnQuaXMoJ3NlbGVjdCcpKSB7XG4gICAgICB0aGlzLmFkZEZvbnRTaXplcygpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCdiZmgtc2VsZWN0Ym94JykpIHtcbiAgICAgIHRoaXMuYWRkQm9vdHN0cmFwRm9udFNpemVzKCk7XG4gICAgfVxuICB9O1xuXG4gIEJGSEZvbnRTaXplcy5wcm90b3R5cGUgPSB7XG5cbiAgICBjb25zdHJ1Y3RvcjogQkZIRm9udFNpemVzLFxuXG4gICAgZ2V0Rm9udHNpemVzOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBmb250c2l6ZSxcbiAgICAgICAgICBmb250c2l6ZXM7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYXZhaWxhYmxlKSB7XG4gICAgICAgIGZvbnRzaXplcyA9IFtdO1xuXG4gICAgICAgIHRoaXMub3B0aW9ucy5hdmFpbGFibGUgPSB0aGlzLm9wdGlvbnMuYXZhaWxhYmxlLnNwbGl0KCcsJyk7XG5cbiAgICAgICAgZm9yIChmb250c2l6ZSBpbiBCRkhGb250U2l6ZXNMaXN0KSB7XG4gICAgICAgICAgaWYgKEJGSEZvbnRTaXplc0xpc3QuaGFzT3duUHJvcGVydHkoZm9udHNpemUpKSB7XG4gICAgICAgICAgICBpZiAoJC5pbkFycmF5KGZvbnRzaXplLCB0aGlzLm9wdGlvbnMuYXZhaWxhYmxlKSA+PSAwKSB7XG4gICAgICAgICAgICAgIGZvbnRzaXplc1tmb250c2l6ZV0gPSBCRkhGb250U2l6ZXNMaXN0W2ZvbnRzaXplXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZm9udHNpemVzO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIEJGSEZvbnRTaXplc0xpc3Q7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGFkZEZvbnRTaXplczogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHZhbHVlLFxuICAgICAgICAgIGZvbnRzaXplLFxuICAgICAgICAgIGZvbnRzaXplcztcblxuICAgICAgdmFsdWUgPSB0aGlzLm9wdGlvbnMuZm9udHNpemU7XG4gICAgICBmb250c2l6ZXMgPSB0aGlzLmdldEZvbnRzaXplcygpO1xuXG4gICAgICB0aGlzLiRlbGVtZW50Lmh0bWwoJycpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmJsYW5rID09PSB0cnVlKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuYXBwZW5kKCc8b3B0aW9uIHZhbHVlPVwiXCI+PC9vcHRpb24+Jyk7XG4gICAgICB9XG5cbiAgICAgIGZvciAoZm9udHNpemUgaW4gZm9udHNpemVzKSB7XG4gICAgICAgIGlmIChmb250c2l6ZXMuaGFzT3duUHJvcGVydHkoZm9udHNpemUpKSB7XG4gICAgICAgICAgdGhpcy4kZWxlbWVudC5hcHBlbmQoJzxvcHRpb24gdmFsdWU9XCInICsgZm9udHNpemUgKyAnXCI+JyArIGZvbnRzaXplc1tmb250c2l6ZV0gKyAnPC9vcHRpb24+Jyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy4kZWxlbWVudC52YWwodmFsdWUpO1xuICAgIH0sXG5cbiAgICBhZGRCb290c3RyYXBGb250U2l6ZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyICRpbnB1dCxcbiAgICAgICAgICAkdG9nZ2xlLFxuICAgICAgICAgICRvcHRpb25zLFxuICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgIGZvbnRzaXplLFxuICAgICAgICAgIGZvbnRzaXplcztcblxuICAgICAgdmFsdWUgPSB0aGlzLm9wdGlvbnMuZm9udHNpemU7XG4gICAgICAkaW5wdXQgPSB0aGlzLiRlbGVtZW50LmZpbmQoJ2lucHV0W3R5cGU9XCJoaWRkZW5cIl0nKTtcbiAgICAgICR0b2dnbGUgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5iZmgtc2VsZWN0Ym94LW9wdGlvbicpO1xuICAgICAgJG9wdGlvbnMgPSB0aGlzLiRlbGVtZW50LmZpbmQoJ1tyb2xlPW9wdGlvbl0nKTtcbiAgICAgIGZvbnRzaXplcyA9IHRoaXMuZ2V0Rm9udHNpemVzKCk7XG5cbiAgICAgICRvcHRpb25zLmh0bWwoJycpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmJsYW5rID09PSB0cnVlKSB7XG4gICAgICAgICRvcHRpb25zLmFwcGVuZCgnPGxpPjxhIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiI1wiIGRhdGEtb3B0aW9uPVwiXCI+PC9hPjwvbGk+Jyk7XG4gICAgICB9XG5cbiAgICAgIGZvciAoZm9udHNpemUgaW4gZm9udHNpemVzKSB7XG4gICAgICAgIGlmIChmb250c2l6ZXMuaGFzT3duUHJvcGVydHkoZm9udHNpemUpKSB7XG4gICAgICAgICAgJG9wdGlvbnMuYXBwZW5kKCc8bGk+PGEgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIjXCIgZGF0YS1vcHRpb249XCInICsgZm9udHNpemUgKyAnXCI+JyArIGZvbnRzaXplc1tmb250c2l6ZV0gKyAnPC9hPjwvbGk+Jyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy4kZWxlbWVudC52YWwodmFsdWUpO1xuICAgIH1cblxuICB9O1xuXG5cbiAgLyogRk9OVFNJWkVTIFBMVUdJTiBERUZJTklUSU9OXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgdmFyIG9sZCA9ICQuZm4uYmZoZm9udHNpemVzO1xuXG4gICQuZm4uYmZoZm9udHNpemVzID0gZnVuY3Rpb24gKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzLFxuICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgb3B0aW9ucztcblxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgZGF0YSA9ICR0aGlzLmRhdGEoJ2JmaGZvbnRzaXplcycpO1xuICAgICAgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT09ICdvYmplY3QnICYmIG9wdGlvbjtcblxuICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICR0aGlzLmRhdGEoJ2JmaGZvbnRzaXplcycsIChkYXRhID0gbmV3IEJGSEZvbnRTaXplcyh0aGlzLCBvcHRpb25zKSkpO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGRhdGFbb3B0aW9uXS5jYWxsKCR0aGlzKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICAkLmZuLmJmaGZvbnRzaXplcy5Db25zdHJ1Y3RvciA9IEJGSEZvbnRTaXplcztcblxuICAkLmZuLmJmaGZvbnRzaXplcy5kZWZhdWx0cyA9IHtcbiAgICBmb250c2l6ZTogJycsXG4gICAgYXZhaWxhYmxlOiAnJyxcbiAgICBibGFuazogdHJ1ZVxuICB9O1xuXG5cbiAgLyogRk9OVFNJWkVTIE5PIENPTkZMSUNUXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgJC5mbi5iZmhmb250c2l6ZXMubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLmJmaGZvbnRzaXplcyA9IG9sZDtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuXG4gIC8qIEZPTlRTSVpFUyBEQVRBLUFQSVxuICAgKiA9PT09PT09PT09PT09PSAqL1xuXG4gICQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiAoKSB7XG4gICAgJCgnZm9ybSBzZWxlY3QuYmZoLWZvbnRzaXplcywgc3Bhbi5iZmgtZm9udHNpemVzLCBkaXYuYmZoLWZvbnRzaXplcycpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICRmb250U2l6ZXM7XG5cbiAgICAgICRmb250U2l6ZXMgPSAkKHRoaXMpO1xuXG4gICAgICBpZiAoJGZvbnRTaXplcy5oYXNDbGFzcygnYmZoLXNlbGVjdGJveCcpKSB7XG4gICAgICAgICRmb250U2l6ZXMuYmZoc2VsZWN0Ym94KCRmb250U2l6ZXMuZGF0YSgpKTtcbiAgICAgIH1cbiAgICAgICRmb250U2l6ZXMuYmZoZm9udHNpemVzKCRmb250U2l6ZXMuZGF0YSgpKTtcbiAgICB9KTtcbiAgfSk7XG5cbn0od2luZG93LmpRdWVyeSk7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIGJvb3RzdHJhcC1mb3JtaGVscGVycy1nb29nbGVmb250cy5qc1xuICogaHR0cHM6Ly9naXRodWIuY29tL3ZsYW1hbm5hL0Jvb3RzdHJhcEZvcm1IZWxwZXJzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMiBWaW5jZW50IExhbWFubmFcbiAqIGNvbnRyaWJ1dGVkIGJ5IEFhcm9uIENvbGxlZ2VtYW4sIFNxdWlkb28sIDIwMTJcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuK2Z1bmN0aW9uICgkKSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG5cbiAgLyogR09PR0xFIEZPTlRTIENMQVNTIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIHZhciBCRkhHb29nbGVGb250cyA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sICQuZm4uYmZoZ29vZ2xlZm9udHMuZGVmYXVsdHMsIG9wdGlvbnMpO1xuICAgIHRoaXMuJGVsZW1lbnQgPSAkKGVsZW1lbnQpO1xuXG4gICAgaWYgKHRoaXMuJGVsZW1lbnQuaXMoJ3NlbGVjdCcpKSB7XG4gICAgICB0aGlzLmFkZEZvbnRzKCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ2JmaC1zZWxlY3Rib3gnKSkge1xuICAgICAgdGhpcy5hZGRCb290c3RyYXBGb250cygpO1xuICAgIH1cbiAgfTtcblxuICBCRkhHb29nbGVGb250cy5wcm90b3R5cGUgPSB7XG5cbiAgICBjb25zdHJ1Y3RvcjogQkZIR29vZ2xlRm9udHMsXG5cbiAgICBnZXRGb250czogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgZm9udCxcbiAgICAgICAgICBmb250cztcblxuICAgICAgZm9udHMgPSBbXTtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5zdWJzZXQpIHtcbiAgICAgICAgZm9yIChmb250IGluIEJGSEdvb2dsZUZvbnRzTGlzdC5pdGVtcykge1xuICAgICAgICAgIGlmIChCRkhHb29nbGVGb250c0xpc3QuaXRlbXMuaGFzT3duUHJvcGVydHkoZm9udCkpIHtcbiAgICAgICAgICAgIGlmICgkLmluQXJyYXkodGhpcy5vcHRpb25zLnN1YnNldCwgQkZIR29vZ2xlRm9udHNMaXN0Lml0ZW1zW2ZvbnRdLnN1YnNldHMpID49IDApIHtcbiAgICAgICAgICAgICAgZm9udHNbQkZIR29vZ2xlRm9udHNMaXN0Lml0ZW1zW2ZvbnRdLmZhbWlseV0gPSB7XG4gICAgICAgICAgICAgICAgJ2luZm8nOiBCRkhHb29nbGVGb250c0xpc3QuaXRlbXNbZm9udF0sXG4gICAgICAgICAgICAgICAgJ2luZGV4JzogcGFyc2VJbnQoZm9udCwgMTApXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHRoaXMub3B0aW9ucy5hdmFpbGFibGUpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zLmF2YWlsYWJsZSA9IHRoaXMub3B0aW9ucy5hdmFpbGFibGUuc3BsaXQoJywnKTtcblxuICAgICAgICBmb3IgKGZvbnQgaW4gQkZIR29vZ2xlRm9udHNMaXN0Lml0ZW1zKSB7XG4gICAgICAgICAgaWYgKEJGSEdvb2dsZUZvbnRzTGlzdC5pdGVtcy5oYXNPd25Qcm9wZXJ0eShmb250KSkge1xuICAgICAgICAgICAgaWYgKCQuaW5BcnJheShCRkhHb29nbGVGb250c0xpc3QuaXRlbXNbZm9udF0uZmFtaWx5LCB0aGlzLm9wdGlvbnMuYXZhaWxhYmxlKSA+PSAwKSB7XG4gICAgICAgICAgICAgIGZvbnRzW0JGSEdvb2dsZUZvbnRzTGlzdC5pdGVtc1tmb250XS5mYW1pbHldID0ge1xuICAgICAgICAgICAgICAgICdpbmZvJzogQkZIR29vZ2xlRm9udHNMaXN0Lml0ZW1zW2ZvbnRdLFxuICAgICAgICAgICAgICAgICdpbmRleCc6IHBhcnNlSW50KGZvbnQsIDEwKVxuICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yIChmb250IGluIEJGSEdvb2dsZUZvbnRzTGlzdC5pdGVtcykge1xuICAgICAgICAgIGlmIChCRkhHb29nbGVGb250c0xpc3QuaXRlbXMuaGFzT3duUHJvcGVydHkoZm9udCkpIHtcbiAgICAgICAgICAgIGZvbnRzW0JGSEdvb2dsZUZvbnRzTGlzdC5pdGVtc1tmb250XS5mYW1pbHldID0ge1xuICAgICAgICAgICAgICAnaW5mbyc6IEJGSEdvb2dsZUZvbnRzTGlzdC5pdGVtc1tmb250XSxcbiAgICAgICAgICAgICAgJ2luZGV4JzogcGFyc2VJbnQoZm9udCwgMTApXG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZm9udHM7XG4gICAgfSxcblxuICAgIGFkZEZvbnRzOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdmFsdWUsXG4gICAgICAgICAgZm9udCxcbiAgICAgICAgICBmb250cztcblxuICAgICAgdmFsdWUgPSB0aGlzLm9wdGlvbnMuZm9udDtcbiAgICAgIGZvbnRzID0gdGhpcy5nZXRGb250cygpO1xuXG4gICAgICB0aGlzLiRlbGVtZW50Lmh0bWwoJycpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmJsYW5rID09PSB0cnVlKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuYXBwZW5kKCc8b3B0aW9uIHZhbHVlPVwiXCI+PC9vcHRpb24+Jyk7XG4gICAgICB9XG5cbiAgICAgIGZvciAoZm9udCBpbiBmb250cykge1xuICAgICAgICBpZiAoZm9udHMuaGFzT3duUHJvcGVydHkoZm9udCkpIHtcbiAgICAgICAgICB0aGlzLiRlbGVtZW50LmFwcGVuZCgnPG9wdGlvbiB2YWx1ZT1cIicgKyBmb250c1tmb250XS5pbmZvLmZhbWlseSArICdcIj4nICsgZm9udHNbZm9udF0uaW5mby5mYW1pbHkgKyAnPC9vcHRpb24+Jyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy9Eb25uYSBTdGFydFxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5zaG93Q3VzdG9tKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuYXBwZW5kKCc8b3B0aW9uIHZhbHVlPVwiQ3VzdG9tXCI+VXNlIEN1c3RvbSBGb250PC9vcHRpb24+Jyk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2hvd01vcmUpIHtcbiAgICAgICAgdGhpcy4kZWxlbWVudC5hcHBlbmQoJzxvcHRpb24gdmFsdWU9XCJHb29nbGVcIj5Nb3JlIEZvbnRzLi4uPC9vcHRpb24+Jyk7XG4gICAgICB9XG4gICAgICAvL0Rvbm5hIEVuZFxuXG4gICAgICB0aGlzLiRlbGVtZW50LnZhbCh2YWx1ZSk7XG4gICAgfSxcblxuICAgIGFkZEJvb3RzdHJhcEZvbnRzOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciAkaW5wdXQsXG4gICAgICAgICAgJHRvZ2dsZSxcbiAgICAgICAgICAkb3B0aW9ucyxcbiAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICBmb250LFxuICAgICAgICAgIGZvbnRzO1xuXG4gICAgICB2YWx1ZSA9IHRoaXMub3B0aW9ucy5mb250O1xuICAgICAgJGlucHV0ID0gdGhpcy4kZWxlbWVudC5maW5kKCdpbnB1dFt0eXBlPVwiaGlkZGVuXCJdJyk7XG4gICAgICAkdG9nZ2xlID0gdGhpcy4kZWxlbWVudC5maW5kKCcuYmZoLXNlbGVjdGJveC1vcHRpb24nKTtcbiAgICAgICRvcHRpb25zID0gdGhpcy4kZWxlbWVudC5maW5kKCdbcm9sZT1vcHRpb25dJyk7XG4gICAgICBmb250cyA9IHRoaXMuZ2V0Rm9udHMoKTtcblxuICAgICAgJG9wdGlvbnMuaHRtbCgnJyk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYmxhbmsgPT09IHRydWUpIHtcbiAgICAgICAgJG9wdGlvbnMuYXBwZW5kKCc8bGk+PGEgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIjXCIgZGF0YS1vcHRpb249XCJcIiBzdHlsZT1cImJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XCI+PC9hPjwvbGk+Jyk7XG4gICAgICB9XG5cbiAgICAgIGZvciAoZm9udCBpbiBmb250cykge1xuICAgICAgICBpZiAoZm9udHMuaGFzT3duUHJvcGVydHkoZm9udCkpIHtcbiAgICAgICAgICAkb3B0aW9ucy5hcHBlbmQoJzxsaT48YSB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIiNcIiBzdHlsZT1cImJhY2tncm91bmQtcG9zaXRpb246IDAgLScgKyAoKGZvbnRzW2ZvbnRdLmluZGV4ICogMzApIC0gMikgKyAncHg7XCIgZGF0YS1vcHRpb249XCInICsgZm9udHNbZm9udF0uaW5mby5mYW1pbHkgKyAnXCI+JyArIGZvbnRzW2ZvbnRdLmluZm8uZmFtaWx5ICsgJzwvYT48L2xpPicpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vRG9ubmEgU3RhcnRcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2hvd0N1c3RvbSkge1xuICAgICAgICAkb3B0aW9ucy5hcHBlbmQoJzxsaT48YSB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIiNcIiBzdHlsZT1cXCdmb250LWZhbWlseTogQ3VzdG9tXFwnIGRhdGEtb3B0aW9uPVwiVXNlIEN1c3RvbSBGb250XCI+VXNlIEN1c3RvbSBGb250PC9hPjwvbGk+Jyk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuc2hvd01vcmUpIHtcbiAgICAgICAgJG9wdGlvbnMuYXBwZW5kKCc8bGk+PGEgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIjXCIgc3R5bGU9XFwnZm9udC1mYW1pbHk6IEdvb2dsZVxcJyBkYXRhLW9wdGlvbj1cIk1vcmUgRm9udHMuLi5cIj5Nb3JlIEZvbnRzLi4uPC9hPjwvbGk+Jyk7XG4gICAgICB9XG4gICAgICAvL0Rvbm5hIEVuZFxuXG4gICAgICB0aGlzLiRlbGVtZW50LnZhbCh2YWx1ZSk7XG4gICAgfVxuXG4gIH07XG5cblxuICAvKiBHT09HTEUgRk9OVFMgUExVR0lOIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgb2xkID0gJC5mbi5iZmhnb29nbGVmb250cztcblxuICAkLmZuLmJmaGdvb2dsZWZvbnRzID0gZnVuY3Rpb24gKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzLFxuICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgb3B0aW9ucztcblxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgZGF0YSA9ICR0aGlzLmRhdGEoJ2JmaGdvb2dsZWZvbnRzJyk7XG4gICAgICBvcHRpb25zID0gdHlwZW9mIG9wdGlvbiA9PT0gJ29iamVjdCcgJiYgb3B0aW9uO1xuXG4gICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgJHRoaXMuZGF0YSgnYmZoZ29vZ2xlZm9udHMnLCAoZGF0YSA9IG5ldyBCRkhHb29nbGVGb250cyh0aGlzLCBvcHRpb25zKSkpO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGRhdGFbb3B0aW9uXS5jYWxsKCR0aGlzKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICAkLmZuLmJmaGdvb2dsZWZvbnRzLkNvbnN0cnVjdG9yID0gQkZIR29vZ2xlRm9udHM7XG5cbiAgJC5mbi5iZmhnb29nbGVmb250cy5kZWZhdWx0cyA9IHtcbiAgICBmb250OiAnJyxcbiAgICBhdmFpbGFibGU6ICcnLFxuICAgIHN1YnNldDogJycsXG4gICAgYmxhbms6IHRydWVcbiAgfTtcblxuXG4gIC8qIEdPT0dMRSBGT05UUyBOTyBDT05GTElDVFxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICQuZm4uYmZoZ29vZ2xlZm9udHMubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLmJmaGdvb2dsZWZvbnRzID0gb2xkO1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG5cbiAgLyogR09PR0xFIEZPTlRTIERBVEEtQVBJXG4gICAqID09PT09PT09PT09PT09ICovXG5cbiAgJChkb2N1bWVudCkucmVhZHkoIGZ1bmN0aW9uICgpIHtcbiAgICAkKCdmb3JtIHNlbGVjdC5iZmgtZ29vZ2xlZm9udHMsIHNwYW4uYmZoLWdvb2dsZWZvbnRzLCBkaXYuYmZoLWdvb2dsZWZvbnRzJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJGdvb2dsZUZvbnRzO1xuXG4gICAgICAkZ29vZ2xlRm9udHMgPSAkKHRoaXMpO1xuXG4gICAgICBpZiAoJGdvb2dsZUZvbnRzLmhhc0NsYXNzKCdiZmgtc2VsZWN0Ym94JykpIHtcbiAgICAgICAgJGdvb2dsZUZvbnRzLmJmaHNlbGVjdGJveCgkZ29vZ2xlRm9udHMuZGF0YSgpKTtcbiAgICAgIH1cbiAgICAgICRnb29nbGVGb250cy5iZmhnb29nbGVmb250cygkZ29vZ2xlRm9udHMuZGF0YSgpKTtcbiAgICB9KTtcbiAgfSk7XG5cbn0od2luZG93LmpRdWVyeSk7XG5cbi8qIERvbm5hIFN0YXJ0ICovXG4hIGZ1bmN0aW9uKCQpIHtcblxuICAndXNlIHN0cmljdCc7XG5cbiAgLyogRk9OVCBMSVNUIENMQVNTIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIHZhciBCRkhHb29nbGVGb250TGlzdCA9IGZ1bmN0aW9uKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB2YXIgaSwgZiwgZm9udCwgYWxsaGF2ZTtcblxuICAgIHRoaXMub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCAkLmZuLmJmaGdvb2dsZWZvbnRsaXN0LmRlZmF1bHRzLCBvcHRpb25zKTtcbiAgICB0aGlzLiRlbGVtZW50ID0gJChlbGVtZW50KTtcbiAgICB0aGlzLmZhbWlseUxpc3QgPSB7fTtcblxuICAgIGZvciAoaSBpbiBCRkhHb29nbGVGb250c0xpc3QuaXRlbXMpIHtcbiAgICAgIGlmIChCRkhHb29nbGVGb250c0xpc3QuaXRlbXMuaGFzT3duUHJvcGVydHkoaSkpIHtcbiAgICAgICAgZm9udCA9IEJGSEdvb2dsZUZvbnRzTGlzdC5pdGVtc1tpXTtcbiAgICAgICAgdGhpcy5mYW1pbHlMaXN0W2ZvbnQuZmFtaWx5XSA9IHtcbiAgICAgICAgICAnZm9udCcgOiBCRkhHb29nbGVGb250c0xpc3QuaXRlbXNbaV0sXG4gICAgICAgICAgJ2knIDogcGFyc2VJbnQoaSwgMTApXG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5hZGRGb250cygpO1xuICB9O1xuXG4gIEJGSEdvb2dsZUZvbnRMaXN0LnByb3RvdHlwZSA9IHtcblxuICAgIGNvbnN0cnVjdG9yIDogQkZIR29vZ2xlRm9udExpc3QsXG5cbiAgICBhZGRGb250cyA6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHZhbHVlLCBmLCAkaXRlbSwgZW50cnksIHNlbGYgPSB0aGlzO1xuXG4gICAgICB2YWx1ZSA9IHRoaXMub3B0aW9ucy5mYW1pbHk7XG5cbiAgICAgIHRoaXMuJGVsZW1lbnQuaHRtbCgnJyk7XG4gICAgICB2YXIgYmluZE1lID0gZnVuY3Rpb24oZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHNlbGYuJGVsZW1lbnQudHJpZ2dlcignc2VsZWN0JywgJCh0aGlzKS5kYXRhKCdvcHRpb24nKSk7XG4gICAgICB9O1xuICAgICAgZm9yIChmIGluIHRoaXMuZmFtaWx5TGlzdCkge1xuICAgICAgICBpZiAodGhpcy5mYW1pbHlMaXN0Lmhhc093blByb3BlcnR5KGYpKSB7XG4gICAgICAgICAgZW50cnkgPSB0aGlzLmZhbWlseUxpc3RbZl07XG4gICAgICAgICAgJGl0ZW0gPSAkKCc8YSBocmVmPVwiI1wiIGNsYXNzPVwibGlzdC1ncm91cC1pdGVtXCIgc3R5bGU9XCJiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwIC0nICsgKChlbnRyeS5pICogMzApIC0gMikgKyAncHg7XCIgZGF0YS1vcHRpb249XCInICsgZW50cnkuZm9udC5mYW1pbHkgKyAnXCI+JyArIGVudHJ5LmZvbnQuZmFtaWx5ICsgJzwvYT4nKTtcblxuICAgICAgICAgICRpdGVtLmJpbmQoJ2NsaWNrJywgYmluZE1lKTtcbiAgICAgICAgICB0aGlzLiRlbGVtZW50LmFwcGVuZCgkaXRlbSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgLyogRk9OVCBMSVNUIFBMVUdJTiBERUZJTklUSU9OXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgJC5mbi5iZmhnb29nbGVmb250bGlzdCA9IGZ1bmN0aW9uKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgJHRoaXMsIGRhdGEsIG9wdGlvbnM7XG5cbiAgICAgICR0aGlzID0gJCh0aGlzKTtcbiAgICAgIGRhdGEgPSAkdGhpcy5kYXRhKCdiZmhnb29nbGVmb250bGlzdCcpO1xuICAgICAgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT09ICdvYmplY3QnICYmIG9wdGlvbjtcbiAgICAgIHRoaXMudHlwZSA9ICdiZmhnb29nbGVmb250bGlzdCc7XG5cbiAgICAgIGlmICghZGF0YSkge1xuICAgICAgICAkdGhpcy5kYXRhKCdiZmhnb29nbGVmb250bGlzdCcsICggZGF0YSA9IG5ldyBCRkhHb29nbGVGb250TGlzdCh0aGlzLCBvcHRpb25zKSkpO1xuICAgICAgfVxuICAgICAgaWYgKCB0eXBlb2Ygb3B0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgICBkYXRhW29wdGlvbl0oKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICAkLmZuLmJmaGdvb2dsZWZvbnRsaXN0LkNvbnN0cnVjdG9yID0gQkZIR29vZ2xlRm9udExpc3Q7XG5cbiAgJC5mbi5iZmhnb29nbGVmb250bGlzdC5kZWZhdWx0cyA9IHtcbiAgICBmYW1pbHkgOiAnJ1xuICB9O1xuXG4gIC8qIEZPTlQgTElTVCBEQVRBLUFQSVxuICAgKiA9PT09PT09PT09PT09PSAqL1xuXG4gICQod2luZG93KS5vbignbG9hZCcsIGZ1bmN0aW9uKCkge1xuICAgICQoJ2Rpdi5iZmgtZ29vZ2xlZm9udGxpc3QnKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyICRnb29nbGVGb250TGlzdDtcblxuICAgICAgJGdvb2dsZUZvbnRMaXN0ID0gJCh0aGlzKTtcblxuICAgICAgJGdvb2dsZUZvbnRMaXN0LmJmaGdvb2dsZWZvbnRsaXN0KCRnb29nbGVGb250TGlzdC5kYXRhKCkpO1xuICAgIH0pO1xuICB9KTtcblxufSh3aW5kb3cualF1ZXJ5KTtcbi8qIERvbm5hIEVuZCAqL1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBib290c3RyYXAtZm9ybWhlbHBlcnMtbGFuZ3VhZ2VzLmpzXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdmxhbWFubmEvQm9vdHN0cmFwRm9ybUhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDEyIFZpbmNlbnQgTGFtYW5uYVxuICogQ29udHJpYnV0aW9uIDIwMTMgVG9tYXN6IEt1dGVyXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbitmdW5jdGlvbiAoJCkge1xuXG4gICd1c2Ugc3RyaWN0JztcblxuXG4gIC8qIExBTkdVQUdFUyBDTEFTUyBERUZJTklUSU9OXG4gICAqID09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgQkZITGFuZ3VhZ2VzID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgJC5mbi5iZmhsYW5ndWFnZXMuZGVmYXVsdHMsIG9wdGlvbnMpO1xuICAgIHRoaXMuJGVsZW1lbnQgPSAkKGVsZW1lbnQpO1xuXG4gICAgaWYgKHRoaXMuJGVsZW1lbnQuaXMoJ3NlbGVjdCcpKSB7XG4gICAgICB0aGlzLmFkZExhbmd1YWdlcygpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLiRlbGVtZW50LmlzKCdzcGFuJykpIHtcbiAgICAgIHRoaXMuZGlzcGxheUxhbmd1YWdlKCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ2JmaC1zZWxlY3Rib3gnKSkge1xuICAgICAgdGhpcy5hZGRCb290c3RyYXBMYW5ndWFnZXMoKTtcbiAgICB9XG4gIH07XG5cbiAgQkZITGFuZ3VhZ2VzLnByb3RvdHlwZSA9IHtcblxuICAgIGNvbnN0cnVjdG9yOiBCRkhMYW5ndWFnZXMsXG5cbiAgICBnZXRMYW5ndWFnZXM6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBzcGxpdCxcbiAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICBsYW5ndWFnZXM7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYXZhaWxhYmxlKSB7XG4gICAgICAgIGxhbmd1YWdlcyA9IFtdO1xuXG4gICAgICAgIHRoaXMub3B0aW9ucy5hdmFpbGFibGUgPSB0aGlzLm9wdGlvbnMuYXZhaWxhYmxlLnNwbGl0KCcsJyk7XG5cbiAgICAgICAgZm9yIChsYW5ndWFnZSBpbiB0aGlzLm9wdGlvbnMuYXZhaWxhYmxlKSB7XG4gICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5hdmFpbGFibGUuaGFzT3duUHJvcGVydHkobGFuZ3VhZ2UpKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zLmF2YWlsYWJsZVtsYW5ndWFnZV0uaW5kZXhPZignXycpICE9PSAtMSkge1xuICAgICAgICAgICAgICBzcGxpdCA9IHRoaXMub3B0aW9ucy5hdmFpbGFibGVbbGFuZ3VhZ2VdLnNwbGl0KCdfJyk7XG4gICAgICAgICAgICAgIGxhbmd1YWdlc1tzcGxpdFswXV0gPSB7bmFtZTogQkZITGFuZ3VhZ2VzTGlzdFtzcGxpdFswXV0sIGNvdW50cnk6IHNwbGl0WzFdfTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGxhbmd1YWdlc1t0aGlzLm9wdGlvbnMuYXZhaWxhYmxlW2xhbmd1YWdlXV0gPSBCRkhMYW5ndWFnZXNMaXN0W3RoaXMub3B0aW9ucy5hdmFpbGFibGVbbGFuZ3VhZ2VdXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbGFuZ3VhZ2VzO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIEJGSExhbmd1YWdlc0xpc3Q7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGFkZExhbmd1YWdlczogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHNwbGl0LFxuICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgIGxhbmd1YWdlcyxcbiAgICAgICAgICBsYW5ndWFnZTtcblxuICAgICAgdmFsdWUgPSB0aGlzLm9wdGlvbnMubGFuZ3VhZ2U7XG4gICAgICBsYW5ndWFnZXMgPSB0aGlzLmdldExhbmd1YWdlcygpO1xuXG4gICAgICB0aGlzLiRlbGVtZW50Lmh0bWwoJycpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmJsYW5rID09PSB0cnVlKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQuYXBwZW5kKCc8b3B0aW9uIHZhbHVlPVwiXCI+PC9vcHRpb24+Jyk7XG4gICAgICB9XG5cbiAgICAgIGZvciAobGFuZ3VhZ2UgaW4gbGFuZ3VhZ2VzKSB7XG4gICAgICAgIGlmIChsYW5ndWFnZXMuaGFzT3duUHJvcGVydHkobGFuZ3VhZ2UpKSB7XG4gICAgICAgICAgaWYgKGxhbmd1YWdlc1tsYW5ndWFnZV0uaGFzT3duUHJvcGVydHkoJ25hbWUnKSkge1xuICAgICAgICAgICAgdGhpcy4kZWxlbWVudC5hcHBlbmQoJzxvcHRpb24gdmFsdWU9XCInICsgbGFuZ3VhZ2UgKyAnXycgKyBsYW5ndWFnZXNbbGFuZ3VhZ2VdLmNvdW50cnkgKyAnXCI+JyArIGxhbmd1YWdlc1tsYW5ndWFnZV0ubmFtZS50b1Byb3BlckNhc2UoKSArICcgKCcgKyBCRkhDb3VudHJpZXNMaXN0W2xhbmd1YWdlc1tsYW5ndWFnZV0uY291bnRyeV0gKyAnKTwvb3B0aW9uPicpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLiRlbGVtZW50LmFwcGVuZCgnPG9wdGlvbiB2YWx1ZT1cIicgKyBsYW5ndWFnZSArICdcIj4nICsgbGFuZ3VhZ2VzW2xhbmd1YWdlXS50b1Byb3BlckNhc2UoKSArICc8L29wdGlvbj4nKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy4kZWxlbWVudC52YWwodmFsdWUpO1xuICAgIH0sXG5cbiAgICBhZGRCb290c3RyYXBMYW5ndWFnZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyICRpbnB1dCxcbiAgICAgICAgICAkdG9nZ2xlLFxuICAgICAgICAgICRvcHRpb25zLFxuICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgIGxhbmd1YWdlcyxcbiAgICAgICAgICBsYW5ndWFnZSxcbiAgICAgICAgICBzcGxpdDtcblxuICAgICAgdmFsdWUgPSB0aGlzLm9wdGlvbnMubGFuZ3VhZ2U7XG4gICAgICAkaW5wdXQgPSB0aGlzLiRlbGVtZW50LmZpbmQoJ2lucHV0W3R5cGU9XCJoaWRkZW5cIl0nKTtcbiAgICAgICR0b2dnbGUgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5iZmgtc2VsZWN0Ym94LW9wdGlvbicpO1xuICAgICAgJG9wdGlvbnMgPSB0aGlzLiRlbGVtZW50LmZpbmQoJ1tyb2xlPW9wdGlvbl0nKTtcbiAgICAgIGxhbmd1YWdlcyA9IHRoaXMuZ2V0TGFuZ3VhZ2VzKCk7XG5cbiAgICAgICRvcHRpb25zLmh0bWwoJycpO1xuXG4gICAgICBpZiAodGhpcy5vcHRpb25zLmJsYW5rID09PSB0cnVlKSB7XG4gICAgICAgICRvcHRpb25zLmFwcGVuZCgnPGxpPjxhIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiI1wiIGRhdGEtb3B0aW9uPVwiXCI+PC9hPjwvbGk+Jyk7XG4gICAgICB9XG5cbiAgICAgIGZvciAobGFuZ3VhZ2UgaW4gbGFuZ3VhZ2VzKSB7XG4gICAgICAgIGlmIChsYW5ndWFnZXMuaGFzT3duUHJvcGVydHkobGFuZ3VhZ2UpKSB7XG4gICAgICAgICAgaWYgKGxhbmd1YWdlc1tsYW5ndWFnZV0uaGFzT3duUHJvcGVydHkoJ25hbWUnKSkge1xuICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5mbGFncyA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAkb3B0aW9ucy5hcHBlbmQoJzxsaT48YSB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIiNcIiBkYXRhLW9wdGlvbj1cIicgKyBsYW5ndWFnZSArICdfJyArIGxhbmd1YWdlc1tsYW5ndWFnZV0uY291bnRyeSArICdcIj48aSBjbGFzcz1cImdseXBoaWNvbiBiZmgtZmxhZy0nICsgbGFuZ3VhZ2VzW2xhbmd1YWdlXS5jb3VudHJ5ICsgJ1wiPjwvaT4nICsgbGFuZ3VhZ2VzW2xhbmd1YWdlXS5uYW1lLnRvUHJvcGVyQ2FzZSgpICsgJzwvYT48L2xpPicpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgJG9wdGlvbnMuYXBwZW5kKCc8bGk+PGEgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIjXCIgZGF0YS1vcHRpb249XCInICsgbGFuZ3VhZ2UgKyAnXycgKyBsYW5ndWFnZXNbbGFuZ3VhZ2VdLmNvdW50cnkgKyAnXCI+JyArIGxhbmd1YWdlc1tsYW5ndWFnZV0ubmFtZS50b1Byb3BlckNhc2UoKSArICcgKCcgKyBCRkhDb3VudHJpZXNMaXN0W2xhbmd1YWdlc1tsYW5ndWFnZV0uY291bnRyeV0gKyAnKTwvYT48L2xpPicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAkb3B0aW9ucy5hcHBlbmQoJzxsaT48YSB0YWJpbmRleD1cIi0xXCIgaHJlZj1cIiNcIiBkYXRhLW9wdGlvbj1cIicgKyBsYW5ndWFnZSArICdcIj4nICsgbGFuZ3VhZ2VzW2xhbmd1YWdlXSArICc8L2E+PC9saT4nKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy4kZWxlbWVudC52YWwodmFsdWUpO1xuICAgIH0sXG5cbiAgICBkaXNwbGF5TGFuZ3VhZ2U6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciB2YWx1ZTtcblxuICAgICAgdmFsdWUgPSB0aGlzLm9wdGlvbnMubGFuZ3VhZ2U7XG5cbiAgICAgIGlmICh2YWx1ZS5pbmRleE9mKCdfJykgIT09IC0xKSB7XG4gICAgICAgIHZhbHVlID0gdmFsdWUuc3BsaXQoJ18nKTtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5mbGFncyA9PT0gdHJ1ZSkge1xuICAgICAgICAgIHRoaXMuJGVsZW1lbnQuaHRtbCgnPGkgY2xhc3M9XCJnbHlwaGljb24gYmZoLWZsYWctJyArIHZhbHVlWzFdICsgJ1wiPjwvaT4gJyArIEJGSExhbmd1YWdlc0xpc3RbdmFsdWVbMF1dLnRvUHJvcGVyQ2FzZSgpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLiRlbGVtZW50Lmh0bWwoQkZITGFuZ3VhZ2VzTGlzdFt2YWx1ZVswXV0udG9Qcm9wZXJDYXNlKCkgKyAnICgnICsgQkZIQ291bnRyaWVzTGlzdFt2YWx1ZVsxXV0gKyAnKScpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLiRlbGVtZW50Lmh0bWwoQkZITGFuZ3VhZ2VzTGlzdFt2YWx1ZV0udG9Qcm9wZXJDYXNlKCkpO1xuICAgICAgfVxuICAgIH1cblxuICB9O1xuXG5cbiAgLyogTEFOR1VBR0VTIFBMVUdJTiBERUZJTklUSU9OXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgdmFyIG9sZCA9ICQuZm4uYmZobGFuZ3VhZ2VzO1xuXG4gICQuZm4uYmZobGFuZ3VhZ2VzID0gZnVuY3Rpb24gKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzLFxuICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgb3B0aW9ucztcblxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgZGF0YSA9ICR0aGlzLmRhdGEoJ2JmaGxhbmd1YWdlcycpO1xuICAgICAgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT09ICdvYmplY3QnICYmIG9wdGlvbjtcblxuICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICR0aGlzLmRhdGEoJ2JmaGxhbmd1YWdlcycsIChkYXRhID0gbmV3IEJGSExhbmd1YWdlcyh0aGlzLCBvcHRpb25zKSkpO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGRhdGFbb3B0aW9uXS5jYWxsKCR0aGlzKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICAkLmZuLmJmaGxhbmd1YWdlcy5Db25zdHJ1Y3RvciA9IEJGSExhbmd1YWdlcztcblxuICAkLmZuLmJmaGxhbmd1YWdlcy5kZWZhdWx0cyA9IHtcbiAgICBsYW5ndWFnZTogJycsXG4gICAgYXZhaWxhYmxlOiAnJyxcbiAgICBmbGFnczogZmFsc2UsXG4gICAgYmxhbms6IHRydWVcbiAgfTtcblxuXG4gIC8qIExBTkdVQUdFUyBOTyBDT05GTElDVFxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICQuZm4uYmZobGFuZ3VhZ2VzLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5iZmhsYW5ndWFnZXMgPSBvbGQ7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cblxuICAvKiBMQU5HVUFHRVMgREFUQS1BUElcbiAgICogPT09PT09PT09PT09PT0gKi9cblxuICAkKGRvY3VtZW50KS5yZWFkeSggZnVuY3Rpb24gKCkge1xuICAgICQoJ2Zvcm0gc2VsZWN0LmJmaC1sYW5ndWFnZXMsIHNwYW4uYmZoLWxhbmd1YWdlcywgZGl2LmJmaC1sYW5ndWFnZXMnKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkbGFuZ3VhZ2VzO1xuXG4gICAgICAkbGFuZ3VhZ2VzID0gJCh0aGlzKTtcblxuICAgICAgaWYgKCRsYW5ndWFnZXMuaGFzQ2xhc3MoJ2JmaC1zZWxlY3Rib3gnKSkge1xuICAgICAgICAkbGFuZ3VhZ2VzLmJmaHNlbGVjdGJveCgkbGFuZ3VhZ2VzLmRhdGEoKSk7XG4gICAgICB9XG4gICAgICAkbGFuZ3VhZ2VzLmJmaGxhbmd1YWdlcygkbGFuZ3VhZ2VzLmRhdGEoKSk7XG4gICAgfSk7XG4gIH0pO1xuXG5cbiAgLyogTEFOR1VBR0VTIEhFTFBFUlNcbiAgICogPT09PT09PT09PT09PT0gKi9cblxuICBTdHJpbmcucHJvdG90eXBlLnRvUHJvcGVyQ2FzZSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5yZXBsYWNlKC9cXHdcXFMqL2csIGZ1bmN0aW9uKHR4dCl7cmV0dXJuIHR4dC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHR4dC5zdWJzdHIoMSkudG9Mb3dlckNhc2UoKTt9KTtcbiAgfTtcblxufSh3aW5kb3cualF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogYm9vdHN0cmFwLWZvcm1oZWxwZXJzLW51bWJlci5qc1xuICogaHR0cHM6Ly9naXRodWIuY29tL3ZsYW1hbm5hL0Jvb3RzdHJhcEZvcm1IZWxwZXJzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMiBWaW5jZW50IExhbWFubmFcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuK2Z1bmN0aW9uICgkKSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG5cbiAgLyogTlVNQkVSIENMQVNTIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIHZhciBCRkhOdW1iZXIgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCAkLmZuLmJmaG51bWJlci5kZWZhdWx0cywgb3B0aW9ucyk7XG4gICAgdGhpcy4kZWxlbWVudCA9ICQoZWxlbWVudCk7XG5cbiAgICB0aGlzLmluaXRJbnB1dCgpO1xuICB9O1xuXG4gIEJGSE51bWJlci5wcm90b3R5cGUgPSB7XG5cbiAgICBjb25zdHJ1Y3RvcjogQkZITnVtYmVyLFxuXG4gICAgaW5pdElucHV0OiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB2YWx1ZTtcbiAgICAgIFxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5idXR0b25zID09PSB0cnVlKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQud3JhcCgnPGRpdiBjbGFzcz1cImlucHV0LWdyb3VwXCI+PC9kaXY+Jyk7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQucGFyZW50KCkuYXBwZW5kKCc8c3BhbiBjbGFzcz1cImlucHV0LWdyb3VwLWFkZG9uIGJmaC1udW1iZXItYnRuIGluY1wiPjxzcGFuIGNsYXNzPVwiZ2x5cGhpY29uIGdseXBoaWNvbi1jaGV2cm9uLXVwXCI+PC9zcGFuPjwvc3Bhbj4nKTtcbiAgICAgICAgdGhpcy4kZWxlbWVudC5wYXJlbnQoKS5hcHBlbmQoJzxzcGFuIGNsYXNzPVwiaW5wdXQtZ3JvdXAtYWRkb24gYmZoLW51bWJlci1idG4gZGVjXCI+PHNwYW4gY2xhc3M9XCJnbHlwaGljb24gZ2x5cGhpY29uLWNoZXZyb24tZG93blwiPjwvc3Bhbj48L3NwYW4+Jyk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHRoaXMuJGVsZW1lbnQub24oJ2NoYW5nZS5iZmhudW1iZXIuZGF0YS1hcGknLCBCRkhOdW1iZXIucHJvdG90eXBlLmNoYW5nZSk7XG4gICAgICAgIFxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5rZXlib2FyZCA9PT0gdHJ1ZSkge1xuICAgICAgICB0aGlzLiRlbGVtZW50Lm9uKCdrZXlkb3duLmJmaG51bWJlci5kYXRhLWFwaScsIEJGSE51bWJlci5wcm90b3R5cGUua2V5ZG93bik7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYnV0dG9ucyA9PT0gdHJ1ZSkge1xuICAgICAgICB0aGlzLiRlbGVtZW50LnBhcmVudCgpXG4gICAgICAgICAgLm9uKCdtb3VzZWRvd24uYmZobnVtYmVyLmRhdGEtYXBpJywgJy5pbmMnLCBCRkhOdW1iZXIucHJvdG90eXBlLmJ0bmluYylcbiAgICAgICAgICAub24oJ21vdXNlZG93bi5iZmhudW1iZXIuZGF0YS1hcGknLCAnLmRlYycsIEJGSE51bWJlci5wcm90b3R5cGUuYnRuZGVjKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdGhpcy5mb3JtYXROdW1iZXIoKTtcbiAgICB9LFxuICAgIFxuICAgIGtleWRvd246IGZ1bmN0aW9uKGUpIHtcbiAgICAgIHZhciAkdGhpcztcbiAgICAgIFxuICAgICAgJHRoaXMgPSAkKHRoaXMpLmRhdGEoJ2JmaG51bWJlcicpO1xuICAgICAgXG4gICAgICBpZiAoJHRoaXMuJGVsZW1lbnQuaXMoJy5kaXNhYmxlZCcpIHx8ICR0aGlzLiRlbGVtZW50LmF0dHIoJ2Rpc2FibGVkJykgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgc3dpdGNoIChlLndoaWNoKSB7XG4gICAgICAgIGNhc2UgMzg6XG4gICAgICAgICAgJHRoaXMuaW5jcmVtZW50KCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgNDA6XG4gICAgICAgICAgJHRoaXMuZGVjcmVtZW50KCk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICB9XG4gICAgICBcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gICAgXG4gICAgbW91c2V1cDogZnVuY3Rpb24oZSkge1xuICAgICAgdmFyICR0aGlzLFxuICAgICAgICAgIHRpbWVyLFxuICAgICAgICAgIGludGVydmFsO1xuICAgICAgXG4gICAgICAkdGhpcyA9IGUuZGF0YS5idG47XG4gICAgICB0aW1lciA9ICR0aGlzLiRlbGVtZW50LmRhdGEoJ3RpbWVyJyk7XG4gICAgICBpbnRlcnZhbCA9ICR0aGlzLiRlbGVtZW50LmRhdGEoJ2ludGVydmFsJyk7XG4gICAgICBcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG4gICAgICBjbGVhckludGVydmFsKGludGVydmFsKTtcbiAgICB9LFxuICAgIFxuICAgIGJ0bmluYzogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgdGltZXI7XG4gICAgICBcbiAgICAgICR0aGlzID0gJCh0aGlzKS5wYXJlbnQoKS5maW5kKCcuYmZoLW51bWJlcicpLmRhdGEoJ2JmaG51bWJlcicpO1xuICAgICAgXG4gICAgICBpZiAoJHRoaXMuJGVsZW1lbnQuaXMoJy5kaXNhYmxlZCcpIHx8ICR0aGlzLiRlbGVtZW50LmF0dHIoJ2Rpc2FibGVkJykgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgJHRoaXMuaW5jcmVtZW50KCk7XG4gICAgICBcbiAgICAgIHRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGludGVydmFsO1xuICAgICAgICBpbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICR0aGlzLmluY3JlbWVudCgpO1xuICAgICAgICB9LCA4MCk7XG4gICAgICAgICR0aGlzLiRlbGVtZW50LmRhdGEoJ2ludGVydmFsJywgaW50ZXJ2YWwpO1xuICAgICAgfSwgNzUwKTtcbiAgICAgICR0aGlzLiRlbGVtZW50LmRhdGEoJ3RpbWVyJywgdGltZXIpO1xuICAgICAgXG4gICAgICAkKGRvY3VtZW50KS5vbmUoJ21vdXNldXAnLCB7YnRuOiAkdGhpc30sIEJGSE51bWJlci5wcm90b3R5cGUubW91c2V1cCk7XG4gICAgICBcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0sXG4gICAgXG4gICAgYnRuZGVjOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciAkdGhpcyxcbiAgICAgICAgICB0aW1lcjtcbiAgICAgIFxuICAgICAgJHRoaXMgPSAkKHRoaXMpLnBhcmVudCgpLmZpbmQoJy5iZmgtbnVtYmVyJykuZGF0YSgnYmZobnVtYmVyJyk7XG4gICAgICBcbiAgICAgIGlmICgkdGhpcy4kZWxlbWVudC5pcygnLmRpc2FibGVkJykgfHwgJHRoaXMuJGVsZW1lbnQuYXR0cignZGlzYWJsZWQnKSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgICAgXG4gICAgICAkdGhpcy5kZWNyZW1lbnQoKTtcbiAgICAgIFxuICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgaW50ZXJ2YWw7XG4gICAgICAgIGludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgJHRoaXMuZGVjcmVtZW50KCk7XG4gICAgICAgIH0sIDgwKTtcbiAgICAgICAgJHRoaXMuJGVsZW1lbnQuZGF0YSgnaW50ZXJ2YWwnLCBpbnRlcnZhbCk7XG4gICAgICB9LCA3NTApO1xuICAgICAgJHRoaXMuJGVsZW1lbnQuZGF0YSgndGltZXInLCB0aW1lcik7XG4gICAgICBcbiAgICAgICQoZG9jdW1lbnQpLm9uZSgnbW91c2V1cCcsIHtidG46ICR0aGlzfSwgQkZITnVtYmVyLnByb3RvdHlwZS5tb3VzZXVwKTtcbiAgICAgIFxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcbiAgICBcbiAgICBjaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyICR0aGlzO1xuXG4gICAgICAkdGhpcyA9ICQodGhpcykuZGF0YSgnYmZobnVtYmVyJyk7XG5cbiAgICAgIGlmICgkdGhpcy4kZWxlbWVudC5pcygnLmRpc2FibGVkJykgfHwgJHRoaXMuJGVsZW1lbnQuYXR0cignZGlzYWJsZWQnKSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICAkdGhpcy5mb3JtYXROdW1iZXIoKTtcblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcbiAgICBcbiAgICBpbmNyZW1lbnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHZhbHVlO1xuICAgICAgXG4gICAgICB2YWx1ZSA9IHRoaXMuZ2V0VmFsdWUoKTtcbiAgICAgIFxuICAgICAgdmFsdWUgPSB2YWx1ZSArIDE7XG4gICAgICBcbiAgICAgIHRoaXMuJGVsZW1lbnQudmFsKHZhbHVlKS5jaGFuZ2UoKTtcbiAgICB9LFxuICAgIFxuICAgIGRlY3JlbWVudDogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdmFsdWU7XG4gICAgICBcbiAgICAgIHZhbHVlID0gdGhpcy5nZXRWYWx1ZSgpO1xuICAgICAgXG4gICAgICB2YWx1ZSA9IHZhbHVlIC0gMTtcbiAgICAgIFxuICAgICAgdGhpcy4kZWxlbWVudC52YWwodmFsdWUpLmNoYW5nZSgpO1xuICAgIH0sXG4gICAgXG4gICAgZ2V0VmFsdWU6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHZhbHVlO1xuICAgICAgXG4gICAgICB2YWx1ZSA9IHRoaXMuJGVsZW1lbnQudmFsKCk7XG4gICAgICBpZiAodmFsdWUgIT09ICctMScpIHtcbiAgICAgICAgdmFsdWUgPSBTdHJpbmcodmFsdWUpLnJlcGxhY2UoL1xcRC9nLCAnJyk7XG4gICAgICB9XG4gICAgICBpZiAoU3RyaW5nKHZhbHVlKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgdmFsdWUgPSB0aGlzLm9wdGlvbnMubWluO1xuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4gcGFyc2VJbnQodmFsdWUpO1xuICAgIH0sXG4gICAgXG4gICAgZm9ybWF0TnVtYmVyOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB2YWx1ZSxcbiAgICAgICAgICBtYXhMZW5ndGgsXG4gICAgICAgICAgbGVuZ3RoLFxuICAgICAgICAgIHplcm87XG4gICAgICBcbiAgICAgIHZhbHVlID0gdGhpcy5nZXRWYWx1ZSgpO1xuICAgICAgXG4gICAgICBpZiAodmFsdWUgPiB0aGlzLm9wdGlvbnMubWF4KSB7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMud3JhcCA9PT0gdHJ1ZSkge1xuICAgICAgICAgIHZhbHVlID0gdGhpcy5vcHRpb25zLm1pbjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWx1ZSA9IHRoaXMub3B0aW9ucy5tYXg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYgKHZhbHVlIDwgdGhpcy5vcHRpb25zLm1pbikge1xuICAgICAgICBpZiAodGhpcy5vcHRpb25zLndyYXAgPT09IHRydWUpIHtcbiAgICAgICAgICB2YWx1ZSA9IHRoaXMub3B0aW9ucy5tYXg7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFsdWUgPSB0aGlzLm9wdGlvbnMubWluO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuemVyb3MgPT09IHRydWUpIHtcbiAgICAgICAgbWF4TGVuZ3RoID0gU3RyaW5nKHRoaXMub3B0aW9ucy5tYXgpLmxlbmd0aDtcbiAgICAgICAgbGVuZ3RoID0gU3RyaW5nKHZhbHVlKS5sZW5ndGg7XG4gICAgICAgIGZvciAoemVybz1sZW5ndGg7IHplcm8gPCBtYXhMZW5ndGg7IHplcm8gPSB6ZXJvICsgMSkge1xuICAgICAgICAgIHZhbHVlID0gJzAnICsgdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYgKHZhbHVlICE9PSB0aGlzLiRlbGVtZW50LnZhbCgpKSB7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQudmFsKHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgfTtcblxuICAvKiBOVU1CRVIgUExVR0lOIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgb2xkID0gJC5mbi5iZmhudW1iZXI7XG5cbiAgJC5mbi5iZmhudW1iZXIgPSBmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgZGF0YSxcbiAgICAgICAgICBvcHRpb25zO1xuXG4gICAgICAkdGhpcyA9ICQodGhpcyk7XG4gICAgICBkYXRhID0gJHRoaXMuZGF0YSgnYmZobnVtYmVyJyk7XG4gICAgICBvcHRpb25zID0gdHlwZW9mIG9wdGlvbiA9PT0gJ29iamVjdCcgJiYgb3B0aW9uO1xuXG4gICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgJHRoaXMuZGF0YSgnYmZobnVtYmVyJywgKGRhdGEgPSBuZXcgQkZITnVtYmVyKHRoaXMsIG9wdGlvbnMpKSk7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZGF0YVtvcHRpb25dLmNhbGwoJHRoaXMpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gICQuZm4uYmZobnVtYmVyLkNvbnN0cnVjdG9yID0gQkZITnVtYmVyO1xuXG4gICQuZm4uYmZobnVtYmVyLmRlZmF1bHRzID0ge1xuICAgIG1pbjogMCxcbiAgICBtYXg6IDk5OTksXG4gICAgemVyb3M6IGZhbHNlLFxuICAgIGtleWJvYXJkOiB0cnVlLFxuICAgIGJ1dHRvbnM6IHRydWUsXG4gICAgd3JhcDogZmFsc2VcbiAgfTtcblxuXG4gIC8qIE5VTUJFUiBOTyBDT05GTElDVFxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICQuZm4uYmZobnVtYmVyLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5iZmhudW1iZXIgPSBvbGQ7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cblxuICAvKiBOVU1CRVIgREFUQS1BUElcbiAgICogPT09PT09PT09PT09PT0gKi9cblxuICAkKGRvY3VtZW50KS5yZWFkeSggZnVuY3Rpb24gKCkge1xuICAgICQoJ2Zvcm0gaW5wdXRbdHlwZT1cInRleHRcIl0uYmZoLW51bWJlciwgZm9ybSBpbnB1dFt0eXBlPVwibnVtYmVyXCJdLmJmaC1udW1iZXInKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkbnVtYmVyO1xuXG4gICAgICAkbnVtYmVyID0gJCh0aGlzKTtcblxuICAgICAgJG51bWJlci5iZmhudW1iZXIoJG51bWJlci5kYXRhKCkpO1xuICAgIH0pO1xuICB9KTtcblxuXG4gIC8qIEFQUExZIFRPIFNUQU5EQVJEIE5VTUJFUiBFTEVNRU5UU1xuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5cbn0od2luZG93LmpRdWVyeSk7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIGJvb3RzdHJhcC1mb3JtaGVscGVycy1waG9uZS5qc1xuICogaHR0cHM6Ly9naXRodWIuY29tL3ZsYW1hbm5hL0Jvb3RzdHJhcEZvcm1IZWxwZXJzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMiBWaW5jZW50IExhbWFubmFcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuK2Z1bmN0aW9uICgkKSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG5cbiAgLyogUEhPTkUgQ0xBU1MgREVGSU5JVElPTlxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgdmFyIEJGSFBob25lID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB0aGlzLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgJC5mbi5iZmhwaG9uZS5kZWZhdWx0cywgb3B0aW9ucyk7XG4gICAgdGhpcy4kZWxlbWVudCA9ICQoZWxlbWVudCk7XG5cbiAgICBpZiAodGhpcy4kZWxlbWVudC5pcygnaW5wdXRbdHlwZT1cInRleHRcIl0nKSB8fCB0aGlzLiRlbGVtZW50LmlzKCdpbnB1dFt0eXBlPVwidGVsXCJdJykpIHtcbiAgICAgIHRoaXMuYWRkRm9ybWF0dGVyKCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuJGVsZW1lbnQuaXMoJ3NwYW4nKSkge1xuICAgICAgdGhpcy5kaXNwbGF5Rm9ybWF0dGVyKCk7XG4gICAgfVxuICB9O1xuXG4gIEJGSFBob25lLnByb3RvdHlwZSA9IHtcblxuICAgIGNvbnN0cnVjdG9yOiBCRkhQaG9uZSxcblxuICAgIGFkZEZvcm1hdHRlcjogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgJGNvdW50cnk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuY291bnRyeSAhPT0gJycpIHtcbiAgICAgICAgJGNvdW50cnkgPSAkKGRvY3VtZW50KS5maW5kKCcjJyArIHRoaXMub3B0aW9ucy5jb3VudHJ5KTtcblxuICAgICAgICBpZiAoJGNvdW50cnkubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgdGhpcy5vcHRpb25zLmZvcm1hdCA9IEJGSFBob25lRm9ybWF0TGlzdFskY291bnRyeS52YWwoKV07XG4gICAgICAgICAgJGNvdW50cnkub24oJ2NoYW5nZScsIHtwaG9uZTogdGhpc30sIHRoaXMuY2hhbmdlQ291bnRyeSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5vcHRpb25zLmZvcm1hdCA9IEJGSFBob25lRm9ybWF0TGlzdFt0aGlzLm9wdGlvbnMuY291bnRyeV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIFxuICAgICAgdGhpcy4kZWxlbWVudC5vbigna2V5dXAuYmZocGhvbmUuZGF0YS1hcGknLCBCRkhQaG9uZS5wcm90b3R5cGUuY2hhbmdlKTtcblxuICAgICAgdGhpcy5sb2FkRm9ybWF0dGVyKCk7XG4gICAgfSxcblxuICAgIGxvYWRGb3JtYXR0ZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBmb3JtYXR0ZWROdW1iZXI7XG5cbiAgICAgIGZvcm1hdHRlZE51bWJlciA9IGZvcm1hdE51bWJlcih0aGlzLm9wdGlvbnMuZm9ybWF0LCB0aGlzLiRlbGVtZW50LnZhbCgpKTtcblxuICAgICAgdGhpcy4kZWxlbWVudC52YWwoZm9ybWF0dGVkTnVtYmVyKTtcbiAgICB9LFxuXG4gICAgZGlzcGxheUZvcm1hdHRlcjogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGZvcm1hdHRlZE51bWJlcjtcblxuICAgICAgaWYgKHRoaXMub3B0aW9ucy5jb3VudHJ5ICE9PSAnJykge1xuICAgICAgICB0aGlzLm9wdGlvbnMuZm9ybWF0ID0gQkZIUGhvbmVGb3JtYXRMaXN0W3RoaXMub3B0aW9ucy5jb3VudHJ5XTtcbiAgICAgIH1cblxuICAgICAgZm9ybWF0dGVkTnVtYmVyID0gZm9ybWF0TnVtYmVyKHRoaXMub3B0aW9ucy5mb3JtYXQsIHRoaXMub3B0aW9ucy5udW1iZXIpO1xuXG4gICAgICB0aGlzLiRlbGVtZW50Lmh0bWwoZm9ybWF0dGVkTnVtYmVyKTtcbiAgICB9LFxuXG4gICAgY2hhbmdlQ291bnRyeTogZnVuY3Rpb24gKGUpIHtcbiAgICAgIHZhciAkdGhpcyxcbiAgICAgICAgICAkcGhvbmU7XG5cbiAgICAgICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICRwaG9uZSA9IGUuZGF0YS5waG9uZTtcblxuICAgICAgJHBob25lLiRlbGVtZW50LnZhbChTdHJpbmcoJHBob25lLiRlbGVtZW50LnZhbCgpKS5yZXBsYWNlKC9cXCtcXGQqL2csICcnKSk7XG4gICAgICAkcGhvbmUub3B0aW9ucy5mb3JtYXQgPSBCRkhQaG9uZUZvcm1hdExpc3RbJHRoaXMudmFsKCldO1xuXG4gICAgICAkcGhvbmUubG9hZEZvcm1hdHRlcigpO1xuICAgIH0sXG5cbiAgICBjaGFuZ2U6IGZ1bmN0aW9uKGUpIHtcbiAgICAgIHZhciAkdGhpcyxcbiAgICAgICAgICBjdXJzb3JQb3NpdGlvbixcbiAgICAgICAgICBjdXJzb3JFbmQsXG4gICAgICAgICAgZm9ybWF0dGVkTnVtYmVyO1xuXG4gICAgICAkdGhpcyA9ICQodGhpcykuZGF0YSgnYmZocGhvbmUnKTtcblxuICAgICAgaWYgKCR0aGlzLiRlbGVtZW50LmlzKCcuZGlzYWJsZWQnKSB8fCAkdGhpcy4kZWxlbWVudC5hdHRyKCdkaXNhYmxlZCcpICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGN1cnNvclBvc2l0aW9uID0gZ2V0Q3Vyc29yUG9zaXRpb24oJHRoaXMuJGVsZW1lbnRbMF0pO1xuXG4gICAgICBjdXJzb3JFbmQgPSBmYWxzZTtcbiAgICAgIGlmIChjdXJzb3JQb3NpdGlvbiA9PT0gJHRoaXMuJGVsZW1lbnQudmFsKCkubGVuZ3RoKSB7XG4gICAgICAgIGN1cnNvckVuZCA9IHRydWU7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmIChlLndoaWNoID09PSA4ICYmICR0aGlzLm9wdGlvbnMuZm9ybWF0LmNoYXJBdCgkdGhpcy4kZWxlbWVudC52YWwoKS5sZW5ndGgpICE9PSAnZCcpIHtcbiAgICAgICAgJHRoaXMuJGVsZW1lbnQudmFsKFN0cmluZygkdGhpcy4kZWxlbWVudC52YWwoKSkuc3Vic3RyaW5nKDAsICR0aGlzLiRlbGVtZW50LnZhbCgpLmxlbmd0aCAtIDEpKTtcbiAgICAgIH1cblxuICAgICAgZm9ybWF0dGVkTnVtYmVyID0gZm9ybWF0TnVtYmVyKCR0aGlzLm9wdGlvbnMuZm9ybWF0LCAkdGhpcy4kZWxlbWVudC52YWwoKSk7XG4gICAgICBcbiAgICAgIGlmIChmb3JtYXR0ZWROdW1iZXIgPT09ICR0aGlzLiRlbGVtZW50LnZhbCgpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgICAgXG4gICAgICAkdGhpcy4kZWxlbWVudC52YWwoZm9ybWF0dGVkTnVtYmVyKTtcblxuICAgICAgaWYgKGN1cnNvckVuZCkge1xuICAgICAgICBjdXJzb3JQb3NpdGlvbiA9ICR0aGlzLiRlbGVtZW50LnZhbCgpLmxlbmd0aDtcbiAgICAgIH1cblxuICAgICAgc2V0Q3Vyc29yUG9zaXRpb24oJHRoaXMuJGVsZW1lbnRbMF0sIGN1cnNvclBvc2l0aW9uKTtcblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gIH07XG5cbiAgZnVuY3Rpb24gZm9ybWF0TnVtYmVyKGZvcm1hdCwgbnVtYmVyKSB7XG4gICAgdmFyIGZvcm1hdHRlZE51bWJlcixcbiAgICAgICAgaW5kZXhGb3JtYXQsXG4gICAgICAgIGluZGV4TnVtYmVyLFxuICAgICAgICBsYXN0Q2hhcmFjdGVyO1xuXG4gICAgZm9ybWF0dGVkTnVtYmVyID0gJyc7XG4gICAgbnVtYmVyID0gU3RyaW5nKG51bWJlcikucmVwbGFjZSgvXFxEL2csICcnKTtcblxuICAgIGZvciAoaW5kZXhGb3JtYXQgPSAwLCBpbmRleE51bWJlciA9IDA7IGluZGV4Rm9ybWF0IDwgZm9ybWF0Lmxlbmd0aDsgaW5kZXhGb3JtYXQgPSBpbmRleEZvcm1hdCArIDEpIHtcbiAgICAgIGlmICgvXFxkL2cudGVzdChmb3JtYXQuY2hhckF0KGluZGV4Rm9ybWF0KSkpIHtcbiAgICAgICAgaWYgKGZvcm1hdC5jaGFyQXQoaW5kZXhGb3JtYXQpID09PSBudW1iZXIuY2hhckF0KGluZGV4TnVtYmVyKSkge1xuICAgICAgICAgIGZvcm1hdHRlZE51bWJlciArPSBudW1iZXIuY2hhckF0KGluZGV4TnVtYmVyKTtcbiAgICAgICAgICBpbmRleE51bWJlciA9IGluZGV4TnVtYmVyICsgMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBmb3JtYXR0ZWROdW1iZXIgKz0gZm9ybWF0LmNoYXJBdChpbmRleEZvcm1hdCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoZm9ybWF0LmNoYXJBdChpbmRleEZvcm1hdCkgIT09ICdkJykge1xuICAgICAgICBpZiAobnVtYmVyLmNoYXJBdChpbmRleE51bWJlcikgIT09ICcnIHx8IGZvcm1hdC5jaGFyQXQoaW5kZXhGb3JtYXQpID09PSAnKycpIHtcbiAgICAgICAgICBmb3JtYXR0ZWROdW1iZXIgKz0gZm9ybWF0LmNoYXJBdChpbmRleEZvcm1hdCk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChudW1iZXIuY2hhckF0KGluZGV4TnVtYmVyKSA9PT0gJycpIHtcbiAgICAgICAgICBmb3JtYXR0ZWROdW1iZXIgKz0gJyc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZm9ybWF0dGVkTnVtYmVyICs9IG51bWJlci5jaGFyQXQoaW5kZXhOdW1iZXIpO1xuICAgICAgICAgIGluZGV4TnVtYmVyID0gaW5kZXhOdW1iZXIgKyAxO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGxhc3RDaGFyYWN0ZXIgPSBmb3JtYXQuY2hhckF0KGZvcm1hdHRlZE51bWJlci5sZW5ndGgpO1xuICAgIGlmIChsYXN0Q2hhcmFjdGVyICE9PSAnZCcpIHtcbiAgICAgIGZvcm1hdHRlZE51bWJlciArPSBsYXN0Q2hhcmFjdGVyO1xuICAgIH1cblxuICAgIHJldHVybiBmb3JtYXR0ZWROdW1iZXI7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRDdXJzb3JQb3NpdGlvbigkZWxlbWVudCkge1xuICAgIHZhciBwb3NpdGlvbiA9IDAsXG4gICAgICAgIHNlbGVjdGlvbjtcblxuICAgIGlmIChkb2N1bWVudC5zZWxlY3Rpb24pIHtcbiAgICAgIC8vIElFIFN1cHBvcnRcbiAgICAgICRlbGVtZW50LmZvY3VzKCk7XG4gICAgICBzZWxlY3Rpb24gPSBkb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKTtcbiAgICAgIHNlbGVjdGlvbi5tb3ZlU3RhcnQgKCdjaGFyYWN0ZXInLCAtJGVsZW1lbnQudmFsdWUubGVuZ3RoKTtcbiAgICAgIHBvc2l0aW9uID0gc2VsZWN0aW9uLnRleHQubGVuZ3RoO1xuICAgIH0gZWxzZSBpZiAoJGVsZW1lbnQuc2VsZWN0aW9uU3RhcnQgfHwgJGVsZW1lbnQuc2VsZWN0aW9uU3RhcnQgPT09IDApIHtcbiAgICAgIHBvc2l0aW9uID0gJGVsZW1lbnQuc2VsZWN0aW9uU3RhcnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBvc2l0aW9uO1xuICB9XG5cbiAgZnVuY3Rpb24gc2V0Q3Vyc29yUG9zaXRpb24oJGVsZW1lbnQsIHBvc2l0aW9uKSB7XG4gICAgdmFyIHNlbGVjdGlvbjtcblxuICAgIGlmIChkb2N1bWVudC5zZWxlY3Rpb24pIHtcbiAgICAgIC8vIElFIFN1cHBvcnRcbiAgICAgICRlbGVtZW50LmZvY3VzICgpO1xuICAgICAgc2VsZWN0aW9uID0gZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlKCk7XG4gICAgICBzZWxlY3Rpb24ubW92ZVN0YXJ0ICgnY2hhcmFjdGVyJywgLSRlbGVtZW50LnZhbHVlLmxlbmd0aCk7XG4gICAgICBzZWxlY3Rpb24ubW92ZVN0YXJ0ICgnY2hhcmFjdGVyJywgcG9zaXRpb24pO1xuICAgICAgc2VsZWN0aW9uLm1vdmVFbmQgKCdjaGFyYWN0ZXInLCAwKTtcbiAgICAgIHNlbGVjdGlvbi5zZWxlY3QgKCk7XG4gICAgfSBlbHNlIGlmICgkZWxlbWVudC5zZWxlY3Rpb25TdGFydCB8fCAkZWxlbWVudC5zZWxlY3Rpb25TdGFydCA9PT0gMCkge1xuICAgICAgJGVsZW1lbnQuc2VsZWN0aW9uU3RhcnQgPSBwb3NpdGlvbjtcbiAgICAgICRlbGVtZW50LnNlbGVjdGlvbkVuZCA9IHBvc2l0aW9uO1xuICAgICAgJGVsZW1lbnQuZm9jdXMgKCk7XG4gICAgfVxuICB9XG5cbiAgLyogUEhPTkUgUExVR0lOIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgb2xkID0gJC5mbi5iZmhwaG9uZTtcblxuICAkLmZuLmJmaHBob25lID0gZnVuY3Rpb24gKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzLFxuICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgb3B0aW9ucztcblxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgZGF0YSA9ICR0aGlzLmRhdGEoJ2JmaHBob25lJyk7XG4gICAgICBvcHRpb25zID0gdHlwZW9mIG9wdGlvbiA9PT0gJ29iamVjdCcgJiYgb3B0aW9uO1xuXG4gICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgJHRoaXMuZGF0YSgnYmZocGhvbmUnLCAoZGF0YSA9IG5ldyBCRkhQaG9uZSh0aGlzLCBvcHRpb25zKSkpO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBvcHRpb24gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGRhdGFbb3B0aW9uXS5jYWxsKCR0aGlzKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICAkLmZuLmJmaHBob25lLkNvbnN0cnVjdG9yID0gQkZIUGhvbmU7XG5cbiAgJC5mbi5iZmhwaG9uZS5kZWZhdWx0cyA9IHtcbiAgICBmb3JtYXQ6ICcnLFxuICAgIG51bWJlcjogJycsXG4gICAgY291bnRyeTogJydcbiAgfTtcblxuXG4gIC8qIFBIT05FIE5PIENPTkZMSUNUXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgJC5mbi5iZmhwaG9uZS5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uYmZocGhvbmUgPSBvbGQ7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cblxuICAvKiBQSE9ORSBEQVRBLUFQSVxuICAgKiA9PT09PT09PT09PT09PSAqL1xuXG4gICQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiAoKSB7XG4gICAgJCgnZm9ybSBpbnB1dFt0eXBlPVwidGV4dFwiXS5iZmgtcGhvbmUsIGZvcm0gaW5wdXRbdHlwZT1cInRlbFwiXS5iZmgtcGhvbmUsIHNwYW4uYmZoLXBob25lJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHBob25lO1xuXG4gICAgICAkcGhvbmUgPSAkKHRoaXMpO1xuXG4gICAgICAkcGhvbmUuYmZocGhvbmUoJHBob25lLmRhdGEoKSk7XG4gICAgfSk7XG4gIH0pO1xuXG59KHdpbmRvdy5qUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBib290c3RyYXAtZm9ybWhlbHBlcnMtc2VsZWN0Ym94LmpzXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdmxhbWFubmEvQm9vdHN0cmFwRm9ybUhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDEyIFZpbmNlbnQgTGFtYW5uYVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4rZnVuY3Rpb24gKCQpIHtcblxuICAndXNlIHN0cmljdCc7XG5cblxuICAvKiBTRUxFQ1RCT1ggQ0xBU1MgREVGSU5JVElPTlxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgdmFyIHRvZ2dsZSA9ICdbZGF0YS10b2dnbGU9YmZoLXNlbGVjdGJveF0nLFxuICAgICAgQkZIU2VsZWN0Qm94ID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sICQuZm4uYmZoc2VsZWN0Ym94LmRlZmF1bHRzLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy4kZWxlbWVudCA9ICQoZWxlbWVudCk7XG5cbiAgICAgICAgdGhpcy5pbml0U2VsZWN0Qm94KCk7XG4gICAgICB9O1xuXG4gIEJGSFNlbGVjdEJveC5wcm90b3R5cGUgPSB7XG5cbiAgICBjb25zdHJ1Y3RvcjogQkZIU2VsZWN0Qm94LFxuXG4gICAgaW5pdFNlbGVjdEJveDogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIG9wdGlvbnM7XG5cbiAgICAgIG9wdGlvbnMgPSAnJztcblxuICAgICAgLy9UaGlzIGlzIGEgdGVtcG9yYXJ5IGhhY2s6IHVzZWQgZm9yIGN1c3RvbSB0ZW1wbGF0ZXNcbiAgICAgIGlmKHRoaXMuJGVsZW1lbnQuZmluZCgnLmJmaC1zZWxlY3Rib3gtb3B0aW9ucycpLmxlbmd0aCA9PT0gMCkgeyAvL1hpeWFuZ1xuICAgICAgICB0aGlzLiRlbGVtZW50LmZpbmQoJ2RpdicpLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgb3B0aW9ucyA9IG9wdGlvbnMgKyAnPGxpPjxhIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiI1wiIGRhdGEtb3B0aW9uPVwiJyArICQodGhpcykuZGF0YSgndmFsdWUnKSArICdcIj4nICsgJCh0aGlzKS5odG1sKCkgKyAnPC9hPjwvbGk+JztcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy4kZWxlbWVudC5odG1sKFxuICAgICAgICAgICc8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCInICsgdGhpcy5vcHRpb25zLm5hbWUgKyAnXCIgdmFsdWU9XCJcIj4nICtcbiAgICAgICAgJzxhIGNsYXNzPVwiYmZoLXNlbGVjdGJveC10b2dnbGUgJyArIHRoaXMub3B0aW9ucy5pbnB1dCArICdcIiByb2xlPVwiYnV0dG9uXCIgZGF0YS10b2dnbGU9XCJiZmgtc2VsZWN0Ym94XCIgaHJlZj1cIiNcIj4nICtcbiAgICAgICAgJzxzcGFuIGNsYXNzPVwiYmZoLXNlbGVjdGJveC1vcHRpb25cIj48L3NwYW4+JyArXG4gICAgICAgICc8c3BhbiBjbGFzcz1cIicgKyB0aGlzLm9wdGlvbnMuaWNvbiArICcgc2VsZWN0Ym94LWNhcmV0XCI+PC9zcGFuPicgK1xuICAgICAgICAnPC9hPicgK1xuICAgICAgICAnPGRpdiBjbGFzcz1cImJmaC1zZWxlY3Rib3gtb3B0aW9uc1wiPicgK1xuICAgICAgICAnPGRpdiByb2xlPVwibGlzdGJveFwiPicgK1xuICAgICAgICAnPHVsIHJvbGU9XCJvcHRpb25cIj4nICtcbiAgICAgICAgJzwvdWw+JyArXG4gICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgJzwvZGl2PidcbiAgICAgICAgKTtcblxuICAgICAgICB0aGlzLiRlbGVtZW50LmZpbmQoJ1tyb2xlPW9wdGlvbl0nKS5odG1sKG9wdGlvbnMpO1xuXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMuZmlsdGVyID09PSB0cnVlKSB7XG4gICAgICAgICAgdGhpcy4kZWxlbWVudC5maW5kKCcuYmZoLXNlbGVjdGJveC1vcHRpb25zJykucHJlcGVuZCgnPGRpdiBjbGFzcz1cImJmaC1zZWxlY3Rib3gtZmlsdGVyLWNvbnRhaW5lclwiPjxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiYmZoLXNlbGVjdGJveC1maWx0ZXIgZm9ybS1jb250cm9sXCI+PC9kaXY+Jyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLiRlbGVtZW50LnZhbCh0aGlzLm9wdGlvbnMudmFsdWUpO1xuXG4gICAgICB9IC8vWGl5YW5nXG5cbiAgICAgIHRoaXMuJGVsZW1lbnRcbiAgICAgICAgLm9uKCdjbGljay5iZmhzZWxlY3Rib3guZGF0YS1hcGkgdG91Y2hzdGFydC5iZmhzZWxlY3Rib3guZGF0YS1hcGknLCB0b2dnbGUsIEJGSFNlbGVjdEJveC5wcm90b3R5cGUudG9nZ2xlKVxuXHRcdC5vbigna2V5ZG93bi5iZmhzZWxlY3Rib3guZGF0YS1hcGknLCB0b2dnbGUgKyAnLCBbcm9sZT1vcHRpb25dJyAsIEJGSFNlbGVjdEJveC5wcm90b3R5cGUua2V5ZG93bilcblx0XHQub24oJ21vdXNlZW50ZXIuYmZoc2VsZWN0Ym94LmRhdGEtYXBpJywgJ1tyb2xlPW9wdGlvbl0gPiBsaSA+IGEnLCBCRkhTZWxlY3RCb3gucHJvdG90eXBlLm1vdXNlZW50ZXIpXG5cdFx0Lm9uKCdjbGljay5iZmhzZWxlY3Rib3guZGF0YS1hcGknLCAnW3JvbGU9b3B0aW9uXSA+IGxpID4gYScsIEJGSFNlbGVjdEJveC5wcm90b3R5cGUuc2VsZWN0KVxuXHRcdC5vbignY2xpY2suYmZoc2VsZWN0Ym94LmRhdGEtYXBpJywgJy5iZmgtc2VsZWN0Ym94LWZpbHRlcicsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZhbHNlOyB9KVxuXHRcdC5vbigncHJvcGVydHljaGFuZ2UuYmZoc2VsZWN0Ym94LmRhdGEtYXBpIGNoYW5nZS5iZmhzZWxlY3Rib3guZGF0YS1hcGkgaW5wdXQuYmZoc2VsZWN0Ym94LmRhdGEtYXBpIHBhc3RlLmJmaHNlbGVjdGJveC5kYXRhLWFwaScsICcuYmZoLXNlbGVjdGJveC1maWx0ZXInLCBCRkhTZWxlY3RCb3gucHJvdG90eXBlLmZpbHRlcik7XG4gICAgfSxcblxuICAgIHRvZ2dsZTogZnVuY3Rpb24gKGUpIHtcbiAgICAgIHZhciAkdGhpcyxcbiAgICAgICAgICAkcGFyZW50LFxuICAgICAgICAgIGlzQWN0aXZlO1xuXG4gICAgICAkdGhpcyA9ICQodGhpcyk7XG4gICAgICAkcGFyZW50ID0gZ2V0UGFyZW50KCR0aGlzKTtcblxuICAgICAgaWYgKCRwYXJlbnQuaXMoJy5kaXNhYmxlZCcpIHx8ICRwYXJlbnQuYXR0cignZGlzYWJsZWQnKSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICBpc0FjdGl2ZSA9ICRwYXJlbnQuaGFzQ2xhc3MoJ29wZW4nKTtcblxuICAgICAgY2xlYXJNZW51cygpO1xuXG4gICAgICBpZiAoIWlzQWN0aXZlKSB7XG4gICAgICAgICRwYXJlbnQudHJpZ2dlcihlID0gJC5FdmVudCgnc2hvdy5iZmhzZWxlY3Rib3gnKSk7XG5cbiAgICAgICAgaWYgKGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgICRwYXJlbnRcbiAgICAgICAgICAudG9nZ2xlQ2xhc3MoJ29wZW4nKVxuICAgICAgICAgIC50cmlnZ2VyKCdzaG93bi5iZmhzZWxlY3Rib3gnKVxuICAgICAgICAgIC5maW5kKCdbcm9sZT1vcHRpb25dID4gbGkgPiBbZGF0YS1vcHRpb249XCInICsgJHBhcmVudC52YWwoKSArICdcIl0nKS5mb2N1cygpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSxcblxuICAgIGZpbHRlcjogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgJHBhcmVudCxcbiAgICAgICAgICAkaXRlbXM7XG5cbiAgICAgICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICRwYXJlbnQgPSBnZXRQYXJlbnQoJHRoaXMpO1xuXG4gICAgICAkaXRlbXMgPSAkKCdbcm9sZT1vcHRpb25dIGxpIGEnLCAkcGFyZW50KTtcbiAgICAgICRpdGVtc1xuICAgICAgICAuaGlkZSgpXG4gICAgICAgIC5maWx0ZXIoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuICgkKHRoaXMpLnRleHQoKS50b1VwcGVyQ2FzZSgpLmluZGV4T2YoJHRoaXMudmFsKCkudG9VcHBlckNhc2UoKSkgIT09IC0xKTtcbiAgICAgICAgfSlcbiAgICAgICAgLnNob3coKTtcbiAgICB9LFxuXG4gICAga2V5ZG93bjogZnVuY3Rpb24gKGUpIHtcbiAgICAgIHZhciAkdGhpcyxcbiAgICAgICAgICAkaXRlbXMsXG4gICAgICAgICAgJHBhcmVudCxcbiAgICAgICAgICAkc3ViSXRlbXMsXG4gICAgICAgICAgaXNBY3RpdmUsXG4gICAgICAgICAgaW5kZXgsXG4gICAgICAgICAgc2VsZWN0ZWRJbmRleDtcblxuICAgICAgaWYgKCEvKDM4fDQwfDI3KS8udGVzdChlLmtleUNvZGUpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICAkdGhpcyA9ICQodGhpcyk7XG5cbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICAgICRwYXJlbnQgPSBnZXRQYXJlbnQoJHRoaXMpO1xuICAgICAgaXNBY3RpdmUgPSAkcGFyZW50Lmhhc0NsYXNzKCdvcGVuJyk7XG5cbiAgICAgIGlmICghaXNBY3RpdmUgfHwgKGlzQWN0aXZlICYmIGUua2V5Q29kZSA9PT0gMjcpKSB7XG4gICAgICAgIGlmIChlLndoaWNoID09PSAyNykge1xuICAgICAgICAgICRwYXJlbnQuZmluZCh0b2dnbGUpLmZvY3VzKCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gJHRoaXMuY2xpY2soKTtcbiAgICAgIH1cblxuICAgICAgJGl0ZW1zID0gJCgnW3JvbGU9b3B0aW9uXSBsaTpub3QoLmRpdmlkZXIpIGE6dmlzaWJsZScsICRwYXJlbnQpO1xuXG4gICAgICBpZiAoISRpdGVtcy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgICQoJ2JvZHknKS5vZmYoJ21vdXNlZW50ZXIuYmZoLXNlbGVjdGJveC5kYXRhLWFwaScsICdbcm9sZT1vcHRpb25dID4gbGkgPiBhJywgQkZIU2VsZWN0Qm94LnByb3RvdHlwZS5tb3VzZWVudGVyKTtcbiAgICAgIGluZGV4ID0gJGl0ZW1zLmluZGV4KCRpdGVtcy5maWx0ZXIoJzpmb2N1cycpKTtcblxuICAgICAgaWYgKGUua2V5Q29kZSA9PT0gMzggJiYgaW5kZXggPiAwKSB7XG4gICAgICAgIGluZGV4ID0gaW5kZXggLSAxO1xuICAgICAgfVxuXG4gICAgICBpZiAoZS5rZXlDb2RlID09PSA0MCAmJiBpbmRleCA8ICRpdGVtcy5sZW5ndGggLSAxKSB7XG4gICAgICAgIGluZGV4ID0gaW5kZXggKyAxO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWluZGV4KSB7XG4gICAgICAgIGluZGV4ID0gMDtcbiAgICAgIH1cblxuICAgICAgJGl0ZW1zLmVxKGluZGV4KS5mb2N1cygpO1xuICAgICAgJCgnYm9keScpLm9uKCdtb3VzZWVudGVyLmJmaC1zZWxlY3Rib3guZGF0YS1hcGknLCAnW3JvbGU9b3B0aW9uXSA+IGxpID4gYScsIEJGSFNlbGVjdEJveC5wcm90b3R5cGUubW91c2VlbnRlcik7XG4gICAgfSxcblxuICAgIG1vdXNlZW50ZXI6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGhpcztcblxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuXG4gICAgICAkdGhpcy5mb2N1cygpO1xuICAgIH0sXG5cbiAgICBzZWxlY3Q6IGZ1bmN0aW9uIChlKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgJHBhcmVudCxcbiAgICAgICAgICAkc3BhbixcbiAgICAgICAgICAkaW5wdXQ7XG5cbiAgICAgICR0aGlzID0gJCh0aGlzKTtcblxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgICAgaWYgKCR0aGlzLmlzKCcuZGlzYWJsZWQnKSB8fCAkdGhpcy5hdHRyKCdkaXNhYmxlZCcpICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgICRwYXJlbnQgPSBnZXRQYXJlbnQoJHRoaXMpO1xuXG4gICAgICAkcGFyZW50LnZhbCgkdGhpcy5kYXRhKCdvcHRpb24nKSk7XG4gICAgICAkcGFyZW50LnRyaWdnZXIoJ2NoYW5nZS5iZmhzZWxlY3Rib3gnKTtcblxuICAgICAgY2xlYXJNZW51cygpO1xuICAgIH1cblxuICB9O1xuXG4gIGZ1bmN0aW9uIGNsZWFyTWVudXMoKSB7XG4gICAgdmFyICRwYXJlbnQ7XG5cbiAgICAkKHRvZ2dsZSkuZWFjaChmdW5jdGlvbiAoZSkge1xuICAgICAgJHBhcmVudCA9IGdldFBhcmVudCgkKHRoaXMpKTtcblxuICAgICAgaWYgKCEkcGFyZW50Lmhhc0NsYXNzKCdvcGVuJykpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgICRwYXJlbnQudHJpZ2dlcihlID0gJC5FdmVudCgnaGlkZS5iZmhzZWxlY3Rib3gnKSk7XG5cbiAgICAgIGlmIChlLmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICAkcGFyZW50XG4gICAgICAgIC5yZW1vdmVDbGFzcygnb3BlbicpXG4gICAgICAgIC50cmlnZ2VyKCdoaWRkZW4uYmZoc2VsZWN0Ym94Jyk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRQYXJlbnQoJHRoaXMpIHtcbiAgICByZXR1cm4gJHRoaXMuY2xvc2VzdCgnLmJmaC1zZWxlY3Rib3gnKTtcbiAgfVxuXG5cbiAgLyogU0VMRUNUQk9YIFBMVUdJTiBERUZJTklUSU9OXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgdmFyIG9sZCA9ICQuZm4uYmZoc2VsZWN0Ym94O1xuXG4gICQuZm4uYmZoc2VsZWN0Ym94ID0gZnVuY3Rpb24gKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzLFxuICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgb3B0aW9ucztcblxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgZGF0YSA9ICR0aGlzLmRhdGEoJ2JmaHNlbGVjdGJveCcpO1xuICAgICAgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT09ICdvYmplY3QnICYmIG9wdGlvbjtcbiAgICAgIHRoaXMudHlwZSA9ICdiZmhzZWxlY3Rib3gnO1xuXG4gICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgJHRoaXMuZGF0YSgnYmZoc2VsZWN0Ym94JywgKGRhdGEgPSBuZXcgQkZIU2VsZWN0Qm94KHRoaXMsIG9wdGlvbnMpKSk7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZGF0YVtvcHRpb25dLmNhbGwoJHRoaXMpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gICQuZm4uYmZoc2VsZWN0Ym94LkNvbnN0cnVjdG9yID0gQkZIU2VsZWN0Qm94O1xuXG4gICQuZm4uYmZoc2VsZWN0Ym94LmRlZmF1bHRzID0ge1xuICAgIGljb246ICdjYXJldCcsXG4gICAgaW5wdXQ6ICdmb3JtLWNvbnRyb2wnLFxuICAgIG5hbWU6ICcnLFxuICAgIHZhbHVlOiAnJyxcbiAgICBmaWx0ZXI6IGZhbHNlXG4gIH07XG5cblxuICAvKiBTRUxFQ1RCT1ggTk8gQ09ORkxJQ1RcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAkLmZuLmJmaHNlbGVjdGJveC5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uYmZoc2VsZWN0Ym94ID0gb2xkO1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG5cbiAgLyogU0VMRUNUQk9YIFZBTEhPT0tTXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgdmFyIG9yaWdIb29rO1xuICBpZiAoJC52YWxIb29rcy5kaXYpe1xuICAgIG9yaWdIb29rID0gJC52YWxIb29rcy5kaXY7XG4gIH1cbiAgJC52YWxIb29rcy5kaXYgPSB7XG4gICAgZ2V0OiBmdW5jdGlvbihlbCkge1xuICAgICAgaWYgKCQoZWwpLmhhc0NsYXNzKCdiZmgtc2VsZWN0Ym94JykpIHtcbiAgICAgICAgcmV0dXJuICQoZWwpLmZpbmQoJ2lucHV0W3R5cGU9XCJoaWRkZW5cIl0nKS52YWwoKTtcbiAgICAgIH0gZWxzZSBpZiAob3JpZ0hvb2spIHtcbiAgICAgICAgcmV0dXJuIG9yaWdIb29rLmdldChlbCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uKGVsLCB2YWwpIHtcbiAgICAgIHZhciAkZWwsXG4gICAgICAgICAgaHRtbDtcblxuICAgICAgaWYgKCQoZWwpLmhhc0NsYXNzKCdiZmgtc2VsZWN0Ym94JykpIHtcblxuICAgICAgICAkZWwgPSAkKGVsKTtcbiAgICAgICAgaWYgKCRlbC5maW5kKCdsaSBhW2RhdGEtb3B0aW9uPVxcJycgKyB2YWwgKyAnXFwnXScpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBodG1sID0gJGVsLmZpbmQoJ2xpIGFbZGF0YS1vcHRpb249XFwnJyArIHZhbCArICdcXCddJykuaHRtbCgpO1xuICAgICAgICB9IGVsc2UgaWYgKCRlbC5maW5kKCdsaSBhJykubGVuZ3RoID4gMCkge1xuICAgICAgICAgIGh0bWwgPSAkZWwuZmluZCgnbGkgYScpLmVxKDApLmh0bWwoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWwgPSAnJztcbiAgICAgICAgICBodG1sID0gJyc7XG4gICAgICAgIH1cblxuICAgICAgICAkZWwuZmluZCgnaW5wdXRbdHlwZT1cImhpZGRlblwiXScpLnZhbCh2YWwpO1xuICAgICAgICAkZWwuZmluZCgnLmJmaC1zZWxlY3Rib3gtb3B0aW9uJykuaHRtbChodG1sKTtcbiAgICAgIH0gZWxzZSBpZiAob3JpZ0hvb2spIHtcbiAgICAgICAgcmV0dXJuIG9yaWdIb29rLnNldChlbCx2YWwpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuXG4gIC8qIFNFTEVDVEJPWCBEQVRBLUFQSVxuICAgKiA9PT09PT09PT09PT09PSAqL1xuXG4gICQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiAoKSB7XG4gICAgJCgnZGl2LmJmaC1zZWxlY3Rib3gnKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkc2VsZWN0Ym94O1xuXG4gICAgICAkc2VsZWN0Ym94ID0gJCh0aGlzKTtcblxuICAgICAgJHNlbGVjdGJveC5iZmhzZWxlY3Rib3goJHNlbGVjdGJveC5kYXRhKCkpO1xuICAgIH0pO1xuICB9KTtcblxuXG4gIC8qIEFQUExZIFRPIFNUQU5EQVJEIFNFTEVDVEJPWCBFTEVNRU5UU1xuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICQoZG9jdW1lbnQpXG4gICAgLm9uKCdjbGljay5iZmhzZWxlY3Rib3guZGF0YS1hcGknLCBjbGVhck1lbnVzKTtcblxufSh3aW5kb3cualF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogYm9vdHN0cmFwLWZvcm1oZWxwZXJzLXNsaWRlci5qc1xuICogaHR0cHM6Ly9naXRodWIuY29tL3ZsYW1hbm5hL0Jvb3RzdHJhcEZvcm1IZWxwZXJzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMiBWaW5jZW50IExhbWFubmFcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuK2Z1bmN0aW9uICgkKSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG5cbiAgLyogQkZIU0xJREVSIENMQVNTIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIHZhciBCRkhTbGlkZXIgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgJC5mbi5iZmhzbGlkZXIuZGVmYXVsdHMsIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLiRlbGVtZW50ID0gJChlbGVtZW50KTtcbiAgICAgICAgXG4gICAgICAgIHRoaXMuaW5pdFNsaWRlcigpO1xuICAgICAgfTtcblxuICBCRkhTbGlkZXIucHJvdG90eXBlID0ge1xuXG4gICAgY29uc3RydWN0b3I6IEJGSFNsaWRlcixcblxuICAgIGluaXRTbGlkZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKHRoaXMub3B0aW9ucy52YWx1ZSA9PT0gJycpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zLnZhbHVlID0gdGhpcy5vcHRpb25zLm1pbjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdGhpcy4kZWxlbWVudC5odG1sKFxuICAgICAgICAnPGlucHV0IHR5cGU9XCJoaWRkZW5cIiBuYW1lPVwiJyArIHRoaXMub3B0aW9ucy5uYW1lICsgJ1wiIHZhbHVlPVwiXCI+JyArXG4gICAgICAgICc8ZGl2IGNsYXNzPVwiYmZoLXNsaWRlci1oYW5kbGVcIj48ZGl2IGNsYXNzPVwiYmZoLXNsaWRlci12YWx1ZVwiPjwvZGl2PjwvZGl2PidcbiAgICAgICk7XG4gICAgICBcbiAgICAgIHRoaXMuJGVsZW1lbnQuZmluZCgnaW5wdXRbdHlwZT1cImhpZGRlblwiXScpLnZhbCh0aGlzLm9wdGlvbnMudmFsdWUpO1xuICAgICAgdGhpcy51cGRhdGVIYW5kbGUodGhpcy5vcHRpb25zLnZhbHVlKTtcbiAgICAgIFxuICAgICAgdGhpcy4kZWxlbWVudC5vbignbW91c2Vkb3duLmJmaHNsaWRlci5kYXRhLWFwaScsIEJGSFNsaWRlci5wcm90b3R5cGUubW91c2VEb3duKTtcbiAgICB9LFxuICAgIFxuICAgIHVwZGF0ZUhhbmRsZTogZnVuY3Rpb24odmFsKSB7XG4gICAgICB2YXIgcG9zaXRpb25YLFxuICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgIGxlZnQsXG4gICAgICAgICAgc3BhbjtcbiAgICAgICAgICBcbiAgICAgIHNwYW4gPSB0aGlzLm9wdGlvbnMubWF4IC0gdGhpcy5vcHRpb25zLm1pbjtcbiAgICAgIHdpZHRoID0gdGhpcy4kZWxlbWVudC53aWR0aCgpO1xuICAgICAgbGVmdCA9IHRoaXMuJGVsZW1lbnQucG9zaXRpb24oKS5sZWZ0O1xuICAgICAgXG4gICAgICBwb3NpdGlvblggPSBNYXRoLnJvdW5kKCh2YWwgLSB0aGlzLm9wdGlvbnMubWluKSAqICh3aWR0aCAtIDIwKSAvIHNwYW4gKyBsZWZ0KTtcbiAgICAgIFxuICAgICAgdGhpcy4kZWxlbWVudC5maW5kKCcuYmZoLXNsaWRlci1oYW5kbGUnKS5jc3MoJ2xlZnQnLCBwb3NpdGlvblggKyAncHgnKTtcbiAgICAgIHRoaXMuJGVsZW1lbnQuZmluZCgnLmJmaC1zbGlkZXItdmFsdWUnKS50ZXh0KHZhbCk7XG4gICAgfSxcbiAgICBcbiAgICB1cGRhdGVWYWw6IGZ1bmN0aW9uKHBvc2l0aW9uWCkge1xuICAgICAgdmFyIHdpZHRoLFxuICAgICAgICAgIGxlZnQsXG4gICAgICAgICAgcmlnaHQsXG4gICAgICAgICAgdmFsLFxuICAgICAgICAgIHNwYW47XG4gICAgICBcbiAgICAgIHNwYW4gPSB0aGlzLm9wdGlvbnMubWF4IC0gdGhpcy5vcHRpb25zLm1pbjtcbiAgICAgIHdpZHRoID0gdGhpcy4kZWxlbWVudC53aWR0aCgpO1xuICAgICAgbGVmdCA9IHRoaXMuJGVsZW1lbnQub2Zmc2V0KCkubGVmdDtcbiAgICAgIHJpZ2h0ID0gbGVmdCArIHdpZHRoO1xuICAgICAgXG4gICAgICBpZiAocG9zaXRpb25YIDwgbGVmdCkge1xuICAgICAgICBwb3NpdGlvblggPSBsZWZ0O1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAocG9zaXRpb25YICsgMjAgPiByaWdodCkge1xuICAgICAgICBwb3NpdGlvblggPSByaWdodDtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdmFsID0gKHBvc2l0aW9uWCAtIGxlZnQpIC8gd2lkdGg7XG4gICAgICB2YWwgPSBNYXRoLmNlaWwodmFsICogc3BhbiArIHRoaXMub3B0aW9ucy5taW4pO1xuICAgICAgXG4gICAgICBpZiAodmFsID09PSB0aGlzLiRlbGVtZW50LnZhbCgpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgICAgXG4gICAgICB0aGlzLiRlbGVtZW50LnZhbCh2YWwpO1xuICAgICAgXG4gICAgICB0aGlzLiRlbGVtZW50LnRyaWdnZXIoJ2NoYW5nZS5iZmhzbGlkZXInKTtcbiAgICB9LFxuICAgIFxuICAgIG1vdXNlRG93bjogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgJHRoaXM7XG4gICAgICBcbiAgICAgICR0aGlzID0gJCh0aGlzKTtcbiAgICAgIFxuICAgICAgaWYgKCR0aGlzLmlzKCcuZGlzYWJsZWQnKSB8fCAkdGhpcy5hdHRyKCdkaXNhYmxlZCcpICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICBcbiAgICAgICQoZG9jdW1lbnQpXG4gICAgICAgIC5vbignbW91c2Vtb3ZlLmJmaHNsaWRlci5kYXRhLWFwaScsIHtzbGlkZXI6ICR0aGlzfSwgQkZIU2xpZGVyLnByb3RvdHlwZS5tb3VzZU1vdmUpXG4gICAgICAgIC5vbmUoJ21vdXNldXAuYmZoc2xpZGVyLmRhdGEtYXBpJywge3NsaWRlcjogJHRoaXN9LCBCRkhTbGlkZXIucHJvdG90eXBlLm1vdXNlVXApO1xuICAgIH0sXG4gICAgXG4gICAgbW91c2VNb3ZlOiBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgJHRoaXM7XG4gICAgICBcbiAgICAgICR0aGlzID0gZS5kYXRhLnNsaWRlcjtcbiAgICAgIFxuICAgICAgJHRoaXMuZGF0YSgnYmZoc2xpZGVyJykudXBkYXRlVmFsKGUucGFnZVgpO1xuICAgIH0sXG4gICAgXG4gICAgbW91c2VVcDogZnVuY3Rpb24oZSkge1xuICAgICAgdmFyICR0aGlzO1xuICAgICAgXG4gICAgICAkdGhpcyA9IGUuZGF0YS5zbGlkZXI7XG4gICAgICBcbiAgICAgICR0aGlzLmRhdGEoJ2JmaHNsaWRlcicpLnVwZGF0ZVZhbChlLnBhZ2VYKTtcbiAgICAgIFxuICAgICAgJChkb2N1bWVudCkub2ZmKCdtb3VzZW1vdmUuYmZoc2xpZGVyLmRhdGEtYXBpJyk7XG4gICAgfVxuICB9O1xuXG5cbiAgLyogU0xJREVSIFBMVUdJTiBERUZJTklUSU9OXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgdmFyIG9sZCA9ICQuZm4uYmZoc2xpZGVyO1xuXG4gICQuZm4uYmZoc2xpZGVyID0gZnVuY3Rpb24gKG9wdGlvbikge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICR0aGlzLFxuICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgb3B0aW9ucztcblxuICAgICAgJHRoaXMgPSAkKHRoaXMpO1xuICAgICAgZGF0YSA9ICR0aGlzLmRhdGEoJ2JmaHNsaWRlcicpO1xuICAgICAgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT09ICdvYmplY3QnICYmIG9wdGlvbjtcbiAgICAgIHRoaXMudHlwZSA9ICdiZmhzbGlkZXInO1xuXG4gICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgJHRoaXMuZGF0YSgnYmZoc2xpZGVyJywgKGRhdGEgPSBuZXcgQkZIU2xpZGVyKHRoaXMsIG9wdGlvbnMpKSk7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZGF0YVtvcHRpb25dLmNhbGwoJHRoaXMpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gICQuZm4uYmZoc2xpZGVyLkNvbnN0cnVjdG9yID0gQkZIU2xpZGVyO1xuXG4gICQuZm4uYmZoc2xpZGVyLmRlZmF1bHRzID0ge1xuICAgIG5hbWU6ICcnLFxuICAgIHZhbHVlOiAnJyxcbiAgICBtaW46IDAsXG4gICAgbWF4OiAxMDBcbiAgfTtcblxuXG4gIC8qIFNMSURFUiBOTyBDT05GTElDVFxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICQuZm4uYmZoc2xpZGVyLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgJC5mbi5iZmhzbGlkZXIgPSBvbGQ7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cblxuICAvKiBTTElERVIgVkFMSE9PS1NcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgb3JpZ0hvb2s7XG4gIGlmICgkLnZhbEhvb2tzLmRpdil7XG4gICAgb3JpZ0hvb2sgPSAkLnZhbEhvb2tzLmRpdjtcbiAgfVxuICAkLnZhbEhvb2tzLmRpdiA9IHtcbiAgICBnZXQ6IGZ1bmN0aW9uKGVsKSB7XG4gICAgICBpZiAoJChlbCkuaGFzQ2xhc3MoJ2JmaC1zbGlkZXInKSkge1xuICAgICAgICByZXR1cm4gJChlbCkuZmluZCgnaW5wdXRbdHlwZT1cImhpZGRlblwiXScpLnZhbCgpO1xuICAgICAgfSBlbHNlIGlmIChvcmlnSG9vaykge1xuICAgICAgICByZXR1cm4gb3JpZ0hvb2suZ2V0KGVsKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24oZWwsIHZhbCkge1xuICAgICAgaWYgKCQoZWwpLmhhc0NsYXNzKCdiZmgtc2xpZGVyJykpIHtcbiAgICAgICAgJChlbCkuZmluZCgnaW5wdXRbdHlwZT1cImhpZGRlblwiXScpLnZhbCh2YWwpO1xuICAgICAgICAkKGVsKS5kYXRhKCdiZmhzbGlkZXInKS51cGRhdGVIYW5kbGUodmFsKTtcbiAgICAgIH0gZWxzZSBpZiAob3JpZ0hvb2spIHtcbiAgICAgICAgcmV0dXJuIG9yaWdIb29rLnNldChlbCx2YWwpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuXG4gIC8qIFNMSURFUiBEQVRBLUFQSVxuICAgKiA9PT09PT09PT09PT09PSAqL1xuXG4gICQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiAoKSB7XG4gICAgJCgnZGl2LmJmaC1zbGlkZXInKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkc2xpZGVyO1xuXG4gICAgICAkc2xpZGVyID0gJCh0aGlzKTtcblxuICAgICAgJHNsaWRlci5iZmhzbGlkZXIoJHNsaWRlci5kYXRhKCkpO1xuICAgIH0pO1xuICB9KTtcblxufSh3aW5kb3cualF1ZXJ5KTtcblxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICogYm9vdHN0cmFwLWZvcm1oZWxwZXJzLXN0YXRlcy5qc1xuICogaHR0cHM6Ly9naXRodWIuY29tL3ZsYW1hbm5hL0Jvb3RzdHJhcEZvcm1IZWxwZXJzXG4gKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBDb3B5cmlnaHQgMjAxMiBWaW5jZW50IExhbWFubmFcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuK2Z1bmN0aW9uICgkKSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG5cbiAgLyogU1RBVEVTIENMQVNTIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIHZhciBCRkhTdGF0ZXMgPSBmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCAkLmZuLmJmaHN0YXRlcy5kZWZhdWx0cywgb3B0aW9ucyk7XG4gICAgdGhpcy4kZWxlbWVudCA9ICQoZWxlbWVudCk7XG5cbiAgICBpZiAodGhpcy4kZWxlbWVudC5pcygnc2VsZWN0JykpIHtcbiAgICAgIHRoaXMuYWRkU3RhdGVzKCk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuJGVsZW1lbnQuaGFzQ2xhc3MoJ2JmaC1zZWxlY3Rib3gnKSkge1xuICAgICAgdGhpcy5hZGRCb290c3RyYXBTdGF0ZXMoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy4kZWxlbWVudC5pcygnc3BhbicpKSB7XG4gICAgICB0aGlzLmRpc3BsYXlTdGF0ZSgpO1xuICAgIH1cbiAgfTtcblxuICBCRkhTdGF0ZXMucHJvdG90eXBlID0ge1xuXG4gICAgY29uc3RydWN0b3I6IEJGSFN0YXRlcyxcblxuICAgIGFkZFN0YXRlczogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGNvdW50cnksXG4gICAgICAgICAgJGNvdW50cnk7XG5cbiAgICAgIGNvdW50cnkgPSB0aGlzLm9wdGlvbnMuY291bnRyeTtcblxuICAgICAgaWYgKGNvdW50cnkgIT09ICcnKSB7XG4gICAgICAgICRjb3VudHJ5ID0gJChkb2N1bWVudCkuZmluZCgnIycgKyBjb3VudHJ5KTtcblxuICAgICAgICBpZiAoJGNvdW50cnkubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgY291bnRyeSA9ICRjb3VudHJ5LnZhbCgpO1xuICAgICAgICAgICRjb3VudHJ5Lm9uKCdjaGFuZ2UnLCB7c3RhdGU6IHRoaXN9LCB0aGlzLmNoYW5nZUNvdW50cnkpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMubG9hZFN0YXRlcyhjb3VudHJ5KTtcbiAgICB9LFxuXG4gICAgbG9hZFN0YXRlczogZnVuY3Rpb24gKGNvdW50cnkpIHtcbiAgICAgIHZhciB2YWx1ZSxcbiAgICAgICAgICBzdGF0ZTtcblxuICAgICAgdmFsdWUgPSB0aGlzLm9wdGlvbnMuc3RhdGU7XG5cbiAgICAgIHRoaXMuJGVsZW1lbnQuaHRtbCgnJyk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYmxhbmsgPT09IHRydWUpIHtcbiAgICAgICAgdGhpcy4kZWxlbWVudC5hcHBlbmQoJzxvcHRpb24gdmFsdWU9XCJcIj48L29wdGlvbj4nKTtcbiAgICAgIH1cblxuICAgICAgZm9yIChzdGF0ZSBpbiBCRkhTdGF0ZXNMaXN0W2NvdW50cnldKSB7XG4gICAgICAgIGlmIChCRkhTdGF0ZXNMaXN0W2NvdW50cnldLmhhc093blByb3BlcnR5KHN0YXRlKSkge1xuICAgICAgICAgIHRoaXMuJGVsZW1lbnQuYXBwZW5kKCc8b3B0aW9uIHZhbHVlPVwiJyArIEJGSFN0YXRlc0xpc3RbY291bnRyeV1bc3RhdGVdLmNvZGUgKyAnXCI+JyArIEJGSFN0YXRlc0xpc3RbY291bnRyeV1bc3RhdGVdLm5hbWUgKyAnPC9vcHRpb24+Jyk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy4kZWxlbWVudC52YWwodmFsdWUpO1xuICAgIH0sXG5cbiAgICBjaGFuZ2VDb3VudHJ5OiBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyICR0aGlzLFxuICAgICAgICAgICRzdGF0ZSxcbiAgICAgICAgICBjb3VudHJ5O1xuXG4gICAgICAkdGhpcyA9ICQodGhpcyk7XG4gICAgICAkc3RhdGUgPSBlLmRhdGEuc3RhdGU7XG4gICAgICBjb3VudHJ5ID0gJHRoaXMudmFsKCk7XG5cbiAgICAgICRzdGF0ZS5sb2FkU3RhdGVzKGNvdW50cnkpO1xuICAgIH0sXG5cbiAgICBhZGRCb290c3RyYXBTdGF0ZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGNvdW50cnksXG4gICAgICAgICAgJGNvdW50cnk7XG5cbiAgICAgIGNvdW50cnkgPSB0aGlzLm9wdGlvbnMuY291bnRyeTtcblxuICAgICAgaWYgKGNvdW50cnkgIT09ICcnKSB7XG4gICAgICAgICRjb3VudHJ5ID0gJChkb2N1bWVudCkuZmluZCgnIycgKyBjb3VudHJ5KTtcblxuICAgICAgICBpZiAoJGNvdW50cnkubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgY291bnRyeSA9ICRjb3VudHJ5LmZpbmQoJ2lucHV0W3R5cGU9XCJoaWRkZW5cIl0nKS52YWwoKTtcbiAgICAgICAgICAkY291bnRyeS5vbignY2hhbmdlLmJmaHNlbGVjdGJveCcsIHtzdGF0ZTogdGhpc30sIHRoaXMuY2hhbmdlQm9vdHN0cmFwQ291bnRyeSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgdGhpcy5sb2FkQm9vdHN0cmFwU3RhdGVzKGNvdW50cnkpO1xuICAgIH0sXG5cbiAgICBsb2FkQm9vdHN0cmFwU3RhdGVzOiBmdW5jdGlvbihjb3VudHJ5KSB7XG4gICAgICB2YXIgJGlucHV0LFxuICAgICAgICAgICR0b2dnbGUsXG4gICAgICAgICAgJG9wdGlvbnMsXG4gICAgICAgICAgc3RhdGVDb2RlLFxuICAgICAgICAgIHN0YXRlTmFtZSxcbiAgICAgICAgICBzdGF0ZTtcblxuICAgICAgc3RhdGVDb2RlID0gdGhpcy5vcHRpb25zLnN0YXRlO1xuICAgICAgc3RhdGVOYW1lID0gJyc7XG4gICAgICAkaW5wdXQgPSB0aGlzLiRlbGVtZW50LmZpbmQoJ2lucHV0W3R5cGU9XCJoaWRkZW5cIl0nKTtcbiAgICAgICR0b2dnbGUgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5iZmgtc2VsZWN0Ym94LW9wdGlvbicpO1xuICAgICAgJG9wdGlvbnMgPSB0aGlzLiRlbGVtZW50LmZpbmQoJ1tyb2xlPW9wdGlvbl0nKTtcblxuICAgICAgJG9wdGlvbnMuaHRtbCgnJyk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYmxhbmsgPT09IHRydWUpIHtcbiAgICAgICAgJG9wdGlvbnMuYXBwZW5kKCc8bGk+PGEgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIjXCIgZGF0YS1vcHRpb249XCJcIj48L2E+PC9saT4nKTtcbiAgICAgIH1cblxuICAgICAgZm9yIChzdGF0ZSBpbiBCRkhTdGF0ZXNMaXN0W2NvdW50cnldKSB7XG4gICAgICAgIGlmIChCRkhTdGF0ZXNMaXN0W2NvdW50cnldLmhhc093blByb3BlcnR5KHN0YXRlKSkge1xuICAgICAgICAgICRvcHRpb25zLmFwcGVuZCgnPGxpPjxhIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiI1wiIGRhdGEtb3B0aW9uPVwiJyArIEJGSFN0YXRlc0xpc3RbY291bnRyeV1bc3RhdGVdLmNvZGUgKyAnXCI+JyArIEJGSFN0YXRlc0xpc3RbY291bnRyeV1bc3RhdGVdLm5hbWUgKyAnPC9hPjwvbGk+Jyk7XG5cbiAgICAgICAgICBpZiAoQkZIU3RhdGVzTGlzdFtjb3VudHJ5XVtzdGF0ZV0uY29kZSA9PT0gc3RhdGVDb2RlKSB7XG4gICAgICAgICAgICBzdGF0ZU5hbWUgPSBCRkhTdGF0ZXNMaXN0W2NvdW50cnldW3N0YXRlXS5uYW1lO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLiRlbGVtZW50LnZhbChzdGF0ZUNvZGUpO1xuICAgIH0sXG5cbiAgICBjaGFuZ2VCb290c3RyYXBDb3VudHJ5OiBmdW5jdGlvbiAoZSkge1xuICAgICAgdmFyICR0aGlzLFxuICAgICAgICAgICRzdGF0ZSxcbiAgICAgICAgICBjb3VudHJ5O1xuXG4gICAgICAkdGhpcyA9ICQodGhpcyk7XG4gICAgICAkc3RhdGUgPSBlLmRhdGEuc3RhdGU7XG4gICAgICBjb3VudHJ5ID0gJHRoaXMudmFsKCk7XG5cbiAgICAgICRzdGF0ZS5sb2FkQm9vdHN0cmFwU3RhdGVzKGNvdW50cnkpO1xuICAgIH0sXG5cbiAgICBkaXNwbGF5U3RhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBjb3VudHJ5LFxuICAgICAgICAgIHN0YXRlQ29kZSxcbiAgICAgICAgICBzdGF0ZU5hbWUsXG4gICAgICAgICAgc3RhdGU7XG5cbiAgICAgIGNvdW50cnkgPSB0aGlzLm9wdGlvbnMuY291bnRyeTtcbiAgICAgIHN0YXRlQ29kZSA9IHRoaXMub3B0aW9ucy5zdGF0ZTtcbiAgICAgIHN0YXRlTmFtZSA9ICcnO1xuXG4gICAgICBmb3IgKHN0YXRlIGluIEJGSFN0YXRlc0xpc3RbY291bnRyeV0pIHtcbiAgICAgICAgaWYgKEJGSFN0YXRlc0xpc3RbY291bnRyeV0uaGFzT3duUHJvcGVydHkoc3RhdGUpKSB7XG4gICAgICAgICAgaWYgKEJGSFN0YXRlc0xpc3RbY291bnRyeV1bc3RhdGVdLmNvZGUgPT09IHN0YXRlQ29kZSkge1xuICAgICAgICAgICAgc3RhdGVOYW1lID0gQkZIU3RhdGVzTGlzdFtjb3VudHJ5XVtzdGF0ZV0ubmFtZTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdGhpcy4kZWxlbWVudC5odG1sKHN0YXRlTmFtZSk7XG4gICAgfVxuXG4gIH07XG5cblxuICAvKiBTVEFURVMgUExVR0lOIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgb2xkID0gJC5mbi5iZmhzdGF0ZXM7XG5cbiAgJC5mbi5iZmhzdGF0ZXMgPSBmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgZGF0YSxcbiAgICAgICAgICBvcHRpb25zO1xuXG4gICAgICAkdGhpcyA9ICQodGhpcyk7XG4gICAgICBkYXRhID0gJHRoaXMuZGF0YSgnYmZoc3RhdGVzJyk7XG4gICAgICBvcHRpb25zID0gdHlwZW9mIG9wdGlvbiA9PT0gJ29iamVjdCcgJiYgb3B0aW9uO1xuXG4gICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgJHRoaXMuZGF0YSgnYmZoc3RhdGVzJywgKGRhdGEgPSBuZXcgQkZIU3RhdGVzKHRoaXMsIG9wdGlvbnMpKSk7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZGF0YVtvcHRpb25dLmNhbGwoJHRoaXMpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gICQuZm4uYmZoc3RhdGVzLkNvbnN0cnVjdG9yID0gQkZIU3RhdGVzO1xuXG4gICQuZm4uYmZoc3RhdGVzLmRlZmF1bHRzID0ge1xuICAgIGNvdW50cnk6ICcnLFxuICAgIHN0YXRlOiAnJyxcbiAgICBibGFuazogdHJ1ZVxuICB9O1xuXG5cbiAgLyogU1RBVEVTIE5PIENPTkZMSUNUXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgJC5mbi5iZmhzdGF0ZXMubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLmJmaHN0YXRlcyA9IG9sZDtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuXG4gIC8qIFNUQVRFUyBEQVRBLUFQSVxuICAgKiA9PT09PT09PT09PT09PSAqL1xuXG4gICQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiAoKSB7XG4gICAgJCgnZm9ybSBzZWxlY3QuYmZoLXN0YXRlcywgc3Bhbi5iZmgtc3RhdGVzLCBkaXYuYmZoLXN0YXRlcycpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgdmFyICRzdGF0ZXM7XG5cbiAgICAgICRzdGF0ZXMgPSAkKHRoaXMpO1xuXG4gICAgICBpZiAoJHN0YXRlcy5oYXNDbGFzcygnYmZoLXNlbGVjdGJveCcpKSB7XG4gICAgICAgICRzdGF0ZXMuYmZoc2VsZWN0Ym94KCRzdGF0ZXMuZGF0YSgpKTtcbiAgICAgIH1cbiAgICAgICRzdGF0ZXMuYmZoc3RhdGVzKCRzdGF0ZXMuZGF0YSgpKTtcbiAgICB9KTtcbiAgfSk7XG5cbn0od2luZG93LmpRdWVyeSk7XG5cbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIGJvb3RzdHJhcC1mb3JtaGVscGVycy10aW1lcGlja2VyLmpzXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdmxhbWFubmEvQm9vdHN0cmFwRm9ybUhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDEyIFZpbmNlbnQgTGFtYW5uYVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG5cbitmdW5jdGlvbiAoJCkge1xuXG4gICd1c2Ugc3RyaWN0JztcblxuXG4gLyogVElNRVBJQ0tFUiBDTEFTUyBERUZJTklUSU9OXG4gICogPT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gIHZhciB0b2dnbGUgPSAnW2RhdGEtdG9nZ2xlPWJmaC10aW1lcGlja2VyXScsXG4gICAgICBCRkhUaW1lUGlja2VyID0gZnVuY3Rpb24gKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sICQuZm4uYmZodGltZXBpY2tlci5kZWZhdWx0cywgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuJGVsZW1lbnQgPSAkKGVsZW1lbnQpO1xuXG4gICAgICAgIHRoaXMuaW5pdFBvcG92ZXIoKTtcbiAgICAgIH07XG5cbiAgQkZIVGltZVBpY2tlci5wcm90b3R5cGUgPSB7XG5cbiAgICBjb25zdHJ1Y3RvcjogQkZIVGltZVBpY2tlcixcblxuICAgIHNldFRpbWU6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHRpbWUsXG4gICAgICAgICAgdG9kYXksXG4gICAgICAgICAgdGltZVBhcnRzLFxuICAgICAgICAgIGhvdXJzLFxuICAgICAgICAgIG1pbnV0ZXMsXG4gICAgICAgICAgbW9kZSxcbiAgICAgICAgICBjdXJyZW50TW9kZTtcblxuICAgICAgdGltZSA9IHRoaXMub3B0aW9ucy50aW1lO1xuICAgICAgbW9kZSA9ICcnO1xuICAgICAgY3VycmVudE1vZGUgPSAnJztcbiAgICAgIFxuICAgICAgaWYgKHRpbWUgPT09ICcnIHx8IHRpbWUgPT09ICdub3cnIHx8IHRpbWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0b2RheSA9IG5ldyBEYXRlKCk7XG5cbiAgICAgICAgaG91cnMgPSB0b2RheS5nZXRIb3VycygpO1xuICAgICAgICBtaW51dGVzID0gdG9kYXkuZ2V0TWludXRlcygpO1xuICAgICAgICBcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5tb2RlID09PSAnMTJoJykge1xuICAgICAgICAgIGlmIChob3VycyA+IDEyKSB7XG4gICAgICAgICAgICBob3VycyA9IGhvdXJzIC0gMTI7XG4gICAgICAgICAgICBtb2RlID0gJyAnICsgQkZIVGltZVBpY2tlck1vZGVzLnBtO1xuICAgICAgICAgICAgY3VycmVudE1vZGUgPSAncG0nO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBtb2RlID0gJyAnICsgQkZIVGltZVBpY2tlck1vZGVzLmFtO1xuICAgICAgICAgICAgY3VycmVudE1vZGUgPSAnYW0nO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaWYgKHRpbWUgPT09ICdub3cnKSB7XG4gICAgICAgICAgdGhpcy4kZWxlbWVudC5maW5kKCcuYmZoLXRpbWVwaWNrZXItdG9nZ2xlID4gaW5wdXRbdHlwZT1cInRleHRcIl0nKS52YWwoZm9ybWF0VGltZShob3VycywgbWludXRlcykgKyBtb2RlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuJGVsZW1lbnQuZGF0YSgnaG91cicsIGhvdXJzKTtcbiAgICAgICAgdGhpcy4kZWxlbWVudC5kYXRhKCdtaW51dGUnLCBtaW51dGVzKTtcbiAgICAgICAgdGhpcy4kZWxlbWVudC5kYXRhKCdtb2RlJywgY3VycmVudE1vZGUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGltZVBhcnRzID0gU3RyaW5nKHRpbWUpLnNwbGl0KEJGSFRpbWVQaWNrZXJEZWxpbWl0ZXIpO1xuICAgICAgICBob3VycyA9IHRpbWVQYXJ0c1swXTtcbiAgICAgICAgbWludXRlcyA9IHRpbWVQYXJ0c1sxXTtcbiAgICAgICAgXG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMubW9kZSA9PT0gJzEyaCcpIHtcbiAgICAgICAgICB0aW1lUGFydHMgPSBTdHJpbmcobWludXRlcykuc3BsaXQoJyAnKTtcbiAgICAgICAgICBtaW51dGVzID0gdGltZVBhcnRzWzBdO1xuICAgICAgICAgIGlmICh0aW1lUGFydHNbMV0gPT09IEJGSFRpbWVQaWNrZXJNb2Rlcy5wbSkge1xuICAgICAgICAgICAgY3VycmVudE1vZGUgPSAncG0nO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjdXJyZW50TW9kZSA9ICdhbSc7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB0aGlzLiRlbGVtZW50LmZpbmQoJy5iZmgtdGltZXBpY2tlci10b2dnbGUgPiBpbnB1dFt0eXBlPVwidGV4dFwiXScpLnZhbCh0aW1lKTtcbiAgICAgICAgdGhpcy4kZWxlbWVudC5kYXRhKCdob3VyJywgaG91cnMpO1xuICAgICAgICB0aGlzLiRlbGVtZW50LmRhdGEoJ21pbnV0ZScsIG1pbnV0ZXMpO1xuICAgICAgICB0aGlzLiRlbGVtZW50LmRhdGEoJ21vZGUnLCBjdXJyZW50TW9kZSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGluaXRQb3BvdmVyOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBpY29uTGVmdCxcbiAgICAgICAgICBpY29uUmlnaHQsXG4gICAgICAgICAgaWNvbkFkZG9uLFxuICAgICAgICAgIG1vZGVBZGRvbixcbiAgICAgICAgICBtb2RlTWF4O1xuXG4gICAgICBpY29uTGVmdCA9ICcnO1xuICAgICAgaWNvblJpZ2h0ID0gJyc7XG4gICAgICBpY29uQWRkb24gPSAnJztcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuaWNvbiAhPT0gJycpIHtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5hbGlnbiA9PT0gJ3JpZ2h0Jykge1xuICAgICAgICAgIGljb25SaWdodCA9ICc8c3BhbiBjbGFzcz1cImlucHV0LWdyb3VwLWFkZG9uXCI+PGkgY2xhc3M9XCInICsgdGhpcy5vcHRpb25zLmljb24gKyAnXCI+PC9pPjwvc3Bhbj4nO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGljb25MZWZ0ID0gJzxzcGFuIGNsYXNzPVwiaW5wdXQtZ3JvdXAtYWRkb25cIj48aSBjbGFzcz1cIicgKyB0aGlzLm9wdGlvbnMuaWNvbiArICdcIj48L2k+PC9zcGFuPic7XG4gICAgICAgIH1cbiAgICAgICAgaWNvbkFkZG9uID0gJ2lucHV0LWdyb3VwJztcbiAgICAgIH1cbiAgICAgIFxuICAgICAgbW9kZUFkZG9uID0gJyc7XG4gICAgICBtb2RlTWF4ID0gJzIzJztcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMubW9kZSA9PT0gJzEyaCcpIHtcbiAgICAgICAgbW9kZUFkZG9uID0gJzx0ZD4nICtcbiAgICAgICAgICAnPGRpdiBjbGFzcz1cImJmaC1zZWxlY3Rib3hcIiBkYXRhLWlucHV0PVwiJyArIHRoaXMub3B0aW9ucy5pbnB1dCArICdcIiBkYXRhLXZhbHVlPVwiYW1cIj4nICtcbiAgICAgICAgICAnPGRpdiBkYXRhLXZhbHVlPVwiYW1cIj4nICsgQkZIVGltZVBpY2tlck1vZGVzLmFtICsgJzwvZGl2PicgK1xuICAgICAgICAgICc8ZGl2IGRhdGEtdmFsdWU9XCJwbVwiPicgKyBCRkhUaW1lUGlja2VyTW9kZXMucG0gKyAnPC9kaXY+JyArXG4gICAgICAgICAgJzwvZGl2Pic7XG4gICAgICAgIG1vZGVNYXggPSAnMTEnO1xuICAgICAgfVxuXG4gICAgICB0aGlzLiRlbGVtZW50Lmh0bWwoXG4gICAgICAgICc8ZGl2IGNsYXNzPVwiJyArIGljb25BZGRvbiArICcgYmZoLXRpbWVwaWNrZXItdG9nZ2xlXCIgZGF0YS10b2dnbGU9XCJiZmgtdGltZXBpY2tlclwiPicgK1xuICAgICAgICBpY29uTGVmdCArXG4gICAgICAgICc8aW5wdXQgdHlwZT1cInRleHRcIiBuYW1lPVwiJyArIHRoaXMub3B0aW9ucy5uYW1lICsgJ1wiIGNsYXNzPVwiJyArIHRoaXMub3B0aW9ucy5pbnB1dCArICdcIiBwbGFjZWhvbGRlcj1cIicgKyB0aGlzLm9wdGlvbnMucGxhY2Vob2xkZXIgKyAnXCIgcmVhZG9ubHk+JyArXG4gICAgICAgIGljb25SaWdodCArXG4gICAgICAgICc8L2Rpdj4nICtcbiAgICAgICAgJzxkaXYgY2xhc3M9XCJiZmgtdGltZXBpY2tlci1wb3BvdmVyXCI+JyArXG4gICAgICAgICc8dGFibGUgY2xhc3M9XCJ0YWJsZVwiPicgK1xuICAgICAgICAnPHRib2R5PicgK1xuICAgICAgICAnPHRyPicgK1xuICAgICAgICAnPHRkIGNsYXNzPVwiaG91clwiPicgK1xuICAgICAgICAnPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCInICsgdGhpcy5vcHRpb25zLmlucHV0ICsgJyBiZmgtbnVtYmVyXCIgIGRhdGEtbWluPVwiMFwiIGRhdGEtbWF4PVwiJyArIG1vZGVNYXggKyAnXCIgZGF0YS16ZXJvcz1cInRydWVcIiBkYXRhLXdyYXA9XCJ0cnVlXCI+JyArXG4gICAgICAgICc8L3RkPicgK1xuICAgICAgICAnPHRkIGNsYXNzPVwic2VwYXJhdG9yXCI+JyArIEJGSFRpbWVQaWNrZXJEZWxpbWl0ZXIgKyAnPC90ZD4nICtcbiAgICAgICAgJzx0ZCBjbGFzcz1cIm1pbnV0ZVwiPicgK1xuICAgICAgICAnPGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCInICsgdGhpcy5vcHRpb25zLmlucHV0ICsgJyBiZmgtbnVtYmVyXCIgIGRhdGEtbWluPVwiMFwiIGRhdGEtbWF4PVwiNTlcIiBkYXRhLXplcm9zPVwidHJ1ZVwiIGRhdGEtd3JhcD1cInRydWVcIj4nICtcbiAgICAgICAgJzwvdGQ+JyArXG4gICAgICAgIG1vZGVBZGRvbiArXG4gICAgICAgICc8L3RyPicgK1xuICAgICAgICAnPC90Ym9keT4nICtcbiAgICAgICAgJzwvdGFibGU+JyArXG4gICAgICAgICc8L2Rpdj4nXG4gICAgICApO1xuXG4gICAgICB0aGlzLiRlbGVtZW50XG4gICAgICAgIC5vbignY2xpY2suYmZodGltZXBpY2tlci5kYXRhLWFwaSB0b3VjaHN0YXJ0LmJmaHRpbWVwaWNrZXIuZGF0YS1hcGknLCB0b2dnbGUsIEJGSFRpbWVQaWNrZXIucHJvdG90eXBlLnRvZ2dsZSlcbiAgICAgICAgLm9uKCdjbGljay5iZmh0aW1lcGlja2VyLmRhdGEtYXBpIHRvdWNoc3RhcnQuYmZodGltZXBpY2tlci5kYXRhLWFwaScsICcuYmZoLXRpbWVwaWNrZXItcG9wb3ZlciA+IHRhYmxlJywgZnVuY3Rpb24oKSB7IHJldHVybiBmYWxzZTsgfSk7XG5cbiAgICAgIHRoaXMuJGVsZW1lbnQuZmluZCgnLmJmaC1udW1iZXInKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyICRudW1iZXI7XG5cbiAgICAgICAgJG51bWJlciA9ICQodGhpcyk7XG5cbiAgICAgICAgJG51bWJlci5iZmhudW1iZXIoJG51bWJlci5kYXRhKCkpO1xuICAgICAgICBcbiAgICAgICAgJG51bWJlci5vbignY2hhbmdlJywgQkZIVGltZVBpY2tlci5wcm90b3R5cGUuY2hhbmdlKTtcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICB0aGlzLiRlbGVtZW50LmZpbmQoJy5iZmgtc2VsZWN0Ym94JykuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyICRzZWxlY3Rib3g7XG5cbiAgICAgICAgJHNlbGVjdGJveCA9ICQodGhpcyk7XG5cbiAgICAgICAgJHNlbGVjdGJveC5iZmhzZWxlY3Rib3goJHNlbGVjdGJveC5kYXRhKCkpO1xuICAgICAgICBcbiAgICAgICAgJHNlbGVjdGJveC5vbignY2hhbmdlLmJmaHNlbGVjdGJveCcsIEJGSFRpbWVQaWNrZXIucHJvdG90eXBlLmNoYW5nZSk7XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgdGhpcy5zZXRUaW1lKCk7XG5cbiAgICAgIHRoaXMudXBkYXRlUG9wb3ZlcigpO1xuICAgIH0sXG5cbiAgICB1cGRhdGVQb3BvdmVyOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBob3VyLFxuICAgICAgICAgIG1pbnV0ZSxcbiAgICAgICAgICBtb2RlO1xuXG4gICAgICBob3VyID0gdGhpcy4kZWxlbWVudC5kYXRhKCdob3VyJyk7XG4gICAgICBtaW51dGUgPSB0aGlzLiRlbGVtZW50LmRhdGEoJ21pbnV0ZScpO1xuICAgICAgbW9kZSA9IHRoaXMuJGVsZW1lbnQuZGF0YSgnbW9kZScpO1xuXG4gICAgICB0aGlzLiRlbGVtZW50LmZpbmQoJy5ob3VyIGlucHV0W3R5cGU9dGV4dF0nKS52YWwoaG91cikuY2hhbmdlKCk7XG4gICAgICB0aGlzLiRlbGVtZW50LmZpbmQoJy5taW51dGUgaW5wdXRbdHlwZT10ZXh0XScpLnZhbChtaW51dGUpLmNoYW5nZSgpO1xuICAgICAgdGhpcy4kZWxlbWVudC5maW5kKCcuYmZoLXNlbGVjdGJveCcpLnZhbChtb2RlKTtcbiAgICB9LFxuICAgIFxuICAgIGNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgJHBhcmVudCxcbiAgICAgICAgICAkdGltZVBpY2tlcixcbiAgICAgICAgICBtb2RlO1xuXG4gICAgICAkdGhpcyA9ICQodGhpcyk7XG4gICAgICAkcGFyZW50ID0gZ2V0UGFyZW50KCR0aGlzKTtcbiAgICAgIFxuICAgICAgJHRpbWVQaWNrZXIgPSAkcGFyZW50LmRhdGEoJ2JmaHRpbWVwaWNrZXInKTtcbiAgICAgIFxuICAgICAgaWYgKCR0aW1lUGlja2VyICYmICR0aW1lUGlja2VyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBtb2RlID0gJyc7XG4gICAgICAgIGlmICgkdGltZVBpY2tlci5vcHRpb25zLm1vZGUgPT09ICcxMmgnKSB7XG4gICAgICAgICAgbW9kZSA9ICcgJyArIEJGSFRpbWVQaWNrZXJNb2Rlc1skcGFyZW50LmZpbmQoJy5iZmgtc2VsZWN0Ym94JykudmFsKCldO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAkcGFyZW50LmZpbmQoJy5iZmgtdGltZXBpY2tlci10b2dnbGUgPiBpbnB1dFt0eXBlPVwidGV4dFwiXScpLnZhbCgkcGFyZW50LmZpbmQoJy5ob3VyIGlucHV0W3R5cGU9dGV4dF0nKS52YWwoKSArIEJGSFRpbWVQaWNrZXJEZWxpbWl0ZXIgKyAkcGFyZW50LmZpbmQoJy5taW51dGUgaW5wdXRbdHlwZT10ZXh0XScpLnZhbCgpICsgbW9kZSk7XG5cbiAgICAgICAgJHBhcmVudC50cmlnZ2VyKCdjaGFuZ2UuYmZodGltZXBpY2tlcicpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSxcblxuICAgIHRvZ2dsZTogZnVuY3Rpb24oZSkge1xuICAgICAgdmFyICR0aGlzLFxuICAgICAgICAgICRwYXJlbnQsXG4gICAgICAgICAgaXNBY3RpdmU7XG5cbiAgICAgICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICRwYXJlbnQgPSBnZXRQYXJlbnQoJHRoaXMpO1xuXG4gICAgICBpZiAoJHBhcmVudC5pcygnLmRpc2FibGVkJykgfHwgJHBhcmVudC5hdHRyKCdkaXNhYmxlZCcpICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlzQWN0aXZlID0gJHBhcmVudC5oYXNDbGFzcygnb3BlbicpO1xuXG4gICAgICBjbGVhck1lbnVzKCk7XG5cbiAgICAgIGlmICghaXNBY3RpdmUpIHtcbiAgICAgICAgJHBhcmVudC50cmlnZ2VyKGUgPSAkLkV2ZW50KCdzaG93LmJmaHRpbWVwaWNrZXInKSk7XG5cbiAgICAgICAgaWYgKGUuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgICRwYXJlbnRcbiAgICAgICAgICAudG9nZ2xlQ2xhc3MoJ29wZW4nKVxuICAgICAgICAgIC50cmlnZ2VyKCdzaG93bi5iZmh0aW1lcGlja2VyJyk7XG5cbiAgICAgICAgJHRoaXMuZm9jdXMoKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfTtcblxuICBmdW5jdGlvbiBmb3JtYXRUaW1lKGhvdXIsIG1pbnV0ZSkge1xuICAgIGhvdXIgPSBTdHJpbmcoaG91cik7XG4gICAgaWYgKGhvdXIubGVuZ3RoID09PSAxKSB7XG4gICAgICBob3VyID0gJzAnICsgaG91cjtcbiAgICB9XG5cbiAgICBtaW51dGUgPSBTdHJpbmcobWludXRlKTtcbiAgICBpZiAobWludXRlLmxlbmd0aCA9PT0gMSkge1xuICAgICAgbWludXRlID0gJzAnICsgbWludXRlO1xuICAgIH1cblxuICAgIHJldHVybiBob3VyICsgQkZIVGltZVBpY2tlckRlbGltaXRlciArIG1pbnV0ZTtcbiAgfVxuICBcbiAgZnVuY3Rpb24gY2xlYXJNZW51cygpIHtcbiAgICB2YXIgJHBhcmVudDtcblxuICAgICQodG9nZ2xlKS5lYWNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICAkcGFyZW50ID0gZ2V0UGFyZW50KCQodGhpcykpO1xuXG4gICAgICBpZiAoISRwYXJlbnQuaGFzQ2xhc3MoJ29wZW4nKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgJHBhcmVudC50cmlnZ2VyKGUgPSAkLkV2ZW50KCdoaWRlLmJmaHRpbWVwaWNrZXInKSk7XG5cbiAgICAgIGlmIChlLmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICAkcGFyZW50XG4gICAgICAgIC5yZW1vdmVDbGFzcygnb3BlbicpXG4gICAgICAgIC50cmlnZ2VyKCdoaWRkZW4uYmZodGltZXBpY2tlcicpO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0UGFyZW50KCR0aGlzKSB7XG4gICAgcmV0dXJuICR0aGlzLmNsb3Nlc3QoJy5iZmgtdGltZXBpY2tlcicpO1xuICB9XG5cblxuICAvKiBUSU1FUElDS0VSIFBMVUdJTiBERUZJTklUSU9OXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgdmFyIG9sZCA9ICQuZm4uYmZodGltZXBpY2tlcjtcblxuICAkLmZuLmJmaHRpbWVwaWNrZXIgPSBmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgZGF0YSxcbiAgICAgICAgICBvcHRpb25zO1xuXG4gICAgICAkdGhpcyA9ICQodGhpcyk7XG4gICAgICBkYXRhID0gJHRoaXMuZGF0YSgnYmZodGltZXBpY2tlcicpO1xuICAgICAgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb24gPT09ICdvYmplY3QnICYmIG9wdGlvbjtcbiAgICAgIHRoaXMudHlwZSA9ICdiZmh0aW1lcGlja2VyJztcblxuICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICR0aGlzLmRhdGEoJ2JmaHRpbWVwaWNrZXInLCAoZGF0YSA9IG5ldyBCRkhUaW1lUGlja2VyKHRoaXMsIG9wdGlvbnMpKSk7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZGF0YVtvcHRpb25dLmNhbGwoJHRoaXMpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gICQuZm4uYmZodGltZXBpY2tlci5Db25zdHJ1Y3RvciA9IEJGSFRpbWVQaWNrZXI7XG5cbiAgJC5mbi5iZmh0aW1lcGlja2VyLmRlZmF1bHRzID0ge1xuICAgIGljb246ICdnbHlwaGljb24gZ2x5cGhpY29uLXRpbWUnLFxuICAgIGFsaWduOiAnbGVmdCcsXG4gICAgaW5wdXQ6ICdmb3JtLWNvbnRyb2wnLFxuICAgIHBsYWNlaG9sZGVyOiAnJyxcbiAgICBuYW1lOiAnJyxcbiAgICB0aW1lOiAnbm93JyxcbiAgICBtb2RlOiAnMjRoJ1xuICB9O1xuXG5cbiAgLyogVElNRVBJQ0tFUiBOTyBDT05GTElDVFxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4gICQuZm4uYmZodGltZXBpY2tlci5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICQuZm4uYmZodGltZXBpY2tlciA9IG9sZDtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuXG4gIC8qIFRJTUVQSUNLRVIgVkFMSE9PS1NcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgb3JpZ0hvb2s7XG4gIGlmICgkLnZhbEhvb2tzLmRpdil7XG4gICAgb3JpZ0hvb2sgPSAkLnZhbEhvb2tzLmRpdjtcbiAgfVxuICAkLnZhbEhvb2tzLmRpdiA9IHtcbiAgICBnZXQ6IGZ1bmN0aW9uKGVsKSB7XG4gICAgICBpZiAoJChlbCkuaGFzQ2xhc3MoJ2JmaC10aW1lcGlja2VyJykpIHtcbiAgICAgICAgcmV0dXJuICQoZWwpLmZpbmQoJy5iZmgtdGltZXBpY2tlci10b2dnbGUgPiBpbnB1dFt0eXBlPVwidGV4dFwiXScpLnZhbCgpO1xuICAgICAgfSBlbHNlIGlmIChvcmlnSG9vaykge1xuICAgICAgICByZXR1cm4gb3JpZ0hvb2suZ2V0KGVsKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24oZWwsIHZhbCkge1xuICAgICAgdmFyICR0aW1lcGlja2VyO1xuICAgICAgaWYgKCQoZWwpLmhhc0NsYXNzKCdiZmgtdGltZXBpY2tlcicpKSB7XG4gICAgICAgICR0aW1lcGlja2VyID0gJChlbCkuZGF0YSgnYmZodGltZXBpY2tlcicpO1xuICAgICAgICAkdGltZXBpY2tlci5vcHRpb25zLnRpbWUgPSB2YWw7XG4gICAgICAgICR0aW1lcGlja2VyLnNldFRpbWUoKTtcbiAgICAgICAgJHRpbWVwaWNrZXIudXBkYXRlUG9wb3ZlcigpO1xuICAgICAgfSBlbHNlIGlmIChvcmlnSG9vaykge1xuICAgICAgICByZXR1cm4gb3JpZ0hvb2suc2V0KGVsLHZhbCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG5cbiAgLyogVElNRVBJQ0tFUiBEQVRBLUFQSVxuICAgKiA9PT09PT09PT09PT09PSAqL1xuXG4gICQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiAoKSB7XG4gICAgJCgnZGl2LmJmaC10aW1lcGlja2VyJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRpbWVwaWNrZXI7XG5cbiAgICAgICR0aW1lcGlja2VyID0gJCh0aGlzKTtcblxuICAgICAgJHRpbWVwaWNrZXIuYmZodGltZXBpY2tlcigkdGltZXBpY2tlci5kYXRhKCkpO1xuICAgIH0pO1xuICB9KTtcblxuXG4gIC8qIEFQUExZIFRPIFNUQU5EQVJEIFRJTUVQSUNLRVIgRUxFTUVOVFNcbiAgICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICAkKGRvY3VtZW50KVxuICAgIC5vbignY2xpY2suYmZodGltZXBpY2tlci5kYXRhLWFwaScsIGNsZWFyTWVudXMpO1xuXG59KHdpbmRvdy5qUXVlcnkpO1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4gKiBib290c3RyYXAtZm9ybWhlbHBlcnMtdGltZXpvbmVzLmpzXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdmxhbWFubmEvQm9vdHN0cmFwRm9ybUhlbHBlcnNcbiAqID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAqIENvcHlyaWdodCAyMDEyIFZpbmNlbnQgTGFtYW5uYVxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4rZnVuY3Rpb24gKCQpIHtcblxuICAndXNlIHN0cmljdCc7XG5cblxuICAvKiBUSU1FWk9ORVMgQ0xBU1MgREVGSU5JVElPTlxuICAgKiA9PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgdmFyIEJGSFRpbWV6b25lcyA9IGZ1bmN0aW9uIChlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sICQuZm4uYmZodGltZXpvbmVzLmRlZmF1bHRzLCBvcHRpb25zKTtcbiAgICB0aGlzLiRlbGVtZW50ID0gJChlbGVtZW50KTtcblxuICAgIGlmICh0aGlzLiRlbGVtZW50LmlzKCdzZWxlY3QnKSkge1xuICAgICAgdGhpcy5hZGRUaW1lem9uZXMoKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy4kZWxlbWVudC5oYXNDbGFzcygnYmZoLXNlbGVjdGJveCcpKSB7XG4gICAgICB0aGlzLmFkZEJvb3RzdHJhcFRpbWV6b25lcygpO1xuICAgIH1cbiAgfTtcblxuICBCRkhUaW1lem9uZXMucHJvdG90eXBlID0ge1xuXG4gICAgY29uc3RydWN0b3I6IEJGSFRpbWV6b25lcyxcblxuICAgIGFkZFRpbWV6b25lczogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGNvdW50cnksXG4gICAgICAgICAgJGNvdW50cnk7XG5cbiAgICAgIGNvdW50cnkgPSB0aGlzLm9wdGlvbnMuY291bnRyeTtcblxuICAgICAgaWYgKGNvdW50cnkgIT09ICcnKSB7XG4gICAgICAgICRjb3VudHJ5ID0gJChkb2N1bWVudCkuZmluZCgnIycgKyBjb3VudHJ5KTtcblxuICAgICAgICBpZiAoJGNvdW50cnkubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgY291bnRyeSA9ICRjb3VudHJ5LnZhbCgpO1xuICAgICAgICAgICRjb3VudHJ5Lm9uKCdjaGFuZ2UnLCB7dGltZXpvbmU6IHRoaXN9LCB0aGlzLmNoYW5nZUNvdW50cnkpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRoaXMubG9hZFRpbWV6b25lcyhjb3VudHJ5KTtcbiAgICB9LFxuXG4gICAgbG9hZFRpbWV6b25lczogZnVuY3Rpb24gKGNvdW50cnkpIHtcbiAgICAgIHZhciB2YWx1ZSxcbiAgICAgICAgICB0aW1lem9uZTtcblxuICAgICAgdmFsdWUgPSB0aGlzLm9wdGlvbnMudGltZXpvbmU7XG5cbiAgICAgIHRoaXMuJGVsZW1lbnQuaHRtbCgnJyk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYmxhbmsgPT09IHRydWUpIHtcbiAgICAgICAgdGhpcy4kZWxlbWVudC5hcHBlbmQoJzxvcHRpb24gdmFsdWU9XCJcIj48L29wdGlvbj4nKTtcbiAgICAgIH1cblxuICAgICAgZm9yICh0aW1lem9uZSBpbiBCRkhUaW1lem9uZXNMaXN0W2NvdW50cnldKSB7XG4gICAgICAgIGlmIChCRkhUaW1lem9uZXNMaXN0W2NvdW50cnldLmhhc093blByb3BlcnR5KHRpbWV6b25lKSkge1xuICAgICAgICAgIHRoaXMuJGVsZW1lbnQuYXBwZW5kKCc8b3B0aW9uIHZhbHVlPVwiJyArIHRpbWV6b25lICsgJ1wiPicgKyBCRkhUaW1lem9uZXNMaXN0W2NvdW50cnldW3RpbWV6b25lXSArICc8L29wdGlvbj4nKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLiRlbGVtZW50LnZhbCh2YWx1ZSk7XG4gICAgfSxcblxuICAgIGNoYW5nZUNvdW50cnk6IGZ1bmN0aW9uIChlKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgJHRpbWV6b25lLFxuICAgICAgICAgIGNvdW50cnk7XG5cbiAgICAgICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICR0aW1lem9uZSA9IGUuZGF0YS50aW1lem9uZTtcbiAgICAgIGNvdW50cnkgPSAkdGhpcy52YWwoKTtcblxuICAgICAgJHRpbWV6b25lLmxvYWRUaW1lem9uZXMoY291bnRyeSk7XG4gICAgfSxcblxuICAgIGFkZEJvb3RzdHJhcFRpbWV6b25lczogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgY291bnRyeSxcbiAgICAgICAgICAkY291bnRyeTtcblxuICAgICAgY291bnRyeSA9IHRoaXMub3B0aW9ucy5jb3VudHJ5O1xuXG4gICAgICBpZiAoY291bnRyeSAhPT0gJycpIHtcbiAgICAgICAgJGNvdW50cnkgPSAkKGRvY3VtZW50KS5maW5kKCcjJyArIGNvdW50cnkpO1xuXG4gICAgICAgIGlmICgkY291bnRyeS5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICBjb3VudHJ5ID0gJGNvdW50cnkuZmluZCgnaW5wdXRbdHlwZT1cImhpZGRlblwiXScpLnZhbCgpO1xuICAgICAgICAgICRjb3VudHJ5Lm9uKCdjaGFuZ2UuYmZoc2VsZWN0Ym94Jywge3RpbWV6b25lOiB0aGlzfSwgdGhpcy5jaGFuZ2VCb290c3RyYXBDb3VudHJ5KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLmxvYWRCb290c3RyYXBUaW1lem9uZXMoY291bnRyeSk7XG4gICAgfSxcblxuICAgIGxvYWRCb290c3RyYXBUaW1lem9uZXM6IGZ1bmN0aW9uKGNvdW50cnkpIHtcbiAgICAgIHZhciAkaW5wdXQsXG4gICAgICAgICAgJHRvZ2dsZSxcbiAgICAgICAgICAkb3B0aW9ucyxcbiAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICB0aW1lem9uZTtcblxuICAgICAgdmFsdWUgPSB0aGlzLm9wdGlvbnMudGltZXpvbmU7XG4gICAgICAkaW5wdXQgPSB0aGlzLiRlbGVtZW50LmZpbmQoJ2lucHV0W3R5cGU9XCJoaWRkZW5cIl0nKTtcbiAgICAgICR0b2dnbGUgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5iZmgtc2VsZWN0Ym94LW9wdGlvbicpO1xuICAgICAgJG9wdGlvbnMgPSB0aGlzLiRlbGVtZW50LmZpbmQoJ1tyb2xlPW9wdGlvbl0nKTtcblxuICAgICAgJG9wdGlvbnMuaHRtbCgnJyk7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuYmxhbmsgPT09IHRydWUpIHtcbiAgICAgICAgJG9wdGlvbnMuYXBwZW5kKCc8bGk+PGEgdGFiaW5kZXg9XCItMVwiIGhyZWY9XCIjXCIgZGF0YS1vcHRpb249XCJcIj48L2E+PC9saT4nKTtcbiAgICAgIH1cblxuICAgICAgZm9yICh0aW1lem9uZSBpbiBCRkhUaW1lem9uZXNMaXN0W2NvdW50cnldKSB7XG4gICAgICAgIGlmIChCRkhUaW1lem9uZXNMaXN0W2NvdW50cnldLmhhc093blByb3BlcnR5KHRpbWV6b25lKSkge1xuICAgICAgICAgICRvcHRpb25zLmFwcGVuZCgnPGxpPjxhIHRhYmluZGV4PVwiLTFcIiBocmVmPVwiI1wiIGRhdGEtb3B0aW9uPVwiJyArIHRpbWV6b25lICsgJ1wiPicgKyBCRkhUaW1lem9uZXNMaXN0W2NvdW50cnldW3RpbWV6b25lXSArICc8L2E+PC9saT4nKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB0aGlzLiRlbGVtZW50LnZhbCh2YWx1ZSk7XG4gICAgfSxcblxuICAgIGNoYW5nZUJvb3RzdHJhcENvdW50cnk6IGZ1bmN0aW9uIChlKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgJHRpbWV6b25lLFxuICAgICAgICAgIGNvdW50cnk7XG5cbiAgICAgICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICR0aW1lem9uZSA9IGUuZGF0YS50aW1lem9uZTtcbiAgICAgIGNvdW50cnkgPSAkdGhpcy52YWwoKTtcblxuICAgICAgJHRpbWV6b25lLmxvYWRCb290c3RyYXBUaW1lem9uZXMoY291bnRyeSk7XG4gICAgfVxuXG4gIH07XG5cblxuICAvKiBUSU1FWk9ORVMgUExVR0lOIERFRklOSVRJT05cbiAgICogPT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuICB2YXIgb2xkID0gJC5mbi5iZmh0aW1lem9uZXM7XG5cbiAgJC5mbi5iZmh0aW1lem9uZXMgPSBmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgJHRoaXMsXG4gICAgICAgICAgZGF0YSxcbiAgICAgICAgICBvcHRpb25zO1xuXG4gICAgICAkdGhpcyA9ICQodGhpcyk7XG4gICAgICBkYXRhID0gJHRoaXMuZGF0YSgnYmZodGltZXpvbmVzJyk7XG4gICAgICBvcHRpb25zID0gdHlwZW9mIG9wdGlvbiA9PT0gJ29iamVjdCcgJiYgb3B0aW9uO1xuXG4gICAgICBpZiAoIWRhdGEpIHtcbiAgICAgICAgJHRoaXMuZGF0YSgnYmZodGltZXpvbmVzJywgKGRhdGEgPSBuZXcgQkZIVGltZXpvbmVzKHRoaXMsIG9wdGlvbnMpKSk7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIG9wdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZGF0YVtvcHRpb25dLmNhbGwoJHRoaXMpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gICQuZm4uYmZodGltZXpvbmVzLkNvbnN0cnVjdG9yID0gQkZIVGltZXpvbmVzO1xuXG4gICQuZm4uYmZodGltZXpvbmVzLmRlZmF1bHRzID0ge1xuICAgIGNvdW50cnk6ICcnLFxuICAgIHRpbWV6b25lOiAnJyxcbiAgICBibGFuazogdHJ1ZVxuICB9O1xuXG5cbiAgLyogVElNRVpPTkVTIE5PIENPTkZMSUNUXG4gICAqID09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbiAgJC5mbi5iZmh0aW1lem9uZXMubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAkLmZuLmJmaHRpbWV6b25lcyA9IG9sZDtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuXG4gIC8qIFRJTUVaT05FUyBEQVRBLUFQSVxuICAgKiA9PT09PT09PT09PT09PSAqL1xuXG4gICQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiAoKSB7XG4gICAgJCgnZm9ybSBzZWxlY3QuYmZoLXRpbWV6b25lcywgZGl2LmJmaC10aW1lem9uZXMnKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciAkdGltZXpvbmVzO1xuXG4gICAgICAkdGltZXpvbmVzID0gJCh0aGlzKTtcblxuICAgICAgaWYgKCR0aW1lem9uZXMuaGFzQ2xhc3MoJ2JmaC1zZWxlY3Rib3gnKSkge1xuICAgICAgICAkdGltZXpvbmVzLmJmaHNlbGVjdGJveCgkdGltZXpvbmVzLmRhdGEoKSk7XG4gICAgICB9XG4gICAgICAkdGltZXpvbmVzLmJmaHRpbWV6b25lcygkdGltZXpvbmVzLmRhdGEoKSk7XG4gICAgfSk7XG4gIH0pO1xuXG59KHdpbmRvdy5qUXVlcnkpO1xuXG4vKiFcbiAqIGJvb3RzdHJhcC1zZWxlY3QgdjEuNS40XG4gKiBodHRwOi8vc2lsdmlvbW9yZXRvLmdpdGh1Yi5pby9ib290c3RyYXAtc2VsZWN0L1xuICpcbiAqIENvcHlyaWdodCAyMDEzIGJvb3RzdHJhcC1zZWxlY3RcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICovXG47IWZ1bmN0aW9uKGIpe2IuZXhwcltcIjpcIl0uaWNvbnRhaW5zPWZ1bmN0aW9uKGUsYyxkKXtyZXR1cm4gYihlKS50ZXh0KCkudG9VcHBlckNhc2UoKS5pbmRleE9mKGRbM10udG9VcHBlckNhc2UoKSk+PTB9O3ZhciBhPWZ1bmN0aW9uKGQsYyxmKXtpZihmKXtmLnN0b3BQcm9wYWdhdGlvbigpO2YucHJldmVudERlZmF1bHQoKX10aGlzLiRlbGVtZW50PWIoZCk7dGhpcy4kbmV3RWxlbWVudD1udWxsO3RoaXMuJGJ1dHRvbj1udWxsO3RoaXMuJG1lbnU9bnVsbDt0aGlzLiRsaXM9bnVsbDt0aGlzLm9wdGlvbnM9Yi5leHRlbmQoe30sYi5mbi5zZWxlY3RwaWNrZXIuZGVmYXVsdHMsdGhpcy4kZWxlbWVudC5kYXRhKCksdHlwZW9mIGM9PVwib2JqZWN0XCImJmMpO2lmKHRoaXMub3B0aW9ucy50aXRsZT09PW51bGwpe3RoaXMub3B0aW9ucy50aXRsZT10aGlzLiRlbGVtZW50LmF0dHIoXCJ0aXRsZVwiKX10aGlzLnZhbD1hLnByb3RvdHlwZS52YWw7dGhpcy5yZW5kZXI9YS5wcm90b3R5cGUucmVuZGVyO3RoaXMucmVmcmVzaD1hLnByb3RvdHlwZS5yZWZyZXNoO3RoaXMuc2V0U3R5bGU9YS5wcm90b3R5cGUuc2V0U3R5bGU7dGhpcy5zZWxlY3RBbGw9YS5wcm90b3R5cGUuc2VsZWN0QWxsO3RoaXMuZGVzZWxlY3RBbGw9YS5wcm90b3R5cGUuZGVzZWxlY3RBbGw7dGhpcy5pbml0KCl9O2EucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjphLGluaXQ6ZnVuY3Rpb24oKXt2YXIgYz10aGlzLGQ9dGhpcy4kZWxlbWVudC5hdHRyKFwiaWRcIik7dGhpcy4kZWxlbWVudC5oaWRlKCk7dGhpcy5tdWx0aXBsZT10aGlzLiRlbGVtZW50LnByb3AoXCJtdWx0aXBsZVwiKTt0aGlzLmF1dG9mb2N1cz10aGlzLiRlbGVtZW50LnByb3AoXCJhdXRvZm9jdXNcIik7dGhpcy4kbmV3RWxlbWVudD10aGlzLmNyZWF0ZVZpZXcoKTt0aGlzLiRlbGVtZW50LmFmdGVyKHRoaXMuJG5ld0VsZW1lbnQpO3RoaXMuJG1lbnU9dGhpcy4kbmV3RWxlbWVudC5maW5kKFwiPiAuZHJvcGRvd24tbWVudVwiKTt0aGlzLiRidXR0b249dGhpcy4kbmV3RWxlbWVudC5maW5kKFwiPiBidXR0b25cIik7dGhpcy4kc2VhcmNoYm94PXRoaXMuJG5ld0VsZW1lbnQuZmluZChcImlucHV0XCIpO2lmKGQhPT11bmRlZmluZWQpe3RoaXMuJGJ1dHRvbi5hdHRyKFwiZGF0YS1pZFwiLGQpO2IoJ2xhYmVsW2Zvcj1cIicrZCsnXCJdJykuY2xpY2soZnVuY3Rpb24oZil7Zi5wcmV2ZW50RGVmYXVsdCgpO2MuJGJ1dHRvbi5mb2N1cygpfSl9dGhpcy5jaGVja0Rpc2FibGVkKCk7dGhpcy5jbGlja0xpc3RlbmVyKCk7aWYodGhpcy5vcHRpb25zLmxpdmVTZWFyY2gpe3RoaXMubGl2ZVNlYXJjaExpc3RlbmVyKCl9dGhpcy5yZW5kZXIoKTt0aGlzLmxpSGVpZ2h0KCk7dGhpcy5zZXRTdHlsZSgpO3RoaXMuc2V0V2lkdGgoKTtpZih0aGlzLm9wdGlvbnMuY29udGFpbmVyKXt0aGlzLnNlbGVjdFBvc2l0aW9uKCl9dGhpcy4kbWVudS5kYXRhKFwidGhpc1wiLHRoaXMpO3RoaXMuJG5ld0VsZW1lbnQuZGF0YShcInRoaXNcIix0aGlzKX0sY3JlYXRlRHJvcGRvd246ZnVuY3Rpb24oKXt2YXIgYz10aGlzLm11bHRpcGxlP1wiIHNob3ctdGlja1wiOlwiXCI7dmFyIGQ9dGhpcy4kZWxlbWVudC5wYXJlbnQoKS5oYXNDbGFzcyhcImlucHV0LWdyb3VwXCIpP1wiIGlucHV0LWdyb3VwLWJ0blwiOlwiXCI7dmFyIGk9dGhpcy5hdXRvZm9jdXM/XCIgYXV0b2ZvY3VzXCI6XCJcIjt2YXIgaD10aGlzLm9wdGlvbnMuaGVhZGVyPyc8ZGl2IGNsYXNzPVwicG9wb3Zlci10aXRsZVwiPjxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiY2xvc2VcIiBhcmlhLWhpZGRlbj1cInRydWVcIj4mdGltZXM7PC9idXR0b24+Jyt0aGlzLm9wdGlvbnMuaGVhZGVyK1wiPC9kaXY+XCI6XCJcIjt2YXIgZz10aGlzLm9wdGlvbnMubGl2ZVNlYXJjaD8nPGRpdiBjbGFzcz1cImJvb3RzdHJhcC1zZWxlY3Qtc2VhcmNoYm94XCI+PGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJpbnB1dC1ibG9jay1sZXZlbCBmb3JtLWNvbnRyb2xcIiAvPjwvZGl2Pic6XCJcIjt2YXIgZj10aGlzLm9wdGlvbnMuYWN0aW9uc0JveD8nPGRpdiBjbGFzcz1cImJzLWFjdGlvbnNib3hcIj48ZGl2IGNsYXNzPVwiYnRuLWdyb3VwIGJ0bi1ibG9ja1wiPjxidXR0b24gY2xhc3M9XCJhY3Rpb25zLWJ0biBicy1zZWxlY3QtYWxsIGJ0biBidG4tc20gYnRuLWRlZmF1bHRcIj5TZWxlY3QgQWxsPC9idXR0b24+PGJ1dHRvbiBjbGFzcz1cImFjdGlvbnMtYnRuIGJzLWRlc2VsZWN0LWFsbCBidG4gYnRuLXNtIGJ0bi1kZWZhdWx0XCI+RGVzZWxlY3QgQWxsPC9idXR0b24+PC9kaXY+PC9kaXY+JzpcIlwiO3ZhciBlPSc8ZGl2IGNsYXNzPVwiYnRuLWdyb3VwIGJvb3RzdHJhcC1zZWxlY3QnK2MrZCsnXCI+PGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG4gZHJvcGRvd24tdG9nZ2xlIHNlbGVjdHBpY2tlclwiIGRhdGEtdG9nZ2xlPVwiZHJvcGRvd25cIicraSsnPjxzcGFuIGNsYXNzPVwiZmlsdGVyLW9wdGlvbiBwdWxsLWxlZnRcIj48L3NwYW4+Jm5ic3A7PHNwYW4gY2xhc3M9XCJjYXJldFwiPjwvc3Bhbj48L2J1dHRvbj48ZGl2IGNsYXNzPVwiZHJvcGRvd24tbWVudSBvcGVuXCI+JytoK2crZisnPHVsIGNsYXNzPVwiZHJvcGRvd24tbWVudSBpbm5lciBzZWxlY3RwaWNrZXJcIiByb2xlPVwibWVudVwiPjwvdWw+PC9kaXY+PC9kaXY+JztyZXR1cm4gYihlKX0sY3JlYXRlVmlldzpmdW5jdGlvbigpe3ZhciBjPXRoaXMuY3JlYXRlRHJvcGRvd24oKTt2YXIgZD10aGlzLmNyZWF0ZUxpKCk7Yy5maW5kKFwidWxcIikuYXBwZW5kKGQpO3JldHVybiBjfSxyZWxvYWRMaTpmdW5jdGlvbigpe3RoaXMuZGVzdHJveUxpKCk7dmFyIGM9dGhpcy5jcmVhdGVMaSgpO3RoaXMuJG1lbnUuZmluZChcInVsXCIpLmFwcGVuZChjKX0sZGVzdHJveUxpOmZ1bmN0aW9uKCl7dGhpcy4kbWVudS5maW5kKFwibGlcIikucmVtb3ZlKCl9LGNyZWF0ZUxpOmZ1bmN0aW9uKCl7dmFyIGQ9dGhpcyxlPVtdLGM9XCJcIjt0aGlzLiRlbGVtZW50LmZpbmQoXCJvcHRpb25cIikuZWFjaChmdW5jdGlvbigpe3ZhciBpPWIodGhpcyk7dmFyIGc9aS5hdHRyKFwiY2xhc3NcIil8fFwiXCI7dmFyIGg9aS5hdHRyKFwic3R5bGVcIil8fFwiXCI7dmFyIG09aS5kYXRhKFwiY29udGVudFwiKT9pLmRhdGEoXCJjb250ZW50XCIpOmkuaHRtbCgpO3ZhciBrPWkuZGF0YShcInN1YnRleHRcIikhPT11bmRlZmluZWQ/JzxzbWFsbCBjbGFzcz1cIm11dGVkIHRleHQtbXV0ZWRcIj4nK2kuZGF0YShcInN1YnRleHRcIikrXCI8L3NtYWxsPlwiOlwiXCI7dmFyIGo9aS5kYXRhKFwiaWNvblwiKSE9PXVuZGVmaW5lZD8nPGkgY2xhc3M9XCInK2Qub3B0aW9ucy5pY29uQmFzZStcIiBcIitpLmRhdGEoXCJpY29uXCIpKydcIj48L2k+ICc6XCJcIjtpZihqIT09XCJcIiYmKGkuaXMoXCI6ZGlzYWJsZWRcIil8fGkucGFyZW50KCkuaXMoXCI6ZGlzYWJsZWRcIikpKXtqPVwiPHNwYW4+XCIraitcIjwvc3Bhbj5cIn1pZighaS5kYXRhKFwiY29udGVudFwiKSl7bT1qKyc8c3BhbiBjbGFzcz1cInRleHRcIj4nK20raytcIjwvc3Bhbj5cIn1pZihkLm9wdGlvbnMuaGlkZURpc2FibGVkJiYoaS5pcyhcIjpkaXNhYmxlZFwiKXx8aS5wYXJlbnQoKS5pcyhcIjpkaXNhYmxlZFwiKSkpe2UucHVzaCgnPGEgc3R5bGU9XCJtaW4taGVpZ2h0OiAwOyBwYWRkaW5nOiAwXCI+PC9hPicpfWVsc2V7aWYoaS5wYXJlbnQoKS5pcyhcIm9wdGdyb3VwXCIpJiZpLmRhdGEoXCJkaXZpZGVyXCIpIT09dHJ1ZSl7aWYoaS5pbmRleCgpPT09MCl7dmFyIGw9aS5wYXJlbnQoKS5hdHRyKFwibGFiZWxcIik7dmFyIG49aS5wYXJlbnQoKS5kYXRhKFwic3VidGV4dFwiKSE9PXVuZGVmaW5lZD8nPHNtYWxsIGNsYXNzPVwibXV0ZWQgdGV4dC1tdXRlZFwiPicraS5wYXJlbnQoKS5kYXRhKFwic3VidGV4dFwiKStcIjwvc21hbGw+XCI6XCJcIjt2YXIgZj1pLnBhcmVudCgpLmRhdGEoXCJpY29uXCIpPyc8aSBjbGFzcz1cIicraS5wYXJlbnQoKS5kYXRhKFwiaWNvblwiKSsnXCI+PC9pPiAnOlwiXCI7bD1mKyc8c3BhbiBjbGFzcz1cInRleHRcIj4nK2wrbitcIjwvc3Bhbj5cIjtpZihpWzBdLmluZGV4IT09MCl7ZS5wdXNoKCc8ZGl2IGNsYXNzPVwiZGl2LWNvbnRhaW5cIj48ZGl2IGNsYXNzPVwiZGl2aWRlclwiPjwvZGl2PjwvZGl2PjxkdD4nK2wrXCI8L2R0PlwiK2QuY3JlYXRlQShtLFwib3B0IFwiK2csaCkpfWVsc2V7ZS5wdXNoKFwiPGR0PlwiK2wrXCI8L2R0PlwiK2QuY3JlYXRlQShtLFwib3B0IFwiK2csaCkpfX1lbHNle2UucHVzaChkLmNyZWF0ZUEobSxcIm9wdCBcIitnLGgpKX19ZWxzZXtpZihpLmRhdGEoXCJkaXZpZGVyXCIpPT09dHJ1ZSl7ZS5wdXNoKCc8ZGl2IGNsYXNzPVwiZGl2LWNvbnRhaW5cIj48ZGl2IGNsYXNzPVwiZGl2aWRlclwiPjwvZGl2PjwvZGl2PicpfWVsc2V7aWYoYih0aGlzKS5kYXRhKFwiaGlkZGVuXCIpPT09dHJ1ZSl7ZS5wdXNoKFwiPGE+PC9hPlwiKX1lbHNle2UucHVzaChkLmNyZWF0ZUEobSxnLGgpKX19fX19KTtiLmVhY2goZSxmdW5jdGlvbihnLGgpe3ZhciBmPWg9PT1cIjxhPjwvYT5cIj8nY2xhc3M9XCJoaWRlIGlzLWhpZGRlblwiJzpcIlwiO2MrPSc8bGkgcmVsPVwiJytnKydcIicrZitcIj5cIitoK1wiPC9saT5cIn0pO2lmKCF0aGlzLm11bHRpcGxlJiZ0aGlzLiRlbGVtZW50LmZpbmQoXCJvcHRpb246c2VsZWN0ZWRcIikubGVuZ3RoPT09MCYmIXRoaXMub3B0aW9ucy50aXRsZSl7dGhpcy4kZWxlbWVudC5maW5kKFwib3B0aW9uXCIpLmVxKDApLnByb3AoXCJzZWxlY3RlZFwiLHRydWUpLmF0dHIoXCJzZWxlY3RlZFwiLFwic2VsZWN0ZWRcIil9cmV0dXJuIGIoYyl9LGNyZWF0ZUE6ZnVuY3Rpb24oZSxjLGQpe3JldHVybic8YSB0YWJpbmRleD1cIjBcIiBjbGFzcz1cIicrYysnXCIgc3R5bGU9XCInK2QrJ1wiPicrZSsnPGkgY2xhc3M9XCInK3RoaXMub3B0aW9ucy5pY29uQmFzZStcIiBcIit0aGlzLm9wdGlvbnMudGlja0ljb24rJyBpY29uLW9rIGNoZWNrLW1hcmtcIj48L2k+PC9hPid9LHJlbmRlcjpmdW5jdGlvbihlKXt2YXIgZD10aGlzO2lmKGUhPT1mYWxzZSl7dGhpcy4kZWxlbWVudC5maW5kKFwib3B0aW9uXCIpLmVhY2goZnVuY3Rpb24oaSl7ZC5zZXREaXNhYmxlZChpLGIodGhpcykuaXMoXCI6ZGlzYWJsZWRcIil8fGIodGhpcykucGFyZW50KCkuaXMoXCI6ZGlzYWJsZWRcIikpO2Quc2V0U2VsZWN0ZWQoaSxiKHRoaXMpLmlzKFwiOnNlbGVjdGVkXCIpKX0pfXRoaXMudGFiSW5kZXgoKTt2YXIgaD10aGlzLiRlbGVtZW50LmZpbmQoXCJvcHRpb246c2VsZWN0ZWRcIikubWFwKGZ1bmN0aW9uKCl7dmFyIGs9Yih0aGlzKTt2YXIgaj1rLmRhdGEoXCJpY29uXCIpJiZkLm9wdGlvbnMuc2hvd0ljb24/JzxpIGNsYXNzPVwiJytkLm9wdGlvbnMuaWNvbkJhc2UrXCIgXCIray5kYXRhKFwiaWNvblwiKSsnXCI+PC9pPiAnOlwiXCI7dmFyIGk7aWYoZC5vcHRpb25zLnNob3dTdWJ0ZXh0JiZrLmF0dHIoXCJkYXRhLXN1YnRleHRcIikmJiFkLm11bHRpcGxlKXtpPScgPHNtYWxsIGNsYXNzPVwibXV0ZWQgdGV4dC1tdXRlZFwiPicray5kYXRhKFwic3VidGV4dFwiKStcIjwvc21hbGw+XCJ9ZWxzZXtpPVwiXCJ9aWYoay5kYXRhKFwiY29udGVudFwiKSYmZC5vcHRpb25zLnNob3dDb250ZW50KXtyZXR1cm4gay5kYXRhKFwiY29udGVudFwiKX1lbHNle2lmKGsuYXR0cihcInRpdGxlXCIpIT09dW5kZWZpbmVkKXtyZXR1cm4gay5hdHRyKFwidGl0bGVcIil9ZWxzZXtyZXR1cm4gaitrLmh0bWwoKStpfX19KS50b0FycmF5KCk7dmFyIGc9IXRoaXMubXVsdGlwbGU/aFswXTpoLmpvaW4odGhpcy5vcHRpb25zLm11bHRpcGxlU2VwYXJhdG9yKTtpZih0aGlzLm11bHRpcGxlJiZ0aGlzLm9wdGlvbnMuc2VsZWN0ZWRUZXh0Rm9ybWF0LmluZGV4T2YoXCJjb3VudFwiKT4tMSl7dmFyIGM9dGhpcy5vcHRpb25zLnNlbGVjdGVkVGV4dEZvcm1hdC5zcGxpdChcIj5cIik7dmFyIGY9dGhpcy5vcHRpb25zLmhpZGVEaXNhYmxlZD9cIjpub3QoW2Rpc2FibGVkXSlcIjpcIlwiO2lmKChjLmxlbmd0aD4xJiZoLmxlbmd0aD5jWzFdKXx8KGMubGVuZ3RoPT0xJiZoLmxlbmd0aD49Mikpe2c9dGhpcy5vcHRpb25zLmNvdW50U2VsZWN0ZWRUZXh0LnJlcGxhY2UoXCJ7MH1cIixoLmxlbmd0aCkucmVwbGFjZShcInsxfVwiLHRoaXMuJGVsZW1lbnQuZmluZCgnb3B0aW9uOm5vdChbZGF0YS1kaXZpZGVyPVwidHJ1ZVwiXSk6bm90KFtkYXRhLWhpZGRlbj1cInRydWVcIl0pJytmKS5sZW5ndGgpfX10aGlzLm9wdGlvbnMudGl0bGU9dGhpcy4kZWxlbWVudC5hdHRyKFwidGl0bGVcIik7aWYoIWcpe2c9dGhpcy5vcHRpb25zLnRpdGxlIT09dW5kZWZpbmVkP3RoaXMub3B0aW9ucy50aXRsZTp0aGlzLm9wdGlvbnMubm9uZVNlbGVjdGVkVGV4dH10aGlzLiRidXR0b24uYXR0cihcInRpdGxlXCIsYi50cmltKGcpKTt0aGlzLiRuZXdFbGVtZW50LmZpbmQoXCIuZmlsdGVyLW9wdGlvblwiKS5odG1sKGcpfSxzZXRTdHlsZTpmdW5jdGlvbihlLGQpe2lmKHRoaXMuJGVsZW1lbnQuYXR0cihcImNsYXNzXCIpKXt0aGlzLiRuZXdFbGVtZW50LmFkZENsYXNzKHRoaXMuJGVsZW1lbnQuYXR0cihcImNsYXNzXCIpLnJlcGxhY2UoL3NlbGVjdHBpY2tlcnxtb2JpbGUtZGV2aWNlL2dpLFwiXCIpKX12YXIgYz1lP2U6dGhpcy5vcHRpb25zLnN0eWxlO2lmKGQ9PVwiYWRkXCIpe3RoaXMuJGJ1dHRvbi5hZGRDbGFzcyhjKX1lbHNle2lmKGQ9PVwicmVtb3ZlXCIpe3RoaXMuJGJ1dHRvbi5yZW1vdmVDbGFzcyhjKX1lbHNle3RoaXMuJGJ1dHRvbi5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMuc3R5bGUpO3RoaXMuJGJ1dHRvbi5hZGRDbGFzcyhjKX19fSxsaUhlaWdodDpmdW5jdGlvbigpe2lmKHRoaXMub3B0aW9ucy5zaXplPT09ZmFsc2Upe3JldHVybn12YXIgZj10aGlzLiRtZW51LnBhcmVudCgpLmNsb25lKCkuZmluZChcIj4gLmRyb3Bkb3duLXRvZ2dsZVwiKS5wcm9wKFwiYXV0b2ZvY3VzXCIsZmFsc2UpLmVuZCgpLmFwcGVuZFRvKFwiYm9keVwiKSxnPWYuYWRkQ2xhc3MoXCJvcGVuXCIpLmZpbmQoXCI+IC5kcm9wZG93bi1tZW51XCIpLGU9Zy5maW5kKFwibGkgPiBhXCIpLm91dGVySGVpZ2h0KCksZD10aGlzLm9wdGlvbnMuaGVhZGVyP2cuZmluZChcIi5wb3BvdmVyLXRpdGxlXCIpLm91dGVySGVpZ2h0KCk6MCxoPXRoaXMub3B0aW9ucy5saXZlU2VhcmNoP2cuZmluZChcIi5ib290c3RyYXAtc2VsZWN0LXNlYXJjaGJveFwiKS5vdXRlckhlaWdodCgpOjAsYz10aGlzLm9wdGlvbnMuYWN0aW9uc0JveD9nLmZpbmQoXCIuYnMtYWN0aW9uc2JveFwiKS5vdXRlckhlaWdodCgpOjA7Zi5yZW1vdmUoKTt0aGlzLiRuZXdFbGVtZW50LmRhdGEoXCJsaUhlaWdodFwiLGUpLmRhdGEoXCJoZWFkZXJIZWlnaHRcIixkKS5kYXRhKFwic2VhcmNoSGVpZ2h0XCIsaCkuZGF0YShcImFjdGlvbnNIZWlnaHRcIixjKX0sc2V0U2l6ZTpmdW5jdGlvbigpe3ZhciBpPXRoaXMsZD10aGlzLiRtZW51LGo9ZC5maW5kKFwiLmlubmVyXCIpLHU9dGhpcy4kbmV3RWxlbWVudC5vdXRlckhlaWdodCgpLGY9dGhpcy4kbmV3RWxlbWVudC5kYXRhKFwibGlIZWlnaHRcIikscz10aGlzLiRuZXdFbGVtZW50LmRhdGEoXCJoZWFkZXJIZWlnaHRcIiksbT10aGlzLiRuZXdFbGVtZW50LmRhdGEoXCJzZWFyY2hIZWlnaHRcIiksaD10aGlzLiRuZXdFbGVtZW50LmRhdGEoXCJhY3Rpb25zSGVpZ2h0XCIpLGw9ZC5maW5kKFwibGkgLmRpdmlkZXJcIikub3V0ZXJIZWlnaHQodHJ1ZSkscj1wYXJzZUludChkLmNzcyhcInBhZGRpbmctdG9wXCIpKStwYXJzZUludChkLmNzcyhcInBhZGRpbmctYm90dG9tXCIpKStwYXJzZUludChkLmNzcyhcImJvcmRlci10b3Atd2lkdGhcIikpK3BhcnNlSW50KGQuY3NzKFwiYm9yZGVyLWJvdHRvbS13aWR0aFwiKSkscD10aGlzLm9wdGlvbnMuaGlkZURpc2FibGVkP1wiOm5vdCguZGlzYWJsZWQpXCI6XCJcIixvPWIod2luZG93KSxnPXIrcGFyc2VJbnQoZC5jc3MoXCJtYXJnaW4tdG9wXCIpKStwYXJzZUludChkLmNzcyhcIm1hcmdpbi1ib3R0b21cIikpKzIscSx2LHQsaz1mdW5jdGlvbigpe3Y9aS4kbmV3RWxlbWVudC5vZmZzZXQoKS50b3Atby5zY3JvbGxUb3AoKTt0PW8uaGVpZ2h0KCktdi11fTtrKCk7aWYodGhpcy5vcHRpb25zLmhlYWRlcil7ZC5jc3MoXCJwYWRkaW5nLXRvcFwiLDApfWlmKHRoaXMub3B0aW9ucy5zaXplPT1cImF1dG9cIil7dmFyIGU9ZnVuY3Rpb24oKXt2YXIgeCx3PWkuJGxpcy5ub3QoXCIuaGlkZVwiKTtrKCk7cT10LWc7aWYoaS5vcHRpb25zLmRyb3B1cEF1dG8pe2kuJG5ld0VsZW1lbnQudG9nZ2xlQ2xhc3MoXCJkcm9wdXBcIiwodj50KSYmKChxLWcpPGQuaGVpZ2h0KCkpKX1pZihpLiRuZXdFbGVtZW50Lmhhc0NsYXNzKFwiZHJvcHVwXCIpKXtxPXYtZ31pZigody5sZW5ndGgrdy5maW5kKFwiZHRcIikubGVuZ3RoKT4zKXt4PWYqMytnLTJ9ZWxzZXt4PTB9ZC5jc3Moe1wibWF4LWhlaWdodFwiOnErXCJweFwiLG92ZXJmbG93OlwiaGlkZGVuXCIsXCJtaW4taGVpZ2h0XCI6eCtzK20raCtcInB4XCJ9KTtqLmNzcyh7XCJtYXgtaGVpZ2h0XCI6cS1zLW0taC1yK1wicHhcIixcIm92ZXJmbG93LXlcIjpcImF1dG9cIixcIm1pbi1oZWlnaHRcIjpNYXRoLm1heCh4LXIsMCkrXCJweFwifSl9O2UoKTt0aGlzLiRzZWFyY2hib3gub2ZmKFwiaW5wdXQuZ2V0U2l6ZSBwcm9wZXJ0eWNoYW5nZS5nZXRTaXplXCIpLm9uKFwiaW5wdXQuZ2V0U2l6ZSBwcm9wZXJ0eWNoYW5nZS5nZXRTaXplXCIsZSk7Yih3aW5kb3cpLm9mZihcInJlc2l6ZS5nZXRTaXplXCIpLm9uKFwicmVzaXplLmdldFNpemVcIixlKTtiKHdpbmRvdykub2ZmKFwic2Nyb2xsLmdldFNpemVcIikub24oXCJzY3JvbGwuZ2V0U2l6ZVwiLGUpfWVsc2V7aWYodGhpcy5vcHRpb25zLnNpemUmJnRoaXMub3B0aW9ucy5zaXplIT1cImF1dG9cIiYmZC5maW5kKFwibGlcIitwKS5sZW5ndGg+dGhpcy5vcHRpb25zLnNpemUpe3ZhciBuPWQuZmluZChcImxpXCIrcCtcIiA+ICpcIikuZmlsdGVyKFwiOm5vdCguZGl2LWNvbnRhaW4pXCIpLnNsaWNlKDAsdGhpcy5vcHRpb25zLnNpemUpLmxhc3QoKS5wYXJlbnQoKS5pbmRleCgpO3ZhciBjPWQuZmluZChcImxpXCIpLnNsaWNlKDAsbisxKS5maW5kKFwiLmRpdi1jb250YWluXCIpLmxlbmd0aDtxPWYqdGhpcy5vcHRpb25zLnNpemUrYypsK3I7aWYoaS5vcHRpb25zLmRyb3B1cEF1dG8pe3RoaXMuJG5ld0VsZW1lbnQudG9nZ2xlQ2xhc3MoXCJkcm9wdXBcIiwodj50KSYmKHE8ZC5oZWlnaHQoKSkpfWQuY3NzKHtcIm1heC1oZWlnaHRcIjpxK3MrbStoK1wicHhcIixvdmVyZmxvdzpcImhpZGRlblwifSk7ai5jc3Moe1wibWF4LWhlaWdodFwiOnEtcitcInB4XCIsXCJvdmVyZmxvdy15XCI6XCJhdXRvXCJ9KX19fSxzZXRXaWR0aDpmdW5jdGlvbigpe2lmKHRoaXMub3B0aW9ucy53aWR0aD09XCJhdXRvXCIpe3RoaXMuJG1lbnUuY3NzKFwibWluLXdpZHRoXCIsXCIwXCIpO3ZhciBlPXRoaXMuJG5ld0VsZW1lbnQuY2xvbmUoKS5hcHBlbmRUbyhcImJvZHlcIik7dmFyIGM9ZS5maW5kKFwiPiAuZHJvcGRvd24tbWVudVwiKS5jc3MoXCJ3aWR0aFwiKTt2YXIgZD1lLmNzcyhcIndpZHRoXCIsXCJhdXRvXCIpLmZpbmQoXCI+IGJ1dHRvblwiKS5jc3MoXCJ3aWR0aFwiKTtlLnJlbW92ZSgpO3RoaXMuJG5ld0VsZW1lbnQuY3NzKFwid2lkdGhcIixNYXRoLm1heChwYXJzZUludChjKSxwYXJzZUludChkKSkrXCJweFwiKX1lbHNle2lmKHRoaXMub3B0aW9ucy53aWR0aD09XCJmaXRcIil7dGhpcy4kbWVudS5jc3MoXCJtaW4td2lkdGhcIixcIlwiKTt0aGlzLiRuZXdFbGVtZW50LmNzcyhcIndpZHRoXCIsXCJcIikuYWRkQ2xhc3MoXCJmaXQtd2lkdGhcIil9ZWxzZXtpZih0aGlzLm9wdGlvbnMud2lkdGgpe3RoaXMuJG1lbnUuY3NzKFwibWluLXdpZHRoXCIsXCJcIik7dGhpcy4kbmV3RWxlbWVudC5jc3MoXCJ3aWR0aFwiLHRoaXMub3B0aW9ucy53aWR0aCl9ZWxzZXt0aGlzLiRtZW51LmNzcyhcIm1pbi13aWR0aFwiLFwiXCIpO3RoaXMuJG5ld0VsZW1lbnQuY3NzKFwid2lkdGhcIixcIlwiKX19fWlmKHRoaXMuJG5ld0VsZW1lbnQuaGFzQ2xhc3MoXCJmaXQtd2lkdGhcIikmJnRoaXMub3B0aW9ucy53aWR0aCE9PVwiZml0XCIpe3RoaXMuJG5ld0VsZW1lbnQucmVtb3ZlQ2xhc3MoXCJmaXQtd2lkdGhcIil9fSxzZWxlY3RQb3NpdGlvbjpmdW5jdGlvbigpe3ZhciBlPXRoaXMsZD1cIjxkaXYgLz5cIixmPWIoZCksaCxnLGM9ZnVuY3Rpb24oaSl7Zi5hZGRDbGFzcyhpLmF0dHIoXCJjbGFzc1wiKS5yZXBsYWNlKC9mb3JtLWNvbnRyb2wvZ2ksXCJcIikpLnRvZ2dsZUNsYXNzKFwiZHJvcHVwXCIsaS5oYXNDbGFzcyhcImRyb3B1cFwiKSk7aD1pLm9mZnNldCgpO2c9aS5oYXNDbGFzcyhcImRyb3B1cFwiKT8wOmlbMF0ub2Zmc2V0SGVpZ2h0O2YuY3NzKHt0b3A6aC50b3ArZyxsZWZ0OmgubGVmdCx3aWR0aDppWzBdLm9mZnNldFdpZHRoLHBvc2l0aW9uOlwiYWJzb2x1dGVcIn0pfTt0aGlzLiRuZXdFbGVtZW50Lm9uKFwiY2xpY2tcIixmdW5jdGlvbigpe2lmKGUuaXNEaXNhYmxlZCgpKXtyZXR1cm59YyhiKHRoaXMpKTtmLmFwcGVuZFRvKGUub3B0aW9ucy5jb250YWluZXIpO2YudG9nZ2xlQ2xhc3MoXCJvcGVuXCIsIWIodGhpcykuaGFzQ2xhc3MoXCJvcGVuXCIpKTtmLmFwcGVuZChlLiRtZW51KX0pO2Iod2luZG93KS5yZXNpemUoZnVuY3Rpb24oKXtjKGUuJG5ld0VsZW1lbnQpfSk7Yih3aW5kb3cpLm9uKFwic2Nyb2xsXCIsZnVuY3Rpb24oKXtjKGUuJG5ld0VsZW1lbnQpfSk7YihcImh0bWxcIikub24oXCJjbGlja1wiLGZ1bmN0aW9uKGkpe2lmKGIoaS50YXJnZXQpLmNsb3Nlc3QoZS4kbmV3RWxlbWVudCkubGVuZ3RoPDEpe2YucmVtb3ZlQ2xhc3MoXCJvcGVuXCIpfX0pfSxtb2JpbGU6ZnVuY3Rpb24oKXt0aGlzLiRlbGVtZW50LmFkZENsYXNzKFwibW9iaWxlLWRldmljZVwiKS5hcHBlbmRUbyh0aGlzLiRuZXdFbGVtZW50KTtpZih0aGlzLm9wdGlvbnMuY29udGFpbmVyKXt0aGlzLiRtZW51LmhpZGUoKX19LHJlZnJlc2g6ZnVuY3Rpb24oKXt0aGlzLiRsaXM9bnVsbDt0aGlzLnJlbG9hZExpKCk7dGhpcy5yZW5kZXIoKTt0aGlzLnNldFdpZHRoKCk7dGhpcy5zZXRTdHlsZSgpO3RoaXMuY2hlY2tEaXNhYmxlZCgpO3RoaXMubGlIZWlnaHQoKX0sdXBkYXRlOmZ1bmN0aW9uKCl7dGhpcy5yZWxvYWRMaSgpO3RoaXMuc2V0V2lkdGgoKTt0aGlzLnNldFN0eWxlKCk7dGhpcy5jaGVja0Rpc2FibGVkKCk7dGhpcy5saUhlaWdodCgpfSxzZXRTZWxlY3RlZDpmdW5jdGlvbihjLGQpe2lmKHRoaXMuJGxpcz09bnVsbCl7dGhpcy4kbGlzPXRoaXMuJG1lbnUuZmluZChcImxpXCIpfWIodGhpcy4kbGlzW2NdKS50b2dnbGVDbGFzcyhcInNlbGVjdGVkXCIsZCl9LHNldERpc2FibGVkOmZ1bmN0aW9uKGMsZCl7aWYodGhpcy4kbGlzPT1udWxsKXt0aGlzLiRsaXM9dGhpcy4kbWVudS5maW5kKFwibGlcIil9aWYoZCl7Yih0aGlzLiRsaXNbY10pLmFkZENsYXNzKFwiZGlzYWJsZWRcIikuZmluZChcImFcIikuYXR0cihcImhyZWZcIixcIiNcIikuYXR0cihcInRhYmluZGV4XCIsLTEpfWVsc2V7Yih0aGlzLiRsaXNbY10pLnJlbW92ZUNsYXNzKFwiZGlzYWJsZWRcIikuZmluZChcImFcIikucmVtb3ZlQXR0cihcImhyZWZcIikuYXR0cihcInRhYmluZGV4XCIsMCl9fSxpc0Rpc2FibGVkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJGVsZW1lbnQuaXMoXCI6ZGlzYWJsZWRcIil9LGNoZWNrRGlzYWJsZWQ6ZnVuY3Rpb24oKXt2YXIgYz10aGlzO2lmKHRoaXMuaXNEaXNhYmxlZCgpKXt0aGlzLiRidXR0b24uYWRkQ2xhc3MoXCJkaXNhYmxlZFwiKS5hdHRyKFwidGFiaW5kZXhcIiwtMSl9ZWxzZXtpZih0aGlzLiRidXR0b24uaGFzQ2xhc3MoXCJkaXNhYmxlZFwiKSl7dGhpcy4kYnV0dG9uLnJlbW92ZUNsYXNzKFwiZGlzYWJsZWRcIil9aWYodGhpcy4kYnV0dG9uLmF0dHIoXCJ0YWJpbmRleFwiKT09LTEpe2lmKCF0aGlzLiRlbGVtZW50LmRhdGEoXCJ0YWJpbmRleFwiKSl7dGhpcy4kYnV0dG9uLnJlbW92ZUF0dHIoXCJ0YWJpbmRleFwiKX19fXRoaXMuJGJ1dHRvbi5jbGljayhmdW5jdGlvbigpe3JldHVybiAhYy5pc0Rpc2FibGVkKCl9KX0sdGFiSW5kZXg6ZnVuY3Rpb24oKXtpZih0aGlzLiRlbGVtZW50LmlzKFwiW3RhYmluZGV4XVwiKSl7dGhpcy4kZWxlbWVudC5kYXRhKFwidGFiaW5kZXhcIix0aGlzLiRlbGVtZW50LmF0dHIoXCJ0YWJpbmRleFwiKSk7dGhpcy4kYnV0dG9uLmF0dHIoXCJ0YWJpbmRleFwiLHRoaXMuJGVsZW1lbnQuZGF0YShcInRhYmluZGV4XCIpKX19LGNsaWNrTGlzdGVuZXI6ZnVuY3Rpb24oKXt2YXIgYz10aGlzO2IoXCJib2R5XCIpLm9uKFwidG91Y2hzdGFydC5kcm9wZG93blwiLFwiLmRyb3Bkb3duLW1lbnVcIixmdW5jdGlvbihkKXtkLnN0b3BQcm9wYWdhdGlvbigpfSk7dGhpcy4kbmV3RWxlbWVudC5vbihcImNsaWNrXCIsZnVuY3Rpb24oKXtjLnNldFNpemUoKTtpZighYy5vcHRpb25zLmxpdmVTZWFyY2gmJiFjLm11bHRpcGxlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy4kbWVudS5maW5kKFwiLnNlbGVjdGVkIGFcIikuZm9jdXMoKX0sMTApfX0pO3RoaXMuJG1lbnUub24oXCJjbGlja1wiLFwibGkgYVwiLGZ1bmN0aW9uKG4pe3ZhciB0PWIodGhpcykucGFyZW50KCkuaW5kZXgoKSxtPWMuJGVsZW1lbnQudmFsKCksaT1jLiRlbGVtZW50LnByb3AoXCJzZWxlY3RlZEluZGV4XCIpO2lmKGMubXVsdGlwbGUpe24uc3RvcFByb3BhZ2F0aW9uKCl9bi5wcmV2ZW50RGVmYXVsdCgpO2lmKCFjLmlzRGlzYWJsZWQoKSYmIWIodGhpcykucGFyZW50KCkuaGFzQ2xhc3MoXCJkaXNhYmxlZFwiKSl7dmFyIGw9Yy4kZWxlbWVudC5maW5kKFwib3B0aW9uXCIpLGQ9bC5lcSh0KSxmPWQucHJvcChcInNlbGVjdGVkXCIpLHI9ZC5wYXJlbnQoXCJvcHRncm91cFwiKSxwPWMub3B0aW9ucy5tYXhPcHRpb25zLGg9ci5kYXRhKFwibWF4T3B0aW9uc1wiKXx8ZmFsc2U7aWYoIWMubXVsdGlwbGUpe2wucHJvcChcInNlbGVjdGVkXCIsZmFsc2UpO2QucHJvcChcInNlbGVjdGVkXCIsdHJ1ZSk7Yy4kbWVudS5maW5kKFwiLnNlbGVjdGVkXCIpLnJlbW92ZUNsYXNzKFwic2VsZWN0ZWRcIik7Yy5zZXRTZWxlY3RlZCh0LHRydWUpfWVsc2V7ZC5wcm9wKFwic2VsZWN0ZWRcIiwhZik7Yy5zZXRTZWxlY3RlZCh0LCFmKTtpZigocCE9PWZhbHNlKXx8KGghPT1mYWxzZSkpe3ZhciBvPXA8bC5maWx0ZXIoXCI6c2VsZWN0ZWRcIikubGVuZ3RoLGo9aDxyLmZpbmQoXCJvcHRpb246c2VsZWN0ZWRcIikubGVuZ3RoLHM9Yy5vcHRpb25zLm1heE9wdGlvbnNUZXh0LGc9c1swXS5yZXBsYWNlKFwie259XCIscCkscT1zWzFdLnJlcGxhY2UoXCJ7bn1cIixoKSxrPWIoJzxkaXYgY2xhc3M9XCJub3RpZnlcIj48L2Rpdj4nKTtpZigocCYmbyl8fChoJiZqKSl7aWYoc1syXSl7Zz1nLnJlcGxhY2UoXCJ7dmFyfVwiLHNbMl1bcD4xPzA6MV0pO3E9cS5yZXBsYWNlKFwie3Zhcn1cIixzWzJdW2g+MT8wOjFdKX1kLnByb3AoXCJzZWxlY3RlZFwiLGZhbHNlKTtjLiRtZW51LmFwcGVuZChrKTtpZihwJiZvKXtrLmFwcGVuZChiKFwiPGRpdj5cIitnK1wiPC9kaXY+XCIpKTtjLiRlbGVtZW50LnRyaWdnZXIoXCJtYXhSZWFjaGVkLmJzLnNlbGVjdFwiKX1pZihoJiZqKXtrLmFwcGVuZChiKFwiPGRpdj5cIitxK1wiPC9kaXY+XCIpKTtjLiRlbGVtZW50LnRyaWdnZXIoXCJtYXhSZWFjaGVkR3JwLmJzLnNlbGVjdFwiKX1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5zZXRTZWxlY3RlZCh0LGZhbHNlKX0sMTApO2suZGVsYXkoNzUwKS5mYWRlT3V0KDMwMCxmdW5jdGlvbigpe2IodGhpcykucmVtb3ZlKCl9KX19fWlmKCFjLm11bHRpcGxlKXtjLiRidXR0b24uZm9jdXMoKX1lbHNle2lmKGMub3B0aW9ucy5saXZlU2VhcmNoKXtjLiRzZWFyY2hib3guZm9jdXMoKX19aWYoKG0hPWMuJGVsZW1lbnQudmFsKCkmJmMubXVsdGlwbGUpfHwoaSE9Yy4kZWxlbWVudC5wcm9wKFwic2VsZWN0ZWRJbmRleFwiKSYmIWMubXVsdGlwbGUpKXtjLiRlbGVtZW50LmNoYW5nZSgpfX19KTt0aGlzLiRtZW51Lm9uKFwiY2xpY2tcIixcImxpLmRpc2FibGVkIGEsIGxpIGR0LCBsaSAuZGl2LWNvbnRhaW4sIC5wb3BvdmVyLXRpdGxlLCAucG9wb3Zlci10aXRsZSA6bm90KC5jbG9zZSlcIixmdW5jdGlvbihkKXtpZihkLnRhcmdldD09dGhpcyl7ZC5wcmV2ZW50RGVmYXVsdCgpO2Quc3RvcFByb3BhZ2F0aW9uKCk7aWYoIWMub3B0aW9ucy5saXZlU2VhcmNoKXtjLiRidXR0b24uZm9jdXMoKX1lbHNle2MuJHNlYXJjaGJveC5mb2N1cygpfX19KTt0aGlzLiRtZW51Lm9uKFwiY2xpY2tcIixcIi5wb3BvdmVyLXRpdGxlIC5jbG9zZVwiLGZ1bmN0aW9uKCl7Yy4kYnV0dG9uLmZvY3VzKCl9KTt0aGlzLiRzZWFyY2hib3gub24oXCJjbGlja1wiLGZ1bmN0aW9uKGQpe2Quc3RvcFByb3BhZ2F0aW9uKCl9KTt0aGlzLiRtZW51Lm9uKFwiY2xpY2tcIixcIi5hY3Rpb25zLWJ0blwiLGZ1bmN0aW9uKGQpe2lmKGMub3B0aW9ucy5saXZlU2VhcmNoKXtjLiRzZWFyY2hib3guZm9jdXMoKX1lbHNle2MuJGJ1dHRvbi5mb2N1cygpfWQucHJldmVudERlZmF1bHQoKTtkLnN0b3BQcm9wYWdhdGlvbigpO2lmKGIodGhpcykuaXMoXCIuYnMtc2VsZWN0LWFsbFwiKSl7Yy5zZWxlY3RBbGwoKX1lbHNle2MuZGVzZWxlY3RBbGwoKX1jLiRlbGVtZW50LmNoYW5nZSgpfSk7dGhpcy4kZWxlbWVudC5jaGFuZ2UoZnVuY3Rpb24oKXtjLnJlbmRlcihmYWxzZSl9KX0sbGl2ZVNlYXJjaExpc3RlbmVyOmZ1bmN0aW9uKCl7dmFyIGQ9dGhpcyxjPWIoJzxsaSBjbGFzcz1cIm5vLXJlc3VsdHNcIj48L2xpPicpO3RoaXMuJG5ld0VsZW1lbnQub24oXCJjbGljay5kcm9wZG93bi5kYXRhLWFwaVwiLGZ1bmN0aW9uKCl7ZC4kbWVudS5maW5kKFwiLmFjdGl2ZVwiKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtpZighIWQuJHNlYXJjaGJveC52YWwoKSl7ZC4kc2VhcmNoYm94LnZhbChcIlwiKTtkLiRsaXMubm90KFwiLmlzLWhpZGRlblwiKS5yZW1vdmVDbGFzcyhcImhpZGVcIik7aWYoISFjLnBhcmVudCgpLmxlbmd0aCl7Yy5yZW1vdmUoKX19aWYoIWQubXVsdGlwbGUpe2QuJG1lbnUuZmluZChcIi5zZWxlY3RlZFwiKS5hZGRDbGFzcyhcImFjdGl2ZVwiKX1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC4kc2VhcmNoYm94LmZvY3VzKCl9LDEwKX0pO3RoaXMuJHNlYXJjaGJveC5vbihcImlucHV0IHByb3BlcnR5Y2hhbmdlXCIsZnVuY3Rpb24oKXtpZihkLiRzZWFyY2hib3gudmFsKCkpe2QuJGxpcy5ub3QoXCIuaXMtaGlkZGVuXCIpLnJlbW92ZUNsYXNzKFwiaGlkZVwiKS5maW5kKFwiYVwiKS5ub3QoXCI6aWNvbnRhaW5zKFwiK2QuJHNlYXJjaGJveC52YWwoKStcIilcIikucGFyZW50KCkuYWRkQ2xhc3MoXCJoaWRlXCIpO2lmKCFkLiRtZW51LmZpbmQoXCJsaVwiKS5maWx0ZXIoXCI6dmlzaWJsZTpub3QoLm5vLXJlc3VsdHMpXCIpLmxlbmd0aCl7aWYoISFjLnBhcmVudCgpLmxlbmd0aCl7Yy5yZW1vdmUoKX1jLmh0bWwoZC5vcHRpb25zLm5vbmVSZXN1bHRzVGV4dCsnIFwiJytkLiRzZWFyY2hib3gudmFsKCkrJ1wiJykuc2hvdygpO2QuJG1lbnUuZmluZChcImxpXCIpLmxhc3QoKS5hZnRlcihjKX1lbHNle2lmKCEhYy5wYXJlbnQoKS5sZW5ndGgpe2MucmVtb3ZlKCl9fX1lbHNle2QuJGxpcy5ub3QoXCIuaXMtaGlkZGVuXCIpLnJlbW92ZUNsYXNzKFwiaGlkZVwiKTtpZighIWMucGFyZW50KCkubGVuZ3RoKXtjLnJlbW92ZSgpfX1kLiRtZW51LmZpbmQoXCJsaS5hY3RpdmVcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7ZC4kbWVudS5maW5kKFwibGlcIikuZmlsdGVyKFwiOnZpc2libGU6bm90KC5kaXZpZGVyKVwiKS5lcSgwKS5hZGRDbGFzcyhcImFjdGl2ZVwiKS5maW5kKFwiYVwiKS5mb2N1cygpO2IodGhpcykuZm9jdXMoKX0pO3RoaXMuJG1lbnUub24oXCJtb3VzZWVudGVyXCIsXCJhXCIsZnVuY3Rpb24oZil7ZC4kbWVudS5maW5kKFwiLmFjdGl2ZVwiKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtiKGYuY3VycmVudFRhcmdldCkucGFyZW50KCkubm90KFwiLmRpc2FibGVkXCIpLmFkZENsYXNzKFwiYWN0aXZlXCIpfSk7dGhpcy4kbWVudS5vbihcIm1vdXNlbGVhdmVcIixcImFcIixmdW5jdGlvbigpe2QuJG1lbnUuZmluZChcIi5hY3RpdmVcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIil9KX0sdmFsOmZ1bmN0aW9uKGMpe2lmKGMhPT11bmRlZmluZWQpe3RoaXMuJGVsZW1lbnQudmFsKGMpO3RoaXMuJGVsZW1lbnQuY2hhbmdlKCk7cmV0dXJuIHRoaXMuJGVsZW1lbnR9ZWxzZXtyZXR1cm4gdGhpcy4kZWxlbWVudC52YWwoKX19LHNlbGVjdEFsbDpmdW5jdGlvbigpe2lmKHRoaXMuJGxpcz09bnVsbCl7dGhpcy4kbGlzPXRoaXMuJG1lbnUuZmluZChcImxpXCIpfXRoaXMuJGVsZW1lbnQuZmluZChcIm9wdGlvbjplbmFibGVkXCIpLnByb3AoXCJzZWxlY3RlZFwiLHRydWUpO2IodGhpcy4kbGlzKS5maWx0ZXIoXCI6bm90KC5kaXNhYmxlZClcIikuYWRkQ2xhc3MoXCJzZWxlY3RlZFwiKTt0aGlzLnJlbmRlcihmYWxzZSl9LGRlc2VsZWN0QWxsOmZ1bmN0aW9uKCl7aWYodGhpcy4kbGlzPT1udWxsKXt0aGlzLiRsaXM9dGhpcy4kbWVudS5maW5kKFwibGlcIil9dGhpcy4kZWxlbWVudC5maW5kKFwib3B0aW9uOmVuYWJsZWRcIikucHJvcChcInNlbGVjdGVkXCIsZmFsc2UpO2IodGhpcy4kbGlzKS5maWx0ZXIoXCI6bm90KC5kaXNhYmxlZClcIikucmVtb3ZlQ2xhc3MoXCJzZWxlY3RlZFwiKTt0aGlzLnJlbmRlcihmYWxzZSl9LGtleWRvd246ZnVuY3Rpb24ocCl7dmFyIHEsbyxpLG4sayxqLHIsZixoLG0sZCxzLGc9ezMyOlwiIFwiLDQ4OlwiMFwiLDQ5OlwiMVwiLDUwOlwiMlwiLDUxOlwiM1wiLDUyOlwiNFwiLDUzOlwiNVwiLDU0OlwiNlwiLDU1OlwiN1wiLDU2OlwiOFwiLDU3OlwiOVwiLDU5OlwiO1wiLDY1OlwiYVwiLDY2OlwiYlwiLDY3OlwiY1wiLDY4OlwiZFwiLDY5OlwiZVwiLDcwOlwiZlwiLDcxOlwiZ1wiLDcyOlwiaFwiLDczOlwiaVwiLDc0OlwialwiLDc1Olwia1wiLDc2OlwibFwiLDc3OlwibVwiLDc4OlwiblwiLDc5Olwib1wiLDgwOlwicFwiLDgxOlwicVwiLDgyOlwiclwiLDgzOlwic1wiLDg0OlwidFwiLDg1OlwidVwiLDg2OlwidlwiLDg3Olwid1wiLDg4OlwieFwiLDg5OlwieVwiLDkwOlwielwiLDk2OlwiMFwiLDk3OlwiMVwiLDk4OlwiMlwiLDk5OlwiM1wiLDEwMDpcIjRcIiwxMDE6XCI1XCIsMTAyOlwiNlwiLDEwMzpcIjdcIiwxMDQ6XCI4XCIsMTA1OlwiOVwifTtxPWIodGhpcyk7aT1xLnBhcmVudCgpO2lmKHEuaXMoXCJpbnB1dFwiKSl7aT1xLnBhcmVudCgpLnBhcmVudCgpfW09aS5kYXRhKFwidGhpc1wiKTtpZihtLm9wdGlvbnMubGl2ZVNlYXJjaCl7aT1xLnBhcmVudCgpLnBhcmVudCgpfWlmKG0ub3B0aW9ucy5jb250YWluZXIpe2k9bS4kbWVudX1vPWIoXCJbcm9sZT1tZW51XSBsaTpub3QoLmRpdmlkZXIpIGFcIixpKTtzPW0uJG1lbnUucGFyZW50KCkuaGFzQ2xhc3MoXCJvcGVuXCIpO2lmKCFzJiYvKFswLTldfFtBLXpdKS8udGVzdChTdHJpbmcuZnJvbUNoYXJDb2RlKHAua2V5Q29kZSkpKXtpZighbS5vcHRpb25zLmNvbnRhaW5lcil7bS5zZXRTaXplKCk7bS4kbWVudS5wYXJlbnQoKS5hZGRDbGFzcyhcIm9wZW5cIik7cz1tLiRtZW51LnBhcmVudCgpLmhhc0NsYXNzKFwib3BlblwiKX1lbHNle20uJG5ld0VsZW1lbnQudHJpZ2dlcihcImNsaWNrXCIpfW0uJHNlYXJjaGJveC5mb2N1cygpfWlmKG0ub3B0aW9ucy5saXZlU2VhcmNoKXtpZigvKF45JHwyNykvLnRlc3QocC5rZXlDb2RlKSYmcyYmbS4kbWVudS5maW5kKFwiLmFjdGl2ZVwiKS5sZW5ndGg9PT0wKXtwLnByZXZlbnREZWZhdWx0KCk7bS4kbWVudS5wYXJlbnQoKS5yZW1vdmVDbGFzcyhcIm9wZW5cIik7bS4kYnV0dG9uLmZvY3VzKCl9bz1iKFwiW3JvbGU9bWVudV0gbGk6bm90KC5kaXZpZGVyKTp2aXNpYmxlXCIsaSk7aWYoIXEudmFsKCkmJiEvKDM4fDQwKS8udGVzdChwLmtleUNvZGUpKXtpZihvLmZpbHRlcihcIi5hY3RpdmVcIikubGVuZ3RoPT09MCl7bz1tLiRuZXdFbGVtZW50LmZpbmQoXCJsaVwiKS5maWx0ZXIoXCI6aWNvbnRhaW5zKFwiK2dbcC5rZXlDb2RlXStcIilcIil9fX1pZighby5sZW5ndGgpe3JldHVybn1pZigvKDM4fDQwKS8udGVzdChwLmtleUNvZGUpKXtuPW8uaW5kZXgoby5maWx0ZXIoXCI6Zm9jdXNcIikpO2o9by5wYXJlbnQoXCI6bm90KC5kaXNhYmxlZCk6dmlzaWJsZVwiKS5maXJzdCgpLmluZGV4KCk7cj1vLnBhcmVudChcIjpub3QoLmRpc2FibGVkKTp2aXNpYmxlXCIpLmxhc3QoKS5pbmRleCgpO2s9by5lcShuKS5wYXJlbnQoKS5uZXh0QWxsKFwiOm5vdCguZGlzYWJsZWQpOnZpc2libGVcIikuZXEoMCkuaW5kZXgoKTtmPW8uZXEobikucGFyZW50KCkucHJldkFsbChcIjpub3QoLmRpc2FibGVkKTp2aXNpYmxlXCIpLmVxKDApLmluZGV4KCk7aD1vLmVxKGspLnBhcmVudCgpLnByZXZBbGwoXCI6bm90KC5kaXNhYmxlZCk6dmlzaWJsZVwiKS5lcSgwKS5pbmRleCgpO2lmKG0ub3B0aW9ucy5saXZlU2VhcmNoKXtvLmVhY2goZnVuY3Rpb24oZSl7aWYoYih0aGlzKS5pcyhcIjpub3QoLmRpc2FibGVkKVwiKSl7Yih0aGlzKS5kYXRhKFwiaW5kZXhcIixlKX19KTtuPW8uaW5kZXgoby5maWx0ZXIoXCIuYWN0aXZlXCIpKTtqPW8uZmlsdGVyKFwiOm5vdCguZGlzYWJsZWQpOnZpc2libGVcIikuZmlyc3QoKS5kYXRhKFwiaW5kZXhcIik7cj1vLmZpbHRlcihcIjpub3QoLmRpc2FibGVkKTp2aXNpYmxlXCIpLmxhc3QoKS5kYXRhKFwiaW5kZXhcIik7az1vLmVxKG4pLm5leHRBbGwoXCI6bm90KC5kaXNhYmxlZCk6dmlzaWJsZVwiKS5lcSgwKS5kYXRhKFwiaW5kZXhcIik7Zj1vLmVxKG4pLnByZXZBbGwoXCI6bm90KC5kaXNhYmxlZCk6dmlzaWJsZVwiKS5lcSgwKS5kYXRhKFwiaW5kZXhcIik7aD1vLmVxKGspLnByZXZBbGwoXCI6bm90KC5kaXNhYmxlZCk6dmlzaWJsZVwiKS5lcSgwKS5kYXRhKFwiaW5kZXhcIil9ZD1xLmRhdGEoXCJwcmV2SW5kZXhcIik7aWYocC5rZXlDb2RlPT0zOCl7aWYobS5vcHRpb25zLmxpdmVTZWFyY2gpe24tPTF9aWYobiE9aCYmbj5mKXtuPWZ9aWYobjxqKXtuPWp9aWYobj09ZCl7bj1yfX1pZihwLmtleUNvZGU9PTQwKXtpZihtLm9wdGlvbnMubGl2ZVNlYXJjaCl7bis9MX1pZihuPT0tMSl7bj0wfWlmKG4hPWgmJm48ayl7bj1rfWlmKG4+cil7bj1yfWlmKG49PWQpe249an19cS5kYXRhKFwicHJldkluZGV4XCIsbik7aWYoIW0ub3B0aW9ucy5saXZlU2VhcmNoKXtvLmVxKG4pLmZvY3VzKCl9ZWxzZXtwLnByZXZlbnREZWZhdWx0KCk7aWYoIXEuaXMoXCIuZHJvcGRvd24tdG9nZ2xlXCIpKXtvLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO28uZXEobikuYWRkQ2xhc3MoXCJhY3RpdmVcIikuZmluZChcImFcIikuZm9jdXMoKTtxLmZvY3VzKCl9fX1lbHNle2lmKCFxLmlzKFwiaW5wdXRcIikpe3ZhciBjPVtdLGwsdDtvLmVhY2goZnVuY3Rpb24oKXtpZihiKHRoaXMpLnBhcmVudCgpLmlzKFwiOm5vdCguZGlzYWJsZWQpXCIpKXtpZihiLnRyaW0oYih0aGlzKS50ZXh0KCkudG9Mb3dlckNhc2UoKSkuc3Vic3RyaW5nKDAsMSk9PWdbcC5rZXlDb2RlXSl7Yy5wdXNoKGIodGhpcykucGFyZW50KCkuaW5kZXgoKSl9fX0pO2w9Yihkb2N1bWVudCkuZGF0YShcImtleWNvdW50XCIpO2wrKztiKGRvY3VtZW50KS5kYXRhKFwia2V5Y291bnRcIixsKTt0PWIudHJpbShiKFwiOmZvY3VzXCIpLnRleHQoKS50b0xvd2VyQ2FzZSgpKS5zdWJzdHJpbmcoMCwxKTtpZih0IT1nW3Aua2V5Q29kZV0pe2w9MTtiKGRvY3VtZW50KS5kYXRhKFwia2V5Y291bnRcIixsKX1lbHNle2lmKGw+PWMubGVuZ3RoKXtiKGRvY3VtZW50KS5kYXRhKFwia2V5Y291bnRcIiwwKTtpZihsPmMubGVuZ3RoKXtsPTF9fX1vLmVxKGNbbC0xXSkuZm9jdXMoKX19aWYoLygxM3wzMnxeOSQpLy50ZXN0KHAua2V5Q29kZSkmJnMpe2lmKCEvKDMyKS8udGVzdChwLmtleUNvZGUpKXtwLnByZXZlbnREZWZhdWx0KCl9aWYoIW0ub3B0aW9ucy5saXZlU2VhcmNoKXtiKFwiOmZvY3VzXCIpLmNsaWNrKCl9ZWxzZXtpZighLygzMikvLnRlc3QocC5rZXlDb2RlKSl7bS4kbWVudS5maW5kKFwiLmFjdGl2ZSBhXCIpLmNsaWNrKCk7cS5mb2N1cygpfX1iKGRvY3VtZW50KS5kYXRhKFwia2V5Y291bnRcIiwwKX1pZigoLyheOSR8MjcpLy50ZXN0KHAua2V5Q29kZSkmJnMmJihtLm11bHRpcGxlfHxtLm9wdGlvbnMubGl2ZVNlYXJjaCkpfHwoLygyNykvLnRlc3QocC5rZXlDb2RlKSYmIXMpKXttLiRtZW51LnBhcmVudCgpLnJlbW92ZUNsYXNzKFwib3BlblwiKTttLiRidXR0b24uZm9jdXMoKX19LGhpZGU6ZnVuY3Rpb24oKXt0aGlzLiRuZXdFbGVtZW50LmhpZGUoKX0sc2hvdzpmdW5jdGlvbigpe3RoaXMuJG5ld0VsZW1lbnQuc2hvdygpfSxkZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy4kbmV3RWxlbWVudC5yZW1vdmUoKTt0aGlzLiRlbGVtZW50LnJlbW92ZSgpfX07Yi5mbi5zZWxlY3RwaWNrZXI9ZnVuY3Rpb24oZSxmKXt2YXIgYz1hcmd1bWVudHM7dmFyIGc7dmFyIGQ9dGhpcy5lYWNoKGZ1bmN0aW9uKCl7aWYoYih0aGlzKS5pcyhcInNlbGVjdFwiKSl7dmFyIG09Yih0aGlzKSxsPW0uZGF0YShcInNlbGVjdHBpY2tlclwiKSxoPXR5cGVvZiBlPT1cIm9iamVjdFwiJiZlO2lmKCFsKXttLmRhdGEoXCJzZWxlY3RwaWNrZXJcIiwobD1uZXcgYSh0aGlzLGgsZikpKX1lbHNle2lmKGgpe2Zvcih2YXIgaiBpbiBoKXtsLm9wdGlvbnNbal09aFtqXX19fWlmKHR5cGVvZiBlPT1cInN0cmluZ1wiKXt2YXIgaz1lO2lmKGxba10gaW5zdGFuY2VvZiBGdW5jdGlvbil7W10uc2hpZnQuYXBwbHkoYyk7Zz1sW2tdLmFwcGx5KGwsYyl9ZWxzZXtnPWwub3B0aW9uc1trXX19fX0pO2lmKGchPT11bmRlZmluZWQpe3JldHVybiBnfWVsc2V7cmV0dXJuIGR9fTtiLmZuLnNlbGVjdHBpY2tlci5kZWZhdWx0cz17c3R5bGU6XCJidG4tZGVmYXVsdFwiLHNpemU6XCJhdXRvXCIsdGl0bGU6bnVsbCxzZWxlY3RlZFRleHRGb3JtYXQ6XCJ2YWx1ZXNcIixub25lU2VsZWN0ZWRUZXh0OlwiTm90aGluZyBzZWxlY3RlZFwiLG5vbmVSZXN1bHRzVGV4dDpcIk5vIHJlc3VsdHMgbWF0Y2hcIixjb3VudFNlbGVjdGVkVGV4dDpcInswfSBvZiB7MX0gc2VsZWN0ZWRcIixtYXhPcHRpb25zVGV4dDpbXCJMaW1pdCByZWFjaGVkICh7bn0ge3Zhcn0gbWF4KVwiLFwiR3JvdXAgbGltaXQgcmVhY2hlZCAoe259IHt2YXJ9IG1heClcIixbXCJpdGVtc1wiLFwiaXRlbVwiXV0sd2lkdGg6ZmFsc2UsY29udGFpbmVyOmZhbHNlLGhpZGVEaXNhYmxlZDpmYWxzZSxzaG93U3VidGV4dDpmYWxzZSxzaG93SWNvbjp0cnVlLHNob3dDb250ZW50OnRydWUsZHJvcHVwQXV0bzp0cnVlLGhlYWRlcjpmYWxzZSxsaXZlU2VhcmNoOmZhbHNlLGFjdGlvbnNCb3g6ZmFsc2UsbXVsdGlwbGVTZXBhcmF0b3I6XCIsIFwiLGljb25CYXNlOlwiZ2x5cGhpY29uXCIsdGlja0ljb246XCJnbHlwaGljb24tb2tcIixtYXhPcHRpb25zOmZhbHNlfTtiKGRvY3VtZW50KS5kYXRhKFwia2V5Y291bnRcIiwwKS5vbihcImtleWRvd25cIixcIi5ib290c3RyYXAtc2VsZWN0IFtkYXRhLXRvZ2dsZT1kcm9wZG93bl0sIC5ib290c3RyYXAtc2VsZWN0IFtyb2xlPW1lbnVdLCAuYm9vdHN0cmFwLXNlbGVjdC1zZWFyY2hib3ggaW5wdXRcIixhLnByb3RvdHlwZS5rZXlkb3duKS5vbihcImZvY3VzaW4ubW9kYWxcIixcIi5ib290c3RyYXAtc2VsZWN0IFtkYXRhLXRvZ2dsZT1kcm9wZG93bl0sIC5ib290c3RyYXAtc2VsZWN0IFtyb2xlPW1lbnVdLCAuYm9vdHN0cmFwLXNlbGVjdC1zZWFyY2hib3ggaW5wdXRcIixmdW5jdGlvbihjKXtjLnN0b3BQcm9wYWdhdGlvbigpfSl9KHdpbmRvdy5qUXVlcnkpO1xudmFyIENPTkZJRyA9IHt9O1xuXG5pZih0eXBlb2YgVEVNUExBVEVTID09PSAndW5kZWZpbmVkJykge3ZhciBURU1QTEFURVMgPSB7fTt9XG5URU1QTEFURVNbJ2ZvbnQtcGlja2VyLXRlbXBsYXRlLmh0bWwnXSA9IFwiPCEtLSBGb250IEZhbWlseSAtLT5cXG5cIiArXG4gICAgXCI8IS0tIENhbid0IHVzZSBhbiBIVE1MIHNlbGVjdCBiZWNhdXNlIHRoZSBpdGVtcyBpbiB0aGUgZHJvcC1kb3duIG5lZWQgdG8gYmVcXG5cIiArXG4gICAgXCIgICAgIHN0eWxlZCBpbmRpdmlkdWFsbHkuIC0tPlxcblwiICtcbiAgICBcIjxkaXYgY2xhc3M9XFxcImJmaC1zZWxlY3Rib3hcXFwiPlxcblwiICtcbiAgICBcIiAgPGlucHV0IGNsYXNzPVxcXCJmb250LWZhbWlseVxcXCIgdHlwZT1cXFwiaGlkZGVuXFxcIiB2YWx1ZT1cXFwiXFxcIj5cXG5cIiArXG4gICAgXCIgIDxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbSBkcm9wZG93bi10b2dnbGUgZm9udC1zZWxlY3QtYnRuXFxcIlxcblwiICtcbiAgICBcIiAgICBkYXRhLXRvZ2dsZT1cXFwiYmZoLXNlbGVjdGJveFxcXCI+XFxuXCIgK1xuICAgIFwiICAgIDxzcGFuIGNsYXNzPVxcXCJiZmgtc2VsZWN0Ym94LW9wdGlvblxcXCI+PC9zcGFuPlxcblwiICtcbiAgICBcIiAgICA8c3BhbiBjbGFzcz1cXFwiY2FyZXQgc2VsZWN0Ym94LWNhcmV0XFxcIj48L3NwYW4+XFxuXCIgK1xuICAgIFwiICA8L2J1dHRvbj5cXG5cIiArXG4gICAgXCIgIDxkaXYgY2xhc3M9XFxcImJmaC1zZWxlY3Rib3gtb3B0aW9uc1xcXCI+XFxuXCIgK1xuICAgIFwiICAgIDxkaXYgcm9sZT1cXFwibGlzdGJveFxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgPHVsIHJvbGU9XFxcIm9wdGlvblxcXCI+PC91bD5cXG5cIiArXG4gICAgXCIgICAgPC9kaXY+XFxuXCIgK1xuICAgIFwiICA8L2Rpdj5cXG5cIiArXG4gICAgXCI8L2Rpdj5cXG5cIiArXG4gICAgXCJcXG5cIiArXG4gICAgXCI8IS0tIEdvb2dsZSBGb250cyAtLT5cXG5cIiArXG4gICAgXCI8ZGl2IGNsYXNzPVxcXCJnb29nbGUtZm9udHMgbW9kYWwgZmFkZVxcXCIgdGFiaW5kZXg9XFxcIi0xXFxcIiByb2xlPVxcXCJkaWFsb2dcXFwiXFxuXCIgK1xuICAgIFwiICBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCIgZGF0YS1iYWNrZHJvcD1cXFwiZmFsc2VcXFwiPlxcblwiICtcbiAgICBcIiAgPGRpdiBjbGFzcz1cXFwibW9kYWwtZGlhbG9nXFxcIj5cXG5cIiArXG4gICAgXCIgICAgPGRpdiBjbGFzcz1cXFwibW9kYWwtY29udGVudFxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgPGRpdiBjbGFzcz1cXFwibW9kYWwtaGVhZGVyXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICAgIDxidXR0b24gY2xhc3M9XFxcImNsb3NlXFxcIiB0eXBlPVxcXCJidXR0b25cXFwiIGFyaWEtaGlkZGVuPVxcXCJ0cnVlXFxcIlxcblwiICtcbiAgICBcIiAgICAgICAgICBkYXRhLWRpc21pc3M9XFxcIm1vZGFsXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICAgICAgPHNwYW4+JnRpbWVzOzwvc3Bhbj48c3BhbiBjbGFzcz1cXFwic3Itb25seVxcXCI+Q2xvc2U8L3NwYW4+XFxuXCIgK1xuICAgIFwiICAgICAgICA8L2J1dHRvbj5cXG5cIiArXG4gICAgXCIgICAgICAgIDxoMiBjbGFzcz1cXFwibW9kYWwtdGl0bGVcXFwiPkdvb2dsZSBGb250czwvaDI+XFxuXCIgK1xuICAgIFwiICAgICAgPC9kaXY+XFxuXCIgK1xuICAgIFwiICAgICAgPGRpdiBjbGFzcz1cXFwibW9kYWwtYm9keVxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgICA8ZGl2IGNsYXNzPVxcXCJsaXN0LWdyb3VwIGJmaC1nb29nbGVmb250bGlzdFxcXCI+PC9kaXY+XFxuXCIgK1xuICAgIFwiICAgICAgPC9kaXY+XFxuXCIgK1xuICAgIFwiICAgICAgPGRpdiBjbGFzcz1cXFwibW9kYWwtZm9vdGVyXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICAgIDxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1maXhlZC13aWR0aFxcXCIgZGF0YS1kaXNtaXNzPVxcXCJtb2RhbFxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgICAgIDxzcGFuIGRhdGEtaTE4bj1cXFwiY2FuY2VsXFxcIj5DYW5jZWw8L3NwYW4+IDxpIGNsYXNzPVxcXCJmYSBmYS10aW1lcyBmYS13aGl0ZSBpY29uLXJpZ2h0XFxcIj48L2k+XFxuXCIgK1xuICAgIFwiICAgICAgICA8L2J1dHRvbj5cXG5cIiArXG4gICAgXCIgICAgICA8L2Rpdj5cXG5cIiArXG4gICAgXCIgICAgPC9kaXY+XFxuXCIgK1xuICAgIFwiICA8L2Rpdj5cXG5cIiArXG4gICAgXCI8L2Rpdj5cXG5cIiArXG4gICAgXCJcXG5cIiArXG4gICAgXCI8IS0tIEN1c3RvbSBGb250IC0tPlxcblwiICtcbiAgICBcIjxkaXYgY2xhc3M9XFxcImN1c3RvbS1mb250IG1vZGFsIGZhZGVcXFwiIHRhYmluZGV4PVxcXCItMVxcXCIgcm9sZT1cXFwiZGlhbG9nXFxcIlxcblwiICtcbiAgICBcIiAgYXJpYS1oaWRkZW49XFxcInRydWVcXFwiIGRhdGEtYmFja2Ryb3A9XFxcImZhbHNlXFxcIj5cXG5cIiArXG4gICAgXCIgIDxkaXYgY2xhc3M9XFxcIm1vZGFsLWRpYWxvZ1xcXCI+XFxuXCIgK1xuICAgIFwiICAgIDxkaXYgY2xhc3M9XFxcIm1vZGFsLWNvbnRlbnRcXFwiPlxcblwiICtcbiAgICBcIiAgICAgIDxkaXYgY2xhc3M9XFxcIm1vZGFsLWhlYWRlclxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgICA8YnV0dG9uIGNsYXNzPVxcXCJjbG9zZVxcXCIgdHlwZT1cXFwiYnV0dG9uXFxcIiBhcmlhLWhpZGRlbj1cXFwidHJ1ZVxcXCJcXG5cIiArXG4gICAgXCIgICAgICAgICAgZGF0YS1kaXNtaXNzPVxcXCJtb2RhbFxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgICAgIDxzcGFuPiZ0aW1lczs8L3NwYW4+PHNwYW4gY2xhc3M9XFxcInNyLW9ubHlcXFwiPkNsb3NlPC9zcGFuPlxcblwiICtcbiAgICBcIiAgICAgICAgPC9idXR0b24+XFxuXCIgK1xuICAgIFwiICAgICAgICA8aDIgY2xhc3M9XFxcIm1vZGFsLXRpdGxlXFxcIj5DdXN0b20gRm9udDwvaDI+XFxuXCIgK1xuICAgIFwiICAgICAgPC9kaXY+XFxuXCIgK1xuICAgIFwiICAgICAgPGRpdiBjbGFzcz1cXFwibW9kYWwtYm9keVxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgICA8ZGl2IGNsYXNzPVxcXCJjdXN0b20tZm9udC1lcnJvciBhbGVydCBhbGVydC1kYW5nZXJcXFwiPlxcblwiICtcbiAgICBcIiAgICAgICAgICBVbmFibGUgdG8gdmFsaWRhdGUgdGhlIFVSTCBlbnRlcmVkLiBQbGVhc2UgdW4tY2hlY2sgXFxcIlZhbGlkYXRlIFVSTFxcXCIgdG8gYnlwYXNzIHZhbGlkYXRpb24uXFxuXCIgK1xuICAgIFwiICAgICAgICA8L2Rpdj5cXG5cIiArXG4gICAgXCIgICAgICAgIDxkaXYgY2xhc3M9XFxcInVybC1maWVsZFxcXCI+PC9kaXY+XFxuXCIgK1xuICAgIFwiICAgICAgPC9kaXY+XFxuXCIgK1xuICAgIFwiICAgICAgPGRpdiBjbGFzcz1cXFwibW9kYWwtZm9vdGVyXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICAgIDxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwic2F2ZS1jdXN0b20tZm9udCBidG4gYnRuLXN1Y2Nlc3MgYnRuLWZpeGVkLXdpZHRoXFxcIiA+XFxuXCIgK1xuICAgIFwiICAgICAgICAgIDxzcGFuIGRhdGEtaTE4bj1cXFwic2VsZWN0XFxcIj5TZWxlY3Q8L3NwYW4+IDxpIGNsYXNzPVxcXCJmYSBmYS1jaGVjayBmYS13aGl0ZSBpY29uLXJpZ2h0XFxcIj48L2k+XFxuXCIgK1xuICAgIFwiICAgICAgICA8L2J1dHRvbj5cXG5cIiArXG4gICAgXCIgICAgICAgIDxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1maXhlZC13aWR0aFxcXCIgZGF0YS1kaXNtaXNzPVxcXCJtb2RhbFxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgICAgIDxzcGFuIGRhdGEtaTE4bj1cXFwiY2FuY2VsXFxcIj5DYW5jZWw8L3NwYW4+IDxpIGNsYXNzPVxcXCJmYSBmYS10aW1lcyBmYS13aGl0ZSBpY29uLXJpZ2h0XFxcIj48L2k+XFxuXCIgK1xuICAgIFwiICAgICAgICA8L2J1dHRvbj5cXG5cIiArXG4gICAgXCIgICAgICA8L2Rpdj5cXG5cIiArXG4gICAgXCIgICAgPC9kaXY+XFxuXCIgK1xuICAgIFwiICA8L2Rpdj5cXG5cIiArXG4gICAgXCI8L2Rpdj5cXG5cIiArXG4gICAgXCJcIjsgXG52YXIgUmlzZVZpc2lvbiA9IFJpc2VWaXNpb24gfHwge307XG5cblJpc2VWaXNpb24uQ29tbW9uID0gUmlzZVZpc2lvbi5Db21tb24gfHwge307XG5cblJpc2VWaXNpb24uQ29tbW9uLlZhbGlkYXRpb24gPSAoZnVuY3Rpb24oKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIC8qXG4gIERlZmluaW5nIHRoZSByZWd1bGFyIGV4cHJlc3Npb25zIGJlaW5nIHVzZWRcbiAgICovXG4gIHZhciB1cmxSZWdFeHAgPSAvXig/Oig/Omh0dHBzP3xmdHApOlxcL1xcLykoPzpcXFMrKD86OlxcUyopP0ApPyg/Oig/ISg/OjEwfDEyNykoPzpcXC5cXGR7MSwzfSl7M30pKD8hKD86MTY5XFwuMjU0fDE5MlxcLjE2OCkoPzpcXC5cXGR7MSwzfSl7Mn0pKD8hMTcyXFwuKD86MVs2LTldfDJcXGR8M1swLTFdKSg/OlxcLlxcZHsxLDN9KXsyfSkoPzpbMS05XVxcZD98MVxcZFxcZHwyWzAxXVxcZHwyMlswLTNdKSg/OlxcLig/OjE/XFxkezEsMn18MlswLTRdXFxkfDI1WzAtNV0pKXsyfSg/OlxcLig/OlsxLTldXFxkP3wxXFxkXFxkfDJbMC00XVxcZHwyNVswLTRdKSl8KD86KD86W2EtelxcdTAwYTEtXFx1ZmZmZjAtOV0rLT8pKlthLXpcXHUwMGExLVxcdWZmZmYwLTldKykoPzpcXC4oPzpbYS16XFx1MDBhMS1cXHVmZmZmMC05XSstPykqW2EtelxcdTAwYTEtXFx1ZmZmZjAtOV0rKSooPzpcXC4oPzpbYS16XFx1MDBhMS1cXHVmZmZmXXsyLH0pKSkoPzo6XFxkezIsNX0pPyg/OlxcL1teXFxzXSopPyQvaSxcbiAgICAgIG51bWVyaWNSZWdleCA9IC9eKFxcLXxcXCspPyhbMC05XSt8SW5maW5pdHkpJC8sXG4gICAgICBkZWNpbWFsUmVnZXggPSAvXlxcLT9bMC05XSpcXC4/WzAtOV0rJC87XG5cbiAgZnVuY3Rpb24gZ3JlYXRlclRoYW4oZWxlbWVudCwgcGFyYW0pIHtcbiAgICB2YXIgdmFsdWUgPSBlbGVtZW50LnZhbHVlLnRyaW0oKTtcblxuICAgIGlmICghZGVjaW1hbFJlZ2V4LnRlc3QodmFsdWUpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIChwYXJzZUZsb2F0KHZhbHVlKSA+IHBhcnNlRmxvYXQocGFyYW0pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxlc3NUaGFuKGVsZW1lbnQsIHBhcmFtKSB7XG4gICAgdmFyIHZhbHVlID0gZWxlbWVudC52YWx1ZS50cmltKCk7XG5cbiAgICBpZiAoIWRlY2ltYWxSZWdleC50ZXN0KHZhbHVlKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiAocGFyc2VGbG9hdCh2YWx1ZSkgPCBwYXJzZUZsb2F0KHBhcmFtKSk7XG4gIH1cblxuICBmdW5jdGlvbiBudW1lcmljKGVsZW1lbnQpe1xuICAgIHZhciB2YWx1ZSA9IGVsZW1lbnQudmFsdWUudHJpbSgpO1xuXG4gICAgLypcbiAgICAgUmVnZXhwIGJlaW5nIHVzZWQgaXMgc3RyaWN0ZXIgdGhhbiBwYXJzZUludC4gVXNpbmcgcmVndWxhciBleHByZXNzaW9uIGFzXG4gICAgIG1lbnRpb25lZCBvbiBtb3ppbGxhXG4gICAgIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL1xuICAgICBHbG9iYWxfT2JqZWN0cy9wYXJzZUludFxuICAgICAqL1xuICAgIHJldHVybiBudW1lcmljUmVnZXgudGVzdCh2YWx1ZSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXF1aXJlZChlbGVtZW50KXtcbiAgICB2YXIgdmFsdWUgPSBlbGVtZW50LnZhbHVlLnRyaW0oKSxcbiAgICAgICAgdmFsaWQgPSBmYWxzZTtcblxuICAgIGlmIChlbGVtZW50LnR5cGUgPT09IFwiY2hlY2tib3hcIiB8fCBlbGVtZW50LnR5cGUgPT09IFwicmFkaW9cIikge1xuICAgICAgaWYoZWxlbWVudC5jaGVja2VkID09PSB0cnVlKSB7XG4gICAgICAgIHZhbGlkID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHZhbHVlICE9PSBudWxsICYmIHZhbHVlICE9PSAnJykge1xuICAgICAgICB2YWxpZCA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbGlkO1xuICB9XG5cbiAgZnVuY3Rpb24gdXJsKGVsZW1lbnQpe1xuICAgIHZhciB2YWx1ZSA9IGVsZW1lbnQudmFsdWUudHJpbSgpO1xuXG4gICAgLy8gQWRkIGh0dHA6Ly8gaWYgbm8gcHJvdG9jb2wgcGFyYW1ldGVyIGV4aXN0c1xuICAgIGlmICh2YWx1ZS5pbmRleE9mKFwiOi8vXCIpID09PSAtMSkge1xuICAgICAgdmFsdWUgPSBcImh0dHA6Ly9cIiArIHZhbHVlO1xuICAgIH1cbiAgICAvKlxuICAgICBEaXNjdXNzaW9uXG4gICAgIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzc2ODQvaG93LXRvLXJlcGxhY2UtcGxhaW4tdXJscy1cbiAgICAgd2l0aC1saW5rcyMyMTkyNTQ5MVxuXG4gICAgIFVzaW5nXG4gICAgIGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL2RwZXJpbmkvNzI5Mjk0XG4gICAgIFJlYXNvbmluZ1xuICAgICBodHRwOi8vbWF0aGlhc2J5bmVucy5iZS9kZW1vL3VybC1yZWdleFxuXG4gICAgICovXG4gICAgcmV0dXJuIHVybFJlZ0V4cC50ZXN0KHZhbHVlKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaXNHcmVhdGVyVGhhbjogZ3JlYXRlclRoYW4sXG4gICAgaXNMZXNzVGhhbjogbGVzc1RoYW4sXG4gICAgaXNWYWxpZFJlcXVpcmVkOiByZXF1aXJlZCxcbiAgICBpc1ZhbGlkVVJMOiB1cmwsXG4gICAgaXNWYWxpZE51bWJlcjogbnVtZXJpY1xuICB9O1xufSkoKTtcblxuUmlzZVZpc2lvbi5Db21tb24uVXRpbGl0aWVzID0gKGZ1bmN0aW9uKCkge1xuXG4gIGZ1bmN0aW9uIGdldEZvbnRDc3NTdHlsZShjbGFzc05hbWUsIGZvbnRPYmopIHtcbiAgICB2YXIgZmFtaWx5ID0gXCJmb250LWZhbWlseTpcIiArIGZvbnRPYmouZm9udC5mYW1pbHkgKyBcIjsgXCI7XG4gICAgdmFyIGNvbG9yID0gXCJjb2xvcjogXCIgKyBmb250T2JqLmNvbG9yICsgXCI7IFwiO1xuICAgIHZhciBzaXplID0gXCJmb250LXNpemU6IFwiICsgZm9udE9iai5zaXplICsgXCJweDsgXCI7XG4gICAgdmFyIHdlaWdodCA9IFwiZm9udC13ZWlnaHQ6IFwiICsgKGZvbnRPYmouYm9sZCA/IFwiYm9sZFwiIDogXCJub3JtYWxcIikgKyBcIjsgXCI7XG4gICAgdmFyIGl0YWxpYyA9IFwiZm9udC1zdHlsZTogXCIgKyAoZm9udE9iai5pdGFsaWMgPyBcIml0YWxpY1wiIDogXCJub3JtYWxcIikgKyBcIjsgXCI7XG4gICAgdmFyIHVuZGVybGluZSA9IFwidGV4dC1kZWNvcmF0aW9uOiBcIiArIChmb250T2JqLnVuZGVybGluZSA/IFwidW5kZXJsaW5lXCIgOiBcIm5vbmVcIikgKyBcIjsgXCI7XG4gICAgdmFyIGhpZ2hsaWdodCA9IFwiYmFja2dyb3VuZC1jb2xvcjogXCIgKyBmb250T2JqLmhpZ2hsaWdodENvbG9yICsgXCI7IFwiO1xuXG4gICAgcmV0dXJuIFwiLlwiICsgY2xhc3NOYW1lICsgXCIge1wiICsgZmFtaWx5ICsgY29sb3IgKyBzaXplICsgd2VpZ2h0ICsgaXRhbGljICsgdW5kZXJsaW5lICsgaGlnaGxpZ2h0ICsgXCJ9XCI7XG4gIH1cblxuICBmdW5jdGlvbiBhZGRDU1NSdWxlcyhydWxlcykge1xuICAgIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBydWxlcy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUocnVsZXNbaV0pKTtcbiAgICB9XG5cbiAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIC8qXG4gICAqIExvYWRzIEdvb2dsZSBvciBjdXN0b20gZm9udHMsIGlmIGFwcGxpY2FibGUsIGFuZCBpbmplY3RzIENTUyBzdHlsZXNcbiAgICogaW50byB0aGUgaGVhZCBvZiB0aGUgZG9jdW1lbnQuXG4gICAqXG4gICAqIEBwYXJhbSAgICBhcnJheSAgICBzZXR0aW5ncyAgICBBcnJheSBvZiBvYmplY3RzIHdpdGggdGhlIGZvbGxvd2luZyBmb3JtOlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFt7XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImNsYXNzXCI6IFwiZGF0ZVwiLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJmb250U2V0dGluZ1wiOiB7XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9sZDogdHJ1ZSxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogXCJibGFja1wiLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQ6IHtcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbWlseTogXCJBa3JvbmltXCIsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250OiBcIkFrcm9uaW1cIixcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVmVyZGFuYVwiLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJnb29nbGVcIixcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXCJodHRwOi8vY3VzdG9tLWZvbnQtdXJsXCJcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpZ2hsaWdodENvbG9yOiBcInRyYW5zcGFyZW50XCIsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRhbGljOiBmYWxzZSxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplOiBcIjIwXCIsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5kZXJsaW5lOiBmYWxzZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1dXG4gICAqXG4gICAqICAgICAgICAgICBvYmplY3QgICBjb250ZW50RG9jICAgIERvY3VtZW50IG9iamVjdCBpbnRvIHdoaWNoIHRvIGluamVjdCBzdHlsZXNcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kIGxvYWQgZm9udHMgKG9wdGlvbmFsKS5cbiAgICovXG4gIGZ1bmN0aW9uIGxvYWRGb250cyhzZXR0aW5ncywgY29udGVudERvYykge1xuICAgIHNldHRpbmdzLmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xuICAgICAgaWYgKGl0ZW0uY2xhc3MgJiYgaXRlbS5mb250U2V0dGluZykge1xuICAgICAgICBhZGRDU1NSdWxlcyhbIGdldEZvbnRDc3NTdHlsZShpdGVtLmNsYXNzLCBpdGVtLmZvbnRTZXR0aW5nKSBdKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW0uZm9udFNldHRpbmcuZm9udC50eXBlKSB7XG4gICAgICAgIGlmIChpdGVtLmZvbnRTZXR0aW5nLmZvbnQudHlwZSA9PT0gXCJjdXN0b21cIiAmJiBpdGVtLmZvbnRTZXR0aW5nLmZvbnQuZmFtaWx5ICYmXG4gICAgICAgICAgaXRlbS5mb250U2V0dGluZy5mb250LnVybCkge1xuICAgICAgICAgIGxvYWRDdXN0b21Gb250KGl0ZW0uZm9udFNldHRpbmcuZm9udC5mYW1pbHksIGl0ZW0uZm9udFNldHRpbmcuZm9udC51cmwsXG4gICAgICAgICAgICBjb250ZW50RG9jKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpdGVtLmZvbnRTZXR0aW5nLmZvbnQudHlwZSA9PT0gXCJnb29nbGVcIiAmJiBpdGVtLmZvbnRTZXR0aW5nLmZvbnQuZmFtaWx5KSB7XG4gICAgICAgICAgbG9hZEdvb2dsZUZvbnQoaXRlbS5mb250U2V0dGluZy5mb250LmZhbWlseSwgY29udGVudERvYyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxvYWRDdXN0b21Gb250KGZhbWlseSwgdXJsLCBjb250ZW50RG9jKSB7XG4gICAgdmFyIHNoZWV0ID0gbnVsbDtcbiAgICB2YXIgcnVsZSA9IFwiZm9udC1mYW1pbHk6IFwiICsgZmFtaWx5ICsgXCI7IFwiICsgXCJzcmM6IHVybCgnXCIgKyB1cmwgKyBcIicpO1wiO1xuXG4gICAgY29udGVudERvYyA9IGNvbnRlbnREb2MgfHwgZG9jdW1lbnQ7XG5cbiAgICBzaGVldCA9IGNvbnRlbnREb2Muc3R5bGVTaGVldHNbMF07XG5cbiAgICBpZiAoc2hlZXQgIT09IG51bGwpIHtcbiAgICAgIHNoZWV0LmFkZFJ1bGUoXCJAZm9udC1mYWNlXCIsIHJ1bGUpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGxvYWRHb29nbGVGb250KGZhbWlseSwgY29udGVudERvYykge1xuICAgIHZhciBzdHlsZXNoZWV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cbiAgICBjb250ZW50RG9jID0gY29udGVudERvYyB8fCBkb2N1bWVudDtcblxuICAgIHN0eWxlc2hlZXQuc2V0QXR0cmlidXRlKFwicmVsXCIsIFwic3R5bGVzaGVldFwiKTtcbiAgICBzdHlsZXNoZWV0LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJ0ZXh0L2Nzc1wiKTtcbiAgICBzdHlsZXNoZWV0LnNldEF0dHJpYnV0ZShcImhyZWZcIiwgXCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9XCIgK1xuICAgICAgZmFtaWx5KTtcblxuICAgIGlmIChzdHlsZXNoZWV0ICE9PSBudWxsKSB7XG4gICAgICBjb250ZW50RG9jLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXS5hcHBlbmRDaGlsZChzdHlsZXNoZWV0KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGdldEZvbnRDc3NTdHlsZTogIGdldEZvbnRDc3NTdHlsZSxcbiAgICBhZGRDU1NSdWxlczogICAgICBhZGRDU1NSdWxlcyxcbiAgICBsb2FkRm9udHM6ICAgICAgICBsb2FkRm9udHMsXG4gICAgbG9hZEN1c3RvbUZvbnQ6ICAgbG9hZEN1c3RvbUZvbnQsXG4gICAgbG9hZEdvb2dsZUZvbnQ6ICAgbG9hZEdvb2dsZUZvbnRcbiAgfTtcbn0pKCk7XG5cbi8qICBDb3B5cmlnaHQgwqkgMjAxNCBSaXNlIFZpc2lvbiBJbmNvcnBvcmF0ZWQuXG4gKiAgVXNlIG9mIHRoaXMgc29mdHdhcmUgaXMgZ292ZXJuZWQgYnkgdGhlIEdQTHYzIGxpY2Vuc2VcbiAqICAocmVwcm9kdWNlZCBpbiB0aGUgTElDRU5TRSBmaWxlKS5cbiAqL1xuXG4gOyhmdW5jdGlvbiAoJCwgd2luZG93LCBkb2N1bWVudCwgVEVNUExBVEVTLCBDT05GSUcsIHVuZGVmaW5lZCkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgX3BsdWdpbk5hbWUgPSBcImZvbnRQaWNrZXJcIjtcbiAgdmFyIENVU1RPTV9GT05UX1RFWFQgPSBcIlVzZSBDdXN0b20gRm9udFwiO1xuXG4gIGZ1bmN0aW9uIFBsdWdpbihlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdmFyIHV0aWxzID0gUmlzZVZpc2lvbi5Db21tb24uVXRpbGl0aWVzLFxuICAgICAgJGVsZW1lbnQgPSAkKGVsZW1lbnQpLFxuICAgICAgJHNlbGVjdEJveCA9IG51bGwsXG4gICAgICAkZmFtaWx5ID0gbnVsbCxcbiAgICAgICRjdXN0b21Gb250ID0gbnVsbCxcbiAgICAgICRjdXN0b21Gb250VXJsRmllbGQgPSBudWxsLFxuICAgICAgJGN1c3RvbUZvbnRFcnJvciA9IG51bGwsXG4gICAgICBjb250ZW50RG9jdW1lbnQgPSBudWxsLFxuICAgICAgY3VycmVudEZvbnQgPSBcIlwiLFxuICAgICAgY3VzdG9tRm9udFVSTCA9IFwiXCI7XG5cbiAgICBvcHRpb25zID0gJC5leHRlbmQoe30sIHtcbiAgICAgIFwiYmxhbmtcIjogICAgICAgICAgICBmYWxzZSxcbiAgICAgIFwiZm9udFwiOiAgICAgICAgICAgICBcIkFyaWFsXCIsXG4gICAgICBcImZvbnQtdXJsXCI6ICAgICAgICAgXCJcIixcbiAgICAgIFwibG9hZFwiOiAgICAgICAgICAgICBudWxsLFxuICAgICAgXCJzaG93Q3VzdG9tXCI6ICAgICAgIHRydWUsXG4gICAgICBcInNob3dNb3JlXCI6ICAgICAgICAgdHJ1ZSxcbiAgICB9LCBvcHRpb25zKTtcblxuICAgIC8qXG4gICAgICogIFByaXZhdGUgTWV0aG9kc1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9pbml0KCkge1xuICAgICAgLy8gR2V0IHRoZSBIVE1MIG1hcmt1cCBmcm9tIHRoZSB0ZW1wbGF0ZS5cbiAgICAgICRlbGVtZW50LmFwcGVuZChURU1QTEFURVNbJ2ZvbnQtcGlja2VyLXRlbXBsYXRlLmh0bWwnXSk7XG5cbiAgICAgICRzZWxlY3RCb3ggPSAkZWxlbWVudC5maW5kKFwiLmJmaC1zZWxlY3Rib3hcIik7XG4gICAgICAkZmFtaWx5ID0gJGVsZW1lbnQuZmluZChcIi5mb250LWZhbWlseVwiKTtcbiAgICAgICRjdXN0b21Gb250ID0gJGVsZW1lbnQuZmluZChcIi5jdXN0b20tZm9udFwiKTtcbiAgICAgICRjdXN0b21Gb250VXJsRmllbGQgPSAkY3VzdG9tRm9udC5maW5kKFwiLnVybC1maWVsZFwiKTtcbiAgICAgICRjdXN0b21Gb250RXJyb3IgPSAkZWxlbWVudC5maW5kKFwiLmN1c3RvbS1mb250LWVycm9yXCIpO1xuXG4gICAgICAvLyBJbml0aWFsaXplIGZvbnQgbGlzdC5cbiAgICAgICRzZWxlY3RCb3guYmZoZm9udHMob3B0aW9ucyk7XG5cbiAgICAgIC8vIEluaXRpYWxpemUgR29vZ2xlIGZvbnQgbGlzdC5cbiAgICAgICRlbGVtZW50LmZpbmQoXCIuYmZoLWdvb2dsZWZvbnRsaXN0XCIpLmJmaGdvb2dsZWZvbnRsaXN0KCk7XG5cbiAgICAgIC8vIEluaXRpYWxpemUgY3VzdG9tIGZvbnQuXG4gICAgICAkY3VzdG9tRm9udFVybEZpZWxkLnVybEZpZWxkKHtcbiAgICAgICAgdXJsOiBvcHRpb25zW1wiZm9udC11cmxcIl1cbiAgICAgIH0pO1xuICAgICAgJGN1c3RvbUZvbnRVcmxGaWVsZCA9ICRjdXN0b21Gb250VXJsRmllbGQuZGF0YShcInBsdWdpbl91cmxGaWVsZFwiKTtcblxuICAgICAgY3VzdG9tRm9udFVSTCA9IG9wdGlvbnNbXCJmb250LXVybFwiXTtcblxuICAgICAgX2xvYWRGb250KCk7XG4gICAgICBfYmluZCgpO1xuXG4gICAgICBpZiAodHlwZW9mIG9wdGlvbnMubG9hZCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIG9wdGlvbnMubG9hZC5jYWxsKCRlbGVtZW50KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKlxuICAgICAqICBMb2FkIHRoZSBzZWxlY3RlZCBmb250IGlmIG5lY2Vzc2FyeS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfbG9hZEZvbnQoKSB7XG4gICAgICB2YXIgZm91bmQgPSBmYWxzZTtcblxuICAgICAgY3VycmVudEZvbnQgPSAkZmFtaWx5LnZhbCgpO1xuXG4gICAgICAvLyBDdXN0b20gZm9udFxuICAgICAgaWYgKGN1c3RvbUZvbnRVUkwgIT09IFwiXCIpIHtcbiAgICAgICAgdXRpbHMubG9hZEN1c3RvbUZvbnQoY3VycmVudEZvbnQsIGN1c3RvbUZvbnRVUkwsIGNvbnRlbnREb2N1bWVudCk7XG4gICAgICAgIGN1cnJlbnRGb250ID0gQ1VTVE9NX0ZPTlRfVEVYVDtcbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKGN1cnJlbnRGb250ICE9PSBudWxsKSB7XG4gICAgICAgIC8vIFN0YW5kYXJkIGZvbnRcbiAgICAgICAgJHNlbGVjdEJveC5maW5kKFwiLmJmaC1zZWxlY3Rib3gtb3B0aW9ucyBhXCIpLmVhY2goZnVuY3Rpb24oaW5kZXgpIHtcbiAgICAgICAgICBpZiAoJCh0aGlzKS50ZXh0KCkgPT09IGN1cnJlbnRGb250KSB7XG4gICAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBHb29nbGUgZm9udFxuICAgICAgICBpZiAoIWZvdW5kKSB7XG4gICAgICAgICAgYWRkR29vZ2xlRm9udChjdXJyZW50Rm9udCwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKlxuICAgICAqICBBZGQgZXZlbnQgaGFuZGxlcnMuXG4gICAgICovXG4gICAgZnVuY3Rpb24gX2JpbmQoKSB7XG4gICAgICB2YXIgJGdvb2dsZUZvbnRzID0gJGVsZW1lbnQuZmluZChcIi5nb29nbGUtZm9udHNcIik7XG5cbiAgICAgIC8vIEl0ZW0gaXMgc2VsZWN0ZWQgZnJvbSBkcm9wZG93bi5cbiAgICAgICRzZWxlY3RCb3gub24oXCJjaGFuZ2UuYmZoc2VsZWN0Ym94XCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgaWYgKGUudGFyZ2V0LnZhbHVlID09PSBcIk1vcmUgRm9udHMuLi5cIikge1xuICAgICAgICAgICRnb29nbGVGb250cy5tb2RhbChcInNob3dcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZS50YXJnZXQudmFsdWUgPT09IENVU1RPTV9GT05UX1RFWFQpIHtcbiAgICAgICAgICBjdXJyZW50Rm9udCA9ICRmYW1pbHkudmFsKCk7XG4gICAgICAgICAgJGN1c3RvbUZvbnRFcnJvci5oaWRlKCk7XG4gICAgICAgICAgJGN1c3RvbUZvbnQubW9kYWwoXCJzaG93XCIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGN1cnJlbnRGb250ID0gJGZhbWlseS52YWwoKTtcblxuICAgICAgICAgICRzZWxlY3RCb3gudHJpZ2dlcihcInN0YW5kYXJkRm9udFNlbGVjdGVkXCIsIFtjdXJyZW50Rm9udCxcbiAgICAgICAgICAgICRlbGVtZW50LmZpbmQoXCJhW2RhdGEtb3B0aW9uPSdcIiArIGN1cnJlbnRGb250ICsgXCInXVwiKVxuICAgICAgICAgICAgICAuY3NzKFwiZm9udC1mYW1pbHlcIildKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIC8vIEN1c3RvbSBmb250IFVSTCBpcyBzYXZlZC5cbiAgICAgICRlbGVtZW50LmZpbmQoXCIuc2F2ZS1jdXN0b20tZm9udFwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgZm9udEZhbWlseSA9IFwiXCI7XG5cbiAgICAgICAgY3VzdG9tRm9udFVSTCA9ICRjdXN0b21Gb250VXJsRmllbGQuZ2V0VXJsKCk7XG4gICAgICAgIGZvbnRGYW1pbHkgPSBfZ2V0Q3VzdG9tRm9udE5hbWUoKTtcblxuICAgICAgICBpZiAoJGN1c3RvbUZvbnRVcmxGaWVsZC52YWxpZGF0ZVVybCgpKSB7XG4gICAgICAgICAgdXRpbHMubG9hZEN1c3RvbUZvbnQoZm9udEZhbWlseSwgY3VzdG9tRm9udFVSTCwgY29udGVudERvY3VtZW50KTtcbiAgICAgICAgICAkY3VzdG9tRm9udC5tb2RhbChcImhpZGVcIik7XG4gICAgICAgICAgJHNlbGVjdEJveC50cmlnZ2VyKFwiY3VzdG9tRm9udFNlbGVjdGVkXCIsIFtmb250RmFtaWx5LCBjdXN0b21Gb250VVJMXSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgJGN1c3RvbUZvbnRFcnJvci5zaG93KCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAvLyBHb29nbGUgZm9udCBpcyBzZWxlY3RlZC5cbiAgICAgICRnb29nbGVGb250cy5vbihcInNlbGVjdFwiLCBmdW5jdGlvbihlLCBmYW1pbHkpIHtcbiAgICAgICAgYWRkR29vZ2xlRm9udChmYW1pbHksIHRydWUpO1xuICAgICAgICAkZ29vZ2xlRm9udHMubW9kYWwoXCJoaWRlXCIpO1xuXG4gICAgICAgIGN1cnJlbnRGb250ID0gJGZhbWlseS52YWwoKTtcblxuICAgICAgICAkc2VsZWN0Qm94LnRyaWdnZXIoXCJnb29nbGVGb250U2VsZWN0ZWRcIiwgZmFtaWx5KTtcbiAgICAgIH0pO1xuXG4gICAgICAvLyBHb29nbGUgZm9udCBkaWFsb2cgaXMgY2xvc2VkLlxuICAgICAgJGdvb2dsZUZvbnRzLmZpbmQoXCIuY2xvc2VcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgLy8gTm8gR29vZ2xlIGZvbnQgd2FzIHNlbGVjdGVkOyByZXZlcnQgdG8gcHJldmlvdXMgc2VsZWN0aW9uLlxuICAgICAgICAkc2VsZWN0Qm94LmZpbmQoXCIuYmZoLXNlbGVjdGJveC1vcHRpb25cIikuZGF0YShcIm9wdGlvblwiLCBjdXJyZW50Rm9udClcbiAgICAgICAgICAuaHRtbChjdXJyZW50Rm9udCk7XG4gICAgICAgICRmYW1pbHkudmFsKGN1cnJlbnRGb250KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogIENyZWF0ZSBhIHVuaXF1ZSBuYW1lIGZvciBhIGN1c3RvbSBmb250IGJ5IGV4dHJhY3RpbmcgdGhlIG5hbWVcbiAgICAgKiAgZnJvbSBpdHMgVVJMLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9nZXRDdXN0b21Gb250TmFtZSgpIHtcbiAgICAgIHJldHVybiBjdXN0b21Gb250VVJMLnNwbGl0KFwiL1wiKS5wb3AoKS5zcGxpdChcIi5cIilbMF07XG4gICAgfVxuXG4gICAgLypcbiAgICAgKiAgU29ydCB0aGUgZHJvcC1kb3duLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIF9zb3J0Rm9udExpc3QoKSB7XG4gICAgICAvLyBEb24ndCBzb3J0IFwiVXNlIEN1c3RvbSBGb250XCIgb3IgXCJNb3JlIEZvbnRzLi4uXCIuXG4gICAgICB2YXIgbGVuZ3RoID0gJHNlbGVjdEJveC5maW5kKFwiW3JvbGU9b3B0aW9uXVwiICsgXCIgbGlcIikubGVuZ3RoLFxuICAgICAgICBjdXN0b21Gb250ID0gJHNlbGVjdEJveC5maW5kKFwiW3JvbGU9b3B0aW9uXVwiICsgXCIgbGk6bnRoLWxhc3QtY2hpbGQoMilcIiksXG4gICAgICAgIG1vcmVGb250cyA9ICRzZWxlY3RCb3guZmluZChcIltyb2xlPW9wdGlvbl1cIiArIFwiIGxpOmxhc3RcIiksXG4gICAgICAgIHNvcnRlZEZvbnRzID0gJHNlbGVjdEJveC5maW5kKFwiW3JvbGU9b3B0aW9uXVwiICsgXCIgbGlcIilcbiAgICAgICAgICAuc2xpY2UoMCwgbGVuZ3RoIC0gMikuc29ydChcbiAgICAgICAgICAgIGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgICAgICAgdmFyIGZpcnN0ID0gJChhKS5maW5kKFwiYVwiKS50ZXh0KCksXG4gICAgICAgICAgICAgICAgc2Vjb25kID0gJChiKS5maW5kKFwiYVwiKS50ZXh0KCk7XG5cbiAgICAgICAgICAgICAgcmV0dXJuIGZpcnN0ID09IHNlY29uZCA/IDAgOiBmaXJzdCA8IHNlY29uZCA/IC0xIDogMTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAkc2VsZWN0Qm94LmZpbmQoXCJbcm9sZT1vcHRpb25dXCIpLmh0bWwoc29ydGVkRm9udHMpLmFwcGVuZChjdXN0b21Gb250KVxuICAgICAgICAuYXBwZW5kKG1vcmVGb250cyk7XG4gICAgfVxuXG4gICAgLypcbiAgICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBnZXRGb250KCkge1xuICAgICAgaWYgKGN1c3RvbUZvbnRVUkwgIT09IFwiXCIpIHtcbiAgICAgICAgcmV0dXJuIF9nZXRDdXN0b21Gb250TmFtZSgpO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHJldHVybiAkZmFtaWx5LnZhbCgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldEZvbnRTdHlsZSgpIHtcbiAgICAgIHJldHVybiAkZWxlbWVudC5maW5kKFwiYVtkYXRhLW9wdGlvbj0nXCIgKyAkZmFtaWx5LnZhbCgpICsgXCInXVwiKVxuICAgICAgICAuY3NzKFwiZm9udC1mYW1pbHlcIik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0Rm9udFVSTCgpIHtcbiAgICAgIHJldHVybiAkY3VzdG9tRm9udFVybEZpZWxkLmdldFVybCgpO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogU2V0IHRoZSBzZWxlY3RlZCBmb250IGluIHRoZSBkcm9wZG93bi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSAgICBzdHJpbmcgICAgZmFtaWx5ICAgIEZvbnQgZmFtaWx5LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHNldEZvbnQoZmFtaWx5KSB7XG4gICAgICB2YXIgZm9udCA9IGZhbWlseS5zcGxpdChcIixcIik7XG4gICAgICB2YXIgJGVsZW0gPSBudWxsO1xuICAgICAgdmFyIGZvdW5kID0gZmFsc2U7XG5cbiAgICAgICQuZWFjaChmb250LCBmdW5jdGlvbihpbmRleCwgdmFsdWUpIHtcbiAgICAgICAgLy8gUmVtb3ZlIHF1b3RlcyBzbyB0aGF0IGEgbWF0Y2ggY2FuIGJlIGZvdW5kLlxuICAgICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoLycvZywgXCJcIikudHJpbSgpO1xuICAgICAgICAkZWxlbSA9ICRzZWxlY3RCb3guZmluZChcImFbZGF0YS1vcHRpb249J1wiICsgdmFsdWUgKyBcIiddXCIpO1xuXG4gICAgICAgIC8vIFRoaXMgaXMgYSBzdGFuZGFyZCBvciBHb29nbGUgZm9udC5cbiAgICAgICAgaWYgKCRlbGVtLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICRzZWxlY3RCb3guZmluZChcIi5iZmgtc2VsZWN0Ym94LW9wdGlvblwiKS50ZXh0KCRlbGVtLnRleHQoKSlcbiAgICAgICAgICAgIC5kYXRhKFwib3B0aW9uXCIsIHZhbHVlKTtcbiAgICAgICAgICAkZmFtaWx5LnZhbCh2YWx1ZSk7XG5cbiAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgLy8gVGhpcyBtdXN0IGJlIGEgY3VzdG9tIGZvbnQuXG4gICAgICBpZiAoIWZvdW5kKSB7XG4gICAgICAgICRzZWxlY3RCb3guZmluZChcIi5iZmgtc2VsZWN0Ym94LW9wdGlvblwiKS50ZXh0KENVU1RPTV9GT05UX1RFWFQpXG4gICAgICAgICAgLmRhdGEoXCJvcHRpb25cIiwgQ1VTVE9NX0ZPTlRfVEVYVCk7XG4gICAgICAgICRmYW1pbHkudmFsKENVU1RPTV9GT05UX1RFWFQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8qXG4gICAgICogUmVzZXQgZm9udCBwaWNrZXIgdG8gZGVmYXVsdCBmb250LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgICAgc2V0Rm9udChcIkFyaWFsLCAnSGVsdmV0aWNhIE5ldWUnLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWZcIik7XG4gICAgfVxuXG4gICAgLypcbiAgICAgKiBTZXQgdGhlIGNvbnRlbnQgZG9jdW1lbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gICAgb2JqZWN0ICAgIGNvbnRlbnREb2MgICAgQ29udGVudCBkb2N1bWVudFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHNldENvbnRlbnREb2N1bWVudChjb250ZW50RG9jKSB7XG4gICAgICBjb250ZW50RG9jdW1lbnQgPSBjb250ZW50RG9jO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogTG9hZCB0aGUgc2VsZWN0ZWQgR29vZ2xlIGZvbnQgYW5kIGFkZCBpdCB0byB0aGUgZHJvcC1kb3duLlxuICAgICAqXG4gICAgICogQHBhcmFtICAgc3RyaW5nICAgIGZhbWlseSAgICAgICAgRm9udCBmYW1pbHlcbiAgICAgKiBAcGFyYW0gICBib29sZWFuICAgaXNTZWxlY3RlZCAgICBXaGV0aGVyIHRvIHNldCB0aGlzIGZvbnQgYXMgdGhlXG4gICAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudGx5IHNlbGVjdGVkIGZvbnQuXG4gICAgICovXG4gICAgZnVuY3Rpb24gYWRkR29vZ2xlRm9udChmYW1pbHksIGlzU2VsZWN0ZWQpIHtcbiAgICAgIHZhciAkb3B0aW9ucyA9ICRzZWxlY3RCb3guZmluZChcIltyb2xlPW9wdGlvbl1cIik7XG5cbiAgICAgIC8vIExvYWQgaXQuXG4gICAgICB1dGlscy5sb2FkR29vZ2xlRm9udChmYW1pbHksIGNvbnRlbnREb2N1bWVudCk7XG5cbiAgICAgIC8vIFJlbW92ZSBwcmV2aW91cyBHb29nbGUgZm9udCwgaWYgYXBwbGljYWJsZSwgYW5kIGFkZCB0aGUgbmV3IG9uZS5cbiAgICAgIC8vJG9wdGlvbnMuZmluZChcImxpLmdvb2dsZS1mb250XCIpLnJlbW92ZSgpO1xuICAgICAgJG9wdGlvbnMucHJlcGVuZChcIjxsaSBjbGFzcz0nZ29vZ2xlLWZvbnQnPjxhIHRhYmluZGV4PSctMScgaHJlZj0nIycgXCIgK1xuICAgICAgICBcInN0eWxlPSdmb250LWZhbWlseTogR29vZ2xlJyBkYXRhLW9wdGlvbj0nXCIgKyBmYW1pbHkgKyBcIic+XCIgKyBmYW1pbHkgK1xuICAgICAgICBcIjwvYT48L2xpPlwiKTtcblxuICAgICAgLy8gU2V0IEdvb2dsZSBmb250IGFzIGRlZmF1bHQgYW5kIHNvcnQuXG4gICAgICBpZiAoaXNTZWxlY3RlZCkge1xuICAgICAgICAkc2VsZWN0Qm94LmZpbmQoXCIuYmZoLXNlbGVjdGJveC1vcHRpb25cIikuZGF0YShcIm9wdGlvblwiLCBmYW1pbHkpXG4gICAgICAgICAgLmh0bWwoZmFtaWx5KTtcbiAgICAgICAgJHNlbGVjdEJveC5maW5kKFwiLmZvbnQtZmFtaWx5XCIpLnZhbChmYW1pbHkpO1xuICAgICAgfVxuXG4gICAgICBfc29ydEZvbnRMaXN0KCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYWRkQ3VzdG9tRm9udChmb250RmFtaWx5LCBmb250VXJsKSB7XG4gICAgICAvLyBMb2FkIGl0XG4gICAgICB1dGlscy5sb2FkQ3VzdG9tRm9udChmb250RmFtaWx5LCBmb250VXJsLCBjb250ZW50RG9jdW1lbnQpO1xuXG4gICAgICBjdXN0b21Gb250VVJMID0gZm9udFVybDtcbiAgICAgIGN1cnJlbnRGb250ID0gQ1VTVE9NX0ZPTlRfVEVYVDtcbiAgICB9XG5cbiAgICBfaW5pdCgpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGdldEZvbnQ6ICAgICAgIGdldEZvbnQsXG4gICAgICBnZXRGb250U3R5bGU6ICBnZXRGb250U3R5bGUsXG4gICAgICBnZXRGb250VVJMOiAgICBnZXRGb250VVJMLFxuICAgICAgc2V0Rm9udDogICAgICAgc2V0Rm9udCxcbiAgICAgIHJlc2V0OiAgICAgICAgIHJlc2V0LFxuICAgICAgc2V0Q29udGVudERvYzogc2V0Q29udGVudERvY3VtZW50LFxuICAgICAgYWRkR29vZ2xlRm9udDogYWRkR29vZ2xlRm9udCxcbiAgICAgIGFkZEN1c3RvbUZvbnQ6IGFkZEN1c3RvbUZvbnRcbiAgICB9O1xuICB9XG5cbiAgLypcbiAgICogIEEgbGlnaHR3ZWlnaHQgcGx1Z2luIHdyYXBwZXIgYXJvdW5kIHRoZSBjb25zdHJ1Y3RvciB0aGF0IHByZXZlbnRzXG4gICAqICBtdWx0aXBsZSBpbnN0YW50aWF0aW9ucy5cbiAgICovXG4gICQuZm4uZm9udFBpY2tlciA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCEkLmRhdGEodGhpcywgXCJwbHVnaW5fXCIgKyBfcGx1Z2luTmFtZSkpIHtcbiAgICAgICAgJC5kYXRhKHRoaXMsIFwicGx1Z2luX1wiICsgX3BsdWdpbk5hbWUsIG5ldyBQbHVnaW4odGhpcywgb3B0aW9ucykpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xufSkoalF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50LCBURU1QTEFURVMsIENPTkZJRyk7XG5cbnZhciBDT05GSUcgPSB7fTtcblxuLyogIENvcHlyaWdodCDCqSAyMDE0IFJpc2UgVmlzaW9uIEluY29ycG9yYXRlZC5cbiAqICBVc2Ugb2YgdGhpcyBzb2Z0d2FyZSBpcyBnb3Zlcm5lZCBieSB0aGUgR1BMdjMgbGljZW5zZVxuICogIChyZXByb2R1Y2VkIGluIHRoZSBMSUNFTlNFIGZpbGUpLlxuICovXG47KGZ1bmN0aW9uICgkLCB3aW5kb3csIGRvY3VtZW50LCBDT05GSUcsIHVuZGVmaW5lZCkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgX3BsdWdpbk5hbWUgPSBcImZvbnRTaXplUGlja2VyXCI7XG5cbiAgZnVuY3Rpb24gUGx1Z2luKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB2YXIgJGVsZW1lbnQgPSAkKGVsZW1lbnQpO1xuICAgIHZhciBkZWZhdWx0U2l6ZSA9IFwiMTRcIjtcblxuICAgIG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwge1xuICAgICAgXCJmb250LXNpemVcIjogIGRlZmF1bHRTaXplLFxuICAgICAgXCJibGFua1wiOiAgICAgIGZhbHNlLFxuICAgIH0sIG9wdGlvbnMpO1xuXG4gICAgLypcbiAgICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAgICovXG4gICAgZnVuY3Rpb24gX2luaXQoKSB7XG4gICAgICAvLyBBZGQgdGhlIG1hcmt1cC5cbiAgICAgICRlbGVtZW50LmFwcGVuZChcIjxzZWxlY3QgY2xhc3M9J2Zvcm0tY29udHJvbCBiZmgtZm9udHNpemVzJyBcIiArXG4gICAgICAgIFwiZGF0YS1zdHlsZT0nYnRuLWRlZmF1bHQgYnRuLXNtJz48L3NlbGVjdD5cIik7XG5cbiAgICAgIC8vIEluaXRpYWxpemUgdGhlIGZvbnQgc2l6ZSBwaWNrZXIgY29tcG9uZW50LlxuICAgICAgJGVsZW1lbnQuZmluZChcIi5iZmgtZm9udHNpemVzXCIpLmJmaGZvbnRzaXplcyh7XG4gICAgICAgIFwiZm9udHNpemVcIjogb3B0aW9uc1tcImZvbnQtc2l6ZVwiXSxcbiAgICAgICAgXCJibGFua1wiOiAgICBvcHRpb25zLmJsYW5rLFxuICAgICAgfSkuc2VsZWN0cGlja2VyKCk7XG5cbiAgICAgICRlbGVtZW50LmZpbmQoXCIuYmZoLWZvbnRzaXplc1wiKS5vbihcImNoYW5nZS5iZmhzZWxlY3Rib3hcIiwgZnVuY3Rpb24oZSkge1xuICAgICAgICAkZWxlbWVudC50cmlnZ2VyKFwic2l6ZUNoYW5nZWRcIiwgZ2V0U2l6ZSgpKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogIFB1YmxpYyBNZXRob2RzXG4gICAgICovXG4gICAgZnVuY3Rpb24gZ2V0U2l6ZSgpIHtcbiAgICAgIHJldHVybiAkZWxlbWVudC5maW5kKFwiLmJmaC1mb250c2l6ZXNcIikudmFsKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0U2l6ZShzaXplKSB7XG4gICAgICB2YXIgJHNlbGVjdEVsZW0gPSAkZWxlbWVudC5maW5kKFwiLmJmaC1mb250c2l6ZXNcIik7XG5cbiAgICAgIGlmIChzaXplKSB7XG4gICAgICAgIHNpemUgPSBwYXJzZUludChzaXplLCAxMCk7XG5cbiAgICAgICAgLy8gRmluZCB0aGUgZHJvcC1kb3duIGl0ZW0gZm9yIHRoaXMgZm9udCBzaXplIGFuZCBzZWxlY3QgaXQuXG4gICAgICAgICRzZWxlY3RFbGVtLmZpbmQoXCI+IC5kcm9wZG93bi1tZW51IGxpXCIpLmVhY2goZnVuY3Rpb24oaW5kZXgpIHtcbiAgICAgICAgICBpZiAoJCh0aGlzKS5maW5kKFwic3BhblwiKS50ZXh0KCkgPT0gc2l6ZSkge1xuICAgICAgICAgICAgJCh0aGlzKS50b2dnbGVDbGFzcyhcInNlbGVjdGVkXCIsIHRydWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICQodGhpcykudG9nZ2xlQ2xhc3MoXCJzZWxlY3RlZFwiLCBmYWxzZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAvLyBVcGRhdGUgdGhlIFVJIHdpdGggdGhlIGN1cnJlbnQgZm9udCBzaXplLlxuICAgICAgICAkc2VsZWN0RWxlbS5maW5kKFwiPiBidXR0b25cIikuYXR0cihcInRpdGxlXCIsIHNpemUpO1xuICAgICAgICAkc2VsZWN0RWxlbS5maW5kKFwiLmZpbHRlci1vcHRpb25cIikuaHRtbChzaXplKTtcbiAgICAgICAgJHNlbGVjdEVsZW0udmFsKHNpemUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgICAgc2V0U2l6ZShkZWZhdWx0U2l6ZSk7XG4gICAgfVxuXG4gICAgX2luaXQoKTtcblxuICAgIHJldHVybiB7XG4gICAgICBnZXRGb250U2l6ZTogZ2V0U2l6ZSxcbiAgICAgIHNldEZvbnRTaXplOiBzZXRTaXplLFxuICAgICAgcmVzZXQ6ICAgICAgIHJlc2V0XG4gICAgfTtcbiAgfVxuXG4gIC8qXG4gICAqICBBIGxpZ2h0d2VpZ2h0IHBsdWdpbiB3cmFwcGVyIGFyb3VuZCB0aGUgY29uc3RydWN0b3IgdGhhdCBwcmV2ZW50c1xuICAgKiAgbXVsdGlwbGUgaW5zdGFudGlhdGlvbnMuXG4gICAqL1xuICAkLmZuLmZvbnRTaXplUGlja2VyID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoISQuZGF0YSh0aGlzLCBcInBsdWdpbl9cIiArIF9wbHVnaW5OYW1lKSkge1xuICAgICAgICAkLmRhdGEodGhpcywgXCJwbHVnaW5fXCIgKyBfcGx1Z2luTmFtZSwgbmV3IFBsdWdpbih0aGlzLCBvcHRpb25zKSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG59KShqUXVlcnksIHdpbmRvdywgZG9jdW1lbnQsIENPTkZJRyk7XG4vLyBTcGVjdHJ1bSBDb2xvcnBpY2tlciB2MS4zLjRcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9iZ3JpbnMvc3BlY3RydW1cbi8vIEF1dGhvcjogQnJpYW4gR3JpbnN0ZWFkXG4vLyBMaWNlbnNlOiBNSVRcblxuKGZ1bmN0aW9uICh3aW5kb3csICQsIHVuZGVmaW5lZCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgdmFyIGRlZmF1bHRPcHRzID0ge1xuXG4gICAgICAgIC8vIENhbGxiYWNrc1xuICAgICAgICBiZWZvcmVTaG93OiBub29wLFxuICAgICAgICBtb3ZlOiBub29wLFxuICAgICAgICBjaGFuZ2U6IG5vb3AsXG4gICAgICAgIHNob3c6IG5vb3AsXG4gICAgICAgIGhpZGU6IG5vb3AsXG5cbiAgICAgICAgLy8gT3B0aW9uc1xuICAgICAgICBjb2xvcjogZmFsc2UsXG4gICAgICAgIGZsYXQ6IGZhbHNlLFxuICAgICAgICBzaG93SW5wdXQ6IGZhbHNlLFxuICAgICAgICBhbGxvd0VtcHR5OiBmYWxzZSxcbiAgICAgICAgc2hvd0J1dHRvbnM6IHRydWUsXG4gICAgICAgIGNsaWNrb3V0RmlyZXNDaGFuZ2U6IGZhbHNlLFxuICAgICAgICBzaG93SW5pdGlhbDogZmFsc2UsXG4gICAgICAgIHNob3dQYWxldHRlOiBmYWxzZSxcbiAgICAgICAgc2hvd1BhbGV0dGVPbmx5OiBmYWxzZSxcbiAgICAgICAgc2hvd1NlbGVjdGlvblBhbGV0dGU6IHRydWUsXG4gICAgICAgIGxvY2FsU3RvcmFnZUtleTogZmFsc2UsXG4gICAgICAgIGFwcGVuZFRvOiBcImJvZHlcIixcbiAgICAgICAgbWF4U2VsZWN0aW9uU2l6ZTogNyxcbiAgICAgICAgY2FuY2VsVGV4dDogXCJjYW5jZWxcIixcbiAgICAgICAgY2hvb3NlVGV4dDogXCJjaG9vc2VcIixcbiAgICAgICAgY2xlYXJUZXh0OiBcIkNsZWFyIENvbG9yIFNlbGVjdGlvblwiLFxuICAgICAgICBub0NvbG9yU2VsZWN0ZWRUZXh0OiBcIk5vIENvbG9yIFNlbGVjdGVkXCIsXG4gICAgICAgIHByZWZlcnJlZEZvcm1hdDogZmFsc2UsXG4gICAgICAgIGNsYXNzTmFtZTogXCJcIiwgLy8gRGVwcmVjYXRlZCAtIHVzZSBjb250YWluZXJDbGFzc05hbWUgYW5kIHJlcGxhY2VyQ2xhc3NOYW1lIGluc3RlYWQuXG4gICAgICAgIGNvbnRhaW5lckNsYXNzTmFtZTogXCJcIixcbiAgICAgICAgcmVwbGFjZXJDbGFzc05hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwidGV4dFwiLCAvLyBEb25uYVxuICAgICAgICBzaG93QWxwaGE6IGZhbHNlLFxuICAgICAgICB0aGVtZTogXCJzcC1saWdodFwiLFxuICAgICAgICBwYWxldHRlOiBbW1wiI2ZmZmZmZlwiLCBcIiMwMDAwMDBcIiwgXCIjZmYwMDAwXCIsIFwiI2ZmODAwMFwiLCBcIiNmZmZmMDBcIiwgXCIjMDA4MDAwXCIsIFwiIzAwMDBmZlwiLCBcIiM0YjAwODJcIiwgXCIjOTQwMGQzXCJdXSxcbiAgICAgICAgc2VsZWN0aW9uUGFsZXR0ZTogW10sXG4gICAgICAgIGRpc2FibGVkOiBmYWxzZVxuICAgIH0sXG4gICAgc3BlY3RydW1zID0gW10sXG4gICAgcmVwbGFjZUlucHV0LFxuICAgIElFID0gISEvbXNpZS9pLmV4ZWMoIHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50ICksXG4gICAgcmdiYVN1cHBvcnQgPSAoZnVuY3Rpb24oKSB7XG4gICAgICAgIGZ1bmN0aW9uIGNvbnRhaW5zKCBzdHIsIHN1YnN0ciApIHtcbiAgICAgICAgICAgIHJldHVybiAhIX4oJycgKyBzdHIpLmluZGV4T2Yoc3Vic3RyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBlbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHZhciBzdHlsZSA9IGVsZW0uc3R5bGU7XG4gICAgICAgIHN0eWxlLmNzc1RleHQgPSAnYmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC41KSc7XG4gICAgICAgIHJldHVybiBjb250YWlucyhzdHlsZS5iYWNrZ3JvdW5kQ29sb3IsICdyZ2JhJykgfHwgY29udGFpbnMoc3R5bGUuYmFja2dyb3VuZENvbG9yLCAnaHNsYScpO1xuICAgIH0pKCksXG4gICAgaW5wdXRUeXBlQ29sb3JTdXBwb3J0ID0gKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgY29sb3JJbnB1dCA9ICQoXCI8aW5wdXQgdHlwZT0nY29sb3InIHZhbHVlPSchJyAvPlwiKVswXTtcbiAgICAgICAgcmV0dXJuIGNvbG9ySW5wdXQudHlwZSA9PT0gXCJjb2xvclwiICYmIGNvbG9ySW5wdXQudmFsdWUgIT09IFwiIVwiO1xuICAgIH0pKCksXG4gICAgLyogRG9ubmEgU3RhcnQgLSBNb3ZlZCB0aGlzIGVsc2V3aGVyZS4gKi9cbiAgICAvLyByZXBsYWNlSW5wdXQgPSBbXG4gICAgLy8gICAgIFwiPGRpdiBjbGFzcz0nc3AtcmVwbGFjZXInPlwiLFxuICAgIC8vICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1wcmV2aWV3Jz48ZGl2IGNsYXNzPSdzcC1wcmV2aWV3LWlubmVyJz48L2Rpdj48L2Rpdj5cIixcbiAgICAvLyAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtZGQnPiYjOTY2MDs8L2Rpdj5cIixcbiAgICAvLyAgICAgXCI8L2Rpdj5cIlxuICAgIC8vIF0uam9pbignJyksXG4gICAgLyogRG9ubmEgRW5kICovXG4gICAgbWFya3VwID0gKGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAvLyBJRSBkb2VzIG5vdCBzdXBwb3J0IGdyYWRpZW50cyB3aXRoIG11bHRpcGxlIHN0b3BzLCBzbyB3ZSBuZWVkIHRvIHNpbXVsYXRlXG4gICAgICAgIC8vICB0aGF0IGZvciB0aGUgcmFpbmJvdyBzbGlkZXIgd2l0aCA4IGRpdnMgdGhhdCBlYWNoIGhhdmUgYSBzaW5nbGUgZ3JhZGllbnRcbiAgICAgICAgdmFyIGdyYWRpZW50Rml4ID0gXCJcIjtcbiAgICAgICAgaWYgKElFKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSA2OyBpKyspIHtcbiAgICAgICAgICAgICAgICBncmFkaWVudEZpeCArPSBcIjxkaXYgY2xhc3M9J3NwLVwiICsgaSArIFwiJz48L2Rpdj5cIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8qIERvbm5hIFN0YXJ0IC0gQ2hhbmdlZCBzcC1jaG9vc2UgYW5kIHNwLWNhbmNlbCBIVE1MLiAqL1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1jb250YWluZXIgc3AtaGlkZGVuJz5cIixcbiAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NwLXBhbGV0dGUtY29udGFpbmVyJz5cIixcbiAgICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1wYWxldHRlIHNwLXRodW1iIHNwLWNmJz48L2Rpdj5cIixcbiAgICAgICAgICAgICAgICBcIjwvZGl2PlwiLFxuICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtcGlja2VyLWNvbnRhaW5lcic+XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtdG9wIHNwLWNmJz5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtZmlsbCc+PC9kaXY+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NwLXRvcC1pbm5lcic+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1jb2xvcic+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3Atc2F0Jz5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtdmFsJz5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NwLWRyYWdnZXInPjwvZGl2PlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCI8L2Rpdj5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCI8L2Rpdj5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjwvZGl2PlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtY2xlYXIgc3AtY2xlYXItZGlzcGxheSc+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCI8L2Rpdj5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NwLWh1ZSc+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3Atc2xpZGVyJz48L2Rpdj5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ3JhZGllbnRGaXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCI8L2Rpdj5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiPC9kaXY+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NwLWFscGhhJz48ZGl2IGNsYXNzPSdzcC1hbHBoYS1pbm5lcic+PGRpdiBjbGFzcz0nc3AtYWxwaGEtaGFuZGxlJz48L2Rpdj48L2Rpdj48L2Rpdj5cIixcbiAgICAgICAgICAgICAgICAgICAgXCI8L2Rpdj5cIixcbiAgICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1pbnB1dC1jb250YWluZXIgc3AtY2YnPlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCI8aW5wdXQgY2xhc3M9J3NwLWlucHV0JyB0eXBlPSd0ZXh0JyBzcGVsbGNoZWNrPSdmYWxzZScgIC8+XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiPC9kaXY+XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtaW5pdGlhbCBzcC10aHVtYiBzcC1jZic+PC9kaXY+XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtYnV0dG9uLWNvbnRhaW5lciBzcC1jZic+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIjxidXR0b24gdHlwZT0nYnV0dG9uJyBjbGFzcz0nc3AtY2hvb3NlJz48aSBjbGFzcz0nZmEgZmEtY2hlY2sgZmEtd2hpdGUgJz48L2k+PC9idXR0b24+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIjxzcGFuIGNsYXNzPSdzcC1idG4tc3BhY2VyJy8+XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIjxidXR0b24gdHlwZT0nYnV0dG9uJyBjbGFzcz0nc3AtY2FuY2VsJz48aSBjbGFzcz0nZmEgZmEtdGltZXMgZmEtd2hpdGUgJz48L2k+PC9idXR0b24+XCIsXG4gICAgICAgICAgICAgICAgICAgIFwiPC9kaXY+XCIsXG4gICAgICAgICAgICAgICAgXCI8L2Rpdj5cIixcbiAgICAgICAgICAgIFwiPC9kaXY+XCJcbiAgICAgICAgXS5qb2luKFwiXCIpO1xuICAgICAgICAvKiBEb25uYSBFbmQgKi9cbiAgICB9KSgpO1xuXG4gICAgZnVuY3Rpb24gcGFsZXR0ZVRlbXBsYXRlIChwLCBjb2xvciwgY2xhc3NOYW1lLCBvcHRzKSB7XG4gICAgICAgIHZhciBodG1sID0gW107XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGN1cnJlbnQgPSBwW2ldO1xuICAgICAgICAgICAgaWYoY3VycmVudCkge1xuICAgICAgICAgICAgICAgIHZhciB0aW55ID0gdGlueWNvbG9yKGN1cnJlbnQpO1xuICAgICAgICAgICAgICAgIHZhciBjID0gdGlueS50b0hzbCgpLmwgPCAwLjUgPyBcInNwLXRodW1iLWVsIHNwLXRodW1iLWRhcmtcIiA6IFwic3AtdGh1bWItZWwgc3AtdGh1bWItbGlnaHRcIjtcbiAgICAgICAgICAgICAgICBjICs9ICh0aW55Y29sb3IuZXF1YWxzKGNvbG9yLCBjdXJyZW50KSkgPyBcIiBzcC10aHVtYi1hY3RpdmVcIiA6IFwiXCI7XG4gICAgICAgICAgICAgICAgdmFyIGZvcm1hdHRlZFN0cmluZyA9IHRpbnkudG9TdHJpbmcob3B0cy5wcmVmZXJyZWRGb3JtYXQgfHwgXCJyZ2JcIik7XG4gICAgICAgICAgICAgICAgdmFyIHN3YXRjaFN0eWxlID0gcmdiYVN1cHBvcnQgPyAoXCJiYWNrZ3JvdW5kLWNvbG9yOlwiICsgdGlueS50b1JnYlN0cmluZygpKSA6IFwiZmlsdGVyOlwiICsgdGlueS50b0ZpbHRlcigpO1xuICAgICAgICAgICAgICAgIGh0bWwucHVzaCgnPHNwYW4gdGl0bGU9XCInICsgZm9ybWF0dGVkU3RyaW5nICsgJ1wiIGRhdGEtY29sb3I9XCInICsgdGlueS50b1JnYlN0cmluZygpICsgJ1wiIGNsYXNzPVwiJyArIGMgKyAnXCI+PHNwYW4gY2xhc3M9XCJzcC10aHVtYi1pbm5lclwiIHN0eWxlPVwiJyArIHN3YXRjaFN0eWxlICsgJztcIiAvPjwvc3Bhbj4nKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIGNscyA9ICdzcC1jbGVhci1kaXNwbGF5JztcbiAgICAgICAgICAgICAgICBodG1sLnB1c2goJCgnPGRpdiAvPicpXG4gICAgICAgICAgICAgICAgICAgIC5hcHBlbmQoJCgnPHNwYW4gZGF0YS1jb2xvcj1cIlwiIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtcIiBjbGFzcz1cIicgKyBjbHMgKyAnXCI+PC9zcGFuPicpXG4gICAgICAgICAgICAgICAgICAgICAgICAuYXR0cigndGl0bGUnLCBvcHRzLm5vQ29sb3JTZWxlY3RlZFRleHQpXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgLmh0bWwoKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFwiPGRpdiBjbGFzcz0nc3AtY2YgXCIgKyBjbGFzc05hbWUgKyBcIic+XCIgKyBodG1sLmpvaW4oJycpICsgXCI8L2Rpdj5cIjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBoaWRlQWxsKCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNwZWN0cnVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKHNwZWN0cnVtc1tpXSkge1xuICAgICAgICAgICAgICAgIHNwZWN0cnVtc1tpXS5oaWRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YW5jZU9wdGlvbnMobywgY2FsbGJhY2tDb250ZXh0KSB7XG4gICAgICAgIHZhciBvcHRzID0gJC5leHRlbmQoe30sIGRlZmF1bHRPcHRzLCBvKTtcbiAgICAgICAgb3B0cy5jYWxsYmFja3MgPSB7XG4gICAgICAgICAgICAnbW92ZSc6IGJpbmQob3B0cy5tb3ZlLCBjYWxsYmFja0NvbnRleHQpLFxuICAgICAgICAgICAgJ2NoYW5nZSc6IGJpbmQob3B0cy5jaGFuZ2UsIGNhbGxiYWNrQ29udGV4dCksXG4gICAgICAgICAgICAnc2hvdyc6IGJpbmQob3B0cy5zaG93LCBjYWxsYmFja0NvbnRleHQpLFxuICAgICAgICAgICAgJ2hpZGUnOiBiaW5kKG9wdHMuaGlkZSwgY2FsbGJhY2tDb250ZXh0KSxcbiAgICAgICAgICAgICdiZWZvcmVTaG93JzogYmluZChvcHRzLmJlZm9yZVNob3csIGNhbGxiYWNrQ29udGV4dClcbiAgICAgICAgfTtcblxuICAgICAgICAvKiBEb25uYSBTdGFydCAtIFJlbmRlciBkaWZmZXJlbnQgbWFya3VwIGZvciB0ZXh0IGNvbG9yIHBpY2tlci4gKi9cbiAgICAgICAgaWYgKG9wdHMudHlwZSA9PT0gXCJ0ZXh0XCIpIHtcbiAgICAgICAgICByZXBsYWNlSW5wdXQgPSBbXG4gICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NwLXJlcGxhY2VyIHRleHQtY29sb3ItcGlja2VyJz5cIixcbiAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1wcmV2aWV3Jz5cIixcbiAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NwLXByZXZpZXctaW5uZXInPlwiLFxuICAgICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1wcmV2aWV3LWNoYXInPkE8L2Rpdj5cIixcbiAgICAgICAgICAgICAgICBcIjwvZGl2PlwiLFxuICAgICAgICAgICAgICBcIjwvZGl2PlwiLFxuICAgICAgICAgICAgICBcIjxiIGNsYXNzPSdjYXJldCc+PC9iPlwiLFxuICAgICAgICAgICAgXCI8L2Rpdj5cIlxuICAgICAgICAgIF0uam9pbignJyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAob3B0cy50eXBlID09PSBcImhpZ2hsaWdodFwiKSB7XG4gICAgICAgICAgcmVwbGFjZUlucHV0ID0gW1xuICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1yZXBsYWNlciBoaWdobGlnaHQtY29sb3ItcGlja2VyJz5cIixcbiAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1wcmV2aWV3Jz5cIixcbiAgICAgICAgICAgICAgICBcIjxkaXYgY2xhc3M9J3NwLXByZXZpZXctaW5uZXInPlwiLFxuICAgICAgICAgICAgICAgICAgXCI8aW1nIHNyYz0naHR0cDovL3MzLmFtYXpvbmF3cy5jb20vcmlzZS1jb21tb24tdGVzdC9zY3JpcHRzL3NwZWN0cnVtL2ltYWdlcy90ZXh0LWhpZ2hsaWdodC5wbmcnPlwiLFxuICAgICAgICAgICAgICAgIFwiPC9kaXY+XCIsXG4gICAgICAgICAgICAgIFwiPC9kaXY+XCIsXG4gICAgICAgICAgICAgIFwiPGIgY2xhc3M9J2NhcmV0Jz48L2I+XCIsXG4gICAgICAgICAgICBcIjwvZGl2PlwiXG4gICAgICAgICAgXS5qb2luKCcnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChvcHRzLnR5cGUgPT09IFwiYmFja2dyb3VuZFwiKSB7XG4gICAgICAgICAgcmVwbGFjZUlucHV0ID0gW1xuICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1yZXBsYWNlciBiYWNrZ3JvdW5kLWNvbG9yLXBpY2tlcic+XCIsXG4gICAgICAgICAgICAgICAgXCI8ZGl2IGNsYXNzPSdzcC1wcmV2aWV3Jz5cIixcbiAgICAgICAgICAgICAgICAgIFwiPGRpdiBjbGFzcz0nc3AtcHJldmlldy1pbm5lcic+PC9kaXY+XCIsXG4gICAgICAgICAgICAgICAgICBcIjwvZGl2PlwiLFxuICAgICAgICAgICAgICAgIFwiPGIgY2xhc3M9J2NhcmV0Jz48L2I+XCIsXG4gICAgICAgICAgICBcIjwvZGl2PlwiXG4gICAgICAgICAgXS5qb2luKCcnKTtcbiAgICAgICAgfVxuICAgICAgICAvKiBEb25uYSBFbmQgKi9cblxuICAgICAgICByZXR1cm4gb3B0cztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzcGVjdHJ1bShlbGVtZW50LCBvKSB7XG5cbiAgICAgICAgdmFyIG9wdHMgPSBpbnN0YW5jZU9wdGlvbnMobywgZWxlbWVudCksXG4gICAgICAgICAgICBmbGF0ID0gb3B0cy5mbGF0LFxuICAgICAgICAgICAgc2hvd1NlbGVjdGlvblBhbGV0dGUgPSBvcHRzLnNob3dTZWxlY3Rpb25QYWxldHRlLFxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlS2V5ID0gb3B0cy5sb2NhbFN0b3JhZ2VLZXksXG4gICAgICAgICAgICB0aGVtZSA9IG9wdHMudGhlbWUsXG4gICAgICAgICAgICBjYWxsYmFja3MgPSBvcHRzLmNhbGxiYWNrcyxcbiAgICAgICAgICAgIHJlc2l6ZSA9IHRocm90dGxlKHJlZmxvdywgMTApLFxuICAgICAgICAgICAgdmlzaWJsZSA9IGZhbHNlLFxuICAgICAgICAgICAgZHJhZ1dpZHRoID0gMCxcbiAgICAgICAgICAgIGRyYWdIZWlnaHQgPSAwLFxuICAgICAgICAgICAgZHJhZ0hlbHBlckhlaWdodCA9IDAsXG4gICAgICAgICAgICBzbGlkZUhlaWdodCA9IDAsXG4gICAgICAgICAgICBzbGlkZVdpZHRoID0gMCxcbiAgICAgICAgICAgIGFscGhhV2lkdGggPSAwLFxuICAgICAgICAgICAgYWxwaGFTbGlkZUhlbHBlcldpZHRoID0gMCxcbiAgICAgICAgICAgIHNsaWRlSGVscGVySGVpZ2h0ID0gMCxcbiAgICAgICAgICAgIGN1cnJlbnRIdWUgPSAwLFxuICAgICAgICAgICAgY3VycmVudFNhdHVyYXRpb24gPSAwLFxuICAgICAgICAgICAgY3VycmVudFZhbHVlID0gMCxcbiAgICAgICAgICAgIGN1cnJlbnRBbHBoYSA9IDEsXG4gICAgICAgICAgICBwYWxldHRlID0gW10sXG4gICAgICAgICAgICBwYWxldHRlQXJyYXkgPSBbXSxcbiAgICAgICAgICAgIHBhbGV0dGVMb29rdXAgPSB7fSxcbiAgICAgICAgICAgIHNlbGVjdGlvblBhbGV0dGUgPSBvcHRzLnNlbGVjdGlvblBhbGV0dGUuc2xpY2UoMCksXG4gICAgICAgICAgICBtYXhTZWxlY3Rpb25TaXplID0gb3B0cy5tYXhTZWxlY3Rpb25TaXplLFxuICAgICAgICAgICAgZHJhZ2dpbmdDbGFzcyA9IFwic3AtZHJhZ2dpbmdcIixcbiAgICAgICAgICAgIHNoaWZ0TW92ZW1lbnREaXJlY3Rpb24gPSBudWxsO1xuXG4gICAgICAgIHZhciBkb2MgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQsXG4gICAgICAgICAgICBib2R5ID0gZG9jLmJvZHksXG4gICAgICAgICAgICBib3VuZEVsZW1lbnQgPSAkKGVsZW1lbnQpLFxuICAgICAgICAgICAgZGlzYWJsZWQgPSBmYWxzZSxcbiAgICAgICAgICAgIGNvbnRhaW5lciA9ICQobWFya3VwLCBkb2MpLmFkZENsYXNzKHRoZW1lKSxcbiAgICAgICAgICAgIGRyYWdnZXIgPSBjb250YWluZXIuZmluZChcIi5zcC1jb2xvclwiKSxcbiAgICAgICAgICAgIGRyYWdIZWxwZXIgPSBjb250YWluZXIuZmluZChcIi5zcC1kcmFnZ2VyXCIpLFxuICAgICAgICAgICAgc2xpZGVyID0gY29udGFpbmVyLmZpbmQoXCIuc3AtaHVlXCIpLFxuICAgICAgICAgICAgc2xpZGVIZWxwZXIgPSBjb250YWluZXIuZmluZChcIi5zcC1zbGlkZXJcIiksXG4gICAgICAgICAgICBhbHBoYVNsaWRlcklubmVyID0gY29udGFpbmVyLmZpbmQoXCIuc3AtYWxwaGEtaW5uZXJcIiksXG4gICAgICAgICAgICBhbHBoYVNsaWRlciA9IGNvbnRhaW5lci5maW5kKFwiLnNwLWFscGhhXCIpLFxuICAgICAgICAgICAgYWxwaGFTbGlkZUhlbHBlciA9IGNvbnRhaW5lci5maW5kKFwiLnNwLWFscGhhLWhhbmRsZVwiKSxcbiAgICAgICAgICAgIHRleHRJbnB1dCA9IGNvbnRhaW5lci5maW5kKFwiLnNwLWlucHV0XCIpLFxuICAgICAgICAgICAgcGFsZXR0ZUNvbnRhaW5lciA9IGNvbnRhaW5lci5maW5kKFwiLnNwLXBhbGV0dGVcIiksXG4gICAgICAgICAgICBpbml0aWFsQ29sb3JDb250YWluZXIgPSBjb250YWluZXIuZmluZChcIi5zcC1pbml0aWFsXCIpLFxuICAgICAgICAgICAgY2FuY2VsQnV0dG9uID0gY29udGFpbmVyLmZpbmQoXCIuc3AtY2FuY2VsXCIpLFxuICAgICAgICAgICAgY2xlYXJCdXR0b24gPSBjb250YWluZXIuZmluZChcIi5zcC1jbGVhclwiKSxcbiAgICAgICAgICAgIGNob29zZUJ1dHRvbiA9IGNvbnRhaW5lci5maW5kKFwiLnNwLWNob29zZVwiKSxcbiAgICAgICAgICAgIGlzSW5wdXQgPSBib3VuZEVsZW1lbnQuaXMoXCJpbnB1dFwiKSxcbiAgICAgICAgICAgIGlzSW5wdXRUeXBlQ29sb3IgPSBpc0lucHV0ICYmIGlucHV0VHlwZUNvbG9yU3VwcG9ydCAmJiBib3VuZEVsZW1lbnQuYXR0cihcInR5cGVcIikgPT09IFwiY29sb3JcIixcbiAgICAgICAgICAgIHNob3VsZFJlcGxhY2UgPSBpc0lucHV0ICYmICFmbGF0LFxuICAgICAgICAgICAgcmVwbGFjZXIgPSAoc2hvdWxkUmVwbGFjZSkgPyAkKHJlcGxhY2VJbnB1dCkuYWRkQ2xhc3ModGhlbWUpLmFkZENsYXNzKG9wdHMuY2xhc3NOYW1lKS5hZGRDbGFzcyhvcHRzLnJlcGxhY2VyQ2xhc3NOYW1lKSA6ICQoW10pLFxuICAgICAgICAgICAgb2Zmc2V0RWxlbWVudCA9IChzaG91bGRSZXBsYWNlKSA/IHJlcGxhY2VyIDogYm91bmRFbGVtZW50LFxuICAgICAgICAgICAgcHJldmlld0VsZW1lbnQgPSBvcHRzLnR5cGUgPT09IFwidGV4dFwiID8gcmVwbGFjZXIuZmluZChcIi5zcC1wcmV2aWV3XCIpIDogcmVwbGFjZXIuZmluZChcIi5zcC1wcmV2aWV3LWlubmVyXCIpLCAgLy9Eb25uYVxuICAgICAgICAgICAgaW5pdGlhbENvbG9yID0gb3B0cy5jb2xvciB8fCAoaXNJbnB1dCAmJiBib3VuZEVsZW1lbnQudmFsKCkpLFxuICAgICAgICAgICAgY29sb3JPblNob3cgPSBmYWxzZSxcbiAgICAgICAgICAgIHByZWZlcnJlZEZvcm1hdCA9IG9wdHMucHJlZmVycmVkRm9ybWF0LFxuICAgICAgICAgICAgY3VycmVudFByZWZlcnJlZEZvcm1hdCA9IHByZWZlcnJlZEZvcm1hdCxcbiAgICAgICAgICAgIGNsaWNrb3V0RmlyZXNDaGFuZ2UgPSAhb3B0cy5zaG93QnV0dG9ucyB8fCBvcHRzLmNsaWNrb3V0RmlyZXNDaGFuZ2UsXG4gICAgICAgICAgICBpc0VtcHR5ID0gIWluaXRpYWxDb2xvcixcbiAgICAgICAgICAgIGFsbG93RW1wdHkgPSBvcHRzLmFsbG93RW1wdHkgJiYgIWlzSW5wdXRUeXBlQ29sb3I7XG5cbiAgICAgICAgZnVuY3Rpb24gYXBwbHlPcHRpb25zKCkge1xuXG4gICAgICAgICAgICBpZiAob3B0cy5zaG93UGFsZXR0ZU9ubHkpIHtcbiAgICAgICAgICAgICAgICBvcHRzLnNob3dQYWxldHRlID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKG9wdHMucGFsZXR0ZSkge1xuICAgICAgICAgICAgICAgIHBhbGV0dGUgPSBvcHRzLnBhbGV0dGUuc2xpY2UoMCk7XG4gICAgICAgICAgICAgICAgcGFsZXR0ZUFycmF5ID0gJC5pc0FycmF5KHBhbGV0dGVbMF0pID8gcGFsZXR0ZSA6IFtwYWxldHRlXTtcbiAgICAgICAgICAgICAgICBwYWxldHRlTG9va3VwID0ge307XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYWxldHRlQXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBwYWxldHRlQXJyYXlbaV0ubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZ2IgPSB0aW55Y29sb3IocGFsZXR0ZUFycmF5W2ldW2pdKS50b1JnYlN0cmluZygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFsZXR0ZUxvb2t1cFtyZ2JdID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29udGFpbmVyLnRvZ2dsZUNsYXNzKFwic3AtZmxhdFwiLCBmbGF0KTtcbiAgICAgICAgICAgIGNvbnRhaW5lci50b2dnbGVDbGFzcyhcInNwLWlucHV0LWRpc2FibGVkXCIsICFvcHRzLnNob3dJbnB1dCk7XG4gICAgICAgICAgICBjb250YWluZXIudG9nZ2xlQ2xhc3MoXCJzcC1hbHBoYS1lbmFibGVkXCIsIG9wdHMuc2hvd0FscGhhKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci50b2dnbGVDbGFzcyhcInNwLWNsZWFyLWVuYWJsZWRcIiwgYWxsb3dFbXB0eSk7XG4gICAgICAgICAgICBjb250YWluZXIudG9nZ2xlQ2xhc3MoXCJzcC1idXR0b25zLWRpc2FibGVkXCIsICFvcHRzLnNob3dCdXR0b25zKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci50b2dnbGVDbGFzcyhcInNwLXBhbGV0dGUtZGlzYWJsZWRcIiwgIW9wdHMuc2hvd1BhbGV0dGUpO1xuICAgICAgICAgICAgY29udGFpbmVyLnRvZ2dsZUNsYXNzKFwic3AtcGFsZXR0ZS1vbmx5XCIsIG9wdHMuc2hvd1BhbGV0dGVPbmx5KTtcbiAgICAgICAgICAgIGNvbnRhaW5lci50b2dnbGVDbGFzcyhcInNwLWluaXRpYWwtZGlzYWJsZWRcIiwgIW9wdHMuc2hvd0luaXRpYWwpO1xuICAgICAgICAgICAgY29udGFpbmVyLmFkZENsYXNzKG9wdHMuY2xhc3NOYW1lKS5hZGRDbGFzcyhvcHRzLmNvbnRhaW5lckNsYXNzTmFtZSk7XG5cbiAgICAgICAgICAgIHJlZmxvdygpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHtcblxuICAgICAgICAgICAgaWYgKElFKSB7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyLmZpbmQoXCIqOm5vdChpbnB1dClcIikuYXR0cihcInVuc2VsZWN0YWJsZVwiLCBcIm9uXCIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBhcHBseU9wdGlvbnMoKTtcblxuICAgICAgICAgICAgaWYgKHNob3VsZFJlcGxhY2UpIHtcbiAgICAgICAgICAgICAgICBib3VuZEVsZW1lbnQuYWZ0ZXIocmVwbGFjZXIpLmhpZGUoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKCFhbGxvd0VtcHR5KSB7XG4gICAgICAgICAgICAgICAgY2xlYXJCdXR0b24uaGlkZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoZmxhdCkge1xuICAgICAgICAgICAgICAgIGJvdW5kRWxlbWVudC5hZnRlcihjb250YWluZXIpLmhpZGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgdmFyIGFwcGVuZFRvID0gb3B0cy5hcHBlbmRUbyA9PT0gXCJwYXJlbnRcIiA/IGJvdW5kRWxlbWVudC5wYXJlbnQoKSA6ICQob3B0cy5hcHBlbmRUbyk7XG4gICAgICAgICAgICAgICAgaWYgKGFwcGVuZFRvLmxlbmd0aCAhPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBhcHBlbmRUbyA9ICQoXCJib2R5XCIpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGFwcGVuZFRvLmFwcGVuZChjb250YWluZXIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB1cGRhdGVTZWxlY3Rpb25QYWxldHRlRnJvbVN0b3JhZ2UoKTtcblxuICAgICAgICAgICAgb2Zmc2V0RWxlbWVudC5iaW5kKFwiY2xpY2suc3BlY3RydW0gdG91Y2hzdGFydC5zcGVjdHJ1bVwiLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGlmICghZGlzYWJsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdG9nZ2xlKCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgICAgICAgICAgICAgIGlmICghJChlLnRhcmdldCkuaXMoXCJpbnB1dFwiKSkge1xuICAgICAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmKGJvdW5kRWxlbWVudC5pcyhcIjpkaXNhYmxlZFwiKSB8fCAob3B0cy5kaXNhYmxlZCA9PT0gdHJ1ZSkpIHtcbiAgICAgICAgICAgICAgICBkaXNhYmxlKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIFByZXZlbnQgY2xpY2tzIGZyb20gYnViYmxpbmcgdXAgdG8gZG9jdW1lbnQuICBUaGlzIHdvdWxkIGNhdXNlIGl0IHRvIGJlIGhpZGRlbi5cbiAgICAgICAgICAgIGNvbnRhaW5lci5jbGljayhzdG9wUHJvcGFnYXRpb24pO1xuXG4gICAgICAgICAgICAvLyBIYW5kbGUgdXNlciB0eXBlZCBpbnB1dFxuICAgICAgICAgICAgdGV4dElucHV0LmNoYW5nZShzZXRGcm9tVGV4dElucHV0KTtcbiAgICAgICAgICAgIHRleHRJbnB1dC5iaW5kKFwicGFzdGVcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoc2V0RnJvbVRleHRJbnB1dCwgMSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRleHRJbnB1dC5rZXlkb3duKGZ1bmN0aW9uIChlKSB7IGlmIChlLmtleUNvZGUgPT0gMTMpIHsgc2V0RnJvbVRleHRJbnB1dCgpOyB9IH0pO1xuXG4gICAgICAgICAgICBjYW5jZWxCdXR0b25bMF0uaW5uZXJIVE1MPW9wdHMuY2FuY2VsVGV4dCsnICcrY2FuY2VsQnV0dG9uWzBdLmlubmVySFRNTDtcbiAgICAgICAgICAgIGNhbmNlbEJ1dHRvbi5iaW5kKFwiY2xpY2suc3BlY3RydW1cIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBoaWRlKFwiY2FuY2VsXCIpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGNsZWFyQnV0dG9uLmF0dHIoXCJ0aXRsZVwiLCBvcHRzLmNsZWFyVGV4dCk7XG4gICAgICAgICAgICBjbGVhckJ1dHRvbi5iaW5kKFwiY2xpY2suc3BlY3RydW1cIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBpc0VtcHR5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBtb3ZlKCk7XG5cbiAgICAgICAgICAgICAgICBpZihmbGF0KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vZm9yIHRoZSBmbGF0IHN0eWxlLCB0aGlzIGlzIGEgY2hhbmdlIGV2ZW50XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZU9yaWdpbmFsSW5wdXQodHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIC8vY2hvb3NlQnV0dG9uLnRleHQob3B0cy5jaG9vc2VUZXh0KTtcblxuICAgICAgICAgICAgY2hvb3NlQnV0dG9uWzBdLmlubmVySFRNTD1vcHRzLmNob29zZVRleHQrJyAnK2Nob29zZUJ1dHRvblswXS5pbm5lckhUTUw7XG4gICAgICAgICAgICBjaG9vc2VCdXR0b24uYmluZChcImNsaWNrLnNwZWN0cnVtXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoaXNWYWxpZCgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZU9yaWdpbmFsSW5wdXQodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGhpZGUoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZHJhZ2dhYmxlKGFscGhhU2xpZGVyLCBmdW5jdGlvbiAoZHJhZ1gsIGRyYWdZLCBlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudEFscGhhID0gKGRyYWdYIC8gYWxwaGFXaWR0aCk7XG4gICAgICAgICAgICAgICAgaXNFbXB0eSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmIChlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRBbHBoYSA9IE1hdGgucm91bmQoY3VycmVudEFscGhhICogMTApIC8gMTA7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgbW92ZSgpO1xuICAgICAgICAgICAgfSwgZHJhZ1N0YXJ0LCBkcmFnU3RvcCk7XG5cbiAgICAgICAgICAgIGRyYWdnYWJsZShzbGlkZXIsIGZ1bmN0aW9uIChkcmFnWCwgZHJhZ1kpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50SHVlID0gcGFyc2VGbG9hdChkcmFnWSAvIHNsaWRlSGVpZ2h0KTtcbiAgICAgICAgICAgICAgICBpc0VtcHR5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgaWYgKCFvcHRzLnNob3dBbHBoYSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50QWxwaGEgPSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBtb3ZlKCk7XG4gICAgICAgICAgICB9LCBkcmFnU3RhcnQsIGRyYWdTdG9wKTtcblxuICAgICAgICAgICAgZHJhZ2dhYmxlKGRyYWdnZXIsIGZ1bmN0aW9uIChkcmFnWCwgZHJhZ1ksIGUpIHtcblxuICAgICAgICAgICAgICAgIC8vIHNoaWZ0K2RyYWcgc2hvdWxkIHNuYXAgdGhlIG1vdmVtZW50IHRvIGVpdGhlciB0aGUgeCBvciB5IGF4aXMuXG4gICAgICAgICAgICAgICAgaWYgKCFlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgICAgICAgICAgIHNoaWZ0TW92ZW1lbnREaXJlY3Rpb24gPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmICghc2hpZnRNb3ZlbWVudERpcmVjdGlvbikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgb2xkRHJhZ1ggPSBjdXJyZW50U2F0dXJhdGlvbiAqIGRyYWdXaWR0aDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG9sZERyYWdZID0gZHJhZ0hlaWdodCAtIChjdXJyZW50VmFsdWUgKiBkcmFnSGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZ1cnRoZXJGcm9tWCA9IE1hdGguYWJzKGRyYWdYIC0gb2xkRHJhZ1gpID4gTWF0aC5hYnMoZHJhZ1kgLSBvbGREcmFnWSk7XG5cbiAgICAgICAgICAgICAgICAgICAgc2hpZnRNb3ZlbWVudERpcmVjdGlvbiA9IGZ1cnRoZXJGcm9tWCA/IFwieFwiIDogXCJ5XCI7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdmFyIHNldFNhdHVyYXRpb24gPSAhc2hpZnRNb3ZlbWVudERpcmVjdGlvbiB8fCBzaGlmdE1vdmVtZW50RGlyZWN0aW9uID09PSBcInhcIjtcbiAgICAgICAgICAgICAgICB2YXIgc2V0VmFsdWUgPSAhc2hpZnRNb3ZlbWVudERpcmVjdGlvbiB8fCBzaGlmdE1vdmVtZW50RGlyZWN0aW9uID09PSBcInlcIjtcblxuICAgICAgICAgICAgICAgIGlmIChzZXRTYXR1cmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTYXR1cmF0aW9uID0gcGFyc2VGbG9hdChkcmFnWCAvIGRyYWdXaWR0aCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChzZXRWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50VmFsdWUgPSBwYXJzZUZsb2F0KChkcmFnSGVpZ2h0IC0gZHJhZ1kpIC8gZHJhZ0hlaWdodCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaXNFbXB0eSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmICghb3B0cy5zaG93QWxwaGEpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudEFscGhhID0gMTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBtb3ZlKCk7XG5cbiAgICAgICAgICAgIH0sIGRyYWdTdGFydCwgZHJhZ1N0b3ApO1xuXG4gICAgICAgICAgICBpZiAoISFpbml0aWFsQ29sb3IpIHtcbiAgICAgICAgICAgICAgICBzZXQoaW5pdGlhbENvbG9yKTtcblxuICAgICAgICAgICAgICAgIC8vIEluIGNhc2UgY29sb3Igd2FzIGJsYWNrIC0gdXBkYXRlIHRoZSBwcmV2aWV3IFVJIGFuZCBzZXQgdGhlIGZvcm1hdFxuICAgICAgICAgICAgICAgIC8vIHNpbmNlIHRoZSBzZXQgZnVuY3Rpb24gd2lsbCBub3QgcnVuIChkZWZhdWx0IGNvbG9yIGlzIGJsYWNrKS5cbiAgICAgICAgICAgICAgICB1cGRhdGVVSSgpO1xuICAgICAgICAgICAgICAgIGN1cnJlbnRQcmVmZXJyZWRGb3JtYXQgPSBwcmVmZXJyZWRGb3JtYXQgfHwgdGlueWNvbG9yKGluaXRpYWxDb2xvcikuZm9ybWF0O1xuXG4gICAgICAgICAgICAgICAgYWRkQ29sb3JUb1NlbGVjdGlvblBhbGV0dGUoaW5pdGlhbENvbG9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHVwZGF0ZVVJKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChmbGF0KSB7XG4gICAgICAgICAgICAgICAgc2hvdygpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmdW5jdGlvbiBwYWxldHRlRWxlbWVudENsaWNrKGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoZS5kYXRhICYmIGUuZGF0YS5pZ25vcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0KCQoZS50YXJnZXQpLmNsb3Nlc3QoXCIuc3AtdGh1bWItZWxcIikuZGF0YShcImNvbG9yXCIpKTtcbiAgICAgICAgICAgICAgICAgICAgbW92ZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0KCQoZS50YXJnZXQpLmNsb3Nlc3QoXCIuc3AtdGh1bWItZWxcIikuZGF0YShcImNvbG9yXCIpKTtcbiAgICAgICAgICAgICAgICAgICAgbW92ZSgpO1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVPcmlnaW5hbElucHV0KHRydWUpO1xuICAgICAgICAgICAgICAgICAgICBoaWRlKCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgcGFsZXR0ZUV2ZW50ID0gSUUgPyBcIm1vdXNlZG93bi5zcGVjdHJ1bVwiIDogXCJjbGljay5zcGVjdHJ1bSB0b3VjaHN0YXJ0LnNwZWN0cnVtXCI7XG4gICAgICAgICAgICBwYWxldHRlQ29udGFpbmVyLmRlbGVnYXRlKFwiLnNwLXRodW1iLWVsXCIsIHBhbGV0dGVFdmVudCwgcGFsZXR0ZUVsZW1lbnRDbGljayk7XG4gICAgICAgICAgICBpbml0aWFsQ29sb3JDb250YWluZXIuZGVsZWdhdGUoXCIuc3AtdGh1bWItZWw6bnRoLWNoaWxkKDEpXCIsIHBhbGV0dGVFdmVudCwgeyBpZ25vcmU6IHRydWUgfSwgcGFsZXR0ZUVsZW1lbnRDbGljayk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiB1cGRhdGVTZWxlY3Rpb25QYWxldHRlRnJvbVN0b3JhZ2UoKSB7XG5cbiAgICAgICAgICAgIGlmIChsb2NhbFN0b3JhZ2VLZXkgJiYgd2luZG93LmxvY2FsU3RvcmFnZSkge1xuXG4gICAgICAgICAgICAgICAgLy8gTWlncmF0ZSBvbGQgcGFsZXR0ZXMgb3ZlciB0byBuZXcgZm9ybWF0LiAgTWF5IHdhbnQgdG8gcmVtb3ZlIHRoaXMgZXZlbnR1YWxseS5cbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgb2xkUGFsZXR0ZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2VbbG9jYWxTdG9yYWdlS2V5XS5zcGxpdChcIiwjXCIpO1xuICAgICAgICAgICAgICAgICAgICBpZiAob2xkUGFsZXR0ZS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgd2luZG93LmxvY2FsU3RvcmFnZVtsb2NhbFN0b3JhZ2VLZXldO1xuICAgICAgICAgICAgICAgICAgICAgICAgJC5lYWNoKG9sZFBhbGV0dGUsIGZ1bmN0aW9uKGksIGMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkQ29sb3JUb1NlbGVjdGlvblBhbGV0dGUoYyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaChlKSB7IH1cblxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvblBhbGV0dGUgPSB3aW5kb3cubG9jYWxTdG9yYWdlW2xvY2FsU3RvcmFnZUtleV0uc3BsaXQoXCI7XCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkgeyB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBhZGRDb2xvclRvU2VsZWN0aW9uUGFsZXR0ZShjb2xvcikge1xuICAgICAgICAgICAgaWYgKHNob3dTZWxlY3Rpb25QYWxldHRlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJnYiA9IHRpbnljb2xvcihjb2xvcikudG9SZ2JTdHJpbmcoKTtcbiAgICAgICAgICAgICAgICBpZiAoIXBhbGV0dGVMb29rdXBbcmdiXSAmJiAkLmluQXJyYXkocmdiLCBzZWxlY3Rpb25QYWxldHRlKSA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uUGFsZXR0ZS5wdXNoKHJnYik7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlKHNlbGVjdGlvblBhbGV0dGUubGVuZ3RoID4gbWF4U2VsZWN0aW9uU2l6ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uUGFsZXR0ZS5zaGlmdCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGxvY2FsU3RvcmFnZUtleSAmJiB3aW5kb3cubG9jYWxTdG9yYWdlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlW2xvY2FsU3RvcmFnZUtleV0gPSBzZWxlY3Rpb25QYWxldHRlLmpvaW4oXCI7XCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoKGUpIHsgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGdldFVuaXF1ZVNlbGVjdGlvblBhbGV0dGUoKSB7XG4gICAgICAgICAgICB2YXIgdW5pcXVlID0gW107XG4gICAgICAgICAgICBpZiAob3B0cy5zaG93UGFsZXR0ZSkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2VsZWN0aW9uUGFsZXR0ZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmdiID0gdGlueWNvbG9yKHNlbGVjdGlvblBhbGV0dGVbaV0pLnRvUmdiU3RyaW5nKCk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFwYWxldHRlTG9va3VwW3JnYl0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVuaXF1ZS5wdXNoKHNlbGVjdGlvblBhbGV0dGVbaV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gdW5pcXVlLnJldmVyc2UoKS5zbGljZSgwLCBvcHRzLm1heFNlbGVjdGlvblNpemUpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZHJhd1BhbGV0dGUoKSB7XG5cbiAgICAgICAgICAgIHZhciBjdXJyZW50Q29sb3IgPSBnZXQoKTtcblxuICAgICAgICAgICAgdmFyIGh0bWwgPSAkLm1hcChwYWxldHRlQXJyYXksIGZ1bmN0aW9uIChwYWxldHRlLCBpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhbGV0dGVUZW1wbGF0ZShwYWxldHRlLCBjdXJyZW50Q29sb3IsIFwic3AtcGFsZXR0ZS1yb3cgc3AtcGFsZXR0ZS1yb3ctXCIgKyBpLCBvcHRzKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB1cGRhdGVTZWxlY3Rpb25QYWxldHRlRnJvbVN0b3JhZ2UoKTtcblxuICAgICAgICAgICAgaWYgKHNlbGVjdGlvblBhbGV0dGUpIHtcbiAgICAgICAgICAgICAgICBodG1sLnB1c2gocGFsZXR0ZVRlbXBsYXRlKGdldFVuaXF1ZVNlbGVjdGlvblBhbGV0dGUoKSwgY3VycmVudENvbG9yLCBcInNwLXBhbGV0dGUtcm93IHNwLXBhbGV0dGUtcm93LXNlbGVjdGlvblwiLCBvcHRzKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHBhbGV0dGVDb250YWluZXIuaHRtbChodG1sLmpvaW4oXCJcIikpO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZHJhd0luaXRpYWwoKSB7XG4gICAgICAgICAgICBpZiAob3B0cy5zaG93SW5pdGlhbCkge1xuICAgICAgICAgICAgICAgIHZhciBpbml0aWFsID0gY29sb3JPblNob3c7XG4gICAgICAgICAgICAgICAgdmFyIGN1cnJlbnQgPSBnZXQoKTtcbiAgICAgICAgICAgICAgICBpbml0aWFsQ29sb3JDb250YWluZXIuaHRtbChwYWxldHRlVGVtcGxhdGUoW2luaXRpYWwsIGN1cnJlbnRdLCBjdXJyZW50LCBcInNwLXBhbGV0dGUtcm93LWluaXRpYWxcIiwgb3B0cykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZHJhZ1N0YXJ0KCkge1xuICAgICAgICAgICAgaWYgKGRyYWdIZWlnaHQgPD0gMCB8fCBkcmFnV2lkdGggPD0gMCB8fCBzbGlkZUhlaWdodCA8PSAwKSB7XG4gICAgICAgICAgICAgICAgcmVmbG93KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250YWluZXIuYWRkQ2xhc3MoZHJhZ2dpbmdDbGFzcyk7XG4gICAgICAgICAgICBzaGlmdE1vdmVtZW50RGlyZWN0aW9uID0gbnVsbDtcbiAgICAgICAgICAgIGJvdW5kRWxlbWVudC50cmlnZ2VyKCdkcmFnc3RhcnQuc3BlY3RydW0nLCBbIGdldCgpIF0pO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gZHJhZ1N0b3AoKSB7XG4gICAgICAgICAgICBjb250YWluZXIucmVtb3ZlQ2xhc3MoZHJhZ2dpbmdDbGFzcyk7XG4gICAgICAgICAgICBib3VuZEVsZW1lbnQudHJpZ2dlcignZHJhZ3N0b3Auc3BlY3RydW0nLCBbIGdldCgpIF0pO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gc2V0RnJvbVRleHRJbnB1dCgpIHtcblxuICAgICAgICAgICAgdmFyIHZhbHVlID0gdGV4dElucHV0LnZhbCgpO1xuXG4gICAgICAgICAgICBpZiAoKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSBcIlwiKSAmJiBhbGxvd0VtcHR5KSB7XG4gICAgICAgICAgICAgICAgc2V0KG51bGwpO1xuICAgICAgICAgICAgICAgIHVwZGF0ZU9yaWdpbmFsSW5wdXQodHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgdGlueSA9IHRpbnljb2xvcih2YWx1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKHRpbnkuaXNWYWxpZCgpKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldCh0aW55KTtcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlT3JpZ2luYWxJbnB1dCh0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRleHRJbnB1dC5hZGRDbGFzcyhcInNwLXZhbGlkYXRpb24tZXJyb3JcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gdG9nZ2xlKCkge1xuICAgICAgICAgICAgaWYgKHZpc2libGUpIHtcbiAgICAgICAgICAgICAgICBoaWRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzaG93KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzaG93KCkge1xuICAgICAgICAgICAgdmFyIGV2ZW50ID0gJC5FdmVudCgnYmVmb3JlU2hvdy5zcGVjdHJ1bScpO1xuXG4gICAgICAgICAgICBpZiAodmlzaWJsZSkge1xuICAgICAgICAgICAgICAgIHJlZmxvdygpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYm91bmRFbGVtZW50LnRyaWdnZXIoZXZlbnQsIFsgZ2V0KCkgXSk7XG5cbiAgICAgICAgICAgIGlmIChjYWxsYmFja3MuYmVmb3JlU2hvdyhnZXQoKSkgPT09IGZhbHNlIHx8IGV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBoaWRlQWxsKCk7XG4gICAgICAgICAgICB2aXNpYmxlID0gdHJ1ZTtcblxuICAgICAgICAgICAgJChkb2MpLmJpbmQoXCJjbGljay5zcGVjdHJ1bVwiLCBoaWRlKTtcbiAgICAgICAgICAgICQod2luZG93KS5iaW5kKFwicmVzaXplLnNwZWN0cnVtXCIsIHJlc2l6ZSk7XG4gICAgICAgICAgICByZXBsYWNlci5hZGRDbGFzcyhcInNwLWFjdGl2ZVwiKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci5yZW1vdmVDbGFzcyhcInNwLWhpZGRlblwiKTtcblxuICAgICAgICAgICAgcmVmbG93KCk7XG4gICAgICAgICAgICB1cGRhdGVVSSgpO1xuXG4gICAgICAgICAgICBjb2xvck9uU2hvdyA9IGdldCgpO1xuXG4gICAgICAgICAgICBkcmF3SW5pdGlhbCgpO1xuICAgICAgICAgICAgY2FsbGJhY2tzLnNob3coY29sb3JPblNob3cpO1xuICAgICAgICAgICAgYm91bmRFbGVtZW50LnRyaWdnZXIoJ3Nob3cuc3BlY3RydW0nLCBbIGNvbG9yT25TaG93IF0pO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gaGlkZShlKSB7XG5cbiAgICAgICAgICAgIC8vIFJldHVybiBvbiByaWdodCBjbGlja1xuICAgICAgICAgICAgaWYgKGUgJiYgZS50eXBlID09IFwiY2xpY2tcIiAmJiBlLmJ1dHRvbiA9PSAyKSB7IHJldHVybjsgfVxuXG4gICAgICAgICAgICAvLyBSZXR1cm4gaWYgaGlkaW5nIGlzIHVubmVjZXNzYXJ5XG4gICAgICAgICAgICBpZiAoIXZpc2libGUgfHwgZmxhdCkgeyByZXR1cm47IH1cbiAgICAgICAgICAgIHZpc2libGUgPSBmYWxzZTtcblxuICAgICAgICAgICAgJChkb2MpLnVuYmluZChcImNsaWNrLnNwZWN0cnVtXCIsIGhpZGUpO1xuICAgICAgICAgICAgJCh3aW5kb3cpLnVuYmluZChcInJlc2l6ZS5zcGVjdHJ1bVwiLCByZXNpemUpO1xuXG4gICAgICAgICAgICByZXBsYWNlci5yZW1vdmVDbGFzcyhcInNwLWFjdGl2ZVwiKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci5hZGRDbGFzcyhcInNwLWhpZGRlblwiKTtcblxuICAgICAgICAgICAgdmFyIGNvbG9ySGFzQ2hhbmdlZCA9ICF0aW55Y29sb3IuZXF1YWxzKGdldCgpLCBjb2xvck9uU2hvdyk7XG5cbiAgICAgICAgICAgIGlmIChjb2xvckhhc0NoYW5nZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAoY2xpY2tvdXRGaXJlc0NoYW5nZSAmJiBlICE9PSBcImNhbmNlbFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZU9yaWdpbmFsSW5wdXQodHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXZlcnQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNhbGxiYWNrcy5oaWRlKGdldCgpKTtcbiAgICAgICAgICAgIGJvdW5kRWxlbWVudC50cmlnZ2VyKCdoaWRlLnNwZWN0cnVtJywgWyBnZXQoKSBdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHJldmVydCgpIHtcbiAgICAgICAgICAgIHNldChjb2xvck9uU2hvdywgdHJ1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzZXQoY29sb3IsIGlnbm9yZUZvcm1hdENoYW5nZSkge1xuICAgICAgICAgICAgaWYgKHRpbnljb2xvci5lcXVhbHMoY29sb3IsIGdldCgpKSkge1xuICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSBVSSBqdXN0IGluIGNhc2UgYSB2YWxpZGF0aW9uIGVycm9yIG5lZWRzXG4gICAgICAgICAgICAgICAgLy8gdG8gYmUgY2xlYXJlZC5cbiAgICAgICAgICAgICAgICB1cGRhdGVVSSgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIG5ld0NvbG9yLCBuZXdIc3Y7XG4gICAgICAgICAgICBpZiAoIWNvbG9yICYmIGFsbG93RW1wdHkpIHtcbiAgICAgICAgICAgICAgICBpc0VtcHR5ID0gdHJ1ZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaXNFbXB0eSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIG5ld0NvbG9yID0gdGlueWNvbG9yKGNvbG9yKTtcbiAgICAgICAgICAgICAgICBuZXdIc3YgPSBuZXdDb2xvci50b0hzdigpO1xuXG4gICAgICAgICAgICAgICAgY3VycmVudEh1ZSA9IChuZXdIc3YuaCAlIDM2MCkgLyAzNjA7XG4gICAgICAgICAgICAgICAgY3VycmVudFNhdHVyYXRpb24gPSBuZXdIc3YucztcbiAgICAgICAgICAgICAgICBjdXJyZW50VmFsdWUgPSBuZXdIc3YudjtcbiAgICAgICAgICAgICAgICBjdXJyZW50QWxwaGEgPSBuZXdIc3YuYTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHVwZGF0ZVVJKCk7XG5cbiAgICAgICAgICAgIGlmIChuZXdDb2xvciAmJiBuZXdDb2xvci5pc1ZhbGlkKCkgJiYgIWlnbm9yZUZvcm1hdENoYW5nZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRQcmVmZXJyZWRGb3JtYXQgPSBwcmVmZXJyZWRGb3JtYXQgfHwgbmV3Q29sb3IuZ2V0Rm9ybWF0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBnZXQob3B0cykge1xuICAgICAgICAgICAgb3B0cyA9IG9wdHMgfHwgeyB9O1xuXG4gICAgICAgICAgICBpZiAoYWxsb3dFbXB0eSAmJiBpc0VtcHR5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0aW55Y29sb3IuZnJvbVJhdGlvKHtcbiAgICAgICAgICAgICAgICBoOiBjdXJyZW50SHVlLFxuICAgICAgICAgICAgICAgIHM6IGN1cnJlbnRTYXR1cmF0aW9uLFxuICAgICAgICAgICAgICAgIHY6IGN1cnJlbnRWYWx1ZSxcbiAgICAgICAgICAgICAgICBhOiBNYXRoLnJvdW5kKGN1cnJlbnRBbHBoYSAqIDEwMCkgLyAxMDBcbiAgICAgICAgICAgIH0sIHsgZm9ybWF0OiBvcHRzLmZvcm1hdCB8fCBjdXJyZW50UHJlZmVycmVkRm9ybWF0IH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gaXNWYWxpZCgpIHtcbiAgICAgICAgICAgIHJldHVybiAhdGV4dElucHV0Lmhhc0NsYXNzKFwic3AtdmFsaWRhdGlvbi1lcnJvclwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIG1vdmUoKSB7XG4gICAgICAgICAgICB1cGRhdGVVSSgpO1xuXG4gICAgICAgICAgICBjYWxsYmFja3MubW92ZShnZXQoKSk7XG4gICAgICAgICAgICBib3VuZEVsZW1lbnQudHJpZ2dlcignbW92ZS5zcGVjdHJ1bScsIFsgZ2V0KCkgXSk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiB1cGRhdGVVSSgpIHtcblxuICAgICAgICAgICAgdGV4dElucHV0LnJlbW92ZUNsYXNzKFwic3AtdmFsaWRhdGlvbi1lcnJvclwiKTtcblxuICAgICAgICAgICAgdXBkYXRlSGVscGVyTG9jYXRpb25zKCk7XG5cbiAgICAgICAgICAgIC8vIFVwZGF0ZSBkcmFnZ2VyIGJhY2tncm91bmQgY29sb3IgKGdyYWRpZW50cyB0YWtlIGNhcmUgb2Ygc2F0dXJhdGlvbiBhbmQgdmFsdWUpLlxuICAgICAgICAgICAgdmFyIGZsYXRDb2xvciA9IHRpbnljb2xvci5mcm9tUmF0aW8oeyBoOiBjdXJyZW50SHVlLCBzOiAxLCB2OiAxIH0pO1xuICAgICAgICAgICAgZHJhZ2dlci5jc3MoXCJiYWNrZ3JvdW5kLWNvbG9yXCIsIGZsYXRDb2xvci50b0hleFN0cmluZygpKTtcblxuICAgICAgICAgICAgLy8gR2V0IGEgZm9ybWF0IHRoYXQgYWxwaGEgd2lsbCBiZSBpbmNsdWRlZCBpbiAoaGV4IGFuZCBuYW1lcyBpZ25vcmUgYWxwaGEpXG4gICAgICAgICAgICB2YXIgZm9ybWF0ID0gY3VycmVudFByZWZlcnJlZEZvcm1hdDtcbiAgICAgICAgICAgIGlmIChjdXJyZW50QWxwaGEgPCAxICYmICEoY3VycmVudEFscGhhID09PSAwICYmIGZvcm1hdCA9PT0gXCJuYW1lXCIpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGZvcm1hdCA9PT0gXCJoZXhcIiB8fCBmb3JtYXQgPT09IFwiaGV4M1wiIHx8IGZvcm1hdCA9PT0gXCJoZXg2XCIgfHwgZm9ybWF0ID09PSBcIm5hbWVcIikge1xuICAgICAgICAgICAgICAgICAgICBmb3JtYXQgPSBcInJnYlwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHJlYWxDb2xvciA9IGdldCh7IGZvcm1hdDogZm9ybWF0IH0pLFxuICAgICAgICAgICAgICAgIGRpc3BsYXlDb2xvciA9ICcnO1xuXG4gICAgICAgICAgICAgLy9yZXNldCBiYWNrZ3JvdW5kIGluZm8gZm9yIHByZXZpZXcgZWxlbWVudFxuICAgICAgICAgICAgcHJldmlld0VsZW1lbnQucmVtb3ZlQ2xhc3MoXCJzcC1jbGVhci1kaXNwbGF5XCIpO1xuXG4gICAgICAgICAgICAvKiBEb25uYSBTdGFydCAqL1xuICAgICAgICAgICAgaWYgKG9wdHMudHlwZSA9PT0gXCJ0ZXh0XCIpIHtcbiAgICAgICAgICAgICAgcHJldmlld0VsZW1lbnQuY3NzKCdib3JkZXItY29sb3InLCAndHJhbnNwYXJlbnQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICBwcmV2aWV3RWxlbWVudC5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAndHJhbnNwYXJlbnQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8qIERvbm5hIEVuZCAqL1xuXG4gICAgICAgICAgICBpZiAoIXJlYWxDb2xvciAmJiBhbGxvd0VtcHR5KSB7XG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSByZXBsYWNlZCBlbGVtZW50cyBiYWNrZ3JvdW5kIHdpdGggaWNvbiBpbmRpY2F0aW5nIG5vIGNvbG9yIHNlbGVjdGlvblxuICAgICAgICAgICAgICAgIHByZXZpZXdFbGVtZW50LmFkZENsYXNzKFwic3AtY2xlYXItZGlzcGxheVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciByZWFsSGV4ID0gcmVhbENvbG9yLnRvSGV4U3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgIHJlYWxSZ2IgPSByZWFsQ29sb3IudG9SZ2JTdHJpbmcoKTtcblxuICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSB0aGUgcmVwbGFjZWQgZWxlbWVudHMgYmFja2dyb3VuZCBjb2xvciAod2l0aCBhY3R1YWwgc2VsZWN0ZWQgY29sb3IpXG4gICAgICAgICAgICAgICAgaWYgKHJnYmFTdXBwb3J0IHx8IHJlYWxDb2xvci5hbHBoYSA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgLyogRG9ubmEgU3RhcnQgKi9cbiAgICAgICAgICAgICAgICAgIGlmIChvcHRzLnR5cGUgPT09IFwidGV4dFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHByZXZpZXdFbGVtZW50LmNzcyhcImJvcmRlci1jb2xvclwiLCByZWFsUmdiKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBwcmV2aWV3RWxlbWVudC5jc3MoXCJiYWNrZ3JvdW5kLWNvbG9yXCIsIHJlYWxSZ2IpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgLyogRG9ubmEgRW5kICovXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgLyogRG9ubmEgU3RhcnQgKi9cbiAgICAgICAgICAgICAgICAgIGlmIChvcHRzLnR5cGUgPT09IFwidGV4dFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHByZXZpZXdFbGVtZW50LmNzcyhcImJvcmRlci1jb2xvclwiLCBcInRyYW5zcGFyZW50XCIpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHByZXZpZXdFbGVtZW50LmNzcyhcImJhY2tncm91bmQtY29sb3JcIiwgXCJ0cmFuc3BhcmVudFwiKTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIC8qIERvbm5hIEVuZCAqL1xuXG4gICAgICAgICAgICAgICAgICBwcmV2aWV3RWxlbWVudC5jc3MoXCJmaWx0ZXJcIiwgcmVhbENvbG9yLnRvRmlsdGVyKCkpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChvcHRzLnNob3dBbHBoYSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmdiID0gcmVhbENvbG9yLnRvUmdiKCk7XG4gICAgICAgICAgICAgICAgICAgIHJnYi5hID0gMDtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlYWxBbHBoYSA9IHRpbnljb2xvcihyZ2IpLnRvUmdiU3RyaW5nKCk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBncmFkaWVudCA9IFwibGluZWFyLWdyYWRpZW50KGxlZnQsIFwiICsgcmVhbEFscGhhICsgXCIsIFwiICsgcmVhbEhleCArIFwiKVwiO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChJRSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxwaGFTbGlkZXJJbm5lci5jc3MoXCJmaWx0ZXJcIiwgdGlueWNvbG9yKHJlYWxBbHBoYSkudG9GaWx0ZXIoeyBncmFkaWVudFR5cGU6IDEgfSwgcmVhbEhleCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxwaGFTbGlkZXJJbm5lci5jc3MoXCJiYWNrZ3JvdW5kXCIsIFwiLXdlYmtpdC1cIiArIGdyYWRpZW50KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFscGhhU2xpZGVySW5uZXIuY3NzKFwiYmFja2dyb3VuZFwiLCBcIi1tb3otXCIgKyBncmFkaWVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBhbHBoYVNsaWRlcklubmVyLmNzcyhcImJhY2tncm91bmRcIiwgXCItbXMtXCIgKyBncmFkaWVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBVc2UgY3VycmVudCBzeW50YXggZ3JhZGllbnQgb24gdW5wcmVmaXhlZCBwcm9wZXJ0eS5cbiAgICAgICAgICAgICAgICAgICAgICAgIGFscGhhU2xpZGVySW5uZXIuY3NzKFwiYmFja2dyb3VuZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCBcIiArIHJlYWxBbHBoYSArIFwiLCBcIiArIHJlYWxIZXggKyBcIilcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBkaXNwbGF5Q29sb3IgPSByZWFsQ29sb3IudG9TdHJpbmcoZm9ybWF0KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSB0ZXh0IGVudHJ5IGlucHV0IGFzIGl0IGNoYW5nZXMgaGFwcGVuXG4gICAgICAgICAgICBpZiAob3B0cy5zaG93SW5wdXQpIHtcbiAgICAgICAgICAgICAgICB0ZXh0SW5wdXQudmFsKGRpc3BsYXlDb2xvcik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChvcHRzLnNob3dQYWxldHRlKSB7XG4gICAgICAgICAgICAgICAgZHJhd1BhbGV0dGUoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZHJhd0luaXRpYWwoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHVwZGF0ZUhlbHBlckxvY2F0aW9ucygpIHtcbiAgICAgICAgICAgIHZhciBzID0gY3VycmVudFNhdHVyYXRpb247XG4gICAgICAgICAgICB2YXIgdiA9IGN1cnJlbnRWYWx1ZTtcblxuICAgICAgICAgICAgaWYoYWxsb3dFbXB0eSAmJiBpc0VtcHR5KSB7XG4gICAgICAgICAgICAgICAgLy9pZiBzZWxlY3RlZCBjb2xvciBpcyBlbXB0eSwgaGlkZSB0aGUgaGVscGVyc1xuICAgICAgICAgICAgICAgIGFscGhhU2xpZGVIZWxwZXIuaGlkZSgpO1xuICAgICAgICAgICAgICAgIHNsaWRlSGVscGVyLmhpZGUoKTtcbiAgICAgICAgICAgICAgICBkcmFnSGVscGVyLmhpZGUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vbWFrZSBzdXJlIGhlbHBlcnMgYXJlIHZpc2libGVcbiAgICAgICAgICAgICAgICBhbHBoYVNsaWRlSGVscGVyLnNob3coKTtcbiAgICAgICAgICAgICAgICBzbGlkZUhlbHBlci5zaG93KCk7XG4gICAgICAgICAgICAgICAgZHJhZ0hlbHBlci5zaG93KCk7XG5cbiAgICAgICAgICAgICAgICAvLyBXaGVyZSB0byBzaG93IHRoZSBsaXR0bGUgY2lyY2xlIGluIHRoYXQgZGlzcGxheXMgeW91ciBjdXJyZW50IHNlbGVjdGVkIGNvbG9yXG4gICAgICAgICAgICAgICAgdmFyIGRyYWdYID0gcyAqIGRyYWdXaWR0aDtcbiAgICAgICAgICAgICAgICB2YXIgZHJhZ1kgPSBkcmFnSGVpZ2h0IC0gKHYgKiBkcmFnSGVpZ2h0KTtcbiAgICAgICAgICAgICAgICBkcmFnWCA9IE1hdGgubWF4KFxuICAgICAgICAgICAgICAgICAgICAtZHJhZ0hlbHBlckhlaWdodCxcbiAgICAgICAgICAgICAgICAgICAgTWF0aC5taW4oZHJhZ1dpZHRoIC0gZHJhZ0hlbHBlckhlaWdodCwgZHJhZ1ggLSBkcmFnSGVscGVySGVpZ2h0KVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgZHJhZ1kgPSBNYXRoLm1heChcbiAgICAgICAgICAgICAgICAgICAgLWRyYWdIZWxwZXJIZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgIE1hdGgubWluKGRyYWdIZWlnaHQgLSBkcmFnSGVscGVySGVpZ2h0LCBkcmFnWSAtIGRyYWdIZWxwZXJIZWlnaHQpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICBkcmFnSGVscGVyLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgIFwidG9wXCI6IGRyYWdZICsgXCJweFwiLFxuICAgICAgICAgICAgICAgICAgICBcImxlZnRcIjogZHJhZ1ggKyBcInB4XCJcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHZhciBhbHBoYVggPSBjdXJyZW50QWxwaGEgKiBhbHBoYVdpZHRoO1xuICAgICAgICAgICAgICAgIGFscGhhU2xpZGVIZWxwZXIuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgXCJsZWZ0XCI6IChhbHBoYVggLSAoYWxwaGFTbGlkZUhlbHBlcldpZHRoIC8gMikpICsgXCJweFwiXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAvLyBXaGVyZSB0byBzaG93IHRoZSBiYXIgdGhhdCBkaXNwbGF5cyB5b3VyIGN1cnJlbnQgc2VsZWN0ZWQgaHVlXG4gICAgICAgICAgICAgICAgdmFyIHNsaWRlWSA9IChjdXJyZW50SHVlKSAqIHNsaWRlSGVpZ2h0O1xuICAgICAgICAgICAgICAgIHNsaWRlSGVscGVyLmNzcyh7XG4gICAgICAgICAgICAgICAgICAgIFwidG9wXCI6IChzbGlkZVkgLSBzbGlkZUhlbHBlckhlaWdodCkgKyBcInB4XCJcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHVwZGF0ZU9yaWdpbmFsSW5wdXQoZmlyZUNhbGxiYWNrKSB7XG4gICAgICAgICAgICB2YXIgY29sb3IgPSBnZXQoKSxcbiAgICAgICAgICAgICAgICBkaXNwbGF5Q29sb3IgPSAnJyxcbiAgICAgICAgICAgICAgICBoYXNDaGFuZ2VkID0gIXRpbnljb2xvci5lcXVhbHMoY29sb3IsIGNvbG9yT25TaG93KTtcblxuICAgICAgICAgICAgaWYgKGNvbG9yKSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheUNvbG9yID0gY29sb3IudG9TdHJpbmcoY3VycmVudFByZWZlcnJlZEZvcm1hdCk7XG4gICAgICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSBzZWxlY3Rpb24gcGFsZXR0ZSB3aXRoIHRoZSBjdXJyZW50IGNvbG9yXG4gICAgICAgICAgICAgICAgYWRkQ29sb3JUb1NlbGVjdGlvblBhbGV0dGUoY29sb3IpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoaXNJbnB1dCkge1xuICAgICAgICAgICAgICAgIGJvdW5kRWxlbWVudC52YWwoZGlzcGxheUNvbG9yKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29sb3JPblNob3cgPSBjb2xvcjtcblxuICAgICAgICAgICAgaWYgKGZpcmVDYWxsYmFjayAmJiBoYXNDaGFuZ2VkKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2tzLmNoYW5nZShjb2xvcik7XG4gICAgICAgICAgICAgICAgYm91bmRFbGVtZW50LnRyaWdnZXIoJ2NoYW5nZScsIFsgY29sb3IgXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiByZWZsb3coKSB7XG4gICAgICAgICAgICBkcmFnV2lkdGggPSBkcmFnZ2VyLndpZHRoKCk7XG4gICAgICAgICAgICBkcmFnSGVpZ2h0ID0gZHJhZ2dlci5oZWlnaHQoKTtcbiAgICAgICAgICAgIGRyYWdIZWxwZXJIZWlnaHQgPSBkcmFnSGVscGVyLmhlaWdodCgpO1xuICAgICAgICAgICAgc2xpZGVXaWR0aCA9IHNsaWRlci53aWR0aCgpO1xuICAgICAgICAgICAgc2xpZGVIZWlnaHQgPSBzbGlkZXIuaGVpZ2h0KCk7XG4gICAgICAgICAgICBzbGlkZUhlbHBlckhlaWdodCA9IHNsaWRlSGVscGVyLmhlaWdodCgpO1xuICAgICAgICAgICAgYWxwaGFXaWR0aCA9IGFscGhhU2xpZGVyLndpZHRoKCk7XG4gICAgICAgICAgICBhbHBoYVNsaWRlSGVscGVyV2lkdGggPSBhbHBoYVNsaWRlSGVscGVyLndpZHRoKCk7XG5cbiAgICAgICAgICAgIGlmICghZmxhdCkge1xuICAgICAgICAgICAgICAgIGNvbnRhaW5lci5jc3MoXCJwb3NpdGlvblwiLCBcImFic29sdXRlXCIpO1xuICAgICAgICAgICAgICAgIGNvbnRhaW5lci5vZmZzZXQoZ2V0T2Zmc2V0KGNvbnRhaW5lciwgb2Zmc2V0RWxlbWVudCkpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB1cGRhdGVIZWxwZXJMb2NhdGlvbnMoKTtcblxuICAgICAgICAgICAgaWYgKG9wdHMuc2hvd1BhbGV0dGUpIHtcbiAgICAgICAgICAgICAgICBkcmF3UGFsZXR0ZSgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBib3VuZEVsZW1lbnQudHJpZ2dlcigncmVmbG93LnNwZWN0cnVtJyk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgICAgICAgICAgYm91bmRFbGVtZW50LnNob3coKTtcbiAgICAgICAgICAgIG9mZnNldEVsZW1lbnQudW5iaW5kKFwiY2xpY2suc3BlY3RydW0gdG91Y2hzdGFydC5zcGVjdHJ1bVwiKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci5yZW1vdmUoKTtcbiAgICAgICAgICAgIHJlcGxhY2VyLnJlbW92ZSgpO1xuICAgICAgICAgICAgc3BlY3RydW1zW3NwZWN0LmlkXSA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvcHRpb24ob3B0aW9uTmFtZSwgb3B0aW9uVmFsdWUpIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25OYW1lID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gJC5leHRlbmQoe30sIG9wdHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG9wdGlvblZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gb3B0c1tvcHRpb25OYW1lXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgb3B0c1tvcHRpb25OYW1lXSA9IG9wdGlvblZhbHVlO1xuICAgICAgICAgICAgYXBwbHlPcHRpb25zKCk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBlbmFibGUoKSB7XG4gICAgICAgICAgICBkaXNhYmxlZCA9IGZhbHNlO1xuICAgICAgICAgICAgYm91bmRFbGVtZW50LmF0dHIoXCJkaXNhYmxlZFwiLCBmYWxzZSk7XG4gICAgICAgICAgICBvZmZzZXRFbGVtZW50LnJlbW92ZUNsYXNzKFwic3AtZGlzYWJsZWRcIik7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBkaXNhYmxlKCkge1xuICAgICAgICAgICAgaGlkZSgpO1xuICAgICAgICAgICAgZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgYm91bmRFbGVtZW50LmF0dHIoXCJkaXNhYmxlZFwiLCB0cnVlKTtcbiAgICAgICAgICAgIG9mZnNldEVsZW1lbnQuYWRkQ2xhc3MoXCJzcC1kaXNhYmxlZFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGluaXRpYWxpemUoKTtcblxuICAgICAgICB2YXIgc3BlY3QgPSB7XG4gICAgICAgICAgICBzaG93OiBzaG93LFxuICAgICAgICAgICAgaGlkZTogaGlkZSxcbiAgICAgICAgICAgIHRvZ2dsZTogdG9nZ2xlLFxuICAgICAgICAgICAgcmVmbG93OiByZWZsb3csXG4gICAgICAgICAgICBvcHRpb246IG9wdGlvbixcbiAgICAgICAgICAgIGVuYWJsZTogZW5hYmxlLFxuICAgICAgICAgICAgZGlzYWJsZTogZGlzYWJsZSxcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgICAgICAgICBzZXQoYyk7XG4gICAgICAgICAgICAgICAgdXBkYXRlT3JpZ2luYWxJbnB1dCgpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldDogZ2V0LFxuICAgICAgICAgICAgZGVzdHJveTogZGVzdHJveSxcbiAgICAgICAgICAgIGNvbnRhaW5lcjogY29udGFpbmVyXG4gICAgICAgIH07XG5cbiAgICAgICAgc3BlY3QuaWQgPSBzcGVjdHJ1bXMucHVzaChzcGVjdCkgLSAxO1xuXG4gICAgICAgIHJldHVybiBzcGVjdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAqIGNoZWNrT2Zmc2V0IC0gZ2V0IHRoZSBvZmZzZXQgYmVsb3cvYWJvdmUgYW5kIGxlZnQvcmlnaHQgZWxlbWVudCBkZXBlbmRpbmcgb24gc2NyZWVuIHBvc2l0aW9uXG4gICAgKiBUaGFua3MgaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9qcXVlcnktdWkvYmxvYi9tYXN0ZXIvdWkvanF1ZXJ5LnVpLmRhdGVwaWNrZXIuanNcbiAgICAqL1xuICAgIGZ1bmN0aW9uIGdldE9mZnNldChwaWNrZXIsIGlucHV0KSB7XG4gICAgICAgIHZhciBleHRyYVkgPSAwO1xuICAgICAgICB2YXIgZHBXaWR0aCA9IHBpY2tlci5vdXRlcldpZHRoKCk7XG4gICAgICAgIHZhciBkcEhlaWdodCA9IHBpY2tlci5vdXRlckhlaWdodCgpO1xuICAgICAgICB2YXIgaW5wdXRIZWlnaHQgPSBpbnB1dC5vdXRlckhlaWdodCgpO1xuICAgICAgICB2YXIgZG9jID0gcGlja2VyWzBdLm93bmVyRG9jdW1lbnQ7XG4gICAgICAgIHZhciBkb2NFbGVtID0gZG9jLmRvY3VtZW50RWxlbWVudDtcbiAgICAgICAgdmFyIHZpZXdXaWR0aCA9IGRvY0VsZW0uY2xpZW50V2lkdGggKyAkKGRvYykuc2Nyb2xsTGVmdCgpO1xuICAgICAgICB2YXIgdmlld0hlaWdodCA9IGRvY0VsZW0uY2xpZW50SGVpZ2h0ICsgJChkb2MpLnNjcm9sbFRvcCgpO1xuICAgICAgICB2YXIgb2Zmc2V0ID0gaW5wdXQub2Zmc2V0KCk7XG4gICAgICAgIG9mZnNldC50b3AgKz0gaW5wdXRIZWlnaHQ7XG5cbiAgICAgICAgb2Zmc2V0LmxlZnQgLT1cbiAgICAgICAgICAgIE1hdGgubWluKG9mZnNldC5sZWZ0LCAob2Zmc2V0LmxlZnQgKyBkcFdpZHRoID4gdmlld1dpZHRoICYmIHZpZXdXaWR0aCA+IGRwV2lkdGgpID9cbiAgICAgICAgICAgIE1hdGguYWJzKG9mZnNldC5sZWZ0ICsgZHBXaWR0aCAtIHZpZXdXaWR0aCkgOiAwKTtcblxuICAgICAgICBvZmZzZXQudG9wIC09XG4gICAgICAgICAgICBNYXRoLm1pbihvZmZzZXQudG9wLCAoKG9mZnNldC50b3AgKyBkcEhlaWdodCA+IHZpZXdIZWlnaHQgJiYgdmlld0hlaWdodCA+IGRwSGVpZ2h0KSA/XG4gICAgICAgICAgICBNYXRoLmFicyhkcEhlaWdodCArIGlucHV0SGVpZ2h0IC0gZXh0cmFZKSA6IGV4dHJhWSkpO1xuXG4gICAgICAgIHJldHVybiBvZmZzZXQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgKiBub29wIC0gZG8gbm90aGluZ1xuICAgICovXG4gICAgZnVuY3Rpb24gbm9vcCgpIHtcblxuICAgIH1cblxuICAgIC8qKlxuICAgICogc3RvcFByb3BhZ2F0aW9uIC0gbWFrZXMgdGhlIGNvZGUgb25seSBkb2luZyB0aGlzIGEgbGl0dGxlIGVhc2llciB0byByZWFkIGluIGxpbmVcbiAgICAqL1xuICAgIGZ1bmN0aW9uIHN0b3BQcm9wYWdhdGlvbihlKSB7XG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgKiBDcmVhdGUgYSBmdW5jdGlvbiBib3VuZCB0byBhIGdpdmVuIG9iamVjdFxuICAgICogVGhhbmtzIHRvIHVuZGVyc2NvcmUuanNcbiAgICAqL1xuICAgIGZ1bmN0aW9uIGJpbmQoZnVuYywgb2JqKSB7XG4gICAgICAgIHZhciBzbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcbiAgICAgICAgdmFyIGFyZ3MgPSBzbGljZS5jYWxsKGFyZ3VtZW50cywgMik7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gZnVuYy5hcHBseShvYmosIGFyZ3MuY29uY2F0KHNsaWNlLmNhbGwoYXJndW1lbnRzKSkpO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8qKlxuICAgICogTGlnaHR3ZWlnaHQgZHJhZyBoZWxwZXIuICBIYW5kbGVzIGNvbnRhaW5tZW50IHdpdGhpbiB0aGUgZWxlbWVudCwgc28gdGhhdFxuICAgICogd2hlbiBkcmFnZ2luZywgdGhlIHggaXMgd2l0aGluIFswLGVsZW1lbnQud2lkdGhdIGFuZCB5IGlzIHdpdGhpbiBbMCxlbGVtZW50LmhlaWdodF1cbiAgICAqL1xuICAgIGZ1bmN0aW9uIGRyYWdnYWJsZShlbGVtZW50LCBvbm1vdmUsIG9uc3RhcnQsIG9uc3RvcCkge1xuICAgICAgICBvbm1vdmUgPSBvbm1vdmUgfHwgZnVuY3Rpb24gKCkgeyB9O1xuICAgICAgICBvbnN0YXJ0ID0gb25zdGFydCB8fCBmdW5jdGlvbiAoKSB7IH07XG4gICAgICAgIG9uc3RvcCA9IG9uc3RvcCB8fCBmdW5jdGlvbiAoKSB7IH07XG4gICAgICAgIHZhciBkb2MgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQgfHwgZG9jdW1lbnQ7XG4gICAgICAgIHZhciBkcmFnZ2luZyA9IGZhbHNlO1xuICAgICAgICB2YXIgb2Zmc2V0ID0ge307XG4gICAgICAgIHZhciBtYXhIZWlnaHQgPSAwO1xuICAgICAgICB2YXIgbWF4V2lkdGggPSAwO1xuICAgICAgICB2YXIgaGFzVG91Y2ggPSAoJ29udG91Y2hzdGFydCcgaW4gd2luZG93KTtcblxuICAgICAgICB2YXIgZHVyaW5nRHJhZ0V2ZW50cyA9IHt9O1xuICAgICAgICBkdXJpbmdEcmFnRXZlbnRzW1wic2VsZWN0c3RhcnRcIl0gPSBwcmV2ZW50O1xuICAgICAgICBkdXJpbmdEcmFnRXZlbnRzW1wiZHJhZ3N0YXJ0XCJdID0gcHJldmVudDtcbiAgICAgICAgZHVyaW5nRHJhZ0V2ZW50c1tcInRvdWNobW92ZSBtb3VzZW1vdmVcIl0gPSBtb3ZlO1xuICAgICAgICBkdXJpbmdEcmFnRXZlbnRzW1widG91Y2hlbmQgbW91c2V1cFwiXSA9IHN0b3A7XG5cbiAgICAgICAgZnVuY3Rpb24gcHJldmVudChlKSB7XG4gICAgICAgICAgICBpZiAoZS5zdG9wUHJvcGFnYXRpb24pIHtcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGUucHJldmVudERlZmF1bHQpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlLnJldHVyblZhbHVlID0gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBtb3ZlKGUpIHtcbiAgICAgICAgICAgIGlmIChkcmFnZ2luZykge1xuICAgICAgICAgICAgICAgIC8vIE1vdXNldXAgaGFwcGVuZWQgb3V0c2lkZSBvZiB3aW5kb3dcbiAgICAgICAgICAgICAgICBpZiAoSUUgJiYgZG9jdW1lbnQuZG9jdW1lbnRNb2RlIDwgOSAmJiAhZS5idXR0b24pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0b3AoKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB2YXIgdG91Y2hlcyA9IGUub3JpZ2luYWxFdmVudC50b3VjaGVzO1xuICAgICAgICAgICAgICAgIHZhciBwYWdlWCA9IHRvdWNoZXMgPyB0b3VjaGVzWzBdLnBhZ2VYIDogZS5wYWdlWDtcbiAgICAgICAgICAgICAgICB2YXIgcGFnZVkgPSB0b3VjaGVzID8gdG91Y2hlc1swXS5wYWdlWSA6IGUucGFnZVk7XG5cbiAgICAgICAgICAgICAgICB2YXIgZHJhZ1ggPSBNYXRoLm1heCgwLCBNYXRoLm1pbihwYWdlWCAtIG9mZnNldC5sZWZ0LCBtYXhXaWR0aCkpO1xuICAgICAgICAgICAgICAgIHZhciBkcmFnWSA9IE1hdGgubWF4KDAsIE1hdGgubWluKHBhZ2VZIC0gb2Zmc2V0LnRvcCwgbWF4SGVpZ2h0KSk7XG5cbiAgICAgICAgICAgICAgICBpZiAoaGFzVG91Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU3RvcCBzY3JvbGxpbmcgaW4gaU9TXG4gICAgICAgICAgICAgICAgICAgIHByZXZlbnQoZSk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgb25tb3ZlLmFwcGx5KGVsZW1lbnQsIFtkcmFnWCwgZHJhZ1ksIGVdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIHN0YXJ0KGUpIHtcbiAgICAgICAgICAgIHZhciByaWdodGNsaWNrID0gKGUud2hpY2gpID8gKGUud2hpY2ggPT0gMykgOiAoZS5idXR0b24gPT0gMik7XG4gICAgICAgICAgICB2YXIgdG91Y2hlcyA9IGUub3JpZ2luYWxFdmVudC50b3VjaGVzO1xuXG4gICAgICAgICAgICBpZiAoIXJpZ2h0Y2xpY2sgJiYgIWRyYWdnaW5nKSB7XG4gICAgICAgICAgICAgICAgaWYgKG9uc3RhcnQuYXBwbHkoZWxlbWVudCwgYXJndW1lbnRzKSAhPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgZHJhZ2dpbmcgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBtYXhIZWlnaHQgPSAkKGVsZW1lbnQpLmhlaWdodCgpO1xuICAgICAgICAgICAgICAgICAgICBtYXhXaWR0aCA9ICQoZWxlbWVudCkud2lkdGgoKTtcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ID0gJChlbGVtZW50KS5vZmZzZXQoKTtcblxuICAgICAgICAgICAgICAgICAgICAkKGRvYykuYmluZChkdXJpbmdEcmFnRXZlbnRzKTtcbiAgICAgICAgICAgICAgICAgICAgJChkb2MuYm9keSkuYWRkQ2xhc3MoXCJzcC1kcmFnZ2luZ1wiKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoIWhhc1RvdWNoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtb3ZlKGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgcHJldmVudChlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzdG9wKCkge1xuICAgICAgICAgICAgaWYgKGRyYWdnaW5nKSB7XG4gICAgICAgICAgICAgICAgJChkb2MpLnVuYmluZChkdXJpbmdEcmFnRXZlbnRzKTtcbiAgICAgICAgICAgICAgICAkKGRvYy5ib2R5KS5yZW1vdmVDbGFzcyhcInNwLWRyYWdnaW5nXCIpO1xuICAgICAgICAgICAgICAgIG9uc3RvcC5hcHBseShlbGVtZW50LCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZHJhZ2dpbmcgPSBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgICQoZWxlbWVudCkuYmluZChcInRvdWNoc3RhcnQgbW91c2Vkb3duXCIsIHN0YXJ0KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0aHJvdHRsZShmdW5jLCB3YWl0LCBkZWJvdW5jZSkge1xuICAgICAgICB2YXIgdGltZW91dDtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBjb250ZXh0ID0gdGhpcywgYXJncyA9IGFyZ3VtZW50cztcbiAgICAgICAgICAgIHZhciB0aHJvdHRsZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdGltZW91dCA9IG51bGw7XG4gICAgICAgICAgICAgICAgZnVuYy5hcHBseShjb250ZXh0LCBhcmdzKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAoZGVib3VuY2UpIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgICAgICAgIGlmIChkZWJvdW5jZSB8fCAhdGltZW91dCkgdGltZW91dCA9IHNldFRpbWVvdXQodGhyb3R0bGVyLCB3YWl0KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAqIERlZmluZSBhIGpRdWVyeSBwbHVnaW5cbiAgICAqL1xuICAgIHZhciBkYXRhSUQgPSBcInNwZWN0cnVtLmlkXCI7XG4gICAgJC5mbi5zcGVjdHJ1bSA9IGZ1bmN0aW9uIChvcHRzLCBleHRyYSkge1xuXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0cyA9PSBcInN0cmluZ1wiKSB7XG5cbiAgICAgICAgICAgIHZhciByZXR1cm5WYWx1ZSA9IHRoaXM7XG4gICAgICAgICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKCBhcmd1bWVudHMsIDEgKTtcblxuICAgICAgICAgICAgdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgc3BlY3QgPSBzcGVjdHJ1bXNbJCh0aGlzKS5kYXRhKGRhdGFJRCldO1xuICAgICAgICAgICAgICAgIGlmIChzcGVjdCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWV0aG9kID0gc3BlY3Rbb3B0c107XG4gICAgICAgICAgICAgICAgICAgIGlmICghbWV0aG9kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIFwiU3BlY3RydW06IG5vIHN1Y2ggbWV0aG9kOiAnXCIgKyBvcHRzICsgXCInXCIgKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChvcHRzID09IFwiZ2V0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVyblZhbHVlID0gc3BlY3QuZ2V0KCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAob3B0cyA9PSBcImNvbnRhaW5lclwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZSA9IHNwZWN0LmNvbnRhaW5lcjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChvcHRzID09IFwib3B0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVyblZhbHVlID0gc3BlY3Qub3B0aW9uLmFwcGx5KHNwZWN0LCBhcmdzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChvcHRzID09IFwiZGVzdHJveVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzcGVjdC5kZXN0cm95KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLnJlbW92ZURhdGEoZGF0YUlEKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZC5hcHBseShzcGVjdCwgYXJncyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIHJldHVyblZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSW5pdGlhbGl6aW5nIGEgbmV3IGluc3RhbmNlIG9mIHNwZWN0cnVtXG4gICAgICAgIHJldHVybiB0aGlzLnNwZWN0cnVtKFwiZGVzdHJveVwiKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBvcHRpb25zID0gJC5leHRlbmQoe30sIG9wdHMsICQodGhpcykuZGF0YSgpKTtcbiAgICAgICAgICAgIHZhciBzcGVjdCA9IHNwZWN0cnVtKHRoaXMsIG9wdGlvbnMpO1xuICAgICAgICAgICAgJCh0aGlzKS5kYXRhKGRhdGFJRCwgc3BlY3QuaWQpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgJC5mbi5zcGVjdHJ1bS5sb2FkID0gdHJ1ZTtcbiAgICAkLmZuLnNwZWN0cnVtLmxvYWRPcHRzID0ge307XG4gICAgJC5mbi5zcGVjdHJ1bS5kcmFnZ2FibGUgPSBkcmFnZ2FibGU7XG4gICAgJC5mbi5zcGVjdHJ1bS5kZWZhdWx0cyA9IGRlZmF1bHRPcHRzO1xuXG4gICAgJC5zcGVjdHJ1bSA9IHsgfTtcbiAgICAkLnNwZWN0cnVtLmxvY2FsaXphdGlvbiA9IHsgfTtcbiAgICAkLnNwZWN0cnVtLnBhbGV0dGVzID0geyB9O1xuXG4gICAgJC5mbi5zcGVjdHJ1bS5wcm9jZXNzTmF0aXZlQ29sb3JJbnB1dHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghaW5wdXRUeXBlQ29sb3JTdXBwb3J0KSB7XG4gICAgICAgICAgICAkKFwiaW5wdXRbdHlwZT1jb2xvcl1cIikuc3BlY3RydW0oe1xuICAgICAgICAgICAgICAgIHByZWZlcnJlZEZvcm1hdDogXCJoZXg2XCJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIFRpbnlDb2xvciB2MC4xMC4wXG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2Jncmlucy9UaW55Q29sb3JcbiAgICAvLyAyMDEzLTA4LTEwLCBCcmlhbiBHcmluc3RlYWQsIE1JVCBMaWNlbnNlXG5cbiAgICAoZnVuY3Rpb24oKSB7XG5cbiAgICB2YXIgdHJpbUxlZnQgPSAvXltcXHMsI10rLyxcbiAgICAgICAgdHJpbVJpZ2h0ID0gL1xccyskLyxcbiAgICAgICAgdGlueUNvdW50ZXIgPSAwLFxuICAgICAgICBtYXRoID0gTWF0aCxcbiAgICAgICAgbWF0aFJvdW5kID0gbWF0aC5yb3VuZCxcbiAgICAgICAgbWF0aE1pbiA9IG1hdGgubWluLFxuICAgICAgICBtYXRoTWF4ID0gbWF0aC5tYXgsXG4gICAgICAgIG1hdGhSYW5kb20gPSBtYXRoLnJhbmRvbTtcblxuICAgIHZhciB0aW55Y29sb3IgPSBmdW5jdGlvbiB0aW55Y29sb3IgKGNvbG9yLCBvcHRzKSB7XG5cbiAgICAgICAgY29sb3IgPSAoY29sb3IpID8gY29sb3IgOiAnJztcbiAgICAgICAgb3B0cyA9IG9wdHMgfHwgeyB9O1xuXG4gICAgICAgIC8vIElmIGlucHV0IGlzIGFscmVhZHkgYSB0aW55Y29sb3IsIHJldHVybiBpdHNlbGZcbiAgICAgICAgaWYgKGNvbG9yIGluc3RhbmNlb2YgdGlueWNvbG9yKSB7XG4gICAgICAgICAgIHJldHVybiBjb2xvcjtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB3ZSBhcmUgY2FsbGVkIGFzIGEgZnVuY3Rpb24sIGNhbGwgdXNpbmcgbmV3IGluc3RlYWRcbiAgICAgICAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIHRpbnljb2xvcikpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgdGlueWNvbG9yKGNvbG9yLCBvcHRzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciByZ2IgPSBpbnB1dFRvUkdCKGNvbG9yKTtcbiAgICAgICAgdGhpcy5fciA9IHJnYi5yLFxuICAgICAgICB0aGlzLl9nID0gcmdiLmcsXG4gICAgICAgIHRoaXMuX2IgPSByZ2IuYixcbiAgICAgICAgdGhpcy5fYSA9IHJnYi5hLFxuICAgICAgICB0aGlzLl9yb3VuZEEgPSBtYXRoUm91bmQoMTAwKnRoaXMuX2EpIC8gMTAwLFxuICAgICAgICB0aGlzLl9mb3JtYXQgPSBvcHRzLmZvcm1hdCB8fCByZ2IuZm9ybWF0O1xuICAgICAgICB0aGlzLl9ncmFkaWVudFR5cGUgPSBvcHRzLmdyYWRpZW50VHlwZTtcblxuICAgICAgICAvLyBEb24ndCBsZXQgdGhlIHJhbmdlIG9mIFswLDI1NV0gY29tZSBiYWNrIGluIFswLDFdLlxuICAgICAgICAvLyBQb3RlbnRpYWxseSBsb3NlIGEgbGl0dGxlIGJpdCBvZiBwcmVjaXNpb24gaGVyZSwgYnV0IHdpbGwgZml4IGlzc3VlcyB3aGVyZVxuICAgICAgICAvLyAuNSBnZXRzIGludGVycHJldGVkIGFzIGhhbGYgb2YgdGhlIHRvdGFsLCBpbnN0ZWFkIG9mIGhhbGYgb2YgMVxuICAgICAgICAvLyBJZiBpdCB3YXMgc3VwcG9zZWQgdG8gYmUgMTI4LCB0aGlzIHdhcyBhbHJlYWR5IHRha2VuIGNhcmUgb2YgYnkgYGlucHV0VG9SZ2JgXG4gICAgICAgIGlmICh0aGlzLl9yIDwgMSkgeyB0aGlzLl9yID0gbWF0aFJvdW5kKHRoaXMuX3IpOyB9XG4gICAgICAgIGlmICh0aGlzLl9nIDwgMSkgeyB0aGlzLl9nID0gbWF0aFJvdW5kKHRoaXMuX2cpOyB9XG4gICAgICAgIGlmICh0aGlzLl9iIDwgMSkgeyB0aGlzLl9iID0gbWF0aFJvdW5kKHRoaXMuX2IpOyB9XG5cbiAgICAgICAgdGhpcy5fb2sgPSByZ2Iub2s7XG4gICAgICAgIHRoaXMuX3RjX2lkID0gdGlueUNvdW50ZXIrKztcbiAgICB9O1xuXG4gICAgdGlueWNvbG9yLnByb3RvdHlwZSA9IHtcbiAgICAgICAgaXNWYWxpZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fb2s7XG4gICAgICAgIH0sXG4gICAgICAgIGdldEZvcm1hdDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZm9ybWF0O1xuICAgICAgICB9LFxuICAgICAgICBnZXRBbHBoYTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fYTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0QWxwaGE6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICB0aGlzLl9hID0gYm91bmRBbHBoYSh2YWx1ZSk7XG4gICAgICAgICAgICB0aGlzLl9yb3VuZEEgPSBtYXRoUm91bmQoMTAwKnRoaXMuX2EpIC8gMTAwO1xuICAgICAgICB9LFxuICAgICAgICB0b0hzdjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgaHN2ID0gcmdiVG9Ic3YodGhpcy5fciwgdGhpcy5fZywgdGhpcy5fYik7XG4gICAgICAgICAgICByZXR1cm4geyBoOiBoc3YuaCAqIDM2MCwgczogaHN2LnMsIHY6IGhzdi52LCBhOiB0aGlzLl9hIH07XG4gICAgICAgIH0sXG4gICAgICAgIHRvSHN2U3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBoc3YgPSByZ2JUb0hzdih0aGlzLl9yLCB0aGlzLl9nLCB0aGlzLl9iKTtcbiAgICAgICAgICAgIHZhciBoID0gbWF0aFJvdW5kKGhzdi5oICogMzYwKSwgcyA9IG1hdGhSb3VuZChoc3YucyAqIDEwMCksIHYgPSBtYXRoUm91bmQoaHN2LnYgKiAxMDApO1xuICAgICAgICAgICAgcmV0dXJuICh0aGlzLl9hID09IDEpID9cbiAgICAgICAgICAgICAgXCJoc3YoXCIgICsgaCArIFwiLCBcIiArIHMgKyBcIiUsIFwiICsgdiArIFwiJSlcIiA6XG4gICAgICAgICAgICAgIFwiaHN2YShcIiArIGggKyBcIiwgXCIgKyBzICsgXCIlLCBcIiArIHYgKyBcIiUsIFwiKyB0aGlzLl9yb3VuZEEgKyBcIilcIjtcbiAgICAgICAgfSxcbiAgICAgICAgdG9Ic2w6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGhzbCA9IHJnYlRvSHNsKHRoaXMuX3IsIHRoaXMuX2csIHRoaXMuX2IpO1xuICAgICAgICAgICAgcmV0dXJuIHsgaDogaHNsLmggKiAzNjAsIHM6IGhzbC5zLCBsOiBoc2wubCwgYTogdGhpcy5fYSB9O1xuICAgICAgICB9LFxuICAgICAgICB0b0hzbFN0cmluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgaHNsID0gcmdiVG9Ic2wodGhpcy5fciwgdGhpcy5fZywgdGhpcy5fYik7XG4gICAgICAgICAgICB2YXIgaCA9IG1hdGhSb3VuZChoc2wuaCAqIDM2MCksIHMgPSBtYXRoUm91bmQoaHNsLnMgKiAxMDApLCBsID0gbWF0aFJvdW5kKGhzbC5sICogMTAwKTtcbiAgICAgICAgICAgIHJldHVybiAodGhpcy5fYSA9PSAxKSA/XG4gICAgICAgICAgICAgIFwiaHNsKFwiICArIGggKyBcIiwgXCIgKyBzICsgXCIlLCBcIiArIGwgKyBcIiUpXCIgOlxuICAgICAgICAgICAgICBcImhzbGEoXCIgKyBoICsgXCIsIFwiICsgcyArIFwiJSwgXCIgKyBsICsgXCIlLCBcIisgdGhpcy5fcm91bmRBICsgXCIpXCI7XG4gICAgICAgIH0sXG4gICAgICAgIHRvSGV4OiBmdW5jdGlvbihhbGxvdzNDaGFyKSB7XG4gICAgICAgICAgICByZXR1cm4gcmdiVG9IZXgodGhpcy5fciwgdGhpcy5fZywgdGhpcy5fYiwgYWxsb3czQ2hhcik7XG4gICAgICAgIH0sXG4gICAgICAgIHRvSGV4U3RyaW5nOiBmdW5jdGlvbihhbGxvdzNDaGFyKSB7XG4gICAgICAgICAgICByZXR1cm4gJyMnICsgdGhpcy50b0hleChhbGxvdzNDaGFyKTtcbiAgICAgICAgfSxcbiAgICAgICAgdG9IZXg4OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiByZ2JhVG9IZXgodGhpcy5fciwgdGhpcy5fZywgdGhpcy5fYiwgdGhpcy5fYSk7XG4gICAgICAgIH0sXG4gICAgICAgIHRvSGV4OFN0cmluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gJyMnICsgdGhpcy50b0hleDgoKTtcbiAgICAgICAgfSxcbiAgICAgICAgdG9SZ2I6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHsgcjogbWF0aFJvdW5kKHRoaXMuX3IpLCBnOiBtYXRoUm91bmQodGhpcy5fZyksIGI6IG1hdGhSb3VuZCh0aGlzLl9iKSwgYTogdGhpcy5fYSB9O1xuICAgICAgICB9LFxuICAgICAgICB0b1JnYlN0cmluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gKHRoaXMuX2EgPT0gMSkgP1xuICAgICAgICAgICAgICBcInJnYihcIiAgKyBtYXRoUm91bmQodGhpcy5fcikgKyBcIiwgXCIgKyBtYXRoUm91bmQodGhpcy5fZykgKyBcIiwgXCIgKyBtYXRoUm91bmQodGhpcy5fYikgKyBcIilcIiA6XG4gICAgICAgICAgICAgIFwicmdiYShcIiArIG1hdGhSb3VuZCh0aGlzLl9yKSArIFwiLCBcIiArIG1hdGhSb3VuZCh0aGlzLl9nKSArIFwiLCBcIiArIG1hdGhSb3VuZCh0aGlzLl9iKSArIFwiLCBcIiArIHRoaXMuX3JvdW5kQSArIFwiKVwiO1xuICAgICAgICB9LFxuICAgICAgICB0b1BlcmNlbnRhZ2VSZ2I6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHsgcjogbWF0aFJvdW5kKGJvdW5kMDEodGhpcy5fciwgMjU1KSAqIDEwMCkgKyBcIiVcIiwgZzogbWF0aFJvdW5kKGJvdW5kMDEodGhpcy5fZywgMjU1KSAqIDEwMCkgKyBcIiVcIiwgYjogbWF0aFJvdW5kKGJvdW5kMDEodGhpcy5fYiwgMjU1KSAqIDEwMCkgKyBcIiVcIiwgYTogdGhpcy5fYSB9O1xuICAgICAgICB9LFxuICAgICAgICB0b1BlcmNlbnRhZ2VSZ2JTdHJpbmc6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuICh0aGlzLl9hID09IDEpID9cbiAgICAgICAgICAgICAgXCJyZ2IoXCIgICsgbWF0aFJvdW5kKGJvdW5kMDEodGhpcy5fciwgMjU1KSAqIDEwMCkgKyBcIiUsIFwiICsgbWF0aFJvdW5kKGJvdW5kMDEodGhpcy5fZywgMjU1KSAqIDEwMCkgKyBcIiUsIFwiICsgbWF0aFJvdW5kKGJvdW5kMDEodGhpcy5fYiwgMjU1KSAqIDEwMCkgKyBcIiUpXCIgOlxuICAgICAgICAgICAgICBcInJnYmEoXCIgKyBtYXRoUm91bmQoYm91bmQwMSh0aGlzLl9yLCAyNTUpICogMTAwKSArIFwiJSwgXCIgKyBtYXRoUm91bmQoYm91bmQwMSh0aGlzLl9nLCAyNTUpICogMTAwKSArIFwiJSwgXCIgKyBtYXRoUm91bmQoYm91bmQwMSh0aGlzLl9iLCAyNTUpICogMTAwKSArIFwiJSwgXCIgKyB0aGlzLl9yb3VuZEEgKyBcIilcIjtcbiAgICAgICAgfSxcbiAgICAgICAgdG9OYW1lOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9hID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwidHJhbnNwYXJlbnRcIjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRoaXMuX2EgPCAxKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gaGV4TmFtZXNbcmdiVG9IZXgodGhpcy5fciwgdGhpcy5fZywgdGhpcy5fYiwgdHJ1ZSldIHx8IGZhbHNlO1xuICAgICAgICB9LFxuICAgICAgICB0b0ZpbHRlcjogZnVuY3Rpb24oc2Vjb25kQ29sb3IpIHtcbiAgICAgICAgICAgIHZhciBoZXg4U3RyaW5nID0gJyMnICsgcmdiYVRvSGV4KHRoaXMuX3IsIHRoaXMuX2csIHRoaXMuX2IsIHRoaXMuX2EpO1xuICAgICAgICAgICAgdmFyIHNlY29uZEhleDhTdHJpbmcgPSBoZXg4U3RyaW5nO1xuICAgICAgICAgICAgdmFyIGdyYWRpZW50VHlwZSA9IHRoaXMuX2dyYWRpZW50VHlwZSA/IFwiR3JhZGllbnRUeXBlID0gMSwgXCIgOiBcIlwiO1xuXG4gICAgICAgICAgICBpZiAoc2Vjb25kQ29sb3IpIHtcbiAgICAgICAgICAgICAgICB2YXIgcyA9IHRpbnljb2xvcihzZWNvbmRDb2xvcik7XG4gICAgICAgICAgICAgICAgc2Vjb25kSGV4OFN0cmluZyA9IHMudG9IZXg4U3RyaW5nKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBcInByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChcIitncmFkaWVudFR5cGUrXCJzdGFydENvbG9yc3RyPVwiK2hleDhTdHJpbmcrXCIsZW5kQ29sb3JzdHI9XCIrc2Vjb25kSGV4OFN0cmluZytcIilcIjtcbiAgICAgICAgfSxcbiAgICAgICAgdG9TdHJpbmc6IGZ1bmN0aW9uKGZvcm1hdCkge1xuICAgICAgICAgICAgdmFyIGZvcm1hdFNldCA9ICEhZm9ybWF0O1xuICAgICAgICAgICAgZm9ybWF0ID0gZm9ybWF0IHx8IHRoaXMuX2Zvcm1hdDtcblxuICAgICAgICAgICAgdmFyIGZvcm1hdHRlZFN0cmluZyA9IGZhbHNlO1xuICAgICAgICAgICAgdmFyIGhhc0FscGhhID0gdGhpcy5fYSA8IDEgJiYgdGhpcy5fYSA+PSAwO1xuICAgICAgICAgICAgdmFyIG5lZWRzQWxwaGFGb3JtYXQgPSAhZm9ybWF0U2V0ICYmIGhhc0FscGhhICYmIChmb3JtYXQgPT09IFwiaGV4XCIgfHwgZm9ybWF0ID09PSBcImhleDZcIiB8fCBmb3JtYXQgPT09IFwiaGV4M1wiIHx8IGZvcm1hdCA9PT0gXCJuYW1lXCIpO1xuXG4gICAgICAgICAgICBpZiAobmVlZHNBbHBoYUZvcm1hdCkge1xuICAgICAgICAgICAgICAgIC8vIFNwZWNpYWwgY2FzZSBmb3IgXCJ0cmFuc3BhcmVudFwiLCBhbGwgb3RoZXIgbm9uLWFscGhhIGZvcm1hdHNcbiAgICAgICAgICAgICAgICAvLyB3aWxsIHJldHVybiByZ2JhIHdoZW4gdGhlcmUgaXMgdHJhbnNwYXJlbmN5LlxuICAgICAgICAgICAgICAgIGlmIChmb3JtYXQgPT09IFwibmFtZVwiICYmIHRoaXMuX2EgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudG9OYW1lKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnRvUmdiU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZm9ybWF0ID09PSBcInJnYlwiKSB7XG4gICAgICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b1JnYlN0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZvcm1hdCA9PT0gXCJwcmdiXCIpIHtcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZWRTdHJpbmcgPSB0aGlzLnRvUGVyY2VudGFnZVJnYlN0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZvcm1hdCA9PT0gXCJoZXhcIiB8fCBmb3JtYXQgPT09IFwiaGV4NlwiKSB7XG4gICAgICAgICAgICAgICAgZm9ybWF0dGVkU3RyaW5nID0gdGhpcy50b0hleFN0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZvcm1hdCA9PT0gXCJoZXgzXCIpIHtcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZWRTdHJpbmcgPSB0aGlzLnRvSGV4U3RyaW5nKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZvcm1hdCA9PT0gXCJoZXg4XCIpIHtcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZWRTdHJpbmcgPSB0aGlzLnRvSGV4OFN0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZvcm1hdCA9PT0gXCJuYW1lXCIpIHtcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZWRTdHJpbmcgPSB0aGlzLnRvTmFtZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZvcm1hdCA9PT0gXCJoc2xcIikge1xuICAgICAgICAgICAgICAgIGZvcm1hdHRlZFN0cmluZyA9IHRoaXMudG9Ic2xTdHJpbmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChmb3JtYXQgPT09IFwiaHN2XCIpIHtcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZWRTdHJpbmcgPSB0aGlzLnRvSHN2U3RyaW5nKCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBmb3JtYXR0ZWRTdHJpbmcgfHwgdGhpcy50b0hleFN0cmluZygpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIElmIGlucHV0IGlzIGFuIG9iamVjdCwgZm9yY2UgMSBpbnRvIFwiMS4wXCIgdG8gaGFuZGxlIHJhdGlvcyBwcm9wZXJseVxuICAgIC8vIFN0cmluZyBpbnB1dCByZXF1aXJlcyBcIjEuMFwiIGFzIGlucHV0LCBzbyAxIHdpbGwgYmUgdHJlYXRlZCBhcyAxXG4gICAgdGlueWNvbG9yLmZyb21SYXRpbyA9IGZ1bmN0aW9uKGNvbG9yLCBvcHRzKSB7XG4gICAgICAgIGlmICh0eXBlb2YgY29sb3IgPT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgdmFyIG5ld0NvbG9yID0ge307XG4gICAgICAgICAgICBmb3IgKHZhciBpIGluIGNvbG9yKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNvbG9yLmhhc093blByb3BlcnR5KGkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpID09PSBcImFcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q29sb3JbaV0gPSBjb2xvcltpXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0NvbG9yW2ldID0gY29udmVydFRvUGVyY2VudGFnZShjb2xvcltpXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb2xvciA9IG5ld0NvbG9yO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRpbnljb2xvcihjb2xvciwgb3B0cyk7XG4gICAgfTtcblxuICAgIC8vIEdpdmVuIGEgc3RyaW5nIG9yIG9iamVjdCwgY29udmVydCB0aGF0IGlucHV0IHRvIFJHQlxuICAgIC8vIFBvc3NpYmxlIHN0cmluZyBpbnB1dHM6XG4gICAgLy9cbiAgICAvLyAgICAgXCJyZWRcIlxuICAgIC8vICAgICBcIiNmMDBcIiBvciBcImYwMFwiXG4gICAgLy8gICAgIFwiI2ZmMDAwMFwiIG9yIFwiZmYwMDAwXCJcbiAgICAvLyAgICAgXCIjZmYwMDAwMDBcIiBvciBcImZmMDAwMDAwXCJcbiAgICAvLyAgICAgXCJyZ2IgMjU1IDAgMFwiIG9yIFwicmdiICgyNTUsIDAsIDApXCJcbiAgICAvLyAgICAgXCJyZ2IgMS4wIDAgMFwiIG9yIFwicmdiICgxLCAwLCAwKVwiXG4gICAgLy8gICAgIFwicmdiYSAoMjU1LCAwLCAwLCAxKVwiIG9yIFwicmdiYSAyNTUsIDAsIDAsIDFcIlxuICAgIC8vICAgICBcInJnYmEgKDEuMCwgMCwgMCwgMSlcIiBvciBcInJnYmEgMS4wLCAwLCAwLCAxXCJcbiAgICAvLyAgICAgXCJoc2woMCwgMTAwJSwgNTAlKVwiIG9yIFwiaHNsIDAgMTAwJSA1MCVcIlxuICAgIC8vICAgICBcImhzbGEoMCwgMTAwJSwgNTAlLCAxKVwiIG9yIFwiaHNsYSAwIDEwMCUgNTAlLCAxXCJcbiAgICAvLyAgICAgXCJoc3YoMCwgMTAwJSwgMTAwJSlcIiBvciBcImhzdiAwIDEwMCUgMTAwJVwiXG4gICAgLy9cbiAgICBmdW5jdGlvbiBpbnB1dFRvUkdCKGNvbG9yKSB7XG5cbiAgICAgICAgdmFyIHJnYiA9IHsgcjogMCwgZzogMCwgYjogMCB9O1xuICAgICAgICB2YXIgYSA9IDE7XG4gICAgICAgIHZhciBvayA9IGZhbHNlO1xuICAgICAgICB2YXIgZm9ybWF0ID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBjb2xvciA9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICBjb2xvciA9IHN0cmluZ0lucHV0VG9PYmplY3QoY29sb3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGVvZiBjb2xvciA9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICBpZiAoY29sb3IuaGFzT3duUHJvcGVydHkoXCJyXCIpICYmIGNvbG9yLmhhc093blByb3BlcnR5KFwiZ1wiKSAmJiBjb2xvci5oYXNPd25Qcm9wZXJ0eShcImJcIikpIHtcbiAgICAgICAgICAgICAgICByZ2IgPSByZ2JUb1JnYihjb2xvci5yLCBjb2xvci5nLCBjb2xvci5iKTtcbiAgICAgICAgICAgICAgICBvayA9IHRydWU7XG4gICAgICAgICAgICAgICAgZm9ybWF0ID0gU3RyaW5nKGNvbG9yLnIpLnN1YnN0cigtMSkgPT09IFwiJVwiID8gXCJwcmdiXCIgOiBcInJnYlwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoY29sb3IuaGFzT3duUHJvcGVydHkoXCJoXCIpICYmIGNvbG9yLmhhc093blByb3BlcnR5KFwic1wiKSAmJiBjb2xvci5oYXNPd25Qcm9wZXJ0eShcInZcIikpIHtcbiAgICAgICAgICAgICAgICBjb2xvci5zID0gY29udmVydFRvUGVyY2VudGFnZShjb2xvci5zKTtcbiAgICAgICAgICAgICAgICBjb2xvci52ID0gY29udmVydFRvUGVyY2VudGFnZShjb2xvci52KTtcbiAgICAgICAgICAgICAgICByZ2IgPSBoc3ZUb1JnYihjb2xvci5oLCBjb2xvci5zLCBjb2xvci52KTtcbiAgICAgICAgICAgICAgICBvayA9IHRydWU7XG4gICAgICAgICAgICAgICAgZm9ybWF0ID0gXCJoc3ZcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGNvbG9yLmhhc093blByb3BlcnR5KFwiaFwiKSAmJiBjb2xvci5oYXNPd25Qcm9wZXJ0eShcInNcIikgJiYgY29sb3IuaGFzT3duUHJvcGVydHkoXCJsXCIpKSB7XG4gICAgICAgICAgICAgICAgY29sb3IucyA9IGNvbnZlcnRUb1BlcmNlbnRhZ2UoY29sb3Iucyk7XG4gICAgICAgICAgICAgICAgY29sb3IubCA9IGNvbnZlcnRUb1BlcmNlbnRhZ2UoY29sb3IubCk7XG4gICAgICAgICAgICAgICAgcmdiID0gaHNsVG9SZ2IoY29sb3IuaCwgY29sb3IucywgY29sb3IubCk7XG4gICAgICAgICAgICAgICAgb2sgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGZvcm1hdCA9IFwiaHNsXCI7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChjb2xvci5oYXNPd25Qcm9wZXJ0eShcImFcIikpIHtcbiAgICAgICAgICAgICAgICBhID0gY29sb3IuYTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGEgPSBib3VuZEFscGhhKGEpO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBvazogb2ssXG4gICAgICAgICAgICBmb3JtYXQ6IGNvbG9yLmZvcm1hdCB8fCBmb3JtYXQsXG4gICAgICAgICAgICByOiBtYXRoTWluKDI1NSwgbWF0aE1heChyZ2IuciwgMCkpLFxuICAgICAgICAgICAgZzogbWF0aE1pbigyNTUsIG1hdGhNYXgocmdiLmcsIDApKSxcbiAgICAgICAgICAgIGI6IG1hdGhNaW4oMjU1LCBtYXRoTWF4KHJnYi5iLCAwKSksXG4gICAgICAgICAgICBhOiBhXG4gICAgICAgIH07XG4gICAgfVxuXG5cbiAgICAvLyBDb252ZXJzaW9uIEZ1bmN0aW9uc1xuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgICAvLyBgcmdiVG9Ic2xgLCBgcmdiVG9Ic3ZgLCBgaHNsVG9SZ2JgLCBgaHN2VG9SZ2JgIG1vZGlmaWVkIGZyb206XG4gICAgLy8gPGh0dHA6Ly9tamlqYWNrc29uLmNvbS8yMDA4LzAyL3JnYi10by1oc2wtYW5kLXJnYi10by1oc3YtY29sb3ItbW9kZWwtY29udmVyc2lvbi1hbGdvcml0aG1zLWluLWphdmFzY3JpcHQ+XG5cbiAgICAvLyBgcmdiVG9SZ2JgXG4gICAgLy8gSGFuZGxlIGJvdW5kcyAvIHBlcmNlbnRhZ2UgY2hlY2tpbmcgdG8gY29uZm9ybSB0byBDU1MgY29sb3Igc3BlY1xuICAgIC8vIDxodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLWNvbG9yLz5cbiAgICAvLyAqQXNzdW1lczoqIHIsIGcsIGIgaW4gWzAsIDI1NV0gb3IgWzAsIDFdXG4gICAgLy8gKlJldHVybnM6KiB7IHIsIGcsIGIgfSBpbiBbMCwgMjU1XVxuICAgIGZ1bmN0aW9uIHJnYlRvUmdiKHIsIGcsIGIpe1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcjogYm91bmQwMShyLCAyNTUpICogMjU1LFxuICAgICAgICAgICAgZzogYm91bmQwMShnLCAyNTUpICogMjU1LFxuICAgICAgICAgICAgYjogYm91bmQwMShiLCAyNTUpICogMjU1XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gYHJnYlRvSHNsYFxuICAgIC8vIENvbnZlcnRzIGFuIFJHQiBjb2xvciB2YWx1ZSB0byBIU0wuXG4gICAgLy8gKkFzc3VtZXM6KiByLCBnLCBhbmQgYiBhcmUgY29udGFpbmVkIGluIFswLCAyNTVdIG9yIFswLCAxXVxuICAgIC8vICpSZXR1cm5zOiogeyBoLCBzLCBsIH0gaW4gWzAsMV1cbiAgICBmdW5jdGlvbiByZ2JUb0hzbChyLCBnLCBiKSB7XG5cbiAgICAgICAgciA9IGJvdW5kMDEociwgMjU1KTtcbiAgICAgICAgZyA9IGJvdW5kMDEoZywgMjU1KTtcbiAgICAgICAgYiA9IGJvdW5kMDEoYiwgMjU1KTtcblxuICAgICAgICB2YXIgbWF4ID0gbWF0aE1heChyLCBnLCBiKSwgbWluID0gbWF0aE1pbihyLCBnLCBiKTtcbiAgICAgICAgdmFyIGgsIHMsIGwgPSAobWF4ICsgbWluKSAvIDI7XG5cbiAgICAgICAgaWYobWF4ID09IG1pbikge1xuICAgICAgICAgICAgaCA9IHMgPSAwOyAvLyBhY2hyb21hdGljXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgZCA9IG1heCAtIG1pbjtcbiAgICAgICAgICAgIHMgPSBsID4gMC41ID8gZCAvICgyIC0gbWF4IC0gbWluKSA6IGQgLyAobWF4ICsgbWluKTtcbiAgICAgICAgICAgIHN3aXRjaChtYXgpIHtcbiAgICAgICAgICAgICAgICBjYXNlIHI6IGggPSAoZyAtIGIpIC8gZCArIChnIDwgYiA/IDYgOiAwKTsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSBnOiBoID0gKGIgLSByKSAvIGQgKyAyOyBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIGI6IGggPSAociAtIGcpIC8gZCArIDQ7IGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBoIC89IDY7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4geyBoOiBoLCBzOiBzLCBsOiBsIH07XG4gICAgfVxuXG4gICAgLy8gYGhzbFRvUmdiYFxuICAgIC8vIENvbnZlcnRzIGFuIEhTTCBjb2xvciB2YWx1ZSB0byBSR0IuXG4gICAgLy8gKkFzc3VtZXM6KiBoIGlzIGNvbnRhaW5lZCBpbiBbMCwgMV0gb3IgWzAsIDM2MF0gYW5kIHMgYW5kIGwgYXJlIGNvbnRhaW5lZCBbMCwgMV0gb3IgWzAsIDEwMF1cbiAgICAvLyAqUmV0dXJuczoqIHsgciwgZywgYiB9IGluIHRoZSBzZXQgWzAsIDI1NV1cbiAgICBmdW5jdGlvbiBoc2xUb1JnYihoLCBzLCBsKSB7XG4gICAgICAgIHZhciByLCBnLCBiO1xuXG4gICAgICAgIGggPSBib3VuZDAxKGgsIDM2MCk7XG4gICAgICAgIHMgPSBib3VuZDAxKHMsIDEwMCk7XG4gICAgICAgIGwgPSBib3VuZDAxKGwsIDEwMCk7XG5cbiAgICAgICAgZnVuY3Rpb24gaHVlMnJnYihwLCBxLCB0KSB7XG4gICAgICAgICAgICBpZih0IDwgMCkgdCArPSAxO1xuICAgICAgICAgICAgaWYodCA+IDEpIHQgLT0gMTtcbiAgICAgICAgICAgIGlmKHQgPCAxLzYpIHJldHVybiBwICsgKHEgLSBwKSAqIDYgKiB0O1xuICAgICAgICAgICAgaWYodCA8IDEvMikgcmV0dXJuIHE7XG4gICAgICAgICAgICBpZih0IDwgMi8zKSByZXR1cm4gcCArIChxIC0gcCkgKiAoMi8zIC0gdCkgKiA2O1xuICAgICAgICAgICAgcmV0dXJuIHA7XG4gICAgICAgIH1cblxuICAgICAgICBpZihzID09PSAwKSB7XG4gICAgICAgICAgICByID0gZyA9IGIgPSBsOyAvLyBhY2hyb21hdGljXG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgcSA9IGwgPCAwLjUgPyBsICogKDEgKyBzKSA6IGwgKyBzIC0gbCAqIHM7XG4gICAgICAgICAgICB2YXIgcCA9IDIgKiBsIC0gcTtcbiAgICAgICAgICAgIHIgPSBodWUycmdiKHAsIHEsIGggKyAxLzMpO1xuICAgICAgICAgICAgZyA9IGh1ZTJyZ2IocCwgcSwgaCk7XG4gICAgICAgICAgICBiID0gaHVlMnJnYihwLCBxLCBoIC0gMS8zKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7IHI6IHIgKiAyNTUsIGc6IGcgKiAyNTUsIGI6IGIgKiAyNTUgfTtcbiAgICB9XG5cbiAgICAvLyBgcmdiVG9Ic3ZgXG4gICAgLy8gQ29udmVydHMgYW4gUkdCIGNvbG9yIHZhbHVlIHRvIEhTVlxuICAgIC8vICpBc3N1bWVzOiogciwgZywgYW5kIGIgYXJlIGNvbnRhaW5lZCBpbiB0aGUgc2V0IFswLCAyNTVdIG9yIFswLCAxXVxuICAgIC8vICpSZXR1cm5zOiogeyBoLCBzLCB2IH0gaW4gWzAsMV1cbiAgICBmdW5jdGlvbiByZ2JUb0hzdihyLCBnLCBiKSB7XG5cbiAgICAgICAgciA9IGJvdW5kMDEociwgMjU1KTtcbiAgICAgICAgZyA9IGJvdW5kMDEoZywgMjU1KTtcbiAgICAgICAgYiA9IGJvdW5kMDEoYiwgMjU1KTtcblxuICAgICAgICB2YXIgbWF4ID0gbWF0aE1heChyLCBnLCBiKSwgbWluID0gbWF0aE1pbihyLCBnLCBiKTtcbiAgICAgICAgdmFyIGgsIHMsIHYgPSBtYXg7XG5cbiAgICAgICAgdmFyIGQgPSBtYXggLSBtaW47XG4gICAgICAgIHMgPSBtYXggPT09IDAgPyAwIDogZCAvIG1heDtcblxuICAgICAgICBpZihtYXggPT0gbWluKSB7XG4gICAgICAgICAgICBoID0gMDsgLy8gYWNocm9tYXRpY1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc3dpdGNoKG1heCkge1xuICAgICAgICAgICAgICAgIGNhc2UgcjogaCA9IChnIC0gYikgLyBkICsgKGcgPCBiID8gNiA6IDApOyBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIGc6IGggPSAoYiAtIHIpIC8gZCArIDI7IGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgYjogaCA9IChyIC0gZykgLyBkICsgNDsgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoIC89IDY7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgaDogaCwgczogcywgdjogdiB9O1xuICAgIH1cblxuICAgIC8vIGBoc3ZUb1JnYmBcbiAgICAvLyBDb252ZXJ0cyBhbiBIU1YgY29sb3IgdmFsdWUgdG8gUkdCLlxuICAgIC8vICpBc3N1bWVzOiogaCBpcyBjb250YWluZWQgaW4gWzAsIDFdIG9yIFswLCAzNjBdIGFuZCBzIGFuZCB2IGFyZSBjb250YWluZWQgaW4gWzAsIDFdIG9yIFswLCAxMDBdXG4gICAgLy8gKlJldHVybnM6KiB7IHIsIGcsIGIgfSBpbiB0aGUgc2V0IFswLCAyNTVdXG4gICAgIGZ1bmN0aW9uIGhzdlRvUmdiKGgsIHMsIHYpIHtcblxuICAgICAgICBoID0gYm91bmQwMShoLCAzNjApICogNjtcbiAgICAgICAgcyA9IGJvdW5kMDEocywgMTAwKTtcbiAgICAgICAgdiA9IGJvdW5kMDEodiwgMTAwKTtcblxuICAgICAgICB2YXIgaSA9IG1hdGguZmxvb3IoaCksXG4gICAgICAgICAgICBmID0gaCAtIGksXG4gICAgICAgICAgICBwID0gdiAqICgxIC0gcyksXG4gICAgICAgICAgICBxID0gdiAqICgxIC0gZiAqIHMpLFxuICAgICAgICAgICAgdCA9IHYgKiAoMSAtICgxIC0gZikgKiBzKSxcbiAgICAgICAgICAgIG1vZCA9IGkgJSA2LFxuICAgICAgICAgICAgciA9IFt2LCBxLCBwLCBwLCB0LCB2XVttb2RdLFxuICAgICAgICAgICAgZyA9IFt0LCB2LCB2LCBxLCBwLCBwXVttb2RdLFxuICAgICAgICAgICAgYiA9IFtwLCBwLCB0LCB2LCB2LCBxXVttb2RdO1xuXG4gICAgICAgIHJldHVybiB7IHI6IHIgKiAyNTUsIGc6IGcgKiAyNTUsIGI6IGIgKiAyNTUgfTtcbiAgICB9XG5cbiAgICAvLyBgcmdiVG9IZXhgXG4gICAgLy8gQ29udmVydHMgYW4gUkdCIGNvbG9yIHRvIGhleFxuICAgIC8vIEFzc3VtZXMgciwgZywgYW5kIGIgYXJlIGNvbnRhaW5lZCBpbiB0aGUgc2V0IFswLCAyNTVdXG4gICAgLy8gUmV0dXJucyBhIDMgb3IgNiBjaGFyYWN0ZXIgaGV4XG4gICAgZnVuY3Rpb24gcmdiVG9IZXgociwgZywgYiwgYWxsb3czQ2hhcikge1xuXG4gICAgICAgIHZhciBoZXggPSBbXG4gICAgICAgICAgICBwYWQyKG1hdGhSb3VuZChyKS50b1N0cmluZygxNikpLFxuICAgICAgICAgICAgcGFkMihtYXRoUm91bmQoZykudG9TdHJpbmcoMTYpKSxcbiAgICAgICAgICAgIHBhZDIobWF0aFJvdW5kKGIpLnRvU3RyaW5nKDE2KSlcbiAgICAgICAgXTtcblxuICAgICAgICAvLyBSZXR1cm4gYSAzIGNoYXJhY3RlciBoZXggaWYgcG9zc2libGVcbiAgICAgICAgaWYgKGFsbG93M0NoYXIgJiYgaGV4WzBdLmNoYXJBdCgwKSA9PSBoZXhbMF0uY2hhckF0KDEpICYmIGhleFsxXS5jaGFyQXQoMCkgPT0gaGV4WzFdLmNoYXJBdCgxKSAmJiBoZXhbMl0uY2hhckF0KDApID09IGhleFsyXS5jaGFyQXQoMSkpIHtcbiAgICAgICAgICAgIHJldHVybiBoZXhbMF0uY2hhckF0KDApICsgaGV4WzFdLmNoYXJBdCgwKSArIGhleFsyXS5jaGFyQXQoMCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaGV4LmpvaW4oXCJcIik7XG4gICAgfVxuICAgICAgICAvLyBgcmdiYVRvSGV4YFxuICAgICAgICAvLyBDb252ZXJ0cyBhbiBSR0JBIGNvbG9yIHBsdXMgYWxwaGEgdHJhbnNwYXJlbmN5IHRvIGhleFxuICAgICAgICAvLyBBc3N1bWVzIHIsIGcsIGIgYW5kIGEgYXJlIGNvbnRhaW5lZCBpbiB0aGUgc2V0IFswLCAyNTVdXG4gICAgICAgIC8vIFJldHVybnMgYW4gOCBjaGFyYWN0ZXIgaGV4XG4gICAgICAgIGZ1bmN0aW9uIHJnYmFUb0hleChyLCBnLCBiLCBhKSB7XG5cbiAgICAgICAgICAgIHZhciBoZXggPSBbXG4gICAgICAgICAgICAgICAgcGFkMihjb252ZXJ0RGVjaW1hbFRvSGV4KGEpKSxcbiAgICAgICAgICAgICAgICBwYWQyKG1hdGhSb3VuZChyKS50b1N0cmluZygxNikpLFxuICAgICAgICAgICAgICAgIHBhZDIobWF0aFJvdW5kKGcpLnRvU3RyaW5nKDE2KSksXG4gICAgICAgICAgICAgICAgcGFkMihtYXRoUm91bmQoYikudG9TdHJpbmcoMTYpKVxuICAgICAgICAgICAgXTtcblxuICAgICAgICAgICAgcmV0dXJuIGhleC5qb2luKFwiXCIpO1xuICAgICAgICB9XG5cbiAgICAvLyBgZXF1YWxzYFxuICAgIC8vIENhbiBiZSBjYWxsZWQgd2l0aCBhbnkgdGlueWNvbG9yIGlucHV0XG4gICAgdGlueWNvbG9yLmVxdWFscyA9IGZ1bmN0aW9uIChjb2xvcjEsIGNvbG9yMikge1xuICAgICAgICBpZiAoIWNvbG9yMSB8fCAhY29sb3IyKSB7IHJldHVybiBmYWxzZTsgfVxuICAgICAgICByZXR1cm4gdGlueWNvbG9yKGNvbG9yMSkudG9SZ2JTdHJpbmcoKSA9PSB0aW55Y29sb3IoY29sb3IyKS50b1JnYlN0cmluZygpO1xuICAgIH07XG4gICAgdGlueWNvbG9yLnJhbmRvbSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGlueWNvbG9yLmZyb21SYXRpbyh7XG4gICAgICAgICAgICByOiBtYXRoUmFuZG9tKCksXG4gICAgICAgICAgICBnOiBtYXRoUmFuZG9tKCksXG4gICAgICAgICAgICBiOiBtYXRoUmFuZG9tKClcbiAgICAgICAgfSk7XG4gICAgfTtcblxuXG4gICAgLy8gTW9kaWZpY2F0aW9uIEZ1bmN0aW9uc1xuICAgIC8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvLyBUaGFua3MgdG8gbGVzcy5qcyBmb3Igc29tZSBvZiB0aGUgYmFzaWNzIGhlcmVcbiAgICAvLyA8aHR0cHM6Ly9naXRodWIuY29tL2Nsb3VkaGVhZC9sZXNzLmpzL2Jsb2IvbWFzdGVyL2xpYi9sZXNzL2Z1bmN0aW9ucy5qcz5cblxuICAgIHRpbnljb2xvci5kZXNhdHVyYXRlID0gZnVuY3Rpb24gKGNvbG9yLCBhbW91bnQpIHtcbiAgICAgICAgYW1vdW50ID0gKGFtb3VudCA9PT0gMCkgPyAwIDogKGFtb3VudCB8fCAxMCk7XG4gICAgICAgIHZhciBoc2wgPSB0aW55Y29sb3IoY29sb3IpLnRvSHNsKCk7XG4gICAgICAgIGhzbC5zIC09IGFtb3VudCAvIDEwMDtcbiAgICAgICAgaHNsLnMgPSBjbGFtcDAxKGhzbC5zKTtcbiAgICAgICAgcmV0dXJuIHRpbnljb2xvcihoc2wpO1xuICAgIH07XG4gICAgdGlueWNvbG9yLnNhdHVyYXRlID0gZnVuY3Rpb24gKGNvbG9yLCBhbW91bnQpIHtcbiAgICAgICAgYW1vdW50ID0gKGFtb3VudCA9PT0gMCkgPyAwIDogKGFtb3VudCB8fCAxMCk7XG4gICAgICAgIHZhciBoc2wgPSB0aW55Y29sb3IoY29sb3IpLnRvSHNsKCk7XG4gICAgICAgIGhzbC5zICs9IGFtb3VudCAvIDEwMDtcbiAgICAgICAgaHNsLnMgPSBjbGFtcDAxKGhzbC5zKTtcbiAgICAgICAgcmV0dXJuIHRpbnljb2xvcihoc2wpO1xuICAgIH07XG4gICAgdGlueWNvbG9yLmdyZXlzY2FsZSA9IGZ1bmN0aW9uKGNvbG9yKSB7XG4gICAgICAgIHJldHVybiB0aW55Y29sb3IuZGVzYXR1cmF0ZShjb2xvciwgMTAwKTtcbiAgICB9O1xuICAgIHRpbnljb2xvci5saWdodGVuID0gZnVuY3Rpb24oY29sb3IsIGFtb3VudCkge1xuICAgICAgICBhbW91bnQgPSAoYW1vdW50ID09PSAwKSA/IDAgOiAoYW1vdW50IHx8IDEwKTtcbiAgICAgICAgdmFyIGhzbCA9IHRpbnljb2xvcihjb2xvcikudG9Ic2woKTtcbiAgICAgICAgaHNsLmwgKz0gYW1vdW50IC8gMTAwO1xuICAgICAgICBoc2wubCA9IGNsYW1wMDEoaHNsLmwpO1xuICAgICAgICByZXR1cm4gdGlueWNvbG9yKGhzbCk7XG4gICAgfTtcbiAgICB0aW55Y29sb3IuYnJpZ2h0ZW4gPSBmdW5jdGlvbihjb2xvciwgYW1vdW50KSB7XG4gICAgICAgIGFtb3VudCA9IChhbW91bnQgPT09IDApID8gMCA6IChhbW91bnQgfHwgMTApO1xuICAgICAgICB2YXIgcmdiID0gdGlueWNvbG9yKGNvbG9yKS50b1JnYigpO1xuICAgICAgICByZ2IuciA9IG1hdGhNYXgoMCwgbWF0aE1pbigyNTUsIHJnYi5yIC0gbWF0aFJvdW5kKDI1NSAqIC0gKGFtb3VudCAvIDEwMCkpKSk7XG4gICAgICAgIHJnYi5nID0gbWF0aE1heCgwLCBtYXRoTWluKDI1NSwgcmdiLmcgLSBtYXRoUm91bmQoMjU1ICogLSAoYW1vdW50IC8gMTAwKSkpKTtcbiAgICAgICAgcmdiLmIgPSBtYXRoTWF4KDAsIG1hdGhNaW4oMjU1LCByZ2IuYiAtIG1hdGhSb3VuZCgyNTUgKiAtIChhbW91bnQgLyAxMDApKSkpO1xuICAgICAgICByZXR1cm4gdGlueWNvbG9yKHJnYik7XG4gICAgfTtcbiAgICB0aW55Y29sb3IuZGFya2VuID0gZnVuY3Rpb24gKGNvbG9yLCBhbW91bnQpIHtcbiAgICAgICAgYW1vdW50ID0gKGFtb3VudCA9PT0gMCkgPyAwIDogKGFtb3VudCB8fCAxMCk7XG4gICAgICAgIHZhciBoc2wgPSB0aW55Y29sb3IoY29sb3IpLnRvSHNsKCk7XG4gICAgICAgIGhzbC5sIC09IGFtb3VudCAvIDEwMDtcbiAgICAgICAgaHNsLmwgPSBjbGFtcDAxKGhzbC5sKTtcbiAgICAgICAgcmV0dXJuIHRpbnljb2xvcihoc2wpO1xuICAgIH07XG4gICAgdGlueWNvbG9yLmNvbXBsZW1lbnQgPSBmdW5jdGlvbihjb2xvcikge1xuICAgICAgICB2YXIgaHNsID0gdGlueWNvbG9yKGNvbG9yKS50b0hzbCgpO1xuICAgICAgICBoc2wuaCA9IChoc2wuaCArIDE4MCkgJSAzNjA7XG4gICAgICAgIHJldHVybiB0aW55Y29sb3IoaHNsKTtcbiAgICB9O1xuXG5cbiAgICAvLyBDb21iaW5hdGlvbiBGdW5jdGlvbnNcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvLyBUaGFua3MgdG8galF1ZXJ5IHhDb2xvciBmb3Igc29tZSBvZiB0aGUgaWRlYXMgYmVoaW5kIHRoZXNlXG4gICAgLy8gPGh0dHBzOi8vZ2l0aHViLmNvbS9pbmZ1c2lvbi9qUXVlcnkteGNvbG9yL2Jsb2IvbWFzdGVyL2pxdWVyeS54Y29sb3IuanM+XG5cbiAgICB0aW55Y29sb3IudHJpYWQgPSBmdW5jdGlvbihjb2xvcikge1xuICAgICAgICB2YXIgaHNsID0gdGlueWNvbG9yKGNvbG9yKS50b0hzbCgpO1xuICAgICAgICB2YXIgaCA9IGhzbC5oO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgdGlueWNvbG9yKGNvbG9yKSxcbiAgICAgICAgICAgIHRpbnljb2xvcih7IGg6IChoICsgMTIwKSAlIDM2MCwgczogaHNsLnMsIGw6IGhzbC5sIH0pLFxuICAgICAgICAgICAgdGlueWNvbG9yKHsgaDogKGggKyAyNDApICUgMzYwLCBzOiBoc2wucywgbDogaHNsLmwgfSlcbiAgICAgICAgXTtcbiAgICB9O1xuICAgIHRpbnljb2xvci50ZXRyYWQgPSBmdW5jdGlvbihjb2xvcikge1xuICAgICAgICB2YXIgaHNsID0gdGlueWNvbG9yKGNvbG9yKS50b0hzbCgpO1xuICAgICAgICB2YXIgaCA9IGhzbC5oO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgdGlueWNvbG9yKGNvbG9yKSxcbiAgICAgICAgICAgIHRpbnljb2xvcih7IGg6IChoICsgOTApICUgMzYwLCBzOiBoc2wucywgbDogaHNsLmwgfSksXG4gICAgICAgICAgICB0aW55Y29sb3IoeyBoOiAoaCArIDE4MCkgJSAzNjAsIHM6IGhzbC5zLCBsOiBoc2wubCB9KSxcbiAgICAgICAgICAgIHRpbnljb2xvcih7IGg6IChoICsgMjcwKSAlIDM2MCwgczogaHNsLnMsIGw6IGhzbC5sIH0pXG4gICAgICAgIF07XG4gICAgfTtcbiAgICB0aW55Y29sb3Iuc3BsaXRjb21wbGVtZW50ID0gZnVuY3Rpb24oY29sb3IpIHtcbiAgICAgICAgdmFyIGhzbCA9IHRpbnljb2xvcihjb2xvcikudG9Ic2woKTtcbiAgICAgICAgdmFyIGggPSBoc2wuaDtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIHRpbnljb2xvcihjb2xvciksXG4gICAgICAgICAgICB0aW55Y29sb3IoeyBoOiAoaCArIDcyKSAlIDM2MCwgczogaHNsLnMsIGw6IGhzbC5sfSksXG4gICAgICAgICAgICB0aW55Y29sb3IoeyBoOiAoaCArIDIxNikgJSAzNjAsIHM6IGhzbC5zLCBsOiBoc2wubH0pXG4gICAgICAgIF07XG4gICAgfTtcbiAgICB0aW55Y29sb3IuYW5hbG9nb3VzID0gZnVuY3Rpb24oY29sb3IsIHJlc3VsdHMsIHNsaWNlcykge1xuICAgICAgICByZXN1bHRzID0gcmVzdWx0cyB8fCA2O1xuICAgICAgICBzbGljZXMgPSBzbGljZXMgfHwgMzA7XG5cbiAgICAgICAgdmFyIGhzbCA9IHRpbnljb2xvcihjb2xvcikudG9Ic2woKTtcbiAgICAgICAgdmFyIHBhcnQgPSAzNjAgLyBzbGljZXM7XG4gICAgICAgIHZhciByZXQgPSBbdGlueWNvbG9yKGNvbG9yKV07XG5cbiAgICAgICAgZm9yIChoc2wuaCA9ICgoaHNsLmggLSAocGFydCAqIHJlc3VsdHMgPj4gMSkpICsgNzIwKSAlIDM2MDsgLS1yZXN1bHRzOyApIHtcbiAgICAgICAgICAgIGhzbC5oID0gKGhzbC5oICsgcGFydCkgJSAzNjA7XG4gICAgICAgICAgICByZXQucHVzaCh0aW55Y29sb3IoaHNsKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJldDtcbiAgICB9O1xuICAgIHRpbnljb2xvci5tb25vY2hyb21hdGljID0gZnVuY3Rpb24oY29sb3IsIHJlc3VsdHMpIHtcbiAgICAgICAgcmVzdWx0cyA9IHJlc3VsdHMgfHwgNjtcbiAgICAgICAgdmFyIGhzdiA9IHRpbnljb2xvcihjb2xvcikudG9Ic3YoKTtcbiAgICAgICAgdmFyIGggPSBoc3YuaCwgcyA9IGhzdi5zLCB2ID0gaHN2LnY7XG4gICAgICAgIHZhciByZXQgPSBbXTtcbiAgICAgICAgdmFyIG1vZGlmaWNhdGlvbiA9IDEgLyByZXN1bHRzO1xuXG4gICAgICAgIHdoaWxlIChyZXN1bHRzLS0pIHtcbiAgICAgICAgICAgIHJldC5wdXNoKHRpbnljb2xvcih7IGg6IGgsIHM6IHMsIHY6IHZ9KSk7XG4gICAgICAgICAgICB2ID0gKHYgKyBtb2RpZmljYXRpb24pICUgMTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXQ7XG4gICAgfTtcblxuXG4gICAgLy8gUmVhZGFiaWxpdHkgRnVuY3Rpb25zXG4gICAgLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgLy8gPGh0dHA6Ly93d3cudzMub3JnL1RSL0FFUlQjY29sb3ItY29udHJhc3Q+XG5cbiAgICAvLyBgcmVhZGFiaWxpdHlgXG4gICAgLy8gQW5hbHl6ZSB0aGUgMiBjb2xvcnMgYW5kIHJldHVybnMgYW4gb2JqZWN0IHdpdGggdGhlIGZvbGxvd2luZyBwcm9wZXJ0aWVzOlxuICAgIC8vICAgIGBicmlnaHRuZXNzYDogZGlmZmVyZW5jZSBpbiBicmlnaHRuZXNzIGJldHdlZW4gdGhlIHR3byBjb2xvcnNcbiAgICAvLyAgICBgY29sb3JgOiBkaWZmZXJlbmNlIGluIGNvbG9yL2h1ZSBiZXR3ZWVuIHRoZSB0d28gY29sb3JzXG4gICAgdGlueWNvbG9yLnJlYWRhYmlsaXR5ID0gZnVuY3Rpb24oY29sb3IxLCBjb2xvcjIpIHtcbiAgICAgICAgdmFyIGEgPSB0aW55Y29sb3IoY29sb3IxKS50b1JnYigpO1xuICAgICAgICB2YXIgYiA9IHRpbnljb2xvcihjb2xvcjIpLnRvUmdiKCk7XG4gICAgICAgIHZhciBicmlnaHRuZXNzQSA9IChhLnIgKiAyOTkgKyBhLmcgKiA1ODcgKyBhLmIgKiAxMTQpIC8gMTAwMDtcbiAgICAgICAgdmFyIGJyaWdodG5lc3NCID0gKGIuciAqIDI5OSArIGIuZyAqIDU4NyArIGIuYiAqIDExNCkgLyAxMDAwO1xuICAgICAgICB2YXIgY29sb3JEaWZmID0gKFxuICAgICAgICAgICAgTWF0aC5tYXgoYS5yLCBiLnIpIC0gTWF0aC5taW4oYS5yLCBiLnIpICtcbiAgICAgICAgICAgIE1hdGgubWF4KGEuZywgYi5nKSAtIE1hdGgubWluKGEuZywgYi5nKSArXG4gICAgICAgICAgICBNYXRoLm1heChhLmIsIGIuYikgLSBNYXRoLm1pbihhLmIsIGIuYilcbiAgICAgICAgKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYnJpZ2h0bmVzczogTWF0aC5hYnMoYnJpZ2h0bmVzc0EgLSBicmlnaHRuZXNzQiksXG4gICAgICAgICAgICBjb2xvcjogY29sb3JEaWZmXG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIC8vIGByZWFkYWJsZWBcbiAgICAvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9BRVJUI2NvbG9yLWNvbnRyYXN0XG4gICAgLy8gRW5zdXJlIHRoYXQgZm9yZWdyb3VuZCBhbmQgYmFja2dyb3VuZCBjb2xvciBjb21iaW5hdGlvbnMgcHJvdmlkZSBzdWZmaWNpZW50IGNvbnRyYXN0LlxuICAgIC8vICpFeGFtcGxlKlxuICAgIC8vICAgIHRpbnljb2xvci5yZWFkYWJsZShcIiMwMDBcIiwgXCIjMTExXCIpID0+IGZhbHNlXG4gICAgdGlueWNvbG9yLnJlYWRhYmxlID0gZnVuY3Rpb24oY29sb3IxLCBjb2xvcjIpIHtcbiAgICAgICAgdmFyIHJlYWRhYmlsaXR5ID0gdGlueWNvbG9yLnJlYWRhYmlsaXR5KGNvbG9yMSwgY29sb3IyKTtcbiAgICAgICAgcmV0dXJuIHJlYWRhYmlsaXR5LmJyaWdodG5lc3MgPiAxMjUgJiYgcmVhZGFiaWxpdHkuY29sb3IgPiA1MDA7XG4gICAgfTtcblxuICAgIC8vIGBtb3N0UmVhZGFibGVgXG4gICAgLy8gR2l2ZW4gYSBiYXNlIGNvbG9yIGFuZCBhIGxpc3Qgb2YgcG9zc2libGUgZm9yZWdyb3VuZCBvciBiYWNrZ3JvdW5kXG4gICAgLy8gY29sb3JzIGZvciB0aGF0IGJhc2UsIHJldHVybnMgdGhlIG1vc3QgcmVhZGFibGUgY29sb3IuXG4gICAgLy8gKkV4YW1wbGUqXG4gICAgLy8gICAgdGlueWNvbG9yLm1vc3RSZWFkYWJsZShcIiMxMjNcIiwgW1wiI2ZmZlwiLCBcIiMwMDBcIl0pID0+IFwiIzAwMFwiXG4gICAgdGlueWNvbG9yLm1vc3RSZWFkYWJsZSA9IGZ1bmN0aW9uKGJhc2VDb2xvciwgY29sb3JMaXN0KSB7XG4gICAgICAgIHZhciBiZXN0Q29sb3IgPSBudWxsO1xuICAgICAgICB2YXIgYmVzdFNjb3JlID0gMDtcbiAgICAgICAgdmFyIGJlc3RJc1JlYWRhYmxlID0gZmFsc2U7XG4gICAgICAgIGZvciAodmFyIGk9MDsgaSA8IGNvbG9yTGlzdC5sZW5ndGg7IGkrKykge1xuXG4gICAgICAgICAgICAvLyBXZSBub3JtYWxpemUgYm90aCBhcm91bmQgdGhlIFwiYWNjZXB0YWJsZVwiIGJyZWFraW5nIHBvaW50LFxuICAgICAgICAgICAgLy8gYnV0IHJhbmsgYnJpZ2h0bmVzcyBjb25zdHJhc3QgaGlnaGVyIHRoYW4gaHVlLlxuXG4gICAgICAgICAgICB2YXIgcmVhZGFiaWxpdHkgPSB0aW55Y29sb3IucmVhZGFiaWxpdHkoYmFzZUNvbG9yLCBjb2xvckxpc3RbaV0pO1xuICAgICAgICAgICAgdmFyIHJlYWRhYmxlID0gcmVhZGFiaWxpdHkuYnJpZ2h0bmVzcyA+IDEyNSAmJiByZWFkYWJpbGl0eS5jb2xvciA+IDUwMDtcbiAgICAgICAgICAgIHZhciBzY29yZSA9IDMgKiAocmVhZGFiaWxpdHkuYnJpZ2h0bmVzcyAvIDEyNSkgKyAocmVhZGFiaWxpdHkuY29sb3IgLyA1MDApO1xuXG4gICAgICAgICAgICBpZiAoKHJlYWRhYmxlICYmICEgYmVzdElzUmVhZGFibGUpIHx8XG4gICAgICAgICAgICAgICAgKHJlYWRhYmxlICYmIGJlc3RJc1JlYWRhYmxlICYmIHNjb3JlID4gYmVzdFNjb3JlKSB8fFxuICAgICAgICAgICAgICAgICgoISByZWFkYWJsZSkgJiYgKCEgYmVzdElzUmVhZGFibGUpICYmIHNjb3JlID4gYmVzdFNjb3JlKSkge1xuICAgICAgICAgICAgICAgIGJlc3RJc1JlYWRhYmxlID0gcmVhZGFibGU7XG4gICAgICAgICAgICAgICAgYmVzdFNjb3JlID0gc2NvcmU7XG4gICAgICAgICAgICAgICAgYmVzdENvbG9yID0gdGlueWNvbG9yKGNvbG9yTGlzdFtpXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJlc3RDb2xvcjtcbiAgICB9O1xuXG5cbiAgICAvLyBCaWcgTGlzdCBvZiBDb2xvcnNcbiAgICAvLyAtLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvLyA8aHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1jb2xvci8jc3ZnLWNvbG9yPlxuICAgIHZhciBuYW1lcyA9IHRpbnljb2xvci5uYW1lcyA9IHtcbiAgICAgICAgYWxpY2VibHVlOiBcImYwZjhmZlwiLFxuICAgICAgICBhbnRpcXVld2hpdGU6IFwiZmFlYmQ3XCIsXG4gICAgICAgIGFxdWE6IFwiMGZmXCIsXG4gICAgICAgIGFxdWFtYXJpbmU6IFwiN2ZmZmQ0XCIsXG4gICAgICAgIGF6dXJlOiBcImYwZmZmZlwiLFxuICAgICAgICBiZWlnZTogXCJmNWY1ZGNcIixcbiAgICAgICAgYmlzcXVlOiBcImZmZTRjNFwiLFxuICAgICAgICBibGFjazogXCIwMDBcIixcbiAgICAgICAgYmxhbmNoZWRhbG1vbmQ6IFwiZmZlYmNkXCIsXG4gICAgICAgIGJsdWU6IFwiMDBmXCIsXG4gICAgICAgIGJsdWV2aW9sZXQ6IFwiOGEyYmUyXCIsXG4gICAgICAgIGJyb3duOiBcImE1MmEyYVwiLFxuICAgICAgICBidXJseXdvb2Q6IFwiZGViODg3XCIsXG4gICAgICAgIGJ1cm50c2llbm5hOiBcImVhN2U1ZFwiLFxuICAgICAgICBjYWRldGJsdWU6IFwiNWY5ZWEwXCIsXG4gICAgICAgIGNoYXJ0cmV1c2U6IFwiN2ZmZjAwXCIsXG4gICAgICAgIGNob2NvbGF0ZTogXCJkMjY5MWVcIixcbiAgICAgICAgY29yYWw6IFwiZmY3ZjUwXCIsXG4gICAgICAgIGNvcm5mbG93ZXJibHVlOiBcIjY0OTVlZFwiLFxuICAgICAgICBjb3Juc2lsazogXCJmZmY4ZGNcIixcbiAgICAgICAgY3JpbXNvbjogXCJkYzE0M2NcIixcbiAgICAgICAgY3lhbjogXCIwZmZcIixcbiAgICAgICAgZGFya2JsdWU6IFwiMDAwMDhiXCIsXG4gICAgICAgIGRhcmtjeWFuOiBcIjAwOGI4YlwiLFxuICAgICAgICBkYXJrZ29sZGVucm9kOiBcImI4ODYwYlwiLFxuICAgICAgICBkYXJrZ3JheTogXCJhOWE5YTlcIixcbiAgICAgICAgZGFya2dyZWVuOiBcIjAwNjQwMFwiLFxuICAgICAgICBkYXJrZ3JleTogXCJhOWE5YTlcIixcbiAgICAgICAgZGFya2toYWtpOiBcImJkYjc2YlwiLFxuICAgICAgICBkYXJrbWFnZW50YTogXCI4YjAwOGJcIixcbiAgICAgICAgZGFya29saXZlZ3JlZW46IFwiNTU2YjJmXCIsXG4gICAgICAgIGRhcmtvcmFuZ2U6IFwiZmY4YzAwXCIsXG4gICAgICAgIGRhcmtvcmNoaWQ6IFwiOTkzMmNjXCIsXG4gICAgICAgIGRhcmtyZWQ6IFwiOGIwMDAwXCIsXG4gICAgICAgIGRhcmtzYWxtb246IFwiZTk5NjdhXCIsXG4gICAgICAgIGRhcmtzZWFncmVlbjogXCI4ZmJjOGZcIixcbiAgICAgICAgZGFya3NsYXRlYmx1ZTogXCI0ODNkOGJcIixcbiAgICAgICAgZGFya3NsYXRlZ3JheTogXCIyZjRmNGZcIixcbiAgICAgICAgZGFya3NsYXRlZ3JleTogXCIyZjRmNGZcIixcbiAgICAgICAgZGFya3R1cnF1b2lzZTogXCIwMGNlZDFcIixcbiAgICAgICAgZGFya3Zpb2xldDogXCI5NDAwZDNcIixcbiAgICAgICAgZGVlcHBpbms6IFwiZmYxNDkzXCIsXG4gICAgICAgIGRlZXBza3libHVlOiBcIjAwYmZmZlwiLFxuICAgICAgICBkaW1ncmF5OiBcIjY5Njk2OVwiLFxuICAgICAgICBkaW1ncmV5OiBcIjY5Njk2OVwiLFxuICAgICAgICBkb2RnZXJibHVlOiBcIjFlOTBmZlwiLFxuICAgICAgICBmaXJlYnJpY2s6IFwiYjIyMjIyXCIsXG4gICAgICAgIGZsb3JhbHdoaXRlOiBcImZmZmFmMFwiLFxuICAgICAgICBmb3Jlc3RncmVlbjogXCIyMjhiMjJcIixcbiAgICAgICAgZnVjaHNpYTogXCJmMGZcIixcbiAgICAgICAgZ2FpbnNib3JvOiBcImRjZGNkY1wiLFxuICAgICAgICBnaG9zdHdoaXRlOiBcImY4ZjhmZlwiLFxuICAgICAgICBnb2xkOiBcImZmZDcwMFwiLFxuICAgICAgICBnb2xkZW5yb2Q6IFwiZGFhNTIwXCIsXG4gICAgICAgIGdyYXk6IFwiODA4MDgwXCIsXG4gICAgICAgIGdyZWVuOiBcIjAwODAwMFwiLFxuICAgICAgICBncmVlbnllbGxvdzogXCJhZGZmMmZcIixcbiAgICAgICAgZ3JleTogXCI4MDgwODBcIixcbiAgICAgICAgaG9uZXlkZXc6IFwiZjBmZmYwXCIsXG4gICAgICAgIGhvdHBpbms6IFwiZmY2OWI0XCIsXG4gICAgICAgIGluZGlhbnJlZDogXCJjZDVjNWNcIixcbiAgICAgICAgaW5kaWdvOiBcIjRiMDA4MlwiLFxuICAgICAgICBpdm9yeTogXCJmZmZmZjBcIixcbiAgICAgICAga2hha2k6IFwiZjBlNjhjXCIsXG4gICAgICAgIGxhdmVuZGVyOiBcImU2ZTZmYVwiLFxuICAgICAgICBsYXZlbmRlcmJsdXNoOiBcImZmZjBmNVwiLFxuICAgICAgICBsYXduZ3JlZW46IFwiN2NmYzAwXCIsXG4gICAgICAgIGxlbW9uY2hpZmZvbjogXCJmZmZhY2RcIixcbiAgICAgICAgbGlnaHRibHVlOiBcImFkZDhlNlwiLFxuICAgICAgICBsaWdodGNvcmFsOiBcImYwODA4MFwiLFxuICAgICAgICBsaWdodGN5YW46IFwiZTBmZmZmXCIsXG4gICAgICAgIGxpZ2h0Z29sZGVucm9keWVsbG93OiBcImZhZmFkMlwiLFxuICAgICAgICBsaWdodGdyYXk6IFwiZDNkM2QzXCIsXG4gICAgICAgIGxpZ2h0Z3JlZW46IFwiOTBlZTkwXCIsXG4gICAgICAgIGxpZ2h0Z3JleTogXCJkM2QzZDNcIixcbiAgICAgICAgbGlnaHRwaW5rOiBcImZmYjZjMVwiLFxuICAgICAgICBsaWdodHNhbG1vbjogXCJmZmEwN2FcIixcbiAgICAgICAgbGlnaHRzZWFncmVlbjogXCIyMGIyYWFcIixcbiAgICAgICAgbGlnaHRza3libHVlOiBcIjg3Y2VmYVwiLFxuICAgICAgICBsaWdodHNsYXRlZ3JheTogXCI3ODlcIixcbiAgICAgICAgbGlnaHRzbGF0ZWdyZXk6IFwiNzg5XCIsXG4gICAgICAgIGxpZ2h0c3RlZWxibHVlOiBcImIwYzRkZVwiLFxuICAgICAgICBsaWdodHllbGxvdzogXCJmZmZmZTBcIixcbiAgICAgICAgbGltZTogXCIwZjBcIixcbiAgICAgICAgbGltZWdyZWVuOiBcIjMyY2QzMlwiLFxuICAgICAgICBsaW5lbjogXCJmYWYwZTZcIixcbiAgICAgICAgbWFnZW50YTogXCJmMGZcIixcbiAgICAgICAgbWFyb29uOiBcIjgwMDAwMFwiLFxuICAgICAgICBtZWRpdW1hcXVhbWFyaW5lOiBcIjY2Y2RhYVwiLFxuICAgICAgICBtZWRpdW1ibHVlOiBcIjAwMDBjZFwiLFxuICAgICAgICBtZWRpdW1vcmNoaWQ6IFwiYmE1NWQzXCIsXG4gICAgICAgIG1lZGl1bXB1cnBsZTogXCI5MzcwZGJcIixcbiAgICAgICAgbWVkaXVtc2VhZ3JlZW46IFwiM2NiMzcxXCIsXG4gICAgICAgIG1lZGl1bXNsYXRlYmx1ZTogXCI3YjY4ZWVcIixcbiAgICAgICAgbWVkaXVtc3ByaW5nZ3JlZW46IFwiMDBmYTlhXCIsXG4gICAgICAgIG1lZGl1bXR1cnF1b2lzZTogXCI0OGQxY2NcIixcbiAgICAgICAgbWVkaXVtdmlvbGV0cmVkOiBcImM3MTU4NVwiLFxuICAgICAgICBtaWRuaWdodGJsdWU6IFwiMTkxOTcwXCIsXG4gICAgICAgIG1pbnRjcmVhbTogXCJmNWZmZmFcIixcbiAgICAgICAgbWlzdHlyb3NlOiBcImZmZTRlMVwiLFxuICAgICAgICBtb2NjYXNpbjogXCJmZmU0YjVcIixcbiAgICAgICAgbmF2YWpvd2hpdGU6IFwiZmZkZWFkXCIsXG4gICAgICAgIG5hdnk6IFwiMDAwMDgwXCIsXG4gICAgICAgIG9sZGxhY2U6IFwiZmRmNWU2XCIsXG4gICAgICAgIG9saXZlOiBcIjgwODAwMFwiLFxuICAgICAgICBvbGl2ZWRyYWI6IFwiNmI4ZTIzXCIsXG4gICAgICAgIG9yYW5nZTogXCJmZmE1MDBcIixcbiAgICAgICAgb3JhbmdlcmVkOiBcImZmNDUwMFwiLFxuICAgICAgICBvcmNoaWQ6IFwiZGE3MGQ2XCIsXG4gICAgICAgIHBhbGVnb2xkZW5yb2Q6IFwiZWVlOGFhXCIsXG4gICAgICAgIHBhbGVncmVlbjogXCI5OGZiOThcIixcbiAgICAgICAgcGFsZXR1cnF1b2lzZTogXCJhZmVlZWVcIixcbiAgICAgICAgcGFsZXZpb2xldHJlZDogXCJkYjcwOTNcIixcbiAgICAgICAgcGFwYXlhd2hpcDogXCJmZmVmZDVcIixcbiAgICAgICAgcGVhY2hwdWZmOiBcImZmZGFiOVwiLFxuICAgICAgICBwZXJ1OiBcImNkODUzZlwiLFxuICAgICAgICBwaW5rOiBcImZmYzBjYlwiLFxuICAgICAgICBwbHVtOiBcImRkYTBkZFwiLFxuICAgICAgICBwb3dkZXJibHVlOiBcImIwZTBlNlwiLFxuICAgICAgICBwdXJwbGU6IFwiODAwMDgwXCIsXG4gICAgICAgIHJlZDogXCJmMDBcIixcbiAgICAgICAgcm9zeWJyb3duOiBcImJjOGY4ZlwiLFxuICAgICAgICByb3lhbGJsdWU6IFwiNDE2OWUxXCIsXG4gICAgICAgIHNhZGRsZWJyb3duOiBcIjhiNDUxM1wiLFxuICAgICAgICBzYWxtb246IFwiZmE4MDcyXCIsXG4gICAgICAgIHNhbmR5YnJvd246IFwiZjRhNDYwXCIsXG4gICAgICAgIHNlYWdyZWVuOiBcIjJlOGI1N1wiLFxuICAgICAgICBzZWFzaGVsbDogXCJmZmY1ZWVcIixcbiAgICAgICAgc2llbm5hOiBcImEwNTIyZFwiLFxuICAgICAgICBzaWx2ZXI6IFwiYzBjMGMwXCIsXG4gICAgICAgIHNreWJsdWU6IFwiODdjZWViXCIsXG4gICAgICAgIHNsYXRlYmx1ZTogXCI2YTVhY2RcIixcbiAgICAgICAgc2xhdGVncmF5OiBcIjcwODA5MFwiLFxuICAgICAgICBzbGF0ZWdyZXk6IFwiNzA4MDkwXCIsXG4gICAgICAgIHNub3c6IFwiZmZmYWZhXCIsXG4gICAgICAgIHNwcmluZ2dyZWVuOiBcIjAwZmY3ZlwiLFxuICAgICAgICBzdGVlbGJsdWU6IFwiNDY4MmI0XCIsXG4gICAgICAgIHRhbjogXCJkMmI0OGNcIixcbiAgICAgICAgdGVhbDogXCIwMDgwODBcIixcbiAgICAgICAgdGhpc3RsZTogXCJkOGJmZDhcIixcbiAgICAgICAgdG9tYXRvOiBcImZmNjM0N1wiLFxuICAgICAgICB0dXJxdW9pc2U6IFwiNDBlMGQwXCIsXG4gICAgICAgIHZpb2xldDogXCJlZTgyZWVcIixcbiAgICAgICAgd2hlYXQ6IFwiZjVkZWIzXCIsXG4gICAgICAgIHdoaXRlOiBcImZmZlwiLFxuICAgICAgICB3aGl0ZXNtb2tlOiBcImY1ZjVmNVwiLFxuICAgICAgICB5ZWxsb3c6IFwiZmYwXCIsXG4gICAgICAgIHllbGxvd2dyZWVuOiBcIjlhY2QzMlwiXG4gICAgfTtcblxuICAgIC8vIE1ha2UgaXQgZWFzeSB0byBhY2Nlc3MgY29sb3JzIHZpYSBgaGV4TmFtZXNbaGV4XWBcbiAgICB2YXIgaGV4TmFtZXMgPSB0aW55Y29sb3IuaGV4TmFtZXMgPSBmbGlwKG5hbWVzKTtcblxuXG4gICAgLy8gVXRpbGl0aWVzXG4gICAgLy8gLS0tLS0tLS0tXG5cbiAgICAvLyBgeyAnbmFtZTEnOiAndmFsMScgfWAgYmVjb21lcyBgeyAndmFsMSc6ICduYW1lMScgfWBcbiAgICBmdW5jdGlvbiBmbGlwKG8pIHtcbiAgICAgICAgdmFyIGZsaXBwZWQgPSB7IH07XG4gICAgICAgIGZvciAodmFyIGkgaW4gbykge1xuICAgICAgICAgICAgaWYgKG8uaGFzT3duUHJvcGVydHkoaSkpIHtcbiAgICAgICAgICAgICAgICBmbGlwcGVkW29baV1dID0gaTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmxpcHBlZDtcbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gYSB2YWxpZCBhbHBoYSB2YWx1ZSBbMCwxXSB3aXRoIGFsbCBpbnZhbGlkIHZhbHVlcyBiZWluZyBzZXQgdG8gMVxuICAgIGZ1bmN0aW9uIGJvdW5kQWxwaGEoYSkge1xuICAgICAgICBhID0gcGFyc2VGbG9hdChhKTtcblxuICAgICAgICBpZiAoaXNOYU4oYSkgfHwgYSA8IDAgfHwgYSA+IDEpIHtcbiAgICAgICAgICAgIGEgPSAxO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGE7XG4gICAgfVxuXG4gICAgLy8gVGFrZSBpbnB1dCBmcm9tIFswLCBuXSBhbmQgcmV0dXJuIGl0IGFzIFswLCAxXVxuICAgIGZ1bmN0aW9uIGJvdW5kMDEobiwgbWF4KSB7XG4gICAgICAgIGlmIChpc09uZVBvaW50WmVybyhuKSkgeyBuID0gXCIxMDAlXCI7IH1cblxuICAgICAgICB2YXIgcHJvY2Vzc1BlcmNlbnQgPSBpc1BlcmNlbnRhZ2Uobik7XG4gICAgICAgIG4gPSBtYXRoTWluKG1heCwgbWF0aE1heCgwLCBwYXJzZUZsb2F0KG4pKSk7XG5cbiAgICAgICAgLy8gQXV0b21hdGljYWxseSBjb252ZXJ0IHBlcmNlbnRhZ2UgaW50byBudW1iZXJcbiAgICAgICAgaWYgKHByb2Nlc3NQZXJjZW50KSB7XG4gICAgICAgICAgICBuID0gcGFyc2VJbnQobiAqIG1heCwgMTApIC8gMTAwO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSGFuZGxlIGZsb2F0aW5nIHBvaW50IHJvdW5kaW5nIGVycm9yc1xuICAgICAgICBpZiAoKG1hdGguYWJzKG4gLSBtYXgpIDwgMC4wMDAwMDEpKSB7XG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENvbnZlcnQgaW50byBbMCwgMV0gcmFuZ2UgaWYgaXQgaXNuJ3QgYWxyZWFkeVxuICAgICAgICByZXR1cm4gKG4gJSBtYXgpIC8gcGFyc2VGbG9hdChtYXgpO1xuICAgIH1cblxuICAgIC8vIEZvcmNlIGEgbnVtYmVyIGJldHdlZW4gMCBhbmQgMVxuICAgIGZ1bmN0aW9uIGNsYW1wMDEodmFsKSB7XG4gICAgICAgIHJldHVybiBtYXRoTWluKDEsIG1hdGhNYXgoMCwgdmFsKSk7XG4gICAgfVxuXG4gICAgLy8gUGFyc2UgYSBiYXNlLTE2IGhleCB2YWx1ZSBpbnRvIGEgYmFzZS0xMCBpbnRlZ2VyXG4gICAgZnVuY3Rpb24gcGFyc2VJbnRGcm9tSGV4KHZhbCkge1xuICAgICAgICByZXR1cm4gcGFyc2VJbnQodmFsLCAxNik7XG4gICAgfVxuXG4gICAgLy8gTmVlZCB0byBoYW5kbGUgMS4wIGFzIDEwMCUsIHNpbmNlIG9uY2UgaXQgaXMgYSBudW1iZXIsIHRoZXJlIGlzIG5vIGRpZmZlcmVuY2UgYmV0d2VlbiBpdCBhbmQgMVxuICAgIC8vIDxodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzc0MjIwNzIvamF2YXNjcmlwdC1ob3ctdG8tZGV0ZWN0LW51bWJlci1hcy1hLWRlY2ltYWwtaW5jbHVkaW5nLTEtMD5cbiAgICBmdW5jdGlvbiBpc09uZVBvaW50WmVybyhuKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2YgbiA9PSBcInN0cmluZ1wiICYmIG4uaW5kZXhPZignLicpICE9IC0xICYmIHBhcnNlRmxvYXQobikgPT09IDE7XG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgdG8gc2VlIGlmIHN0cmluZyBwYXNzZWQgaW4gaXMgYSBwZXJjZW50YWdlXG4gICAgZnVuY3Rpb24gaXNQZXJjZW50YWdlKG4pIHtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBuID09PSBcInN0cmluZ1wiICYmIG4uaW5kZXhPZignJScpICE9IC0xO1xuICAgIH1cblxuICAgIC8vIEZvcmNlIGEgaGV4IHZhbHVlIHRvIGhhdmUgMiBjaGFyYWN0ZXJzXG4gICAgZnVuY3Rpb24gcGFkMihjKSB7XG4gICAgICAgIHJldHVybiBjLmxlbmd0aCA9PSAxID8gJzAnICsgYyA6ICcnICsgYztcbiAgICB9XG5cbiAgICAvLyBSZXBsYWNlIGEgZGVjaW1hbCB3aXRoIGl0J3MgcGVyY2VudGFnZSB2YWx1ZVxuICAgIGZ1bmN0aW9uIGNvbnZlcnRUb1BlcmNlbnRhZ2Uobikge1xuICAgICAgICBpZiAobiA8PSAxKSB7XG4gICAgICAgICAgICBuID0gKG4gKiAxMDApICsgXCIlXCI7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbjtcbiAgICB9XG5cbiAgICAvLyBDb252ZXJ0cyBhIGRlY2ltYWwgdG8gYSBoZXggdmFsdWVcbiAgICBmdW5jdGlvbiBjb252ZXJ0RGVjaW1hbFRvSGV4KGQpIHtcbiAgICAgICAgcmV0dXJuIE1hdGgucm91bmQocGFyc2VGbG9hdChkKSAqIDI1NSkudG9TdHJpbmcoMTYpO1xuICAgIH1cbiAgICAvLyBDb252ZXJ0cyBhIGhleCB2YWx1ZSB0byBhIGRlY2ltYWxcbiAgICBmdW5jdGlvbiBjb252ZXJ0SGV4VG9EZWNpbWFsKGgpIHtcbiAgICAgICAgcmV0dXJuIChwYXJzZUludEZyb21IZXgoaCkgLyAyNTUpO1xuICAgIH1cblxuICAgIHZhciBtYXRjaGVycyA9IChmdW5jdGlvbigpIHtcblxuICAgICAgICAvLyA8aHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy12YWx1ZXMvI2ludGVnZXJzPlxuICAgICAgICB2YXIgQ1NTX0lOVEVHRVIgPSBcIlstXFxcXCtdP1xcXFxkKyU/XCI7XG5cbiAgICAgICAgLy8gPGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtdmFsdWVzLyNudW1iZXItdmFsdWU+XG4gICAgICAgIHZhciBDU1NfTlVNQkVSID0gXCJbLVxcXFwrXT9cXFxcZCpcXFxcLlxcXFxkKyU/XCI7XG5cbiAgICAgICAgLy8gQWxsb3cgcG9zaXRpdmUvbmVnYXRpdmUgaW50ZWdlci9udW1iZXIuICBEb24ndCBjYXB0dXJlIHRoZSBlaXRoZXIvb3IsIGp1c3QgdGhlIGVudGlyZSBvdXRjb21lLlxuICAgICAgICB2YXIgQ1NTX1VOSVQgPSBcIig/OlwiICsgQ1NTX05VTUJFUiArIFwiKXwoPzpcIiArIENTU19JTlRFR0VSICsgXCIpXCI7XG5cbiAgICAgICAgLy8gQWN0dWFsIG1hdGNoaW5nLlxuICAgICAgICAvLyBQYXJlbnRoZXNlcyBhbmQgY29tbWFzIGFyZSBvcHRpb25hbCwgYnV0IG5vdCByZXF1aXJlZC5cbiAgICAgICAgLy8gV2hpdGVzcGFjZSBjYW4gdGFrZSB0aGUgcGxhY2Ugb2YgY29tbWFzIG9yIG9wZW5pbmcgcGFyZW5cbiAgICAgICAgdmFyIFBFUk1JU1NJVkVfTUFUQ0gzID0gXCJbXFxcXHN8XFxcXChdKyhcIiArIENTU19VTklUICsgXCIpWyx8XFxcXHNdKyhcIiArIENTU19VTklUICsgXCIpWyx8XFxcXHNdKyhcIiArIENTU19VTklUICsgXCIpXFxcXHMqXFxcXCk/XCI7XG4gICAgICAgIHZhciBQRVJNSVNTSVZFX01BVENINCA9IFwiW1xcXFxzfFxcXFwoXSsoXCIgKyBDU1NfVU5JVCArIFwiKVssfFxcXFxzXSsoXCIgKyBDU1NfVU5JVCArIFwiKVssfFxcXFxzXSsoXCIgKyBDU1NfVU5JVCArIFwiKVssfFxcXFxzXSsoXCIgKyBDU1NfVU5JVCArIFwiKVxcXFxzKlxcXFwpP1wiO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByZ2I6IG5ldyBSZWdFeHAoXCJyZ2JcIiArIFBFUk1JU1NJVkVfTUFUQ0gzKSxcbiAgICAgICAgICAgIHJnYmE6IG5ldyBSZWdFeHAoXCJyZ2JhXCIgKyBQRVJNSVNTSVZFX01BVENINCksXG4gICAgICAgICAgICBoc2w6IG5ldyBSZWdFeHAoXCJoc2xcIiArIFBFUk1JU1NJVkVfTUFUQ0gzKSxcbiAgICAgICAgICAgIGhzbGE6IG5ldyBSZWdFeHAoXCJoc2xhXCIgKyBQRVJNSVNTSVZFX01BVENINCksXG4gICAgICAgICAgICBoc3Y6IG5ldyBSZWdFeHAoXCJoc3ZcIiArIFBFUk1JU1NJVkVfTUFUQ0gzKSxcbiAgICAgICAgICAgIGhleDM6IC9eKFswLTlhLWZBLUZdezF9KShbMC05YS1mQS1GXXsxfSkoWzAtOWEtZkEtRl17MX0pJC8sXG4gICAgICAgICAgICBoZXg2OiAvXihbMC05YS1mQS1GXXsyfSkoWzAtOWEtZkEtRl17Mn0pKFswLTlhLWZBLUZdezJ9KSQvLFxuICAgICAgICAgICAgaGV4ODogL14oWzAtOWEtZkEtRl17Mn0pKFswLTlhLWZBLUZdezJ9KShbMC05YS1mQS1GXXsyfSkoWzAtOWEtZkEtRl17Mn0pJC9cbiAgICAgICAgfTtcbiAgICB9KSgpO1xuXG4gICAgLy8gYHN0cmluZ0lucHV0VG9PYmplY3RgXG4gICAgLy8gUGVybWlzc2l2ZSBzdHJpbmcgcGFyc2luZy4gIFRha2UgaW4gYSBudW1iZXIgb2YgZm9ybWF0cywgYW5kIG91dHB1dCBhbiBvYmplY3RcbiAgICAvLyBiYXNlZCBvbiBkZXRlY3RlZCBmb3JtYXQuICBSZXR1cm5zIGB7IHIsIGcsIGIgfWAgb3IgYHsgaCwgcywgbCB9YCBvciBgeyBoLCBzLCB2fWBcbiAgICBmdW5jdGlvbiBzdHJpbmdJbnB1dFRvT2JqZWN0KGNvbG9yKSB7XG5cbiAgICAgICAgY29sb3IgPSBjb2xvci5yZXBsYWNlKHRyaW1MZWZ0LCcnKS5yZXBsYWNlKHRyaW1SaWdodCwgJycpLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIHZhciBuYW1lZCA9IGZhbHNlO1xuICAgICAgICBpZiAobmFtZXNbY29sb3JdKSB7XG4gICAgICAgICAgICBjb2xvciA9IG5hbWVzW2NvbG9yXTtcbiAgICAgICAgICAgIG5hbWVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjb2xvciA9PSAndHJhbnNwYXJlbnQnKSB7XG4gICAgICAgICAgICByZXR1cm4geyByOiAwLCBnOiAwLCBiOiAwLCBhOiAwLCBmb3JtYXQ6IFwibmFtZVwiIH07XG4gICAgICAgIH1cblxuICAgICAgICAvLyBUcnkgdG8gbWF0Y2ggc3RyaW5nIGlucHV0IHVzaW5nIHJlZ3VsYXIgZXhwcmVzc2lvbnMuXG4gICAgICAgIC8vIEtlZXAgbW9zdCBvZiB0aGUgbnVtYmVyIGJvdW5kaW5nIG91dCBvZiB0aGlzIGZ1bmN0aW9uIC0gZG9uJ3Qgd29ycnkgYWJvdXQgWzAsMV0gb3IgWzAsMTAwXSBvciBbMCwzNjBdXG4gICAgICAgIC8vIEp1c3QgcmV0dXJuIGFuIG9iamVjdCBhbmQgbGV0IHRoZSBjb252ZXJzaW9uIGZ1bmN0aW9ucyBoYW5kbGUgdGhhdC5cbiAgICAgICAgLy8gVGhpcyB3YXkgdGhlIHJlc3VsdCB3aWxsIGJlIHRoZSBzYW1lIHdoZXRoZXIgdGhlIHRpbnljb2xvciBpcyBpbml0aWFsaXplZCB3aXRoIHN0cmluZyBvciBvYmplY3QuXG4gICAgICAgIHZhciBtYXRjaDtcbiAgICAgICAgaWYgKChtYXRjaCA9IG1hdGNoZXJzLnJnYi5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgICAgIHJldHVybiB7IHI6IG1hdGNoWzFdLCBnOiBtYXRjaFsyXSwgYjogbWF0Y2hbM10gfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKG1hdGNoID0gbWF0Y2hlcnMucmdiYS5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgICAgIHJldHVybiB7IHI6IG1hdGNoWzFdLCBnOiBtYXRjaFsyXSwgYjogbWF0Y2hbM10sIGE6IG1hdGNoWzRdIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChtYXRjaCA9IG1hdGNoZXJzLmhzbC5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgICAgIHJldHVybiB7IGg6IG1hdGNoWzFdLCBzOiBtYXRjaFsyXSwgbDogbWF0Y2hbM10gfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKG1hdGNoID0gbWF0Y2hlcnMuaHNsYS5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgICAgIHJldHVybiB7IGg6IG1hdGNoWzFdLCBzOiBtYXRjaFsyXSwgbDogbWF0Y2hbM10sIGE6IG1hdGNoWzRdIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChtYXRjaCA9IG1hdGNoZXJzLmhzdi5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgICAgIHJldHVybiB7IGg6IG1hdGNoWzFdLCBzOiBtYXRjaFsyXSwgdjogbWF0Y2hbM10gfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoKG1hdGNoID0gbWF0Y2hlcnMuaGV4OC5leGVjKGNvbG9yKSkpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYTogY29udmVydEhleFRvRGVjaW1hbChtYXRjaFsxXSksXG4gICAgICAgICAgICAgICAgcjogcGFyc2VJbnRGcm9tSGV4KG1hdGNoWzJdKSxcbiAgICAgICAgICAgICAgICBnOiBwYXJzZUludEZyb21IZXgobWF0Y2hbM10pLFxuICAgICAgICAgICAgICAgIGI6IHBhcnNlSW50RnJvbUhleChtYXRjaFs0XSksXG4gICAgICAgICAgICAgICAgZm9ybWF0OiBuYW1lZCA/IFwibmFtZVwiIDogXCJoZXg4XCJcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChtYXRjaCA9IG1hdGNoZXJzLmhleDYuZXhlYyhjb2xvcikpKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHI6IHBhcnNlSW50RnJvbUhleChtYXRjaFsxXSksXG4gICAgICAgICAgICAgICAgZzogcGFyc2VJbnRGcm9tSGV4KG1hdGNoWzJdKSxcbiAgICAgICAgICAgICAgICBiOiBwYXJzZUludEZyb21IZXgobWF0Y2hbM10pLFxuICAgICAgICAgICAgICAgIGZvcm1hdDogbmFtZWQgPyBcIm5hbWVcIiA6IFwiaGV4XCJcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKChtYXRjaCA9IG1hdGNoZXJzLmhleDMuZXhlYyhjb2xvcikpKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHI6IHBhcnNlSW50RnJvbUhleChtYXRjaFsxXSArICcnICsgbWF0Y2hbMV0pLFxuICAgICAgICAgICAgICAgIGc6IHBhcnNlSW50RnJvbUhleChtYXRjaFsyXSArICcnICsgbWF0Y2hbMl0pLFxuICAgICAgICAgICAgICAgIGI6IHBhcnNlSW50RnJvbUhleChtYXRjaFszXSArICcnICsgbWF0Y2hbM10pLFxuICAgICAgICAgICAgICAgIGZvcm1hdDogbmFtZWQgPyBcIm5hbWVcIiA6IFwiaGV4XCJcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgd2luZG93LnRpbnljb2xvciA9IHRpbnljb2xvcjtcbiAgICB9KSgpO1xuXG5cbiAgICAkKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCQuZm4uc3BlY3RydW0ubG9hZCkge1xuICAgICAgICAgICAgJC5mbi5zcGVjdHJ1bS5wcm9jZXNzTmF0aXZlQ29sb3JJbnB1dHMoKTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG59KSh3aW5kb3csIGpRdWVyeSk7XG5cbmFuZ3VsYXIubW9kdWxlKFwicmlzZXZpc2lvbi53aWRnZXQuY29tbW9uXCIsIFtdKTtcblxuYW5ndWxhci5tb2R1bGUoXCJyaXNldmlzaW9uLndpZGdldC5jb21tb25cIilcbiAgLmNvbnRyb2xsZXIoXCJzZXR0aW5nc0NvbnRyb2xsZXJcIiwgW1wiJHNjb3BlXCIsIFwic2V0dGluZ3NTYXZlclwiLCBcInNldHRpbmdzR2V0dGVyXCIsIFwic2V0dGluZ3NDbG9zZXJcIixcbiAgICBmdW5jdGlvbiAoJHNjb3BlLCBzZXR0aW5nc1NhdmVyLCBzZXR0aW5nc0dldHRlciwgc2V0dGluZ3NDbG9zZXIpIHtcblxuICAgICRzY29wZS5zZXR0aW5ncyA9IHsgcGFyYW1zOiB7fSwgYWRkaXRpb25hbFBhcmFtczoge319O1xuICAgICRzY29wZS5hbGVydHMgPSBbXTtcblxuICAgICRzY29wZS5nZXRBZGRpdGlvbmFsUGFyYW0gPSBmdW5jdGlvbiAobmFtZSwgZGVmYXVsdFZhbCkge1xuICAgICAgdmFyIHZhbCA9ICRzY29wZS5zZXR0aW5ncy5hZGRpdGlvbmFsUGFyYW1zW25hbWVdO1xuICAgICAgaWYoYW5ndWxhci5pc1VuZGVmaW5lZCh2YWwpKSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHJldHVybiB2YWw7XG4gICAgICB9XG4gICAgfTtcblxuICAgICRzY29wZS5zZXRBZGRpdGlvbmFsUGFyYW0gPSBmdW5jdGlvbiAobmFtZSwgdmFsKSB7XG4gICAgICAkc2NvcGUuc2V0dGluZ3MuYWRkaXRpb25hbFBhcmFtc1tuYW1lXSA9IHZhbDtcbiAgICB9O1xuXG4gICAgJHNjb3BlLmxvYWRBZGRpdGlvbmFsUGFyYW1zID0gZnVuY3Rpb24gKCkge1xuICAgICAgc2V0dGluZ3NHZXR0ZXIuZ2V0QWRkaXRpb25hbFBhcmFtcygpLnRoZW4oZnVuY3Rpb24gKGFkZGl0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgJHNjb3BlLnNldHRpbmdzLmFkZGl0aW9uYWxQYXJhbXMgPSBhZGRpdGlvbmFsUGFyYW1zO1xuICAgICAgICAkc2NvcGUuJGJyb2FkY2FzdChcImxvYWRBZGRpdGlvbmFsUGFyYW1zXCIsIGFkZGl0aW9uYWxQYXJhbXMpO1xuICAgICAgfSxcbiAgICAgIGZ1bmN0aW9uIChlcnIpIHthbGVydCAoZXJyKTsgfSk7XG4gICAgfTtcblxuICAgICRzY29wZS5zZXRBZGRpdGlvbmFsUGFyYW1zID0gZnVuY3Rpb24gKG5hbWUsIHZhbCkge1xuICAgICAgJHNjb3BlLnNldHRpbmdzLmFkZGl0aW9uYWxQYXJhbXNbbmFtZV0gPSB2YWw7XG4gICAgfTtcblxuICAgICRzY29wZS5zYXZlU2V0dGluZ3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAvL2NsZWFyIG91dCBwcmV2aW91cyBhbGVydHMsIGlmIGFueVxuICAgICAgJHNjb3BlLmFsZXJ0cyA9IFtdO1xuXG4gICAgICAkc2NvcGUuJGJyb2FkY2FzdChcImNvbGxlY3RBZGRpdGlvbmFsUGFyYW1zXCIpO1xuXG4gICAgICBzZXR0aW5nc1NhdmVyLnNhdmVTZXR0aW5ncygkc2NvcGUuc2V0dGluZ3MpLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAvL1RPRE86IHBlcmhhcHMgc2hvdyBzb21lIGluZGljYXRvciBpbiBVST9cbiAgICAgIH0sIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgJHNjb3BlLmFsZXJ0cyA9IGVyci5hbGVydHM7XG4gICAgICB9KTtcblxuICAgIH07XG5cbiAgICAkc2NvcGUuY2xvc2VTZXR0aW5ncyA9IGZ1bmN0aW9uKCkge1xuICAgICAgc2V0dGluZ3NDbG9zZXIuY2xvc2VTZXR0aW5ncygpLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAvL1RPRE86XG4gICAgICB9LCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICRzY29wZS5hbGVydHMgPSBlcnIuYWxlcnRzO1xuICAgICAgfSk7XG5cbiAgICB9O1xuXG4gICAgJHNjb3BlLnNldHRpbmdzLnBhcmFtcyA9IHNldHRpbmdzR2V0dGVyLmdldFBhcmFtcygpO1xuICAgICRzY29wZS5sb2FkQWRkaXRpb25hbFBhcmFtcygpO1xuICB9XSlcblxuICAuZGlyZWN0aXZlKFwic2Nyb2xsT25BbGVydHNcIiwgZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlc3RyaWN0OiBcIkFcIiwgLy9yZXN0cmljdHMgdG8gYXR0cmlidXRlc1xuICAgICAgc2NvcGU6IGZhbHNlLFxuICAgICAgbGluazogZnVuY3Rpb24oJHNjb3BlLCAkZWxtKSB7XG4gICAgICAgICRzY29wZS4kd2F0Y2hDb2xsZWN0aW9uKFwiYWxlcnRzXCIsIGZ1bmN0aW9uIChuZXdBbGVydHMsIG9sZEFsZXJ0cykge1xuICAgICAgICAgIGlmKG5ld0FsZXJ0cy5sZW5ndGggPiAwICYmIG9sZEFsZXJ0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICQoXCJib2R5XCIpLmFuaW1hdGUoe3Njcm9sbFRvcDogJGVsbS5vZmZzZXQoKS50b3B9LCBcImZhc3RcIik7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xufSk7XG5cbmFuZ3VsYXIubW9kdWxlKFwicmlzZXZpc2lvbi53aWRnZXQuY29tbW9uXCIpXG4gIC5jb25zdGFudChcIlNUT1JBR0VfRklMRV9VUkxfQkFTRVwiLCBcInN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vcmlzZW1lZGlhbGlicmFyeS1cIilcbiAgLmNvbnN0YW50KFwiU1RPUkFHRV9GT0xERVJfVVJMX0JBU0VcIiwgXCJnb29nbGVhcGlzLmNvbS9zdG9yYWdlL1wiKVxuICAuZmFjdG9yeShcImNvbW1vblNldHRpbmdzXCIsIFtcIiRsb2dcIiwgXCJTVE9SQUdFX0ZJTEVfVVJMX0JBU0VcIiwgXCJTVE9SQUdFX0ZPTERFUl9VUkxfQkFTRVwiLFxuICAgIGZ1bmN0aW9uICgkbG9nLCBTVE9SQUdFX0ZJTEVfVVJMX0JBU0UsIFNUT1JBR0VfRk9MREVSX1VSTF9CQVNFKSB7XG5cbiAgICB2YXIgZmFjdG9yeSA9IHtcbiAgICAgIGdldFN0b3JhZ2VVcmxEYXRhOiBmdW5jdGlvbiAodXJsKSB7XG4gICAgICAgIHZhciBzdG9yYWdlID0ge30sXG4gICAgICAgICAgc3RyLCBhcnIsIHBhcmFtcywgcGFpcjtcblxuICAgICAgICBmdW5jdGlvbiBnZXRTdG9yYWdlVHlwZShzdG9yYWdlVXJsKSB7XG4gICAgICAgICAgaWYgKHN0b3JhZ2VVcmwuaW5kZXhPZihTVE9SQUdFX0ZJTEVfVVJMX0JBU0UpICE9PSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIFwiZmlsZVwiO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChzdG9yYWdlVXJsLmluZGV4T2YoU1RPUkFHRV9GT0xERVJfVVJMX0JBU0UpICE9PSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIFwiZm9sZGVyXCI7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBnZXRDb21wYW55SWQoc3RvcmFnZVVybCkge1xuICAgICAgICAgIHZhciBwID0gc3RvcmFnZVVybC5zcGxpdChcInJpc2VtZWRpYWxpYnJhcnktXCIpO1xuXG4gICAgICAgICAgcmV0dXJuIHBbMV0uc2xpY2UoMCwgcFsxXS5pbmRleE9mKFwiL1wiKSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZ2V0U3RvcmFnZVR5cGUodXJsKSA9PT0gXCJmaWxlXCIpIHtcbiAgICAgICAgICBzdHIgPSB1cmwuc3BsaXQoU1RPUkFHRV9GSUxFX1VSTF9CQVNFKVsxXTtcbiAgICAgICAgICBzdHIgPSBkZWNvZGVVUklDb21wb25lbnQoc3RyLnNsaWNlKHN0ci5pbmRleE9mKFwiL1wiKSArIDEpKTtcbiAgICAgICAgICBhcnIgPSBzdHIuc3BsaXQoXCIvXCIpO1xuXG4gICAgICAgICAgc3RvcmFnZS5jb21wYW55SWQgPSBnZXRDb21wYW55SWQodXJsKTtcbiAgICAgICAgICBzdG9yYWdlLmZpbGVOYW1lID0gYXJyLnBvcCgpO1xuICAgICAgICAgIHN0b3JhZ2UuZm9sZGVyID0gYXJyLmxlbmd0aCA+IDAgPyBhcnIuam9pbihcIi9cIikgOiBcIlwiO1xuXG4gICAgICAgICAgaWYgKHN0b3JhZ2UuZm9sZGVyICE9PSBcIlwiKSB7XG4gICAgICAgICAgICAvLyBhZGQgZW5kaW5nIFwiL1wiIHRvIHRoZSBmb2xkZXIgcGF0aFxuICAgICAgICAgICAgc3RvcmFnZS5mb2xkZXIgKz0gXCIvXCI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGdldFN0b3JhZ2VUeXBlKHVybCkgPT09IFwiZm9sZGVyXCIpIHtcbiAgICAgICAgICBwYXJhbXMgPSB1cmwuc3BsaXQoXCI/XCIpO1xuXG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXJhbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHBhaXIgPSBwYXJhbXNbaV0uc3BsaXQoXCI9XCIpO1xuXG4gICAgICAgICAgICBpZiAocGFpclswXSA9PT0gXCJwcmVmaXhcIiAmJiB0eXBlb2YgcGFpclsxXSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBwYWlyWzFdICE9PSBcIlwiKSB7XG4gICAgICAgICAgICAgIHN0b3JhZ2UuY29tcGFueUlkID0gZ2V0Q29tcGFueUlkKHVybCk7XG4gICAgICAgICAgICAgIHN0b3JhZ2UuZm9sZGVyID0gZGVjb2RlVVJJQ29tcG9uZW50KHBhaXJbMV0pO1xuICAgICAgICAgICAgICBzdG9yYWdlLmZpbGVOYW1lID0gXCJcIjtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHN0b3JhZ2U7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybiBmYWN0b3J5O1xuICB9XSk7XG5cbmFuZ3VsYXIubW9kdWxlKFwicmlzZXZpc2lvbi53aWRnZXQuY29tbW9uXCIpXG4gIC5mYWN0b3J5KFwiZ2FkZ2V0c0FwaVwiLCBbXCIkd2luZG93XCIsIGZ1bmN0aW9uICgkd2luZG93KSB7XG4gICAgcmV0dXJuICR3aW5kb3cuZ2FkZ2V0cztcbiAgfV0pO1xuXG5hbmd1bGFyLm1vZHVsZShcInJpc2V2aXNpb24ud2lkZ2V0LmNvbW1vblwiKVxuICAuc2VydmljZShcImkxOG5Mb2FkZXJcIiwgW1wiJHdpbmRvd1wiLCBcIiRxXCIsIGZ1bmN0aW9uICgkd2luZG93LCAkcSkge1xuICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG5cbiAgICAkd2luZG93LmkxOG4uaW5pdCh7IFxuICAgICAgZmFsbGJhY2tMbmc6IFwiZW5cIixcbiAgICAgIHJlc0dldFBhdGg6IFwibG9jYWxlcy9fX25zX19fX19sbmdfXy5qc29uXCJcbiAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICBkZWZlcnJlZC5yZXNvbHZlKCR3aW5kb3cuaTE4bik7XG4gICAgfSk7XG5cbiAgICB0aGlzLmdldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH07XG4gIH1dKTtcblxuYW5ndWxhci5tb2R1bGUoXCJyaXNldmlzaW9uLndpZGdldC5jb21tb25cIilcbiAgLmZhY3RvcnkoXCJpbWFnZVZhbGlkYXRvclwiLCBbXCIkcVwiLCBmdW5jdGlvbiAoJHEpIHtcbiAgICB2YXIgZmFjdG9yeSA9IHtcbiAgICAgIC8vIFZlcmlmeSB0aGF0IFVSTCBpcyBhIHZhbGlkIGltYWdlIGZpbGUuXG4gICAgICBpc0ltYWdlOiBmdW5jdGlvbihzcmMpIHtcbiAgICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKSxcbiAgICAgICAgICBpbWFnZSA9IG5ldyBJbWFnZSgpO1xuXG4gICAgICAgIGltYWdlLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUodHJ1ZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgaW1hZ2Uub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoZmFsc2UpO1xuICAgICAgICB9O1xuXG4gICAgICAgIGltYWdlLnNyYyA9IHNyYztcblxuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIGZhY3Rvcnk7XG4gIH1dKTtcblxuYW5ndWxhci5tb2R1bGUoXCJyaXNldmlzaW9uLndpZGdldC5jb21tb25cIilcbiAgLnNlcnZpY2UoXCJzZXR0aW5nc1NhdmVyXCIsIFtcIiRxXCIsIFwiJGxvZ1wiLCBcImdhZGdldHNBcGlcIiwgXCJzZXR0aW5nc1BhcnNlclwiLFxuICBmdW5jdGlvbiAoJHEsICRsb2csIGdhZGdldHNBcGksIHNldHRpbmdzUGFyc2VyKSB7XG5cbiAgICB0aGlzLnNhdmVTZXR0aW5ncyA9IGZ1bmN0aW9uIChzZXR0aW5ncywgdmFsaWRhdG9yKSB7XG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgdmFyIGFsZXJ0cyA9IFtdLCBzdHIgPSBcIlwiO1xuXG4gICAgICBzZXR0aW5ncyA9IHByb2Nlc3NTZXR0aW5ncyhzZXR0aW5ncyk7XG5cbiAgICAgIGlmICh2YWxpZGF0b3IpIHtcbiAgICAgICAgYWxlcnRzID0gdmFsaWRhdG9yKHNldHRpbmdzKTtcbiAgICAgIH1cblxuICAgICAgaWYoYWxlcnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgJGxvZy5kZWJ1ZyhcIlZhbGlkYXRpb24gZmFpbGVkLlwiLCBhbGVydHMpO1xuICAgICAgICBkZWZlcnJlZC5yZWplY3Qoe2FsZXJ0czogYWxlcnRzfSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChzZXR0aW5ncy5wYXJhbXMuaGFzT3duUHJvcGVydHkoXCJsYXlvdXRVUkxcIikpIHtcbiAgICAgICAgLy8gZW5zdXJlIHRoZSB1cmwgaXMgdGhlIHN0YXJ0IG9mIHRoZSBzdHJpbmdcbiAgICAgICAgc3RyICs9IHNldHRpbmdzLnBhcmFtcy5sYXlvdXRVUkwgKyBcIj9cIjtcbiAgICAgICAgLy8gZGVsZXRlIHRoaXMgcHJvcGVydHkgc28gaXRzIG5vdCBpbmNsdWRlZCBiZWxvdyBpbiBlbmNvZGVQYXJhbXMgY2FsbFxuICAgICAgICBkZWxldGUgc2V0dGluZ3MucGFyYW1zLmxheW91dFVSTDtcbiAgICAgIH1cblxuICAgICAgc3RyICs9IHNldHRpbmdzUGFyc2VyLmVuY29kZVBhcmFtcyhzZXR0aW5ncy5wYXJhbXMpO1xuXG4gICAgICB2YXIgYWRkaXRpb25hbFBhcmFtc1N0ciA9XG4gICAgICAgIHNldHRpbmdzUGFyc2VyLmVuY29kZUFkZGl0aW9uYWxQYXJhbXMoc2V0dGluZ3MuYWRkaXRpb25hbFBhcmFtcyk7XG5cbiAgICAgIGdhZGdldHNBcGkucnBjLmNhbGwoXCJcIiwgXCJyc2NtZF9zYXZlU2V0dGluZ3NcIiwgZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAkbG9nLmRlYnVnKFwiZW5jb2RlZCBzZXR0aW5nc1wiLCBKU09OLnN0cmluZ2lmeShyZXN1bHQpKTtcbiAgICAgICAgJGxvZy5kZWJ1ZyhcIlNldHRpbmdzIHNhdmVkLiBcIiwgc2V0dGluZ3MpO1xuXG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzdWx0KTtcbiAgICAgIH0sIHtcbiAgICAgICAgcGFyYW1zOiBzdHIsXG4gICAgICAgIGFkZGl0aW9uYWxQYXJhbXM6IGFkZGl0aW9uYWxQYXJhbXNTdHJcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gcHJvY2Vzc1NldHRpbmdzKHNldHRpbmdzKSB7XG4gICAgICB2YXIgbmV3U2V0dGluZ3MgPSBhbmd1bGFyLmNvcHkoc2V0dGluZ3MpO1xuXG4gICAgICBkZWxldGUgbmV3U2V0dGluZ3MucGFyYW1zLmlkO1xuICAgICAgZGVsZXRlIG5ld1NldHRpbmdzLnBhcmFtcy5jb21wYW55SWQ7XG4gICAgICBkZWxldGUgbmV3U2V0dGluZ3MucGFyYW1zLnJzVztcbiAgICAgIGRlbGV0ZSBuZXdTZXR0aW5ncy5wYXJhbXMucnNIO1xuXG4gICAgICByZXR1cm4gbmV3U2V0dGluZ3M7XG4gICAgfVxuXG4gIH1dKVxuXG4gIC5zZXJ2aWNlKFwic2V0dGluZ3NHZXR0ZXJcIiwgW1wiJHFcIiwgXCJnYWRnZXRzQXBpXCIsIFwiJGxvZ1wiLCBcInNldHRpbmdzUGFyc2VyXCIsIFwiJHdpbmRvd1wiLCBcImRlZmF1bHRTZXR0aW5nc1wiLFxuICAgIGZ1bmN0aW9uICgkcSwgZ2FkZ2V0c0FwaSwgJGxvZywgc2V0dGluZ3NQYXJzZXIsICR3aW5kb3csIGRlZmF1bHRTZXR0aW5ncykge1xuXG4gICAgICB0aGlzLmdldEFkZGl0aW9uYWxQYXJhbXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgICAgIHZhciBkZWZhdWx0QWRkaXRpb25hbFBhcmFtcyA9IGRlZmF1bHRTZXR0aW5ncy5hZGRpdGlvbmFsUGFyYW1zIHx8IHt9O1xuICAgICAgICBnYWRnZXRzQXBpLnJwYy5jYWxsKFwiXCIsIFwicnNjbWRfZ2V0QWRkaXRpb25hbFBhcmFtc1wiLCBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgaWYocmVzdWx0KSB7XG4gICAgICAgICAgICByZXN1bHQgPSBzZXR0aW5nc1BhcnNlci5wYXJzZUFkZGl0aW9uYWxQYXJhbXMocmVzdWx0KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQgPSB7fTtcbiAgICAgICAgICB9XG4gICAgICAgICAgJGxvZy5kZWJ1ZyhcImdldEFkZGl0aW9uYWxQYXJhbXMgcmV0dXJucyBcIiwgcmVzdWx0KTtcbiAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGFuZ3VsYXIuZXh0ZW5kKGRlZmF1bHRBZGRpdGlvbmFsUGFyYW1zLCByZXN1bHQpKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgICB9O1xuXG4gICAgICB0aGlzLmdldFBhcmFtcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGRlZmF1bHRQYXJhbXMgPSBkZWZhdWx0U2V0dGluZ3MucGFyYW1zIHx8IHt9O1xuICAgICAgICByZXR1cm4gYW5ndWxhci5leHRlbmQoZGVmYXVsdFBhcmFtcyxcbiAgICAgICAgICBzZXR0aW5nc1BhcnNlci5wYXJzZVBhcmFtcygkd2luZG93LmxvY2F0aW9uLnNlYXJjaCkpO1xuICAgICAgfTtcbiAgfV0pXG5cbiAgLnNlcnZpY2UoXCJzZXR0aW5nc1BhcnNlclwiLCBbZnVuY3Rpb24gKCkge1xuICAgIHRoaXMucGFyc2VBZGRpdGlvbmFsUGFyYW1zID0gZnVuY3Rpb24gKGFkZGl0aW9uYWxQYXJhbXNTdHIpIHtcbiAgICAgIGlmKGFkZGl0aW9uYWxQYXJhbXNTdHIpIHtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoYWRkaXRpb25hbFBhcmFtc1N0cik7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLmVuY29kZUFkZGl0aW9uYWxQYXJhbXMgPSBmdW5jdGlvbiAoYWRkaXRpb25hbFBhcmFtcykge1xuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGFkZGl0aW9uYWxQYXJhbXMpO1xuICAgIH07XG5cbiAgICB0aGlzLmVuY29kZVBhcmFtcyA9IGZ1bmN0aW9uIChwYXJhbXMpIHtcbiAgICAgIHZhciBzdHIgPSBbXTtcbiAgICAgIGZvcih2YXIgcCBpbiBwYXJhbXMpIHtcbiAgICAgICAgaWYgKHBhcmFtcy5oYXNPd25Qcm9wZXJ0eShwKSkge1xuICAgICAgICAgIHZhciB2YWx1ZTtcbiAgICAgICAgICBpZiAodHlwZW9mIHBhcmFtc1twXSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgdmFsdWUgPSBKU09OLnN0cmluZ2lmeShwYXJhbXNbcF0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhbHVlID0gcGFyYW1zW3BdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzdHIucHVzaChcInVwX1wiICsgZW5jb2RlVVJJQ29tcG9uZW50KHApICsgXCI9XCIgKyBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gc3RyLmpvaW4oXCImXCIpO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBzdHJpcFByZWZpeChuYW1lKSB7XG4gICAgICBpZihuYW1lLmluZGV4T2YoXCJ1cF9cIikgPT09IDApIHtcbiAgICAgICAgcmV0dXJuIG5hbWUuc2xpY2UoMyk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5wYXJzZVBhcmFtcyA9IGZ1bmN0aW9uIChwYXJhbXNTdHIpIHtcbiAgICAgIC8vZ2V0IHJpZCBvZiBwcmVjZWVkaW5nIFwiP1wiXG4gICAgICBpZihwYXJhbXNTdHJbMF0gPT09IFwiP1wiKSB7XG4gICAgICAgIHBhcmFtc1N0ciA9IHBhcmFtc1N0ci5zbGljZSgxKTtcbiAgICAgIH1cbiAgICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICAgIHZhciB2YXJzID0gcGFyYW1zU3RyLnNwbGl0KFwiJlwiKTtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmFycy5sZW5ndGg7IGkrKykge1xuICAgICAgICB2YXIgcGFpciA9IHZhcnNbaV0uc3BsaXQoXCI9XCIpO1xuICAgICAgICB2YXIgbmFtZSA9IHN0cmlwUHJlZml4KGRlY29kZVVSSUNvbXBvbmVudChwYWlyWzBdKSk7XG4gICAgICAgIC8vc2F2ZSBzZXR0aW5ncyBvbmx5IGlmIGl0IGhhcyB1cF8gcHJlZml4LiBJZ25vcmUgb3RoZXJ3aXNlXG4gICAgICAgIGlmIChuYW1lKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJlc3VsdFtuYW1lXSA9IEpTT04ucGFyc2UoZGVjb2RlVVJJQ29tcG9uZW50KHBhaXJbMV0pKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJlc3VsdFtuYW1lXSA9IGRlY29kZVVSSUNvbXBvbmVudChwYWlyWzFdKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcblxuICB9XSlcblxuICAuc2VydmljZShcInNldHRpbmdzQ2xvc2VyXCIsIFtcIiRxXCIsIFwiJGxvZ1wiLCBcImdhZGdldHNBcGlcIixcbiAgZnVuY3Rpb24gKCRxLCAkbG9nLCBnYWRnZXRzQXBpKSB7XG5cbiAgICB0aGlzLmNsb3NlU2V0dGluZ3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICBnYWRnZXRzQXBpLnJwYy5jYWxsKFwiXCIsIFwicnNjbWRfY2xvc2VTZXR0aW5nc1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUodHJ1ZSk7XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfTtcblxuICB9XSlcblxuICAudmFsdWUoXCJkZWZhdWx0U2V0dGluZ3NcIiwge30pO1xuXG4oZnVuY3Rpb24gKGFuZ3VsYXIpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgYW5ndWxhci5tb2R1bGUoXCJyaXNldmlzaW9uLndpZGdldC5jb21tb24udmlzdWFsaXphdGlvblwiLCBbXSlcbiAgICAuZmFjdG9yeShcInZpc3VhbGl6YXRpb25BcGlcIiwgW1wiJHFcIiwgXCIkd2luZG93XCIsIGZ1bmN0aW9uICgkcSwgJHdpbmRvdykge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgIHZhciBwcm9taXNlO1xuXG4gICAgICB2YXIgZmFjdG9yeSA9IHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgaWYgKCFwcm9taXNlKSB7XG4gICAgICAgICAgICBwcm9taXNlID0gZGVmZXJyZWQucHJvbWlzZTtcbiAgICAgICAgICAgIGlmICghJHdpbmRvdy5nb29nbGUudmlzdWFsaXphdGlvbikge1xuICAgICAgICAgICAgICAkd2luZG93Lmdvb2dsZS5zZXRPbkxvYWRDYWxsYmFjayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSgkd2luZG93Lmdvb2dsZS52aXN1YWxpemF0aW9uKTtcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSgkd2luZG93Lmdvb2dsZS52aXN1YWxpemF0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHByb21pc2U7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICByZXR1cm4gZmFjdG9yeTtcblxuICAgIH1dKTtcblxufSkoYW5ndWxhcik7XG5cbmlmKHR5cGVvZiBURU1QTEFURVMgPT09ICd1bmRlZmluZWQnKSB7dmFyIFRFTVBMQVRFUyA9IHt9O31cblRFTVBMQVRFU1snYWxpZ25tZW50Lmh0bWwnXSA9IFwiPGRpdiBjbGFzcz1cXFwiYnRuLWdyb3VwIGFsaWdubWVudFxcXCI+XFxuXCIgK1xuICAgIFwiICA8YnV0dG9uIHR5cGU9XFxcImJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc20gYnRuLWFsaWdubWVudCBkcm9wZG93bi10b2dnbGVcXFwiXFxuXCIgK1xuICAgIFwiICAgIGRhdGEtdG9nZ2xlPVxcXCJkcm9wZG93blxcXCIgZGF0YS13eXNpaHRtbDUtY29tbWFuZC12YWx1ZT1cXFwibGVmdFxcXCI+XFxuXCIgK1xuICAgIFwiICAgIDxpIGNsYXNzPVxcXCJmYSBmYS1hbGlnbi1sZWZ0XFxcIj48L2k+XFxuXCIgK1xuICAgIFwiICAgIDxzcGFuIGNsYXNzPVxcXCJjYXJldFxcXCI+PC9zcGFuPlxcblwiICtcbiAgICBcIiAgPC9idXR0b24+XFxuXCIgK1xuICAgIFwiICA8ZGl2IGNsYXNzPVxcXCJkcm9wZG93bi1tZW51XFxcIiByb2xlPVxcXCJtZW51XFxcIj5cXG5cIiArXG4gICAgXCIgICAgPGRpdiBjbGFzcz1cXFwiYnRuLWdyb3VwXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICA8YnV0dG9uIHR5cGU9XFxcImJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc21cXFwiIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQ9XFxcImFsaWdubWVudFxcXCJcXG5cIiArXG4gICAgXCIgICAgICAgIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9XFxcImxlZnRcXFwiIHRhYmluZGV4PVxcXCItMVxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgICA8aSBjbGFzcz1cXFwiZmEgZmEtYWxpZ24tbGVmdFxcXCI+PC9pPlxcblwiICtcbiAgICBcIiAgICAgIDwvYnV0dG9uPlxcblwiICtcbiAgICBcIiAgICAgIDxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbVxcXCIgZGF0YS13eXNpaHRtbDUtY29tbWFuZD1cXFwiYWxpZ25tZW50XFxcIlxcblwiICtcbiAgICBcIiAgICAgICAgZGF0YS13eXNpaHRtbDUtY29tbWFuZC12YWx1ZT1cXFwiY2VudGVyXFxcIiB0YWJpbmRleD1cXFwiLTFcXFwiPlxcblwiICtcbiAgICBcIiAgICAgICAgPGkgY2xhc3M9XFxcImZhIGZhLWFsaWduLWNlbnRlclxcXCI+PC9pPlxcblwiICtcbiAgICBcIiAgICAgIDwvYnV0dG9uPlxcblwiICtcbiAgICBcIiAgICAgIDxidXR0b24gdHlwZT1cXFwiYnV0dG9uXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1kZWZhdWx0IGJ0bi1zbVxcXCIgZGF0YS13eXNpaHRtbDUtY29tbWFuZD1cXFwiYWxpZ25tZW50XFxcIlxcblwiICtcbiAgICBcIiAgICAgICAgZGF0YS13eXNpaHRtbDUtY29tbWFuZC12YWx1ZT1cXFwicmlnaHRcXFwiIHRhYmluZGV4PVxcXCItMVxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgICA8aSBjbGFzcz1cXFwiZmEgZmEtYWxpZ24tcmlnaHRcXFwiPjwvaT5cXG5cIiArXG4gICAgXCIgICAgICA8L2J1dHRvbj5cXG5cIiArXG4gICAgXCIgICAgICA8YnV0dG9uIHR5cGU9XFxcImJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tZGVmYXVsdCBidG4tc21cXFwiIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQ9XFxcImFsaWdubWVudFxcXCJcXG5cIiArXG4gICAgXCIgICAgICAgIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9XFxcImp1c3RpZnlcXFwiIHRhYmluZGV4PVxcXCItMVxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgICA8aSBjbGFzcz1cXFwiZmEgZmEtYWxpZ24tanVzdGlmeVxcXCI+PC9pPlxcblwiICtcbiAgICBcIiAgICAgIDwvYnV0dG9uPlxcblwiICtcbiAgICBcIiAgICA8L2Rpdj5cXG5cIiArXG4gICAgXCIgIDwvZGl2PlxcblwiICtcbiAgICBcIjwvZGl2PlxcblwiICtcbiAgICBcIlwiOyBcbi8qICBDb3B5cmlnaHQgwqkgMjAxNCBSaXNlIFZpc2lvbiBJbmNvcnBvcmF0ZWQuXG4gKiAgVXNlIG9mIHRoaXMgc29mdHdhcmUgaXMgZ292ZXJuZWQgYnkgdGhlIEdQTHYzIGxpY2Vuc2VcbiAqICAocmVwcm9kdWNlZCBpbiB0aGUgTElDRU5TRSBmaWxlKS5cbiAqL1xuXG4vKiBnbG9iYWwgVEVNUExBVEVTICovXG47KGZ1bmN0aW9uICgkLCB3aW5kb3csIGRvY3VtZW50LCBURU1QTEFURVMsIHVuZGVmaW5lZCkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgX3BsdWdpbk5hbWUgPSBcImFsaWdubWVudFwiO1xuXG4gIGZ1bmN0aW9uIFBsdWdpbihlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdmFyICRlbGVtZW50ID0gJChlbGVtZW50KTtcbiAgICB2YXIgJGJ0bkFsaWdubWVudCA9IG51bGw7XG4gICAgdmFyIGRlZmF1bHRBbGlnbm1lbnQgPSBcImxlZnRcIjtcblxuICAgIG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgeyBcImFsaWduXCI6IGRlZmF1bHRBbGlnbm1lbnQgfSwgb3B0aW9ucyk7XG5cbiAgICAvKlxuICAgICAqICBQcml2YXRlIE1ldGhvZHNcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfaW5pdCgpIHtcbiAgICAgIC8vIEdldCB0aGUgSFRNTCBtYXJrdXAgZnJvbSB0aGUgdGVtcGxhdGUuXG4gICAgICAkZWxlbWVudC5hcHBlbmQoVEVNUExBVEVTW1wiYWxpZ25tZW50Lmh0bWxcIl0pO1xuICAgICAgJGJ0bkFsaWdubWVudCA9ICRlbGVtZW50LmZpbmQoXCIuYnRuLWFsaWdubWVudFwiKTtcblxuICAgICAgc2V0QWxpZ25tZW50KG9wdGlvbnMuYWxpZ24pO1xuXG4gICAgICAkZWxlbWVudC5maW5kKFwiLmRyb3Bkb3duLW1lbnUgYnV0dG9uXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBhbGlnbm1lbnQgPSAkKHRoaXMpLmRhdGEoXCJ3eXNpaHRtbDUtY29tbWFuZC12YWx1ZVwiKTtcblxuICAgICAgICBzZXRBbGlnbm1lbnQoYWxpZ25tZW50KTtcbiAgICAgICAgJGVsZW1lbnQudHJpZ2dlcihcImFsaWdubWVudENoYW5nZWRcIiwgYWxpZ25tZW50KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qXG4gICAgICogIFB1YmxpYyBNZXRob2RzXG4gICAgICovXG4gICAgZnVuY3Rpb24gZ2V0QWxpZ25tZW50KCkge1xuICAgICByZXR1cm4gJGJ0bkFsaWdubWVudC5kYXRhKFwid3lzaWh0bWw1LWNvbW1hbmQtdmFsdWVcIik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0QWxpZ25tZW50KGFsaWdubWVudCkge1xuICAgICAgdmFyICRwcmltYXJ5SWNvbiA9ICRlbGVtZW50LmZpbmQoXCIuYnRuLWFsaWdubWVudCAuZmFcIik7XG4gICAgICB2YXIgY3VycmVudENsYXNzID0gJHByaW1hcnlJY29uLmF0dHIoXCJjbGFzc1wiKS5tYXRjaCgvZmEtYWxpZ24tW2Etel0rL2cpO1xuICAgICAgdmFyIG5ld0NsYXNzID0gXCJmYS1hbGlnbi1cIiArIGFsaWdubWVudDtcblxuICAgICAgLy8gUmVtb3ZlIGN1cnJlbnQgYWxpZ25tZW50IGljb24uXG4gICAgICBpZiAoY3VycmVudENsYXNzICYmIGN1cnJlbnRDbGFzcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICRwcmltYXJ5SWNvbi5yZW1vdmVDbGFzcyhjdXJyZW50Q2xhc3NbMF0pO1xuICAgICAgfVxuXG4gICAgICAvLyBBZGQgbmV3IGFsaWdubWVudCBpY29uLlxuICAgICAgJHByaW1hcnlJY29uLmFkZENsYXNzKG5ld0NsYXNzKTtcbiAgICAgICRidG5BbGlnbm1lbnQuZGF0YShcInd5c2lodG1sNS1jb21tYW5kLXZhbHVlXCIsIGFsaWdubWVudCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgICBzZXRBbGlnbm1lbnQoZGVmYXVsdEFsaWdubWVudCk7XG4gICAgfVxuXG4gICAgX2luaXQoKTtcblxuICAgIHJldHVybiB7XG4gICAgICBnZXRBbGlnbm1lbnQ6IGdldEFsaWdubWVudCxcbiAgICAgIHNldEFsaWdubWVudDogc2V0QWxpZ25tZW50LFxuICAgICAgcmVzZXQ6ICAgICAgICByZXNldFxuICAgIH07XG4gIH1cblxuICAvKlxuICAgKiAgQSBsaWdodHdlaWdodCBwbHVnaW4gd3JhcHBlciBhcm91bmQgdGhlIGNvbnN0cnVjdG9yIHRoYXQgcHJldmVudHNcbiAgICogIG11bHRpcGxlIGluc3RhbnRpYXRpb25zLlxuICAgKi9cbiAgJC5mbi5hbGlnbm1lbnQgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgIGlmICghJC5kYXRhKHRoaXMsIFwicGx1Z2luX1wiICsgX3BsdWdpbk5hbWUpKSB7XG4gICAgICAgICQuZGF0YSh0aGlzLCBcInBsdWdpbl9cIiArIF9wbHVnaW5OYW1lLCBuZXcgUGx1Z2luKHRoaXMsIG9wdGlvbnMpKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn0pKGpRdWVyeSwgd2luZG93LCBkb2N1bWVudCwgVEVNUExBVEVTKTtcblxuLyogZ2xvYmFsIFdJREdFVF9TRVRUSU5HU19VSV9DT05GSUc6IHRydWUgKi9cbi8qIGV4cG9ydGVkIFdJREdFVF9TRVRUSU5HU19VSV9DT05GSUcgKi9cbmlmICh0eXBlb2YgV0lER0VUX1NFVFRJTkdTX1VJX0NPTkZJRyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICB2YXIgV0lER0VUX1NFVFRJTkdTX1VJX0NPTkZJRyA9IHtcbiAgICAvL3B1dCB2YXJpYWJsZXMgaGVyZVxuICB9O1xufVxuXG5pZih0eXBlb2YgVEVNUExBVEVTID09PSAndW5kZWZpbmVkJykge3ZhciBURU1QTEFURVMgPSB7fTt9XG5URU1QTEFURVNbJ2ZvbnQtc3R5bGUuaHRtbCddID0gXCI8ZGl2IGNsYXNzPVxcXCJidG4tZ3JvdXBcXFwiPlxcblwiICtcbiAgICBcIiAgPGEgY2xhc3M9XFxcImJ0biBidG4tc20gYnRuLWRlZmF1bHQgYm9sZFxcXCIgZGF0YS13eXNpaHRtbDUtY29tbWFuZD1cXFwiYm9sZFxcXCIgdGl0bGU9XFxcIkNUUkwrQlxcXCIgdGFiaW5kZXg9XFxcIi0xXFxcIj5CPC9hPlxcblwiICtcbiAgICBcIiAgPGEgY2xhc3M9XFxcImJ0biBidG4tc20gYnRuLWRlZmF1bHQgaXRhbGljXFxcIiBkYXRhLXd5c2lodG1sNS1jb21tYW5kPVxcXCJpdGFsaWNcXFwiIHRpdGxlPVxcXCJDVFJMK0lcXFwiIHRhYmluZGV4PVxcXCItMVxcXCI+STwvYT5cXG5cIiArXG4gICAgXCIgIDxhIGNsYXNzPVxcXCJidG4gYnRuLXNtIGJ0bi1kZWZhdWx0IHVuZGVybGluZVxcXCIgZGF0YS13eXNpaHRtbDUtY29tbWFuZD1cXFwidW5kZXJsaW5lXFxcIiB0aXRsZT1cXFwiQ1RSTCtVXFxcIiB0YWJpbmRleD1cXFwiLTFcXFwiPlU8L2E+XFxuXCIgK1xuICAgIFwiPC9kaXY+XFxuXCIgK1xuICAgIFwiXCI7IFxuLyogIENvcHlyaWdodCDCqSAyMDE0IFJpc2UgVmlzaW9uIEluY29ycG9yYXRlZC5cbiAqICBVc2Ugb2YgdGhpcyBzb2Z0d2FyZSBpcyBnb3Zlcm5lZCBieSB0aGUgR1BMdjMgbGljZW5zZVxuICogIChyZXByb2R1Y2VkIGluIHRoZSBMSUNFTlNFIGZpbGUpLlxuICovXG5cbi8qIGdsb2JhbCBURU1QTEFURVMgKi9cbjsoZnVuY3Rpb24gKCQsIHdpbmRvdywgZG9jdW1lbnQsIFRFTVBMQVRFUywgdW5kZWZpbmVkKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBfcGx1Z2luTmFtZSA9IFwiZm9udFN0eWxlXCI7XG5cbiAgZnVuY3Rpb24gUGx1Z2luKGVsZW1lbnQsIG9wdGlvbnMpIHtcbiAgICB2YXIgJGVsZW1lbnQgPSAkKGVsZW1lbnQpO1xuICAgIHZhciAkYm9sZCA9IG51bGw7XG4gICAgdmFyICRpdGFsaWMgPSBudWxsO1xuICAgIHZhciAkdW5kZXJsaW5lID0gbnVsbDtcbiAgICB2YXIgZGVmYXVsdHMgPSB7XG4gICAgICBcImJvbGRcIjogICAgICBmYWxzZSxcbiAgICAgIFwiaXRhbGljXCI6ICAgIGZhbHNlLFxuICAgICAgXCJ1bmRlcmxpbmVcIjogZmFsc2UsXG4gICAgfTtcblxuICAgIG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgZGVmYXVsdHMsIG9wdGlvbnMpO1xuXG4gICAgLypcbiAgICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAgICovXG4gICAgZnVuY3Rpb24gX2luaXQoKSB7XG4gICAgICAvLyBHZXQgdGhlIEhUTUwgbWFya3VwIGZyb20gdGhlIHRlbXBsYXRlLlxuICAgICAgJGVsZW1lbnQuYXBwZW5kKFRFTVBMQVRFU1tcImZvbnQtc3R5bGUuaHRtbFwiXSk7XG5cbiAgICAgICRib2xkID0gJGVsZW1lbnQuZmluZChcIi5ib2xkXCIpO1xuICAgICAgJGl0YWxpYyA9ICRlbGVtZW50LmZpbmQoXCIuaXRhbGljXCIpO1xuICAgICAgJHVuZGVybGluZSA9ICRlbGVtZW50LmZpbmQoXCIudW5kZXJsaW5lXCIpO1xuXG4gICAgICAvLyBJbml0aWFsaXplIGFsbCBzdHlsZXMuXG4gICAgICBzZXRTdHlsZXMoe1xuICAgICAgICBcImJvbGRcIjogb3B0aW9ucy5ib2xkLFxuICAgICAgICBcIml0YWxpY1wiOiBvcHRpb25zLml0YWxpYyxcbiAgICAgICAgXCJ1bmRlcmxpbmVcIjogb3B0aW9ucy51bmRlcmxpbmUsXG4gICAgICB9KTtcblxuICAgICAgLy8gSGFuZGxlIGNsaWNraW5nIG9uIGFueSBvZiB0aGUgc3R5bGUgYnV0dG9ucy5cbiAgICAgICRlbGVtZW50LmZpbmQoXCIuYnRuXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9ICEkKHRoaXMpLmhhc0NsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICBfc2V0U3R5bGUoJCh0aGlzKSwgdmFsdWUpO1xuXG4gICAgICAgICRlbGVtZW50LnRyaWdnZXIoXCJzdHlsZUNoYW5nZWRcIixcbiAgICAgICAgICBbJCh0aGlzKS5hdHRyKFwiZGF0YS13eXNpaHRtbDUtY29tbWFuZFwiKSwgdmFsdWVdKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIF9nZXRTdHlsZSgkc3R5bGVFbGVtKSB7XG4gICAgICByZXR1cm4gJHN0eWxlRWxlbS5oYXNDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfc2V0U3R5bGUoJHN0eWxlRWxlbSwgdmFsdWUpIHtcbiAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAkc3R5bGVFbGVtLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgICRzdHlsZUVsZW0ucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLypcbiAgICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpc0JvbGQoKSB7XG4gICAgICByZXR1cm4gX2dldFN0eWxlKCRib2xkKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXRCb2xkKHZhbHVlKSB7XG4gICAgICBfc2V0U3R5bGUoJGJvbGQsIHZhbHVlKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc0l0YWxpYygpIHtcbiAgICAgcmV0dXJuIF9nZXRTdHlsZSgkaXRhbGljKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXRJdGFsaWModmFsdWUpIHtcbiAgICAgIF9zZXRTdHlsZSgkaXRhbGljLCB2YWx1ZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaXNVbmRlcmxpbmUoKSB7XG4gICAgIHJldHVybiBfZ2V0U3R5bGUoJHVuZGVybGluZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0VW5kZXJsaW5lKHZhbHVlKSB7XG4gICAgICBfc2V0U3R5bGUoJHVuZGVybGluZSwgdmFsdWUpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFN0eWxlcygpIHtcbiAgICAgIHJldHVybiAge1xuICAgICAgICBcImJvbGRcIjogaXNCb2xkKCksXG4gICAgICAgIFwiaXRhbGljXCI6IGlzSXRhbGljKCksXG4gICAgICAgIFwidW5kZXJsaW5lXCI6IGlzVW5kZXJsaW5lKCksXG4gICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHNldFN0eWxlcyhzdHlsZXMpIHtcbiAgICAgIF9zZXRTdHlsZSgkYm9sZCwgc3R5bGVzLmJvbGQpO1xuICAgICAgX3NldFN0eWxlKCRpdGFsaWMsIHN0eWxlcy5pdGFsaWMpO1xuICAgICAgX3NldFN0eWxlKCR1bmRlcmxpbmUsIHN0eWxlcy51bmRlcmxpbmUpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgICAgc2V0U3R5bGVzKGRlZmF1bHRzKTtcbiAgICB9XG5cbiAgICBfaW5pdCgpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGlzQm9sZDogICAgICAgICBpc0JvbGQsXG4gICAgICBpc0l0YWxpYzogICAgICAgaXNJdGFsaWMsXG4gICAgICBpc1VuZGVybGluZTogICAgaXNVbmRlcmxpbmUsXG4gICAgICBzZXRCb2xkOiAgICAgICAgc2V0Qm9sZCxcbiAgICAgIHNldEl0YWxpYzogICAgICBzZXRJdGFsaWMsXG4gICAgICBzZXRVbmRlcmxpbmU6ICAgc2V0VW5kZXJsaW5lLFxuICAgICAgZ2V0U3R5bGVzOiAgICAgIGdldFN0eWxlcyxcbiAgICAgIHNldFN0eWxlczogICAgICBzZXRTdHlsZXMsXG4gICAgICByZXNldDogICAgICAgICAgcmVzZXRcbiAgICB9O1xuICB9XG5cbiAgLypcbiAgICogIEEgbGlnaHR3ZWlnaHQgcGx1Z2luIHdyYXBwZXIgYXJvdW5kIHRoZSBjb25zdHJ1Y3RvciB0aGF0IHByZXZlbnRzXG4gICAqICBtdWx0aXBsZSBpbnN0YW50aWF0aW9ucy5cbiAgICovXG4gICQuZm4uZm9udFN0eWxlID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoISQuZGF0YSh0aGlzLCBcInBsdWdpbl9cIiArIF9wbHVnaW5OYW1lKSkge1xuICAgICAgICAkLmRhdGEodGhpcywgXCJwbHVnaW5fXCIgKyBfcGx1Z2luTmFtZSwgbmV3IFBsdWdpbih0aGlzLCBvcHRpb25zKSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG59KShqUXVlcnksIHdpbmRvdywgZG9jdW1lbnQsIFRFTVBMQVRFUyk7XG5cbi8qIGdsb2JhbCBXSURHRVRfU0VUVElOR1NfVUlfQ09ORklHOiB0cnVlICovXG4vKiBleHBvcnRlZCBXSURHRVRfU0VUVElOR1NfVUlfQ09ORklHICovXG5pZiAodHlwZW9mIFdJREdFVF9TRVRUSU5HU19VSV9DT05GSUcgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgdmFyIFdJREdFVF9TRVRUSU5HU19VSV9DT05GSUcgPSB7XG4gICAgLy9wdXQgdmFyaWFibGVzIGhlcmVcbiAgfTtcbn1cblxuaWYodHlwZW9mIFRFTVBMQVRFUyA9PT0gJ3VuZGVmaW5lZCcpIHt2YXIgVEVNUExBVEVTID0ge307fVxuVEVNUExBVEVTWyd1cmwtZmllbGQtdGVtcGxhdGUuaHRtbCddID0gXCI8ZGl2IGNsYXNzPVxcXCJmb3JtLWdyb3VwIHZhbGlkYXRlLXVybFxcXCI+XFxuXCIgK1xuICAgIFwiICA8ZGl2IGNsYXNzPVxcXCJjaGVja2JveFxcXCI+XFxuXCIgK1xuICAgIFwiICAgIDxsYWJlbD5cXG5cIiArXG4gICAgXCIgICAgICA8aW5wdXQgbmFtZT1cXFwidmFsaWRhdGUtdXJsXFxcIiB0eXBlPVxcXCJjaGVja2JveFxcXCIgdmFsdWU9XFxcInZhbGlkYXRlLXVybFxcXCIgY2hlY2tlZD1cXFwiY2hlY2tlZFxcXCI+IFZhbGlkYXRlIFVSTFxcblwiICtcbiAgICBcIiAgICA8L2xhYmVsPlxcblwiICtcbiAgICBcIiAgPC9kaXY+XFxuXCIgK1xuICAgIFwiPC9kaXY+XFxuXCIgK1xuICAgIFwiPGRpdiBjbGFzcz1cXFwiZm9ybS1ncm91cFxcXCI+XFxuXCIgK1xuICAgIFwiICA8bGFiZWw+VVJMPC9sYWJlbD5cXG5cIiArXG4gICAgXCIgIDxpbnB1dCBuYW1lPVxcXCJ1cmxcXFwiIHR5cGU9XFxcInRleHRcXFwiIGNsYXNzPVxcXCJmb3JtLWNvbnRyb2xcXFwiIC8+XFxuXCIgK1xuICAgIFwiPC9kaXY+XFxuXCIgK1xuICAgIFwiXCI7IFxuLyogIENvcHlyaWdodCDCqSAyMDE0IFJpc2UgVmlzaW9uIEluY29ycG9yYXRlZC5cbiAqICBVc2Ugb2YgdGhpcyBzb2Z0d2FyZSBpcyBnb3Zlcm5lZCBieSB0aGUgR1BMdjMgbGljZW5zZVxuICogIChyZXByb2R1Y2VkIGluIHRoZSBMSUNFTlNFIGZpbGUpLlxuICovXG5cbi8qIGdsb2JhbCBURU1QTEFURVMgKi9cbi8qIGpzaGludCBtYXhsZW46IDUwMCAqL1xuOyhmdW5jdGlvbiAoJCwgd2luZG93LCBkb2N1bWVudCwgVEVNUExBVEVTLCB1bmRlZmluZWQpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIF9wbHVnaW5OYW1lID0gXCJ1cmxGaWVsZFwiO1xuXG4gIGZ1bmN0aW9uIFBsdWdpbihlbGVtZW50LCBvcHRpb25zKSB7XG4gICAgdmFyICRlbGVtZW50ID0gJChlbGVtZW50KSxcbiAgICAgICR1cmxJbnAgPSBudWxsLFxuICAgICAgJHZhbGlkYXRlVXJsQ3RuID0gbnVsbCxcbiAgICAgICR2YWxpZGF0ZVVybENCID0gbnVsbCxcbiAgICAgIHVybFJlZ0V4cCA9IC9eKD86KD86aHR0cHM/fGZ0cCk6XFwvXFwvKSg/OlxcUysoPzo6XFxTKik/QCk/KD86KD8hKD86MTB8MTI3KSg/OlxcLlxcZHsxLDN9KXszfSkoPyEoPzoxNjlcXC4yNTR8MTkyXFwuMTY4KSg/OlxcLlxcZHsxLDN9KXsyfSkoPyExNzJcXC4oPzoxWzYtOV18MlxcZHwzWzAtMV0pKD86XFwuXFxkezEsM30pezJ9KSg/OlsxLTldXFxkP3wxXFxkXFxkfDJbMDFdXFxkfDIyWzAtM10pKD86XFwuKD86MT9cXGR7MSwyfXwyWzAtNF1cXGR8MjVbMC01XSkpezJ9KD86XFwuKD86WzEtOV1cXGQ/fDFcXGRcXGR8MlswLTRdXFxkfDI1WzAtNF0pKXwoPzooPzpbYS16XFx1MDBhMS1cXHVmZmZmMC05XSstPykqW2EtelxcdTAwYTEtXFx1ZmZmZjAtOV0rKSg/OlxcLig/OlthLXpcXHUwMGExLVxcdWZmZmYwLTldKy0/KSpbYS16XFx1MDBhMS1cXHVmZmZmMC05XSspKig/OlxcLig/OlthLXpcXHUwMGExLVxcdWZmZmZdezIsfSkpKSg/OjpcXGR7Miw1fSk/KD86XFwvW15cXHNdKik/JC9pLFxuICAgICAgZG9WYWxpZGF0aW9uID0gdHJ1ZTtcblxuICAgIG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgeyBcInVybFwiOiBcImh0dHA6Ly9cIiB9LCBvcHRpb25zKTtcblxuICAgIGZ1bmN0aW9uIF9nZXRVcmwoKSB7XG4gICAgICByZXR1cm4gJC50cmltKCR1cmxJbnAudmFsKCkpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIF90ZXN0VXJsKHZhbHVlKSB7XG4gICAgICAvLyBBZGQgaHR0cDovLyBpZiBubyBwcm90b2NvbCBwYXJhbWV0ZXIgZXhpc3RzXG4gICAgICBpZiAodmFsdWUuaW5kZXhPZihcIjovL1wiKSA9PT0gLTEpIHtcbiAgICAgICAgdmFsdWUgPSBcImh0dHA6Ly9cIiArIHZhbHVlO1xuICAgICAgfVxuICAgICAgLypcbiAgICAgICBEaXNjdXNzaW9uXG4gICAgICAgaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8zNzY4NC9ob3ctdG8tcmVwbGFjZS1wbGFpbi11cmxzLVxuICAgICAgIHdpdGgtbGlua3MjMjE5MjU0OTFcblxuICAgICAgIFVzaW5nXG4gICAgICAgaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vZHBlcmluaS83MjkyOTRcbiAgICAgICBSZWFzb25pbmdcbiAgICAgICBodHRwOi8vbWF0aGlhc2J5bmVucy5iZS9kZW1vL3VybC1yZWdleFxuXG4gICAgICAgKi9cblxuICAgICAgcmV0dXJuIHVybFJlZ0V4cC50ZXN0KHZhbHVlKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfc2V0VXJsKHZhbHVlKSB7XG4gICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGlmICgkdXJsSW5wKSB7XG4gICAgICAgICAgJHVybElucC52YWwodmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gX3ZhbGlkYXRlVXJsKCkge1xuICAgICAgaWYgKCFkb1ZhbGlkYXRpb24pIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIHZhciB2YWxpZCA9IF90ZXN0VXJsKF9nZXRVcmwoKSk7XG4gICAgICBpZiAoIXZhbGlkKSB7XG4gICAgICAgIGlmICghJHZhbGlkYXRlVXJsQ3RuLmlzKFwiOnZpc2libGVcIikpIHtcbiAgICAgICAgICAkdmFsaWRhdGVVcmxDdG4uc2hvdygpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB2YWxpZDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfaW5pdCgpIHtcbiAgICAgIC8vIEdldCB0aGUgSFRNTCBtYXJrdXAgZnJvbSB0aGUgdGVtcGxhdGUuXG4gICAgICAkZWxlbWVudC5hcHBlbmQoVEVNUExBVEVTW1widXJsLWZpZWxkLXRlbXBsYXRlLmh0bWxcIl0pO1xuXG4gICAgICAkdXJsSW5wID0gJGVsZW1lbnQuZmluZChcImlucHV0W25hbWU9J3VybCddXCIpO1xuICAgICAgJHZhbGlkYXRlVXJsQ3RuID0gJGVsZW1lbnQuZmluZChcImRpdi52YWxpZGF0ZS11cmxcIik7XG4gICAgICAkdmFsaWRhdGVVcmxDQiA9ICRlbGVtZW50LmZpbmQoXCJpbnB1dFtuYW1lPSd2YWxpZGF0ZS11cmwnXVwiKTtcblxuICAgICAgJHZhbGlkYXRlVXJsQ3RuLmhpZGUoKTtcblxuICAgICAgX3NldFVybChvcHRpb25zLnVybCk7XG5cbiAgICAgICR2YWxpZGF0ZVVybENCLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICBkb1ZhbGlkYXRpb24gPSAkKHRoaXMpLmlzKFwiOmNoZWNrZWRcIik7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBfaW5pdCgpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHNldFVybDogX3NldFVybCxcbiAgICAgIGdldFVybDogX2dldFVybCxcbiAgICAgIHZhbGlkYXRlVXJsOiBfdmFsaWRhdGVVcmxcbiAgICB9O1xuICB9XG5cbiAgLypcbiAgICogIEEgbGlnaHR3ZWlnaHQgcGx1Z2luIHdyYXBwZXIgYXJvdW5kIHRoZSBjb25zdHJ1Y3RvciB0aGF0IHByZXZlbnRzXG4gICAqICBtdWx0aXBsZSBpbnN0YW50aWF0aW9ucy5cbiAgICovXG4gICQuZm4udXJsRmllbGQgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKCEkLmRhdGEodGhpcywgXCJwbHVnaW5fXCIgKyBfcGx1Z2luTmFtZSkpIHtcbiAgICAgICAgJC5kYXRhKHRoaXMsIFwicGx1Z2luX1wiICsgX3BsdWdpbk5hbWUsIG5ldyBQbHVnaW4odGhpcywgb3B0aW9ucykpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xufSkoalF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50LCBURU1QTEFURVMpO1xuXG4vKiBnbG9iYWwgV0lER0VUX1NFVFRJTkdTX1VJX0NPTkZJRzogdHJ1ZSAqL1xuLyogZXhwb3J0ZWQgV0lER0VUX1NFVFRJTkdTX1VJX0NPTkZJRyAqL1xuaWYgKHR5cGVvZiBXSURHRVRfU0VUVElOR1NfVUlfQ09ORklHID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIHZhciBXSURHRVRfU0VUVElOR1NfVUlfQ09ORklHID0ge1xuICAgIC8vcHV0IHZhcmlhYmxlcyBoZXJlXG4gIH07XG59XG5cbihmdW5jdGlvbiAoKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIGFuZ3VsYXIubW9kdWxlKFwicmlzZXZpc2lvbi53aWRnZXQuY29tbW9uLnRvb2x0aXBcIiwgW1widWkuYm9vdHN0cmFwXCJdKVxuICAgIC5kaXJlY3RpdmUoXCJydlRvb2x0aXBcIiwgW2Z1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlc3RyaWN0OiBcIkFcIixcbiAgICAgICAgbGluazogZnVuY3Rpb24oJHNjb3BlLCBlbGVtZW50KSB7XG4gICAgICAgICAgZWxlbWVudC5hZGRDbGFzcyhcImZhXCIpO1xuICAgICAgICAgIGVsZW1lbnQuYWRkQ2xhc3MoXCJmYS1xdWVzdGlvbi1jaXJjbGVcIik7XG4gICAgICAgICAgZWxlbWVudC5hZGRDbGFzcyhcImZhLWxnXCIpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1dKTtcbn0oKSk7XG5cbihmdW5jdGlvbiAoKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIGFuZ3VsYXIubW9kdWxlKFwicmlzZXZpc2lvbi53aWRnZXQuY29tbW9uLnNjcm9sbC1zZXR0aW5nXCIsXG4gICAgW1wicmlzZXZpc2lvbi5jb21tb24uaTE4blwiLCBcInJpc2V2aXNpb24ud2lkZ2V0LmNvbW1vbi50b29sdGlwXCJdKVxuICAgIC5kaXJlY3RpdmUoXCJzY3JvbGxTZXR0aW5nXCIsIFtcIiR0ZW1wbGF0ZUNhY2hlXCIsIGZ1bmN0aW9uICgkdGVtcGxhdGVDYWNoZSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcmVzdHJpY3Q6IFwiRVwiLFxuICAgICAgICBzY29wZToge1xuICAgICAgICAgIHNjcm9sbDogXCI9XCJcbiAgICAgICAgfSxcbiAgICAgICAgdGVtcGxhdGU6ICR0ZW1wbGF0ZUNhY2hlLmdldChcIl9hbmd1bGFyL3Njcm9sbC1zZXR0aW5nL3Njcm9sbC1zZXR0aW5nLmh0bWxcIiksXG4gICAgICAgIHRyYW5zY2x1ZGU6IGZhbHNlLFxuICAgICAgICBsaW5rOiBmdW5jdGlvbigkc2NvcGUpIHtcbiAgICAgICAgICAkc2NvcGUuZGVmYXVsdFNldHRpbmcgPSB7XG4gICAgICAgICAgICBieTogXCJub25lXCIsXG4gICAgICAgICAgICBzcGVlZDogXCJtZWRpdW1cIixcbiAgICAgICAgICAgIHBhdXNlOiA1LFxuICAgICAgICAgICAgcHVkOiAxMFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICAkc2NvcGUuZGVmYXVsdHMgPSBmdW5jdGlvbihvYmopIHtcbiAgICAgICAgICAgIGlmIChvYmopIHtcbiAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDEsIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgICAgICAgICAgICBmb3IgKHZhciBwcm9wIGluIHNvdXJjZSkge1xuICAgICAgICAgICAgICAgICAgaWYgKG9ialtwcm9wXSA9PT0gdm9pZCAwKSB7XG4gICAgICAgICAgICAgICAgICAgIG9ialtwcm9wXSA9IHNvdXJjZVtwcm9wXTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBvYmo7XG4gICAgICAgICAgfTtcblxuICAgICAgICAgICRzY29wZS4kd2F0Y2goXCJzY3JvbGxcIiwgZnVuY3Rpb24oc2Nyb2xsKSB7XG4gICAgICAgICAgICAkc2NvcGUuZGVmYXVsdHMoc2Nyb2xsLCAkc2NvcGUuZGVmYXVsdFNldHRpbmcpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1dKTtcbn0oKSk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7IG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKFwicmlzZXZpc2lvbi53aWRnZXQuY29tbW9uLnNjcm9sbC1zZXR0aW5nXCIpOyB9XG5jYXRjaChlcnIpIHsgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoXCJyaXNldmlzaW9uLndpZGdldC5jb21tb24uc2Nyb2xsLXNldHRpbmdcIiwgW10pOyB9XG5tb2R1bGUucnVuKFtcIiR0ZW1wbGF0ZUNhY2hlXCIsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoXCJfYW5ndWxhci9zY3JvbGwtc2V0dGluZy9zY3JvbGwtc2V0dGluZy5odG1sXCIsXG4gICAgXCI8ZGl2IGNsYXNzPVxcXCJyb3dcXFwiPlxcblwiICtcbiAgICBcIiAgPGRpdiBjbGFzcz1cXFwiY29sLW1kLTNcXFwiPlxcblwiICtcbiAgICBcIiAgICA8ZGl2IGNsYXNzPVxcXCJmb3JtLWdyb3VwXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICA8bGFiZWwgY2xhc3M9XFxcImNvbnRyb2wtbGFiZWxcXFwiPnt7XFxcInNjcm9sbC5oZWFkaW5nXFxcIiB8IHRyYW5zbGF0ZX19PC9sYWJlbD5cXG5cIiArXG4gICAgXCIgICAgICA8c2VsZWN0IGlkPVxcXCJzY3JvbGwtYnlcXFwiIG5nLW1vZGVsPVxcXCJzY3JvbGwuYnlcXFwiIGNsYXNzPVxcXCJmb3JtLWNvbnRyb2xcXFwiPlxcblwiICtcbiAgICBcIiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cXFwibm9uZVxcXCI+e3snc2Nyb2xsLmJ5Lm5vbmUnIHwgdHJhbnNsYXRlfX08L29wdGlvbj5cXG5cIiArXG4gICAgXCIgICAgICAgIDxvcHRpb24gdmFsdWU9XFxcImNvbnRpbnVvdXNcXFwiPnt7J3Njcm9sbC5ieS5jb250aW51b3VzJyB8IHRyYW5zbGF0ZX19PC9vcHRpb24+XFxuXCIgK1xuICAgIFwiICAgICAgICA8b3B0aW9uIHZhbHVlPVxcXCJwYWdlXFxcIj57eydzY3JvbGwuYnkucGFnZScgfCB0cmFuc2xhdGV9fTwvb3B0aW9uPlxcblwiICtcbiAgICBcIiAgICAgIDwvc2VsZWN0PlxcblwiICtcbiAgICBcIiAgICA8L2Rpdj5cXG5cIiArXG4gICAgXCIgIDwvZGl2PlxcblwiICtcbiAgICBcIiAgPGRpdiBjbGFzcz1cXFwiY29sLW1kLTNcXFwiIG5nLXNob3c9XFxcInNjcm9sbC5ieSAhPSAnbm9uZSdcXFwiPlxcblwiICtcbiAgICBcIiAgICA8ZGl2IGNsYXNzPVxcXCJmb3JtLWdyb3VwXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICA8bGFiZWwgY2xhc3M9XFxcImNvbnRyb2wtbGFiZWxcXFwiPnt7J3Njcm9sbC5zcGVlZC5sYWJlbCcgfCB0cmFuc2xhdGV9fTwvbGFiZWw+XFxuXCIgK1xuICAgIFwiICAgICAgPHNlbGVjdCBpZD1cXFwic2Nyb2xsLXNwZWVkXFxcIiBuZy1tb2RlbD1cXFwic2Nyb2xsLnNwZWVkXFxcIiBjbGFzcz1cXFwiZm9ybS1jb250cm9sXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICAgIDxvcHRpb24gdmFsdWU9XFxcInNsb3dlc3RcXFwiPnt7J3Njcm9sbC5zcGVlZC5zbG93ZXN0JyB8IHRyYW5zbGF0ZX19PC9vcHRpb24+XFxuXCIgK1xuICAgIFwiICAgICAgICA8b3B0aW9uIHZhbHVlPVxcXCJzbG93XFxcIj57eydzY3JvbGwuc3BlZWQuc2xvdycgfCB0cmFuc2xhdGV9fTwvb3B0aW9uPlxcblwiICtcbiAgICBcIiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cXFwibWVkaXVtXFxcIj57eydzY3JvbGwuc3BlZWQubWVkaXVtJyB8IHRyYW5zbGF0ZX19PC9vcHRpb24+XFxuXCIgK1xuICAgIFwiICAgICAgICA8b3B0aW9uIHZhbHVlPVxcXCJmYXN0XFxcIj57eydzY3JvbGwuc3BlZWQuZmFzdCcgfCB0cmFuc2xhdGV9fTwvb3B0aW9uPlxcblwiICtcbiAgICBcIiAgICAgICAgPG9wdGlvbiB2YWx1ZT1cXFwiZmFzdGVzdFxcXCI+e3snc2Nyb2xsLnNwZWVkLmZhc3Rlc3QnIHwgdHJhbnNsYXRlfX08L29wdGlvbj5cXG5cIiArXG4gICAgXCIgICAgICA8L3NlbGVjdD5cXG5cIiArXG4gICAgXCIgICAgPC9kaXY+XFxuXCIgK1xuICAgIFwiICA8L2Rpdj5cXG5cIiArXG4gICAgXCIgIDxkaXYgY2xhc3M9XFxcImNvbC1tZC0zXFxcIiBuZy1zaG93PVxcXCJzY3JvbGwuYnkgIT0gJ25vbmUnXFxcIj5cXG5cIiArXG4gICAgXCIgICAgPGRpdiBjbGFzcz1cXFwiZm9ybS1ncm91cFxcXCI+XFxuXCIgK1xuICAgIFwiICAgICAgPGxhYmVsIGNsYXNzPVxcXCJjb250cm9sLWxhYmVsXFxcIj57eydzY3JvbGwucGF1c2UubGFiZWwnIHwgdHJhbnNsYXRlfX08L2xhYmVsPlxcblwiICtcbiAgICBcIiAgICAgIDxkaXYgY2xhc3M9XFxcImlucHV0LWdyb3VwXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICAgIDxpbnB1dCBpZD1cXFwic2Nyb2xsLXBhdXNlXFxcIiB0eXBlPVxcXCJudW1iZXJcXFwiIG5nLW1vZGVsPVxcXCJzY3JvbGwucGF1c2VcXFwiIGNsYXNzPVxcXCJmb3JtLWNvbnRyb2xcXFwiIC8+XFxuXCIgK1xuICAgIFwiICAgICAgICA8c3BhbiBjbGFzcz1cXFwiaW5wdXQtZ3JvdXAtYWRkb25cXFwiPnt7J2NvbW1vbi51bml0cy5zZWNvbmRzJyB8IHRyYW5zbGF0ZX19PC9zcGFuPlxcblwiICtcbiAgICBcIiAgICAgIDwvZGl2PlxcblwiICtcbiAgICBcIiAgICA8L2Rpdj5cXG5cIiArXG4gICAgXCIgIDwvZGl2PlxcblwiICtcbiAgICBcIiAgPGRpdiBjbGFzcz1cXFwiY29sLW1kLTNcXFwiIG5nLXNob3c9XFxcInNjcm9sbC5ieSAhPSAnbm9uZSdcXFwiPlxcblwiICtcbiAgICBcIiAgICA8ZGl2IGNsYXNzPVxcXCJmb3JtLWdyb3VwXFxcIj5cXG5cIiArXG4gICAgXCIgICAgICA8bGFiZWwgY2xhc3M9XFxcImNvbnRyb2wtbGFiZWxcXFwiPnt7J3Njcm9sbC5wdWQubGFiZWwnIHwgdHJhbnNsYXRlfX08L2xhYmVsPlxcblwiICtcbiAgICBcIiAgICAgIDxzcGFuIHBvcG92ZXI9XFxcInt7J3Njcm9sbC5wdWQudG9vbHRpcCcgfCB0cmFuc2xhdGV9fVxcXCIgcG9wb3Zlci10cmlnZ2VyPVxcXCJjbGlja1xcXCJcXG5cIiArXG4gICAgXCIgICAgICAgIHBvcG92ZXItcGxhY2VtZW50PVxcXCJyaWdodFxcXCIgcnYtdG9vbHRpcD48L3NwYW4+XFxuXCIgK1xuICAgIFwiICAgICAgPGRpdiBjbGFzcz1cXFwiaW5wdXQtZ3JvdXBcXFwiPlxcblwiICtcbiAgICBcIiAgICAgICAgPGlucHV0IGlkPVxcXCJzY3JvbGwtcHVkXFxcIiB0eXBlPVxcXCJudW1iZXJcXFwiIG5nLW1vZGVsPVxcXCJzY3JvbGwucHVkXFxcIiBjbGFzcz1cXFwiZm9ybS1jb250cm9sXFxcIiAvPlxcblwiICtcbiAgICBcIiAgICAgICAgPHNwYW4gY2xhc3M9XFxcImlucHV0LWdyb3VwLWFkZG9uXFxcIj57eydjb21tb24udW5pdHMuc2Vjb25kcycgfCB0cmFuc2xhdGV9fTwvc3Bhbj5cXG5cIiArXG4gICAgXCIgICAgICA8L2Rpdj5cXG5cIiArXG4gICAgXCIgICAgPC9kaXY+XFxuXCIgK1xuICAgIFwiICA8L2Rpdj5cXG5cIiArXG4gICAgXCI8L2Rpdj5cXG5cIiArXG4gICAgXCJcIik7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24gKCkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICBhbmd1bGFyLm1vZHVsZShcInJpc2V2aXNpb24ud2lkZ2V0LmNvbW1vbi53aWRnZXQtYnV0dG9uLXRvb2xiYXJcIiwgW1wicmlzZXZpc2lvbi5jb21tb24uaTE4blwiXSlcbiAgICAuZGlyZWN0aXZlKFwid2lkZ2V0QnV0dG9uVG9vbGJhclwiLCBbXCIkdGVtcGxhdGVDYWNoZVwiLCBmdW5jdGlvbiAoJHRlbXBsYXRlQ2FjaGUpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlc3RyaWN0OiBcIkVcIixcbiAgICAgICAgc2NvcGU6IHtcbiAgICAgICAgICBoZWxwOiBcIkBcIixcbiAgICAgICAgICBjb250cmlidXRlOiBcIkBcIixcbiAgICAgICAgICBzYXZlOiBcIiZcIixcbiAgICAgICAgICBjYW5jZWw6IFwiJlwiLFxuICAgICAgICAgIGRpc2FibGVTYXZlOiBcIiZcIlxuICAgICAgICB9LFxuICAgICAgICB0ZW1wbGF0ZTogJHRlbXBsYXRlQ2FjaGUuZ2V0KFwiX2FuZ3VsYXIvd2lkZ2V0LWJ1dHRvbi10b29sYmFyL3dpZGdldC1idXR0b24tdG9vbGJhci5odG1sXCIpLFxuICAgICAgICBsaW5rOiBmdW5jdGlvbiAoJHNjb3BlLCBlbGVtLCBhdHRycykge1xuICAgICAgICAgICRzY29wZS5oZWxwUmVmID0gXCJcIjtcbiAgICAgICAgICAkc2NvcGUuY29udHJpYnV0ZVJlZiA9IFwiXCI7XG5cbiAgICAgICAgICBpZiAodHlwZW9mIGF0dHJzLmhlbHAgIT09IFwidW5kZWZpbmVkXCIgJiYgYXR0cnMuaGVscCAhPT0gXCJcIikge1xuICAgICAgICAgICAgJHNjb3BlLmhlbHBSZWYgPSBhdHRycy5oZWxwO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh0eXBlb2YgYXR0cnMuY29udHJpYnV0ZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBhdHRycy5jb250cmlidXRlICE9PSBcIlwiKSB7XG4gICAgICAgICAgICAkc2NvcGUuY29udHJpYnV0ZVJlZiA9IGF0dHJzLmNvbnRyaWJ1dGU7XG4gICAgICAgICAgfVxuXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfV0pO1xufSgpKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHsgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoXCJyaXNldmlzaW9uLndpZGdldC5jb21tb24ud2lkZ2V0LWJ1dHRvbi10b29sYmFyXCIpOyB9XG5jYXRjaChlcnIpIHsgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoXCJyaXNldmlzaW9uLndpZGdldC5jb21tb24ud2lkZ2V0LWJ1dHRvbi10b29sYmFyXCIsIFtdKTsgfVxubW9kdWxlLnJ1bihbXCIkdGVtcGxhdGVDYWNoZVwiLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICBcInVzZSBzdHJpY3RcIjtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KFwiX2FuZ3VsYXIvd2lkZ2V0LWJ1dHRvbi10b29sYmFyL3dpZGdldC1idXR0b24tdG9vbGJhci5odG1sXCIsXG4gICAgXCI8ZGl2IGNsYXNzPVxcXCJidG4tdG9vbGJhciBzdGlja3ktYnV0dG9uc1xcXCI+XFxuXCIgK1xuICAgIFwiICA8YnV0dG9uIGlkPVxcXCJzYXZlXFxcIiBjbGFzcz1cXFwiYnRuIGJ0bi1wcmltYXJ5IGJ0bi1maXhlZC13aWR0aFxcXCIgdHlwZT1cXFwiYnV0dG9uXFxcIiBuZy1jbGljaz1cXFwic2F2ZSgpXFxcIiBuZy1kaXNhYmxlZD1cXFwiZGlzYWJsZVNhdmUoKVxcXCI+XFxuXCIgK1xuICAgIFwiICAgIDxzcGFuPnt7XFxcImNvbW1vbi5zYXZlXFxcIiB8IHRyYW5zbGF0ZX19PC9zcGFuPlxcblwiICtcbiAgICBcIiAgICA8aSBjbGFzcz1cXFwiZmEgZmEtd2hpdGUgZmEtY2hlY2sgZmEtbGcgaWNvbi1yaWdodFxcXCI+PC9pPlxcblwiICtcbiAgICBcIiAgPC9idXR0b24+XFxuXCIgK1xuICAgIFwiICA8YnV0dG9uIGlkPVxcXCJjYW5jZWxcXFwiIGNsYXNzPVxcXCJidG4gYnRuLWRlZmF1bHQgYnRuLWZpeGVkLXdpZHRoXFxcIiB0eXBlPVxcXCJidXR0b25cXFwiIG5nLWNsaWNrPVxcXCJjYW5jZWwoKVxcXCI+XFxuXCIgK1xuICAgIFwiICAgIDxzcGFuPnt7XFxcImNvbW1vbi5jYW5jZWxcXFwiIHwgdHJhbnNsYXRlfX08L3NwYW4+XFxuXCIgK1xuICAgIFwiICAgIDxpIGNsYXNzPVxcXCJmYSBmYS13aGl0ZSBmYS10aW1lcyBmYS1sZyBpY29uLXJpZ2h0XFxcIj48L2k+XFxuXCIgK1xuICAgIFwiICA8L2J1dHRvbj5cXG5cIiArXG4gICAgXCIgIDxhIHR5cGU9XFxcImJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tcnYtaGVscCBidG4tZml4ZWQtd2lkdGhcXFwiIHRhcmdldD1cXFwiX2JsYW5rXFxcIiBocmVmPXt7aGVscFJlZn19IG5nLWlmPVxcXCJoZWxwUmVmICE9PSAnJ1xcXCI+XFxuXCIgK1xuICAgIFwiICAgIDxzcGFuPnt7XFxcImNvbW1vbi5oZWxwXFxcIiB8IHRyYW5zbGF0ZX19PC9zcGFuPlxcblwiICtcbiAgICBcIiAgICA8aSBjbGFzcz1cXFwiZmEgZmEtcXVlc3Rpb24tY2lyY2xlIGZhLWxnIGljb24tcmlnaHRcXFwiPjwvaT5cXG5cIiArXG4gICAgXCIgIDwvYT5cXG5cIiArXG4gICAgXCIgIDxhIHR5cGU9XFxcImJ1dHRvblxcXCIgY2xhc3M9XFxcImJ0biBidG4tcnYtaGVscCBidG4tZml4ZWQtd2lkdGhcXFwiIHRhcmdldD1cXFwiX2JsYW5rXFxcIiBocmVmPXt7Y29udHJpYnV0ZVJlZn19IG5nLWlmPVxcXCJjb250cmlidXRlUmVmICE9PSAnJ1xcXCI+XFxuXCIgK1xuICAgIFwiICAgIDxzcGFuPnt7XFxcImNvbW1vbi5jb250cmlidXRlXFxcIiB8IHRyYW5zbGF0ZX19PC9zcGFuPlxcblwiICtcbiAgICBcIiAgICA8aSBjbGFzcz1cXFwiZmEgZmEtZ2l0aHViIGZhLWxnIGljb24tcmlnaHRcXFwiPjwvaT5cXG5cIiArXG4gICAgXCIgIDwvYT5cXG5cIiArXG4gICAgXCI8L2Rpdj5cXG5cIiArXG4gICAgXCJcIik7XG59XSk7XG59KSgpO1xuXG4vKipcbiAqIEBsaWNlbnNlIHd5c2lodG1sNSB2MC40LjBwcmVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS94aW5nL3d5c2lodG1sNVxuICpcbiAqIEF1dGhvcjogQ2hyaXN0b3BoZXIgQmx1bSAoaHR0cHM6Ly9naXRodWIuY29tL3RpZmYpXG4gKlxuICogQ29weXJpZ2h0IChDKSAyMDEyIFhJTkcgQUdcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSAoTUlUKVxuICpcbiAqL1xudmFyIHd5c2lodG1sNSA9IHtcbiAgdmVyc2lvbjogXCIwLjQuMHByZVwiLFxuICBcbiAgLy8gbmFtZXNwYWNlc1xuICBjb21tYW5kczogICB7fSxcbiAgZG9tOiAgICAgICAge30sXG4gIHF1aXJrczogICAgIHt9LFxuICB0b29sYmFyOiAgICB7fSxcbiAgbGFuZzogICAgICAge30sXG4gIHNlbGVjdGlvbjogIHt9LFxuICB2aWV3czogICAgICB7fSxcbiAgXG4gIElOVklTSUJMRV9TUEFDRTogXCJcXHVGRUZGXCIsXG4gIFxuICBFTVBUWV9GVU5DVElPTjogZnVuY3Rpb24oKSB7fSxcbiAgXG4gIEVMRU1FTlRfTk9ERTogMSxcbiAgVEVYVF9OT0RFOiAgICAzLFxuICBcbiAgQkFDS1NQQUNFX0tFWTogIDgsXG4gIEVOVEVSX0tFWTogICAgICAxMyxcbiAgRVNDQVBFX0tFWTogICAgIDI3LFxuICBTUEFDRV9LRVk6ICAgICAgMzIsXG4gIERFTEVURV9LRVk6ICAgICA0NlxufTsvKipcbiAqIEBsaWNlbnNlIFJhbmd5LCBhIGNyb3NzLWJyb3dzZXIgSmF2YVNjcmlwdCByYW5nZSBhbmQgc2VsZWN0aW9uIGxpYnJhcnlcbiAqIGh0dHA6Ly9jb2RlLmdvb2dsZS5jb20vcC9yYW5neS9cbiAqXG4gKiBDb3B5cmlnaHQgMjAxMSwgVGltIERvd25cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS5cbiAqIFZlcnNpb246IDEuMi4yXG4gKiBCdWlsZCBkYXRlOiAxMyBOb3ZlbWJlciAyMDExXG4gKi9cbndpbmRvd1sncmFuZ3knXSA9IChmdW5jdGlvbigpIHtcblxuXG4gICAgdmFyIE9CSkVDVCA9IFwib2JqZWN0XCIsIEZVTkNUSU9OID0gXCJmdW5jdGlvblwiLCBVTkRFRklORUQgPSBcInVuZGVmaW5lZFwiO1xuXG4gICAgdmFyIGRvbVJhbmdlUHJvcGVydGllcyA9IFtcInN0YXJ0Q29udGFpbmVyXCIsIFwic3RhcnRPZmZzZXRcIiwgXCJlbmRDb250YWluZXJcIiwgXCJlbmRPZmZzZXRcIiwgXCJjb2xsYXBzZWRcIixcbiAgICAgICAgXCJjb21tb25BbmNlc3RvckNvbnRhaW5lclwiLCBcIlNUQVJUX1RPX1NUQVJUXCIsIFwiU1RBUlRfVE9fRU5EXCIsIFwiRU5EX1RPX1NUQVJUXCIsIFwiRU5EX1RPX0VORFwiXTtcblxuICAgIHZhciBkb21SYW5nZU1ldGhvZHMgPSBbXCJzZXRTdGFydFwiLCBcInNldFN0YXJ0QmVmb3JlXCIsIFwic2V0U3RhcnRBZnRlclwiLCBcInNldEVuZFwiLCBcInNldEVuZEJlZm9yZVwiLFxuICAgICAgICBcInNldEVuZEFmdGVyXCIsIFwiY29sbGFwc2VcIiwgXCJzZWxlY3ROb2RlXCIsIFwic2VsZWN0Tm9kZUNvbnRlbnRzXCIsIFwiY29tcGFyZUJvdW5kYXJ5UG9pbnRzXCIsIFwiZGVsZXRlQ29udGVudHNcIixcbiAgICAgICAgXCJleHRyYWN0Q29udGVudHNcIiwgXCJjbG9uZUNvbnRlbnRzXCIsIFwiaW5zZXJ0Tm9kZVwiLCBcInN1cnJvdW5kQ29udGVudHNcIiwgXCJjbG9uZVJhbmdlXCIsIFwidG9TdHJpbmdcIiwgXCJkZXRhY2hcIl07XG5cbiAgICB2YXIgdGV4dFJhbmdlUHJvcGVydGllcyA9IFtcImJvdW5kaW5nSGVpZ2h0XCIsIFwiYm91bmRpbmdMZWZ0XCIsIFwiYm91bmRpbmdUb3BcIiwgXCJib3VuZGluZ1dpZHRoXCIsIFwiaHRtbFRleHRcIiwgXCJ0ZXh0XCJdO1xuXG4gICAgLy8gU3Vic2V0IG9mIFRleHRSYW5nZSdzIGZ1bGwgc2V0IG9mIG1ldGhvZHMgdGhhdCB3ZSdyZSBpbnRlcmVzdGVkIGluXG4gICAgdmFyIHRleHRSYW5nZU1ldGhvZHMgPSBbXCJjb2xsYXBzZVwiLCBcImNvbXBhcmVFbmRQb2ludHNcIiwgXCJkdXBsaWNhdGVcIiwgXCJnZXRCb29rbWFya1wiLCBcIm1vdmVUb0Jvb2ttYXJrXCIsXG4gICAgICAgIFwibW92ZVRvRWxlbWVudFRleHRcIiwgXCJwYXJlbnRFbGVtZW50XCIsIFwicGFzdGVIVE1MXCIsIFwic2VsZWN0XCIsIFwic2V0RW5kUG9pbnRcIiwgXCJnZXRCb3VuZGluZ0NsaWVudFJlY3RcIl07XG5cbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gICAgLy8gVHJpbyBvZiBmdW5jdGlvbnMgdGFrZW4gZnJvbSBQZXRlciBNaWNoYXV4J3MgYXJ0aWNsZTpcbiAgICAvLyBodHRwOi8vcGV0ZXIubWljaGF1eC5jYS9hcnRpY2xlcy9mZWF0dXJlLWRldGVjdGlvbi1zdGF0ZS1vZi10aGUtYXJ0LWJyb3dzZXItc2NyaXB0aW5nXG4gICAgZnVuY3Rpb24gaXNIb3N0TWV0aG9kKG8sIHApIHtcbiAgICAgICAgdmFyIHQgPSB0eXBlb2Ygb1twXTtcbiAgICAgICAgcmV0dXJuIHQgPT0gRlVOQ1RJT04gfHwgKCEhKHQgPT0gT0JKRUNUICYmIG9bcF0pKSB8fCB0ID09IFwidW5rbm93blwiO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzSG9zdE9iamVjdChvLCBwKSB7XG4gICAgICAgIHJldHVybiAhISh0eXBlb2Ygb1twXSA9PSBPQkpFQ1QgJiYgb1twXSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaXNIb3N0UHJvcGVydHkobywgcCkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIG9bcF0gIT0gVU5ERUZJTkVEO1xuICAgIH1cblxuICAgIC8vIENyZWF0ZXMgYSBjb252ZW5pZW5jZSBmdW5jdGlvbiB0byBzYXZlIHZlcmJvc2UgcmVwZWF0ZWQgY2FsbHMgdG8gdGVzdHMgZnVuY3Rpb25zXG4gICAgZnVuY3Rpb24gY3JlYXRlTXVsdGlwbGVQcm9wZXJ0eVRlc3QodGVzdEZ1bmMpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKG8sIHByb3BzKSB7XG4gICAgICAgICAgICB2YXIgaSA9IHByb3BzLmxlbmd0aDtcbiAgICAgICAgICAgIHdoaWxlIChpLS0pIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRlc3RGdW5jKG8sIHByb3BzW2ldKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgLy8gTmV4dCB0cmlvIG9mIGZ1bmN0aW9ucyBhcmUgYSBjb252ZW5pZW5jZSB0byBzYXZlIHZlcmJvc2UgcmVwZWF0ZWQgY2FsbHMgdG8gcHJldmlvdXMgdHdvIGZ1bmN0aW9uc1xuICAgIHZhciBhcmVIb3N0TWV0aG9kcyA9IGNyZWF0ZU11bHRpcGxlUHJvcGVydHlUZXN0KGlzSG9zdE1ldGhvZCk7XG4gICAgdmFyIGFyZUhvc3RPYmplY3RzID0gY3JlYXRlTXVsdGlwbGVQcm9wZXJ0eVRlc3QoaXNIb3N0T2JqZWN0KTtcbiAgICB2YXIgYXJlSG9zdFByb3BlcnRpZXMgPSBjcmVhdGVNdWx0aXBsZVByb3BlcnR5VGVzdChpc0hvc3RQcm9wZXJ0eSk7XG5cbiAgICBmdW5jdGlvbiBpc1RleHRSYW5nZShyYW5nZSkge1xuICAgICAgICByZXR1cm4gcmFuZ2UgJiYgYXJlSG9zdE1ldGhvZHMocmFuZ2UsIHRleHRSYW5nZU1ldGhvZHMpICYmIGFyZUhvc3RQcm9wZXJ0aWVzKHJhbmdlLCB0ZXh0UmFuZ2VQcm9wZXJ0aWVzKTtcbiAgICB9XG5cbiAgICB2YXIgYXBpID0ge1xuICAgICAgICB2ZXJzaW9uOiBcIjEuMi4yXCIsXG4gICAgICAgIGluaXRpYWxpemVkOiBmYWxzZSxcbiAgICAgICAgc3VwcG9ydGVkOiB0cnVlLFxuXG4gICAgICAgIHV0aWw6IHtcbiAgICAgICAgICAgIGlzSG9zdE1ldGhvZDogaXNIb3N0TWV0aG9kLFxuICAgICAgICAgICAgaXNIb3N0T2JqZWN0OiBpc0hvc3RPYmplY3QsXG4gICAgICAgICAgICBpc0hvc3RQcm9wZXJ0eTogaXNIb3N0UHJvcGVydHksXG4gICAgICAgICAgICBhcmVIb3N0TWV0aG9kczogYXJlSG9zdE1ldGhvZHMsXG4gICAgICAgICAgICBhcmVIb3N0T2JqZWN0czogYXJlSG9zdE9iamVjdHMsXG4gICAgICAgICAgICBhcmVIb3N0UHJvcGVydGllczogYXJlSG9zdFByb3BlcnRpZXMsXG4gICAgICAgICAgICBpc1RleHRSYW5nZTogaXNUZXh0UmFuZ2VcbiAgICAgICAgfSxcblxuICAgICAgICBmZWF0dXJlczoge30sXG5cbiAgICAgICAgbW9kdWxlczoge30sXG4gICAgICAgIGNvbmZpZzoge1xuICAgICAgICAgICAgYWxlcnRPbldhcm46IGZhbHNlLFxuICAgICAgICAgICAgcHJlZmVyVGV4dFJhbmdlOiBmYWxzZVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGZhaWwocmVhc29uKSB7XG4gICAgICAgIHdpbmRvdy5hbGVydChcIlJhbmd5IG5vdCBzdXBwb3J0ZWQgaW4geW91ciBicm93c2VyLiBSZWFzb246IFwiICsgcmVhc29uKTtcbiAgICAgICAgYXBpLmluaXRpYWxpemVkID0gdHJ1ZTtcbiAgICAgICAgYXBpLnN1cHBvcnRlZCA9IGZhbHNlO1xuICAgIH1cblxuICAgIGFwaS5mYWlsID0gZmFpbDtcblxuICAgIGZ1bmN0aW9uIHdhcm4obXNnKSB7XG4gICAgICAgIHZhciB3YXJuaW5nTWVzc2FnZSA9IFwiUmFuZ3kgd2FybmluZzogXCIgKyBtc2c7XG4gICAgICAgIGlmIChhcGkuY29uZmlnLmFsZXJ0T25XYXJuKSB7XG4gICAgICAgICAgICB3aW5kb3cuYWxlcnQod2FybmluZ01lc3NhZ2UpO1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cuY29uc29sZSAhPSBVTkRFRklORUQgJiYgdHlwZW9mIHdpbmRvdy5jb25zb2xlLmxvZyAhPSBVTkRFRklORUQpIHtcbiAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyh3YXJuaW5nTWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhcGkud2FybiA9IHdhcm47XG5cbiAgICBpZiAoe30uaGFzT3duUHJvcGVydHkpIHtcbiAgICAgICAgYXBpLnV0aWwuZXh0ZW5kID0gZnVuY3Rpb24obywgcHJvcHMpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGkgaW4gcHJvcHMpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvcHMuaGFzT3duUHJvcGVydHkoaSkpIHtcbiAgICAgICAgICAgICAgICAgICAgb1tpXSA9IHByb3BzW2ldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBmYWlsKFwiaGFzT3duUHJvcGVydHkgbm90IHN1cHBvcnRlZFwiKTtcbiAgICB9XG5cbiAgICB2YXIgaW5pdExpc3RlbmVycyA9IFtdO1xuICAgIHZhciBtb2R1bGVJbml0aWFsaXplcnMgPSBbXTtcblxuICAgIC8vIEluaXRpYWxpemF0aW9uXG4gICAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICAgICAgaWYgKGFwaS5pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciB0ZXN0UmFuZ2U7XG4gICAgICAgIHZhciBpbXBsZW1lbnRzRG9tUmFuZ2UgPSBmYWxzZSwgaW1wbGVtZW50c1RleHRSYW5nZSA9IGZhbHNlO1xuXG4gICAgICAgIC8vIEZpcnN0LCBwZXJmb3JtIGJhc2ljIGZlYXR1cmUgdGVzdHNcblxuICAgICAgICBpZiAoaXNIb3N0TWV0aG9kKGRvY3VtZW50LCBcImNyZWF0ZVJhbmdlXCIpKSB7XG4gICAgICAgICAgICB0ZXN0UmFuZ2UgPSBkb2N1bWVudC5jcmVhdGVSYW5nZSgpO1xuICAgICAgICAgICAgaWYgKGFyZUhvc3RNZXRob2RzKHRlc3RSYW5nZSwgZG9tUmFuZ2VNZXRob2RzKSAmJiBhcmVIb3N0UHJvcGVydGllcyh0ZXN0UmFuZ2UsIGRvbVJhbmdlUHJvcGVydGllcykpIHtcbiAgICAgICAgICAgICAgICBpbXBsZW1lbnRzRG9tUmFuZ2UgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGVzdFJhbmdlLmRldGFjaCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGJvZHkgPSBpc0hvc3RPYmplY3QoZG9jdW1lbnQsIFwiYm9keVwiKSA/IGRvY3VtZW50LmJvZHkgOiBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImJvZHlcIilbMF07XG5cbiAgICAgICAgaWYgKGJvZHkgJiYgaXNIb3N0TWV0aG9kKGJvZHksIFwiY3JlYXRlVGV4dFJhbmdlXCIpKSB7XG4gICAgICAgICAgICB0ZXN0UmFuZ2UgPSBib2R5LmNyZWF0ZVRleHRSYW5nZSgpO1xuICAgICAgICAgICAgaWYgKGlzVGV4dFJhbmdlKHRlc3RSYW5nZSkpIHtcbiAgICAgICAgICAgICAgICBpbXBsZW1lbnRzVGV4dFJhbmdlID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghaW1wbGVtZW50c0RvbVJhbmdlICYmICFpbXBsZW1lbnRzVGV4dFJhbmdlKSB7XG4gICAgICAgICAgICBmYWlsKFwiTmVpdGhlciBSYW5nZSBub3IgVGV4dFJhbmdlIGFyZSBpbXBsZW1lbnRlZFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGFwaS5pbml0aWFsaXplZCA9IHRydWU7XG4gICAgICAgIGFwaS5mZWF0dXJlcyA9IHtcbiAgICAgICAgICAgIGltcGxlbWVudHNEb21SYW5nZTogaW1wbGVtZW50c0RvbVJhbmdlLFxuICAgICAgICAgICAgaW1wbGVtZW50c1RleHRSYW5nZTogaW1wbGVtZW50c1RleHRSYW5nZVxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIEluaXRpYWxpemUgbW9kdWxlcyBhbmQgY2FsbCBpbml0IGxpc3RlbmVyc1xuICAgICAgICB2YXIgYWxsTGlzdGVuZXJzID0gbW9kdWxlSW5pdGlhbGl6ZXJzLmNvbmNhdChpbml0TGlzdGVuZXJzKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGFsbExpc3RlbmVycy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBhbGxMaXN0ZW5lcnNbaV0oYXBpKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzSG9zdE9iamVjdCh3aW5kb3csIFwiY29uc29sZVwiKSAmJiBpc0hvc3RNZXRob2Qod2luZG93LmNvbnNvbGUsIFwibG9nXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhcIkluaXQgbGlzdGVuZXIgdGhyZXcgYW4gZXhjZXB0aW9uLiBDb250aW51aW5nLlwiLCBleCk7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBBbGxvdyBleHRlcm5hbCBzY3JpcHRzIHRvIGluaXRpYWxpemUgdGhpcyBsaWJyYXJ5IGluIGNhc2UgaXQncyBsb2FkZWQgYWZ0ZXIgdGhlIGRvY3VtZW50IGhhcyBsb2FkZWRcbiAgICBhcGkuaW5pdCA9IGluaXQ7XG5cbiAgICAvLyBFeGVjdXRlIGxpc3RlbmVyIGltbWVkaWF0ZWx5IGlmIGFscmVhZHkgaW5pdGlhbGl6ZWRcbiAgICBhcGkuYWRkSW5pdExpc3RlbmVyID0gZnVuY3Rpb24obGlzdGVuZXIpIHtcbiAgICAgICAgaWYgKGFwaS5pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgbGlzdGVuZXIoYXBpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGluaXRMaXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIGNyZWF0ZU1pc3NpbmdOYXRpdmVBcGlMaXN0ZW5lcnMgPSBbXTtcblxuICAgIGFwaS5hZGRDcmVhdGVNaXNzaW5nTmF0aXZlQXBpTGlzdGVuZXIgPSBmdW5jdGlvbihsaXN0ZW5lcikge1xuICAgICAgICBjcmVhdGVNaXNzaW5nTmF0aXZlQXBpTGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVNaXNzaW5nTmF0aXZlQXBpKHdpbikge1xuICAgICAgICB3aW4gPSB3aW4gfHwgd2luZG93O1xuICAgICAgICBpbml0KCk7XG5cbiAgICAgICAgLy8gTm90aWZ5IGxpc3RlbmVyc1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gY3JlYXRlTWlzc2luZ05hdGl2ZUFwaUxpc3RlbmVycy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgICAgICAgY3JlYXRlTWlzc2luZ05hdGl2ZUFwaUxpc3RlbmVyc1tpXSh3aW4pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYXBpLmNyZWF0ZU1pc3NpbmdOYXRpdmVBcGkgPSBjcmVhdGVNaXNzaW5nTmF0aXZlQXBpO1xuXG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZnVuY3Rpb24gTW9kdWxlKG5hbWUpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5pbml0aWFsaXplZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnN1cHBvcnRlZCA9IGZhbHNlO1xuICAgIH1cblxuICAgIE1vZHVsZS5wcm90b3R5cGUuZmFpbCA9IGZ1bmN0aW9uKHJlYXNvbikge1xuICAgICAgICB0aGlzLmluaXRpYWxpemVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5zdXBwb3J0ZWQgPSBmYWxzZTtcblxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNb2R1bGUgJ1wiICsgdGhpcy5uYW1lICsgXCInIGZhaWxlZCB0byBsb2FkOiBcIiArIHJlYXNvbik7XG4gICAgfTtcblxuICAgIE1vZHVsZS5wcm90b3R5cGUud2FybiA9IGZ1bmN0aW9uKG1zZykge1xuICAgICAgICBhcGkud2FybihcIk1vZHVsZSBcIiArIHRoaXMubmFtZSArIFwiOiBcIiArIG1zZyk7XG4gICAgfTtcblxuICAgIE1vZHVsZS5wcm90b3R5cGUuY3JlYXRlRXJyb3IgPSBmdW5jdGlvbihtc2cpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFcnJvcihcIkVycm9yIGluIFJhbmd5IFwiICsgdGhpcy5uYW1lICsgXCIgbW9kdWxlOiBcIiArIG1zZyk7XG4gICAgfTtcblxuICAgIGFwaS5jcmVhdGVNb2R1bGUgPSBmdW5jdGlvbihuYW1lLCBpbml0RnVuYykge1xuICAgICAgICB2YXIgbW9kdWxlID0gbmV3IE1vZHVsZShuYW1lKTtcbiAgICAgICAgYXBpLm1vZHVsZXNbbmFtZV0gPSBtb2R1bGU7XG5cbiAgICAgICAgbW9kdWxlSW5pdGlhbGl6ZXJzLnB1c2goZnVuY3Rpb24oYXBpKSB7XG4gICAgICAgICAgICBpbml0RnVuYyhhcGksIG1vZHVsZSk7XG4gICAgICAgICAgICBtb2R1bGUuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgICAgICAgICAgbW9kdWxlLnN1cHBvcnRlZCA9IHRydWU7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBhcGkucmVxdWlyZU1vZHVsZXMgPSBmdW5jdGlvbihtb2R1bGVzKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBtb2R1bGVzLmxlbmd0aCwgbW9kdWxlLCBtb2R1bGVOYW1lOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgIG1vZHVsZU5hbWUgPSBtb2R1bGVzW2ldO1xuICAgICAgICAgICAgbW9kdWxlID0gYXBpLm1vZHVsZXNbbW9kdWxlTmFtZV07XG4gICAgICAgICAgICBpZiAoIW1vZHVsZSB8fCAhKG1vZHVsZSBpbnN0YW5jZW9mIE1vZHVsZSkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNb2R1bGUgJ1wiICsgbW9kdWxlTmFtZSArIFwiJyBub3QgZm91bmRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIW1vZHVsZS5zdXBwb3J0ZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNb2R1bGUgJ1wiICsgbW9kdWxlTmFtZSArIFwiJyBub3Qgc3VwcG9ydGVkXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgICAvLyBXYWl0IGZvciBkb2N1bWVudCB0byBsb2FkIGJlZm9yZSBydW5uaW5nIHRlc3RzXG5cbiAgICB2YXIgZG9jUmVhZHkgPSBmYWxzZTtcblxuICAgIHZhciBsb2FkSGFuZGxlciA9IGZ1bmN0aW9uKGUpIHtcblxuICAgICAgICBpZiAoIWRvY1JlYWR5KSB7XG4gICAgICAgICAgICBkb2NSZWFkeSA9IHRydWU7XG4gICAgICAgICAgICBpZiAoIWFwaS5pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgICAgIGluaXQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvLyBUZXN0IHdoZXRoZXIgd2UgaGF2ZSB3aW5kb3cgYW5kIGRvY3VtZW50IG9iamVjdHMgdGhhdCB3ZSB3aWxsIG5lZWRcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PSBVTkRFRklORUQpIHtcbiAgICAgICAgZmFpbChcIk5vIHdpbmRvdyBmb3VuZFwiKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09IFVOREVGSU5FRCkge1xuICAgICAgICBmYWlsKFwiTm8gZG9jdW1lbnQgZm91bmRcIik7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoaXNIb3N0TWV0aG9kKGRvY3VtZW50LCBcImFkZEV2ZW50TGlzdGVuZXJcIikpIHtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgbG9hZEhhbmRsZXIsIGZhbHNlKTtcbiAgICB9XG5cbiAgICAvLyBBZGQgYSBmYWxsYmFjayBpbiBjYXNlIHRoZSBET01Db250ZW50TG9hZGVkIGV2ZW50IGlzbid0IHN1cHBvcnRlZFxuICAgIGlmIChpc0hvc3RNZXRob2Qod2luZG93LCBcImFkZEV2ZW50TGlzdGVuZXJcIikpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsIGxvYWRIYW5kbGVyLCBmYWxzZSk7XG4gICAgfSBlbHNlIGlmIChpc0hvc3RNZXRob2Qod2luZG93LCBcImF0dGFjaEV2ZW50XCIpKSB7XG4gICAgICAgIHdpbmRvdy5hdHRhY2hFdmVudChcIm9ubG9hZFwiLCBsb2FkSGFuZGxlcik7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZmFpbChcIldpbmRvdyBkb2VzIG5vdCBoYXZlIHJlcXVpcmVkIGFkZEV2ZW50TGlzdGVuZXIgb3IgYXR0YWNoRXZlbnQgbWV0aG9kXCIpO1xuICAgIH1cblxuICAgIHJldHVybiBhcGk7XG59KSgpO1xucmFuZ3kuY3JlYXRlTW9kdWxlKFwiRG9tVXRpbFwiLCBmdW5jdGlvbihhcGksIG1vZHVsZSkge1xuXG4gICAgdmFyIFVOREVGID0gXCJ1bmRlZmluZWRcIjtcbiAgICB2YXIgdXRpbCA9IGFwaS51dGlsO1xuXG4gICAgLy8gUGVyZm9ybSBmZWF0dXJlIHRlc3RzXG4gICAgaWYgKCF1dGlsLmFyZUhvc3RNZXRob2RzKGRvY3VtZW50LCBbXCJjcmVhdGVEb2N1bWVudEZyYWdtZW50XCIsIFwiY3JlYXRlRWxlbWVudFwiLCBcImNyZWF0ZVRleHROb2RlXCJdKSkge1xuICAgICAgICBtb2R1bGUuZmFpbChcImRvY3VtZW50IG1pc3NpbmcgYSBOb2RlIGNyZWF0aW9uIG1ldGhvZFwiKTtcbiAgICB9XG5cbiAgICBpZiAoIXV0aWwuaXNIb3N0TWV0aG9kKGRvY3VtZW50LCBcImdldEVsZW1lbnRzQnlUYWdOYW1lXCIpKSB7XG4gICAgICAgIG1vZHVsZS5mYWlsKFwiZG9jdW1lbnQgbWlzc2luZyBnZXRFbGVtZW50c0J5VGFnTmFtZSBtZXRob2RcIik7XG4gICAgfVxuXG4gICAgdmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBpZiAoIXV0aWwuYXJlSG9zdE1ldGhvZHMoZWwsIFtcImluc2VydEJlZm9yZVwiLCBcImFwcGVuZENoaWxkXCIsIFwiY2xvbmVOb2RlXCJdIHx8XG4gICAgICAgICAgICAhdXRpbC5hcmVIb3N0T2JqZWN0cyhlbCwgW1wicHJldmlvdXNTaWJsaW5nXCIsIFwibmV4dFNpYmxpbmdcIiwgXCJjaGlsZE5vZGVzXCIsIFwicGFyZW50Tm9kZVwiXSkpKSB7XG4gICAgICAgIG1vZHVsZS5mYWlsKFwiSW5jb21wbGV0ZSBFbGVtZW50IGltcGxlbWVudGF0aW9uXCIpO1xuICAgIH1cblxuICAgIC8vIGlubmVySFRNTCBpcyByZXF1aXJlZCBmb3IgUmFuZ2UncyBjcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQgbWV0aG9kXG4gICAgaWYgKCF1dGlsLmlzSG9zdFByb3BlcnR5KGVsLCBcImlubmVySFRNTFwiKSkge1xuICAgICAgICBtb2R1bGUuZmFpbChcIkVsZW1lbnQgaXMgbWlzc2luZyBpbm5lckhUTUwgcHJvcGVydHlcIik7XG4gICAgfVxuXG4gICAgdmFyIHRleHROb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJ0ZXN0XCIpO1xuICAgIGlmICghdXRpbC5hcmVIb3N0TWV0aG9kcyh0ZXh0Tm9kZSwgW1wic3BsaXRUZXh0XCIsIFwiZGVsZXRlRGF0YVwiLCBcImluc2VydERhdGFcIiwgXCJhcHBlbmREYXRhXCIsIFwiY2xvbmVOb2RlXCJdIHx8XG4gICAgICAgICAgICAhdXRpbC5hcmVIb3N0T2JqZWN0cyhlbCwgW1wicHJldmlvdXNTaWJsaW5nXCIsIFwibmV4dFNpYmxpbmdcIiwgXCJjaGlsZE5vZGVzXCIsIFwicGFyZW50Tm9kZVwiXSkgfHxcbiAgICAgICAgICAgICF1dGlsLmFyZUhvc3RQcm9wZXJ0aWVzKHRleHROb2RlLCBbXCJkYXRhXCJdKSkpIHtcbiAgICAgICAgbW9kdWxlLmZhaWwoXCJJbmNvbXBsZXRlIFRleHQgTm9kZSBpbXBsZW1lbnRhdGlvblwiKTtcbiAgICB9XG5cbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gICAgLy8gUmVtb3ZlZCB1c2Ugb2YgaW5kZXhPZiBiZWNhdXNlIG9mIGEgYml6YXJyZSBidWcgaW4gT3BlcmEgdGhhdCBpcyB0aHJvd24gaW4gb25lIG9mIHRoZSBBY2lkMyB0ZXN0cy4gSSBoYXZlbid0IGJlZW5cbiAgICAvLyBhYmxlIHRvIHJlcGxpY2F0ZSBpdCBvdXRzaWRlIG9mIHRoZSB0ZXN0LiBUaGUgYnVnIGlzIHRoYXQgaW5kZXhPZiByZXR1cm5zIC0xIHdoZW4gY2FsbGVkIG9uIGFuIEFycmF5IHRoYXRcbiAgICAvLyBjb250YWlucyBqdXN0IHRoZSBkb2N1bWVudCBhcyBhIHNpbmdsZSBlbGVtZW50IGFuZCB0aGUgdmFsdWUgc2VhcmNoZWQgZm9yIGlzIHRoZSBkb2N1bWVudC5cbiAgICB2YXIgYXJyYXlDb250YWlucyA9IC8qQXJyYXkucHJvdG90eXBlLmluZGV4T2YgP1xuICAgICAgICBmdW5jdGlvbihhcnIsIHZhbCkge1xuICAgICAgICAgICAgcmV0dXJuIGFyci5pbmRleE9mKHZhbCkgPiAtMTtcbiAgICAgICAgfToqL1xuXG4gICAgICAgIGZ1bmN0aW9uKGFyciwgdmFsKSB7XG4gICAgICAgICAgICB2YXIgaSA9IGFyci5sZW5ndGg7XG4gICAgICAgICAgICB3aGlsZSAoaS0tKSB7XG4gICAgICAgICAgICAgICAgaWYgKGFycltpXSA9PT0gdmFsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfTtcblxuICAgIC8vIE9wZXJhIDExIHB1dHMgSFRNTCBlbGVtZW50cyBpbiB0aGUgbnVsbCBuYW1lc3BhY2UsIGl0IHNlZW1zLCBhbmQgSUUgNyBoYXMgdW5kZWZpbmVkIG5hbWVzcGFjZVVSSVxuICAgIGZ1bmN0aW9uIGlzSHRtbE5hbWVzcGFjZShub2RlKSB7XG4gICAgICAgIHZhciBucztcbiAgICAgICAgcmV0dXJuIHR5cGVvZiBub2RlLm5hbWVzcGFjZVVSSSA9PSBVTkRFRiB8fCAoKG5zID0gbm9kZS5uYW1lc3BhY2VVUkkpID09PSBudWxsIHx8IG5zID09IFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwYXJlbnRFbGVtZW50KG5vZGUpIHtcbiAgICAgICAgdmFyIHBhcmVudCA9IG5vZGUucGFyZW50Tm9kZTtcbiAgICAgICAgcmV0dXJuIChwYXJlbnQubm9kZVR5cGUgPT0gMSkgPyBwYXJlbnQgOiBudWxsO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldE5vZGVJbmRleChub2RlKSB7XG4gICAgICAgIHZhciBpID0gMDtcbiAgICAgICAgd2hpbGUoIChub2RlID0gbm9kZS5wcmV2aW91c1NpYmxpbmcpICkge1xuICAgICAgICAgICAgaSsrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldE5vZGVMZW5ndGgobm9kZSkge1xuICAgICAgICB2YXIgY2hpbGROb2RlcztcbiAgICAgICAgcmV0dXJuIGlzQ2hhcmFjdGVyRGF0YU5vZGUobm9kZSkgPyBub2RlLmxlbmd0aCA6ICgoY2hpbGROb2RlcyA9IG5vZGUuY2hpbGROb2RlcykgPyBjaGlsZE5vZGVzLmxlbmd0aCA6IDApO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldENvbW1vbkFuY2VzdG9yKG5vZGUxLCBub2RlMikge1xuICAgICAgICB2YXIgYW5jZXN0b3JzID0gW10sIG47XG4gICAgICAgIGZvciAobiA9IG5vZGUxOyBuOyBuID0gbi5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICBhbmNlc3RvcnMucHVzaChuKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAobiA9IG5vZGUyOyBuOyBuID0gbi5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICBpZiAoYXJyYXlDb250YWlucyhhbmNlc3RvcnMsIG4pKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc0FuY2VzdG9yT2YoYW5jZXN0b3IsIGRlc2NlbmRhbnQsIHNlbGZJc0FuY2VzdG9yKSB7XG4gICAgICAgIHZhciBuID0gc2VsZklzQW5jZXN0b3IgPyBkZXNjZW5kYW50IDogZGVzY2VuZGFudC5wYXJlbnROb2RlO1xuICAgICAgICB3aGlsZSAobikge1xuICAgICAgICAgICAgaWYgKG4gPT09IGFuY2VzdG9yKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG4gPSBuLnBhcmVudE5vZGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldENsb3Nlc3RBbmNlc3RvckluKG5vZGUsIGFuY2VzdG9yLCBzZWxmSXNBbmNlc3Rvcikge1xuICAgICAgICB2YXIgcCwgbiA9IHNlbGZJc0FuY2VzdG9yID8gbm9kZSA6IG5vZGUucGFyZW50Tm9kZTtcbiAgICAgICAgd2hpbGUgKG4pIHtcbiAgICAgICAgICAgIHAgPSBuLnBhcmVudE5vZGU7XG4gICAgICAgICAgICBpZiAocCA9PT0gYW5jZXN0b3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG4gPSBwO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGlzQ2hhcmFjdGVyRGF0YU5vZGUobm9kZSkge1xuICAgICAgICB2YXIgdCA9IG5vZGUubm9kZVR5cGU7XG4gICAgICAgIHJldHVybiB0ID09IDMgfHwgdCA9PSA0IHx8IHQgPT0gOCA7IC8vIFRleHQsIENEYXRhU2VjdGlvbiBvciBDb21tZW50XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5zZXJ0QWZ0ZXIobm9kZSwgcHJlY2VkaW5nTm9kZSkge1xuICAgICAgICB2YXIgbmV4dE5vZGUgPSBwcmVjZWRpbmdOb2RlLm5leHRTaWJsaW5nLCBwYXJlbnQgPSBwcmVjZWRpbmdOb2RlLnBhcmVudE5vZGU7XG4gICAgICAgIGlmIChuZXh0Tm9kZSkge1xuICAgICAgICAgICAgcGFyZW50Lmluc2VydEJlZm9yZShub2RlLCBuZXh0Tm9kZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwYXJlbnQuYXBwZW5kQ2hpbGQobm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuXG4gICAgLy8gTm90ZSB0aGF0IHdlIGNhbm5vdCB1c2Ugc3BsaXRUZXh0KCkgYmVjYXVzZSBpdCBpcyBidWdyaWRkZW4gaW4gSUUgOS5cbiAgICBmdW5jdGlvbiBzcGxpdERhdGFOb2RlKG5vZGUsIGluZGV4KSB7XG4gICAgICAgIHZhciBuZXdOb2RlID0gbm9kZS5jbG9uZU5vZGUoZmFsc2UpO1xuICAgICAgICBuZXdOb2RlLmRlbGV0ZURhdGEoMCwgaW5kZXgpO1xuICAgICAgICBub2RlLmRlbGV0ZURhdGEoaW5kZXgsIG5vZGUubGVuZ3RoIC0gaW5kZXgpO1xuICAgICAgICBpbnNlcnRBZnRlcihuZXdOb2RlLCBub2RlKTtcbiAgICAgICAgcmV0dXJuIG5ld05vZGU7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0RG9jdW1lbnQobm9kZSkge1xuICAgICAgICBpZiAobm9kZS5ub2RlVHlwZSA9PSA5KSB7XG4gICAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2Ygbm9kZS5vd25lckRvY3VtZW50ICE9IFVOREVGKSB7XG4gICAgICAgICAgICByZXR1cm4gbm9kZS5vd25lckRvY3VtZW50O1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBub2RlLmRvY3VtZW50ICE9IFVOREVGKSB7XG4gICAgICAgICAgICByZXR1cm4gbm9kZS5kb2N1bWVudDtcbiAgICAgICAgfSBlbHNlIGlmIChub2RlLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiBnZXREb2N1bWVudChub2RlLnBhcmVudE5vZGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZ2V0RG9jdW1lbnQ6IG5vIGRvY3VtZW50IGZvdW5kIGZvciBub2RlXCIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0V2luZG93KG5vZGUpIHtcbiAgICAgICAgdmFyIGRvYyA9IGdldERvY3VtZW50KG5vZGUpO1xuICAgICAgICBpZiAodHlwZW9mIGRvYy5kZWZhdWx0VmlldyAhPSBVTkRFRikge1xuICAgICAgICAgICAgcmV0dXJuIGRvYy5kZWZhdWx0VmlldztcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgZG9jLnBhcmVudFdpbmRvdyAhPSBVTkRFRikge1xuICAgICAgICAgICAgcmV0dXJuIGRvYy5wYXJlbnRXaW5kb3c7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgZ2V0IGEgd2luZG93IG9iamVjdCBmb3Igbm9kZVwiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldElmcmFtZURvY3VtZW50KGlmcmFtZUVsKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaWZyYW1lRWwuY29udGVudERvY3VtZW50ICE9IFVOREVGKSB7XG4gICAgICAgICAgICByZXR1cm4gaWZyYW1lRWwuY29udGVudERvY3VtZW50O1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBpZnJhbWVFbC5jb250ZW50V2luZG93ICE9IFVOREVGKSB7XG4gICAgICAgICAgICByZXR1cm4gaWZyYW1lRWwuY29udGVudFdpbmRvdy5kb2N1bWVudDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImdldElmcmFtZVdpbmRvdzogTm8gRG9jdW1lbnQgb2JqZWN0IGZvdW5kIGZvciBpZnJhbWUgZWxlbWVudFwiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldElmcmFtZVdpbmRvdyhpZnJhbWVFbCkge1xuICAgICAgICBpZiAodHlwZW9mIGlmcmFtZUVsLmNvbnRlbnRXaW5kb3cgIT0gVU5ERUYpIHtcbiAgICAgICAgICAgIHJldHVybiBpZnJhbWVFbC5jb250ZW50V2luZG93O1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBpZnJhbWVFbC5jb250ZW50RG9jdW1lbnQgIT0gVU5ERUYpIHtcbiAgICAgICAgICAgIHJldHVybiBpZnJhbWVFbC5jb250ZW50RG9jdW1lbnQuZGVmYXVsdFZpZXc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJnZXRJZnJhbWVXaW5kb3c6IE5vIFdpbmRvdyBvYmplY3QgZm91bmQgZm9yIGlmcmFtZSBlbGVtZW50XCIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0Qm9keShkb2MpIHtcbiAgICAgICAgcmV0dXJuIHV0aWwuaXNIb3N0T2JqZWN0KGRvYywgXCJib2R5XCIpID8gZG9jLmJvZHkgOiBkb2MuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJib2R5XCIpWzBdO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFJvb3RDb250YWluZXIobm9kZSkge1xuICAgICAgICB2YXIgcGFyZW50O1xuICAgICAgICB3aGlsZSAoIChwYXJlbnQgPSBub2RlLnBhcmVudE5vZGUpICkge1xuICAgICAgICAgICAgbm9kZSA9IHBhcmVudDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb21wYXJlUG9pbnRzKG5vZGVBLCBvZmZzZXRBLCBub2RlQiwgb2Zmc2V0Qikge1xuICAgICAgICAvLyBTZWUgaHR0cDovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTItVHJhdmVyc2FsLVJhbmdlL3Jhbmdlcy5odG1sI0xldmVsLTItUmFuZ2UtQ29tcGFyaW5nXG4gICAgICAgIHZhciBub2RlQywgcm9vdCwgY2hpbGRBLCBjaGlsZEIsIG47XG4gICAgICAgIGlmIChub2RlQSA9PSBub2RlQikge1xuXG4gICAgICAgICAgICAvLyBDYXNlIDE6IG5vZGVzIGFyZSB0aGUgc2FtZVxuICAgICAgICAgICAgcmV0dXJuIG9mZnNldEEgPT09IG9mZnNldEIgPyAwIDogKG9mZnNldEEgPCBvZmZzZXRCKSA/IC0xIDogMTtcbiAgICAgICAgfSBlbHNlIGlmICggKG5vZGVDID0gZ2V0Q2xvc2VzdEFuY2VzdG9ySW4obm9kZUIsIG5vZGVBLCB0cnVlKSkgKSB7XG5cbiAgICAgICAgICAgIC8vIENhc2UgMjogbm9kZSBDIChjb250YWluZXIgQiBvciBhbiBhbmNlc3RvcikgaXMgYSBjaGlsZCBub2RlIG9mIEFcbiAgICAgICAgICAgIHJldHVybiBvZmZzZXRBIDw9IGdldE5vZGVJbmRleChub2RlQykgPyAtMSA6IDE7XG4gICAgICAgIH0gZWxzZSBpZiAoIChub2RlQyA9IGdldENsb3Nlc3RBbmNlc3RvckluKG5vZGVBLCBub2RlQiwgdHJ1ZSkpICkge1xuXG4gICAgICAgICAgICAvLyBDYXNlIDM6IG5vZGUgQyAoY29udGFpbmVyIEEgb3IgYW4gYW5jZXN0b3IpIGlzIGEgY2hpbGQgbm9kZSBvZiBCXG4gICAgICAgICAgICByZXR1cm4gZ2V0Tm9kZUluZGV4KG5vZGVDKSA8IG9mZnNldEIgID8gLTEgOiAxO1xuICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAvLyBDYXNlIDQ6IGNvbnRhaW5lcnMgYXJlIHNpYmxpbmdzIG9yIGRlc2NlbmRhbnRzIG9mIHNpYmxpbmdzXG4gICAgICAgICAgICByb290ID0gZ2V0Q29tbW9uQW5jZXN0b3Iobm9kZUEsIG5vZGVCKTtcbiAgICAgICAgICAgIGNoaWxkQSA9IChub2RlQSA9PT0gcm9vdCkgPyByb290IDogZ2V0Q2xvc2VzdEFuY2VzdG9ySW4obm9kZUEsIHJvb3QsIHRydWUpO1xuICAgICAgICAgICAgY2hpbGRCID0gKG5vZGVCID09PSByb290KSA/IHJvb3QgOiBnZXRDbG9zZXN0QW5jZXN0b3JJbihub2RlQiwgcm9vdCwgdHJ1ZSk7XG5cbiAgICAgICAgICAgIGlmIChjaGlsZEEgPT09IGNoaWxkQikge1xuICAgICAgICAgICAgICAgIC8vIFRoaXMgc2hvdWxkbid0IGJlIHBvc3NpYmxlXG5cbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJjb21wYXJlUG9pbnRzIGdvdCB0byBjYXNlIDQgYW5kIGNoaWxkQSBhbmQgY2hpbGRCIGFyZSB0aGUgc2FtZSFcIik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG4gPSByb290LmZpcnN0Q2hpbGQ7XG4gICAgICAgICAgICAgICAgd2hpbGUgKG4pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG4gPT09IGNoaWxkQSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKG4gPT09IGNoaWxkQikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbiA9IG4ubmV4dFNpYmxpbmc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlNob3VsZCBub3QgYmUgaGVyZSFcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmcmFnbWVudEZyb21Ob2RlQ2hpbGRyZW4obm9kZSkge1xuICAgICAgICB2YXIgZnJhZ21lbnQgPSBnZXREb2N1bWVudChub2RlKS5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksIGNoaWxkO1xuICAgICAgICB3aGlsZSAoIChjaGlsZCA9IG5vZGUuZmlyc3RDaGlsZCkgKSB7XG4gICAgICAgICAgICBmcmFnbWVudC5hcHBlbmRDaGlsZChjaGlsZCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZyYWdtZW50O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc3BlY3ROb2RlKG5vZGUpIHtcbiAgICAgICAgaWYgKCFub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJbTm8gbm9kZV1cIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNDaGFyYWN0ZXJEYXRhTm9kZShub2RlKSkge1xuICAgICAgICAgICAgcmV0dXJuICdcIicgKyBub2RlLmRhdGEgKyAnXCInO1xuICAgICAgICB9IGVsc2UgaWYgKG5vZGUubm9kZVR5cGUgPT0gMSkge1xuICAgICAgICAgICAgdmFyIGlkQXR0ciA9IG5vZGUuaWQgPyAnIGlkPVwiJyArIG5vZGUuaWQgKyAnXCInIDogXCJcIjtcbiAgICAgICAgICAgIHJldHVybiBcIjxcIiArIG5vZGUubm9kZU5hbWUgKyBpZEF0dHIgKyBcIj5bXCIgKyBub2RlLmNoaWxkTm9kZXMubGVuZ3RoICsgXCJdXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbm9kZS5ub2RlTmFtZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIE5vZGVJdGVyYXRvcihyb290KSB7XG4gICAgICAgIHRoaXMucm9vdCA9IHJvb3Q7XG4gICAgICAgIHRoaXMuX25leHQgPSByb290O1xuICAgIH1cblxuICAgIE5vZGVJdGVyYXRvci5wcm90b3R5cGUgPSB7XG4gICAgICAgIF9jdXJyZW50OiBudWxsLFxuXG4gICAgICAgIGhhc05leHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuICEhdGhpcy5fbmV4dDtcbiAgICAgICAgfSxcblxuICAgICAgICBuZXh0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBuID0gdGhpcy5fY3VycmVudCA9IHRoaXMuX25leHQ7XG4gICAgICAgICAgICB2YXIgY2hpbGQsIG5leHQ7XG4gICAgICAgICAgICBpZiAodGhpcy5fY3VycmVudCkge1xuICAgICAgICAgICAgICAgIGNoaWxkID0gbi5maXJzdENoaWxkO1xuICAgICAgICAgICAgICAgIGlmIChjaGlsZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9uZXh0ID0gY2hpbGQ7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbmV4dCA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIHdoaWxlICgobiAhPT0gdGhpcy5yb290KSAmJiAhKG5leHQgPSBuLm5leHRTaWJsaW5nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbiA9IG4ucGFyZW50Tm9kZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9uZXh0ID0gbmV4dDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY3VycmVudDtcbiAgICAgICAgfSxcblxuICAgICAgICBkZXRhY2g6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy5fY3VycmVudCA9IHRoaXMuX25leHQgPSB0aGlzLnJvb3QgPSBudWxsO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGNyZWF0ZUl0ZXJhdG9yKHJvb3QpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBOb2RlSXRlcmF0b3Iocm9vdCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZnVuY3Rpb24gRG9tUG9zaXRpb24obm9kZSwgb2Zmc2V0KSB7XG4gICAgICAgIHRoaXMubm9kZSA9IG5vZGU7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gb2Zmc2V0O1xuICAgIH1cblxuICAgIERvbVBvc2l0aW9uLnByb3RvdHlwZSA9IHtcbiAgICAgICAgZXF1YWxzOiBmdW5jdGlvbihwb3MpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5vZGUgPT09IHBvcy5ub2RlICYgdGhpcy5vZmZzZXQgPT0gcG9zLm9mZnNldDtcbiAgICAgICAgfSxcblxuICAgICAgICBpbnNwZWN0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBcIltEb21Qb3NpdGlvbihcIiArIGluc3BlY3ROb2RlKHRoaXMubm9kZSkgKyBcIjpcIiArIHRoaXMub2Zmc2V0ICsgXCIpXVwiO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIERPTUV4Y2VwdGlvbihjb2RlTmFtZSkge1xuICAgICAgICB0aGlzLmNvZGUgPSB0aGlzW2NvZGVOYW1lXTtcbiAgICAgICAgdGhpcy5jb2RlTmFtZSA9IGNvZGVOYW1lO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBcIkRPTUV4Y2VwdGlvbjogXCIgKyB0aGlzLmNvZGVOYW1lO1xuICAgIH1cblxuICAgIERPTUV4Y2VwdGlvbi5wcm90b3R5cGUgPSB7XG4gICAgICAgIElOREVYX1NJWkVfRVJSOiAxLFxuICAgICAgICBISUVSQVJDSFlfUkVRVUVTVF9FUlI6IDMsXG4gICAgICAgIFdST05HX0RPQ1VNRU5UX0VSUjogNCxcbiAgICAgICAgTk9fTU9ESUZJQ0FUSU9OX0FMTE9XRURfRVJSOiA3LFxuICAgICAgICBOT1RfRk9VTkRfRVJSOiA4LFxuICAgICAgICBOT1RfU1VQUE9SVEVEX0VSUjogOSxcbiAgICAgICAgSU5WQUxJRF9TVEFURV9FUlI6IDExXG4gICAgfTtcblxuICAgIERPTUV4Y2VwdGlvbi5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWVzc2FnZTtcbiAgICB9O1xuXG4gICAgYXBpLmRvbSA9IHtcbiAgICAgICAgYXJyYXlDb250YWluczogYXJyYXlDb250YWlucyxcbiAgICAgICAgaXNIdG1sTmFtZXNwYWNlOiBpc0h0bWxOYW1lc3BhY2UsXG4gICAgICAgIHBhcmVudEVsZW1lbnQ6IHBhcmVudEVsZW1lbnQsXG4gICAgICAgIGdldE5vZGVJbmRleDogZ2V0Tm9kZUluZGV4LFxuICAgICAgICBnZXROb2RlTGVuZ3RoOiBnZXROb2RlTGVuZ3RoLFxuICAgICAgICBnZXRDb21tb25BbmNlc3RvcjogZ2V0Q29tbW9uQW5jZXN0b3IsXG4gICAgICAgIGlzQW5jZXN0b3JPZjogaXNBbmNlc3Rvck9mLFxuICAgICAgICBnZXRDbG9zZXN0QW5jZXN0b3JJbjogZ2V0Q2xvc2VzdEFuY2VzdG9ySW4sXG4gICAgICAgIGlzQ2hhcmFjdGVyRGF0YU5vZGU6IGlzQ2hhcmFjdGVyRGF0YU5vZGUsXG4gICAgICAgIGluc2VydEFmdGVyOiBpbnNlcnRBZnRlcixcbiAgICAgICAgc3BsaXREYXRhTm9kZTogc3BsaXREYXRhTm9kZSxcbiAgICAgICAgZ2V0RG9jdW1lbnQ6IGdldERvY3VtZW50LFxuICAgICAgICBnZXRXaW5kb3c6IGdldFdpbmRvdyxcbiAgICAgICAgZ2V0SWZyYW1lV2luZG93OiBnZXRJZnJhbWVXaW5kb3csXG4gICAgICAgIGdldElmcmFtZURvY3VtZW50OiBnZXRJZnJhbWVEb2N1bWVudCxcbiAgICAgICAgZ2V0Qm9keTogZ2V0Qm9keSxcbiAgICAgICAgZ2V0Um9vdENvbnRhaW5lcjogZ2V0Um9vdENvbnRhaW5lcixcbiAgICAgICAgY29tcGFyZVBvaW50czogY29tcGFyZVBvaW50cyxcbiAgICAgICAgaW5zcGVjdE5vZGU6IGluc3BlY3ROb2RlLFxuICAgICAgICBmcmFnbWVudEZyb21Ob2RlQ2hpbGRyZW46IGZyYWdtZW50RnJvbU5vZGVDaGlsZHJlbixcbiAgICAgICAgY3JlYXRlSXRlcmF0b3I6IGNyZWF0ZUl0ZXJhdG9yLFxuICAgICAgICBEb21Qb3NpdGlvbjogRG9tUG9zaXRpb25cbiAgICB9O1xuXG4gICAgYXBpLkRPTUV4Y2VwdGlvbiA9IERPTUV4Y2VwdGlvbjtcbn0pO3Jhbmd5LmNyZWF0ZU1vZHVsZShcIkRvbVJhbmdlXCIsIGZ1bmN0aW9uKGFwaSwgbW9kdWxlKSB7XG4gICAgYXBpLnJlcXVpcmVNb2R1bGVzKCBbXCJEb21VdGlsXCJdICk7XG5cblxuICAgIHZhciBkb20gPSBhcGkuZG9tO1xuICAgIHZhciBEb21Qb3NpdGlvbiA9IGRvbS5Eb21Qb3NpdGlvbjtcbiAgICB2YXIgRE9NRXhjZXB0aW9uID0gYXBpLkRPTUV4Y2VwdGlvbjtcbiAgICBcbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gICAgLy8gVXRpbGl0eSBmdW5jdGlvbnNcblxuICAgIGZ1bmN0aW9uIGlzTm9uVGV4dFBhcnRpYWxseVNlbGVjdGVkKG5vZGUsIHJhbmdlKSB7XG4gICAgICAgIHJldHVybiAobm9kZS5ub2RlVHlwZSAhPSAzKSAmJlxuICAgICAgICAgICAgICAgKGRvbS5pc0FuY2VzdG9yT2Yobm9kZSwgcmFuZ2Uuc3RhcnRDb250YWluZXIsIHRydWUpIHx8IGRvbS5pc0FuY2VzdG9yT2Yobm9kZSwgcmFuZ2UuZW5kQ29udGFpbmVyLCB0cnVlKSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0UmFuZ2VEb2N1bWVudChyYW5nZSkge1xuICAgICAgICByZXR1cm4gZG9tLmdldERvY3VtZW50KHJhbmdlLnN0YXJ0Q29udGFpbmVyKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBkaXNwYXRjaEV2ZW50KHJhbmdlLCB0eXBlLCBhcmdzKSB7XG4gICAgICAgIHZhciBsaXN0ZW5lcnMgPSByYW5nZS5fbGlzdGVuZXJzW3R5cGVdO1xuICAgICAgICBpZiAobGlzdGVuZXJzKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gbGlzdGVuZXJzLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXJzW2ldLmNhbGwocmFuZ2UsIHt0YXJnZXQ6IHJhbmdlLCBhcmdzOiBhcmdzfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRCb3VuZGFyeUJlZm9yZU5vZGUobm9kZSkge1xuICAgICAgICByZXR1cm4gbmV3IERvbVBvc2l0aW9uKG5vZGUucGFyZW50Tm9kZSwgZG9tLmdldE5vZGVJbmRleChub2RlKSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0Qm91bmRhcnlBZnRlck5vZGUobm9kZSkge1xuICAgICAgICByZXR1cm4gbmV3IERvbVBvc2l0aW9uKG5vZGUucGFyZW50Tm9kZSwgZG9tLmdldE5vZGVJbmRleChub2RlKSArIDEpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc2VydE5vZGVBdFBvc2l0aW9uKG5vZGUsIG4sIG8pIHtcbiAgICAgICAgdmFyIGZpcnN0Tm9kZUluc2VydGVkID0gbm9kZS5ub2RlVHlwZSA9PSAxMSA/IG5vZGUuZmlyc3RDaGlsZCA6IG5vZGU7XG4gICAgICAgIGlmIChkb20uaXNDaGFyYWN0ZXJEYXRhTm9kZShuKSkge1xuICAgICAgICAgICAgaWYgKG8gPT0gbi5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBkb20uaW5zZXJ0QWZ0ZXIobm9kZSwgbik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG4ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm9kZSwgbyA9PSAwID8gbiA6IGRvbS5zcGxpdERhdGFOb2RlKG4sIG8pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChvID49IG4uY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIG4uYXBwZW5kQ2hpbGQobm9kZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBuLmluc2VydEJlZm9yZShub2RlLCBuLmNoaWxkTm9kZXNbb10pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmaXJzdE5vZGVJbnNlcnRlZDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjbG9uZVN1YnRyZWUoaXRlcmF0b3IpIHtcbiAgICAgICAgdmFyIHBhcnRpYWxseVNlbGVjdGVkO1xuICAgICAgICBmb3IgKHZhciBub2RlLCBmcmFnID0gZ2V0UmFuZ2VEb2N1bWVudChpdGVyYXRvci5yYW5nZSkuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLCBzdWJJdGVyYXRvcjsgbm9kZSA9IGl0ZXJhdG9yLm5leHQoKTsgKSB7XG4gICAgICAgICAgICBwYXJ0aWFsbHlTZWxlY3RlZCA9IGl0ZXJhdG9yLmlzUGFydGlhbGx5U2VsZWN0ZWRTdWJ0cmVlKCk7XG5cbiAgICAgICAgICAgIG5vZGUgPSBub2RlLmNsb25lTm9kZSghcGFydGlhbGx5U2VsZWN0ZWQpO1xuICAgICAgICAgICAgaWYgKHBhcnRpYWxseVNlbGVjdGVkKSB7XG4gICAgICAgICAgICAgICAgc3ViSXRlcmF0b3IgPSBpdGVyYXRvci5nZXRTdWJ0cmVlSXRlcmF0b3IoKTtcbiAgICAgICAgICAgICAgICBub2RlLmFwcGVuZENoaWxkKGNsb25lU3VidHJlZShzdWJJdGVyYXRvcikpO1xuICAgICAgICAgICAgICAgIHN1Ykl0ZXJhdG9yLmRldGFjaCh0cnVlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT0gMTApIHsgLy8gRG9jdW1lbnRUeXBlXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IERPTUV4Y2VwdGlvbihcIkhJRVJBUkNIWV9SRVFVRVNUX0VSUlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZyYWcuYXBwZW5kQ2hpbGQobm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZyYWc7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaXRlcmF0ZVN1YnRyZWUocmFuZ2VJdGVyYXRvciwgZnVuYywgaXRlcmF0b3JTdGF0ZSkge1xuICAgICAgICB2YXIgaXQsIG47XG4gICAgICAgIGl0ZXJhdG9yU3RhdGUgPSBpdGVyYXRvclN0YXRlIHx8IHsgc3RvcDogZmFsc2UgfTtcbiAgICAgICAgZm9yICh2YXIgbm9kZSwgc3ViUmFuZ2VJdGVyYXRvcjsgbm9kZSA9IHJhbmdlSXRlcmF0b3IubmV4dCgpOyApIHtcbiAgICAgICAgICAgIC8vbG9nLmRlYnVnKFwiaXRlcmF0ZVN1YnRyZWUsIHBhcnRpYWxseSBzZWxlY3RlZDogXCIgKyByYW5nZUl0ZXJhdG9yLmlzUGFydGlhbGx5U2VsZWN0ZWRTdWJ0cmVlKCksIG5vZGVUb1N0cmluZyhub2RlKSk7XG4gICAgICAgICAgICBpZiAocmFuZ2VJdGVyYXRvci5pc1BhcnRpYWxseVNlbGVjdGVkU3VidHJlZSgpKSB7XG4gICAgICAgICAgICAgICAgLy8gVGhlIG5vZGUgaXMgcGFydGlhbGx5IHNlbGVjdGVkIGJ5IHRoZSBSYW5nZSwgc28gd2UgY2FuIHVzZSBhIG5ldyBSYW5nZUl0ZXJhdG9yIG9uIHRoZSBwb3J0aW9uIG9mIHRoZVxuICAgICAgICAgICAgICAgIC8vIG5vZGUgc2VsZWN0ZWQgYnkgdGhlIFJhbmdlLlxuICAgICAgICAgICAgICAgIGlmIChmdW5jKG5vZGUpID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICBpdGVyYXRvclN0YXRlLnN0b3AgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc3ViUmFuZ2VJdGVyYXRvciA9IHJhbmdlSXRlcmF0b3IuZ2V0U3VidHJlZUl0ZXJhdG9yKCk7XG4gICAgICAgICAgICAgICAgICAgIGl0ZXJhdGVTdWJ0cmVlKHN1YlJhbmdlSXRlcmF0b3IsIGZ1bmMsIGl0ZXJhdG9yU3RhdGUpO1xuICAgICAgICAgICAgICAgICAgICBzdWJSYW5nZUl0ZXJhdG9yLmRldGFjaCh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZXJhdG9yU3RhdGUuc3RvcCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBUaGUgd2hvbGUgbm9kZSBpcyBzZWxlY3RlZCwgc28gd2UgY2FuIHVzZSBlZmZpY2llbnQgRE9NIGl0ZXJhdGlvbiB0byBpdGVyYXRlIG92ZXIgdGhlIG5vZGUgYW5kIGl0c1xuICAgICAgICAgICAgICAgIC8vIGRlc2NlbmRhbnRcbiAgICAgICAgICAgICAgICBpdCA9IGRvbS5jcmVhdGVJdGVyYXRvcihub2RlKTtcbiAgICAgICAgICAgICAgICB3aGlsZSAoIChuID0gaXQubmV4dCgpKSApIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZ1bmMobikgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVyYXRvclN0YXRlLnN0b3AgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZGVsZXRlU3VidHJlZShpdGVyYXRvcikge1xuICAgICAgICB2YXIgc3ViSXRlcmF0b3I7XG4gICAgICAgIHdoaWxlIChpdGVyYXRvci5uZXh0KCkpIHtcbiAgICAgICAgICAgIGlmIChpdGVyYXRvci5pc1BhcnRpYWxseVNlbGVjdGVkU3VidHJlZSgpKSB7XG4gICAgICAgICAgICAgICAgc3ViSXRlcmF0b3IgPSBpdGVyYXRvci5nZXRTdWJ0cmVlSXRlcmF0b3IoKTtcbiAgICAgICAgICAgICAgICBkZWxldGVTdWJ0cmVlKHN1Ykl0ZXJhdG9yKTtcbiAgICAgICAgICAgICAgICBzdWJJdGVyYXRvci5kZXRhY2godHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGl0ZXJhdG9yLnJlbW92ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZXh0cmFjdFN1YnRyZWUoaXRlcmF0b3IpIHtcblxuICAgICAgICBmb3IgKHZhciBub2RlLCBmcmFnID0gZ2V0UmFuZ2VEb2N1bWVudChpdGVyYXRvci5yYW5nZSkuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLCBzdWJJdGVyYXRvcjsgbm9kZSA9IGl0ZXJhdG9yLm5leHQoKTsgKSB7XG5cblxuICAgICAgICAgICAgaWYgKGl0ZXJhdG9yLmlzUGFydGlhbGx5U2VsZWN0ZWRTdWJ0cmVlKCkpIHtcbiAgICAgICAgICAgICAgICBub2RlID0gbm9kZS5jbG9uZU5vZGUoZmFsc2UpO1xuICAgICAgICAgICAgICAgIHN1Ykl0ZXJhdG9yID0gaXRlcmF0b3IuZ2V0U3VidHJlZUl0ZXJhdG9yKCk7XG4gICAgICAgICAgICAgICAgbm9kZS5hcHBlbmRDaGlsZChleHRyYWN0U3VidHJlZShzdWJJdGVyYXRvcikpO1xuICAgICAgICAgICAgICAgIHN1Ykl0ZXJhdG9yLmRldGFjaCh0cnVlKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaXRlcmF0b3IucmVtb3ZlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobm9kZS5ub2RlVHlwZSA9PSAxMCkgeyAvLyBEb2N1bWVudFR5cGVcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRE9NRXhjZXB0aW9uKFwiSElFUkFSQ0hZX1JFUVVFU1RfRVJSXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnJhZy5hcHBlbmRDaGlsZChub2RlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZnJhZztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXROb2Rlc0luUmFuZ2UocmFuZ2UsIG5vZGVUeXBlcywgZmlsdGVyKSB7XG4gICAgICAgIC8vbG9nLmluZm8oXCJnZXROb2Rlc0luUmFuZ2UsIFwiICsgbm9kZVR5cGVzLmpvaW4oXCIsXCIpKTtcbiAgICAgICAgdmFyIGZpbHRlck5vZGVUeXBlcyA9ICEhKG5vZGVUeXBlcyAmJiBub2RlVHlwZXMubGVuZ3RoKSwgcmVnZXg7XG4gICAgICAgIHZhciBmaWx0ZXJFeGlzdHMgPSAhIWZpbHRlcjtcbiAgICAgICAgaWYgKGZpbHRlck5vZGVUeXBlcykge1xuICAgICAgICAgICAgcmVnZXggPSBuZXcgUmVnRXhwKFwiXihcIiArIG5vZGVUeXBlcy5qb2luKFwifFwiKSArIFwiKSRcIik7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgbm9kZXMgPSBbXTtcbiAgICAgICAgaXRlcmF0ZVN1YnRyZWUobmV3IFJhbmdlSXRlcmF0b3IocmFuZ2UsIGZhbHNlKSwgZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgICAgaWYgKCghZmlsdGVyTm9kZVR5cGVzIHx8IHJlZ2V4LnRlc3Qobm9kZS5ub2RlVHlwZSkpICYmICghZmlsdGVyRXhpc3RzIHx8IGZpbHRlcihub2RlKSkpIHtcbiAgICAgICAgICAgICAgICBub2Rlcy5wdXNoKG5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc3BlY3QocmFuZ2UpIHtcbiAgICAgICAgdmFyIG5hbWUgPSAodHlwZW9mIHJhbmdlLmdldE5hbWUgPT0gXCJ1bmRlZmluZWRcIikgPyBcIlJhbmdlXCIgOiByYW5nZS5nZXROYW1lKCk7XG4gICAgICAgIHJldHVybiBcIltcIiArIG5hbWUgKyBcIihcIiArIGRvbS5pbnNwZWN0Tm9kZShyYW5nZS5zdGFydENvbnRhaW5lcikgKyBcIjpcIiArIHJhbmdlLnN0YXJ0T2Zmc2V0ICsgXCIsIFwiICtcbiAgICAgICAgICAgICAgICBkb20uaW5zcGVjdE5vZGUocmFuZ2UuZW5kQ29udGFpbmVyKSArIFwiOlwiICsgcmFuZ2UuZW5kT2Zmc2V0ICsgXCIpXVwiO1xuICAgIH1cblxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgICAvLyBSYW5nZUl0ZXJhdG9yIGNvZGUgcGFydGlhbGx5IGJvcnJvd3MgZnJvbSBJRVJhbmdlIGJ5IFRpbSBSeWFuIChodHRwOi8vZ2l0aHViLmNvbS90aW1jYW1lcm9ucnlhbi9JRVJhbmdlKVxuXG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZnVuY3Rpb24gUmFuZ2VJdGVyYXRvcihyYW5nZSwgY2xvbmVQYXJ0aWFsbHlTZWxlY3RlZFRleHROb2Rlcykge1xuICAgICAgICB0aGlzLnJhbmdlID0gcmFuZ2U7XG4gICAgICAgIHRoaXMuY2xvbmVQYXJ0aWFsbHlTZWxlY3RlZFRleHROb2RlcyA9IGNsb25lUGFydGlhbGx5U2VsZWN0ZWRUZXh0Tm9kZXM7XG5cblxuXG4gICAgICAgIGlmICghcmFuZ2UuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICB0aGlzLnNjID0gcmFuZ2Uuc3RhcnRDb250YWluZXI7XG4gICAgICAgICAgICB0aGlzLnNvID0gcmFuZ2Uuc3RhcnRPZmZzZXQ7XG4gICAgICAgICAgICB0aGlzLmVjID0gcmFuZ2UuZW5kQ29udGFpbmVyO1xuICAgICAgICAgICAgdGhpcy5lbyA9IHJhbmdlLmVuZE9mZnNldDtcbiAgICAgICAgICAgIHZhciByb290ID0gcmFuZ2UuY29tbW9uQW5jZXN0b3JDb250YWluZXI7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLnNjID09PSB0aGlzLmVjICYmIGRvbS5pc0NoYXJhY3RlckRhdGFOb2RlKHRoaXMuc2MpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pc1NpbmdsZUNoYXJhY3RlckRhdGFOb2RlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLl9maXJzdCA9IHRoaXMuX2xhc3QgPSB0aGlzLl9uZXh0ID0gdGhpcy5zYztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZmlyc3QgPSB0aGlzLl9uZXh0ID0gKHRoaXMuc2MgPT09IHJvb3QgJiYgIWRvbS5pc0NoYXJhY3RlckRhdGFOb2RlKHRoaXMuc2MpKSA/XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2MuY2hpbGROb2Rlc1t0aGlzLnNvXSA6IGRvbS5nZXRDbG9zZXN0QW5jZXN0b3JJbih0aGlzLnNjLCByb290LCB0cnVlKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9sYXN0ID0gKHRoaXMuZWMgPT09IHJvb3QgJiYgIWRvbS5pc0NoYXJhY3RlckRhdGFOb2RlKHRoaXMuZWMpKSA/XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZWMuY2hpbGROb2Rlc1t0aGlzLmVvIC0gMV0gOiBkb20uZ2V0Q2xvc2VzdEFuY2VzdG9ySW4odGhpcy5lYywgcm9vdCwgdHJ1ZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuICAgIH1cblxuICAgIFJhbmdlSXRlcmF0b3IucHJvdG90eXBlID0ge1xuICAgICAgICBfY3VycmVudDogbnVsbCxcbiAgICAgICAgX25leHQ6IG51bGwsXG4gICAgICAgIF9maXJzdDogbnVsbCxcbiAgICAgICAgX2xhc3Q6IG51bGwsXG4gICAgICAgIGlzU2luZ2xlQ2hhcmFjdGVyRGF0YU5vZGU6IGZhbHNlLFxuXG4gICAgICAgIHJlc2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHRoaXMuX2N1cnJlbnQgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5fbmV4dCA9IHRoaXMuX2ZpcnN0O1xuICAgICAgICB9LFxuXG4gICAgICAgIGhhc05leHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuICEhdGhpcy5fbmV4dDtcbiAgICAgICAgfSxcblxuICAgICAgICBuZXh0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIC8vIE1vdmUgdG8gbmV4dCBub2RlXG4gICAgICAgICAgICB2YXIgY3VycmVudCA9IHRoaXMuX2N1cnJlbnQgPSB0aGlzLl9uZXh0O1xuICAgICAgICAgICAgaWYgKGN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9uZXh0ID0gKGN1cnJlbnQgIT09IHRoaXMuX2xhc3QpID8gY3VycmVudC5uZXh0U2libGluZyA6IG51bGw7XG5cbiAgICAgICAgICAgICAgICAvLyBDaGVjayBmb3IgcGFydGlhbGx5IHNlbGVjdGVkIHRleHQgbm9kZXNcbiAgICAgICAgICAgICAgICBpZiAoZG9tLmlzQ2hhcmFjdGVyRGF0YU5vZGUoY3VycmVudCkgJiYgdGhpcy5jbG9uZVBhcnRpYWxseVNlbGVjdGVkVGV4dE5vZGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjdXJyZW50ID09PSB0aGlzLmVjKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIChjdXJyZW50ID0gY3VycmVudC5jbG9uZU5vZGUodHJ1ZSkpLmRlbGV0ZURhdGEodGhpcy5lbywgY3VycmVudC5sZW5ndGggLSB0aGlzLmVvKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fY3VycmVudCA9PT0gdGhpcy5zYykge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAoY3VycmVudCA9IGN1cnJlbnQuY2xvbmVOb2RlKHRydWUpKS5kZWxldGVEYXRhKDAsIHRoaXMuc28pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY3VycmVudDtcbiAgICAgICAgfSxcblxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGN1cnJlbnQgPSB0aGlzLl9jdXJyZW50LCBzdGFydCwgZW5kO1xuXG4gICAgICAgICAgICBpZiAoZG9tLmlzQ2hhcmFjdGVyRGF0YU5vZGUoY3VycmVudCkgJiYgKGN1cnJlbnQgPT09IHRoaXMuc2MgfHwgY3VycmVudCA9PT0gdGhpcy5lYykpIHtcbiAgICAgICAgICAgICAgICBzdGFydCA9IChjdXJyZW50ID09PSB0aGlzLnNjKSA/IHRoaXMuc28gOiAwO1xuICAgICAgICAgICAgICAgIGVuZCA9IChjdXJyZW50ID09PSB0aGlzLmVjKSA/IHRoaXMuZW8gOiBjdXJyZW50Lmxlbmd0aDtcbiAgICAgICAgICAgICAgICBpZiAoc3RhcnQgIT0gZW5kKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnQuZGVsZXRlRGF0YShzdGFydCwgZW5kIC0gc3RhcnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnQucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoY3VycmVudCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICAvLyBDaGVja3MgaWYgdGhlIGN1cnJlbnQgbm9kZSBpcyBwYXJ0aWFsbHkgc2VsZWN0ZWRcbiAgICAgICAgaXNQYXJ0aWFsbHlTZWxlY3RlZFN1YnRyZWU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGN1cnJlbnQgPSB0aGlzLl9jdXJyZW50O1xuICAgICAgICAgICAgcmV0dXJuIGlzTm9uVGV4dFBhcnRpYWxseVNlbGVjdGVkKGN1cnJlbnQsIHRoaXMucmFuZ2UpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGdldFN1YnRyZWVJdGVyYXRvcjogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgc3ViUmFuZ2U7XG4gICAgICAgICAgICBpZiAodGhpcy5pc1NpbmdsZUNoYXJhY3RlckRhdGFOb2RlKSB7XG4gICAgICAgICAgICAgICAgc3ViUmFuZ2UgPSB0aGlzLnJhbmdlLmNsb25lUmFuZ2UoKTtcbiAgICAgICAgICAgICAgICBzdWJSYW5nZS5jb2xsYXBzZSgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzdWJSYW5nZSA9IG5ldyBSYW5nZShnZXRSYW5nZURvY3VtZW50KHRoaXMucmFuZ2UpKTtcbiAgICAgICAgICAgICAgICB2YXIgY3VycmVudCA9IHRoaXMuX2N1cnJlbnQ7XG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0Q29udGFpbmVyID0gY3VycmVudCwgc3RhcnRPZmZzZXQgPSAwLCBlbmRDb250YWluZXIgPSBjdXJyZW50LCBlbmRPZmZzZXQgPSBkb20uZ2V0Tm9kZUxlbmd0aChjdXJyZW50KTtcblxuICAgICAgICAgICAgICAgIGlmIChkb20uaXNBbmNlc3Rvck9mKGN1cnJlbnQsIHRoaXMuc2MsIHRydWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXJ0Q29udGFpbmVyID0gdGhpcy5zYztcbiAgICAgICAgICAgICAgICAgICAgc3RhcnRPZmZzZXQgPSB0aGlzLnNvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZG9tLmlzQW5jZXN0b3JPZihjdXJyZW50LCB0aGlzLmVjLCB0cnVlKSkge1xuICAgICAgICAgICAgICAgICAgICBlbmRDb250YWluZXIgPSB0aGlzLmVjO1xuICAgICAgICAgICAgICAgICAgICBlbmRPZmZzZXQgPSB0aGlzLmVvO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHVwZGF0ZUJvdW5kYXJpZXMoc3ViUmFuZ2UsIHN0YXJ0Q29udGFpbmVyLCBzdGFydE9mZnNldCwgZW5kQ29udGFpbmVyLCBlbmRPZmZzZXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBSYW5nZUl0ZXJhdG9yKHN1YlJhbmdlLCB0aGlzLmNsb25lUGFydGlhbGx5U2VsZWN0ZWRUZXh0Tm9kZXMpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGRldGFjaDogZnVuY3Rpb24oZGV0YWNoUmFuZ2UpIHtcbiAgICAgICAgICAgIGlmIChkZXRhY2hSYW5nZSkge1xuICAgICAgICAgICAgICAgIHRoaXMucmFuZ2UuZGV0YWNoKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnJhbmdlID0gdGhpcy5fY3VycmVudCA9IHRoaXMuX25leHQgPSB0aGlzLl9maXJzdCA9IHRoaXMuX2xhc3QgPSB0aGlzLnNjID0gdGhpcy5zbyA9IHRoaXMuZWMgPSB0aGlzLmVvID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gICAgLy8gRXhjZXB0aW9uc1xuXG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZnVuY3Rpb24gUmFuZ2VFeGNlcHRpb24oY29kZU5hbWUpIHtcbiAgICAgICAgdGhpcy5jb2RlID0gdGhpc1tjb2RlTmFtZV07XG4gICAgICAgIHRoaXMuY29kZU5hbWUgPSBjb2RlTmFtZTtcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gXCJSYW5nZUV4Y2VwdGlvbjogXCIgKyB0aGlzLmNvZGVOYW1lO1xuICAgIH1cblxuICAgIFJhbmdlRXhjZXB0aW9uLnByb3RvdHlwZSA9IHtcbiAgICAgICAgQkFEX0JPVU5EQVJZUE9JTlRTX0VSUjogMSxcbiAgICAgICAgSU5WQUxJRF9OT0RFX1RZUEVfRVJSOiAyXG4gICAgfTtcblxuICAgIFJhbmdlRXhjZXB0aW9uLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tZXNzYWdlO1xuICAgIH07XG5cbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gICAgLyoqXG4gICAgICogQ3VycmVudGx5IGl0ZXJhdGVzIHRocm91Z2ggYWxsIG5vZGVzIGluIHRoZSByYW5nZSBvbiBjcmVhdGlvbiB1bnRpbCBJIHRoaW5rIG9mIGEgZGVjZW50IHdheSB0byBkbyBpdFxuICAgICAqIFRPRE86IExvb2sgaW50byBtYWtpbmcgdGhpcyBhIHByb3BlciBpdGVyYXRvciwgbm90IHJlcXVpcmluZyBwcmVsb2FkaW5nIGV2ZXJ5dGhpbmcgZmlyc3RcbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBSYW5nZU5vZGVJdGVyYXRvcihyYW5nZSwgbm9kZVR5cGVzLCBmaWx0ZXIpIHtcbiAgICAgICAgdGhpcy5ub2RlcyA9IGdldE5vZGVzSW5SYW5nZShyYW5nZSwgbm9kZVR5cGVzLCBmaWx0ZXIpO1xuICAgICAgICB0aGlzLl9uZXh0ID0gdGhpcy5ub2Rlc1swXTtcbiAgICAgICAgdGhpcy5fcG9zaXRpb24gPSAwO1xuICAgIH1cblxuICAgIFJhbmdlTm9kZUl0ZXJhdG9yLnByb3RvdHlwZSA9IHtcbiAgICAgICAgX2N1cnJlbnQ6IG51bGwsXG5cbiAgICAgICAgaGFzTmV4dDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gISF0aGlzLl9uZXh0O1xuICAgICAgICB9LFxuXG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy5fY3VycmVudCA9IHRoaXMuX25leHQ7XG4gICAgICAgICAgICB0aGlzLl9uZXh0ID0gdGhpcy5ub2Rlc1sgKyt0aGlzLl9wb3NpdGlvbiBdO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2N1cnJlbnQ7XG4gICAgICAgIH0sXG5cbiAgICAgICAgZGV0YWNoOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHRoaXMuX2N1cnJlbnQgPSB0aGlzLl9uZXh0ID0gdGhpcy5ub2RlcyA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIGJlZm9yZUFmdGVyTm9kZVR5cGVzID0gWzEsIDMsIDQsIDUsIDcsIDgsIDEwXTtcbiAgICB2YXIgcm9vdENvbnRhaW5lck5vZGVUeXBlcyA9IFsyLCA5LCAxMV07XG4gICAgdmFyIHJlYWRvbmx5Tm9kZVR5cGVzID0gWzUsIDYsIDEwLCAxMl07XG4gICAgdmFyIGluc2VydGFibGVOb2RlVHlwZXMgPSBbMSwgMywgNCwgNSwgNywgOCwgMTAsIDExXTtcbiAgICB2YXIgc3Vycm91bmROb2RlVHlwZXMgPSBbMSwgMywgNCwgNSwgNywgOF07XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVBbmNlc3RvckZpbmRlcihub2RlVHlwZXMpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKG5vZGUsIHNlbGZJc0FuY2VzdG9yKSB7XG4gICAgICAgICAgICB2YXIgdCwgbiA9IHNlbGZJc0FuY2VzdG9yID8gbm9kZSA6IG5vZGUucGFyZW50Tm9kZTtcbiAgICAgICAgICAgIHdoaWxlIChuKSB7XG4gICAgICAgICAgICAgICAgdCA9IG4ubm9kZVR5cGU7XG4gICAgICAgICAgICAgICAgaWYgKGRvbS5hcnJheUNvbnRhaW5zKG5vZGVUeXBlcywgdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG4gPSBuLnBhcmVudE5vZGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICB2YXIgZ2V0Um9vdENvbnRhaW5lciA9IGRvbS5nZXRSb290Q29udGFpbmVyO1xuICAgIHZhciBnZXREb2N1bWVudE9yRnJhZ21lbnRDb250YWluZXIgPSBjcmVhdGVBbmNlc3RvckZpbmRlciggWzksIDExXSApO1xuICAgIHZhciBnZXRSZWFkb25seUFuY2VzdG9yID0gY3JlYXRlQW5jZXN0b3JGaW5kZXIocmVhZG9ubHlOb2RlVHlwZXMpO1xuICAgIHZhciBnZXREb2NUeXBlTm90YXRpb25FbnRpdHlBbmNlc3RvciA9IGNyZWF0ZUFuY2VzdG9yRmluZGVyKCBbNiwgMTAsIDEyXSApO1xuXG4gICAgZnVuY3Rpb24gYXNzZXJ0Tm9Eb2NUeXBlTm90YXRpb25FbnRpdHlBbmNlc3Rvcihub2RlLCBhbGxvd1NlbGYpIHtcbiAgICAgICAgaWYgKGdldERvY1R5cGVOb3RhdGlvbkVudGl0eUFuY2VzdG9yKG5vZGUsIGFsbG93U2VsZikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBSYW5nZUV4Y2VwdGlvbihcIklOVkFMSURfTk9ERV9UWVBFX0VSUlwiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFzc2VydE5vdERldGFjaGVkKHJhbmdlKSB7XG4gICAgICAgIGlmICghcmFuZ2Uuc3RhcnRDb250YWluZXIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBET01FeGNlcHRpb24oXCJJTlZBTElEX1NUQVRFX0VSUlwiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFzc2VydFZhbGlkTm9kZVR5cGUobm9kZSwgaW52YWxpZFR5cGVzKSB7XG4gICAgICAgIGlmICghZG9tLmFycmF5Q29udGFpbnMoaW52YWxpZFR5cGVzLCBub2RlLm5vZGVUeXBlKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXhjZXB0aW9uKFwiSU5WQUxJRF9OT0RFX1RZUEVfRVJSXCIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYXNzZXJ0VmFsaWRPZmZzZXQobm9kZSwgb2Zmc2V0KSB7XG4gICAgICAgIGlmIChvZmZzZXQgPCAwIHx8IG9mZnNldCA+IChkb20uaXNDaGFyYWN0ZXJEYXRhTm9kZShub2RlKSA/IG5vZGUubGVuZ3RoIDogbm9kZS5jaGlsZE5vZGVzLmxlbmd0aCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBET01FeGNlcHRpb24oXCJJTkRFWF9TSVpFX0VSUlwiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGFzc2VydFNhbWVEb2N1bWVudE9yRnJhZ21lbnQobm9kZTEsIG5vZGUyKSB7XG4gICAgICAgIGlmIChnZXREb2N1bWVudE9yRnJhZ21lbnRDb250YWluZXIobm9kZTEsIHRydWUpICE9PSBnZXREb2N1bWVudE9yRnJhZ21lbnRDb250YWluZXIobm9kZTIsIHRydWUpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRE9NRXhjZXB0aW9uKFwiV1JPTkdfRE9DVU1FTlRfRVJSXCIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYXNzZXJ0Tm9kZU5vdFJlYWRPbmx5KG5vZGUpIHtcbiAgICAgICAgaWYgKGdldFJlYWRvbmx5QW5jZXN0b3Iobm9kZSwgdHJ1ZSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBET01FeGNlcHRpb24oXCJOT19NT0RJRklDQVRJT05fQUxMT1dFRF9FUlJcIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBhc3NlcnROb2RlKG5vZGUsIGNvZGVOYW1lKSB7XG4gICAgICAgIGlmICghbm9kZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IERPTUV4Y2VwdGlvbihjb2RlTmFtZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc09ycGhhbihub2RlKSB7XG4gICAgICAgIHJldHVybiAhZG9tLmFycmF5Q29udGFpbnMocm9vdENvbnRhaW5lck5vZGVUeXBlcywgbm9kZS5ub2RlVHlwZSkgJiYgIWdldERvY3VtZW50T3JGcmFnbWVudENvbnRhaW5lcihub2RlLCB0cnVlKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpc1ZhbGlkT2Zmc2V0KG5vZGUsIG9mZnNldCkge1xuICAgICAgICByZXR1cm4gb2Zmc2V0IDw9IChkb20uaXNDaGFyYWN0ZXJEYXRhTm9kZShub2RlKSA/IG5vZGUubGVuZ3RoIDogbm9kZS5jaGlsZE5vZGVzLmxlbmd0aCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYXNzZXJ0UmFuZ2VWYWxpZChyYW5nZSkge1xuICAgICAgICBhc3NlcnROb3REZXRhY2hlZChyYW5nZSk7XG4gICAgICAgIGlmIChpc09ycGhhbihyYW5nZS5zdGFydENvbnRhaW5lcikgfHwgaXNPcnBoYW4ocmFuZ2UuZW5kQ29udGFpbmVyKSB8fFxuICAgICAgICAgICAgICAgICFpc1ZhbGlkT2Zmc2V0KHJhbmdlLnN0YXJ0Q29udGFpbmVyLCByYW5nZS5zdGFydE9mZnNldCkgfHxcbiAgICAgICAgICAgICAgICAhaXNWYWxpZE9mZnNldChyYW5nZS5lbmRDb250YWluZXIsIHJhbmdlLmVuZE9mZnNldCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlJhbmdlIGVycm9yOiBSYW5nZSBpcyBubyBsb25nZXIgdmFsaWQgYWZ0ZXIgRE9NIG11dGF0aW9uIChcIiArIHJhbmdlLmluc3BlY3QoKSArIFwiKVwiKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgICAvLyBUZXN0IHRoZSBicm93c2VyJ3MgaW5uZXJIVE1MIHN1cHBvcnQgdG8gZGVjaWRlIGhvdyB0byBpbXBsZW1lbnQgY3JlYXRlQ29udGV4dHVhbEZyYWdtZW50XG4gICAgdmFyIHN0eWxlRWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gICAgdmFyIGh0bWxQYXJzaW5nQ29uZm9ybXMgPSBmYWxzZTtcbiAgICB0cnkge1xuICAgICAgICBzdHlsZUVsLmlubmVySFRNTCA9IFwiPGI+eDwvYj5cIjtcbiAgICAgICAgaHRtbFBhcnNpbmdDb25mb3JtcyA9IChzdHlsZUVsLmZpcnN0Q2hpbGQubm9kZVR5cGUgPT0gMyk7IC8vIE9wZXJhIGluY29ycmVjdGx5IGNyZWF0ZXMgYW4gZWxlbWVudCBub2RlXG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBJRSA2IGFuZCA3IHRocm93XG4gICAgfVxuXG4gICAgYXBpLmZlYXR1cmVzLmh0bWxQYXJzaW5nQ29uZm9ybXMgPSBodG1sUGFyc2luZ0NvbmZvcm1zO1xuXG4gICAgdmFyIGNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudCA9IGh0bWxQYXJzaW5nQ29uZm9ybXMgP1xuXG4gICAgICAgIC8vIEltcGxlbWVudGF0aW9uIGFzIHBlciBIVE1MIHBhcnNpbmcgc3BlYywgdHJ1c3RpbmcgaW4gdGhlIGJyb3dzZXIncyBpbXBsZW1lbnRhdGlvbiBvZiBpbm5lckhUTUwuIFNlZVxuICAgICAgICAvLyBkaXNjdXNzaW9uIGFuZCBiYXNlIGNvZGUgZm9yIHRoaXMgaW1wbGVtZW50YXRpb24gYXQgaXNzdWUgNjcuXG4gICAgICAgIC8vIFNwZWM6IGh0dHA6Ly9odG1sNS5vcmcvc3BlY3MvZG9tLXBhcnNpbmcuaHRtbCNleHRlbnNpb25zLXRvLXRoZS1yYW5nZS1pbnRlcmZhY2VcbiAgICAgICAgLy8gVGhhbmtzIHRvIEFsZWtzIFdpbGxpYW1zLlxuICAgICAgICBmdW5jdGlvbihmcmFnbWVudFN0cikge1xuICAgICAgICAgICAgLy8gXCJMZXQgbm9kZSB0aGUgY29udGV4dCBvYmplY3QncyBzdGFydCdzIG5vZGUuXCJcbiAgICAgICAgICAgIHZhciBub2RlID0gdGhpcy5zdGFydENvbnRhaW5lcjtcbiAgICAgICAgICAgIHZhciBkb2MgPSBkb20uZ2V0RG9jdW1lbnQobm9kZSk7XG5cbiAgICAgICAgICAgIC8vIFwiSWYgdGhlIGNvbnRleHQgb2JqZWN0J3Mgc3RhcnQncyBub2RlIGlzIG51bGwsIHJhaXNlIGFuIElOVkFMSURfU1RBVEVfRVJSXG4gICAgICAgICAgICAvLyBleGNlcHRpb24gYW5kIGFib3J0IHRoZXNlIHN0ZXBzLlwiXG4gICAgICAgICAgICBpZiAoIW5vZGUpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRE9NRXhjZXB0aW9uKFwiSU5WQUxJRF9TVEFURV9FUlJcIik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIFwiTGV0IGVsZW1lbnQgYmUgYXMgZm9sbG93cywgZGVwZW5kaW5nIG9uIG5vZGUncyBpbnRlcmZhY2U6XCJcbiAgICAgICAgICAgIC8vIERvY3VtZW50LCBEb2N1bWVudCBGcmFnbWVudDogbnVsbFxuICAgICAgICAgICAgdmFyIGVsID0gbnVsbDtcblxuICAgICAgICAgICAgLy8gXCJFbGVtZW50OiBub2RlXCJcbiAgICAgICAgICAgIGlmIChub2RlLm5vZGVUeXBlID09IDEpIHtcbiAgICAgICAgICAgICAgICBlbCA9IG5vZGU7XG5cbiAgICAgICAgICAgIC8vIFwiVGV4dCwgQ29tbWVudDogbm9kZSdzIHBhcmVudEVsZW1lbnRcIlxuICAgICAgICAgICAgfSBlbHNlIGlmIChkb20uaXNDaGFyYWN0ZXJEYXRhTm9kZShub2RlKSkge1xuICAgICAgICAgICAgICAgIGVsID0gZG9tLnBhcmVudEVsZW1lbnQobm9kZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIFwiSWYgZWl0aGVyIGVsZW1lbnQgaXMgbnVsbCBvciBlbGVtZW50J3Mgb3duZXJEb2N1bWVudCBpcyBhbiBIVE1MIGRvY3VtZW50XG4gICAgICAgICAgICAvLyBhbmQgZWxlbWVudCdzIGxvY2FsIG5hbWUgaXMgXCJodG1sXCIgYW5kIGVsZW1lbnQncyBuYW1lc3BhY2UgaXMgdGhlIEhUTUxcbiAgICAgICAgICAgIC8vIG5hbWVzcGFjZVwiXG4gICAgICAgICAgICBpZiAoZWwgPT09IG51bGwgfHwgKFxuICAgICAgICAgICAgICAgIGVsLm5vZGVOYW1lID09IFwiSFRNTFwiXG4gICAgICAgICAgICAgICAgJiYgZG9tLmlzSHRtbE5hbWVzcGFjZShkb20uZ2V0RG9jdW1lbnQoZWwpLmRvY3VtZW50RWxlbWVudClcbiAgICAgICAgICAgICAgICAmJiBkb20uaXNIdG1sTmFtZXNwYWNlKGVsKVxuICAgICAgICAgICAgKSkge1xuXG4gICAgICAgICAgICAvLyBcImxldCBlbGVtZW50IGJlIGEgbmV3IEVsZW1lbnQgd2l0aCBcImJvZHlcIiBhcyBpdHMgbG9jYWwgbmFtZSBhbmQgdGhlIEhUTUxcbiAgICAgICAgICAgIC8vIG5hbWVzcGFjZSBhcyBpdHMgbmFtZXNwYWNlLlwiXCJcbiAgICAgICAgICAgICAgICBlbCA9IGRvYy5jcmVhdGVFbGVtZW50KFwiYm9keVwiKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZWwgPSBlbC5jbG9uZU5vZGUoZmFsc2UpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBcIklmIHRoZSBub2RlJ3MgZG9jdW1lbnQgaXMgYW4gSFRNTCBkb2N1bWVudDogSW52b2tlIHRoZSBIVE1MIGZyYWdtZW50IHBhcnNpbmcgYWxnb3JpdGhtLlwiXG4gICAgICAgICAgICAvLyBcIklmIHRoZSBub2RlJ3MgZG9jdW1lbnQgaXMgYW4gWE1MIGRvY3VtZW50OiBJbnZva2UgdGhlIFhNTCBmcmFnbWVudCBwYXJzaW5nIGFsZ29yaXRobS5cIlxuICAgICAgICAgICAgLy8gXCJJbiBlaXRoZXIgY2FzZSwgdGhlIGFsZ29yaXRobSBtdXN0IGJlIGludm9rZWQgd2l0aCBmcmFnbWVudCBhcyB0aGUgaW5wdXRcbiAgICAgICAgICAgIC8vIGFuZCBlbGVtZW50IGFzIHRoZSBjb250ZXh0IGVsZW1lbnQuXCJcbiAgICAgICAgICAgIGVsLmlubmVySFRNTCA9IGZyYWdtZW50U3RyO1xuXG4gICAgICAgICAgICAvLyBcIklmIHRoaXMgcmFpc2VzIGFuIGV4Y2VwdGlvbiwgdGhlbiBhYm9ydCB0aGVzZSBzdGVwcy4gT3RoZXJ3aXNlLCBsZXQgbmV3XG4gICAgICAgICAgICAvLyBjaGlsZHJlbiBiZSB0aGUgbm9kZXMgcmV0dXJuZWQuXCJcblxuICAgICAgICAgICAgLy8gXCJMZXQgZnJhZ21lbnQgYmUgYSBuZXcgRG9jdW1lbnRGcmFnbWVudC5cIlxuICAgICAgICAgICAgLy8gXCJBcHBlbmQgYWxsIG5ldyBjaGlsZHJlbiB0byBmcmFnbWVudC5cIlxuICAgICAgICAgICAgLy8gXCJSZXR1cm4gZnJhZ21lbnQuXCJcbiAgICAgICAgICAgIHJldHVybiBkb20uZnJhZ21lbnRGcm9tTm9kZUNoaWxkcmVuKGVsKTtcbiAgICAgICAgfSA6XG5cbiAgICAgICAgLy8gSW4gdGhpcyBjYXNlLCBpbm5lckhUTUwgY2Fubm90IGJlIHRydXN0ZWQsIHNvIGZhbGwgYmFjayB0byBhIHNpbXBsZXIsIG5vbi1jb25mb3JtYW50IGltcGxlbWVudGF0aW9uIHRoYXRcbiAgICAgICAgLy8gcHJldmlvdXMgdmVyc2lvbnMgb2YgUmFuZ3kgdXNlZCAod2l0aCB0aGUgZXhjZXB0aW9uIG9mIHVzaW5nIGEgYm9keSBlbGVtZW50IHJhdGhlciB0aGFuIGEgZGl2KVxuICAgICAgICBmdW5jdGlvbihmcmFnbWVudFN0cikge1xuICAgICAgICAgICAgYXNzZXJ0Tm90RGV0YWNoZWQodGhpcyk7XG4gICAgICAgICAgICB2YXIgZG9jID0gZ2V0UmFuZ2VEb2N1bWVudCh0aGlzKTtcbiAgICAgICAgICAgIHZhciBlbCA9IGRvYy5jcmVhdGVFbGVtZW50KFwiYm9keVwiKTtcbiAgICAgICAgICAgIGVsLmlubmVySFRNTCA9IGZyYWdtZW50U3RyO1xuXG4gICAgICAgICAgICByZXR1cm4gZG9tLmZyYWdtZW50RnJvbU5vZGVDaGlsZHJlbihlbCk7XG4gICAgICAgIH07XG5cbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gICAgdmFyIHJhbmdlUHJvcGVydGllcyA9IFtcInN0YXJ0Q29udGFpbmVyXCIsIFwic3RhcnRPZmZzZXRcIiwgXCJlbmRDb250YWluZXJcIiwgXCJlbmRPZmZzZXRcIiwgXCJjb2xsYXBzZWRcIixcbiAgICAgICAgXCJjb21tb25BbmNlc3RvckNvbnRhaW5lclwiXTtcblxuICAgIHZhciBzMnMgPSAwLCBzMmUgPSAxLCBlMmUgPSAyLCBlMnMgPSAzO1xuICAgIHZhciBuX2IgPSAwLCBuX2EgPSAxLCBuX2JfYSA9IDIsIG5faSA9IDM7XG5cbiAgICBmdW5jdGlvbiBSYW5nZVByb3RvdHlwZSgpIHt9XG5cbiAgICBSYW5nZVByb3RvdHlwZS5wcm90b3R5cGUgPSB7XG4gICAgICAgIGF0dGFjaExpc3RlbmVyOiBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikge1xuICAgICAgICAgICAgdGhpcy5fbGlzdGVuZXJzW3R5cGVdLnB1c2gobGlzdGVuZXIpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNvbXBhcmVCb3VuZGFyeVBvaW50czogZnVuY3Rpb24oaG93LCByYW5nZSkge1xuICAgICAgICAgICAgYXNzZXJ0UmFuZ2VWYWxpZCh0aGlzKTtcbiAgICAgICAgICAgIGFzc2VydFNhbWVEb2N1bWVudE9yRnJhZ21lbnQodGhpcy5zdGFydENvbnRhaW5lciwgcmFuZ2Uuc3RhcnRDb250YWluZXIpO1xuXG4gICAgICAgICAgICB2YXIgbm9kZUEsIG9mZnNldEEsIG5vZGVCLCBvZmZzZXRCO1xuICAgICAgICAgICAgdmFyIHByZWZpeEEgPSAoaG93ID09IGUycyB8fCBob3cgPT0gczJzKSA/IFwic3RhcnRcIiA6IFwiZW5kXCI7XG4gICAgICAgICAgICB2YXIgcHJlZml4QiA9IChob3cgPT0gczJlIHx8IGhvdyA9PSBzMnMpID8gXCJzdGFydFwiIDogXCJlbmRcIjtcbiAgICAgICAgICAgIG5vZGVBID0gdGhpc1twcmVmaXhBICsgXCJDb250YWluZXJcIl07XG4gICAgICAgICAgICBvZmZzZXRBID0gdGhpc1twcmVmaXhBICsgXCJPZmZzZXRcIl07XG4gICAgICAgICAgICBub2RlQiA9IHJhbmdlW3ByZWZpeEIgKyBcIkNvbnRhaW5lclwiXTtcbiAgICAgICAgICAgIG9mZnNldEIgPSByYW5nZVtwcmVmaXhCICsgXCJPZmZzZXRcIl07XG4gICAgICAgICAgICByZXR1cm4gZG9tLmNvbXBhcmVQb2ludHMobm9kZUEsIG9mZnNldEEsIG5vZGVCLCBvZmZzZXRCKTtcbiAgICAgICAgfSxcblxuICAgICAgICBpbnNlcnROb2RlOiBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgICBhc3NlcnRSYW5nZVZhbGlkKHRoaXMpO1xuICAgICAgICAgICAgYXNzZXJ0VmFsaWROb2RlVHlwZShub2RlLCBpbnNlcnRhYmxlTm9kZVR5cGVzKTtcbiAgICAgICAgICAgIGFzc2VydE5vZGVOb3RSZWFkT25seSh0aGlzLnN0YXJ0Q29udGFpbmVyKTtcblxuICAgICAgICAgICAgaWYgKGRvbS5pc0FuY2VzdG9yT2Yobm9kZSwgdGhpcy5zdGFydENvbnRhaW5lciwgdHJ1ZSkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRE9NRXhjZXB0aW9uKFwiSElFUkFSQ0hZX1JFUVVFU1RfRVJSXCIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBObyBjaGVjayBmb3Igd2hldGhlciB0aGUgY29udGFpbmVyIG9mIHRoZSBzdGFydCBvZiB0aGUgUmFuZ2UgaXMgb2YgYSB0eXBlIHRoYXQgZG9lcyBub3QgYWxsb3dcbiAgICAgICAgICAgIC8vIGNoaWxkcmVuIG9mIHRoZSB0eXBlIG9mIG5vZGU6IHRoZSBicm93c2VyJ3MgRE9NIGltcGxlbWVudGF0aW9uIHNob3VsZCBkbyB0aGlzIGZvciB1cyB3aGVuIHdlIGF0dGVtcHRcbiAgICAgICAgICAgIC8vIHRvIGFkZCB0aGUgbm9kZVxuXG4gICAgICAgICAgICB2YXIgZmlyc3ROb2RlSW5zZXJ0ZWQgPSBpbnNlcnROb2RlQXRQb3NpdGlvbihub2RlLCB0aGlzLnN0YXJ0Q29udGFpbmVyLCB0aGlzLnN0YXJ0T2Zmc2V0KTtcbiAgICAgICAgICAgIHRoaXMuc2V0U3RhcnRCZWZvcmUoZmlyc3ROb2RlSW5zZXJ0ZWQpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNsb25lQ29udGVudHM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgYXNzZXJ0UmFuZ2VWYWxpZCh0aGlzKTtcblxuICAgICAgICAgICAgdmFyIGNsb25lLCBmcmFnO1xuICAgICAgICAgICAgaWYgKHRoaXMuY29sbGFwc2VkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGdldFJhbmdlRG9jdW1lbnQodGhpcykuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zdGFydENvbnRhaW5lciA9PT0gdGhpcy5lbmRDb250YWluZXIgJiYgZG9tLmlzQ2hhcmFjdGVyRGF0YU5vZGUodGhpcy5zdGFydENvbnRhaW5lcikpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xvbmUgPSB0aGlzLnN0YXJ0Q29udGFpbmVyLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgY2xvbmUuZGF0YSA9IGNsb25lLmRhdGEuc2xpY2UodGhpcy5zdGFydE9mZnNldCwgdGhpcy5lbmRPZmZzZXQpO1xuICAgICAgICAgICAgICAgICAgICBmcmFnID0gZ2V0UmFuZ2VEb2N1bWVudCh0aGlzKS5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7XG4gICAgICAgICAgICAgICAgICAgIGZyYWcuYXBwZW5kQ2hpbGQoY2xvbmUpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZnJhZztcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgaXRlcmF0b3IgPSBuZXcgUmFuZ2VJdGVyYXRvcih0aGlzLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgY2xvbmUgPSBjbG9uZVN1YnRyZWUoaXRlcmF0b3IpO1xuICAgICAgICAgICAgICAgICAgICBpdGVyYXRvci5kZXRhY2goKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNsb25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGNhblN1cnJvdW5kQ29udGVudHM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgYXNzZXJ0UmFuZ2VWYWxpZCh0aGlzKTtcbiAgICAgICAgICAgIGFzc2VydE5vZGVOb3RSZWFkT25seSh0aGlzLnN0YXJ0Q29udGFpbmVyKTtcbiAgICAgICAgICAgIGFzc2VydE5vZGVOb3RSZWFkT25seSh0aGlzLmVuZENvbnRhaW5lcik7XG5cbiAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZSBjb250ZW50cyBjYW4gYmUgc3Vycm91bmRlZC4gU3BlY2lmaWNhbGx5LCB0aGlzIG1lYW5zIHdoZXRoZXIgdGhlIHJhbmdlIHBhcnRpYWxseSBzZWxlY3RzXG4gICAgICAgICAgICAvLyBubyBub24tdGV4dCBub2Rlcy5cbiAgICAgICAgICAgIHZhciBpdGVyYXRvciA9IG5ldyBSYW5nZUl0ZXJhdG9yKHRoaXMsIHRydWUpO1xuICAgICAgICAgICAgdmFyIGJvdW5kYXJpZXNJbnZhbGlkID0gKGl0ZXJhdG9yLl9maXJzdCAmJiAoaXNOb25UZXh0UGFydGlhbGx5U2VsZWN0ZWQoaXRlcmF0b3IuX2ZpcnN0LCB0aGlzKSkgfHxcbiAgICAgICAgICAgICAgICAgICAgKGl0ZXJhdG9yLl9sYXN0ICYmIGlzTm9uVGV4dFBhcnRpYWxseVNlbGVjdGVkKGl0ZXJhdG9yLl9sYXN0LCB0aGlzKSkpO1xuICAgICAgICAgICAgaXRlcmF0b3IuZGV0YWNoKCk7XG4gICAgICAgICAgICByZXR1cm4gIWJvdW5kYXJpZXNJbnZhbGlkO1xuICAgICAgICB9LFxuXG4gICAgICAgIHN1cnJvdW5kQ29udGVudHM6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICAgIGFzc2VydFZhbGlkTm9kZVR5cGUobm9kZSwgc3Vycm91bmROb2RlVHlwZXMpO1xuXG4gICAgICAgICAgICBpZiAoIXRoaXMuY2FuU3Vycm91bmRDb250ZW50cygpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXhjZXB0aW9uKFwiQkFEX0JPVU5EQVJZUE9JTlRTX0VSUlwiKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gRXh0cmFjdCB0aGUgY29udGVudHNcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gdGhpcy5leHRyYWN0Q29udGVudHMoKTtcblxuICAgICAgICAgICAgLy8gQ2xlYXIgdGhlIGNoaWxkcmVuIG9mIHRoZSBub2RlXG4gICAgICAgICAgICBpZiAobm9kZS5oYXNDaGlsZE5vZGVzKCkpIHtcbiAgICAgICAgICAgICAgICB3aGlsZSAobm9kZS5sYXN0Q2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZS5yZW1vdmVDaGlsZChub2RlLmxhc3RDaGlsZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBJbnNlcnQgdGhlIG5ldyBub2RlIGFuZCBhZGQgdGhlIGV4dHJhY3RlZCBjb250ZW50c1xuICAgICAgICAgICAgaW5zZXJ0Tm9kZUF0UG9zaXRpb24obm9kZSwgdGhpcy5zdGFydENvbnRhaW5lciwgdGhpcy5zdGFydE9mZnNldCk7XG4gICAgICAgICAgICBub2RlLmFwcGVuZENoaWxkKGNvbnRlbnQpO1xuXG4gICAgICAgICAgICB0aGlzLnNlbGVjdE5vZGUobm9kZSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgY2xvbmVSYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBhc3NlcnRSYW5nZVZhbGlkKHRoaXMpO1xuICAgICAgICAgICAgdmFyIHJhbmdlID0gbmV3IFJhbmdlKGdldFJhbmdlRG9jdW1lbnQodGhpcykpO1xuICAgICAgICAgICAgdmFyIGkgPSByYW5nZVByb3BlcnRpZXMubGVuZ3RoLCBwcm9wO1xuICAgICAgICAgICAgd2hpbGUgKGktLSkge1xuICAgICAgICAgICAgICAgIHByb3AgPSByYW5nZVByb3BlcnRpZXNbaV07XG4gICAgICAgICAgICAgICAgcmFuZ2VbcHJvcF0gPSB0aGlzW3Byb3BdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJhbmdlO1xuICAgICAgICB9LFxuXG4gICAgICAgIHRvU3RyaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGFzc2VydFJhbmdlVmFsaWQodGhpcyk7XG4gICAgICAgICAgICB2YXIgc2MgPSB0aGlzLnN0YXJ0Q29udGFpbmVyO1xuICAgICAgICAgICAgaWYgKHNjID09PSB0aGlzLmVuZENvbnRhaW5lciAmJiBkb20uaXNDaGFyYWN0ZXJEYXRhTm9kZShzYykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKHNjLm5vZGVUeXBlID09IDMgfHwgc2Mubm9kZVR5cGUgPT0gNCkgPyBzYy5kYXRhLnNsaWNlKHRoaXMuc3RhcnRPZmZzZXQsIHRoaXMuZW5kT2Zmc2V0KSA6IFwiXCI7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciB0ZXh0Qml0cyA9IFtdLCBpdGVyYXRvciA9IG5ldyBSYW5nZUl0ZXJhdG9yKHRoaXMsIHRydWUpO1xuXG4gICAgICAgICAgICAgICAgaXRlcmF0ZVN1YnRyZWUoaXRlcmF0b3IsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQWNjZXB0IG9ubHkgdGV4dCBvciBDREFUQSBub2Rlcywgbm90IGNvbW1lbnRzXG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT0gMyB8fCBub2RlLm5vZGVUeXBlID09IDQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRCaXRzLnB1c2gobm9kZS5kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGl0ZXJhdG9yLmRldGFjaCgpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0ZXh0Qml0cy5qb2luKFwiXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIC8vIFRoZSBtZXRob2RzIGJlbG93IGFyZSBhbGwgbm9uLXN0YW5kYXJkLiBUaGUgZm9sbG93aW5nIGJhdGNoIHdlcmUgaW50cm9kdWNlZCBieSBNb3ppbGxhIGJ1dCBoYXZlIHNpbmNlXG4gICAgICAgIC8vIGJlZW4gcmVtb3ZlZCBmcm9tIE1vemlsbGEuXG5cbiAgICAgICAgY29tcGFyZU5vZGU6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICAgIGFzc2VydFJhbmdlVmFsaWQodGhpcyk7XG5cbiAgICAgICAgICAgIHZhciBwYXJlbnQgPSBub2RlLnBhcmVudE5vZGU7XG4gICAgICAgICAgICB2YXIgbm9kZUluZGV4ID0gZG9tLmdldE5vZGVJbmRleChub2RlKTtcblxuICAgICAgICAgICAgaWYgKCFwYXJlbnQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRE9NRXhjZXB0aW9uKFwiTk9UX0ZPVU5EX0VSUlwiKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHN0YXJ0Q29tcGFyaXNvbiA9IHRoaXMuY29tcGFyZVBvaW50KHBhcmVudCwgbm9kZUluZGV4KSxcbiAgICAgICAgICAgICAgICBlbmRDb21wYXJpc29uID0gdGhpcy5jb21wYXJlUG9pbnQocGFyZW50LCBub2RlSW5kZXggKyAxKTtcblxuICAgICAgICAgICAgaWYgKHN0YXJ0Q29tcGFyaXNvbiA8IDApIHsgLy8gTm9kZSBzdGFydHMgYmVmb3JlXG4gICAgICAgICAgICAgICAgcmV0dXJuIChlbmRDb21wYXJpc29uID4gMCkgPyBuX2JfYSA6IG5fYjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChlbmRDb21wYXJpc29uID4gMCkgPyBuX2EgOiBuX2k7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgY29tcGFyZVBvaW50OiBmdW5jdGlvbihub2RlLCBvZmZzZXQpIHtcbiAgICAgICAgICAgIGFzc2VydFJhbmdlVmFsaWQodGhpcyk7XG4gICAgICAgICAgICBhc3NlcnROb2RlKG5vZGUsIFwiSElFUkFSQ0hZX1JFUVVFU1RfRVJSXCIpO1xuICAgICAgICAgICAgYXNzZXJ0U2FtZURvY3VtZW50T3JGcmFnbWVudChub2RlLCB0aGlzLnN0YXJ0Q29udGFpbmVyKTtcblxuICAgICAgICAgICAgaWYgKGRvbS5jb21wYXJlUG9pbnRzKG5vZGUsIG9mZnNldCwgdGhpcy5zdGFydENvbnRhaW5lciwgdGhpcy5zdGFydE9mZnNldCkgPCAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChkb20uY29tcGFyZVBvaW50cyhub2RlLCBvZmZzZXQsIHRoaXMuZW5kQ29udGFpbmVyLCB0aGlzLmVuZE9mZnNldCkgPiAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfSxcblxuICAgICAgICBjcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQ6IGNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudCxcblxuICAgICAgICB0b0h0bWw6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgYXNzZXJ0UmFuZ2VWYWxpZCh0aGlzKTtcbiAgICAgICAgICAgIHZhciBjb250YWluZXIgPSBnZXRSYW5nZURvY3VtZW50KHRoaXMpLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5jbG9uZUNvbnRlbnRzKCkpO1xuICAgICAgICAgICAgcmV0dXJuIGNvbnRhaW5lci5pbm5lckhUTUw7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLy8gdG91Y2hpbmdJc0ludGVyc2VjdGluZyBkZXRlcm1pbmVzIHdoZXRoZXIgdGhpcyBtZXRob2QgY29uc2lkZXJzIGEgbm9kZSB0aGF0IGJvcmRlcnMgYSByYW5nZSBpbnRlcnNlY3RzXG4gICAgICAgIC8vIHdpdGggaXQgKGFzIGluIFdlYktpdCkgb3Igbm90IChhcyBpbiBHZWNrbyBwcmUtMS45LCBhbmQgdGhlIGRlZmF1bHQpXG4gICAgICAgIGludGVyc2VjdHNOb2RlOiBmdW5jdGlvbihub2RlLCB0b3VjaGluZ0lzSW50ZXJzZWN0aW5nKSB7XG4gICAgICAgICAgICBhc3NlcnRSYW5nZVZhbGlkKHRoaXMpO1xuICAgICAgICAgICAgYXNzZXJ0Tm9kZShub2RlLCBcIk5PVF9GT1VORF9FUlJcIik7XG4gICAgICAgICAgICBpZiAoZG9tLmdldERvY3VtZW50KG5vZGUpICE9PSBnZXRSYW5nZURvY3VtZW50KHRoaXMpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgcGFyZW50ID0gbm9kZS5wYXJlbnROb2RlLCBvZmZzZXQgPSBkb20uZ2V0Tm9kZUluZGV4KG5vZGUpO1xuICAgICAgICAgICAgYXNzZXJ0Tm9kZShwYXJlbnQsIFwiTk9UX0ZPVU5EX0VSUlwiKTtcblxuICAgICAgICAgICAgdmFyIHN0YXJ0Q29tcGFyaXNvbiA9IGRvbS5jb21wYXJlUG9pbnRzKHBhcmVudCwgb2Zmc2V0LCB0aGlzLmVuZENvbnRhaW5lciwgdGhpcy5lbmRPZmZzZXQpLFxuICAgICAgICAgICAgICAgIGVuZENvbXBhcmlzb24gPSBkb20uY29tcGFyZVBvaW50cyhwYXJlbnQsIG9mZnNldCArIDEsIHRoaXMuc3RhcnRDb250YWluZXIsIHRoaXMuc3RhcnRPZmZzZXQpO1xuXG4gICAgICAgICAgICByZXR1cm4gdG91Y2hpbmdJc0ludGVyc2VjdGluZyA/IHN0YXJ0Q29tcGFyaXNvbiA8PSAwICYmIGVuZENvbXBhcmlzb24gPj0gMCA6IHN0YXJ0Q29tcGFyaXNvbiA8IDAgJiYgZW5kQ29tcGFyaXNvbiA+IDA7XG4gICAgICAgIH0sXG5cblxuICAgICAgICBpc1BvaW50SW5SYW5nZTogZnVuY3Rpb24obm9kZSwgb2Zmc2V0KSB7XG4gICAgICAgICAgICBhc3NlcnRSYW5nZVZhbGlkKHRoaXMpO1xuICAgICAgICAgICAgYXNzZXJ0Tm9kZShub2RlLCBcIkhJRVJBUkNIWV9SRVFVRVNUX0VSUlwiKTtcbiAgICAgICAgICAgIGFzc2VydFNhbWVEb2N1bWVudE9yRnJhZ21lbnQobm9kZSwgdGhpcy5zdGFydENvbnRhaW5lcik7XG5cbiAgICAgICAgICAgIHJldHVybiAoZG9tLmNvbXBhcmVQb2ludHMobm9kZSwgb2Zmc2V0LCB0aGlzLnN0YXJ0Q29udGFpbmVyLCB0aGlzLnN0YXJ0T2Zmc2V0KSA+PSAwKSAmJlxuICAgICAgICAgICAgICAgICAgIChkb20uY29tcGFyZVBvaW50cyhub2RlLCBvZmZzZXQsIHRoaXMuZW5kQ29udGFpbmVyLCB0aGlzLmVuZE9mZnNldCkgPD0gMCk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgLy8gVGhlIG1ldGhvZHMgYmVsb3cgYXJlIG5vbi1zdGFuZGFyZCBhbmQgaW52ZW50ZWQgYnkgbWUuXG5cbiAgICAgICAgLy8gU2hhcmluZyBhIGJvdW5kYXJ5IHN0YXJ0LXRvLWVuZCBvciBlbmQtdG8tc3RhcnQgZG9lcyBub3QgY291bnQgYXMgaW50ZXJzZWN0aW9uLlxuICAgICAgICBpbnRlcnNlY3RzUmFuZ2U6IGZ1bmN0aW9uKHJhbmdlLCB0b3VjaGluZ0lzSW50ZXJzZWN0aW5nKSB7XG4gICAgICAgICAgICBhc3NlcnRSYW5nZVZhbGlkKHRoaXMpO1xuXG4gICAgICAgICAgICBpZiAoZ2V0UmFuZ2VEb2N1bWVudChyYW5nZSkgIT0gZ2V0UmFuZ2VEb2N1bWVudCh0aGlzKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBET01FeGNlcHRpb24oXCJXUk9OR19ET0NVTUVOVF9FUlJcIik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBzdGFydENvbXBhcmlzb24gPSBkb20uY29tcGFyZVBvaW50cyh0aGlzLnN0YXJ0Q29udGFpbmVyLCB0aGlzLnN0YXJ0T2Zmc2V0LCByYW5nZS5lbmRDb250YWluZXIsIHJhbmdlLmVuZE9mZnNldCksXG4gICAgICAgICAgICAgICAgZW5kQ29tcGFyaXNvbiA9IGRvbS5jb21wYXJlUG9pbnRzKHRoaXMuZW5kQ29udGFpbmVyLCB0aGlzLmVuZE9mZnNldCwgcmFuZ2Uuc3RhcnRDb250YWluZXIsIHJhbmdlLnN0YXJ0T2Zmc2V0KTtcblxuICAgICAgICAgICAgcmV0dXJuIHRvdWNoaW5nSXNJbnRlcnNlY3RpbmcgPyBzdGFydENvbXBhcmlzb24gPD0gMCAmJiBlbmRDb21wYXJpc29uID49IDAgOiBzdGFydENvbXBhcmlzb24gPCAwICYmIGVuZENvbXBhcmlzb24gPiAwO1xuICAgICAgICB9LFxuXG4gICAgICAgIGludGVyc2VjdGlvbjogZnVuY3Rpb24ocmFuZ2UpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmludGVyc2VjdHNSYW5nZShyYW5nZSkpIHtcbiAgICAgICAgICAgICAgICB2YXIgc3RhcnRDb21wYXJpc29uID0gZG9tLmNvbXBhcmVQb2ludHModGhpcy5zdGFydENvbnRhaW5lciwgdGhpcy5zdGFydE9mZnNldCwgcmFuZ2Uuc3RhcnRDb250YWluZXIsIHJhbmdlLnN0YXJ0T2Zmc2V0KSxcbiAgICAgICAgICAgICAgICAgICAgZW5kQ29tcGFyaXNvbiA9IGRvbS5jb21wYXJlUG9pbnRzKHRoaXMuZW5kQ29udGFpbmVyLCB0aGlzLmVuZE9mZnNldCwgcmFuZ2UuZW5kQ29udGFpbmVyLCByYW5nZS5lbmRPZmZzZXQpO1xuXG4gICAgICAgICAgICAgICAgdmFyIGludGVyc2VjdGlvblJhbmdlID0gdGhpcy5jbG9uZVJhbmdlKCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoc3RhcnRDb21wYXJpc29uID09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIGludGVyc2VjdGlvblJhbmdlLnNldFN0YXJ0KHJhbmdlLnN0YXJ0Q29udGFpbmVyLCByYW5nZS5zdGFydE9mZnNldCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChlbmRDb21wYXJpc29uID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJzZWN0aW9uUmFuZ2Uuc2V0RW5kKHJhbmdlLmVuZENvbnRhaW5lciwgcmFuZ2UuZW5kT2Zmc2V0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGludGVyc2VjdGlvblJhbmdlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH0sXG5cbiAgICAgICAgdW5pb246IGZ1bmN0aW9uKHJhbmdlKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5pbnRlcnNlY3RzUmFuZ2UocmFuZ2UsIHRydWUpKSB7XG4gICAgICAgICAgICAgICAgdmFyIHVuaW9uUmFuZ2UgPSB0aGlzLmNsb25lUmFuZ2UoKTtcbiAgICAgICAgICAgICAgICBpZiAoZG9tLmNvbXBhcmVQb2ludHMocmFuZ2Uuc3RhcnRDb250YWluZXIsIHJhbmdlLnN0YXJ0T2Zmc2V0LCB0aGlzLnN0YXJ0Q29udGFpbmVyLCB0aGlzLnN0YXJ0T2Zmc2V0KSA9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICB1bmlvblJhbmdlLnNldFN0YXJ0KHJhbmdlLnN0YXJ0Q29udGFpbmVyLCByYW5nZS5zdGFydE9mZnNldCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChkb20uY29tcGFyZVBvaW50cyhyYW5nZS5lbmRDb250YWluZXIsIHJhbmdlLmVuZE9mZnNldCwgdGhpcy5lbmRDb250YWluZXIsIHRoaXMuZW5kT2Zmc2V0KSA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHVuaW9uUmFuZ2Uuc2V0RW5kKHJhbmdlLmVuZENvbnRhaW5lciwgcmFuZ2UuZW5kT2Zmc2V0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuaW9uUmFuZ2U7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBSYW5nZUV4Y2VwdGlvbihcIlJhbmdlcyBkbyBub3QgaW50ZXJzZWN0XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIGNvbnRhaW5zTm9kZTogZnVuY3Rpb24obm9kZSwgYWxsb3dQYXJ0aWFsKSB7XG4gICAgICAgICAgICBpZiAoYWxsb3dQYXJ0aWFsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuaW50ZXJzZWN0c05vZGUobm9kZSwgZmFsc2UpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jb21wYXJlTm9kZShub2RlKSA9PSBuX2k7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgY29udGFpbnNOb2RlQ29udGVudHM6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbXBhcmVQb2ludChub2RlLCAwKSA+PSAwICYmIHRoaXMuY29tcGFyZVBvaW50KG5vZGUsIGRvbS5nZXROb2RlTGVuZ3RoKG5vZGUpKSA8PSAwO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNvbnRhaW5zUmFuZ2U6IGZ1bmN0aW9uKHJhbmdlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5pbnRlcnNlY3Rpb24ocmFuZ2UpLmVxdWFscyhyYW5nZSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgY29udGFpbnNOb2RlVGV4dDogZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgICAgdmFyIG5vZGVSYW5nZSA9IHRoaXMuY2xvbmVSYW5nZSgpO1xuICAgICAgICAgICAgbm9kZVJhbmdlLnNlbGVjdE5vZGUobm9kZSk7XG4gICAgICAgICAgICB2YXIgdGV4dE5vZGVzID0gbm9kZVJhbmdlLmdldE5vZGVzKFszXSk7XG4gICAgICAgICAgICBpZiAodGV4dE5vZGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBub2RlUmFuZ2Uuc2V0U3RhcnQodGV4dE5vZGVzWzBdLCAwKTtcbiAgICAgICAgICAgICAgICB2YXIgbGFzdFRleHROb2RlID0gdGV4dE5vZGVzLnBvcCgpO1xuICAgICAgICAgICAgICAgIG5vZGVSYW5nZS5zZXRFbmQobGFzdFRleHROb2RlLCBsYXN0VGV4dE5vZGUubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICB2YXIgY29udGFpbnMgPSB0aGlzLmNvbnRhaW5zUmFuZ2Uobm9kZVJhbmdlKTtcbiAgICAgICAgICAgICAgICBub2RlUmFuZ2UuZGV0YWNoKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnRhaW5zO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jb250YWluc05vZGVDb250ZW50cyhub2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBjcmVhdGVOb2RlSXRlcmF0b3I6IGZ1bmN0aW9uKG5vZGVUeXBlcywgZmlsdGVyKSB7XG4gICAgICAgICAgICBhc3NlcnRSYW5nZVZhbGlkKHRoaXMpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBSYW5nZU5vZGVJdGVyYXRvcih0aGlzLCBub2RlVHlwZXMsIGZpbHRlcik7XG4gICAgICAgIH0sXG5cbiAgICAgICAgZ2V0Tm9kZXM6IGZ1bmN0aW9uKG5vZGVUeXBlcywgZmlsdGVyKSB7XG4gICAgICAgICAgICBhc3NlcnRSYW5nZVZhbGlkKHRoaXMpO1xuICAgICAgICAgICAgcmV0dXJuIGdldE5vZGVzSW5SYW5nZSh0aGlzLCBub2RlVHlwZXMsIGZpbHRlcik7XG4gICAgICAgIH0sXG5cbiAgICAgICAgZ2V0RG9jdW1lbnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIGdldFJhbmdlRG9jdW1lbnQodGhpcyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgY29sbGFwc2VCZWZvcmU6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICAgIGFzc2VydE5vdERldGFjaGVkKHRoaXMpO1xuXG4gICAgICAgICAgICB0aGlzLnNldEVuZEJlZm9yZShub2RlKTtcbiAgICAgICAgICAgIHRoaXMuY29sbGFwc2UoZmFsc2UpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNvbGxhcHNlQWZ0ZXI6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICAgIGFzc2VydE5vdERldGFjaGVkKHRoaXMpO1xuXG4gICAgICAgICAgICB0aGlzLnNldFN0YXJ0QWZ0ZXIobm9kZSk7XG4gICAgICAgICAgICB0aGlzLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGdldE5hbWU6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIFwiRG9tUmFuZ2VcIjtcbiAgICAgICAgfSxcblxuICAgICAgICBlcXVhbHM6IGZ1bmN0aW9uKHJhbmdlKSB7XG4gICAgICAgICAgICByZXR1cm4gUmFuZ2UucmFuZ2VzRXF1YWwodGhpcywgcmFuZ2UpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGluc3BlY3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIGluc3BlY3QodGhpcyk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gY29weUNvbXBhcmlzb25Db25zdGFudHNUb09iamVjdChvYmopIHtcbiAgICAgICAgb2JqLlNUQVJUX1RPX1NUQVJUID0gczJzO1xuICAgICAgICBvYmouU1RBUlRfVE9fRU5EID0gczJlO1xuICAgICAgICBvYmouRU5EX1RPX0VORCA9IGUyZTtcbiAgICAgICAgb2JqLkVORF9UT19TVEFSVCA9IGUycztcblxuICAgICAgICBvYmouTk9ERV9CRUZPUkUgPSBuX2I7XG4gICAgICAgIG9iai5OT0RFX0FGVEVSID0gbl9hO1xuICAgICAgICBvYmouTk9ERV9CRUZPUkVfQU5EX0FGVEVSID0gbl9iX2E7XG4gICAgICAgIG9iai5OT0RFX0lOU0lERSA9IG5faTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb3B5Q29tcGFyaXNvbkNvbnN0YW50cyhjb25zdHJ1Y3Rvcikge1xuICAgICAgICBjb3B5Q29tcGFyaXNvbkNvbnN0YW50c1RvT2JqZWN0KGNvbnN0cnVjdG9yKTtcbiAgICAgICAgY29weUNvbXBhcmlzb25Db25zdGFudHNUb09iamVjdChjb25zdHJ1Y3Rvci5wcm90b3R5cGUpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZVJhbmdlQ29udGVudFJlbW92ZXIocmVtb3ZlciwgYm91bmRhcnlVcGRhdGVyKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGFzc2VydFJhbmdlVmFsaWQodGhpcyk7XG5cbiAgICAgICAgICAgIHZhciBzYyA9IHRoaXMuc3RhcnRDb250YWluZXIsIHNvID0gdGhpcy5zdGFydE9mZnNldCwgcm9vdCA9IHRoaXMuY29tbW9uQW5jZXN0b3JDb250YWluZXI7XG5cbiAgICAgICAgICAgIHZhciBpdGVyYXRvciA9IG5ldyBSYW5nZUl0ZXJhdG9yKHRoaXMsIHRydWUpO1xuXG4gICAgICAgICAgICAvLyBXb3JrIG91dCB3aGVyZSB0byBwb3NpdGlvbiB0aGUgcmFuZ2UgYWZ0ZXIgY29udGVudCByZW1vdmFsXG4gICAgICAgICAgICB2YXIgbm9kZSwgYm91bmRhcnk7XG4gICAgICAgICAgICBpZiAoc2MgIT09IHJvb3QpIHtcbiAgICAgICAgICAgICAgICBub2RlID0gZG9tLmdldENsb3Nlc3RBbmNlc3RvckluKHNjLCByb290LCB0cnVlKTtcbiAgICAgICAgICAgICAgICBib3VuZGFyeSA9IGdldEJvdW5kYXJ5QWZ0ZXJOb2RlKG5vZGUpO1xuICAgICAgICAgICAgICAgIHNjID0gYm91bmRhcnkubm9kZTtcbiAgICAgICAgICAgICAgICBzbyA9IGJvdW5kYXJ5Lm9mZnNldDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQ2hlY2sgbm9uZSBvZiB0aGUgcmFuZ2UgaXMgcmVhZC1vbmx5XG4gICAgICAgICAgICBpdGVyYXRlU3VidHJlZShpdGVyYXRvciwgYXNzZXJ0Tm9kZU5vdFJlYWRPbmx5KTtcblxuICAgICAgICAgICAgaXRlcmF0b3IucmVzZXQoKTtcblxuICAgICAgICAgICAgLy8gUmVtb3ZlIHRoZSBjb250ZW50XG4gICAgICAgICAgICB2YXIgcmV0dXJuVmFsdWUgPSByZW1vdmVyKGl0ZXJhdG9yKTtcbiAgICAgICAgICAgIGl0ZXJhdG9yLmRldGFjaCgpO1xuXG4gICAgICAgICAgICAvLyBNb3ZlIHRvIHRoZSBuZXcgcG9zaXRpb25cbiAgICAgICAgICAgIGJvdW5kYXJ5VXBkYXRlcih0aGlzLCBzYywgc28sIHNjLCBzbyk7XG5cbiAgICAgICAgICAgIHJldHVybiByZXR1cm5WYWx1ZTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVQcm90b3R5cGVSYW5nZShjb25zdHJ1Y3RvciwgYm91bmRhcnlVcGRhdGVyLCBkZXRhY2hlcikge1xuICAgICAgICBmdW5jdGlvbiBjcmVhdGVCZWZvcmVBZnRlck5vZGVTZXR0ZXIoaXNCZWZvcmUsIGlzU3RhcnQpIHtcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgICAgICAgYXNzZXJ0Tm90RGV0YWNoZWQodGhpcyk7XG4gICAgICAgICAgICAgICAgYXNzZXJ0VmFsaWROb2RlVHlwZShub2RlLCBiZWZvcmVBZnRlck5vZGVUeXBlcyk7XG4gICAgICAgICAgICAgICAgYXNzZXJ0VmFsaWROb2RlVHlwZShnZXRSb290Q29udGFpbmVyKG5vZGUpLCByb290Q29udGFpbmVyTm9kZVR5cGVzKTtcblxuICAgICAgICAgICAgICAgIHZhciBib3VuZGFyeSA9IChpc0JlZm9yZSA/IGdldEJvdW5kYXJ5QmVmb3JlTm9kZSA6IGdldEJvdW5kYXJ5QWZ0ZXJOb2RlKShub2RlKTtcbiAgICAgICAgICAgICAgICAoaXNTdGFydCA/IHNldFJhbmdlU3RhcnQgOiBzZXRSYW5nZUVuZCkodGhpcywgYm91bmRhcnkubm9kZSwgYm91bmRhcnkub2Zmc2V0KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzZXRSYW5nZVN0YXJ0KHJhbmdlLCBub2RlLCBvZmZzZXQpIHtcbiAgICAgICAgICAgIHZhciBlYyA9IHJhbmdlLmVuZENvbnRhaW5lciwgZW8gPSByYW5nZS5lbmRPZmZzZXQ7XG4gICAgICAgICAgICBpZiAobm9kZSAhPT0gcmFuZ2Uuc3RhcnRDb250YWluZXIgfHwgb2Zmc2V0ICE9PSByYW5nZS5zdGFydE9mZnNldCkge1xuICAgICAgICAgICAgICAgIC8vIENoZWNrIHRoZSByb290IGNvbnRhaW5lcnMgb2YgdGhlIHJhbmdlIGFuZCB0aGUgbmV3IGJvdW5kYXJ5LCBhbmQgYWxzbyBjaGVjayB3aGV0aGVyIHRoZSBuZXcgYm91bmRhcnlcbiAgICAgICAgICAgICAgICAvLyBpcyBhZnRlciB0aGUgY3VycmVudCBlbmQuIEluIGVpdGhlciBjYXNlLCBjb2xsYXBzZSB0aGUgcmFuZ2UgdG8gdGhlIG5ldyBwb3NpdGlvblxuICAgICAgICAgICAgICAgIGlmIChnZXRSb290Q29udGFpbmVyKG5vZGUpICE9IGdldFJvb3RDb250YWluZXIoZWMpIHx8IGRvbS5jb21wYXJlUG9pbnRzKG5vZGUsIG9mZnNldCwgZWMsIGVvKSA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGVjID0gbm9kZTtcbiAgICAgICAgICAgICAgICAgICAgZW8gPSBvZmZzZXQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJvdW5kYXJ5VXBkYXRlcihyYW5nZSwgbm9kZSwgb2Zmc2V0LCBlYywgZW8pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gc2V0UmFuZ2VFbmQocmFuZ2UsIG5vZGUsIG9mZnNldCkge1xuICAgICAgICAgICAgdmFyIHNjID0gcmFuZ2Uuc3RhcnRDb250YWluZXIsIHNvID0gcmFuZ2Uuc3RhcnRPZmZzZXQ7XG4gICAgICAgICAgICBpZiAobm9kZSAhPT0gcmFuZ2UuZW5kQ29udGFpbmVyIHx8IG9mZnNldCAhPT0gcmFuZ2UuZW5kT2Zmc2V0KSB7XG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgdGhlIHJvb3QgY29udGFpbmVycyBvZiB0aGUgcmFuZ2UgYW5kIHRoZSBuZXcgYm91bmRhcnksIGFuZCBhbHNvIGNoZWNrIHdoZXRoZXIgdGhlIG5ldyBib3VuZGFyeVxuICAgICAgICAgICAgICAgIC8vIGlzIGFmdGVyIHRoZSBjdXJyZW50IGVuZC4gSW4gZWl0aGVyIGNhc2UsIGNvbGxhcHNlIHRoZSByYW5nZSB0byB0aGUgbmV3IHBvc2l0aW9uXG4gICAgICAgICAgICAgICAgaWYgKGdldFJvb3RDb250YWluZXIobm9kZSkgIT0gZ2V0Um9vdENvbnRhaW5lcihzYykgfHwgZG9tLmNvbXBhcmVQb2ludHMobm9kZSwgb2Zmc2V0LCBzYywgc28pID09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIHNjID0gbm9kZTtcbiAgICAgICAgICAgICAgICAgICAgc28gPSBvZmZzZXQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJvdW5kYXJ5VXBkYXRlcihyYW5nZSwgc2MsIHNvLCBub2RlLCBvZmZzZXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gc2V0UmFuZ2VTdGFydEFuZEVuZChyYW5nZSwgbm9kZSwgb2Zmc2V0KSB7XG4gICAgICAgICAgICBpZiAobm9kZSAhPT0gcmFuZ2Uuc3RhcnRDb250YWluZXIgfHwgb2Zmc2V0ICE9PSByYW5nZS5zdGFydE9mZnNldCB8fCBub2RlICE9PSByYW5nZS5lbmRDb250YWluZXIgfHwgb2Zmc2V0ICE9PSByYW5nZS5lbmRPZmZzZXQpIHtcbiAgICAgICAgICAgICAgICBib3VuZGFyeVVwZGF0ZXIocmFuZ2UsIG5vZGUsIG9mZnNldCwgbm9kZSwgb2Zmc2V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0cnVjdG9yLnByb3RvdHlwZSA9IG5ldyBSYW5nZVByb3RvdHlwZSgpO1xuXG4gICAgICAgIGFwaS51dGlsLmV4dGVuZChjb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHtcbiAgICAgICAgICAgIHNldFN0YXJ0OiBmdW5jdGlvbihub2RlLCBvZmZzZXQpIHtcbiAgICAgICAgICAgICAgICBhc3NlcnROb3REZXRhY2hlZCh0aGlzKTtcbiAgICAgICAgICAgICAgICBhc3NlcnROb0RvY1R5cGVOb3RhdGlvbkVudGl0eUFuY2VzdG9yKG5vZGUsIHRydWUpO1xuICAgICAgICAgICAgICAgIGFzc2VydFZhbGlkT2Zmc2V0KG5vZGUsIG9mZnNldCk7XG5cbiAgICAgICAgICAgICAgICBzZXRSYW5nZVN0YXJ0KHRoaXMsIG5vZGUsIG9mZnNldCk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICBzZXRFbmQ6IGZ1bmN0aW9uKG5vZGUsIG9mZnNldCkge1xuICAgICAgICAgICAgICAgIGFzc2VydE5vdERldGFjaGVkKHRoaXMpO1xuICAgICAgICAgICAgICAgIGFzc2VydE5vRG9jVHlwZU5vdGF0aW9uRW50aXR5QW5jZXN0b3Iobm9kZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgYXNzZXJ0VmFsaWRPZmZzZXQobm9kZSwgb2Zmc2V0KTtcblxuICAgICAgICAgICAgICAgIHNldFJhbmdlRW5kKHRoaXMsIG5vZGUsIG9mZnNldCk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICBzZXRTdGFydEJlZm9yZTogY3JlYXRlQmVmb3JlQWZ0ZXJOb2RlU2V0dGVyKHRydWUsIHRydWUpLFxuICAgICAgICAgICAgc2V0U3RhcnRBZnRlcjogY3JlYXRlQmVmb3JlQWZ0ZXJOb2RlU2V0dGVyKGZhbHNlLCB0cnVlKSxcbiAgICAgICAgICAgIHNldEVuZEJlZm9yZTogY3JlYXRlQmVmb3JlQWZ0ZXJOb2RlU2V0dGVyKHRydWUsIGZhbHNlKSxcbiAgICAgICAgICAgIHNldEVuZEFmdGVyOiBjcmVhdGVCZWZvcmVBZnRlck5vZGVTZXR0ZXIoZmFsc2UsIGZhbHNlKSxcblxuICAgICAgICAgICAgY29sbGFwc2U6IGZ1bmN0aW9uKGlzU3RhcnQpIHtcbiAgICAgICAgICAgICAgICBhc3NlcnRSYW5nZVZhbGlkKHRoaXMpO1xuICAgICAgICAgICAgICAgIGlmIChpc1N0YXJ0KSB7XG4gICAgICAgICAgICAgICAgICAgIGJvdW5kYXJ5VXBkYXRlcih0aGlzLCB0aGlzLnN0YXJ0Q29udGFpbmVyLCB0aGlzLnN0YXJ0T2Zmc2V0LCB0aGlzLnN0YXJ0Q29udGFpbmVyLCB0aGlzLnN0YXJ0T2Zmc2V0KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBib3VuZGFyeVVwZGF0ZXIodGhpcywgdGhpcy5lbmRDb250YWluZXIsIHRoaXMuZW5kT2Zmc2V0LCB0aGlzLmVuZENvbnRhaW5lciwgdGhpcy5lbmRPZmZzZXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHNlbGVjdE5vZGVDb250ZW50czogZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgICAgICAgIC8vIFRoaXMgZG9lc24ndCBzZWVtIHdlbGwgc3BlY2lmaWVkOiB0aGUgc3BlYyB0YWxrcyBvbmx5IGFib3V0IHNlbGVjdGluZyB0aGUgbm9kZSdzIGNvbnRlbnRzLCB3aGljaFxuICAgICAgICAgICAgICAgIC8vIGNvdWxkIGJlIHRha2VuIHRvIG1lYW4gb25seSBpdHMgY2hpbGRyZW4uIEhvd2V2ZXIsIGJyb3dzZXJzIGltcGxlbWVudCB0aGlzIHRoZSBzYW1lIGFzIHNlbGVjdE5vZGUgZm9yXG4gICAgICAgICAgICAgICAgLy8gdGV4dCBub2Rlcywgc28gSSBzaGFsbCBkbyBsaWtld2lzZVxuICAgICAgICAgICAgICAgIGFzc2VydE5vdERldGFjaGVkKHRoaXMpO1xuICAgICAgICAgICAgICAgIGFzc2VydE5vRG9jVHlwZU5vdGF0aW9uRW50aXR5QW5jZXN0b3Iobm9kZSwgdHJ1ZSk7XG5cbiAgICAgICAgICAgICAgICBib3VuZGFyeVVwZGF0ZXIodGhpcywgbm9kZSwgMCwgbm9kZSwgZG9tLmdldE5vZGVMZW5ndGgobm9kZSkpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgc2VsZWN0Tm9kZTogZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgICAgICAgIGFzc2VydE5vdERldGFjaGVkKHRoaXMpO1xuICAgICAgICAgICAgICAgIGFzc2VydE5vRG9jVHlwZU5vdGF0aW9uRW50aXR5QW5jZXN0b3Iobm9kZSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIGFzc2VydFZhbGlkTm9kZVR5cGUobm9kZSwgYmVmb3JlQWZ0ZXJOb2RlVHlwZXMpO1xuXG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0ID0gZ2V0Qm91bmRhcnlCZWZvcmVOb2RlKG5vZGUpLCBlbmQgPSBnZXRCb3VuZGFyeUFmdGVyTm9kZShub2RlKTtcbiAgICAgICAgICAgICAgICBib3VuZGFyeVVwZGF0ZXIodGhpcywgc3RhcnQubm9kZSwgc3RhcnQub2Zmc2V0LCBlbmQubm9kZSwgZW5kLm9mZnNldCk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICBleHRyYWN0Q29udGVudHM6IGNyZWF0ZVJhbmdlQ29udGVudFJlbW92ZXIoZXh0cmFjdFN1YnRyZWUsIGJvdW5kYXJ5VXBkYXRlciksXG5cbiAgICAgICAgICAgIGRlbGV0ZUNvbnRlbnRzOiBjcmVhdGVSYW5nZUNvbnRlbnRSZW1vdmVyKGRlbGV0ZVN1YnRyZWUsIGJvdW5kYXJ5VXBkYXRlciksXG5cbiAgICAgICAgICAgIGNhblN1cnJvdW5kQ29udGVudHM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGFzc2VydFJhbmdlVmFsaWQodGhpcyk7XG4gICAgICAgICAgICAgICAgYXNzZXJ0Tm9kZU5vdFJlYWRPbmx5KHRoaXMuc3RhcnRDb250YWluZXIpO1xuICAgICAgICAgICAgICAgIGFzc2VydE5vZGVOb3RSZWFkT25seSh0aGlzLmVuZENvbnRhaW5lcik7XG5cbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiB0aGUgY29udGVudHMgY2FuIGJlIHN1cnJvdW5kZWQuIFNwZWNpZmljYWxseSwgdGhpcyBtZWFucyB3aGV0aGVyIHRoZSByYW5nZSBwYXJ0aWFsbHkgc2VsZWN0c1xuICAgICAgICAgICAgICAgIC8vIG5vIG5vbi10ZXh0IG5vZGVzLlxuICAgICAgICAgICAgICAgIHZhciBpdGVyYXRvciA9IG5ldyBSYW5nZUl0ZXJhdG9yKHRoaXMsIHRydWUpO1xuICAgICAgICAgICAgICAgIHZhciBib3VuZGFyaWVzSW52YWxpZCA9IChpdGVyYXRvci5fZmlyc3QgJiYgKGlzTm9uVGV4dFBhcnRpYWxseVNlbGVjdGVkKGl0ZXJhdG9yLl9maXJzdCwgdGhpcykpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAoaXRlcmF0b3IuX2xhc3QgJiYgaXNOb25UZXh0UGFydGlhbGx5U2VsZWN0ZWQoaXRlcmF0b3IuX2xhc3QsIHRoaXMpKSk7XG4gICAgICAgICAgICAgICAgaXRlcmF0b3IuZGV0YWNoKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuICFib3VuZGFyaWVzSW52YWxpZDtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIGRldGFjaDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgZGV0YWNoZXIodGhpcyk7XG4gICAgICAgICAgICB9LFxuXG4gICAgICAgICAgICBzcGxpdEJvdW5kYXJpZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGFzc2VydFJhbmdlVmFsaWQodGhpcyk7XG5cblxuICAgICAgICAgICAgICAgIHZhciBzYyA9IHRoaXMuc3RhcnRDb250YWluZXIsIHNvID0gdGhpcy5zdGFydE9mZnNldCwgZWMgPSB0aGlzLmVuZENvbnRhaW5lciwgZW8gPSB0aGlzLmVuZE9mZnNldDtcbiAgICAgICAgICAgICAgICB2YXIgc3RhcnRFbmRTYW1lID0gKHNjID09PSBlYyk7XG5cbiAgICAgICAgICAgICAgICBpZiAoZG9tLmlzQ2hhcmFjdGVyRGF0YU5vZGUoZWMpICYmIGVvID4gMCAmJiBlbyA8IGVjLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICBkb20uc3BsaXREYXRhTm9kZShlYywgZW8pO1xuXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgaWYgKGRvbS5pc0NoYXJhY3RlckRhdGFOb2RlKHNjKSAmJiBzbyA+IDAgJiYgc28gPCBzYy5sZW5ndGgpIHtcblxuICAgICAgICAgICAgICAgICAgICBzYyA9IGRvbS5zcGxpdERhdGFOb2RlKHNjLCBzbyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGFydEVuZFNhbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVvIC09IHNvO1xuICAgICAgICAgICAgICAgICAgICAgICAgZWMgPSBzYztcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChlYyA9PSBzYy5wYXJlbnROb2RlICYmIGVvID49IGRvbS5nZXROb2RlSW5kZXgoc2MpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbysrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHNvID0gMDtcblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBib3VuZGFyeVVwZGF0ZXIodGhpcywgc2MsIHNvLCBlYywgZW8pO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgbm9ybWFsaXplQm91bmRhcmllczogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgYXNzZXJ0UmFuZ2VWYWxpZCh0aGlzKTtcblxuICAgICAgICAgICAgICAgIHZhciBzYyA9IHRoaXMuc3RhcnRDb250YWluZXIsIHNvID0gdGhpcy5zdGFydE9mZnNldCwgZWMgPSB0aGlzLmVuZENvbnRhaW5lciwgZW8gPSB0aGlzLmVuZE9mZnNldDtcblxuICAgICAgICAgICAgICAgIHZhciBtZXJnZUZvcndhcmQgPSBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzaWJsaW5nID0gbm9kZS5uZXh0U2libGluZztcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNpYmxpbmcgJiYgc2libGluZy5ub2RlVHlwZSA9PSBub2RlLm5vZGVUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlYyA9IG5vZGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbyA9IG5vZGUubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZS5hcHBlbmREYXRhKHNpYmxpbmcuZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzaWJsaW5nLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2libGluZyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgdmFyIG1lcmdlQmFja3dhcmQgPSBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzaWJsaW5nID0gbm9kZS5wcmV2aW91c1NpYmxpbmc7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzaWJsaW5nICYmIHNpYmxpbmcubm9kZVR5cGUgPT0gbm9kZS5ub2RlVHlwZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2MgPSBub2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG5vZGVMZW5ndGggPSBub2RlLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNvID0gc2libGluZy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlLmluc2VydERhdGEoMCwgc2libGluZy5kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNpYmxpbmcucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzaWJsaW5nKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzYyA9PSBlYykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVvICs9IHNvO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVjID0gc2M7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGVjID09IG5vZGUucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBub2RlSW5kZXggPSBkb20uZ2V0Tm9kZUluZGV4KG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbyA9PSBub2RlSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWMgPSBub2RlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbyA9IG5vZGVMZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChlbyA+IG5vZGVJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlby0tO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICB2YXIgbm9ybWFsaXplU3RhcnQgPSB0cnVlO1xuXG4gICAgICAgICAgICAgICAgaWYgKGRvbS5pc0NoYXJhY3RlckRhdGFOb2RlKGVjKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZWMubGVuZ3RoID09IGVvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXJnZUZvcndhcmQoZWMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVvID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVuZE5vZGUgPSBlYy5jaGlsZE5vZGVzW2VvIC0gMV07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZW5kTm9kZSAmJiBkb20uaXNDaGFyYWN0ZXJEYXRhTm9kZShlbmROb2RlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lcmdlRm9yd2FyZChlbmROb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBub3JtYWxpemVTdGFydCA9ICF0aGlzLmNvbGxhcHNlZDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAobm9ybWFsaXplU3RhcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvbS5pc0NoYXJhY3RlckRhdGFOb2RlKHNjKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNvID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXJnZUJhY2t3YXJkKHNjKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzbyA8IHNjLmNoaWxkTm9kZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXJ0Tm9kZSA9IHNjLmNoaWxkTm9kZXNbc29dO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzdGFydE5vZGUgJiYgZG9tLmlzQ2hhcmFjdGVyRGF0YU5vZGUoc3RhcnROb2RlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXJnZUJhY2t3YXJkKHN0YXJ0Tm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc2MgPSBlYztcbiAgICAgICAgICAgICAgICAgICAgc28gPSBlbztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBib3VuZGFyeVVwZGF0ZXIodGhpcywgc2MsIHNvLCBlYywgZW8pO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgY29sbGFwc2VUb1BvaW50OiBmdW5jdGlvbihub2RlLCBvZmZzZXQpIHtcbiAgICAgICAgICAgICAgICBhc3NlcnROb3REZXRhY2hlZCh0aGlzKTtcblxuICAgICAgICAgICAgICAgIGFzc2VydE5vRG9jVHlwZU5vdGF0aW9uRW50aXR5QW5jZXN0b3Iobm9kZSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgYXNzZXJ0VmFsaWRPZmZzZXQobm9kZSwgb2Zmc2V0KTtcblxuICAgICAgICAgICAgICAgIHNldFJhbmdlU3RhcnRBbmRFbmQodGhpcywgbm9kZSwgb2Zmc2V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29weUNvbXBhcmlzb25Db25zdGFudHMoY29uc3RydWN0b3IpO1xuICAgIH1cblxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgICAvLyBVcGRhdGVzIGNvbW1vbkFuY2VzdG9yQ29udGFpbmVyIGFuZCBjb2xsYXBzZWQgYWZ0ZXIgYm91bmRhcnkgY2hhbmdlXG4gICAgZnVuY3Rpb24gdXBkYXRlQ29sbGFwc2VkQW5kQ29tbW9uQW5jZXN0b3IocmFuZ2UpIHtcbiAgICAgICAgcmFuZ2UuY29sbGFwc2VkID0gKHJhbmdlLnN0YXJ0Q29udGFpbmVyID09PSByYW5nZS5lbmRDb250YWluZXIgJiYgcmFuZ2Uuc3RhcnRPZmZzZXQgPT09IHJhbmdlLmVuZE9mZnNldCk7XG4gICAgICAgIHJhbmdlLmNvbW1vbkFuY2VzdG9yQ29udGFpbmVyID0gcmFuZ2UuY29sbGFwc2VkID9cbiAgICAgICAgICAgIHJhbmdlLnN0YXJ0Q29udGFpbmVyIDogZG9tLmdldENvbW1vbkFuY2VzdG9yKHJhbmdlLnN0YXJ0Q29udGFpbmVyLCByYW5nZS5lbmRDb250YWluZXIpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZUJvdW5kYXJpZXMocmFuZ2UsIHN0YXJ0Q29udGFpbmVyLCBzdGFydE9mZnNldCwgZW5kQ29udGFpbmVyLCBlbmRPZmZzZXQpIHtcbiAgICAgICAgdmFyIHN0YXJ0TW92ZWQgPSAocmFuZ2Uuc3RhcnRDb250YWluZXIgIT09IHN0YXJ0Q29udGFpbmVyIHx8IHJhbmdlLnN0YXJ0T2Zmc2V0ICE9PSBzdGFydE9mZnNldCk7XG4gICAgICAgIHZhciBlbmRNb3ZlZCA9IChyYW5nZS5lbmRDb250YWluZXIgIT09IGVuZENvbnRhaW5lciB8fCByYW5nZS5lbmRPZmZzZXQgIT09IGVuZE9mZnNldCk7XG5cbiAgICAgICAgcmFuZ2Uuc3RhcnRDb250YWluZXIgPSBzdGFydENvbnRhaW5lcjtcbiAgICAgICAgcmFuZ2Uuc3RhcnRPZmZzZXQgPSBzdGFydE9mZnNldDtcbiAgICAgICAgcmFuZ2UuZW5kQ29udGFpbmVyID0gZW5kQ29udGFpbmVyO1xuICAgICAgICByYW5nZS5lbmRPZmZzZXQgPSBlbmRPZmZzZXQ7XG5cbiAgICAgICAgdXBkYXRlQ29sbGFwc2VkQW5kQ29tbW9uQW5jZXN0b3IocmFuZ2UpO1xuICAgICAgICBkaXNwYXRjaEV2ZW50KHJhbmdlLCBcImJvdW5kYXJ5Y2hhbmdlXCIsIHtzdGFydE1vdmVkOiBzdGFydE1vdmVkLCBlbmRNb3ZlZDogZW5kTW92ZWR9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBkZXRhY2gocmFuZ2UpIHtcbiAgICAgICAgYXNzZXJ0Tm90RGV0YWNoZWQocmFuZ2UpO1xuICAgICAgICByYW5nZS5zdGFydENvbnRhaW5lciA9IHJhbmdlLnN0YXJ0T2Zmc2V0ID0gcmFuZ2UuZW5kQ29udGFpbmVyID0gcmFuZ2UuZW5kT2Zmc2V0ID0gbnVsbDtcbiAgICAgICAgcmFuZ2UuY29sbGFwc2VkID0gcmFuZ2UuY29tbW9uQW5jZXN0b3JDb250YWluZXIgPSBudWxsO1xuICAgICAgICBkaXNwYXRjaEV2ZW50KHJhbmdlLCBcImRldGFjaFwiLCBudWxsKTtcbiAgICAgICAgcmFuZ2UuX2xpc3RlbmVycyA9IG51bGw7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgZnVuY3Rpb24gUmFuZ2UoZG9jKSB7XG4gICAgICAgIHRoaXMuc3RhcnRDb250YWluZXIgPSBkb2M7XG4gICAgICAgIHRoaXMuc3RhcnRPZmZzZXQgPSAwO1xuICAgICAgICB0aGlzLmVuZENvbnRhaW5lciA9IGRvYztcbiAgICAgICAgdGhpcy5lbmRPZmZzZXQgPSAwO1xuICAgICAgICB0aGlzLl9saXN0ZW5lcnMgPSB7XG4gICAgICAgICAgICBib3VuZGFyeWNoYW5nZTogW10sXG4gICAgICAgICAgICBkZXRhY2g6IFtdXG4gICAgICAgIH07XG4gICAgICAgIHVwZGF0ZUNvbGxhcHNlZEFuZENvbW1vbkFuY2VzdG9yKHRoaXMpO1xuICAgIH1cblxuICAgIGNyZWF0ZVByb3RvdHlwZVJhbmdlKFJhbmdlLCB1cGRhdGVCb3VuZGFyaWVzLCBkZXRhY2gpO1xuXG4gICAgYXBpLnJhbmdlUHJvdG90eXBlID0gUmFuZ2VQcm90b3R5cGUucHJvdG90eXBlO1xuXG4gICAgUmFuZ2UucmFuZ2VQcm9wZXJ0aWVzID0gcmFuZ2VQcm9wZXJ0aWVzO1xuICAgIFJhbmdlLlJhbmdlSXRlcmF0b3IgPSBSYW5nZUl0ZXJhdG9yO1xuICAgIFJhbmdlLmNvcHlDb21wYXJpc29uQ29uc3RhbnRzID0gY29weUNvbXBhcmlzb25Db25zdGFudHM7XG4gICAgUmFuZ2UuY3JlYXRlUHJvdG90eXBlUmFuZ2UgPSBjcmVhdGVQcm90b3R5cGVSYW5nZTtcbiAgICBSYW5nZS5pbnNwZWN0ID0gaW5zcGVjdDtcbiAgICBSYW5nZS5nZXRSYW5nZURvY3VtZW50ID0gZ2V0UmFuZ2VEb2N1bWVudDtcbiAgICBSYW5nZS5yYW5nZXNFcXVhbCA9IGZ1bmN0aW9uKHIxLCByMikge1xuICAgICAgICByZXR1cm4gcjEuc3RhcnRDb250YWluZXIgPT09IHIyLnN0YXJ0Q29udGFpbmVyICYmXG4gICAgICAgICAgICAgICByMS5zdGFydE9mZnNldCA9PT0gcjIuc3RhcnRPZmZzZXQgJiZcbiAgICAgICAgICAgICAgIHIxLmVuZENvbnRhaW5lciA9PT0gcjIuZW5kQ29udGFpbmVyICYmXG4gICAgICAgICAgICAgICByMS5lbmRPZmZzZXQgPT09IHIyLmVuZE9mZnNldDtcbiAgICB9O1xuXG4gICAgYXBpLkRvbVJhbmdlID0gUmFuZ2U7XG4gICAgYXBpLlJhbmdlRXhjZXB0aW9uID0gUmFuZ2VFeGNlcHRpb247XG59KTtyYW5neS5jcmVhdGVNb2R1bGUoXCJXcmFwcGVkUmFuZ2VcIiwgZnVuY3Rpb24oYXBpLCBtb2R1bGUpIHtcbiAgICBhcGkucmVxdWlyZU1vZHVsZXMoIFtcIkRvbVV0aWxcIiwgXCJEb21SYW5nZVwiXSApO1xuXG4gICAgLyoqXG4gICAgICogQGNvbnN0cnVjdG9yXG4gICAgICovXG4gICAgdmFyIFdyYXBwZWRSYW5nZTtcbiAgICB2YXIgZG9tID0gYXBpLmRvbTtcbiAgICB2YXIgRG9tUG9zaXRpb24gPSBkb20uRG9tUG9zaXRpb247XG4gICAgdmFyIERvbVJhbmdlID0gYXBpLkRvbVJhbmdlO1xuXG5cblxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgICAvKlxuICAgIFRoaXMgaXMgYSB3b3JrYXJvdW5kIGZvciBhIGJ1ZyB3aGVyZSBJRSByZXR1cm5zIHRoZSB3cm9uZyBjb250YWluZXIgZWxlbWVudCBmcm9tIHRoZSBUZXh0UmFuZ2UncyBwYXJlbnRFbGVtZW50KClcbiAgICBtZXRob2QuIEZvciBleGFtcGxlLCBpbiB0aGUgZm9sbG93aW5nICh3aGVyZSBwaXBlcyBkZW5vdGUgdGhlIHNlbGVjdGlvbiBib3VuZGFyaWVzKTpcblxuICAgIDx1bCBpZD1cInVsXCI+PGxpIGlkPVwiYVwiPnwgYSA8L2xpPjxsaSBpZD1cImJcIj4gYiB8PC9saT48L3VsPlxuXG4gICAgdmFyIHJhbmdlID0gZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlKCk7XG4gICAgYWxlcnQocmFuZ2UucGFyZW50RWxlbWVudCgpLmlkKTsgLy8gU2hvdWxkIGFsZXJ0IFwidWxcIiBidXQgYWxlcnRzIFwiYlwiXG5cbiAgICBUaGlzIG1ldGhvZCByZXR1cm5zIHRoZSBjb21tb24gYW5jZXN0b3Igbm9kZSBvZiB0aGUgZm9sbG93aW5nOlxuICAgIC0gdGhlIHBhcmVudEVsZW1lbnQoKSBvZiB0aGUgdGV4dFJhbmdlXG4gICAgLSB0aGUgcGFyZW50RWxlbWVudCgpIG9mIHRoZSB0ZXh0UmFuZ2UgYWZ0ZXIgY2FsbGluZyBjb2xsYXBzZSh0cnVlKVxuICAgIC0gdGhlIHBhcmVudEVsZW1lbnQoKSBvZiB0aGUgdGV4dFJhbmdlIGFmdGVyIGNhbGxpbmcgY29sbGFwc2UoZmFsc2UpXG4gICAgICovXG4gICAgZnVuY3Rpb24gZ2V0VGV4dFJhbmdlQ29udGFpbmVyRWxlbWVudCh0ZXh0UmFuZ2UpIHtcbiAgICAgICAgdmFyIHBhcmVudEVsID0gdGV4dFJhbmdlLnBhcmVudEVsZW1lbnQoKTtcblxuICAgICAgICB2YXIgcmFuZ2UgPSB0ZXh0UmFuZ2UuZHVwbGljYXRlKCk7XG4gICAgICAgIHJhbmdlLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICB2YXIgc3RhcnRFbCA9IHJhbmdlLnBhcmVudEVsZW1lbnQoKTtcbiAgICAgICAgcmFuZ2UgPSB0ZXh0UmFuZ2UuZHVwbGljYXRlKCk7XG4gICAgICAgIHJhbmdlLmNvbGxhcHNlKGZhbHNlKTtcbiAgICAgICAgdmFyIGVuZEVsID0gcmFuZ2UucGFyZW50RWxlbWVudCgpO1xuICAgICAgICB2YXIgc3RhcnRFbmRDb250YWluZXIgPSAoc3RhcnRFbCA9PSBlbmRFbCkgPyBzdGFydEVsIDogZG9tLmdldENvbW1vbkFuY2VzdG9yKHN0YXJ0RWwsIGVuZEVsKTtcblxuICAgICAgICByZXR1cm4gc3RhcnRFbmRDb250YWluZXIgPT0gcGFyZW50RWwgPyBzdGFydEVuZENvbnRhaW5lciA6IGRvbS5nZXRDb21tb25BbmNlc3RvcihwYXJlbnRFbCwgc3RhcnRFbmRDb250YWluZXIpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHRleHRSYW5nZUlzQ29sbGFwc2VkKHRleHRSYW5nZSkge1xuICAgICAgICByZXR1cm4gdGV4dFJhbmdlLmNvbXBhcmVFbmRQb2ludHMoXCJTdGFydFRvRW5kXCIsIHRleHRSYW5nZSkgPT0gMDtcbiAgICB9XG5cbiAgICAvLyBHZXRzIHRoZSBib3VuZGFyeSBvZiBhIFRleHRSYW5nZSBleHByZXNzZWQgYXMgYSBub2RlIGFuZCBhbiBvZmZzZXQgd2l0aGluIHRoYXQgbm9kZS4gVGhpcyBmdW5jdGlvbiBzdGFydGVkIG91dCBhc1xuICAgIC8vIGFuIGltcHJvdmVkIHZlcnNpb24gb2YgY29kZSBmb3VuZCBpbiBUaW0gQ2FtZXJvbiBSeWFuJ3MgSUVSYW5nZSAoaHR0cDovL2NvZGUuZ29vZ2xlLmNvbS9wL2llcmFuZ2UvKSBidXQgaGFzXG4gICAgLy8gZ3Jvd24sIGZpeGluZyBwcm9ibGVtcyB3aXRoIGxpbmUgYnJlYWtzIGluIHByZWZvcm1hdHRlZCB0ZXh0LCBhZGRpbmcgd29ya2Fyb3VuZCBmb3IgSUUgVGV4dFJhbmdlIGJ1Z3MsIGhhbmRsaW5nXG4gICAgLy8gZm9yIGlucHV0cyBhbmQgaW1hZ2VzLCBwbHVzIG9wdGltaXphdGlvbnMuXG4gICAgZnVuY3Rpb24gZ2V0VGV4dFJhbmdlQm91bmRhcnlQb3NpdGlvbih0ZXh0UmFuZ2UsIHdob2xlUmFuZ2VDb250YWluZXJFbGVtZW50LCBpc1N0YXJ0LCBpc0NvbGxhcHNlZCkge1xuICAgICAgICB2YXIgd29ya2luZ1JhbmdlID0gdGV4dFJhbmdlLmR1cGxpY2F0ZSgpO1xuXG4gICAgICAgIHdvcmtpbmdSYW5nZS5jb2xsYXBzZShpc1N0YXJ0KTtcbiAgICAgICAgdmFyIGNvbnRhaW5lckVsZW1lbnQgPSB3b3JraW5nUmFuZ2UucGFyZW50RWxlbWVudCgpO1xuXG4gICAgICAgIC8vIFNvbWV0aW1lcyBjb2xsYXBzaW5nIGEgVGV4dFJhbmdlIHRoYXQncyBhdCB0aGUgc3RhcnQgb2YgYSB0ZXh0IG5vZGUgY2FuIG1vdmUgaXQgaW50byB0aGUgcHJldmlvdXMgbm9kZSwgc29cbiAgICAgICAgLy8gY2hlY2sgZm9yIHRoYXRcbiAgICAgICAgLy8gVE9ETzogRmluZCBvdXQgd2hlbi4gV29ya2Fyb3VuZCBmb3Igd2hvbGVSYW5nZUNvbnRhaW5lckVsZW1lbnQgbWF5IGJyZWFrIHRoaXNcbiAgICAgICAgaWYgKCFkb20uaXNBbmNlc3Rvck9mKHdob2xlUmFuZ2VDb250YWluZXJFbGVtZW50LCBjb250YWluZXJFbGVtZW50LCB0cnVlKSkge1xuICAgICAgICAgICAgY29udGFpbmVyRWxlbWVudCA9IHdob2xlUmFuZ2VDb250YWluZXJFbGVtZW50O1xuXG4gICAgICAgIH1cblxuXG5cbiAgICAgICAgLy8gRGVhbCB3aXRoIG5vZGVzIHRoYXQgY2Fubm90IFwiY29udGFpbiByaWNoIEhUTUwgbWFya3VwXCIuIEluIHByYWN0aWNlLCB0aGlzIG1lYW5zIGZvcm0gaW5wdXRzLCBpbWFnZXMgYW5kXG4gICAgICAgIC8vIHNpbWlsYXIuIFNlZSBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvYWE3MDM5NTAlMjhWUy44NSUyOS5hc3B4XG4gICAgICAgIGlmICghY29udGFpbmVyRWxlbWVudC5jYW5IYXZlSFRNTCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBEb21Qb3NpdGlvbihjb250YWluZXJFbGVtZW50LnBhcmVudE5vZGUsIGRvbS5nZXROb2RlSW5kZXgoY29udGFpbmVyRWxlbWVudCkpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHdvcmtpbmdOb2RlID0gZG9tLmdldERvY3VtZW50KGNvbnRhaW5lckVsZW1lbnQpLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgICAgICB2YXIgY29tcGFyaXNvbiwgd29ya2luZ0NvbXBhcmlzb25UeXBlID0gaXNTdGFydCA/IFwiU3RhcnRUb1N0YXJ0XCIgOiBcIlN0YXJ0VG9FbmRcIjtcbiAgICAgICAgdmFyIHByZXZpb3VzTm9kZSwgbmV4dE5vZGUsIGJvdW5kYXJ5UG9zaXRpb24sIGJvdW5kYXJ5Tm9kZTtcblxuICAgICAgICAvLyBNb3ZlIHRoZSB3b3JraW5nIHJhbmdlIHRocm91Z2ggdGhlIGNvbnRhaW5lcidzIGNoaWxkcmVuLCBzdGFydGluZyBhdCB0aGUgZW5kIGFuZCB3b3JraW5nIGJhY2t3YXJkcywgdW50aWwgdGhlXG4gICAgICAgIC8vIHdvcmtpbmcgcmFuZ2UgcmVhY2hlcyBvciBnb2VzIHBhc3QgdGhlIGJvdW5kYXJ5IHdlJ3JlIGludGVyZXN0ZWQgaW5cbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgY29udGFpbmVyRWxlbWVudC5pbnNlcnRCZWZvcmUod29ya2luZ05vZGUsIHdvcmtpbmdOb2RlLnByZXZpb3VzU2libGluZyk7XG4gICAgICAgICAgICB3b3JraW5nUmFuZ2UubW92ZVRvRWxlbWVudFRleHQod29ya2luZ05vZGUpO1xuICAgICAgICB9IHdoaWxlICggKGNvbXBhcmlzb24gPSB3b3JraW5nUmFuZ2UuY29tcGFyZUVuZFBvaW50cyh3b3JraW5nQ29tcGFyaXNvblR5cGUsIHRleHRSYW5nZSkpID4gMCAmJlxuICAgICAgICAgICAgICAgIHdvcmtpbmdOb2RlLnByZXZpb3VzU2libGluZyk7XG5cbiAgICAgICAgLy8gV2UndmUgbm93IHJlYWNoZWQgb3IgZ29uZSBwYXN0IHRoZSBib3VuZGFyeSBvZiB0aGUgdGV4dCByYW5nZSB3ZSdyZSBpbnRlcmVzdGVkIGluXG4gICAgICAgIC8vIHNvIGhhdmUgaWRlbnRpZmllZCB0aGUgbm9kZSB3ZSB3YW50XG4gICAgICAgIGJvdW5kYXJ5Tm9kZSA9IHdvcmtpbmdOb2RlLm5leHRTaWJsaW5nO1xuXG4gICAgICAgIGlmIChjb21wYXJpc29uID09IC0xICYmIGJvdW5kYXJ5Tm9kZSAmJiBkb20uaXNDaGFyYWN0ZXJEYXRhTm9kZShib3VuZGFyeU5vZGUpKSB7XG4gICAgICAgICAgICAvLyBUaGlzIGlzIGEgY2hhcmFjdGVyIGRhdGEgbm9kZSAodGV4dCwgY29tbWVudCwgY2RhdGEpLiBUaGUgd29ya2luZyByYW5nZSBpcyBjb2xsYXBzZWQgYXQgdGhlIHN0YXJ0IG9mIHRoZVxuICAgICAgICAgICAgLy8gbm9kZSBjb250YWluaW5nIHRoZSB0ZXh0IHJhbmdlJ3MgYm91bmRhcnksIHNvIHdlIG1vdmUgdGhlIGVuZCBvZiB0aGUgd29ya2luZyByYW5nZSB0byB0aGUgYm91bmRhcnkgcG9pbnRcbiAgICAgICAgICAgIC8vIGFuZCBtZWFzdXJlIHRoZSBsZW5ndGggb2YgaXRzIHRleHQgdG8gZ2V0IHRoZSBib3VuZGFyeSdzIG9mZnNldCB3aXRoaW4gdGhlIG5vZGUuXG4gICAgICAgICAgICB3b3JraW5nUmFuZ2Uuc2V0RW5kUG9pbnQoaXNTdGFydCA/IFwiRW5kVG9TdGFydFwiIDogXCJFbmRUb0VuZFwiLCB0ZXh0UmFuZ2UpO1xuXG5cbiAgICAgICAgICAgIHZhciBvZmZzZXQ7XG5cbiAgICAgICAgICAgIGlmICgvW1xcclxcbl0vLnRlc3QoYm91bmRhcnlOb2RlLmRhdGEpKSB7XG4gICAgICAgICAgICAgICAgLypcbiAgICAgICAgICAgICAgICBGb3IgdGhlIHBhcnRpY3VsYXIgY2FzZSBvZiBhIGJvdW5kYXJ5IHdpdGhpbiBhIHRleHQgbm9kZSBjb250YWluaW5nIGxpbmUgYnJlYWtzICh3aXRoaW4gYSA8cHJlPiBlbGVtZW50LFxuICAgICAgICAgICAgICAgIGZvciBleGFtcGxlKSwgd2UgbmVlZCBhIHNsaWdodGx5IGNvbXBsaWNhdGVkIGFwcHJvYWNoIHRvIGdldCB0aGUgYm91bmRhcnkncyBvZmZzZXQgaW4gSUUuIFRoZSBmYWN0czpcblxuICAgICAgICAgICAgICAgIC0gRWFjaCBsaW5lIGJyZWFrIGlzIHJlcHJlc2VudGVkIGFzIFxcciBpbiB0aGUgdGV4dCBub2RlJ3MgZGF0YS9ub2RlVmFsdWUgcHJvcGVydGllc1xuICAgICAgICAgICAgICAgIC0gRWFjaCBsaW5lIGJyZWFrIGlzIHJlcHJlc2VudGVkIGFzIFxcclxcbiBpbiB0aGUgVGV4dFJhbmdlJ3MgJ3RleHQnIHByb3BlcnR5XG4gICAgICAgICAgICAgICAgLSBUaGUgJ3RleHQnIHByb3BlcnR5IG9mIHRoZSBUZXh0UmFuZ2UgZG9lcyBub3QgY29udGFpbiB0cmFpbGluZyBsaW5lIGJyZWFrc1xuXG4gICAgICAgICAgICAgICAgVG8gZ2V0IHJvdW5kIHRoZSBwcm9ibGVtIHByZXNlbnRlZCBieSB0aGUgZmluYWwgZmFjdCBhYm92ZSwgd2UgY2FuIHVzZSB0aGUgZmFjdCB0aGF0IFRleHRSYW5nZSdzXG4gICAgICAgICAgICAgICAgbW92ZVN0YXJ0KCkgYW5kIG1vdmVFbmQoKSBtZXRob2RzIHJldHVybiB0aGUgYWN0dWFsIG51bWJlciBvZiBjaGFyYWN0ZXJzIG1vdmVkLCB3aGljaCBpcyBub3QgbmVjZXNzYXJpbHlcbiAgICAgICAgICAgICAgICB0aGUgc2FtZSBhcyB0aGUgbnVtYmVyIG9mIGNoYXJhY3RlcnMgaXQgd2FzIGluc3RydWN0ZWQgdG8gbW92ZS4gVGhlIHNpbXBsZXN0IGFwcHJvYWNoIGlzIHRvIHVzZSB0aGlzIHRvXG4gICAgICAgICAgICAgICAgc3RvcmUgdGhlIGNoYXJhY3RlcnMgbW92ZWQgd2hlbiBtb3ZpbmcgYm90aCB0aGUgc3RhcnQgYW5kIGVuZCBvZiB0aGUgcmFuZ2UgdG8gdGhlIHN0YXJ0IG9mIHRoZSBkb2N1bWVudFxuICAgICAgICAgICAgICAgIGJvZHkgYW5kIHN1YnRyYWN0aW5nIHRoZSBzdGFydCBvZmZzZXQgZnJvbSB0aGUgZW5kIG9mZnNldCAodGhlIFwibW92ZS1uZWdhdGl2ZS1nYXppbGxpb25cIiBtZXRob2QpLlxuICAgICAgICAgICAgICAgIEhvd2V2ZXIsIHRoaXMgaXMgZXh0cmVtZWx5IHNsb3cgd2hlbiB0aGUgZG9jdW1lbnQgaXMgbGFyZ2UgYW5kIHRoZSByYW5nZSBpcyBuZWFyIHRoZSBlbmQgb2YgaXQuIENsZWFybHlcbiAgICAgICAgICAgICAgICBkb2luZyB0aGUgbWlycm9yIGltYWdlIChpLmUuIG1vdmluZyB0aGUgcmFuZ2UgYm91bmRhcmllcyB0byB0aGUgZW5kIG9mIHRoZSBkb2N1bWVudCkgaGFzIHRoZSBzYW1lXG4gICAgICAgICAgICAgICAgcHJvYmxlbS5cblxuICAgICAgICAgICAgICAgIEFub3RoZXIgYXBwcm9hY2ggdGhhdCB3b3JrcyBpcyB0byB1c2UgbW92ZVN0YXJ0KCkgdG8gbW92ZSB0aGUgc3RhcnQgYm91bmRhcnkgb2YgdGhlIHJhbmdlIHVwIHRvIHRoZSBlbmRcbiAgICAgICAgICAgICAgICBib3VuZGFyeSBvbmUgY2hhcmFjdGVyIGF0IGEgdGltZSBhbmQgaW5jcmVtZW50aW5nIGEgY291bnRlciB3aXRoIHRoZSB2YWx1ZSByZXR1cm5lZCBieSB0aGUgbW92ZVN0YXJ0KClcbiAgICAgICAgICAgICAgICBjYWxsLiBIb3dldmVyLCB0aGUgY2hlY2sgZm9yIHdoZXRoZXIgdGhlIHN0YXJ0IGJvdW5kYXJ5IGhhcyByZWFjaGVkIHRoZSBlbmQgYm91bmRhcnkgaXMgZXhwZW5zaXZlLCBzb1xuICAgICAgICAgICAgICAgIHRoaXMgbWV0aG9kIGlzIHNsb3cgKGFsdGhvdWdoIHVubGlrZSBcIm1vdmUtbmVnYXRpdmUtZ2F6aWxsaW9uXCIgaXMgbGFyZ2VseSB1bmFmZmVjdGVkIGJ5IHRoZSBsb2NhdGlvbiBvZlxuICAgICAgICAgICAgICAgIHRoZSByYW5nZSB3aXRoaW4gdGhlIGRvY3VtZW50KS5cblxuICAgICAgICAgICAgICAgIFRoZSBtZXRob2QgYmVsb3cgaXMgYSBoeWJyaWQgb2YgdGhlIHR3byBtZXRob2RzIGFib3ZlLiBJdCB1c2VzIHRoZSBmYWN0IHRoYXQgYSBzdHJpbmcgY29udGFpbmluZyB0aGVcbiAgICAgICAgICAgICAgICBUZXh0UmFuZ2UncyAndGV4dCcgcHJvcGVydHkgd2l0aCBlYWNoIFxcclxcbiBjb252ZXJ0ZWQgdG8gYSBzaW5nbGUgXFxyIGNoYXJhY3RlciBjYW5ub3QgYmUgbG9uZ2VyIHRoYW4gdGhlXG4gICAgICAgICAgICAgICAgdGV4dCBvZiB0aGUgVGV4dFJhbmdlLCBzbyB0aGUgc3RhcnQgb2YgdGhlIHJhbmdlIGlzIG1vdmVkIHRoYXQgbGVuZ3RoIGluaXRpYWxseSBhbmQgdGhlbiBhIGNoYXJhY3RlciBhdFxuICAgICAgICAgICAgICAgIGEgdGltZSB0byBtYWtlIHVwIGZvciBhbnkgdHJhaWxpbmcgbGluZSBicmVha3Mgbm90IGNvbnRhaW5lZCBpbiB0aGUgJ3RleHQnIHByb3BlcnR5LiBUaGlzIGhhcyBnb29kXG4gICAgICAgICAgICAgICAgcGVyZm9ybWFuY2UgaW4gbW9zdCBzaXR1YXRpb25zIGNvbXBhcmVkIHRvIHRoZSBwcmV2aW91cyB0d28gbWV0aG9kcy5cbiAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgIHZhciB0ZW1wUmFuZ2UgPSB3b3JraW5nUmFuZ2UuZHVwbGljYXRlKCk7XG4gICAgICAgICAgICAgICAgdmFyIHJhbmdlTGVuZ3RoID0gdGVtcFJhbmdlLnRleHQucmVwbGFjZSgvXFxyXFxuL2csIFwiXFxyXCIpLmxlbmd0aDtcblxuICAgICAgICAgICAgICAgIG9mZnNldCA9IHRlbXBSYW5nZS5tb3ZlU3RhcnQoXCJjaGFyYWN0ZXJcIiwgcmFuZ2VMZW5ndGgpO1xuICAgICAgICAgICAgICAgIHdoaWxlICggKGNvbXBhcmlzb24gPSB0ZW1wUmFuZ2UuY29tcGFyZUVuZFBvaW50cyhcIlN0YXJ0VG9FbmRcIiwgdGVtcFJhbmdlKSkgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0Kys7XG4gICAgICAgICAgICAgICAgICAgIHRlbXBSYW5nZS5tb3ZlU3RhcnQoXCJjaGFyYWN0ZXJcIiwgMSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBvZmZzZXQgPSB3b3JraW5nUmFuZ2UudGV4dC5sZW5ndGg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBib3VuZGFyeVBvc2l0aW9uID0gbmV3IERvbVBvc2l0aW9uKGJvdW5kYXJ5Tm9kZSwgb2Zmc2V0KTtcbiAgICAgICAgfSBlbHNlIHtcblxuXG4gICAgICAgICAgICAvLyBJZiB0aGUgYm91bmRhcnkgaW1tZWRpYXRlbHkgZm9sbG93cyBhIGNoYXJhY3RlciBkYXRhIG5vZGUgYW5kIHRoaXMgaXMgdGhlIGVuZCBib3VuZGFyeSwgd2Ugc2hvdWxkIGZhdm91clxuICAgICAgICAgICAgLy8gYSBwb3NpdGlvbiB3aXRoaW4gdGhhdCwgYW5kIGxpa2V3aXNlIGZvciBhIHN0YXJ0IGJvdW5kYXJ5IHByZWNlZGluZyBhIGNoYXJhY3RlciBkYXRhIG5vZGVcbiAgICAgICAgICAgIHByZXZpb3VzTm9kZSA9IChpc0NvbGxhcHNlZCB8fCAhaXNTdGFydCkgJiYgd29ya2luZ05vZGUucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICAgICAgbmV4dE5vZGUgPSAoaXNDb2xsYXBzZWQgfHwgaXNTdGFydCkgJiYgd29ya2luZ05vZGUubmV4dFNpYmxpbmc7XG5cblxuXG4gICAgICAgICAgICBpZiAobmV4dE5vZGUgJiYgZG9tLmlzQ2hhcmFjdGVyRGF0YU5vZGUobmV4dE5vZGUpKSB7XG4gICAgICAgICAgICAgICAgYm91bmRhcnlQb3NpdGlvbiA9IG5ldyBEb21Qb3NpdGlvbihuZXh0Tm9kZSwgMCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHByZXZpb3VzTm9kZSAmJiBkb20uaXNDaGFyYWN0ZXJEYXRhTm9kZShwcmV2aW91c05vZGUpKSB7XG4gICAgICAgICAgICAgICAgYm91bmRhcnlQb3NpdGlvbiA9IG5ldyBEb21Qb3NpdGlvbihwcmV2aW91c05vZGUsIHByZXZpb3VzTm9kZS5sZW5ndGgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBib3VuZGFyeVBvc2l0aW9uID0gbmV3IERvbVBvc2l0aW9uKGNvbnRhaW5lckVsZW1lbnQsIGRvbS5nZXROb2RlSW5kZXgod29ya2luZ05vZGUpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENsZWFuIHVwXG4gICAgICAgIHdvcmtpbmdOb2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQod29ya2luZ05vZGUpO1xuXG4gICAgICAgIHJldHVybiBib3VuZGFyeVBvc2l0aW9uO1xuICAgIH1cblxuICAgIC8vIFJldHVybnMgYSBUZXh0UmFuZ2UgcmVwcmVzZW50aW5nIHRoZSBib3VuZGFyeSBvZiBhIFRleHRSYW5nZSBleHByZXNzZWQgYXMgYSBub2RlIGFuZCBhbiBvZmZzZXQgd2l0aGluIHRoYXQgbm9kZS5cbiAgICAvLyBUaGlzIGZ1bmN0aW9uIHN0YXJ0ZWQgb3V0IGFzIGFuIG9wdGltaXplZCB2ZXJzaW9uIG9mIGNvZGUgZm91bmQgaW4gVGltIENhbWVyb24gUnlhbidzIElFUmFuZ2VcbiAgICAvLyAoaHR0cDovL2NvZGUuZ29vZ2xlLmNvbS9wL2llcmFuZ2UvKVxuICAgIGZ1bmN0aW9uIGNyZWF0ZUJvdW5kYXJ5VGV4dFJhbmdlKGJvdW5kYXJ5UG9zaXRpb24sIGlzU3RhcnQpIHtcbiAgICAgICAgdmFyIGJvdW5kYXJ5Tm9kZSwgYm91bmRhcnlQYXJlbnQsIGJvdW5kYXJ5T2Zmc2V0ID0gYm91bmRhcnlQb3NpdGlvbi5vZmZzZXQ7XG4gICAgICAgIHZhciBkb2MgPSBkb20uZ2V0RG9jdW1lbnQoYm91bmRhcnlQb3NpdGlvbi5ub2RlKTtcbiAgICAgICAgdmFyIHdvcmtpbmdOb2RlLCBjaGlsZE5vZGVzLCB3b3JraW5nUmFuZ2UgPSBkb2MuYm9keS5jcmVhdGVUZXh0UmFuZ2UoKTtcbiAgICAgICAgdmFyIG5vZGVJc0RhdGFOb2RlID0gZG9tLmlzQ2hhcmFjdGVyRGF0YU5vZGUoYm91bmRhcnlQb3NpdGlvbi5ub2RlKTtcblxuICAgICAgICBpZiAobm9kZUlzRGF0YU5vZGUpIHtcbiAgICAgICAgICAgIGJvdW5kYXJ5Tm9kZSA9IGJvdW5kYXJ5UG9zaXRpb24ubm9kZTtcbiAgICAgICAgICAgIGJvdW5kYXJ5UGFyZW50ID0gYm91bmRhcnlOb2RlLnBhcmVudE5vZGU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjaGlsZE5vZGVzID0gYm91bmRhcnlQb3NpdGlvbi5ub2RlLmNoaWxkTm9kZXM7XG4gICAgICAgICAgICBib3VuZGFyeU5vZGUgPSAoYm91bmRhcnlPZmZzZXQgPCBjaGlsZE5vZGVzLmxlbmd0aCkgPyBjaGlsZE5vZGVzW2JvdW5kYXJ5T2Zmc2V0XSA6IG51bGw7XG4gICAgICAgICAgICBib3VuZGFyeVBhcmVudCA9IGJvdW5kYXJ5UG9zaXRpb24ubm9kZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFBvc2l0aW9uIHRoZSByYW5nZSBpbW1lZGlhdGVseSBiZWZvcmUgdGhlIG5vZGUgY29udGFpbmluZyB0aGUgYm91bmRhcnlcbiAgICAgICAgd29ya2luZ05vZGUgPSBkb2MuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG5cbiAgICAgICAgLy8gTWFraW5nIHRoZSB3b3JraW5nIGVsZW1lbnQgbm9uLWVtcHR5IGVsZW1lbnQgcGVyc3VhZGVzIElFIHRvIGNvbnNpZGVyIHRoZSBUZXh0UmFuZ2UgYm91bmRhcnkgdG8gYmUgd2l0aGluIHRoZVxuICAgICAgICAvLyBlbGVtZW50IHJhdGhlciB0aGFuIGltbWVkaWF0ZWx5IGJlZm9yZSBvciBhZnRlciBpdCwgd2hpY2ggaXMgd2hhdCB3ZSB3YW50XG4gICAgICAgIHdvcmtpbmdOb2RlLmlubmVySFRNTCA9IFwiJiNmZWZmO1wiO1xuXG4gICAgICAgIC8vIGluc2VydEJlZm9yZSBpcyBzdXBwb3NlZCB0byB3b3JrIGxpa2UgYXBwZW5kQ2hpbGQgaWYgdGhlIHNlY29uZCBwYXJhbWV0ZXIgaXMgbnVsbC4gSG93ZXZlciwgYSBidWcgcmVwb3J0XG4gICAgICAgIC8vIGZvciBJRVJhbmdlIHN1Z2dlc3RzIHRoYXQgaXQgY2FuIGNyYXNoIHRoZSBicm93c2VyOiBodHRwOi8vY29kZS5nb29nbGUuY29tL3AvaWVyYW5nZS9pc3N1ZXMvZGV0YWlsP2lkPTEyXG4gICAgICAgIGlmIChib3VuZGFyeU5vZGUpIHtcbiAgICAgICAgICAgIGJvdW5kYXJ5UGFyZW50Lmluc2VydEJlZm9yZSh3b3JraW5nTm9kZSwgYm91bmRhcnlOb2RlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJvdW5kYXJ5UGFyZW50LmFwcGVuZENoaWxkKHdvcmtpbmdOb2RlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHdvcmtpbmdSYW5nZS5tb3ZlVG9FbGVtZW50VGV4dCh3b3JraW5nTm9kZSk7XG4gICAgICAgIHdvcmtpbmdSYW5nZS5jb2xsYXBzZSghaXNTdGFydCk7XG5cbiAgICAgICAgLy8gQ2xlYW4gdXBcbiAgICAgICAgYm91bmRhcnlQYXJlbnQucmVtb3ZlQ2hpbGQod29ya2luZ05vZGUpO1xuXG4gICAgICAgIC8vIE1vdmUgdGhlIHdvcmtpbmcgcmFuZ2UgdG8gdGhlIHRleHQgb2Zmc2V0LCBpZiByZXF1aXJlZFxuICAgICAgICBpZiAobm9kZUlzRGF0YU5vZGUpIHtcbiAgICAgICAgICAgIHdvcmtpbmdSYW5nZVtpc1N0YXJ0ID8gXCJtb3ZlU3RhcnRcIiA6IFwibW92ZUVuZFwiXShcImNoYXJhY3RlclwiLCBib3VuZGFyeU9mZnNldCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gd29ya2luZ1JhbmdlO1xuICAgIH1cblxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgICBpZiAoYXBpLmZlYXR1cmVzLmltcGxlbWVudHNEb21SYW5nZSAmJiAoIWFwaS5mZWF0dXJlcy5pbXBsZW1lbnRzVGV4dFJhbmdlIHx8ICFhcGkuY29uZmlnLnByZWZlclRleHRSYW5nZSkpIHtcbiAgICAgICAgLy8gVGhpcyBpcyBhIHdyYXBwZXIgYXJvdW5kIHRoZSBicm93c2VyJ3MgbmF0aXZlIERPTSBSYW5nZS4gSXQgaGFzIHR3byBhaW1zOlxuICAgICAgICAvLyAtIFByb3ZpZGUgd29ya2Fyb3VuZHMgZm9yIHNwZWNpZmljIGJyb3dzZXIgYnVnc1xuICAgICAgICAvLyAtIHByb3ZpZGUgY29udmVuaWVudCBleHRlbnNpb25zLCB3aGljaCBhcmUgaW5oZXJpdGVkIGZyb20gUmFuZ3kncyBEb21SYW5nZVxuXG4gICAgICAgIChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciByYW5nZVByb3RvO1xuICAgICAgICAgICAgdmFyIHJhbmdlUHJvcGVydGllcyA9IERvbVJhbmdlLnJhbmdlUHJvcGVydGllcztcbiAgICAgICAgICAgIHZhciBjYW5TZXRSYW5nZVN0YXJ0QWZ0ZXJFbmQ7XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIHVwZGF0ZVJhbmdlUHJvcGVydGllcyhyYW5nZSkge1xuICAgICAgICAgICAgICAgIHZhciBpID0gcmFuZ2VQcm9wZXJ0aWVzLmxlbmd0aCwgcHJvcDtcbiAgICAgICAgICAgICAgICB3aGlsZSAoaS0tKSB7XG4gICAgICAgICAgICAgICAgICAgIHByb3AgPSByYW5nZVByb3BlcnRpZXNbaV07XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlW3Byb3BdID0gcmFuZ2UubmF0aXZlUmFuZ2VbcHJvcF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmdW5jdGlvbiB1cGRhdGVOYXRpdmVSYW5nZShyYW5nZSwgc3RhcnRDb250YWluZXIsIHN0YXJ0T2Zmc2V0LCBlbmRDb250YWluZXIsZW5kT2Zmc2V0KSB7XG4gICAgICAgICAgICAgICAgdmFyIHN0YXJ0TW92ZWQgPSAocmFuZ2Uuc3RhcnRDb250YWluZXIgIT09IHN0YXJ0Q29udGFpbmVyIHx8IHJhbmdlLnN0YXJ0T2Zmc2V0ICE9IHN0YXJ0T2Zmc2V0KTtcbiAgICAgICAgICAgICAgICB2YXIgZW5kTW92ZWQgPSAocmFuZ2UuZW5kQ29udGFpbmVyICE9PSBlbmRDb250YWluZXIgfHwgcmFuZ2UuZW5kT2Zmc2V0ICE9IGVuZE9mZnNldCk7XG5cbiAgICAgICAgICAgICAgICAvLyBBbHdheXMgc2V0IGJvdGggYm91bmRhcmllcyBmb3IgdGhlIGJlbmVmaXQgb2YgSUU5IChzZWUgaXNzdWUgMzUpXG4gICAgICAgICAgICAgICAgaWYgKHN0YXJ0TW92ZWQgfHwgZW5kTW92ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0RW5kKGVuZENvbnRhaW5lciwgZW5kT2Zmc2V0KTtcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQoc3RhcnRDb250YWluZXIsIHN0YXJ0T2Zmc2V0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGZ1bmN0aW9uIGRldGFjaChyYW5nZSkge1xuICAgICAgICAgICAgICAgIHJhbmdlLm5hdGl2ZVJhbmdlLmRldGFjaCgpO1xuICAgICAgICAgICAgICAgIHJhbmdlLmRldGFjaGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB2YXIgaSA9IHJhbmdlUHJvcGVydGllcy5sZW5ndGgsIHByb3A7XG4gICAgICAgICAgICAgICAgd2hpbGUgKGktLSkge1xuICAgICAgICAgICAgICAgICAgICBwcm9wID0gcmFuZ2VQcm9wZXJ0aWVzW2ldO1xuICAgICAgICAgICAgICAgICAgICByYW5nZVtwcm9wXSA9IG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgY3JlYXRlQmVmb3JlQWZ0ZXJOb2RlU2V0dGVyO1xuXG4gICAgICAgICAgICBXcmFwcGVkUmFuZ2UgPSBmdW5jdGlvbihyYW5nZSkge1xuICAgICAgICAgICAgICAgIGlmICghcmFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUmFuZ2UgbXVzdCBiZSBzcGVjaWZpZWRcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMubmF0aXZlUmFuZ2UgPSByYW5nZTtcbiAgICAgICAgICAgICAgICB1cGRhdGVSYW5nZVByb3BlcnRpZXModGhpcyk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICBEb21SYW5nZS5jcmVhdGVQcm90b3R5cGVSYW5nZShXcmFwcGVkUmFuZ2UsIHVwZGF0ZU5hdGl2ZVJhbmdlLCBkZXRhY2gpO1xuXG4gICAgICAgICAgICByYW5nZVByb3RvID0gV3JhcHBlZFJhbmdlLnByb3RvdHlwZTtcblxuICAgICAgICAgICAgcmFuZ2VQcm90by5zZWxlY3ROb2RlID0gZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgICAgICAgIHRoaXMubmF0aXZlUmFuZ2Uuc2VsZWN0Tm9kZShub2RlKTtcbiAgICAgICAgICAgICAgICB1cGRhdGVSYW5nZVByb3BlcnRpZXModGhpcyk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICByYW5nZVByb3RvLmRlbGV0ZUNvbnRlbnRzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5uYXRpdmVSYW5nZS5kZWxldGVDb250ZW50cygpO1xuICAgICAgICAgICAgICAgIHVwZGF0ZVJhbmdlUHJvcGVydGllcyh0aGlzKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHJhbmdlUHJvdG8uZXh0cmFjdENvbnRlbnRzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZyYWcgPSB0aGlzLm5hdGl2ZVJhbmdlLmV4dHJhY3RDb250ZW50cygpO1xuICAgICAgICAgICAgICAgIHVwZGF0ZVJhbmdlUHJvcGVydGllcyh0aGlzKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnJhZztcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIHJhbmdlUHJvdG8uY2xvbmVDb250ZW50cyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm5hdGl2ZVJhbmdlLmNsb25lQ29udGVudHMoKTtcbiAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIC8vIFRPRE86IFVudGlsIEkgY2FuIGZpbmQgYSB3YXkgdG8gcHJvZ3JhbW1hdGljYWxseSB0cmlnZ2VyIHRoZSBGaXJlZm94IGJ1ZyAoYXBwYXJlbnRseSBsb25nLXN0YW5kaW5nLCBzdGlsbFxuICAgICAgICAgICAgLy8gcHJlc2VudCBpbiAzLjYuOCkgdGhhdCB0aHJvd3MgXCJJbmRleCBvciBzaXplIGlzIG5lZ2F0aXZlIG9yIGdyZWF0ZXIgdGhhbiB0aGUgYWxsb3dlZCBhbW91bnRcIiBmb3JcbiAgICAgICAgICAgIC8vIGluc2VydE5vZGUgaW4gc29tZSBjaXJjdW1zdGFuY2VzLCBhbGwgYnJvd3NlcnMgd2lsbCBoYXZlIHRvIHVzZSB0aGUgUmFuZ3kncyBvd24gaW1wbGVtZW50YXRpb24gb2ZcbiAgICAgICAgICAgIC8vIGluc2VydE5vZGUsIHdoaWNoIHdvcmtzIGJ1dCBpcyBhbG1vc3QgY2VydGFpbmx5IHNsb3dlciB0aGFuIHRoZSBuYXRpdmUgaW1wbGVtZW50YXRpb24uXG4vKlxuICAgICAgICAgICAgcmFuZ2VQcm90by5pbnNlcnROb2RlID0gZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgICAgICAgIHRoaXMubmF0aXZlUmFuZ2UuaW5zZXJ0Tm9kZShub2RlKTtcbiAgICAgICAgICAgICAgICB1cGRhdGVSYW5nZVByb3BlcnRpZXModGhpcyk7XG4gICAgICAgICAgICB9O1xuKi9cblxuICAgICAgICAgICAgcmFuZ2VQcm90by5zdXJyb3VuZENvbnRlbnRzID0gZnVuY3Rpb24obm9kZSkge1xuICAgICAgICAgICAgICAgIHRoaXMubmF0aXZlUmFuZ2Uuc3Vycm91bmRDb250ZW50cyhub2RlKTtcbiAgICAgICAgICAgICAgICB1cGRhdGVSYW5nZVByb3BlcnRpZXModGhpcyk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICByYW5nZVByb3RvLmNvbGxhcHNlID0gZnVuY3Rpb24oaXNTdGFydCkge1xuICAgICAgICAgICAgICAgIHRoaXMubmF0aXZlUmFuZ2UuY29sbGFwc2UoaXNTdGFydCk7XG4gICAgICAgICAgICAgICAgdXBkYXRlUmFuZ2VQcm9wZXJ0aWVzKHRoaXMpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgcmFuZ2VQcm90by5jbG9uZVJhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBXcmFwcGVkUmFuZ2UodGhpcy5uYXRpdmVSYW5nZS5jbG9uZVJhbmdlKCkpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgcmFuZ2VQcm90by5yZWZyZXNoID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdXBkYXRlUmFuZ2VQcm9wZXJ0aWVzKHRoaXMpO1xuICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgcmFuZ2VQcm90by50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm5hdGl2ZVJhbmdlLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAvLyBDcmVhdGUgdGVzdCByYW5nZSBhbmQgbm9kZSBmb3IgZmVhdHVyZSBkZXRlY3Rpb25cblxuICAgICAgICAgICAgdmFyIHRlc3RUZXh0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwidGVzdFwiKTtcbiAgICAgICAgICAgIGRvbS5nZXRCb2R5KGRvY3VtZW50KS5hcHBlbmRDaGlsZCh0ZXN0VGV4dE5vZGUpO1xuICAgICAgICAgICAgdmFyIHJhbmdlID0gZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtcblxuICAgICAgICAgICAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgICAgICAgICAgIC8vIFRlc3QgZm9yIEZpcmVmb3ggMiBidWcgdGhhdCBwcmV2ZW50cyBtb3ZpbmcgdGhlIHN0YXJ0IG9mIGEgUmFuZ2UgdG8gYSBwb2ludCBhZnRlciBpdHMgY3VycmVudCBlbmQgYW5kXG4gICAgICAgICAgICAvLyBjb3JyZWN0IGZvciBpdFxuXG4gICAgICAgICAgICByYW5nZS5zZXRTdGFydCh0ZXN0VGV4dE5vZGUsIDApO1xuICAgICAgICAgICAgcmFuZ2Uuc2V0RW5kKHRlc3RUZXh0Tm9kZSwgMCk7XG5cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQodGVzdFRleHROb2RlLCAxKTtcbiAgICAgICAgICAgICAgICBjYW5TZXRSYW5nZVN0YXJ0QWZ0ZXJFbmQgPSB0cnVlO1xuXG4gICAgICAgICAgICAgICAgcmFuZ2VQcm90by5zZXRTdGFydCA9IGZ1bmN0aW9uKG5vZGUsIG9mZnNldCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdGl2ZVJhbmdlLnNldFN0YXJ0KG5vZGUsIG9mZnNldCk7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVJhbmdlUHJvcGVydGllcyh0aGlzKTtcbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgcmFuZ2VQcm90by5zZXRFbmQgPSBmdW5jdGlvbihub2RlLCBvZmZzZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXRpdmVSYW5nZS5zZXRFbmQobm9kZSwgb2Zmc2V0KTtcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlUmFuZ2VQcm9wZXJ0aWVzKHRoaXMpO1xuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBjcmVhdGVCZWZvcmVBZnRlck5vZGVTZXR0ZXIgPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdGl2ZVJhbmdlW25hbWVdKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlUmFuZ2VQcm9wZXJ0aWVzKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgIH0gY2F0Y2goZXgpIHtcblxuXG4gICAgICAgICAgICAgICAgY2FuU2V0UmFuZ2VTdGFydEFmdGVyRW5kID0gZmFsc2U7XG5cbiAgICAgICAgICAgICAgICByYW5nZVByb3RvLnNldFN0YXJ0ID0gZnVuY3Rpb24obm9kZSwgb2Zmc2V0KSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdGl2ZVJhbmdlLnNldFN0YXJ0KG5vZGUsIG9mZnNldCk7XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdGl2ZVJhbmdlLnNldEVuZChub2RlLCBvZmZzZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5uYXRpdmVSYW5nZS5zZXRTdGFydChub2RlLCBvZmZzZXQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVJhbmdlUHJvcGVydGllcyh0aGlzKTtcbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgcmFuZ2VQcm90by5zZXRFbmQgPSBmdW5jdGlvbihub2RlLCBvZmZzZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF0aXZlUmFuZ2Uuc2V0RW5kKG5vZGUsIG9mZnNldCk7XG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdGl2ZVJhbmdlLnNldFN0YXJ0KG5vZGUsIG9mZnNldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdGl2ZVJhbmdlLnNldEVuZChub2RlLCBvZmZzZXQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVJhbmdlUHJvcGVydGllcyh0aGlzKTtcbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgY3JlYXRlQmVmb3JlQWZ0ZXJOb2RlU2V0dGVyID0gZnVuY3Rpb24obmFtZSwgb3Bwb3NpdGVOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF0aXZlUmFuZ2VbbmFtZV0obm9kZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubmF0aXZlUmFuZ2Vbb3Bwb3NpdGVOYW1lXShub2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdGl2ZVJhbmdlW25hbWVdKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdXBkYXRlUmFuZ2VQcm9wZXJ0aWVzKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJhbmdlUHJvdG8uc2V0U3RhcnRCZWZvcmUgPSBjcmVhdGVCZWZvcmVBZnRlck5vZGVTZXR0ZXIoXCJzZXRTdGFydEJlZm9yZVwiLCBcInNldEVuZEJlZm9yZVwiKTtcbiAgICAgICAgICAgIHJhbmdlUHJvdG8uc2V0U3RhcnRBZnRlciA9IGNyZWF0ZUJlZm9yZUFmdGVyTm9kZVNldHRlcihcInNldFN0YXJ0QWZ0ZXJcIiwgXCJzZXRFbmRBZnRlclwiKTtcbiAgICAgICAgICAgIHJhbmdlUHJvdG8uc2V0RW5kQmVmb3JlID0gY3JlYXRlQmVmb3JlQWZ0ZXJOb2RlU2V0dGVyKFwic2V0RW5kQmVmb3JlXCIsIFwic2V0U3RhcnRCZWZvcmVcIik7XG4gICAgICAgICAgICByYW5nZVByb3RvLnNldEVuZEFmdGVyID0gY3JlYXRlQmVmb3JlQWZ0ZXJOb2RlU2V0dGVyKFwic2V0RW5kQWZ0ZXJcIiwgXCJzZXRTdGFydEFmdGVyXCIpO1xuXG4gICAgICAgICAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAgICAgICAgICAgLy8gVGVzdCBmb3IgYW5kIGNvcnJlY3QgRmlyZWZveCAyIGJlaGF2aW91ciB3aXRoIHNlbGVjdE5vZGVDb250ZW50cyBvbiB0ZXh0IG5vZGVzOiBpdCBjb2xsYXBzZXMgdGhlIHJhbmdlIHRvXG4gICAgICAgICAgICAvLyB0aGUgMHRoIGNoYXJhY3RlciBvZiB0aGUgdGV4dCBub2RlXG4gICAgICAgICAgICByYW5nZS5zZWxlY3ROb2RlQ29udGVudHModGVzdFRleHROb2RlKTtcbiAgICAgICAgICAgIGlmIChyYW5nZS5zdGFydENvbnRhaW5lciA9PSB0ZXN0VGV4dE5vZGUgJiYgcmFuZ2UuZW5kQ29udGFpbmVyID09IHRlc3RUZXh0Tm9kZSAmJlxuICAgICAgICAgICAgICAgICAgICByYW5nZS5zdGFydE9mZnNldCA9PSAwICYmIHJhbmdlLmVuZE9mZnNldCA9PSB0ZXN0VGV4dE5vZGUubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmFuZ2VQcm90by5zZWxlY3ROb2RlQ29udGVudHMgPSBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubmF0aXZlUmFuZ2Uuc2VsZWN0Tm9kZUNvbnRlbnRzKG5vZGUpO1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVSYW5nZVByb3BlcnRpZXModGhpcyk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmFuZ2VQcm90by5zZWxlY3ROb2RlQ29udGVudHMgPSBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhcnQobm9kZSwgMCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0RW5kKG5vZGUsIERvbVJhbmdlLmdldEVuZE9mZnNldChub2RlKSk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgICAgICAgICAgIC8vIFRlc3QgZm9yIFdlYktpdCBidWcgdGhhdCBoYXMgdGhlIGJlYWh2aW91ciBvZiBjb21wYXJlQm91bmRhcnlQb2ludHMgcm91bmQgdGhlIHdyb25nIHdheSBmb3IgY29uc3RhbnRzXG4gICAgICAgICAgICAvLyBTVEFSVF9UT19FTkQgYW5kIEVORF9UT19TVEFSVDogaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTIwNzM4XG5cbiAgICAgICAgICAgIHJhbmdlLnNlbGVjdE5vZGVDb250ZW50cyh0ZXN0VGV4dE5vZGUpO1xuICAgICAgICAgICAgcmFuZ2Uuc2V0RW5kKHRlc3RUZXh0Tm9kZSwgMyk7XG5cbiAgICAgICAgICAgIHZhciByYW5nZTIgPSBkb2N1bWVudC5jcmVhdGVSYW5nZSgpO1xuICAgICAgICAgICAgcmFuZ2UyLnNlbGVjdE5vZGVDb250ZW50cyh0ZXN0VGV4dE5vZGUpO1xuICAgICAgICAgICAgcmFuZ2UyLnNldEVuZCh0ZXN0VGV4dE5vZGUsIDQpO1xuICAgICAgICAgICAgcmFuZ2UyLnNldFN0YXJ0KHRlc3RUZXh0Tm9kZSwgMik7XG5cbiAgICAgICAgICAgIGlmIChyYW5nZS5jb21wYXJlQm91bmRhcnlQb2ludHMocmFuZ2UuU1RBUlRfVE9fRU5ELCByYW5nZTIpID09IC0xICZcbiAgICAgICAgICAgICAgICAgICAgcmFuZ2UuY29tcGFyZUJvdW5kYXJ5UG9pbnRzKHJhbmdlLkVORF9UT19TVEFSVCwgcmFuZ2UyKSA9PSAxKSB7XG4gICAgICAgICAgICAgICAgLy8gVGhpcyBpcyB0aGUgd3Jvbmcgd2F5IHJvdW5kLCBzbyBjb3JyZWN0IGZvciBpdFxuXG5cbiAgICAgICAgICAgICAgICByYW5nZVByb3RvLmNvbXBhcmVCb3VuZGFyeVBvaW50cyA9IGZ1bmN0aW9uKHR5cGUsIHJhbmdlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJhbmdlID0gcmFuZ2UubmF0aXZlUmFuZ2UgfHwgcmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlID09IHJhbmdlLlNUQVJUX1RPX0VORCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSA9IHJhbmdlLkVORF9UT19TVEFSVDtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09IHJhbmdlLkVORF9UT19TVEFSVCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSA9IHJhbmdlLlNUQVJUX1RPX0VORDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5uYXRpdmVSYW5nZS5jb21wYXJlQm91bmRhcnlQb2ludHModHlwZSwgcmFuZ2UpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJhbmdlUHJvdG8uY29tcGFyZUJvdW5kYXJ5UG9pbnRzID0gZnVuY3Rpb24odHlwZSwgcmFuZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubmF0aXZlUmFuZ2UuY29tcGFyZUJvdW5kYXJ5UG9pbnRzKHR5cGUsIHJhbmdlLm5hdGl2ZVJhbmdlIHx8IHJhbmdlKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAgICAgICAgICAgLy8gVGVzdCBmb3IgZXhpc3RlbmNlIG9mIGNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudCBhbmQgZGVsZWdhdGUgdG8gaXQgaWYgaXQgZXhpc3RzXG4gICAgICAgICAgICBpZiAoYXBpLnV0aWwuaXNIb3N0TWV0aG9kKHJhbmdlLCBcImNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudFwiKSkge1xuICAgICAgICAgICAgICAgIHJhbmdlUHJvdG8uY3JlYXRlQ29udGV4dHVhbEZyYWdtZW50ID0gZnVuY3Rpb24oZnJhZ21lbnRTdHIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubmF0aXZlUmFuZ2UuY3JlYXRlQ29udGV4dHVhbEZyYWdtZW50KGZyYWdtZW50U3RyKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAgICAgICAgICAgLy8gQ2xlYW4gdXBcbiAgICAgICAgICAgIGRvbS5nZXRCb2R5KGRvY3VtZW50KS5yZW1vdmVDaGlsZCh0ZXN0VGV4dE5vZGUpO1xuICAgICAgICAgICAgcmFuZ2UuZGV0YWNoKCk7XG4gICAgICAgICAgICByYW5nZTIuZGV0YWNoKCk7XG4gICAgICAgIH0pKCk7XG5cbiAgICAgICAgYXBpLmNyZWF0ZU5hdGl2ZVJhbmdlID0gZnVuY3Rpb24oZG9jKSB7XG4gICAgICAgICAgICBkb2MgPSBkb2MgfHwgZG9jdW1lbnQ7XG4gICAgICAgICAgICByZXR1cm4gZG9jLmNyZWF0ZVJhbmdlKCk7XG4gICAgICAgIH07XG4gICAgfSBlbHNlIGlmIChhcGkuZmVhdHVyZXMuaW1wbGVtZW50c1RleHRSYW5nZSkge1xuICAgICAgICAvLyBUaGlzIGlzIGEgd3JhcHBlciBhcm91bmQgYSBUZXh0UmFuZ2UsIHByb3ZpZGluZyBmdWxsIERPTSBSYW5nZSBmdW5jdGlvbmFsaXR5IHVzaW5nIHJhbmd5J3MgRG9tUmFuZ2UgYXMgYVxuICAgICAgICAvLyBwcm90b3R5cGVcblxuICAgICAgICBXcmFwcGVkUmFuZ2UgPSBmdW5jdGlvbih0ZXh0UmFuZ2UpIHtcbiAgICAgICAgICAgIHRoaXMudGV4dFJhbmdlID0gdGV4dFJhbmdlO1xuICAgICAgICAgICAgdGhpcy5yZWZyZXNoKCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgV3JhcHBlZFJhbmdlLnByb3RvdHlwZSA9IG5ldyBEb21SYW5nZShkb2N1bWVudCk7XG5cbiAgICAgICAgV3JhcHBlZFJhbmdlLnByb3RvdHlwZS5yZWZyZXNoID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgc3RhcnQsIGVuZDtcblxuICAgICAgICAgICAgLy8gVGV4dFJhbmdlJ3MgcGFyZW50RWxlbWVudCgpIG1ldGhvZCBjYW5ub3QgYmUgdHJ1c3RlZC4gZ2V0VGV4dFJhbmdlQ29udGFpbmVyRWxlbWVudCgpIHdvcmtzIGFyb3VuZCB0aGF0LlxuICAgICAgICAgICAgdmFyIHJhbmdlQ29udGFpbmVyRWxlbWVudCA9IGdldFRleHRSYW5nZUNvbnRhaW5lckVsZW1lbnQodGhpcy50ZXh0UmFuZ2UpO1xuXG4gICAgICAgICAgICBpZiAodGV4dFJhbmdlSXNDb2xsYXBzZWQodGhpcy50ZXh0UmFuZ2UpKSB7XG4gICAgICAgICAgICAgICAgZW5kID0gc3RhcnQgPSBnZXRUZXh0UmFuZ2VCb3VuZGFyeVBvc2l0aW9uKHRoaXMudGV4dFJhbmdlLCByYW5nZUNvbnRhaW5lckVsZW1lbnQsIHRydWUsIHRydWUpO1xuICAgICAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgICAgICAgIHN0YXJ0ID0gZ2V0VGV4dFJhbmdlQm91bmRhcnlQb3NpdGlvbih0aGlzLnRleHRSYW5nZSwgcmFuZ2VDb250YWluZXJFbGVtZW50LCB0cnVlLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgZW5kID0gZ2V0VGV4dFJhbmdlQm91bmRhcnlQb3NpdGlvbih0aGlzLnRleHRSYW5nZSwgcmFuZ2VDb250YWluZXJFbGVtZW50LCBmYWxzZSwgZmFsc2UpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLnNldFN0YXJ0KHN0YXJ0Lm5vZGUsIHN0YXJ0Lm9mZnNldCk7XG4gICAgICAgICAgICB0aGlzLnNldEVuZChlbmQubm9kZSwgZW5kLm9mZnNldCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgRG9tUmFuZ2UuY29weUNvbXBhcmlzb25Db25zdGFudHMoV3JhcHBlZFJhbmdlKTtcblxuICAgICAgICAvLyBBZGQgV3JhcHBlZFJhbmdlIGFzIHRoZSBSYW5nZSBwcm9wZXJ0eSBvZiB0aGUgZ2xvYmFsIG9iamVjdCB0byBhbGxvdyBleHByZXNzaW9uIGxpa2UgUmFuZ2UuRU5EX1RPX0VORCB0byB3b3JrXG4gICAgICAgIHZhciBnbG9iYWxPYmogPSAoZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSgpO1xuICAgICAgICBpZiAodHlwZW9mIGdsb2JhbE9iai5SYW5nZSA9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICBnbG9iYWxPYmouUmFuZ2UgPSBXcmFwcGVkUmFuZ2U7XG4gICAgICAgIH1cblxuICAgICAgICBhcGkuY3JlYXRlTmF0aXZlUmFuZ2UgPSBmdW5jdGlvbihkb2MpIHtcbiAgICAgICAgICAgIGRvYyA9IGRvYyB8fCBkb2N1bWVudDtcbiAgICAgICAgICAgIHJldHVybiBkb2MuYm9keS5jcmVhdGVUZXh0UmFuZ2UoKTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBpZiAoYXBpLmZlYXR1cmVzLmltcGxlbWVudHNUZXh0UmFuZ2UpIHtcbiAgICAgICAgV3JhcHBlZFJhbmdlLnJhbmdlVG9UZXh0UmFuZ2UgPSBmdW5jdGlvbihyYW5nZSkge1xuICAgICAgICAgICAgaWYgKHJhbmdlLmNvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgIHZhciB0ciA9IGNyZWF0ZUJvdW5kYXJ5VGV4dFJhbmdlKG5ldyBEb21Qb3NpdGlvbihyYW5nZS5zdGFydENvbnRhaW5lciwgcmFuZ2Uuc3RhcnRPZmZzZXQpLCB0cnVlKTtcblxuXG5cbiAgICAgICAgICAgICAgICByZXR1cm4gdHI7XG5cbiAgICAgICAgICAgICAgICAvL3JldHVybiBjcmVhdGVCb3VuZGFyeVRleHRSYW5nZShuZXcgRG9tUG9zaXRpb24ocmFuZ2Uuc3RhcnRDb250YWluZXIsIHJhbmdlLnN0YXJ0T2Zmc2V0KSwgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhciBzdGFydFJhbmdlID0gY3JlYXRlQm91bmRhcnlUZXh0UmFuZ2UobmV3IERvbVBvc2l0aW9uKHJhbmdlLnN0YXJ0Q29udGFpbmVyLCByYW5nZS5zdGFydE9mZnNldCksIHRydWUpO1xuICAgICAgICAgICAgICAgIHZhciBlbmRSYW5nZSA9IGNyZWF0ZUJvdW5kYXJ5VGV4dFJhbmdlKG5ldyBEb21Qb3NpdGlvbihyYW5nZS5lbmRDb250YWluZXIsIHJhbmdlLmVuZE9mZnNldCksIGZhbHNlKTtcbiAgICAgICAgICAgICAgICB2YXIgdGV4dFJhbmdlID0gZG9tLmdldERvY3VtZW50KHJhbmdlLnN0YXJ0Q29udGFpbmVyKS5ib2R5LmNyZWF0ZVRleHRSYW5nZSgpO1xuICAgICAgICAgICAgICAgIHRleHRSYW5nZS5zZXRFbmRQb2ludChcIlN0YXJ0VG9TdGFydFwiLCBzdGFydFJhbmdlKTtcbiAgICAgICAgICAgICAgICB0ZXh0UmFuZ2Uuc2V0RW5kUG9pbnQoXCJFbmRUb0VuZFwiLCBlbmRSYW5nZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRleHRSYW5nZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBXcmFwcGVkUmFuZ2UucHJvdG90eXBlLmdldE5hbWUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFwiV3JhcHBlZFJhbmdlXCI7XG4gICAgfTtcblxuICAgIGFwaS5XcmFwcGVkUmFuZ2UgPSBXcmFwcGVkUmFuZ2U7XG5cbiAgICBhcGkuY3JlYXRlUmFuZ2UgPSBmdW5jdGlvbihkb2MpIHtcbiAgICAgICAgZG9jID0gZG9jIHx8IGRvY3VtZW50O1xuICAgICAgICByZXR1cm4gbmV3IFdyYXBwZWRSYW5nZShhcGkuY3JlYXRlTmF0aXZlUmFuZ2UoZG9jKSk7XG4gICAgfTtcblxuICAgIGFwaS5jcmVhdGVSYW5neVJhbmdlID0gZnVuY3Rpb24oZG9jKSB7XG4gICAgICAgIGRvYyA9IGRvYyB8fCBkb2N1bWVudDtcbiAgICAgICAgcmV0dXJuIG5ldyBEb21SYW5nZShkb2MpO1xuICAgIH07XG5cbiAgICBhcGkuY3JlYXRlSWZyYW1lUmFuZ2UgPSBmdW5jdGlvbihpZnJhbWVFbCkge1xuICAgICAgICByZXR1cm4gYXBpLmNyZWF0ZVJhbmdlKGRvbS5nZXRJZnJhbWVEb2N1bWVudChpZnJhbWVFbCkpO1xuICAgIH07XG5cbiAgICBhcGkuY3JlYXRlSWZyYW1lUmFuZ3lSYW5nZSA9IGZ1bmN0aW9uKGlmcmFtZUVsKSB7XG4gICAgICAgIHJldHVybiBhcGkuY3JlYXRlUmFuZ3lSYW5nZShkb20uZ2V0SWZyYW1lRG9jdW1lbnQoaWZyYW1lRWwpKTtcbiAgICB9O1xuXG4gICAgYXBpLmFkZENyZWF0ZU1pc3NpbmdOYXRpdmVBcGlMaXN0ZW5lcihmdW5jdGlvbih3aW4pIHtcbiAgICAgICAgdmFyIGRvYyA9IHdpbi5kb2N1bWVudDtcbiAgICAgICAgaWYgKHR5cGVvZiBkb2MuY3JlYXRlUmFuZ2UgPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgZG9jLmNyZWF0ZVJhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5jcmVhdGVSYW5nZSh0aGlzKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZG9jID0gd2luID0gbnVsbDtcbiAgICB9KTtcbn0pO3Jhbmd5LmNyZWF0ZU1vZHVsZShcIldyYXBwZWRTZWxlY3Rpb25cIiwgZnVuY3Rpb24oYXBpLCBtb2R1bGUpIHtcbiAgICAvLyBUaGlzIHdpbGwgY3JlYXRlIGEgc2VsZWN0aW9uIG9iamVjdCB3cmFwcGVyIHRoYXQgZm9sbG93cyB0aGUgU2VsZWN0aW9uIG9iamVjdCBmb3VuZCBpbiB0aGUgV0hBVFdHIGRyYWZ0IERPTSBSYW5nZVxuICAgIC8vIHNwZWMgKGh0dHA6Ly9odG1sNS5vcmcvc3BlY3MvZG9tLXJhbmdlLmh0bWwpXG5cbiAgICBhcGkucmVxdWlyZU1vZHVsZXMoIFtcIkRvbVV0aWxcIiwgXCJEb21SYW5nZVwiLCBcIldyYXBwZWRSYW5nZVwiXSApO1xuXG4gICAgYXBpLmNvbmZpZy5jaGVja1NlbGVjdGlvblJhbmdlcyA9IHRydWU7XG5cbiAgICB2YXIgQk9PTEVBTiA9IFwiYm9vbGVhblwiLFxuICAgICAgICB3aW5kb3dQcm9wZXJ0eU5hbWUgPSBcIl9yYW5neVNlbGVjdGlvblwiLFxuICAgICAgICBkb20gPSBhcGkuZG9tLFxuICAgICAgICB1dGlsID0gYXBpLnV0aWwsXG4gICAgICAgIERvbVJhbmdlID0gYXBpLkRvbVJhbmdlLFxuICAgICAgICBXcmFwcGVkUmFuZ2UgPSBhcGkuV3JhcHBlZFJhbmdlLFxuICAgICAgICBET01FeGNlcHRpb24gPSBhcGkuRE9NRXhjZXB0aW9uLFxuICAgICAgICBEb21Qb3NpdGlvbiA9IGRvbS5Eb21Qb3NpdGlvbixcbiAgICAgICAgZ2V0U2VsZWN0aW9uLFxuICAgICAgICBzZWxlY3Rpb25Jc0NvbGxhcHNlZCxcbiAgICAgICAgQ09OVFJPTCA9IFwiQ29udHJvbFwiO1xuXG5cblxuICAgIGZ1bmN0aW9uIGdldFdpblNlbGVjdGlvbih3aW5QYXJhbSkge1xuICAgICAgICByZXR1cm4gKHdpblBhcmFtIHx8IHdpbmRvdykuZ2V0U2VsZWN0aW9uKCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0RG9jU2VsZWN0aW9uKHdpblBhcmFtKSB7XG4gICAgICAgIHJldHVybiAod2luUGFyYW0gfHwgd2luZG93KS5kb2N1bWVudC5zZWxlY3Rpb247XG4gICAgfVxuXG4gICAgLy8gVGVzdCBmb3IgdGhlIFJhbmdlL1RleHRSYW5nZSBhbmQgU2VsZWN0aW9uIGZlYXR1cmVzIHJlcXVpcmVkXG4gICAgLy8gVGVzdCBmb3IgYWJpbGl0eSB0byByZXRyaWV2ZSBzZWxlY3Rpb25cbiAgICB2YXIgaW1wbGVtZW50c1dpbkdldFNlbGVjdGlvbiA9IGFwaS51dGlsLmlzSG9zdE1ldGhvZCh3aW5kb3csIFwiZ2V0U2VsZWN0aW9uXCIpLFxuICAgICAgICBpbXBsZW1lbnRzRG9jU2VsZWN0aW9uID0gYXBpLnV0aWwuaXNIb3N0T2JqZWN0KGRvY3VtZW50LCBcInNlbGVjdGlvblwiKTtcblxuICAgIHZhciB1c2VEb2N1bWVudFNlbGVjdGlvbiA9IGltcGxlbWVudHNEb2NTZWxlY3Rpb24gJiYgKCFpbXBsZW1lbnRzV2luR2V0U2VsZWN0aW9uIHx8IGFwaS5jb25maWcucHJlZmVyVGV4dFJhbmdlKTtcblxuICAgIGlmICh1c2VEb2N1bWVudFNlbGVjdGlvbikge1xuICAgICAgICBnZXRTZWxlY3Rpb24gPSBnZXREb2NTZWxlY3Rpb247XG4gICAgICAgIGFwaS5pc1NlbGVjdGlvblZhbGlkID0gZnVuY3Rpb24od2luUGFyYW0pIHtcbiAgICAgICAgICAgIHZhciBkb2MgPSAod2luUGFyYW0gfHwgd2luZG93KS5kb2N1bWVudCwgbmF0aXZlU2VsID0gZG9jLnNlbGVjdGlvbjtcblxuICAgICAgICAgICAgLy8gQ2hlY2sgd2hldGhlciB0aGUgc2VsZWN0aW9uIFRleHRSYW5nZSBpcyBhY3R1YWxseSBjb250YWluZWQgd2l0aGluIHRoZSBjb3JyZWN0IGRvY3VtZW50XG4gICAgICAgICAgICByZXR1cm4gKG5hdGl2ZVNlbC50eXBlICE9IFwiTm9uZVwiIHx8IGRvbS5nZXREb2N1bWVudChuYXRpdmVTZWwuY3JlYXRlUmFuZ2UoKS5wYXJlbnRFbGVtZW50KCkpID09IGRvYyk7XG4gICAgICAgIH07XG4gICAgfSBlbHNlIGlmIChpbXBsZW1lbnRzV2luR2V0U2VsZWN0aW9uKSB7XG4gICAgICAgIGdldFNlbGVjdGlvbiA9IGdldFdpblNlbGVjdGlvbjtcbiAgICAgICAgYXBpLmlzU2VsZWN0aW9uVmFsaWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICAgIG1vZHVsZS5mYWlsKFwiTmVpdGhlciBkb2N1bWVudC5zZWxlY3Rpb24gb3Igd2luZG93LmdldFNlbGVjdGlvbigpIGRldGVjdGVkLlwiKTtcbiAgICB9XG5cbiAgICBhcGkuZ2V0TmF0aXZlU2VsZWN0aW9uID0gZ2V0U2VsZWN0aW9uO1xuXG4gICAgdmFyIHRlc3RTZWxlY3Rpb24gPSBnZXRTZWxlY3Rpb24oKTtcbiAgICB2YXIgdGVzdFJhbmdlID0gYXBpLmNyZWF0ZU5hdGl2ZVJhbmdlKGRvY3VtZW50KTtcbiAgICB2YXIgYm9keSA9IGRvbS5nZXRCb2R5KGRvY3VtZW50KTtcblxuICAgIC8vIE9idGFpbmluZyBhIHJhbmdlIGZyb20gYSBzZWxlY3Rpb25cbiAgICB2YXIgc2VsZWN0aW9uSGFzQW5jaG9yQW5kRm9jdXMgPSB1dGlsLmFyZUhvc3RPYmplY3RzKHRlc3RTZWxlY3Rpb24sIFtcImFuY2hvck5vZGVcIiwgXCJmb2N1c05vZGVcIl0gJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1dGlsLmFyZUhvc3RQcm9wZXJ0aWVzKHRlc3RTZWxlY3Rpb24sIFtcImFuY2hvck9mZnNldFwiLCBcImZvY3VzT2Zmc2V0XCJdKSk7XG4gICAgYXBpLmZlYXR1cmVzLnNlbGVjdGlvbkhhc0FuY2hvckFuZEZvY3VzID0gc2VsZWN0aW9uSGFzQW5jaG9yQW5kRm9jdXM7XG5cbiAgICAvLyBUZXN0IGZvciBleGlzdGVuY2Ugb2YgbmF0aXZlIHNlbGVjdGlvbiBleHRlbmQoKSBtZXRob2RcbiAgICB2YXIgc2VsZWN0aW9uSGFzRXh0ZW5kID0gdXRpbC5pc0hvc3RNZXRob2QodGVzdFNlbGVjdGlvbiwgXCJleHRlbmRcIik7XG4gICAgYXBpLmZlYXR1cmVzLnNlbGVjdGlvbkhhc0V4dGVuZCA9IHNlbGVjdGlvbkhhc0V4dGVuZDtcblxuICAgIC8vIFRlc3QgaWYgcmFuZ2VDb3VudCBleGlzdHNcbiAgICB2YXIgc2VsZWN0aW9uSGFzUmFuZ2VDb3VudCA9ICh0eXBlb2YgdGVzdFNlbGVjdGlvbi5yYW5nZUNvdW50ID09IFwibnVtYmVyXCIpO1xuICAgIGFwaS5mZWF0dXJlcy5zZWxlY3Rpb25IYXNSYW5nZUNvdW50ID0gc2VsZWN0aW9uSGFzUmFuZ2VDb3VudDtcblxuICAgIHZhciBzZWxlY3Rpb25TdXBwb3J0c011bHRpcGxlUmFuZ2VzID0gZmFsc2U7XG4gICAgdmFyIGNvbGxhcHNlZE5vbkVkaXRhYmxlU2VsZWN0aW9uc1N1cHBvcnRlZCA9IHRydWU7XG5cbiAgICBpZiAodXRpbC5hcmVIb3N0TWV0aG9kcyh0ZXN0U2VsZWN0aW9uLCBbXCJhZGRSYW5nZVwiLCBcImdldFJhbmdlQXRcIiwgXCJyZW1vdmVBbGxSYW5nZXNcIl0pICYmXG4gICAgICAgICAgICB0eXBlb2YgdGVzdFNlbGVjdGlvbi5yYW5nZUNvdW50ID09IFwibnVtYmVyXCIgJiYgYXBpLmZlYXR1cmVzLmltcGxlbWVudHNEb21SYW5nZSkge1xuXG4gICAgICAgIChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBpZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaWZyYW1lXCIpO1xuICAgICAgICAgICAgYm9keS5hcHBlbmRDaGlsZChpZnJhbWUpO1xuXG4gICAgICAgICAgICB2YXIgaWZyYW1lRG9jID0gZG9tLmdldElmcmFtZURvY3VtZW50KGlmcmFtZSk7XG4gICAgICAgICAgICBpZnJhbWVEb2Mub3BlbigpO1xuICAgICAgICAgICAgaWZyYW1lRG9jLndyaXRlKFwiPGh0bWw+PGhlYWQ+PC9oZWFkPjxib2R5PjEyPC9ib2R5PjwvaHRtbD5cIik7XG4gICAgICAgICAgICBpZnJhbWVEb2MuY2xvc2UoKTtcblxuICAgICAgICAgICAgdmFyIHNlbCA9IGRvbS5nZXRJZnJhbWVXaW5kb3coaWZyYW1lKS5nZXRTZWxlY3Rpb24oKTtcbiAgICAgICAgICAgIHZhciBkb2NFbCA9IGlmcmFtZURvYy5kb2N1bWVudEVsZW1lbnQ7XG4gICAgICAgICAgICB2YXIgaWZyYW1lQm9keSA9IGRvY0VsLmxhc3RDaGlsZCwgdGV4dE5vZGUgPSBpZnJhbWVCb2R5LmZpcnN0Q2hpbGQ7XG5cbiAgICAgICAgICAgIC8vIFRlc3Qgd2hldGhlciB0aGUgbmF0aXZlIHNlbGVjdGlvbiB3aWxsIGFsbG93IGEgY29sbGFwc2VkIHNlbGVjdGlvbiB3aXRoaW4gYSBub24tZWRpdGFibGUgZWxlbWVudFxuICAgICAgICAgICAgdmFyIHIxID0gaWZyYW1lRG9jLmNyZWF0ZVJhbmdlKCk7XG4gICAgICAgICAgICByMS5zZXRTdGFydCh0ZXh0Tm9kZSwgMSk7XG4gICAgICAgICAgICByMS5jb2xsYXBzZSh0cnVlKTtcbiAgICAgICAgICAgIHNlbC5hZGRSYW5nZShyMSk7XG4gICAgICAgICAgICBjb2xsYXBzZWROb25FZGl0YWJsZVNlbGVjdGlvbnNTdXBwb3J0ZWQgPSAoc2VsLnJhbmdlQ291bnQgPT0gMSk7XG4gICAgICAgICAgICBzZWwucmVtb3ZlQWxsUmFuZ2VzKCk7XG5cbiAgICAgICAgICAgIC8vIFRlc3Qgd2hldGhlciB0aGUgbmF0aXZlIHNlbGVjdGlvbiBpcyBjYXBhYmxlIG9mIHN1cHBvcnRpbmcgbXVsdGlwbGUgcmFuZ2VzXG4gICAgICAgICAgICB2YXIgcjIgPSByMS5jbG9uZVJhbmdlKCk7XG4gICAgICAgICAgICByMS5zZXRTdGFydCh0ZXh0Tm9kZSwgMCk7XG4gICAgICAgICAgICByMi5zZXRFbmQodGV4dE5vZGUsIDIpO1xuICAgICAgICAgICAgc2VsLmFkZFJhbmdlKHIxKTtcbiAgICAgICAgICAgIHNlbC5hZGRSYW5nZShyMik7XG5cbiAgICAgICAgICAgIHNlbGVjdGlvblN1cHBvcnRzTXVsdGlwbGVSYW5nZXMgPSAoc2VsLnJhbmdlQ291bnQgPT0gMik7XG5cbiAgICAgICAgICAgIC8vIENsZWFuIHVwXG4gICAgICAgICAgICByMS5kZXRhY2goKTtcbiAgICAgICAgICAgIHIyLmRldGFjaCgpO1xuXG4gICAgICAgICAgICBib2R5LnJlbW92ZUNoaWxkKGlmcmFtZSk7XG4gICAgICAgIH0pKCk7XG4gICAgfVxuXG4gICAgYXBpLmZlYXR1cmVzLnNlbGVjdGlvblN1cHBvcnRzTXVsdGlwbGVSYW5nZXMgPSBzZWxlY3Rpb25TdXBwb3J0c011bHRpcGxlUmFuZ2VzO1xuICAgIGFwaS5mZWF0dXJlcy5jb2xsYXBzZWROb25FZGl0YWJsZVNlbGVjdGlvbnNTdXBwb3J0ZWQgPSBjb2xsYXBzZWROb25FZGl0YWJsZVNlbGVjdGlvbnNTdXBwb3J0ZWQ7XG5cbiAgICAvLyBDb250cm9sUmFuZ2VzXG4gICAgdmFyIGltcGxlbWVudHNDb250cm9sUmFuZ2UgPSBmYWxzZSwgdGVzdENvbnRyb2xSYW5nZTtcblxuICAgIGlmIChib2R5ICYmIHV0aWwuaXNIb3N0TWV0aG9kKGJvZHksIFwiY3JlYXRlQ29udHJvbFJhbmdlXCIpKSB7XG4gICAgICAgIHRlc3RDb250cm9sUmFuZ2UgPSBib2R5LmNyZWF0ZUNvbnRyb2xSYW5nZSgpO1xuICAgICAgICBpZiAodXRpbC5hcmVIb3N0UHJvcGVydGllcyh0ZXN0Q29udHJvbFJhbmdlLCBbXCJpdGVtXCIsIFwiYWRkXCJdKSkge1xuICAgICAgICAgICAgaW1wbGVtZW50c0NvbnRyb2xSYW5nZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXBpLmZlYXR1cmVzLmltcGxlbWVudHNDb250cm9sUmFuZ2UgPSBpbXBsZW1lbnRzQ29udHJvbFJhbmdlO1xuXG4gICAgLy8gU2VsZWN0aW9uIGNvbGxhcHNlZG5lc3NcbiAgICBpZiAoc2VsZWN0aW9uSGFzQW5jaG9yQW5kRm9jdXMpIHtcbiAgICAgICAgc2VsZWN0aW9uSXNDb2xsYXBzZWQgPSBmdW5jdGlvbihzZWwpIHtcbiAgICAgICAgICAgIHJldHVybiBzZWwuYW5jaG9yTm9kZSA9PT0gc2VsLmZvY3VzTm9kZSAmJiBzZWwuYW5jaG9yT2Zmc2V0ID09PSBzZWwuZm9jdXNPZmZzZXQ7XG4gICAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgICAgc2VsZWN0aW9uSXNDb2xsYXBzZWQgPSBmdW5jdGlvbihzZWwpIHtcbiAgICAgICAgICAgIHJldHVybiBzZWwucmFuZ2VDb3VudCA/IHNlbC5nZXRSYW5nZUF0KHNlbC5yYW5nZUNvdW50IC0gMSkuY29sbGFwc2VkIDogZmFsc2U7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXBkYXRlQW5jaG9yQW5kRm9jdXNGcm9tUmFuZ2Uoc2VsLCByYW5nZSwgYmFja3dhcmRzKSB7XG4gICAgICAgIHZhciBhbmNob3JQcmVmaXggPSBiYWNrd2FyZHMgPyBcImVuZFwiIDogXCJzdGFydFwiLCBmb2N1c1ByZWZpeCA9IGJhY2t3YXJkcyA/IFwic3RhcnRcIiA6IFwiZW5kXCI7XG4gICAgICAgIHNlbC5hbmNob3JOb2RlID0gcmFuZ2VbYW5jaG9yUHJlZml4ICsgXCJDb250YWluZXJcIl07XG4gICAgICAgIHNlbC5hbmNob3JPZmZzZXQgPSByYW5nZVthbmNob3JQcmVmaXggKyBcIk9mZnNldFwiXTtcbiAgICAgICAgc2VsLmZvY3VzTm9kZSA9IHJhbmdlW2ZvY3VzUHJlZml4ICsgXCJDb250YWluZXJcIl07XG4gICAgICAgIHNlbC5mb2N1c09mZnNldCA9IHJhbmdlW2ZvY3VzUHJlZml4ICsgXCJPZmZzZXRcIl07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXBkYXRlQW5jaG9yQW5kRm9jdXNGcm9tTmF0aXZlU2VsZWN0aW9uKHNlbCkge1xuICAgICAgICB2YXIgbmF0aXZlU2VsID0gc2VsLm5hdGl2ZVNlbGVjdGlvbjtcbiAgICAgICAgc2VsLmFuY2hvck5vZGUgPSBuYXRpdmVTZWwuYW5jaG9yTm9kZTtcbiAgICAgICAgc2VsLmFuY2hvck9mZnNldCA9IG5hdGl2ZVNlbC5hbmNob3JPZmZzZXQ7XG4gICAgICAgIHNlbC5mb2N1c05vZGUgPSBuYXRpdmVTZWwuZm9jdXNOb2RlO1xuICAgICAgICBzZWwuZm9jdXNPZmZzZXQgPSBuYXRpdmVTZWwuZm9jdXNPZmZzZXQ7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXBkYXRlRW1wdHlTZWxlY3Rpb24oc2VsKSB7XG4gICAgICAgIHNlbC5hbmNob3JOb2RlID0gc2VsLmZvY3VzTm9kZSA9IG51bGw7XG4gICAgICAgIHNlbC5hbmNob3JPZmZzZXQgPSBzZWwuZm9jdXNPZmZzZXQgPSAwO1xuICAgICAgICBzZWwucmFuZ2VDb3VudCA9IDA7XG4gICAgICAgIHNlbC5pc0NvbGxhcHNlZCA9IHRydWU7XG4gICAgICAgIHNlbC5fcmFuZ2VzLmxlbmd0aCA9IDA7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0TmF0aXZlUmFuZ2UocmFuZ2UpIHtcbiAgICAgICAgdmFyIG5hdGl2ZVJhbmdlO1xuICAgICAgICBpZiAocmFuZ2UgaW5zdGFuY2VvZiBEb21SYW5nZSkge1xuICAgICAgICAgICAgbmF0aXZlUmFuZ2UgPSByYW5nZS5fc2VsZWN0aW9uTmF0aXZlUmFuZ2U7XG4gICAgICAgICAgICBpZiAoIW5hdGl2ZVJhbmdlKSB7XG4gICAgICAgICAgICAgICAgbmF0aXZlUmFuZ2UgPSBhcGkuY3JlYXRlTmF0aXZlUmFuZ2UoZG9tLmdldERvY3VtZW50KHJhbmdlLnN0YXJ0Q29udGFpbmVyKSk7XG4gICAgICAgICAgICAgICAgbmF0aXZlUmFuZ2Uuc2V0RW5kKHJhbmdlLmVuZENvbnRhaW5lciwgcmFuZ2UuZW5kT2Zmc2V0KTtcbiAgICAgICAgICAgICAgICBuYXRpdmVSYW5nZS5zZXRTdGFydChyYW5nZS5zdGFydENvbnRhaW5lciwgcmFuZ2Uuc3RhcnRPZmZzZXQpO1xuICAgICAgICAgICAgICAgIHJhbmdlLl9zZWxlY3Rpb25OYXRpdmVSYW5nZSA9IG5hdGl2ZVJhbmdlO1xuICAgICAgICAgICAgICAgIHJhbmdlLmF0dGFjaExpc3RlbmVyKFwiZGV0YWNoXCIsIGZ1bmN0aW9uKCkge1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3NlbGVjdGlvbk5hdGl2ZVJhbmdlID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChyYW5nZSBpbnN0YW5jZW9mIFdyYXBwZWRSYW5nZSkge1xuICAgICAgICAgICAgbmF0aXZlUmFuZ2UgPSByYW5nZS5uYXRpdmVSYW5nZTtcbiAgICAgICAgfSBlbHNlIGlmIChhcGkuZmVhdHVyZXMuaW1wbGVtZW50c0RvbVJhbmdlICYmIChyYW5nZSBpbnN0YW5jZW9mIGRvbS5nZXRXaW5kb3cocmFuZ2Uuc3RhcnRDb250YWluZXIpLlJhbmdlKSkge1xuICAgICAgICAgICAgbmF0aXZlUmFuZ2UgPSByYW5nZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmF0aXZlUmFuZ2U7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmFuZ2VDb250YWluc1NpbmdsZUVsZW1lbnQocmFuZ2VOb2Rlcykge1xuICAgICAgICBpZiAoIXJhbmdlTm9kZXMubGVuZ3RoIHx8IHJhbmdlTm9kZXNbMF0ubm9kZVR5cGUgIT0gMSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGZvciAodmFyIGkgPSAxLCBsZW4gPSByYW5nZU5vZGVzLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgICBpZiAoIWRvbS5pc0FuY2VzdG9yT2YocmFuZ2VOb2Rlc1swXSwgcmFuZ2VOb2Rlc1tpXSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0U2luZ2xlRWxlbWVudEZyb21SYW5nZShyYW5nZSkge1xuICAgICAgICB2YXIgbm9kZXMgPSByYW5nZS5nZXROb2RlcygpO1xuICAgICAgICBpZiAoIXJhbmdlQ29udGFpbnNTaW5nbGVFbGVtZW50KG5vZGVzKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZ2V0U2luZ2xlRWxlbWVudEZyb21SYW5nZTogcmFuZ2UgXCIgKyByYW5nZS5pbnNwZWN0KCkgKyBcIiBkaWQgbm90IGNvbnNpc3Qgb2YgYSBzaW5nbGUgZWxlbWVudFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbm9kZXNbMF07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaXNUZXh0UmFuZ2UocmFuZ2UpIHtcbiAgICAgICAgcmV0dXJuICEhcmFuZ2UgJiYgdHlwZW9mIHJhbmdlLnRleHQgIT0gXCJ1bmRlZmluZWRcIjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB1cGRhdGVGcm9tVGV4dFJhbmdlKHNlbCwgcmFuZ2UpIHtcbiAgICAgICAgLy8gQ3JlYXRlIGEgUmFuZ2UgZnJvbSB0aGUgc2VsZWN0ZWQgVGV4dFJhbmdlXG4gICAgICAgIHZhciB3cmFwcGVkUmFuZ2UgPSBuZXcgV3JhcHBlZFJhbmdlKHJhbmdlKTtcbiAgICAgICAgc2VsLl9yYW5nZXMgPSBbd3JhcHBlZFJhbmdlXTtcblxuICAgICAgICB1cGRhdGVBbmNob3JBbmRGb2N1c0Zyb21SYW5nZShzZWwsIHdyYXBwZWRSYW5nZSwgZmFsc2UpO1xuICAgICAgICBzZWwucmFuZ2VDb3VudCA9IDE7XG4gICAgICAgIHNlbC5pc0NvbGxhcHNlZCA9IHdyYXBwZWRSYW5nZS5jb2xsYXBzZWQ7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXBkYXRlQ29udHJvbFNlbGVjdGlvbihzZWwpIHtcbiAgICAgICAgLy8gVXBkYXRlIHRoZSB3cmFwcGVkIHNlbGVjdGlvbiBiYXNlZCBvbiB3aGF0J3Mgbm93IGluIHRoZSBuYXRpdmUgc2VsZWN0aW9uXG4gICAgICAgIHNlbC5fcmFuZ2VzLmxlbmd0aCA9IDA7XG4gICAgICAgIGlmIChzZWwuZG9jU2VsZWN0aW9uLnR5cGUgPT0gXCJOb25lXCIpIHtcbiAgICAgICAgICAgIHVwZGF0ZUVtcHR5U2VsZWN0aW9uKHNlbCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgY29udHJvbFJhbmdlID0gc2VsLmRvY1NlbGVjdGlvbi5jcmVhdGVSYW5nZSgpO1xuICAgICAgICAgICAgaWYgKGlzVGV4dFJhbmdlKGNvbnRyb2xSYW5nZSkpIHtcbiAgICAgICAgICAgICAgICAvLyBUaGlzIGNhc2UgKHdoZXJlIHRoZSBzZWxlY3Rpb24gdHlwZSBpcyBcIkNvbnRyb2xcIiBhbmQgY2FsbGluZyBjcmVhdGVSYW5nZSgpIG9uIHRoZSBzZWxlY3Rpb24gcmV0dXJuc1xuICAgICAgICAgICAgICAgIC8vIGEgVGV4dFJhbmdlKSBjYW4gaGFwcGVuIGluIElFIDkuIEl0IGhhcHBlbnMsIGZvciBleGFtcGxlLCB3aGVuIGFsbCBlbGVtZW50cyBpbiB0aGUgc2VsZWN0ZWRcbiAgICAgICAgICAgICAgICAvLyBDb250cm9sUmFuZ2UgaGF2ZSBiZWVuIHJlbW92ZWQgZnJvbSB0aGUgQ29udHJvbFJhbmdlIGFuZCByZW1vdmVkIGZyb20gdGhlIGRvY3VtZW50LlxuICAgICAgICAgICAgICAgIHVwZGF0ZUZyb21UZXh0UmFuZ2Uoc2VsLCBjb250cm9sUmFuZ2UpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZWwucmFuZ2VDb3VudCA9IGNvbnRyb2xSYW5nZS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgdmFyIHJhbmdlLCBkb2MgPSBkb20uZ2V0RG9jdW1lbnQoY29udHJvbFJhbmdlLml0ZW0oMCkpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2VsLnJhbmdlQ291bnQ7ICsraSkge1xuICAgICAgICAgICAgICAgICAgICByYW5nZSA9IGFwaS5jcmVhdGVSYW5nZShkb2MpO1xuICAgICAgICAgICAgICAgICAgICByYW5nZS5zZWxlY3ROb2RlKGNvbnRyb2xSYW5nZS5pdGVtKGkpKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsLl9yYW5nZXMucHVzaChyYW5nZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHNlbC5pc0NvbGxhcHNlZCA9IHNlbC5yYW5nZUNvdW50ID09IDEgJiYgc2VsLl9yYW5nZXNbMF0uY29sbGFwc2VkO1xuICAgICAgICAgICAgICAgIHVwZGF0ZUFuY2hvckFuZEZvY3VzRnJvbVJhbmdlKHNlbCwgc2VsLl9yYW5nZXNbc2VsLnJhbmdlQ291bnQgLSAxXSwgZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYWRkUmFuZ2VUb0NvbnRyb2xTZWxlY3Rpb24oc2VsLCByYW5nZSkge1xuICAgICAgICB2YXIgY29udHJvbFJhbmdlID0gc2VsLmRvY1NlbGVjdGlvbi5jcmVhdGVSYW5nZSgpO1xuICAgICAgICB2YXIgcmFuZ2VFbGVtZW50ID0gZ2V0U2luZ2xlRWxlbWVudEZyb21SYW5nZShyYW5nZSk7XG5cbiAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IENvbnRyb2xSYW5nZSBjb250YWluaW5nIGFsbCB0aGUgZWxlbWVudHMgaW4gdGhlIHNlbGVjdGVkIENvbnRyb2xSYW5nZSBwbHVzIHRoZSBlbGVtZW50XG4gICAgICAgIC8vIGNvbnRhaW5lZCBieSB0aGUgc3VwcGxpZWQgcmFuZ2VcbiAgICAgICAgdmFyIGRvYyA9IGRvbS5nZXREb2N1bWVudChjb250cm9sUmFuZ2UuaXRlbSgwKSk7XG4gICAgICAgIHZhciBuZXdDb250cm9sUmFuZ2UgPSBkb20uZ2V0Qm9keShkb2MpLmNyZWF0ZUNvbnRyb2xSYW5nZSgpO1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gY29udHJvbFJhbmdlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgICBuZXdDb250cm9sUmFuZ2UuYWRkKGNvbnRyb2xSYW5nZS5pdGVtKGkpKTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgbmV3Q29udHJvbFJhbmdlLmFkZChyYW5nZUVsZW1lbnQpO1xuICAgICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiYWRkUmFuZ2UoKTogRWxlbWVudCB3aXRoaW4gdGhlIHNwZWNpZmllZCBSYW5nZSBjb3VsZCBub3QgYmUgYWRkZWQgdG8gY29udHJvbCBzZWxlY3Rpb24gKGRvZXMgaXQgaGF2ZSBsYXlvdXQ/KVwiKTtcbiAgICAgICAgfVxuICAgICAgICBuZXdDb250cm9sUmFuZ2Uuc2VsZWN0KCk7XG5cbiAgICAgICAgLy8gVXBkYXRlIHRoZSB3cmFwcGVkIHNlbGVjdGlvbiBiYXNlZCBvbiB3aGF0J3Mgbm93IGluIHRoZSBuYXRpdmUgc2VsZWN0aW9uXG4gICAgICAgIHVwZGF0ZUNvbnRyb2xTZWxlY3Rpb24oc2VsKTtcbiAgICB9XG5cbiAgICB2YXIgZ2V0U2VsZWN0aW9uUmFuZ2VBdDtcblxuICAgIGlmICh1dGlsLmlzSG9zdE1ldGhvZCh0ZXN0U2VsZWN0aW9uLCAgXCJnZXRSYW5nZUF0XCIpKSB7XG4gICAgICAgIGdldFNlbGVjdGlvblJhbmdlQXQgPSBmdW5jdGlvbihzZWwsIGluZGV4KSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzZWwuZ2V0UmFuZ2VBdChpbmRleCk7XG4gICAgICAgICAgICB9IGNhdGNoKGV4KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSBlbHNlIGlmIChzZWxlY3Rpb25IYXNBbmNob3JBbmRGb2N1cykge1xuICAgICAgICBnZXRTZWxlY3Rpb25SYW5nZUF0ID0gZnVuY3Rpb24oc2VsKSB7XG4gICAgICAgICAgICB2YXIgZG9jID0gZG9tLmdldERvY3VtZW50KHNlbC5hbmNob3JOb2RlKTtcbiAgICAgICAgICAgIHZhciByYW5nZSA9IGFwaS5jcmVhdGVSYW5nZShkb2MpO1xuICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQoc2VsLmFuY2hvck5vZGUsIHNlbC5hbmNob3JPZmZzZXQpO1xuICAgICAgICAgICAgcmFuZ2Uuc2V0RW5kKHNlbC5mb2N1c05vZGUsIHNlbC5mb2N1c09mZnNldCk7XG5cbiAgICAgICAgICAgIC8vIEhhbmRsZSB0aGUgY2FzZSB3aGVuIHRoZSBzZWxlY3Rpb24gd2FzIHNlbGVjdGVkIGJhY2t3YXJkcyAoZnJvbSB0aGUgZW5kIHRvIHRoZSBzdGFydCBpbiB0aGVcbiAgICAgICAgICAgIC8vIGRvY3VtZW50KVxuICAgICAgICAgICAgaWYgKHJhbmdlLmNvbGxhcHNlZCAhPT0gdGhpcy5pc0NvbGxhcHNlZCkge1xuICAgICAgICAgICAgICAgIHJhbmdlLnNldFN0YXJ0KHNlbC5mb2N1c05vZGUsIHNlbC5mb2N1c09mZnNldCk7XG4gICAgICAgICAgICAgICAgcmFuZ2Uuc2V0RW5kKHNlbC5hbmNob3JOb2RlLCBzZWwuYW5jaG9yT2Zmc2V0KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHJhbmdlO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqL1xuICAgIGZ1bmN0aW9uIFdyYXBwZWRTZWxlY3Rpb24oc2VsZWN0aW9uLCBkb2NTZWxlY3Rpb24sIHdpbikge1xuICAgICAgICB0aGlzLm5hdGl2ZVNlbGVjdGlvbiA9IHNlbGVjdGlvbjtcbiAgICAgICAgdGhpcy5kb2NTZWxlY3Rpb24gPSBkb2NTZWxlY3Rpb247XG4gICAgICAgIHRoaXMuX3JhbmdlcyA9IFtdO1xuICAgICAgICB0aGlzLndpbiA9IHdpbjtcbiAgICAgICAgdGhpcy5yZWZyZXNoKCk7XG4gICAgfVxuXG4gICAgYXBpLmdldFNlbGVjdGlvbiA9IGZ1bmN0aW9uKHdpbikge1xuICAgICAgICB3aW4gPSB3aW4gfHwgd2luZG93O1xuICAgICAgICB2YXIgc2VsID0gd2luW3dpbmRvd1Byb3BlcnR5TmFtZV07XG4gICAgICAgIHZhciBuYXRpdmVTZWwgPSBnZXRTZWxlY3Rpb24od2luKSwgZG9jU2VsID0gaW1wbGVtZW50c0RvY1NlbGVjdGlvbiA/IGdldERvY1NlbGVjdGlvbih3aW4pIDogbnVsbDtcbiAgICAgICAgaWYgKHNlbCkge1xuICAgICAgICAgICAgc2VsLm5hdGl2ZVNlbGVjdGlvbiA9IG5hdGl2ZVNlbDtcbiAgICAgICAgICAgIHNlbC5kb2NTZWxlY3Rpb24gPSBkb2NTZWw7XG4gICAgICAgICAgICBzZWwucmVmcmVzaCh3aW4pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2VsID0gbmV3IFdyYXBwZWRTZWxlY3Rpb24obmF0aXZlU2VsLCBkb2NTZWwsIHdpbik7XG4gICAgICAgICAgICB3aW5bd2luZG93UHJvcGVydHlOYW1lXSA9IHNlbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2VsO1xuICAgIH07XG5cbiAgICBhcGkuZ2V0SWZyYW1lU2VsZWN0aW9uID0gZnVuY3Rpb24oaWZyYW1lRWwpIHtcbiAgICAgICAgcmV0dXJuIGFwaS5nZXRTZWxlY3Rpb24oZG9tLmdldElmcmFtZVdpbmRvdyhpZnJhbWVFbCkpO1xuICAgIH07XG5cbiAgICB2YXIgc2VsUHJvdG8gPSBXcmFwcGVkU2VsZWN0aW9uLnByb3RvdHlwZTtcblxuICAgIGZ1bmN0aW9uIGNyZWF0ZUNvbnRyb2xTZWxlY3Rpb24oc2VsLCByYW5nZXMpIHtcbiAgICAgICAgLy8gRW5zdXJlIHRoYXQgdGhlIHNlbGVjdGlvbiBiZWNvbWVzIG9mIHR5cGUgXCJDb250cm9sXCJcbiAgICAgICAgdmFyIGRvYyA9IGRvbS5nZXREb2N1bWVudChyYW5nZXNbMF0uc3RhcnRDb250YWluZXIpO1xuICAgICAgICB2YXIgY29udHJvbFJhbmdlID0gZG9tLmdldEJvZHkoZG9jKS5jcmVhdGVDb250cm9sUmFuZ2UoKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGVsOyBpIDwgcmFuZ2VDb3VudDsgKytpKSB7XG4gICAgICAgICAgICBlbCA9IGdldFNpbmdsZUVsZW1lbnRGcm9tUmFuZ2UocmFuZ2VzW2ldKTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29udHJvbFJhbmdlLmFkZChlbCk7XG4gICAgICAgICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInNldFJhbmdlcygpOiBFbGVtZW50IHdpdGhpbiB0aGUgb25lIG9mIHRoZSBzcGVjaWZpZWQgUmFuZ2VzIGNvdWxkIG5vdCBiZSBhZGRlZCB0byBjb250cm9sIHNlbGVjdGlvbiAoZG9lcyBpdCBoYXZlIGxheW91dD8pXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnRyb2xSYW5nZS5zZWxlY3QoKTtcblxuICAgICAgICAvLyBVcGRhdGUgdGhlIHdyYXBwZWQgc2VsZWN0aW9uIGJhc2VkIG9uIHdoYXQncyBub3cgaW4gdGhlIG5hdGl2ZSBzZWxlY3Rpb25cbiAgICAgICAgdXBkYXRlQ29udHJvbFNlbGVjdGlvbihzZWwpO1xuICAgIH1cblxuICAgIC8vIFNlbGVjdGluZyBhIHJhbmdlXG4gICAgaWYgKCF1c2VEb2N1bWVudFNlbGVjdGlvbiAmJiBzZWxlY3Rpb25IYXNBbmNob3JBbmRGb2N1cyAmJiB1dGlsLmFyZUhvc3RNZXRob2RzKHRlc3RTZWxlY3Rpb24sIFtcInJlbW92ZUFsbFJhbmdlc1wiLCBcImFkZFJhbmdlXCJdKSkge1xuICAgICAgICBzZWxQcm90by5yZW1vdmVBbGxSYW5nZXMgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHRoaXMubmF0aXZlU2VsZWN0aW9uLnJlbW92ZUFsbFJhbmdlcygpO1xuICAgICAgICAgICAgdXBkYXRlRW1wdHlTZWxlY3Rpb24odGhpcyk7XG4gICAgICAgIH07XG5cbiAgICAgICAgdmFyIGFkZFJhbmdlQmFja3dhcmRzID0gZnVuY3Rpb24oc2VsLCByYW5nZSkge1xuICAgICAgICAgICAgdmFyIGRvYyA9IERvbVJhbmdlLmdldFJhbmdlRG9jdW1lbnQocmFuZ2UpO1xuICAgICAgICAgICAgdmFyIGVuZFJhbmdlID0gYXBpLmNyZWF0ZVJhbmdlKGRvYyk7XG4gICAgICAgICAgICBlbmRSYW5nZS5jb2xsYXBzZVRvUG9pbnQocmFuZ2UuZW5kQ29udGFpbmVyLCByYW5nZS5lbmRPZmZzZXQpO1xuICAgICAgICAgICAgc2VsLm5hdGl2ZVNlbGVjdGlvbi5hZGRSYW5nZShnZXROYXRpdmVSYW5nZShlbmRSYW5nZSkpO1xuICAgICAgICAgICAgc2VsLm5hdGl2ZVNlbGVjdGlvbi5leHRlbmQocmFuZ2Uuc3RhcnRDb250YWluZXIsIHJhbmdlLnN0YXJ0T2Zmc2V0KTtcbiAgICAgICAgICAgIHNlbC5yZWZyZXNoKCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgaWYgKHNlbGVjdGlvbkhhc1JhbmdlQ291bnQpIHtcbiAgICAgICAgICAgIHNlbFByb3RvLmFkZFJhbmdlID0gZnVuY3Rpb24ocmFuZ2UsIGJhY2t3YXJkcykge1xuICAgICAgICAgICAgICAgIGlmIChpbXBsZW1lbnRzQ29udHJvbFJhbmdlICYmIGltcGxlbWVudHNEb2NTZWxlY3Rpb24gJiYgdGhpcy5kb2NTZWxlY3Rpb24udHlwZSA9PSBDT05UUk9MKSB7XG4gICAgICAgICAgICAgICAgICAgIGFkZFJhbmdlVG9Db250cm9sU2VsZWN0aW9uKHRoaXMsIHJhbmdlKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYmFja3dhcmRzICYmIHNlbGVjdGlvbkhhc0V4dGVuZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWRkUmFuZ2VCYWNrd2FyZHModGhpcywgcmFuZ2UpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHByZXZpb3VzUmFuZ2VDb3VudDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rpb25TdXBwb3J0c011bHRpcGxlUmFuZ2VzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJldmlvdXNSYW5nZUNvdW50ID0gdGhpcy5yYW5nZUNvdW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUFsbFJhbmdlcygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpb3VzUmFuZ2VDb3VudCA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdGl2ZVNlbGVjdGlvbi5hZGRSYW5nZShnZXROYXRpdmVSYW5nZShyYW5nZSkpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBDaGVjayB3aGV0aGVyIGFkZGluZyB0aGUgcmFuZ2Ugd2FzIHN1Y2Nlc3NmdWxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmFuZ2VDb3VudCA9IHRoaXMubmF0aXZlU2VsZWN0aW9uLnJhbmdlQ291bnQ7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnJhbmdlQ291bnQgPT0gcHJldmlvdXNSYW5nZUNvdW50ICsgMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFRoZSByYW5nZSB3YXMgYWRkZWQgc3VjY2Vzc2Z1bGx5XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBDaGVjayB3aGV0aGVyIHRoZSByYW5nZSB0aGF0IHdlIGFkZGVkIHRvIHRoZSBzZWxlY3Rpb24gaXMgcmVmbGVjdGVkIGluIHRoZSBsYXN0IHJhbmdlIGV4dHJhY3RlZCBmcm9tXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhlIHNlbGVjdGlvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcGkuY29uZmlnLmNoZWNrU2VsZWN0aW9uUmFuZ2VzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBuYXRpdmVSYW5nZSA9IGdldFNlbGVjdGlvblJhbmdlQXQodGhpcy5uYXRpdmVTZWxlY3Rpb24sIHRoaXMucmFuZ2VDb3VudCAtIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobmF0aXZlUmFuZ2UgJiYgIURvbVJhbmdlLnJhbmdlc0VxdWFsKG5hdGl2ZVJhbmdlLCByYW5nZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEhhcHBlbnMgaW4gV2ViS2l0IHdpdGgsIGZvciBleGFtcGxlLCBhIHNlbGVjdGlvbiBwbGFjZWQgYXQgdGhlIHN0YXJ0IG9mIGEgdGV4dCBub2RlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYW5nZSA9IG5ldyBXcmFwcGVkUmFuZ2UobmF0aXZlUmFuZ2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3Jhbmdlc1t0aGlzLnJhbmdlQ291bnQgLSAxXSA9IHJhbmdlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUFuY2hvckFuZEZvY3VzRnJvbVJhbmdlKHRoaXMsIHJhbmdlLCBzZWxlY3Rpb25Jc0JhY2t3YXJkcyh0aGlzLm5hdGl2ZVNlbGVjdGlvbikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaXNDb2xsYXBzZWQgPSBzZWxlY3Rpb25Jc0NvbGxhcHNlZCh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gVGhlIHJhbmdlIHdhcyBub3QgYWRkZWQgc3VjY2Vzc2Z1bGx5LiBUaGUgc2ltcGxlc3QgdGhpbmcgaXMgdG8gcmVmcmVzaFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVmcmVzaCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNlbFByb3RvLmFkZFJhbmdlID0gZnVuY3Rpb24ocmFuZ2UsIGJhY2t3YXJkcykge1xuICAgICAgICAgICAgICAgIGlmIChiYWNrd2FyZHMgJiYgc2VsZWN0aW9uSGFzRXh0ZW5kKSB7XG4gICAgICAgICAgICAgICAgICAgIGFkZFJhbmdlQmFja3dhcmRzKHRoaXMsIHJhbmdlKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm5hdGl2ZVNlbGVjdGlvbi5hZGRSYW5nZShnZXROYXRpdmVSYW5nZShyYW5nZSkpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlZnJlc2goKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgc2VsUHJvdG8uc2V0UmFuZ2VzID0gZnVuY3Rpb24ocmFuZ2VzKSB7XG4gICAgICAgICAgICBpZiAoaW1wbGVtZW50c0NvbnRyb2xSYW5nZSAmJiByYW5nZXMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgIGNyZWF0ZUNvbnRyb2xTZWxlY3Rpb24odGhpcywgcmFuZ2VzKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVBbGxSYW5nZXMoKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gcmFuZ2VzLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkUmFuZ2UocmFuZ2VzW2ldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSBlbHNlIGlmICh1dGlsLmlzSG9zdE1ldGhvZCh0ZXN0U2VsZWN0aW9uLCBcImVtcHR5XCIpICYmIHV0aWwuaXNIb3N0TWV0aG9kKHRlc3RSYW5nZSwgXCJzZWxlY3RcIikgJiZcbiAgICAgICAgICAgICAgIGltcGxlbWVudHNDb250cm9sUmFuZ2UgJiYgdXNlRG9jdW1lbnRTZWxlY3Rpb24pIHtcblxuICAgICAgICBzZWxQcm90by5yZW1vdmVBbGxSYW5nZXMgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIC8vIEFkZGVkIHRyeS9jYXRjaCBhcyBmaXggZm9yIGlzc3VlICMyMVxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB0aGlzLmRvY1NlbGVjdGlvbi5lbXB0eSgpO1xuXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgZm9yIGVtcHR5KCkgbm90IHdvcmtpbmcgKGlzc3VlICMyNClcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5kb2NTZWxlY3Rpb24udHlwZSAhPSBcIk5vbmVcIikge1xuICAgICAgICAgICAgICAgICAgICAvLyBXb3JrIGFyb3VuZCBmYWlsdXJlIHRvIGVtcHR5IGEgY29udHJvbCBzZWxlY3Rpb24gYnkgaW5zdGVhZCBzZWxlY3RpbmcgYSBUZXh0UmFuZ2UgYW5kIHRoZW5cbiAgICAgICAgICAgICAgICAgICAgLy8gY2FsbGluZyBlbXB0eSgpXG4gICAgICAgICAgICAgICAgICAgIHZhciBkb2M7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmFuY2hvck5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvYyA9IGRvbS5nZXREb2N1bWVudCh0aGlzLmFuY2hvck5vZGUpO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZG9jU2VsZWN0aW9uLnR5cGUgPT0gQ09OVFJPTCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNvbnRyb2xSYW5nZSA9IHRoaXMuZG9jU2VsZWN0aW9uLmNyZWF0ZVJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29udHJvbFJhbmdlLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvYyA9IGRvbS5nZXREb2N1bWVudChjb250cm9sUmFuZ2UuaXRlbSgwKSkuYm9keS5jcmVhdGVUZXh0UmFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoZG9jKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGV4dFJhbmdlID0gZG9jLmJvZHkuY3JlYXRlVGV4dFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0UmFuZ2Uuc2VsZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRvY1NlbGVjdGlvbi5lbXB0eSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaChleCkge31cbiAgICAgICAgICAgIHVwZGF0ZUVtcHR5U2VsZWN0aW9uKHRoaXMpO1xuICAgICAgICB9O1xuXG4gICAgICAgIHNlbFByb3RvLmFkZFJhbmdlID0gZnVuY3Rpb24ocmFuZ2UpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmRvY1NlbGVjdGlvbi50eXBlID09IENPTlRST0wpIHtcbiAgICAgICAgICAgICAgICBhZGRSYW5nZVRvQ29udHJvbFNlbGVjdGlvbih0aGlzLCByYW5nZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIFdyYXBwZWRSYW5nZS5yYW5nZVRvVGV4dFJhbmdlKHJhbmdlKS5zZWxlY3QoKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9yYW5nZXNbMF0gPSByYW5nZTtcbiAgICAgICAgICAgICAgICB0aGlzLnJhbmdlQ291bnQgPSAxO1xuICAgICAgICAgICAgICAgIHRoaXMuaXNDb2xsYXBzZWQgPSB0aGlzLl9yYW5nZXNbMF0uY29sbGFwc2VkO1xuICAgICAgICAgICAgICAgIHVwZGF0ZUFuY2hvckFuZEZvY3VzRnJvbVJhbmdlKHRoaXMsIHJhbmdlLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgc2VsUHJvdG8uc2V0UmFuZ2VzID0gZnVuY3Rpb24ocmFuZ2VzKSB7XG4gICAgICAgICAgICB0aGlzLnJlbW92ZUFsbFJhbmdlcygpO1xuICAgICAgICAgICAgdmFyIHJhbmdlQ291bnQgPSByYW5nZXMubGVuZ3RoO1xuICAgICAgICAgICAgaWYgKHJhbmdlQ291bnQgPiAxKSB7XG4gICAgICAgICAgICAgICAgY3JlYXRlQ29udHJvbFNlbGVjdGlvbih0aGlzLCByYW5nZXMpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChyYW5nZUNvdW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZGRSYW5nZShyYW5nZXNbMF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICAgIG1vZHVsZS5mYWlsKFwiTm8gbWVhbnMgb2Ygc2VsZWN0aW5nIGEgUmFuZ2Ugb3IgVGV4dFJhbmdlIHdhcyBmb3VuZFwiKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHNlbFByb3RvLmdldFJhbmdlQXQgPSBmdW5jdGlvbihpbmRleCkge1xuICAgICAgICBpZiAoaW5kZXggPCAwIHx8IGluZGV4ID49IHRoaXMucmFuZ2VDb3VudCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IERPTUV4Y2VwdGlvbihcIklOREVYX1NJWkVfRVJSXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3Jhbmdlc1tpbmRleF07XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgdmFyIHJlZnJlc2hTZWxlY3Rpb247XG5cbiAgICBpZiAodXNlRG9jdW1lbnRTZWxlY3Rpb24pIHtcbiAgICAgICAgcmVmcmVzaFNlbGVjdGlvbiA9IGZ1bmN0aW9uKHNlbCkge1xuICAgICAgICAgICAgdmFyIHJhbmdlO1xuICAgICAgICAgICAgaWYgKGFwaS5pc1NlbGVjdGlvblZhbGlkKHNlbC53aW4pKSB7XG4gICAgICAgICAgICAgICAgcmFuZ2UgPSBzZWwuZG9jU2VsZWN0aW9uLmNyZWF0ZVJhbmdlKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJhbmdlID0gZG9tLmdldEJvZHkoc2VsLndpbi5kb2N1bWVudCkuY3JlYXRlVGV4dFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgcmFuZ2UuY29sbGFwc2UodHJ1ZSk7XG4gICAgICAgICAgICB9XG5cblxuICAgICAgICAgICAgaWYgKHNlbC5kb2NTZWxlY3Rpb24udHlwZSA9PSBDT05UUk9MKSB7XG4gICAgICAgICAgICAgICAgdXBkYXRlQ29udHJvbFNlbGVjdGlvbihzZWwpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChpc1RleHRSYW5nZShyYW5nZSkpIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVGcm9tVGV4dFJhbmdlKHNlbCwgcmFuZ2UpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB1cGRhdGVFbXB0eVNlbGVjdGlvbihzZWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0gZWxzZSBpZiAodXRpbC5pc0hvc3RNZXRob2QodGVzdFNlbGVjdGlvbiwgXCJnZXRSYW5nZUF0XCIpICYmIHR5cGVvZiB0ZXN0U2VsZWN0aW9uLnJhbmdlQ291bnQgPT0gXCJudW1iZXJcIikge1xuICAgICAgICByZWZyZXNoU2VsZWN0aW9uID0gZnVuY3Rpb24oc2VsKSB7XG4gICAgICAgICAgICBpZiAoaW1wbGVtZW50c0NvbnRyb2xSYW5nZSAmJiBpbXBsZW1lbnRzRG9jU2VsZWN0aW9uICYmIHNlbC5kb2NTZWxlY3Rpb24udHlwZSA9PSBDT05UUk9MKSB7XG4gICAgICAgICAgICAgICAgdXBkYXRlQ29udHJvbFNlbGVjdGlvbihzZWwpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZWwuX3Jhbmdlcy5sZW5ndGggPSBzZWwucmFuZ2VDb3VudCA9IHNlbC5uYXRpdmVTZWxlY3Rpb24ucmFuZ2VDb3VudDtcbiAgICAgICAgICAgICAgICBpZiAoc2VsLnJhbmdlQ291bnQpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHNlbC5yYW5nZUNvdW50OyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbC5fcmFuZ2VzW2ldID0gbmV3IGFwaS5XcmFwcGVkUmFuZ2Uoc2VsLm5hdGl2ZVNlbGVjdGlvbi5nZXRSYW5nZUF0KGkpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB1cGRhdGVBbmNob3JBbmRGb2N1c0Zyb21SYW5nZShzZWwsIHNlbC5fcmFuZ2VzW3NlbC5yYW5nZUNvdW50IC0gMV0sIHNlbGVjdGlvbklzQmFja3dhcmRzKHNlbC5uYXRpdmVTZWxlY3Rpb24pKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsLmlzQ29sbGFwc2VkID0gc2VsZWN0aW9uSXNDb2xsYXBzZWQoc2VsKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVFbXB0eVNlbGVjdGlvbihzZWwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9IGVsc2UgaWYgKHNlbGVjdGlvbkhhc0FuY2hvckFuZEZvY3VzICYmIHR5cGVvZiB0ZXN0U2VsZWN0aW9uLmlzQ29sbGFwc2VkID09IEJPT0xFQU4gJiYgdHlwZW9mIHRlc3RSYW5nZS5jb2xsYXBzZWQgPT0gQk9PTEVBTiAmJiBhcGkuZmVhdHVyZXMuaW1wbGVtZW50c0RvbVJhbmdlKSB7XG4gICAgICAgIHJlZnJlc2hTZWxlY3Rpb24gPSBmdW5jdGlvbihzZWwpIHtcbiAgICAgICAgICAgIHZhciByYW5nZSwgbmF0aXZlU2VsID0gc2VsLm5hdGl2ZVNlbGVjdGlvbjtcbiAgICAgICAgICAgIGlmIChuYXRpdmVTZWwuYW5jaG9yTm9kZSkge1xuICAgICAgICAgICAgICAgIHJhbmdlID0gZ2V0U2VsZWN0aW9uUmFuZ2VBdChuYXRpdmVTZWwsIDApO1xuICAgICAgICAgICAgICAgIHNlbC5fcmFuZ2VzID0gW3JhbmdlXTtcbiAgICAgICAgICAgICAgICBzZWwucmFuZ2VDb3VudCA9IDE7XG4gICAgICAgICAgICAgICAgdXBkYXRlQW5jaG9yQW5kRm9jdXNGcm9tTmF0aXZlU2VsZWN0aW9uKHNlbCk7XG4gICAgICAgICAgICAgICAgc2VsLmlzQ29sbGFwc2VkID0gc2VsZWN0aW9uSXNDb2xsYXBzZWQoc2VsKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdXBkYXRlRW1wdHlTZWxlY3Rpb24oc2VsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBtb2R1bGUuZmFpbChcIk5vIG1lYW5zIG9mIG9idGFpbmluZyBhIFJhbmdlIG9yIFRleHRSYW5nZSBmcm9tIHRoZSB1c2VyJ3Mgc2VsZWN0aW9uIHdhcyBmb3VuZFwiKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHNlbFByb3RvLnJlZnJlc2ggPSBmdW5jdGlvbihjaGVja0ZvckNoYW5nZXMpIHtcbiAgICAgICAgdmFyIG9sZFJhbmdlcyA9IGNoZWNrRm9yQ2hhbmdlcyA/IHRoaXMuX3Jhbmdlcy5zbGljZSgwKSA6IG51bGw7XG4gICAgICAgIHJlZnJlc2hTZWxlY3Rpb24odGhpcyk7XG4gICAgICAgIGlmIChjaGVja0ZvckNoYW5nZXMpIHtcbiAgICAgICAgICAgIHZhciBpID0gb2xkUmFuZ2VzLmxlbmd0aDtcbiAgICAgICAgICAgIGlmIChpICE9IHRoaXMuX3Jhbmdlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB3aGlsZSAoaS0tKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFEb21SYW5nZS5yYW5nZXNFcXVhbChvbGRSYW5nZXNbaV0sIHRoaXMuX3Jhbmdlc1tpXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIFJlbW92YWwgb2YgYSBzaW5nbGUgcmFuZ2VcbiAgICB2YXIgcmVtb3ZlUmFuZ2VNYW51YWxseSA9IGZ1bmN0aW9uKHNlbCwgcmFuZ2UpIHtcbiAgICAgICAgdmFyIHJhbmdlcyA9IHNlbC5nZXRBbGxSYW5nZXMoKSwgcmVtb3ZlZCA9IGZhbHNlO1xuICAgICAgICBzZWwucmVtb3ZlQWxsUmFuZ2VzKCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSByYW5nZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgIGlmIChyZW1vdmVkIHx8IHJhbmdlICE9PSByYW5nZXNbaV0pIHtcbiAgICAgICAgICAgICAgICBzZWwuYWRkUmFuZ2UocmFuZ2VzW2ldKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gQWNjb3JkaW5nIHRvIHRoZSBkcmFmdCBXSEFUV0cgUmFuZ2Ugc3BlYywgdGhlIHNhbWUgcmFuZ2UgbWF5IGJlIGFkZGVkIHRvIHRoZSBzZWxlY3Rpb24gbXVsdGlwbGVcbiAgICAgICAgICAgICAgICAvLyB0aW1lcy4gcmVtb3ZlUmFuZ2Ugc2hvdWxkIG9ubHkgcmVtb3ZlIHRoZSBmaXJzdCBpbnN0YW5jZSwgc28gdGhlIGZvbGxvd2luZyBlbnN1cmVzIG9ubHkgdGhlIGZpcnN0XG4gICAgICAgICAgICAgICAgLy8gaW5zdGFuY2UgaXMgcmVtb3ZlZFxuICAgICAgICAgICAgICAgIHJlbW92ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghc2VsLnJhbmdlQ291bnQpIHtcbiAgICAgICAgICAgIHVwZGF0ZUVtcHR5U2VsZWN0aW9uKHNlbCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgaWYgKGltcGxlbWVudHNDb250cm9sUmFuZ2UpIHtcbiAgICAgICAgc2VsUHJvdG8ucmVtb3ZlUmFuZ2UgPSBmdW5jdGlvbihyYW5nZSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuZG9jU2VsZWN0aW9uLnR5cGUgPT0gQ09OVFJPTCkge1xuICAgICAgICAgICAgICAgIHZhciBjb250cm9sUmFuZ2UgPSB0aGlzLmRvY1NlbGVjdGlvbi5jcmVhdGVSYW5nZSgpO1xuICAgICAgICAgICAgICAgIHZhciByYW5nZUVsZW1lbnQgPSBnZXRTaW5nbGVFbGVtZW50RnJvbVJhbmdlKHJhbmdlKTtcblxuICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBhIG5ldyBDb250cm9sUmFuZ2UgY29udGFpbmluZyBhbGwgdGhlIGVsZW1lbnRzIGluIHRoZSBzZWxlY3RlZCBDb250cm9sUmFuZ2UgbWludXMgdGhlXG4gICAgICAgICAgICAgICAgLy8gZWxlbWVudCBjb250YWluZWQgYnkgdGhlIHN1cHBsaWVkIHJhbmdlXG4gICAgICAgICAgICAgICAgdmFyIGRvYyA9IGRvbS5nZXREb2N1bWVudChjb250cm9sUmFuZ2UuaXRlbSgwKSk7XG4gICAgICAgICAgICAgICAgdmFyIG5ld0NvbnRyb2xSYW5nZSA9IGRvbS5nZXRCb2R5KGRvYykuY3JlYXRlQ29udHJvbFJhbmdlKCk7XG4gICAgICAgICAgICAgICAgdmFyIGVsLCByZW1vdmVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGNvbnRyb2xSYW5nZS5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgICAgICAgICAgICAgICBlbCA9IGNvbnRyb2xSYW5nZS5pdGVtKGkpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZWwgIT09IHJhbmdlRWxlbWVudCB8fCByZW1vdmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdDb250cm9sUmFuZ2UuYWRkKGNvbnRyb2xSYW5nZS5pdGVtKGkpKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlbW92ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG5ld0NvbnRyb2xSYW5nZS5zZWxlY3QoKTtcblxuICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSB0aGUgd3JhcHBlZCBzZWxlY3Rpb24gYmFzZWQgb24gd2hhdCdzIG5vdyBpbiB0aGUgbmF0aXZlIHNlbGVjdGlvblxuICAgICAgICAgICAgICAgIHVwZGF0ZUNvbnRyb2xTZWxlY3Rpb24odGhpcyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlbW92ZVJhbmdlTWFudWFsbHkodGhpcywgcmFuZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHNlbFByb3RvLnJlbW92ZVJhbmdlID0gZnVuY3Rpb24ocmFuZ2UpIHtcbiAgICAgICAgICAgIHJlbW92ZVJhbmdlTWFudWFsbHkodGhpcywgcmFuZ2UpO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8vIERldGVjdGluZyBpZiBhIHNlbGVjdGlvbiBpcyBiYWNrd2FyZHNcbiAgICB2YXIgc2VsZWN0aW9uSXNCYWNrd2FyZHM7XG4gICAgaWYgKCF1c2VEb2N1bWVudFNlbGVjdGlvbiAmJiBzZWxlY3Rpb25IYXNBbmNob3JBbmRGb2N1cyAmJiBhcGkuZmVhdHVyZXMuaW1wbGVtZW50c0RvbVJhbmdlKSB7XG4gICAgICAgIHNlbGVjdGlvbklzQmFja3dhcmRzID0gZnVuY3Rpb24oc2VsKSB7XG4gICAgICAgICAgICB2YXIgYmFja3dhcmRzID0gZmFsc2U7XG4gICAgICAgICAgICBpZiAoc2VsLmFuY2hvck5vZGUpIHtcbiAgICAgICAgICAgICAgICBiYWNrd2FyZHMgPSAoZG9tLmNvbXBhcmVQb2ludHMoc2VsLmFuY2hvck5vZGUsIHNlbC5hbmNob3JPZmZzZXQsIHNlbC5mb2N1c05vZGUsIHNlbC5mb2N1c09mZnNldCkgPT0gMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYmFja3dhcmRzO1xuICAgICAgICB9O1xuXG4gICAgICAgIHNlbFByb3RvLmlzQmFja3dhcmRzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gc2VsZWN0aW9uSXNCYWNrd2FyZHModGhpcyk7XG4gICAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgICAgc2VsZWN0aW9uSXNCYWNrd2FyZHMgPSBzZWxQcm90by5pc0JhY2t3YXJkcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8vIFNlbGVjdGlvbiB0ZXh0XG4gICAgLy8gVGhpcyBpcyBjb25mb3JtYW50IHRvIHRoZSBuZXcgV0hBVFdHIERPTSBSYW5nZSBkcmFmdCBzcGVjIGJ1dCBkaWZmZXJzIGZyb20gV2ViS2l0IGFuZCBNb3ppbGxhJ3MgaW1wbGVtZW50YXRpb25cbiAgICBzZWxQcm90by50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICAgIHZhciByYW5nZVRleHRzID0gW107XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB0aGlzLnJhbmdlQ291bnQ7IGkgPCBsZW47ICsraSkge1xuICAgICAgICAgICAgcmFuZ2VUZXh0c1tpXSA9IFwiXCIgKyB0aGlzLl9yYW5nZXNbaV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJhbmdlVGV4dHMuam9pbihcIlwiKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gYXNzZXJ0Tm9kZUluU2FtZURvY3VtZW50KHNlbCwgbm9kZSkge1xuICAgICAgICBpZiAoc2VsLmFuY2hvck5vZGUgJiYgKGRvbS5nZXREb2N1bWVudChzZWwuYW5jaG9yTm9kZSkgIT09IGRvbS5nZXREb2N1bWVudChub2RlKSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBET01FeGNlcHRpb24oXCJXUk9OR19ET0NVTUVOVF9FUlJcIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBObyBjdXJyZW50IGJyb3dzZXJzIGNvbmZvcm0gZnVsbHkgdG8gdGhlIEhUTUwgNSBkcmFmdCBzcGVjIGZvciB0aGlzIG1ldGhvZCwgc28gUmFuZ3kncyBvd24gbWV0aG9kIGlzIGFsd2F5cyB1c2VkXG4gICAgc2VsUHJvdG8uY29sbGFwc2UgPSBmdW5jdGlvbihub2RlLCBvZmZzZXQpIHtcbiAgICAgICAgYXNzZXJ0Tm9kZUluU2FtZURvY3VtZW50KHRoaXMsIG5vZGUpO1xuICAgICAgICB2YXIgcmFuZ2UgPSBhcGkuY3JlYXRlUmFuZ2UoZG9tLmdldERvY3VtZW50KG5vZGUpKTtcbiAgICAgICAgcmFuZ2UuY29sbGFwc2VUb1BvaW50KG5vZGUsIG9mZnNldCk7XG4gICAgICAgIHRoaXMucmVtb3ZlQWxsUmFuZ2VzKCk7XG4gICAgICAgIHRoaXMuYWRkUmFuZ2UocmFuZ2UpO1xuICAgICAgICB0aGlzLmlzQ29sbGFwc2VkID0gdHJ1ZTtcbiAgICB9O1xuXG4gICAgc2VsUHJvdG8uY29sbGFwc2VUb1N0YXJ0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLnJhbmdlQ291bnQpIHtcbiAgICAgICAgICAgIHZhciByYW5nZSA9IHRoaXMuX3Jhbmdlc1swXTtcbiAgICAgICAgICAgIHRoaXMuY29sbGFwc2UocmFuZ2Uuc3RhcnRDb250YWluZXIsIHJhbmdlLnN0YXJ0T2Zmc2V0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBET01FeGNlcHRpb24oXCJJTlZBTElEX1NUQVRFX0VSUlwiKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBzZWxQcm90by5jb2xsYXBzZVRvRW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLnJhbmdlQ291bnQpIHtcbiAgICAgICAgICAgIHZhciByYW5nZSA9IHRoaXMuX3Jhbmdlc1t0aGlzLnJhbmdlQ291bnQgLSAxXTtcbiAgICAgICAgICAgIHRoaXMuY29sbGFwc2UocmFuZ2UuZW5kQ29udGFpbmVyLCByYW5nZS5lbmRPZmZzZXQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IERPTUV4Y2VwdGlvbihcIklOVkFMSURfU1RBVEVfRVJSXCIpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIFRoZSBIVE1MIDUgc3BlYyBpcyB2ZXJ5IHNwZWNpZmljIG9uIGhvdyBzZWxlY3RBbGxDaGlsZHJlbiBzaG91bGQgYmUgaW1wbGVtZW50ZWQgc28gdGhlIG5hdGl2ZSBpbXBsZW1lbnRhdGlvbiBpc1xuICAgIC8vIG5ldmVyIHVzZWQgYnkgUmFuZ3kuXG4gICAgc2VsUHJvdG8uc2VsZWN0QWxsQ2hpbGRyZW4gPSBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgIGFzc2VydE5vZGVJblNhbWVEb2N1bWVudCh0aGlzLCBub2RlKTtcbiAgICAgICAgdmFyIHJhbmdlID0gYXBpLmNyZWF0ZVJhbmdlKGRvbS5nZXREb2N1bWVudChub2RlKSk7XG4gICAgICAgIHJhbmdlLnNlbGVjdE5vZGVDb250ZW50cyhub2RlKTtcbiAgICAgICAgdGhpcy5yZW1vdmVBbGxSYW5nZXMoKTtcbiAgICAgICAgdGhpcy5hZGRSYW5nZShyYW5nZSk7XG4gICAgfTtcblxuICAgIHNlbFByb3RvLmRlbGV0ZUZyb21Eb2N1bWVudCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyBTZXBjaWFsIGJlaGF2aW91ciByZXF1aXJlZCBmb3IgQ29udHJvbCBzZWxlY3Rpb25zXG4gICAgICAgIGlmIChpbXBsZW1lbnRzQ29udHJvbFJhbmdlICYmIGltcGxlbWVudHNEb2NTZWxlY3Rpb24gJiYgdGhpcy5kb2NTZWxlY3Rpb24udHlwZSA9PSBDT05UUk9MKSB7XG4gICAgICAgICAgICB2YXIgY29udHJvbFJhbmdlID0gdGhpcy5kb2NTZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKTtcbiAgICAgICAgICAgIHZhciBlbGVtZW50O1xuICAgICAgICAgICAgd2hpbGUgKGNvbnRyb2xSYW5nZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBlbGVtZW50ID0gY29udHJvbFJhbmdlLml0ZW0oMCk7XG4gICAgICAgICAgICAgICAgY29udHJvbFJhbmdlLnJlbW92ZShlbGVtZW50KTtcbiAgICAgICAgICAgICAgICBlbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZWxlbWVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnJlZnJlc2goKTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnJhbmdlQ291bnQpIHtcbiAgICAgICAgICAgIHZhciByYW5nZXMgPSB0aGlzLmdldEFsbFJhbmdlcygpO1xuICAgICAgICAgICAgdGhpcy5yZW1vdmVBbGxSYW5nZXMoKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSByYW5nZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgICAgICByYW5nZXNbaV0uZGVsZXRlQ29udGVudHMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFRoZSBIVE1MNSBzcGVjIHNheXMgbm90aGluZyBhYm91dCB3aGF0IHRoZSBzZWxlY3Rpb24gc2hvdWxkIGNvbnRhaW4gYWZ0ZXIgY2FsbGluZyBkZWxldGVDb250ZW50cyBvbiBlYWNoXG4gICAgICAgICAgICAvLyByYW5nZS4gRmlyZWZveCBtb3ZlcyB0aGUgc2VsZWN0aW9uIHRvIHdoZXJlIHRoZSBmaW5hbCBzZWxlY3RlZCByYW5nZSB3YXMsIHNvIHdlIGVtdWxhdGUgdGhhdFxuICAgICAgICAgICAgdGhpcy5hZGRSYW5nZShyYW5nZXNbbGVuIC0gMV0pO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlIG5vbi1zdGFuZGFyZCBleHRlbnNpb25zXG4gICAgc2VsUHJvdG8uZ2V0QWxsUmFuZ2VzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yYW5nZXMuc2xpY2UoMCk7XG4gICAgfTtcblxuICAgIHNlbFByb3RvLnNldFNpbmdsZVJhbmdlID0gZnVuY3Rpb24ocmFuZ2UpIHtcbiAgICAgICAgdGhpcy5zZXRSYW5nZXMoIFtyYW5nZV0gKTtcbiAgICB9O1xuXG4gICAgc2VsUHJvdG8uY29udGFpbnNOb2RlID0gZnVuY3Rpb24obm9kZSwgYWxsb3dQYXJ0aWFsKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB0aGlzLl9yYW5nZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9yYW5nZXNbaV0uY29udGFpbnNOb2RlKG5vZGUsIGFsbG93UGFydGlhbCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcblxuICAgIHNlbFByb3RvLnRvSHRtbCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgaHRtbCA9IFwiXCI7XG4gICAgICAgIGlmICh0aGlzLnJhbmdlQ291bnQpIHtcbiAgICAgICAgICAgIHZhciBjb250YWluZXIgPSBEb21SYW5nZS5nZXRSYW5nZURvY3VtZW50KHRoaXMuX3Jhbmdlc1swXSkuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB0aGlzLl9yYW5nZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgICAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQodGhpcy5fcmFuZ2VzW2ldLmNsb25lQ29udGVudHMoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBodG1sID0gY29udGFpbmVyLmlubmVySFRNTDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaHRtbDtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gaW5zcGVjdChzZWwpIHtcbiAgICAgICAgdmFyIHJhbmdlSW5zcGVjdHMgPSBbXTtcbiAgICAgICAgdmFyIGFuY2hvciA9IG5ldyBEb21Qb3NpdGlvbihzZWwuYW5jaG9yTm9kZSwgc2VsLmFuY2hvck9mZnNldCk7XG4gICAgICAgIHZhciBmb2N1cyA9IG5ldyBEb21Qb3NpdGlvbihzZWwuZm9jdXNOb2RlLCBzZWwuZm9jdXNPZmZzZXQpO1xuICAgICAgICB2YXIgbmFtZSA9ICh0eXBlb2Ygc2VsLmdldE5hbWUgPT0gXCJmdW5jdGlvblwiKSA/IHNlbC5nZXROYW1lKCkgOiBcIlNlbGVjdGlvblwiO1xuXG4gICAgICAgIGlmICh0eXBlb2Ygc2VsLnJhbmdlQ291bnQgIT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHNlbC5yYW5nZUNvdW50OyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgICAgICByYW5nZUluc3BlY3RzW2ldID0gRG9tUmFuZ2UuaW5zcGVjdChzZWwuZ2V0UmFuZ2VBdChpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFwiW1wiICsgbmFtZSArIFwiKFJhbmdlczogXCIgKyByYW5nZUluc3BlY3RzLmpvaW4oXCIsIFwiKSArXG4gICAgICAgICAgICAgICAgXCIpKGFuY2hvcjogXCIgKyBhbmNob3IuaW5zcGVjdCgpICsgXCIsIGZvY3VzOiBcIiArIGZvY3VzLmluc3BlY3QoKSArIFwiXVwiO1xuXG4gICAgfVxuXG4gICAgc2VsUHJvdG8uZ2V0TmFtZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gXCJXcmFwcGVkU2VsZWN0aW9uXCI7XG4gICAgfTtcblxuICAgIHNlbFByb3RvLmluc3BlY3QgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGluc3BlY3QodGhpcyk7XG4gICAgfTtcblxuICAgIHNlbFByb3RvLmRldGFjaCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGlzLndpblt3aW5kb3dQcm9wZXJ0eU5hbWVdID0gbnVsbDtcbiAgICAgICAgdGhpcy53aW4gPSB0aGlzLmFuY2hvck5vZGUgPSB0aGlzLmZvY3VzTm9kZSA9IG51bGw7XG4gICAgfTtcblxuICAgIFdyYXBwZWRTZWxlY3Rpb24uaW5zcGVjdCA9IGluc3BlY3Q7XG5cbiAgICBhcGkuU2VsZWN0aW9uID0gV3JhcHBlZFNlbGVjdGlvbjtcblxuICAgIGFwaS5zZWxlY3Rpb25Qcm90b3R5cGUgPSBzZWxQcm90bztcblxuICAgIGFwaS5hZGRDcmVhdGVNaXNzaW5nTmF0aXZlQXBpTGlzdGVuZXIoZnVuY3Rpb24od2luKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygd2luLmdldFNlbGVjdGlvbiA9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB3aW4uZ2V0U2VsZWN0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXRTZWxlY3Rpb24odGhpcyk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHdpbiA9IG51bGw7XG4gICAgfSk7XG59KTtcbi8qXG5cdEJhc2UuanMsIHZlcnNpb24gMS4xYVxuXHRDb3B5cmlnaHQgMjAwNi0yMDEwLCBEZWFuIEVkd2FyZHNcblx0TGljZW5zZTogaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiovXG5cbnZhciBCYXNlID0gZnVuY3Rpb24oKSB7XG5cdC8vIGR1bW15XG59O1xuXG5CYXNlLmV4dGVuZCA9IGZ1bmN0aW9uKF9pbnN0YW5jZSwgX3N0YXRpYykgeyAvLyBzdWJjbGFzc1xuXHR2YXIgZXh0ZW5kID0gQmFzZS5wcm90b3R5cGUuZXh0ZW5kO1xuXHRcblx0Ly8gYnVpbGQgdGhlIHByb3RvdHlwZVxuXHRCYXNlLl9wcm90b3R5cGluZyA9IHRydWU7XG5cdHZhciBwcm90byA9IG5ldyB0aGlzO1xuXHRleHRlbmQuY2FsbChwcm90bywgX2luc3RhbmNlKTtcbiAgcHJvdG8uYmFzZSA9IGZ1bmN0aW9uKCkge1xuICAgIC8vIGNhbGwgdGhpcyBtZXRob2QgZnJvbSBhbnkgb3RoZXIgbWV0aG9kIHRvIGludm9rZSB0aGF0IG1ldGhvZCdzIGFuY2VzdG9yXG4gIH07XG5cdGRlbGV0ZSBCYXNlLl9wcm90b3R5cGluZztcblx0XG5cdC8vIGNyZWF0ZSB0aGUgd3JhcHBlciBmb3IgdGhlIGNvbnN0cnVjdG9yIGZ1bmN0aW9uXG5cdC8vdmFyIGNvbnN0cnVjdG9yID0gcHJvdG8uY29uc3RydWN0b3IudmFsdWVPZigpOyAvLy1kZWFuXG5cdHZhciBjb25zdHJ1Y3RvciA9IHByb3RvLmNvbnN0cnVjdG9yO1xuXHR2YXIga2xhc3MgPSBwcm90by5jb25zdHJ1Y3RvciA9IGZ1bmN0aW9uKCkge1xuXHRcdGlmICghQmFzZS5fcHJvdG90eXBpbmcpIHtcblx0XHRcdGlmICh0aGlzLl9jb25zdHJ1Y3RpbmcgfHwgdGhpcy5jb25zdHJ1Y3RvciA9PSBrbGFzcykgeyAvLyBpbnN0YW50aWF0aW9uXG5cdFx0XHRcdHRoaXMuX2NvbnN0cnVjdGluZyA9IHRydWU7XG5cdFx0XHRcdGNvbnN0cnVjdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG5cdFx0XHRcdGRlbGV0ZSB0aGlzLl9jb25zdHJ1Y3Rpbmc7XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ3VtZW50c1swXSAhPSBudWxsKSB7IC8vIGNhc3Rpbmdcblx0XHRcdFx0cmV0dXJuIChhcmd1bWVudHNbMF0uZXh0ZW5kIHx8IGV4dGVuZCkuY2FsbChhcmd1bWVudHNbMF0sIHByb3RvKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdFxuXHQvLyBidWlsZCB0aGUgY2xhc3MgaW50ZXJmYWNlXG5cdGtsYXNzLmFuY2VzdG9yID0gdGhpcztcblx0a2xhc3MuZXh0ZW5kID0gdGhpcy5leHRlbmQ7XG5cdGtsYXNzLmZvckVhY2ggPSB0aGlzLmZvckVhY2g7XG5cdGtsYXNzLmltcGxlbWVudCA9IHRoaXMuaW1wbGVtZW50O1xuXHRrbGFzcy5wcm90b3R5cGUgPSBwcm90bztcblx0a2xhc3MudG9TdHJpbmcgPSB0aGlzLnRvU3RyaW5nO1xuXHRrbGFzcy52YWx1ZU9mID0gZnVuY3Rpb24odHlwZSkge1xuXHRcdC8vcmV0dXJuICh0eXBlID09IFwib2JqZWN0XCIpID8ga2xhc3MgOiBjb25zdHJ1Y3RvcjsgLy8tZGVhblxuXHRcdHJldHVybiAodHlwZSA9PSBcIm9iamVjdFwiKSA/IGtsYXNzIDogY29uc3RydWN0b3IudmFsdWVPZigpO1xuXHR9O1xuXHRleHRlbmQuY2FsbChrbGFzcywgX3N0YXRpYyk7XG5cdC8vIGNsYXNzIGluaXRpYWxpc2F0aW9uXG5cdGlmICh0eXBlb2Yga2xhc3MuaW5pdCA9PSBcImZ1bmN0aW9uXCIpIGtsYXNzLmluaXQoKTtcblx0cmV0dXJuIGtsYXNzO1xufTtcblxuQmFzZS5wcm90b3R5cGUgPSB7XHRcblx0ZXh0ZW5kOiBmdW5jdGlvbihzb3VyY2UsIHZhbHVlKSB7XG5cdFx0aWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7IC8vIGV4dGVuZGluZyB3aXRoIGEgbmFtZS92YWx1ZSBwYWlyXG5cdFx0XHR2YXIgYW5jZXN0b3IgPSB0aGlzW3NvdXJjZV07XG5cdFx0XHRpZiAoYW5jZXN0b3IgJiYgKHR5cGVvZiB2YWx1ZSA9PSBcImZ1bmN0aW9uXCIpICYmIC8vIG92ZXJyaWRpbmcgYSBtZXRob2Q/XG5cdFx0XHRcdC8vIHRoZSB2YWx1ZU9mKCkgY29tcGFyaXNvbiBpcyB0byBhdm9pZCBjaXJjdWxhciByZWZlcmVuY2VzXG5cdFx0XHRcdCghYW5jZXN0b3IudmFsdWVPZiB8fCBhbmNlc3Rvci52YWx1ZU9mKCkgIT0gdmFsdWUudmFsdWVPZigpKSAmJlxuXHRcdFx0XHQvXFxiYmFzZVxcYi8udGVzdCh2YWx1ZSkpIHtcblx0XHRcdFx0Ly8gZ2V0IHRoZSB1bmRlcmx5aW5nIG1ldGhvZFxuXHRcdFx0XHR2YXIgbWV0aG9kID0gdmFsdWUudmFsdWVPZigpO1xuXHRcdFx0XHQvLyBvdmVycmlkZVxuXHRcdFx0XHR2YWx1ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHZhciBwcmV2aW91cyA9IHRoaXMuYmFzZSB8fCBCYXNlLnByb3RvdHlwZS5iYXNlO1xuXHRcdFx0XHRcdHRoaXMuYmFzZSA9IGFuY2VzdG9yO1xuXHRcdFx0XHRcdHZhciByZXR1cm5WYWx1ZSA9IG1ldGhvZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdFx0XHRcdHRoaXMuYmFzZSA9IHByZXZpb3VzO1xuXHRcdFx0XHRcdHJldHVybiByZXR1cm5WYWx1ZTtcblx0XHRcdFx0fTtcblx0XHRcdFx0Ly8gcG9pbnQgdG8gdGhlIHVuZGVybHlpbmcgbWV0aG9kXG5cdFx0XHRcdHZhbHVlLnZhbHVlT2YgPSBmdW5jdGlvbih0eXBlKSB7XG5cdFx0XHRcdFx0cmV0dXJuICh0eXBlID09IFwib2JqZWN0XCIpID8gdmFsdWUgOiBtZXRob2Q7XG5cdFx0XHRcdH07XG5cdFx0XHRcdHZhbHVlLnRvU3RyaW5nID0gQmFzZS50b1N0cmluZztcblx0XHRcdH1cblx0XHRcdHRoaXNbc291cmNlXSA9IHZhbHVlO1xuXHRcdH0gZWxzZSBpZiAoc291cmNlKSB7IC8vIGV4dGVuZGluZyB3aXRoIGFuIG9iamVjdCBsaXRlcmFsXG5cdFx0XHR2YXIgZXh0ZW5kID0gQmFzZS5wcm90b3R5cGUuZXh0ZW5kO1xuXHRcdFx0Ly8gaWYgdGhpcyBvYmplY3QgaGFzIGEgY3VzdG9taXNlZCBleHRlbmQgbWV0aG9kIHRoZW4gdXNlIGl0XG5cdFx0XHRpZiAoIUJhc2UuX3Byb3RvdHlwaW5nICYmIHR5cGVvZiB0aGlzICE9IFwiZnVuY3Rpb25cIikge1xuXHRcdFx0XHRleHRlbmQgPSB0aGlzLmV4dGVuZCB8fCBleHRlbmQ7XG5cdFx0XHR9XG5cdFx0XHR2YXIgcHJvdG8gPSB7dG9Tb3VyY2U6IG51bGx9O1xuXHRcdFx0Ly8gZG8gdGhlIFwidG9TdHJpbmdcIiBhbmQgb3RoZXIgbWV0aG9kcyBtYW51YWxseVxuXHRcdFx0dmFyIGhpZGRlbiA9IFtcImNvbnN0cnVjdG9yXCIsIFwidG9TdHJpbmdcIiwgXCJ2YWx1ZU9mXCJdO1xuXHRcdFx0Ly8gaWYgd2UgYXJlIHByb3RvdHlwaW5nIHRoZW4gaW5jbHVkZSB0aGUgY29uc3RydWN0b3Jcblx0XHRcdHZhciBpID0gQmFzZS5fcHJvdG90eXBpbmcgPyAwIDogMTtcblx0XHRcdHdoaWxlIChrZXkgPSBoaWRkZW5baSsrXSkge1xuXHRcdFx0XHRpZiAoc291cmNlW2tleV0gIT0gcHJvdG9ba2V5XSkge1xuXHRcdFx0XHRcdGV4dGVuZC5jYWxsKHRoaXMsIGtleSwgc291cmNlW2tleV0pO1xuXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdC8vIGNvcHkgZWFjaCBvZiB0aGUgc291cmNlIG9iamVjdCdzIHByb3BlcnRpZXMgdG8gdGhpcyBvYmplY3Rcblx0XHRcdGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcblx0XHRcdFx0aWYgKCFwcm90b1trZXldKSBleHRlbmQuY2FsbCh0aGlzLCBrZXksIHNvdXJjZVtrZXldKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cbn07XG5cbi8vIGluaXRpYWxpc2VcbkJhc2UgPSBCYXNlLmV4dGVuZCh7XG5cdGNvbnN0cnVjdG9yOiBmdW5jdGlvbigpIHtcblx0XHR0aGlzLmV4dGVuZChhcmd1bWVudHNbMF0pO1xuXHR9XG59LCB7XG5cdGFuY2VzdG9yOiBPYmplY3QsXG5cdHZlcnNpb246IFwiMS4xXCIsXG5cdFxuXHRmb3JFYWNoOiBmdW5jdGlvbihvYmplY3QsIGJsb2NrLCBjb250ZXh0KSB7XG5cdFx0Zm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuXHRcdFx0aWYgKHRoaXMucHJvdG90eXBlW2tleV0gPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0XHRibG9jay5jYWxsKGNvbnRleHQsIG9iamVjdFtrZXldLCBrZXksIG9iamVjdCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXHRcdFxuXHRpbXBsZW1lbnQ6IGZ1bmN0aW9uKCkge1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRpZiAodHlwZW9mIGFyZ3VtZW50c1tpXSA9PSBcImZ1bmN0aW9uXCIpIHtcblx0XHRcdFx0Ly8gaWYgaXQncyBhIGZ1bmN0aW9uLCBjYWxsIGl0XG5cdFx0XHRcdGFyZ3VtZW50c1tpXSh0aGlzLnByb3RvdHlwZSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHQvLyBhZGQgdGhlIGludGVyZmFjZSB1c2luZyB0aGUgZXh0ZW5kIG1ldGhvZFxuXHRcdFx0XHR0aGlzLnByb3RvdHlwZS5leHRlbmQoYXJndW1lbnRzW2ldKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cdFxuXHR0b1N0cmluZzogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIFN0cmluZyh0aGlzLnZhbHVlT2YoKSk7XG5cdH1cbn0pOy8qKlxuICogRGV0ZWN0IGJyb3dzZXIgc3VwcG9ydCBmb3Igc3BlY2lmaWMgZmVhdHVyZXNcbiAqL1xud3lzaWh0bWw1LmJyb3dzZXIgPSAoZnVuY3Rpb24oKSB7XG4gIHZhciB1c2VyQWdlbnQgICA9IG5hdmlnYXRvci51c2VyQWdlbnQsXG4gICAgICB0ZXN0RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksXG4gICAgICAvLyBCcm93c2VyIHNuaWZmaW5nIGlzIHVuZm9ydHVuYXRlbHkgbmVlZGVkIHNpbmNlIHNvbWUgYmVoYXZpb3JzIGFyZSBpbXBvc3NpYmxlIHRvIGZlYXR1cmUgZGV0ZWN0XG4gICAgICBpc0lFICAgICAgICA9IHVzZXJBZ2VudC5pbmRleE9mKFwiTVNJRVwiKSAgICAgICAgICE9PSAtMSAmJiB1c2VyQWdlbnQuaW5kZXhPZihcIk9wZXJhXCIpID09PSAtMSxcbiAgICAgIGlzR2Vja28gICAgID0gdXNlckFnZW50LmluZGV4T2YoXCJHZWNrb1wiKSAgICAgICAgIT09IC0xICYmIHVzZXJBZ2VudC5pbmRleE9mKFwiS0hUTUxcIikgPT09IC0xLFxuICAgICAgaXNXZWJLaXQgICAgPSB1c2VyQWdlbnQuaW5kZXhPZihcIkFwcGxlV2ViS2l0L1wiKSAhPT0gLTEsXG4gICAgICBpc0Nocm9tZSAgICA9IHVzZXJBZ2VudC5pbmRleE9mKFwiQ2hyb21lL1wiKSAgICAgICE9PSAtMSxcbiAgICAgIGlzT3BlcmEgICAgID0gdXNlckFnZW50LmluZGV4T2YoXCJPcGVyYS9cIikgICAgICAgIT09IC0xO1xuICBcbiAgZnVuY3Rpb24gaW9zVmVyc2lvbih1c2VyQWdlbnQpIHtcbiAgICByZXR1cm4gKygoL2lwYWR8aXBob25lfGlwb2QvLnRlc3QodXNlckFnZW50KSAmJiB1c2VyQWdlbnQubWF0Y2goLyBvcyAoXFxkKykuKz8gbGlrZSBtYWMgb3MgeC8pKSB8fCBbLCAwXSlbMV07XG4gIH1cbiAgXG4gIGZ1bmN0aW9uIGFuZHJvaWRWZXJzaW9uKHVzZXJBZ2VudCkge1xuICAgIHJldHVybiArKHVzZXJBZ2VudC5tYXRjaCgvYW5kcm9pZCAoXFxkKykvKSB8fCBbLCAwXSlbMV07XG4gIH1cbiAgXG4gIHJldHVybiB7XG4gICAgLy8gU3RhdGljIHZhcmlhYmxlIG5lZWRlZCwgcHVibGljbHkgYWNjZXNzaWJsZSwgdG8gYmUgYWJsZSBvdmVycmlkZSBpdCBpbiB1bml0IHRlc3RzXG4gICAgVVNFUl9BR0VOVDogdXNlckFnZW50LFxuICAgIFxuICAgIC8qKlxuICAgICAqIEV4Y2x1ZGUgYnJvd3NlcnMgdGhhdCBhcmUgbm90IGNhcGFibGUgb2YgZGlzcGxheWluZyBhbmQgaGFuZGxpbmdcbiAgICAgKiBjb250ZW50RWRpdGFibGUgYXMgZGVzaXJlZDpcbiAgICAgKiAgICAtIGlQaG9uZSwgaVBhZCAodGVzdGVkIGlPUyA0LjIuMikgYW5kIEFuZHJvaWQgKHRlc3RlZCAyLjIpIHJlZnVzZSB0byBtYWtlIGNvbnRlbnRFZGl0YWJsZXMgZm9jdXNhYmxlXG4gICAgICogICAgLSBJRSA8IDggY3JlYXRlIGludmFsaWQgbWFya3VwIGFuZCBjcmFzaCByYW5kb21seSBmcm9tIHRpbWUgdG8gdGltZVxuICAgICAqXG4gICAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICAgKi9cbiAgICBzdXBwb3J0ZWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHVzZXJBZ2VudCAgICAgICAgICAgICAgICAgICA9IHRoaXMuVVNFUl9BR0VOVC50b0xvd2VyQ2FzZSgpLFxuICAgICAgICAgIC8vIEVzc2VudGlhbCBmb3IgbWFraW5nIGh0bWwgZWxlbWVudHMgZWRpdGFibGVcbiAgICAgICAgICBoYXNDb250ZW50RWRpdGFibGVTdXBwb3J0ICAgPSBcImNvbnRlbnRFZGl0YWJsZVwiIGluIHRlc3RFbGVtZW50LFxuICAgICAgICAgIC8vIEZvbGxvd2luZyBtZXRob2RzIGFyZSBuZWVkZWQgaW4gb3JkZXIgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgY29udGVudEVkaXRhYmxlIGFyZWFcbiAgICAgICAgICBoYXNFZGl0aW5nQXBpU3VwcG9ydCAgICAgICAgPSBkb2N1bWVudC5leGVjQ29tbWFuZCAmJiBkb2N1bWVudC5xdWVyeUNvbW1hbmRTdXBwb3J0ZWQgJiYgZG9jdW1lbnQucXVlcnlDb21tYW5kU3RhdGUsXG4gICAgICAgICAgLy8gZG9jdW1lbnQgc2VsZWN0b3IgYXBpcyBhcmUgb25seSBzdXBwb3J0ZWQgYnkgSUUgOCssIFNhZmFyaSA0KywgQ2hyb21lIGFuZCBGaXJlZm94IDMuNStcbiAgICAgICAgICBoYXNRdWVyeVNlbGVjdG9yU3VwcG9ydCAgICAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yICYmIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwsXG4gICAgICAgICAgLy8gY29udGVudEVkaXRhYmxlIGlzIHVudXNhYmxlIGluIG1vYmlsZSBicm93c2VycyAodGVzdGVkIGlPUyA0LjIuMiwgQW5kcm9pZCAyLjIsIE9wZXJhIE1vYmlsZSwgV2ViT1MgMy4wNSlcbiAgICAgICAgICBpc0luY29tcGF0aWJsZU1vYmlsZUJyb3dzZXIgPSAodGhpcy5pc0lvcygpICYmIGlvc1ZlcnNpb24odXNlckFnZW50KSA8IDUpIHx8ICh0aGlzLmlzQW5kcm9pZCgpICYmIGFuZHJvaWRWZXJzaW9uKHVzZXJBZ2VudCkgPCA0KSB8fCB1c2VyQWdlbnQuaW5kZXhPZihcIm9wZXJhIG1vYmlcIikgIT09IC0xIHx8IHVzZXJBZ2VudC5pbmRleE9mKFwiaHB3b3MvXCIpICE9PSAtMTtcbiAgICAgIHJldHVybiBoYXNDb250ZW50RWRpdGFibGVTdXBwb3J0XG4gICAgICAgICYmIGhhc0VkaXRpbmdBcGlTdXBwb3J0XG4gICAgICAgICYmIGhhc1F1ZXJ5U2VsZWN0b3JTdXBwb3J0XG4gICAgICAgICYmICFpc0luY29tcGF0aWJsZU1vYmlsZUJyb3dzZXI7XG4gICAgfSxcbiAgICBcbiAgICBpc1RvdWNoRGV2aWNlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLnN1cHBvcnRzRXZlbnQoXCJ0b3VjaG1vdmVcIik7XG4gICAgfSxcbiAgICBcbiAgICBpc0lvczogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gKC9pcGFkfGlwaG9uZXxpcG9kL2kpLnRlc3QodGhpcy5VU0VSX0FHRU5UKTtcbiAgICB9LFxuICAgIFxuICAgIGlzQW5kcm9pZDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5VU0VSX0FHRU5ULmluZGV4T2YoXCJBbmRyb2lkXCIpICE9PSAtMTtcbiAgICB9LFxuICAgIFxuICAgIC8qKlxuICAgICAqIFdoZXRoZXIgdGhlIGJyb3dzZXIgc3VwcG9ydHMgc2FuZGJveGVkIGlmcmFtZXNcbiAgICAgKiBDdXJyZW50bHkgb25seSBJRSA2KyBvZmZlcnMgc3VjaCBmZWF0dXJlIDxpZnJhbWUgc2VjdXJpdHk9XCJyZXN0cmljdGVkXCI+XG4gICAgICpcbiAgICAgKiBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvbXM1MzQ2MjIodj12cy44NSkuYXNweFxuICAgICAqIGh0dHA6Ly9ibG9ncy5tc2RuLmNvbS9iL2llL2FyY2hpdmUvMjAwOC8wMS8xOC91c2luZy1mcmFtZXMtbW9yZS1zZWN1cmVseS5hc3B4XG4gICAgICpcbiAgICAgKiBIVE1MNSBzYW5kYm94ZWQgaWZyYW1lcyBhcmUgc3RpbGwgYnVnZ3kgYW5kIHRoZWlyIERPTSBpcyBub3QgcmVhY2hhYmxlIGZyb20gdGhlIG91dHNpZGUgKGV4Y2VwdCB3aGVuIHVzaW5nIHBvc3RNZXNzYWdlKVxuICAgICAqL1xuICAgIHN1cHBvcnRzU2FuZGJveGVkSWZyYW1lczogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gaXNJRTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogSUU2KzcgdGhyb3cgYSBtaXhlZCBjb250ZW50IHdhcm5pbmcgd2hlbiB0aGUgc3JjIG9mIGFuIGlmcmFtZVxuICAgICAqIGlzIGVtcHR5L3Vuc2V0IG9yIGFib3V0OmJsYW5rXG4gICAgICogd2luZG93LnF1ZXJ5U2VsZWN0b3IgaXMgaW1wbGVtZW50ZWQgYXMgb2YgSUU4XG4gICAgICovXG4gICAgdGhyb3dzTWl4ZWRDb250ZW50V2FybmluZ1doZW5JZnJhbWVTcmNJc0VtcHR5OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAhKFwicXVlcnlTZWxlY3RvclwiIGluIGRvY3VtZW50KTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogV2hldGhlciB0aGUgY2FyZXQgaXMgY29ycmVjdGx5IGRpc3BsYXllZCBpbiBjb250ZW50RWRpdGFibGUgZWxlbWVudHNcbiAgICAgKiBGaXJlZm94IHNvbWV0aW1lcyBzaG93cyBhIGh1Z2UgY2FyZXQgaW4gdGhlIGJlZ2lubmluZyBhZnRlciBmb2N1c2luZ1xuICAgICAqL1xuICAgIGRpc3BsYXlzQ2FyZXRJbkVtcHR5Q29udGVudEVkaXRhYmxlQ29ycmVjdGx5OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpc0lFO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBPcGVyYSBhbmQgSUUgYXJlIHRoZSBvbmx5IGJyb3dzZXJzIHdobyBvZmZlciB0aGUgY3NzIHZhbHVlXG4gICAgICogaW4gdGhlIG9yaWdpbmFsIHVuaXQsIHRoeCB0byB0aGUgY3VycmVudFN0eWxlIG9iamVjdFxuICAgICAqIEFsbCBvdGhlciBicm93c2VycyBwcm92aWRlIHRoZSBjb21wdXRlZCBzdHlsZSBpbiBweCB2aWEgd2luZG93LmdldENvbXB1dGVkU3R5bGVcbiAgICAgKi9cbiAgICBoYXNDdXJyZW50U3R5bGVQcm9wZXJ0eTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gXCJjdXJyZW50U3R5bGVcIiBpbiB0ZXN0RWxlbWVudDtcbiAgICB9LFxuICAgIFxuICAgIC8qKlxuICAgICAqIEZpcmVmb3ggb24gT1NYIG5hdmlnYXRlcyB0aHJvdWdoIGhpc3Rvcnkgd2hlbiBoaXR0aW5nIENNRCArIEFycm93IHJpZ2h0L2xlZnRcbiAgICAgKi9cbiAgICBoYXNIaXN0b3J5SXNzdWU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGlzR2Vja28gJiYgbmF2aWdhdG9yLnBsYXRmb3JtLnN1YnN0cigwLCAzKSA9PT0gXCJNYWNcIjtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogV2hldGhlciB0aGUgYnJvd3NlciBpbnNlcnRzIGEgPGJyPiB3aGVuIHByZXNzaW5nIGVudGVyIGluIGEgY29udGVudEVkaXRhYmxlIGVsZW1lbnRcbiAgICAgKi9cbiAgICBpbnNlcnRzTGluZUJyZWFrc09uUmV0dXJuOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpc0dlY2tvO1xuICAgIH0sXG5cbiAgICBzdXBwb3J0c1BsYWNlaG9sZGVyQXR0cmlidXRlT246IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgIHJldHVybiBcInBsYWNlaG9sZGVyXCIgaW4gZWxlbWVudDtcbiAgICB9LFxuXG4gICAgc3VwcG9ydHNFdmVudDogZnVuY3Rpb24oZXZlbnROYW1lKSB7XG4gICAgICByZXR1cm4gXCJvblwiICsgZXZlbnROYW1lIGluIHRlc3RFbGVtZW50IHx8IChmdW5jdGlvbigpIHtcbiAgICAgICAgdGVzdEVsZW1lbnQuc2V0QXR0cmlidXRlKFwib25cIiArIGV2ZW50TmFtZSwgXCJyZXR1cm47XCIpO1xuICAgICAgICByZXR1cm4gdHlwZW9mKHRlc3RFbGVtZW50W1wib25cIiArIGV2ZW50TmFtZV0pID09PSBcImZ1bmN0aW9uXCI7XG4gICAgICB9KSgpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBPcGVyYSBkb2Vzbid0IGNvcnJlY3RseSBmaXJlIGZvY3VzL2JsdXIgZXZlbnRzIHdoZW4gY2xpY2tpbmcgaW4tIGFuZCBvdXRzaWRlIG9mIGlmcmFtZVxuICAgICAqL1xuICAgIHN1cHBvcnRzRXZlbnRzSW5JZnJhbWVDb3JyZWN0bHk6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuICFpc09wZXJhO1xuICAgIH0sXG4gICAgXG4gICAgLyoqXG4gICAgICogRXZlcnl0aGluZyBiZWxvdyBJRTkgZG9lc24ndCBrbm93IGhvdyB0byB0cmVhdCBIVE1MNSB0YWdzXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gY29udGV4dCBUaGUgZG9jdW1lbnQgb2JqZWN0IG9uIHdoaWNoIHRvIGNoZWNrIEhUTUw1IHN1cHBvcnRcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogICAgd3lzaWh0bWw1LmJyb3dzZXIuc3VwcG9ydHNIVE1MNVRhZ3MoZG9jdW1lbnQpO1xuICAgICAqL1xuICAgIHN1cHBvcnRzSFRNTDVUYWdzOiBmdW5jdGlvbihjb250ZXh0KSB7XG4gICAgICB2YXIgZWxlbWVudCA9IGNvbnRleHQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxcbiAgICAgICAgICBodG1sNSAgID0gXCI8YXJ0aWNsZT5mb288L2FydGljbGU+XCI7XG4gICAgICBlbGVtZW50LmlubmVySFRNTCA9IGh0bWw1O1xuICAgICAgcmV0dXJuIGVsZW1lbnQuaW5uZXJIVE1MLnRvTG93ZXJDYXNlKCkgPT09IGh0bWw1O1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBDaGVja3Mgd2hldGhlciBhIGRvY3VtZW50IHN1cHBvcnRzIGEgY2VydGFpbiBxdWVyeUNvbW1hbmRcbiAgICAgKiBJbiBwYXJ0aWN1bGFyLCBPcGVyYSBuZWVkcyBhIHJlZmVyZW5jZSB0byBhIGRvY3VtZW50IHRoYXQgaGFzIGEgY29udGVudEVkaXRhYmxlIGluIGl0J3MgZG9tIHRyZWVcbiAgICAgKiBpbiBvZGVyIHRvIHJlcG9ydCBjb3JyZWN0IHJlc3VsdHNcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkb2MgRG9jdW1lbnQgb2JqZWN0IG9uIHdoaWNoIHRvIGNoZWNrIGZvciBhIHF1ZXJ5IGNvbW1hbmRcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gY29tbWFuZCBUaGUgcXVlcnkgY29tbWFuZCB0byBjaGVjayBmb3JcbiAgICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiAgICB3eXNpaHRtbDUuYnJvd3Nlci5zdXBwb3J0c0NvbW1hbmQoZG9jdW1lbnQsIFwiYm9sZFwiKTtcbiAgICAgKi9cbiAgICBzdXBwb3J0c0NvbW1hbmQ6IChmdW5jdGlvbigpIHtcbiAgICAgIC8vIEZvbGxvd2luZyBjb21tYW5kcyBhcmUgc3VwcG9ydGVkIGJ1dCBjb250YWluIGJ1Z3MgaW4gc29tZSBicm93c2Vyc1xuICAgICAgdmFyIGJ1Z2d5Q29tbWFuZHMgPSB7XG4gICAgICAgIC8vIGZvcm1hdEJsb2NrIGZhaWxzIHdpdGggc29tZSB0YWdzIChlZy4gPGJsb2NrcXVvdGU+KVxuICAgICAgICBcImZvcm1hdEJsb2NrXCI6ICAgICAgICAgIGlzSUUsXG4gICAgICAgICAvLyBXaGVuIGluc2VydGluZyB1bm9yZGVyZWQgb3Igb3JkZXJlZCBsaXN0cyBpbiBGaXJlZm94LCBDaHJvbWUgb3IgU2FmYXJpLCB0aGUgY3VycmVudCBzZWxlY3Rpb24gb3IgbGluZSBnZXRzXG4gICAgICAgICAvLyBjb252ZXJ0ZWQgaW50byBhIGxpc3QgKDx1bD48bGk+Li4uPC9saT48L3VsPiwgPG9sPjxsaT4uLi48L2xpPjwvb2w+KVxuICAgICAgICAgLy8gSUUgYW5kIE9wZXJhIGFjdCBhIGJpdCBkaWZmZXJlbnQgaGVyZSBhcyB0aGV5IGNvbnZlcnQgdGhlIGVudGlyZSBjb250ZW50IG9mIHRoZSBjdXJyZW50IGJsb2NrIGVsZW1lbnQgaW50byBhIGxpc3RcbiAgICAgICAgXCJpbnNlcnRVbm9yZGVyZWRMaXN0XCI6ICBpc0lFIHx8IGlzV2ViS2l0LFxuICAgICAgICBcImluc2VydE9yZGVyZWRMaXN0XCI6ICAgIGlzSUUgfHwgaXNXZWJLaXRcbiAgICAgIH07XG4gICAgICBcbiAgICAgIC8vIEZpcmVmb3ggdGhyb3dzIGVycm9ycyBmb3IgcXVlcnlDb21tYW5kU3VwcG9ydGVkLCBzbyB3ZSBoYXZlIHRvIGJ1aWxkIHVwIG91ciBvd24gb2JqZWN0IG9mIHN1cHBvcnRlZCBjb21tYW5kc1xuICAgICAgdmFyIHN1cHBvcnRlZCA9IHtcbiAgICAgICAgXCJpbnNlcnRIVE1MXCI6IGlzR2Vja29cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBmdW5jdGlvbihkb2MsIGNvbW1hbmQpIHtcbiAgICAgICAgdmFyIGlzQnVnZ3kgPSBidWdneUNvbW1hbmRzW2NvbW1hbmRdO1xuICAgICAgICBpZiAoIWlzQnVnZ3kpIHtcbiAgICAgICAgICAvLyBGaXJlZm94IHRocm93cyBlcnJvcnMgd2hlbiBpbnZva2luZyBxdWVyeUNvbW1hbmRTdXBwb3J0ZWQgb3IgcXVlcnlDb21tYW5kRW5hYmxlZFxuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gZG9jLnF1ZXJ5Q29tbWFuZFN1cHBvcnRlZChjb21tYW5kKTtcbiAgICAgICAgICB9IGNhdGNoKGUxKSB7fVxuXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBkb2MucXVlcnlDb21tYW5kRW5hYmxlZChjb21tYW5kKTtcbiAgICAgICAgICB9IGNhdGNoKGUyKSB7XG4gICAgICAgICAgICByZXR1cm4gISFzdXBwb3J0ZWRbY29tbWFuZF07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH07XG4gICAgfSkoKSxcblxuICAgIC8qKlxuICAgICAqIElFOiBVUkxzIHN0YXJ0aW5nIHdpdGg6XG4gICAgICogICAgd3d3LiwgaHR0cDovLywgaHR0cHM6Ly8sIGZ0cDovLywgZ29waGVyOi8vLCBtYWlsdG86LCBuZXc6LCBzbmV3czosIHRlbG5ldDosIHdhc2lzOiwgZmlsZTovLyxcbiAgICAgKiAgICBubnRwOi8vLCBuZXdzcmM6LCBsZGFwOi8vLCBsZGFwczovLywgb3V0bG9vazosIG1pYzovLyBhbmQgdXJsOlxuICAgICAqIHdpbGwgYXV0b21hdGljYWxseSBiZSBhdXRvLWxpbmtlZCB3aGVuIGVpdGhlciB0aGUgdXNlciBpbnNlcnRzIHRoZW0gdmlhIGNvcHkmcGFzdGUgb3IgcHJlc3NlcyB0aGVcbiAgICAgKiBzcGFjZSBiYXIgd2hlbiB0aGUgY2FyZXQgaXMgZGlyZWN0bHkgYWZ0ZXIgc3VjaCBhbiB1cmwuXG4gICAgICogVGhpcyBiZWhhdmlvciBjYW5ub3QgZWFzaWx5IGJlIGF2b2lkZWQgaW4gSUUgPCA5IHNpbmNlIHRoZSBsb2dpYyBpcyBoYXJkY29kZWQgaW4gdGhlIG1zaHRtbC5kbGxcbiAgICAgKiAocmVsYXRlZCBibG9nIHBvc3Qgb24gbXNkblxuICAgICAqIGh0dHA6Ly9ibG9ncy5tc2RuLmNvbS9iL2llaW50ZXJuYWxzL2FyY2hpdmUvMjAwOS8wOS8xNy9wcmV2ZW50LWF1dG9tYXRpYy1oeXBlcmxpbmtpbmctaW4tY29udGVudGVkaXRhYmxlLWh0bWwuYXNweCkuXG4gICAgICovXG4gICAgZG9lc0F1dG9MaW5raW5nSW5Db250ZW50RWRpdGFibGU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGlzSUU7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEFzIHN0YXRlZCBhYm92ZSwgSUUgYXV0byBsaW5rcyB1cmxzIHR5cGVkIGludG8gY29udGVudEVkaXRhYmxlIGVsZW1lbnRzXG4gICAgICogU2luY2UgSUU5IGl0J3MgcG9zc2libGUgdG8gcHJldmVudCB0aGlzIGJlaGF2aW9yXG4gICAgICovXG4gICAgY2FuRGlzYWJsZUF1dG9MaW5raW5nOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLnN1cHBvcnRzQ29tbWFuZChkb2N1bWVudCwgXCJBdXRvVXJsRGV0ZWN0XCIpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBJRSBsZWF2ZXMgYW4gZW1wdHkgcGFyYWdyYXBoIGluIHRoZSBjb250ZW50RWRpdGFibGUgZWxlbWVudCBhZnRlciBjbGVhcmluZyBpdFxuICAgICAqIENocm9tZS9TYWZhcmkgc29tZXRpbWVzIGFuIGVtcHR5IDxkaXY+XG4gICAgICovXG4gICAgY2xlYXJzQ29udGVudEVkaXRhYmxlQ29ycmVjdGx5OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpc0dlY2tvIHx8IGlzT3BlcmEgfHwgaXNXZWJLaXQ7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIElFIGdpdmVzIHdyb25nIHJlc3VsdHMgZm9yIGdldEF0dHJpYnV0ZVxuICAgICAqL1xuICAgIHN1cHBvcnRzR2V0QXR0cmlidXRlQ29ycmVjdGx5OiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB0ZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZFwiKTtcbiAgICAgIHJldHVybiB0ZC5nZXRBdHRyaWJ1dGUoXCJyb3dzcGFuXCIpICE9IFwiMVwiO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBXaGVuIGNsaWNraW5nIG9uIGltYWdlcyBpbiBJRSwgT3BlcmEgYW5kIEZpcmVmb3gsIHRoZXkgYXJlIHNlbGVjdGVkLCB3aGljaCBtYWtlcyBpdCBlYXN5IHRvIGludGVyYWN0IHdpdGggdGhlbS5cbiAgICAgKiBDaHJvbWUgYW5kIFNhZmFyaSBib3RoIGRvbid0IHN1cHBvcnQgdGhpc1xuICAgICAqL1xuICAgIGNhblNlbGVjdEltYWdlc0luQ29udGVudEVkaXRhYmxlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpc0dlY2tvIHx8IGlzSUUgfHwgaXNPcGVyYTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQWxsIGJyb3dzZXJzIGV4Y2VwdCBTYWZhcmkgYW5kIENocm9tZSBhdXRvbWF0aWNhbGx5IHNjcm9sbCB0aGUgcmFuZ2UvY2FyZXQgcG9zaXRpb24gaW50byB2aWV3XG4gICAgICovXG4gICAgYXV0b1Njcm9sbHNUb0NhcmV0OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAhaXNXZWJLaXQ7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIENoZWNrIHdoZXRoZXIgdGhlIGJyb3dzZXIgYXV0b21hdGljYWxseSBjbG9zZXMgdGFncyB0aGF0IGRvbid0IG5lZWQgdG8gYmUgb3BlbmVkXG4gICAgICovXG4gICAgYXV0b0Nsb3Nlc1VuY2xvc2VkVGFnczogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgY2xvbmVkVGVzdEVsZW1lbnQgPSB0ZXN0RWxlbWVudC5jbG9uZU5vZGUoZmFsc2UpLFxuICAgICAgICAgIHJldHVyblZhbHVlLFxuICAgICAgICAgIGlubmVySFRNTDtcblxuICAgICAgY2xvbmVkVGVzdEVsZW1lbnQuaW5uZXJIVE1MID0gXCI8cD48ZGl2PjwvZGl2PlwiO1xuICAgICAgaW5uZXJIVE1MICAgICAgICAgICAgICAgICAgID0gY2xvbmVkVGVzdEVsZW1lbnQuaW5uZXJIVE1MLnRvTG93ZXJDYXNlKCk7XG4gICAgICByZXR1cm5WYWx1ZSAgICAgICAgICAgICAgICAgPSBpbm5lckhUTUwgPT09IFwiPHA+PC9wPjxkaXY+PC9kaXY+XCIgfHwgaW5uZXJIVE1MID09PSBcIjxwPjxkaXY+PC9kaXY+PC9wPlwiO1xuXG4gICAgICAvLyBDYWNoZSByZXN1bHQgYnkgb3ZlcndyaXRpbmcgY3VycmVudCBmdW5jdGlvblxuICAgICAgdGhpcy5hdXRvQ2xvc2VzVW5jbG9zZWRUYWdzID0gZnVuY3Rpb24oKSB7IHJldHVybiByZXR1cm5WYWx1ZTsgfTtcblxuICAgICAgcmV0dXJuIHJldHVyblZhbHVlO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBXaGV0aGVyIHRoZSBicm93c2VyIHN1cHBvcnRzIHRoZSBuYXRpdmUgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSB3aGljaCByZXR1cm5zIGxpdmUgTm9kZUxpc3RzXG4gICAgICovXG4gICAgc3VwcG9ydHNOYXRpdmVHZXRFbGVtZW50c0J5Q2xhc3NOYW1lOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBTdHJpbmcoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSkuaW5kZXhPZihcIltuYXRpdmUgY29kZV1cIikgIT09IC0xO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBBcyBvZiBub3cgKDE5LjA0LjIwMTEpIG9ubHkgc3VwcG9ydGVkIGJ5IEZpcmVmb3ggNCBhbmQgQ2hyb21lXG4gICAgICogU2VlIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL0RPTS9TZWxlY3Rpb24vbW9kaWZ5XG4gICAgICovXG4gICAgc3VwcG9ydHNTZWxlY3Rpb25Nb2RpZnk6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIFwiZ2V0U2VsZWN0aW9uXCIgaW4gd2luZG93ICYmIFwibW9kaWZ5XCIgaW4gd2luZG93LmdldFNlbGVjdGlvbigpO1xuICAgIH0sXG4gICAgXG4gICAgLyoqXG4gICAgICogT3BlcmEgbmVlZHMgYSB3aGl0ZSBzcGFjZSBhZnRlciBhIDxicj4gaW4gb3JkZXIgdG8gcG9zaXRpb24gdGhlIGNhcmV0IGNvcnJlY3RseVxuICAgICAqL1xuICAgIG5lZWRzU3BhY2VBZnRlckxpbmVCcmVhazogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gaXNPcGVyYTtcbiAgICB9LFxuICAgIFxuICAgIC8qKlxuICAgICAqIFdoZXRoZXIgdGhlIGJyb3dzZXIgc3VwcG9ydHMgdGhlIHNwZWVjaCBhcGkgb24gdGhlIGdpdmVuIGVsZW1lbnRcbiAgICAgKiBTZWUgaHR0cDovL21pa2VwdWx0ei5jb20vMjAxMS8wMy9hY2Nlc3NpbmctZ29vZ2xlLXNwZWVjaC1hcGktY2hyb21lLTExL1xuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiAgICB2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgICogICAgaWYgKHd5c2lodG1sNS5icm93c2VyLnN1cHBvcnRzU3BlZWNoQXBpT24oaW5wdXQpKSB7XG4gICAgICogICAgICAvLyAuLi5cbiAgICAgKiAgICB9XG4gICAgICovXG4gICAgc3VwcG9ydHNTcGVlY2hBcGlPbjogZnVuY3Rpb24oaW5wdXQpIHtcbiAgICAgIHZhciBjaHJvbWVWZXJzaW9uID0gdXNlckFnZW50Lm1hdGNoKC9DaHJvbWVcXC8oXFxkKykvKSB8fCBbLCAwXTtcbiAgICAgIHJldHVybiBjaHJvbWVWZXJzaW9uWzFdID49IDExICYmIChcIm9ud2Via2l0c3BlZWNoY2hhbmdlXCIgaW4gaW5wdXQgfHwgXCJzcGVlY2hcIiBpbiBpbnB1dCk7XG4gICAgfSxcbiAgICBcbiAgICAvKipcbiAgICAgKiBJRTkgY3Jhc2hlcyB3aGVuIHNldHRpbmcgYSBnZXR0ZXIgdmlhIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSBvbiBYTUxIdHRwUmVxdWVzdCBvciBYRG9tYWluUmVxdWVzdFxuICAgICAqIFNlZSBodHRwczovL2Nvbm5lY3QubWljcm9zb2Z0LmNvbS9pZS9mZWVkYmFjay9kZXRhaWxzLzY1MDExMlxuICAgICAqIG9yIHRyeSB0aGUgUE9DIGh0dHA6Ly90aWZmdGlmZi5kZS9pZTlfY3Jhc2gvXG4gICAgICovXG4gICAgY3Jhc2hlc1doZW5EZWZpbmVQcm9wZXJ0eTogZnVuY3Rpb24ocHJvcGVydHkpIHtcbiAgICAgIHJldHVybiBpc0lFICYmIChwcm9wZXJ0eSA9PT0gXCJYTUxIdHRwUmVxdWVzdFwiIHx8IHByb3BlcnR5ID09PSBcIlhEb21haW5SZXF1ZXN0XCIpO1xuICAgIH0sXG4gICAgXG4gICAgLyoqXG4gICAgICogSUUgaXMgdGhlIG9ubHkgYnJvd3NlciB3aG8gZmlyZXMgdGhlIFwiZm9jdXNcIiBldmVudCBub3QgaW1tZWRpYXRlbHkgd2hlbiAuZm9jdXMoKSBpcyBjYWxsZWQgb24gYW4gZWxlbWVudFxuICAgICAqL1xuICAgIGRvZXNBc3luY0ZvY3VzOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpc0lFO1xuICAgIH0sXG4gICAgXG4gICAgLyoqXG4gICAgICogSW4gSUUgaXQncyBpbXBzc2libGUgZm9yIHRoZSB1c2VyIGFuZCBmb3IgdGhlIHNlbGVjdGlvbiBsaWJyYXJ5IHRvIHNldCB0aGUgY2FyZXQgYWZ0ZXIgYW4gPGltZz4gd2hlbiBpdCdzIHRoZSBsYXN0Q2hpbGQgaW4gdGhlIGRvY3VtZW50XG4gICAgICovXG4gICAgaGFzUHJvYmxlbXNTZXR0aW5nQ2FyZXRBZnRlckltZzogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gaXNJRTtcbiAgICB9LFxuICAgIFxuICAgIGhhc1VuZG9JbkNvbnRleHRNZW51OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpc0dlY2tvIHx8IGlzQ2hyb21lIHx8IGlzT3BlcmE7XG4gICAgfSxcbiAgICBcbiAgICAvKipcbiAgICAgKiBPcGVyYSBzb21ldGltZXMgZG9lc24ndCBpbnNlcnQgdGhlIG5vZGUgYXQgdGhlIHJpZ2h0IHBvc2l0aW9uIHdoZW4gcmFuZ2UuaW5zZXJ0Tm9kZShzb21lTm9kZSlcbiAgICAgKiBpcyB1c2VkIChyZWdhcmRsZXNzIGlmIHJhbmd5IG9yIG5hdGl2ZSlcbiAgICAgKiBUaGlzIGVzcGVjaWFsbHkgaGFwcGVucyB3aGVuIHRoZSBjYXJldCBpcyBwb3NpdGlvbmVkIHJpZ2h0IGFmdGVyIGEgPGJyPiBiZWNhdXNlIHRoZW5cbiAgICAgKiBpbnNlcnROb2RlKCkgd2lsbCBpbnNlcnQgdGhlIG5vZGUgcmlnaHQgYmVmb3JlIHRoZSA8YnI+XG4gICAgICovXG4gICAgaGFzSW5zZXJ0Tm9kZUlzc3VlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpc09wZXJhO1xuICAgIH0sXG4gICAgXG4gICAgLyoqXG4gICAgICogSUUgOCs5IGRvbid0IGZpcmUgdGhlIGZvY3VzIGV2ZW50IG9mIHRoZSA8Ym9keT4gd2hlbiB0aGUgaWZyYW1lIGdldHMgZm9jdXNlZCAoZXZlbiB0aG91Z2ggdGhlIGNhcmV0IGdldHMgc2V0IGludG8gdGhlIDxib2R5PilcbiAgICAgKi9cbiAgICBoYXNJZnJhbWVGb2N1c0lzc3VlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBpc0lFO1xuICAgIH0sXG4gICAgXG4gICAgLyoqXG4gICAgICogQ2hyb21lICsgU2FmYXJpIGNyZWF0ZSBpbnZhbGlkIG5lc3RlZCBtYXJrdXAgYWZ0ZXIgcGFzdGVcbiAgICAgKiBcbiAgICAgKiAgPHA+XG4gICAgICogICAgZm9vXG4gICAgICogICAgPHA+YmFyPC9wPiA8IS0tIEJPTyEgLS0+XG4gICAgICogIDwvcD5cbiAgICAgKi9cbiAgICBjcmVhdGVzTmVzdGVkSW52YWxpZE1hcmt1cEFmdGVyUGFzdGU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGlzV2ViS2l0O1xuICAgIH1cbiAgfTtcbn0pKCk7d3lzaWh0bWw1LmxhbmcuYXJyYXkgPSBmdW5jdGlvbihhcnIpIHtcbiAgcmV0dXJuIHtcbiAgICAvKipcbiAgICAgKiBDaGVjayB3aGV0aGVyIGEgZ2l2ZW4gb2JqZWN0IGV4aXN0cyBpbiBhbiBhcnJheVxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiAgICB3eXNpaHRtbDUubGFuZy5hcnJheShbMSwgMl0pLmNvbnRhaW5zKDEpO1xuICAgICAqICAgIC8vID0+IHRydWVcbiAgICAgKi9cbiAgICBjb250YWluczogZnVuY3Rpb24obmVlZGxlKSB7XG4gICAgICBpZiAoYXJyLmluZGV4T2YpIHtcbiAgICAgICAgcmV0dXJuIGFyci5pbmRleE9mKG5lZWRsZSkgIT09IC0xO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yICh2YXIgaT0wLCBsZW5ndGg9YXJyLmxlbmd0aDsgaTxsZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmIChhcnJbaV0gPT09IG5lZWRsZSkgeyByZXR1cm4gdHJ1ZTsgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFxuICAgIC8qKlxuICAgICAqIFN1YnN0cmFjdCBvbmUgYXJyYXkgZnJvbSBhbm90aGVyXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqICAgIHd5c2lodG1sNS5sYW5nLmFycmF5KFsxLCAyLCAzLCA0XSkud2l0aG91dChbMywgNF0pO1xuICAgICAqICAgIC8vID0+IFsxLCAyXVxuICAgICAqL1xuICAgIHdpdGhvdXQ6IGZ1bmN0aW9uKGFycmF5VG9TdWJzdHJhY3QpIHtcbiAgICAgIGFycmF5VG9TdWJzdHJhY3QgPSB3eXNpaHRtbDUubGFuZy5hcnJheShhcnJheVRvU3Vic3RyYWN0KTtcbiAgICAgIHZhciBuZXdBcnIgID0gW10sXG4gICAgICAgICAgaSAgICAgICA9IDAsXG4gICAgICAgICAgbGVuZ3RoICA9IGFyci5sZW5ndGg7XG4gICAgICBmb3IgKDsgaTxsZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoIWFycmF5VG9TdWJzdHJhY3QuY29udGFpbnMoYXJyW2ldKSkge1xuICAgICAgICAgIG5ld0Fyci5wdXNoKGFycltpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBuZXdBcnI7XG4gICAgfSxcbiAgICBcbiAgICAvKipcbiAgICAgKiBSZXR1cm4gYSBjbGVhbiBuYXRpdmUgYXJyYXlcbiAgICAgKiBcbiAgICAgKiBGb2xsb3dpbmcgd2lsbCBjb252ZXJ0IGEgTGl2ZSBOb2RlTGlzdCB0byBhIHByb3BlciBBcnJheVxuICAgICAqIEBleGFtcGxlXG4gICAgICogICAgdmFyIGNoaWxkTm9kZXMgPSB3eXNpaHRtbDUubGFuZy5hcnJheShkb2N1bWVudC5ib2R5LmNoaWxkTm9kZXMpLmdldCgpO1xuICAgICAqL1xuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgaSAgICAgICAgPSAwLFxuICAgICAgICAgIGxlbmd0aCAgID0gYXJyLmxlbmd0aCxcbiAgICAgICAgICBuZXdBcnJheSA9IFtdO1xuICAgICAgZm9yICg7IGk8bGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbmV3QXJyYXkucHVzaChhcnJbaV0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ld0FycmF5O1xuICAgIH1cbiAgfTtcbn07d3lzaWh0bWw1LmxhbmcuRGlzcGF0Y2hlciA9IEJhc2UuZXh0ZW5kKFxuICAvKiogQHNjb3BlIHd5c2lodG1sNS5sYW5nLkRpYWxvZy5wcm90b3R5cGUgKi8ge1xuICBvbjogZnVuY3Rpb24oZXZlbnROYW1lLCBoYW5kbGVyKSB7XG4gICAgdGhpcy5ldmVudHMgPSB0aGlzLmV2ZW50cyB8fCB7fTtcbiAgICB0aGlzLmV2ZW50c1tldmVudE5hbWVdID0gdGhpcy5ldmVudHNbZXZlbnROYW1lXSB8fCBbXTtcbiAgICB0aGlzLmV2ZW50c1tldmVudE5hbWVdLnB1c2goaGFuZGxlcik7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG5cbiAgb2ZmOiBmdW5jdGlvbihldmVudE5hbWUsIGhhbmRsZXIpIHtcbiAgICB0aGlzLmV2ZW50cyA9IHRoaXMuZXZlbnRzIHx8IHt9O1xuICAgIHZhciBpID0gMCxcbiAgICAgICAgaGFuZGxlcnMsXG4gICAgICAgIG5ld0hhbmRsZXJzO1xuICAgIGlmIChldmVudE5hbWUpIHtcbiAgICAgIGhhbmRsZXJzICAgID0gdGhpcy5ldmVudHNbZXZlbnROYW1lXSB8fCBbXSxcbiAgICAgIG5ld0hhbmRsZXJzID0gW107XG4gICAgICBmb3IgKDsgaTxoYW5kbGVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoaGFuZGxlcnNbaV0gIT09IGhhbmRsZXIgJiYgaGFuZGxlcikge1xuICAgICAgICAgIG5ld0hhbmRsZXJzLnB1c2goaGFuZGxlcnNbaV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLmV2ZW50c1tldmVudE5hbWVdID0gbmV3SGFuZGxlcnM7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIENsZWFuIHVwIGFsbCBldmVudHNcbiAgICAgIHRoaXMuZXZlbnRzID0ge307XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9LFxuICBcbiAgZmlyZTogZnVuY3Rpb24oZXZlbnROYW1lLCBwYXlsb2FkKSB7XG4gICAgdGhpcy5ldmVudHMgPSB0aGlzLmV2ZW50cyB8fCB7fTtcbiAgICB2YXIgaGFuZGxlcnMgPSB0aGlzLmV2ZW50c1tldmVudE5hbWVdIHx8IFtdLFxuICAgICAgICBpICAgICAgICA9IDA7XG4gICAgZm9yICg7IGk8aGFuZGxlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGhhbmRsZXJzW2ldLmNhbGwodGhpcywgcGF5bG9hZCk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9LFxuICBcbiAgLy8gZGVwcmVjYXRlZCwgdXNlIC5vbigpXG4gIG9ic2VydmU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLm9uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH0sXG4gIFxuICAvLyBkZXByZWNhdGVkLCB1c2UgLm9mZigpXG4gIHN0b3BPYnNlcnZpbmc6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLm9mZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG59KTt3eXNpaHRtbDUubGFuZy5vYmplY3QgPSBmdW5jdGlvbihvYmopIHtcbiAgcmV0dXJuIHtcbiAgICAvKipcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqICAgIHd5c2lodG1sNS5sYW5nLm9iamVjdCh7IGZvbzogMSwgYmFyOiAxIH0pLm1lcmdlKHsgYmFyOiAyLCBiYXo6IDMgfSkuZ2V0KCk7XG4gICAgICogICAgLy8gPT4geyBmb286IDEsIGJhcjogMiwgYmF6OiAzIH1cbiAgICAgKi9cbiAgICBtZXJnZTogZnVuY3Rpb24ob3RoZXJPYmopIHtcbiAgICAgIGZvciAodmFyIGkgaW4gb3RoZXJPYmopIHtcbiAgICAgICAgb2JqW2ldID0gb3RoZXJPYmpbaV07XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuICAgIFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gb2JqO1xuICAgIH0sXG4gICAgXG4gICAgLyoqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiAgICB3eXNpaHRtbDUubGFuZy5vYmplY3QoeyBmb286IDEgfSkuY2xvbmUoKTtcbiAgICAgKiAgICAvLyA9PiB7IGZvbzogMSB9XG4gICAgICovXG4gICAgY2xvbmU6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIG5ld09iaiA9IHt9LFxuICAgICAgICAgIGk7XG4gICAgICBmb3IgKGkgaW4gb2JqKSB7XG4gICAgICAgIG5ld09ialtpXSA9IG9ialtpXTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBuZXdPYmo7XG4gICAgfSxcbiAgICBcbiAgICAvKipcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqICAgIHd5c2lodG1sNS5sYW5nLm9iamVjdChbXSkuaXNBcnJheSgpO1xuICAgICAqICAgIC8vID0+IHRydWVcbiAgICAgKi9cbiAgICBpc0FycmF5OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKSA9PT0gXCJbb2JqZWN0IEFycmF5XVwiO1xuICAgIH1cbiAgfTtcbn07KGZ1bmN0aW9uKCkge1xuICB2YXIgV0hJVEVfU1BBQ0VfU1RBUlQgPSAvXlxccysvLFxuICAgICAgV0hJVEVfU1BBQ0VfRU5EICAgPSAvXFxzKyQvLFxuICAgICAgRU5USVRZX1JFR19FWFAgICAgPSAvWyY8PlwiXS9nLFxuICAgICAgRU5USVRZX01BUCA9IHtcbiAgICAgICAgJyYnOiAnJmFtcDsnLFxuICAgICAgICAnPCc6ICcmbHQ7JyxcbiAgICAgICAgJz4nOiAnJmd0OycsXG4gICAgICAgICdcIic6IFwiJnF1b3Q7XCJcbiAgICAgIH07XG4gIHd5c2lodG1sNS5sYW5nLnN0cmluZyA9IGZ1bmN0aW9uKHN0cikge1xuICAgIHN0ciA9IFN0cmluZyhzdHIpO1xuICAgIHJldHVybiB7XG4gICAgICAvKipcbiAgICAgICAqIEBleGFtcGxlXG4gICAgICAgKiAgICB3eXNpaHRtbDUubGFuZy5zdHJpbmcoXCIgICBmb28gICBcIikudHJpbSgpO1xuICAgICAgICogICAgLy8gPT4gXCJmb29cIlxuICAgICAgICovXG4gICAgICB0cmltOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHN0ci5yZXBsYWNlKFdISVRFX1NQQUNFX1NUQVJULCBcIlwiKS5yZXBsYWNlKFdISVRFX1NQQUNFX0VORCwgXCJcIik7XG4gICAgICB9LFxuICAgICAgXG4gICAgICAvKipcbiAgICAgICAqIEBleGFtcGxlXG4gICAgICAgKiAgICB3eXNpaHRtbDUubGFuZy5zdHJpbmcoXCJIZWxsbyAje25hbWV9XCIpLmludGVycG9sYXRlKHsgbmFtZTogXCJDaHJpc3RvcGhlclwiIH0pO1xuICAgICAgICogICAgLy8gPT4gXCJIZWxsbyBDaHJpc3RvcGhlclwiXG4gICAgICAgKi9cbiAgICAgIGludGVycG9sYXRlOiBmdW5jdGlvbih2YXJzKSB7XG4gICAgICAgIGZvciAodmFyIGkgaW4gdmFycykge1xuICAgICAgICAgIHN0ciA9IHRoaXMucmVwbGFjZShcIiN7XCIgKyBpICsgXCJ9XCIpLmJ5KHZhcnNbaV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdHI7XG4gICAgICB9LFxuICAgICAgXG4gICAgICAvKipcbiAgICAgICAqIEBleGFtcGxlXG4gICAgICAgKiAgICB3eXNpaHRtbDUubGFuZy5zdHJpbmcoXCJIZWxsbyBUb21cIikucmVwbGFjZShcIlRvbVwiKS53aXRoKFwiSGFuc1wiKTtcbiAgICAgICAqICAgIC8vID0+IFwiSGVsbG8gSGFuc1wiXG4gICAgICAgKi9cbiAgICAgIHJlcGxhY2U6IGZ1bmN0aW9uKHNlYXJjaCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGJ5OiBmdW5jdGlvbihyZXBsYWNlKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RyLnNwbGl0KHNlYXJjaCkuam9pbihyZXBsYWNlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICB9LFxuICAgICAgXG4gICAgICAvKipcbiAgICAgICAqIEBleGFtcGxlXG4gICAgICAgKiAgICB3eXNpaHRtbDUubGFuZy5zdHJpbmcoXCJoZWxsbzxicj5cIikuZXNjYXBlSFRNTCgpO1xuICAgICAgICogICAgLy8gPT4gXCJoZWxsbyZsdDticiZndDtcIlxuICAgICAgICovXG4gICAgICBlc2NhcGVIVE1MOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHN0ci5yZXBsYWNlKEVOVElUWV9SRUdfRVhQLCBmdW5jdGlvbihjKSB7IHJldHVybiBFTlRJVFlfTUFQW2NdOyB9KTtcbiAgICAgIH1cbiAgICB9O1xuICB9O1xufSkoKTsvKipcbiAqIEZpbmQgdXJscyBpbiBkZXNjZW5kYW50IHRleHQgbm9kZXMgb2YgYW4gZWxlbWVudCBhbmQgYXV0by1saW5rcyB0aGVtXG4gKiBJbnNwaXJlZCBieSBodHRwOi8vamFtZXMucGFkb2xzZXkuY29tL2phdmFzY3JpcHQvZmluZC1hbmQtcmVwbGFjZS10ZXh0LXdpdGgtamF2YXNjcmlwdC9cbiAqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQgQ29udGFpbmVyIGVsZW1lbnQgaW4gd2hpY2ggdG8gc2VhcmNoIGZvciB1cmxzXG4gKlxuICogQGV4YW1wbGVcbiAqICAgIDxkaXYgaWQ9XCJ0ZXh0LWNvbnRhaW5lclwiPlBsZWFzZSBjbGljayBoZXJlOiB3d3cuZ29vZ2xlLmNvbTwvZGl2PlxuICogICAgPHNjcmlwdD53eXNpaHRtbDUuZG9tLmF1dG9MaW5rKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGV4dC1jb250YWluZXJcIikpOzwvc2NyaXB0PlxuICovXG4oZnVuY3Rpb24od3lzaWh0bWw1KSB7XG4gIHZhciAvKipcbiAgICAgICAqIERvbid0IGF1dG8tbGluayB1cmxzIHRoYXQgYXJlIGNvbnRhaW5lZCBpbiB0aGUgZm9sbG93aW5nIGVsZW1lbnRzOlxuICAgICAgICovXG4gICAgICBJR05PUkVfVVJMU19JTiAgICAgICAgPSB3eXNpaHRtbDUubGFuZy5hcnJheShbXCJDT0RFXCIsIFwiUFJFXCIsIFwiQVwiLCBcIlNDUklQVFwiLCBcIkhFQURcIiwgXCJUSVRMRVwiLCBcIlNUWUxFXCJdKSxcbiAgICAgIC8qKlxuICAgICAgICogcmV2aXNpb24gMTpcbiAgICAgICAqICAgIC8oXFxTK1xcLnsxfVteXFxzXFwsXFwuXFwhXSspL2dcbiAgICAgICAqXG4gICAgICAgKiByZXZpc2lvbiAyOlxuICAgICAgICogICAgLyhcXGIoKChodHRwcz98ZnRwKTpcXC9cXC8pfCh3d3dcXC4pKVstQS1aMC05KyZAI1xcLyU/PX5ffCE6LC47XFxbXFxdXSpbLUEtWjAtOSsmQCNcXC8lPX5ffF0pL2dpbVxuICAgICAgICpcbiAgICAgICAqIHB1dCB0aGlzIGluIHRoZSBiZWdpbm5pbmcgaWYgeW91IGRvbid0IHdhbid0IHRvIG1hdGNoIHdpdGhpbiBhIHdvcmRcbiAgICAgICAqICAgIChefFtcXD5cXChcXHtcXFtcXHNcXD5dKVxuICAgICAgICovXG4gICAgICBVUkxfUkVHX0VYUCAgICAgICAgICAgPSAvKChodHRwcz86XFwvXFwvfHd3d1xcLilbXlxcczxdezMsfSkvZ2ksXG4gICAgICBUUkFJTElOR19DSEFSX1JFR19FWFAgPSAvKFteXFx3XFwvXFwtXSgsPykpJC9pLFxuICAgICAgTUFYX0RJU1BMQVlfTEVOR1RIICAgID0gMTAwLFxuICAgICAgQlJBQ0tFVFMgICAgICAgICAgICAgID0geyBcIilcIjogXCIoXCIsIFwiXVwiOiBcIltcIiwgXCJ9XCI6IFwie1wiIH07XG4gIFxuICBmdW5jdGlvbiBhdXRvTGluayhlbGVtZW50KSB7XG4gICAgaWYgKF9oYXNQYXJlbnRUaGF0U2hvdWxkQmVJZ25vcmVkKGVsZW1lbnQpKSB7XG4gICAgICByZXR1cm4gZWxlbWVudDtcbiAgICB9XG5cbiAgICBpZiAoZWxlbWVudCA9PT0gZWxlbWVudC5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkge1xuICAgICAgZWxlbWVudCA9IGVsZW1lbnQub3duZXJEb2N1bWVudC5ib2R5O1xuICAgIH1cblxuICAgIHJldHVybiBfcGFyc2VOb2RlKGVsZW1lbnQpO1xuICB9XG4gIFxuICAvKipcbiAgICogVGhpcyBpcyBiYXNpY2FsbHkgYSByZWJ1aWxkIG9mXG4gICAqIHRoZSByYWlscyBhdXRvX2xpbmtfdXJscyB0ZXh0IGhlbHBlclxuICAgKi9cbiAgZnVuY3Rpb24gX2NvbnZlcnRVcmxzVG9MaW5rcyhzdHIpIHtcbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoVVJMX1JFR19FWFAsIGZ1bmN0aW9uKG1hdGNoLCB1cmwpIHtcbiAgICAgIHZhciBwdW5jdHVhdGlvbiA9ICh1cmwubWF0Y2goVFJBSUxJTkdfQ0hBUl9SRUdfRVhQKSB8fCBbXSlbMV0gfHwgXCJcIixcbiAgICAgICAgICBvcGVuaW5nICAgICA9IEJSQUNLRVRTW3B1bmN0dWF0aW9uXTtcbiAgICAgIHVybCA9IHVybC5yZXBsYWNlKFRSQUlMSU5HX0NIQVJfUkVHX0VYUCwgXCJcIik7XG5cbiAgICAgIGlmICh1cmwuc3BsaXQob3BlbmluZykubGVuZ3RoID4gdXJsLnNwbGl0KHB1bmN0dWF0aW9uKS5sZW5ndGgpIHtcbiAgICAgICAgdXJsID0gdXJsICsgcHVuY3R1YXRpb247XG4gICAgICAgIHB1bmN0dWF0aW9uID0gXCJcIjtcbiAgICAgIH1cbiAgICAgIHZhciByZWFsVXJsICAgID0gdXJsLFxuICAgICAgICAgIGRpc3BsYXlVcmwgPSB1cmw7XG4gICAgICBpZiAodXJsLmxlbmd0aCA+IE1BWF9ESVNQTEFZX0xFTkdUSCkge1xuICAgICAgICBkaXNwbGF5VXJsID0gZGlzcGxheVVybC5zdWJzdHIoMCwgTUFYX0RJU1BMQVlfTEVOR1RIKSArIFwiLi4uXCI7XG4gICAgICB9XG4gICAgICAvLyBBZGQgaHR0cCBwcmVmaXggaWYgbmVjZXNzYXJ5XG4gICAgICBpZiAocmVhbFVybC5zdWJzdHIoMCwgNCkgPT09IFwid3d3LlwiKSB7XG4gICAgICAgIHJlYWxVcmwgPSBcImh0dHA6Ly9cIiArIHJlYWxVcmw7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHJldHVybiAnPGEgaHJlZj1cIicgKyByZWFsVXJsICsgJ1wiPicgKyBkaXNwbGF5VXJsICsgJzwvYT4nICsgcHVuY3R1YXRpb247XG4gICAgfSk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBDcmVhdGVzIG9yIChpZiBhbHJlYWR5IGNhY2hlZCkgcmV0dXJucyBhIHRlbXAgZWxlbWVudFxuICAgKiBmb3IgdGhlIGdpdmVuIGRvY3VtZW50IG9iamVjdFxuICAgKi9cbiAgZnVuY3Rpb24gX2dldFRlbXBFbGVtZW50KGNvbnRleHQpIHtcbiAgICB2YXIgdGVtcEVsZW1lbnQgPSBjb250ZXh0Ll93eXNpaHRtbDVfdGVtcEVsZW1lbnQ7XG4gICAgaWYgKCF0ZW1wRWxlbWVudCkge1xuICAgICAgdGVtcEVsZW1lbnQgPSBjb250ZXh0Ll93eXNpaHRtbDVfdGVtcEVsZW1lbnQgPSBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgfVxuICAgIHJldHVybiB0ZW1wRWxlbWVudDtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFJlcGxhY2VzIHRoZSBvcmlnaW5hbCB0ZXh0IG5vZGVzIHdpdGggdGhlIG5ld2x5IGF1dG8tbGlua2VkIGRvbSB0cmVlXG4gICAqL1xuICBmdW5jdGlvbiBfd3JhcE1hdGNoZXNJbk5vZGUodGV4dE5vZGUpIHtcbiAgICB2YXIgcGFyZW50Tm9kZSAgPSB0ZXh0Tm9kZS5wYXJlbnROb2RlLFxuICAgICAgICBub2RlVmFsdWUgICA9IHd5c2lodG1sNS5sYW5nLnN0cmluZyh0ZXh0Tm9kZS5kYXRhKS5lc2NhcGVIVE1MKCksXG4gICAgICAgIHRlbXBFbGVtZW50ID0gX2dldFRlbXBFbGVtZW50KHBhcmVudE5vZGUub3duZXJEb2N1bWVudCk7XG4gICAgXG4gICAgLy8gV2UgbmVlZCB0byBpbnNlcnQgYW4gZW1wdHkvdGVtcG9yYXJ5IDxzcGFuIC8+IHRvIGZpeCBJRSBxdWlya3NcbiAgICAvLyBFbHNld2lzZSBJRSB3b3VsZCBzdHJpcCB3aGl0ZSBzcGFjZSBpbiB0aGUgYmVnaW5uaW5nXG4gICAgdGVtcEVsZW1lbnQuaW5uZXJIVE1MID0gXCI8c3Bhbj48L3NwYW4+XCIgKyBfY29udmVydFVybHNUb0xpbmtzKG5vZGVWYWx1ZSk7XG4gICAgdGVtcEVsZW1lbnQucmVtb3ZlQ2hpbGQodGVtcEVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgXG4gICAgd2hpbGUgKHRlbXBFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIC8vIGluc2VydHMgdGVtcEVsZW1lbnQuZmlyc3RDaGlsZCBiZWZvcmUgdGV4dE5vZGVcbiAgICAgIHBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRlbXBFbGVtZW50LmZpcnN0Q2hpbGQsIHRleHROb2RlKTtcbiAgICB9XG4gICAgcGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0ZXh0Tm9kZSk7XG4gIH1cbiAgXG4gIGZ1bmN0aW9uIF9oYXNQYXJlbnRUaGF0U2hvdWxkQmVJZ25vcmVkKG5vZGUpIHtcbiAgICB2YXIgbm9kZU5hbWU7XG4gICAgd2hpbGUgKG5vZGUucGFyZW50Tm9kZSkge1xuICAgICAgbm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcbiAgICAgIG5vZGVOYW1lID0gbm9kZS5ub2RlTmFtZTtcbiAgICAgIGlmIChJR05PUkVfVVJMU19JTi5jb250YWlucyhub2RlTmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9IGVsc2UgaWYgKG5vZGVOYW1lID09PSBcImJvZHlcIikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBcbiAgZnVuY3Rpb24gX3BhcnNlTm9kZShlbGVtZW50KSB7XG4gICAgaWYgKElHTk9SRV9VUkxTX0lOLmNvbnRhaW5zKGVsZW1lbnQubm9kZU5hbWUpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIGlmIChlbGVtZW50Lm5vZGVUeXBlID09PSB3eXNpaHRtbDUuVEVYVF9OT0RFICYmIGVsZW1lbnQuZGF0YS5tYXRjaChVUkxfUkVHX0VYUCkpIHtcbiAgICAgIF93cmFwTWF0Y2hlc0luTm9kZShlbGVtZW50KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgdmFyIGNoaWxkTm9kZXMgICAgICAgID0gd3lzaWh0bWw1LmxhbmcuYXJyYXkoZWxlbWVudC5jaGlsZE5vZGVzKS5nZXQoKSxcbiAgICAgICAgY2hpbGROb2Rlc0xlbmd0aCAgPSBjaGlsZE5vZGVzLmxlbmd0aCxcbiAgICAgICAgaSAgICAgICAgICAgICAgICAgPSAwO1xuICAgIFxuICAgIGZvciAoOyBpPGNoaWxkTm9kZXNMZW5ndGg7IGkrKykge1xuICAgICAgX3BhcnNlTm9kZShjaGlsZE5vZGVzW2ldKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH1cbiAgXG4gIHd5c2lodG1sNS5kb20uYXV0b0xpbmsgPSBhdXRvTGluaztcbiAgXG4gIC8vIFJldmVhbCB1cmwgcmVnIGV4cCB0byB0aGUgb3V0c2lkZVxuICB3eXNpaHRtbDUuZG9tLmF1dG9MaW5rLlVSTF9SRUdfRVhQID0gVVJMX1JFR19FWFA7XG59KSh3eXNpaHRtbDUpOyhmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIGFwaSA9IHd5c2lodG1sNS5kb207XG4gIFxuICBhcGkuYWRkQ2xhc3MgPSBmdW5jdGlvbihlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgICB2YXIgY2xhc3NMaXN0ID0gZWxlbWVudC5jbGFzc0xpc3Q7XG4gICAgaWYgKGNsYXNzTGlzdCkge1xuICAgICAgcmV0dXJuIGNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKTtcbiAgICB9XG4gICAgaWYgKGFwaS5oYXNDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGVsZW1lbnQuY2xhc3NOYW1lICs9IFwiIFwiICsgY2xhc3NOYW1lO1xuICB9O1xuICBcbiAgYXBpLnJlbW92ZUNsYXNzID0gZnVuY3Rpb24oZWxlbWVudCwgY2xhc3NOYW1lKSB7XG4gICAgdmFyIGNsYXNzTGlzdCA9IGVsZW1lbnQuY2xhc3NMaXN0O1xuICAgIGlmIChjbGFzc0xpc3QpIHtcbiAgICAgIHJldHVybiBjbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XG4gICAgfVxuICAgIFxuICAgIGVsZW1lbnQuY2xhc3NOYW1lID0gZWxlbWVudC5jbGFzc05hbWUucmVwbGFjZShuZXcgUmVnRXhwKFwiKF58XFxcXHMrKVwiICsgY2xhc3NOYW1lICsgXCIoXFxcXHMrfCQpXCIpLCBcIiBcIik7XG4gIH07XG4gIFxuICBhcGkuaGFzQ2xhc3MgPSBmdW5jdGlvbihlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgICB2YXIgY2xhc3NMaXN0ID0gZWxlbWVudC5jbGFzc0xpc3Q7XG4gICAgaWYgKGNsYXNzTGlzdCkge1xuICAgICAgcmV0dXJuIGNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpO1xuICAgIH1cbiAgICBcbiAgICB2YXIgZWxlbWVudENsYXNzTmFtZSA9IGVsZW1lbnQuY2xhc3NOYW1lO1xuICAgIHJldHVybiAoZWxlbWVudENsYXNzTmFtZS5sZW5ndGggPiAwICYmIChlbGVtZW50Q2xhc3NOYW1lID09IGNsYXNzTmFtZSB8fCBuZXcgUmVnRXhwKFwiKF58XFxcXHMpXCIgKyBjbGFzc05hbWUgKyBcIihcXFxcc3wkKVwiKS50ZXN0KGVsZW1lbnRDbGFzc05hbWUpKSk7XG4gIH07XG59KSh3eXNpaHRtbDUpO1xud3lzaWh0bWw1LmRvbS5jb250YWlucyA9IChmdW5jdGlvbigpIHtcbiAgdmFyIGRvY3VtZW50RWxlbWVudCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiAgaWYgKGRvY3VtZW50RWxlbWVudC5jb250YWlucykge1xuICAgIHJldHVybiBmdW5jdGlvbihjb250YWluZXIsIGVsZW1lbnQpIHtcbiAgICAgIGlmIChlbGVtZW50Lm5vZGVUeXBlICE9PSB3eXNpaHRtbDUuRUxFTUVOVF9OT0RFKSB7XG4gICAgICAgIGVsZW1lbnQgPSBlbGVtZW50LnBhcmVudE5vZGU7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGFpbmVyICE9PSBlbGVtZW50ICYmIGNvbnRhaW5lci5jb250YWlucyhlbGVtZW50KTtcbiAgICB9O1xuICB9IGVsc2UgaWYgKGRvY3VtZW50RWxlbWVudC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbikge1xuICAgIHJldHVybiBmdW5jdGlvbihjb250YWluZXIsIGVsZW1lbnQpIHtcbiAgICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuL0RPTS9Ob2RlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uXG4gICAgICByZXR1cm4gISEoY29udGFpbmVyLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGVsZW1lbnQpICYgMTYpO1xuICAgIH07XG4gIH1cbn0pKCk7LyoqXG4gKiBDb252ZXJ0cyBhbiBIVE1MIGZyYWdtZW50L2VsZW1lbnQgaW50byBhIHVub3JkZXJlZC9vcmRlcmVkIGxpc3RcbiAqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQgVGhlIGVsZW1lbnQgd2hpY2ggc2hvdWxkIGJlIHR1cm5lZCBpbnRvIGEgbGlzdFxuICogQHBhcmFtIHtTdHJpbmd9IGxpc3RUeXBlIFRoZSBsaXN0IHR5cGUgaW4gd2hpY2ggdG8gY29udmVydCB0aGUgdHJlZSAoZWl0aGVyIFwidWxcIiBvciBcIm9sXCIpXG4gKiBAcmV0dXJuIHtFbGVtZW50fSBUaGUgY3JlYXRlZCBsaXN0XG4gKlxuICogQGV4YW1wbGVcbiAqICAgIDwhLS0gQXNzdW1lIHRoZSBmb2xsb3dpbmcgZG9tOiAtLT5cbiAqICAgIDxzcGFuIGlkPVwicHNldWRvLWxpc3RcIj5cbiAqICAgICAgZW1pbmVtPGJyPlxuICogICAgICBkci4gZHJlXG4gKiAgICAgIDxkaXY+NTAgQ2VudDwvZGl2PlxuICogICAgPC9zcGFuPlxuICpcbiAqICAgIDxzY3JpcHQ+XG4gKiAgICAgIHd5c2lodG1sNS5kb20uY29udmVydFRvTGlzdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBzZXVkby1saXN0XCIpLCBcInVsXCIpO1xuICogICAgPC9zY3JpcHQ+XG4gKlxuICogICAgPCEtLSBXaWxsIHJlc3VsdCBpbjogLS0+XG4gKiAgICA8dWw+XG4gKiAgICAgIDxsaT5lbWluZW08L2xpPlxuICogICAgICA8bGk+ZHIuIGRyZTwvbGk+XG4gKiAgICAgIDxsaT41MCBDZW50PC9saT5cbiAqICAgIDwvdWw+XG4gKi9cbnd5c2lodG1sNS5kb20uY29udmVydFRvTGlzdCA9IChmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gX2NyZWF0ZUxpc3RJdGVtKGRvYywgbGlzdCkge1xuICAgIHZhciBsaXN0SXRlbSA9IGRvYy5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gICAgbGlzdC5hcHBlbmRDaGlsZChsaXN0SXRlbSk7XG4gICAgcmV0dXJuIGxpc3RJdGVtO1xuICB9XG4gIFxuICBmdW5jdGlvbiBfY3JlYXRlTGlzdChkb2MsIHR5cGUpIHtcbiAgICByZXR1cm4gZG9jLmNyZWF0ZUVsZW1lbnQodHlwZSk7XG4gIH1cbiAgXG4gIGZ1bmN0aW9uIGNvbnZlcnRUb0xpc3QoZWxlbWVudCwgbGlzdFR5cGUpIHtcbiAgICBpZiAoZWxlbWVudC5ub2RlTmFtZSA9PT0gXCJVTFwiIHx8IGVsZW1lbnQubm9kZU5hbWUgPT09IFwiT0xcIiB8fCBlbGVtZW50Lm5vZGVOYW1lID09PSBcIk1FTlVcIikge1xuICAgICAgLy8gQWxyZWFkeSBhIGxpc3RcbiAgICAgIHJldHVybiBlbGVtZW50O1xuICAgIH1cbiAgICBcbiAgICB2YXIgZG9jICAgICAgICAgICAgICAgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQsXG4gICAgICAgIGxpc3QgICAgICAgICAgICAgID0gX2NyZWF0ZUxpc3QoZG9jLCBsaXN0VHlwZSksXG4gICAgICAgIGxpbmVCcmVha3MgICAgICAgID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiYnJcIiksXG4gICAgICAgIGxpbmVCcmVha3NMZW5ndGggID0gbGluZUJyZWFrcy5sZW5ndGgsXG4gICAgICAgIGNoaWxkTm9kZXMsXG4gICAgICAgIGNoaWxkTm9kZXNMZW5ndGgsXG4gICAgICAgIGNoaWxkTm9kZSxcbiAgICAgICAgbGluZUJyZWFrLFxuICAgICAgICBwYXJlbnROb2RlLFxuICAgICAgICBpc0Jsb2NrRWxlbWVudCxcbiAgICAgICAgaXNMaW5lQnJlYWssXG4gICAgICAgIGN1cnJlbnRMaXN0SXRlbSxcbiAgICAgICAgaTtcbiAgICBcbiAgICAvLyBGaXJzdCBmaW5kIDxicj4gYXQgdGhlIGVuZCBvZiBpbmxpbmUgZWxlbWVudHMgYW5kIG1vdmUgdGhlbSBiZWhpbmQgdGhlbVxuICAgIGZvciAoaT0wOyBpPGxpbmVCcmVha3NMZW5ndGg7IGkrKykge1xuICAgICAgbGluZUJyZWFrID0gbGluZUJyZWFrc1tpXTtcbiAgICAgIHdoaWxlICgocGFyZW50Tm9kZSA9IGxpbmVCcmVhay5wYXJlbnROb2RlKSAmJiBwYXJlbnROb2RlICE9PSBlbGVtZW50ICYmIHBhcmVudE5vZGUubGFzdENoaWxkID09PSBsaW5lQnJlYWspIHtcbiAgICAgICAgaWYgKHd5c2lodG1sNS5kb20uZ2V0U3R5bGUoXCJkaXNwbGF5XCIpLmZyb20ocGFyZW50Tm9kZSkgPT09IFwiYmxvY2tcIikge1xuICAgICAgICAgIHBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobGluZUJyZWFrKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICB3eXNpaHRtbDUuZG9tLmluc2VydChsaW5lQnJlYWspLmFmdGVyKGxpbmVCcmVhay5wYXJlbnROb2RlKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgY2hpbGROb2RlcyAgICAgICAgPSB3eXNpaHRtbDUubGFuZy5hcnJheShlbGVtZW50LmNoaWxkTm9kZXMpLmdldCgpO1xuICAgIGNoaWxkTm9kZXNMZW5ndGggID0gY2hpbGROb2Rlcy5sZW5ndGg7XG4gICAgXG4gICAgZm9yIChpPTA7IGk8Y2hpbGROb2Rlc0xlbmd0aDsgaSsrKSB7XG4gICAgICBjdXJyZW50TGlzdEl0ZW0gICA9IGN1cnJlbnRMaXN0SXRlbSB8fCBfY3JlYXRlTGlzdEl0ZW0oZG9jLCBsaXN0KTtcbiAgICAgIGNoaWxkTm9kZSAgICAgICAgID0gY2hpbGROb2Rlc1tpXTtcbiAgICAgIGlzQmxvY2tFbGVtZW50ICAgID0gd3lzaWh0bWw1LmRvbS5nZXRTdHlsZShcImRpc3BsYXlcIikuZnJvbShjaGlsZE5vZGUpID09PSBcImJsb2NrXCI7XG4gICAgICBpc0xpbmVCcmVhayAgICAgICA9IGNoaWxkTm9kZS5ub2RlTmFtZSA9PT0gXCJCUlwiO1xuICAgICAgXG4gICAgICBpZiAoaXNCbG9ja0VsZW1lbnQpIHtcbiAgICAgICAgLy8gQXBwZW5kIGJsb2NrRWxlbWVudCB0byBjdXJyZW50IDxsaT4gaWYgZW1wdHksIG90aGVyd2lzZSBjcmVhdGUgYSBuZXcgb25lXG4gICAgICAgIGN1cnJlbnRMaXN0SXRlbSA9IGN1cnJlbnRMaXN0SXRlbS5maXJzdENoaWxkID8gX2NyZWF0ZUxpc3RJdGVtKGRvYywgbGlzdCkgOiBjdXJyZW50TGlzdEl0ZW07XG4gICAgICAgIGN1cnJlbnRMaXN0SXRlbS5hcHBlbmRDaGlsZChjaGlsZE5vZGUpO1xuICAgICAgICBjdXJyZW50TGlzdEl0ZW0gPSBudWxsO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYgKGlzTGluZUJyZWFrKSB7XG4gICAgICAgIC8vIE9ubHkgY3JlYXRlIGEgbmV3IGxpc3QgaXRlbSBpbiB0aGUgbmV4dCBpdGVyYXRpb24gd2hlbiB0aGUgY3VycmVudCBvbmUgaGFzIGFscmVhZHkgY29udGVudFxuICAgICAgICBjdXJyZW50TGlzdEl0ZW0gPSBjdXJyZW50TGlzdEl0ZW0uZmlyc3RDaGlsZCA/IG51bGwgOiBjdXJyZW50TGlzdEl0ZW07XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgXG4gICAgICBjdXJyZW50TGlzdEl0ZW0uYXBwZW5kQ2hpbGQoY2hpbGROb2RlKTtcbiAgICB9XG4gICAgXG4gICAgaWYgKGNoaWxkTm9kZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICBfY3JlYXRlTGlzdEl0ZW0oZG9jLCBsaXN0KTtcbiAgICB9XG4gICAgXG4gICAgZWxlbWVudC5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChsaXN0LCBlbGVtZW50KTtcbiAgICByZXR1cm4gbGlzdDtcbiAgfVxuICBcbiAgcmV0dXJuIGNvbnZlcnRUb0xpc3Q7XG59KSgpOy8qKlxuICogQ29weSBhIHNldCBvZiBhdHRyaWJ1dGVzIGZyb20gb25lIGVsZW1lbnQgdG8gYW5vdGhlclxuICpcbiAqIEBwYXJhbSB7QXJyYXl9IGF0dHJpYnV0ZXNUb0NvcHkgTGlzdCBvZiBhdHRyaWJ1dGVzIHdoaWNoIHNob3VsZCBiZSBjb3BpZWRcbiAqIEByZXR1cm4ge09iamVjdH0gUmV0dXJucyBhbiBvYmplY3Qgd2hpY2ggb2ZmZXJzIHRoZSBcImZyb21cIiBtZXRob2Qgd2hpY2ggY2FuIGJlIGludm9rZWQgd2l0aCB0aGUgZWxlbWVudCB3aGVyZSB0b1xuICogICAgY29weSB0aGUgYXR0cmlidXRlcyBmcm9tLiwgdGhpcyBhZ2FpbiByZXR1cm5zIGFuIG9iamVjdCB3aGljaCBwcm92aWRlcyBhIG1ldGhvZCBuYW1lZCBcInRvXCIgd2hpY2ggY2FuIGJlIGludm9rZWQgXG4gKiAgICB3aXRoIHRoZSBlbGVtZW50IHdoZXJlIHRvIGNvcHkgdGhlIGF0dHJpYnV0ZXMgdG8gKHNlZSBleGFtcGxlKVxuICpcbiAqIEBleGFtcGxlXG4gKiAgICB2YXIgdGV4dGFyZWEgICAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwidGV4dGFyZWFcIiksXG4gKiAgICAgICAgZGl2ICAgICAgICAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiZGl2W2NvbnRlbnRlZGl0YWJsZT10cnVlXVwiKSxcbiAqICAgICAgICBhbm90aGVyRGl2ICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJkaXYucHJldmlld1wiKTtcbiAqICAgIHd5c2lodG1sNS5kb20uY29weUF0dHJpYnV0ZXMoW1wic3BlbGxjaGVja1wiLCBcInZhbHVlXCIsIFwicGxhY2Vob2xkZXJcIl0pLmZyb20odGV4dGFyZWEpLnRvKGRpdikuYW5kVG8oYW5vdGhlckRpdik7XG4gKlxuICovXG53eXNpaHRtbDUuZG9tLmNvcHlBdHRyaWJ1dGVzID0gZnVuY3Rpb24oYXR0cmlidXRlc1RvQ29weSkge1xuICByZXR1cm4ge1xuICAgIGZyb206IGZ1bmN0aW9uKGVsZW1lbnRUb0NvcHlGcm9tKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB0bzogZnVuY3Rpb24oZWxlbWVudFRvQ29weVRvKSB7XG4gICAgICAgICAgdmFyIGF0dHJpYnV0ZSxcbiAgICAgICAgICAgICAgaSAgICAgICAgID0gMCxcbiAgICAgICAgICAgICAgbGVuZ3RoICAgID0gYXR0cmlidXRlc1RvQ29weS5sZW5ndGg7XG4gICAgICAgICAgZm9yICg7IGk8bGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGF0dHJpYnV0ZSA9IGF0dHJpYnV0ZXNUb0NvcHlbaV07XG4gICAgICAgICAgICBpZiAodHlwZW9mKGVsZW1lbnRUb0NvcHlGcm9tW2F0dHJpYnV0ZV0pICE9PSBcInVuZGVmaW5lZFwiICYmIGVsZW1lbnRUb0NvcHlGcm9tW2F0dHJpYnV0ZV0gIT09IFwiXCIpIHtcbiAgICAgICAgICAgICAgZWxlbWVudFRvQ29weVRvW2F0dHJpYnV0ZV0gPSBlbGVtZW50VG9Db3B5RnJvbVthdHRyaWJ1dGVdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4geyBhbmRUbzogYXJndW1lbnRzLmNhbGxlZSB9O1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbn07LyoqXG4gKiBDb3B5IGEgc2V0IG9mIHN0eWxlcyBmcm9tIG9uZSBlbGVtZW50IHRvIGFub3RoZXJcbiAqIFBsZWFzZSBub3RlIHRoYXQgdGhpcyBvbmx5IHdvcmtzIHByb3Blcmx5IGFjcm9zcyBicm93c2VycyB3aGVuIHRoZSBlbGVtZW50IGZyb20gd2hpY2ggdG8gY29weSB0aGUgc3R5bGVzXG4gKiBpcyBpbiB0aGUgZG9tXG4gKlxuICogSW50ZXJlc3RpbmcgYXJ0aWNsZSBvbiBob3cgdG8gY29weSBzdHlsZXNcbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBzdHlsZXNUb0NvcHkgTGlzdCBvZiBzdHlsZXMgd2hpY2ggc2hvdWxkIGJlIGNvcGllZFxuICogQHJldHVybiB7T2JqZWN0fSBSZXR1cm5zIGFuIG9iamVjdCB3aGljaCBvZmZlcnMgdGhlIFwiZnJvbVwiIG1ldGhvZCB3aGljaCBjYW4gYmUgaW52b2tlZCB3aXRoIHRoZSBlbGVtZW50IHdoZXJlIHRvXG4gKiAgICBjb3B5IHRoZSBzdHlsZXMgZnJvbS4sIHRoaXMgYWdhaW4gcmV0dXJucyBhbiBvYmplY3Qgd2hpY2ggcHJvdmlkZXMgYSBtZXRob2QgbmFtZWQgXCJ0b1wiIHdoaWNoIGNhbiBiZSBpbnZva2VkIFxuICogICAgd2l0aCB0aGUgZWxlbWVudCB3aGVyZSB0byBjb3B5IHRoZSBzdHlsZXMgdG8gKHNlZSBleGFtcGxlKVxuICpcbiAqIEBleGFtcGxlXG4gKiAgICB2YXIgdGV4dGFyZWEgICAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwidGV4dGFyZWFcIiksXG4gKiAgICAgICAgZGl2ICAgICAgICAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiZGl2W2NvbnRlbnRlZGl0YWJsZT10cnVlXVwiKSxcbiAqICAgICAgICBhbm90aGVyRGl2ICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJkaXYucHJldmlld1wiKTtcbiAqICAgIHd5c2lodG1sNS5kb20uY29weVN0eWxlcyhbXCJvdmVyZmxvdy15XCIsIFwid2lkdGhcIiwgXCJoZWlnaHRcIl0pLmZyb20odGV4dGFyZWEpLnRvKGRpdikuYW5kVG8oYW5vdGhlckRpdik7XG4gKlxuICovXG4oZnVuY3Rpb24oZG9tKSB7XG4gIFxuICAvKipcbiAgICogTW96aWxsYSwgV2ViS2l0IGFuZCBPcGVyYSByZWNhbGN1bGF0ZSB0aGUgY29tcHV0ZWQgd2lkdGggd2hlbiBib3gtc2l6aW5nOiBib2Rlci1ib3g7IGlzIHNldFxuICAgKiBTbyBpZiBhbiBlbGVtZW50IGhhcyBcIndpZHRoOiAyMDBweDsgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94OyBib3JkZXI6IDFweDtcIiB0aGVuIFxuICAgKiBpdHMgY29tcHV0ZWQgY3NzIHdpZHRoIHdpbGwgYmUgMTk4cHhcbiAgICpcbiAgICogU2VlIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTUyMDk5MlxuICAgKi9cbiAgdmFyIEJPWF9TSVpJTkdfUFJPUEVSVElFUyA9IFtcIi13ZWJraXQtYm94LXNpemluZ1wiLCBcIi1tb3otYm94LXNpemluZ1wiLCBcIi1tcy1ib3gtc2l6aW5nXCIsIFwiYm94LXNpemluZ1wiXTtcbiAgXG4gIHZhciBzaG91bGRJZ25vcmVCb3hTaXppbmdCb3JkZXJCb3ggPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgaWYgKGhhc0JveFNpemluZ0JvcmRlckJveChlbGVtZW50KSkge1xuICAgICAgIHJldHVybiBwYXJzZUludChkb20uZ2V0U3R5bGUoXCJ3aWR0aFwiKS5mcm9tKGVsZW1lbnQpLCAxMCkgPCBlbGVtZW50Lm9mZnNldFdpZHRoO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG4gIFxuICB2YXIgaGFzQm94U2l6aW5nQm9yZGVyQm94ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgIHZhciBpICAgICAgID0gMCxcbiAgICAgICAgbGVuZ3RoICA9IEJPWF9TSVpJTkdfUFJPUEVSVElFUy5sZW5ndGg7XG4gICAgZm9yICg7IGk8bGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChkb20uZ2V0U3R5bGUoQk9YX1NJWklOR19QUk9QRVJUSUVTW2ldKS5mcm9tKGVsZW1lbnQpID09PSBcImJvcmRlci1ib3hcIikge1xuICAgICAgICByZXR1cm4gQk9YX1NJWklOR19QUk9QRVJUSUVTW2ldO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgXG4gIGRvbS5jb3B5U3R5bGVzID0gZnVuY3Rpb24oc3R5bGVzVG9Db3B5KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGZyb206IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgaWYgKHNob3VsZElnbm9yZUJveFNpemluZ0JvcmRlckJveChlbGVtZW50KSkge1xuICAgICAgICAgIHN0eWxlc1RvQ29weSA9IHd5c2lodG1sNS5sYW5nLmFycmF5KHN0eWxlc1RvQ29weSkud2l0aG91dChCT1hfU0laSU5HX1BST1BFUlRJRVMpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB2YXIgY3NzVGV4dCA9IFwiXCIsXG4gICAgICAgICAgICBsZW5ndGggID0gc3R5bGVzVG9Db3B5Lmxlbmd0aCxcbiAgICAgICAgICAgIGkgICAgICAgPSAwLFxuICAgICAgICAgICAgcHJvcGVydHk7XG4gICAgICAgIGZvciAoOyBpPGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgcHJvcGVydHkgPSBzdHlsZXNUb0NvcHlbaV07XG4gICAgICAgICAgY3NzVGV4dCArPSBwcm9wZXJ0eSArIFwiOlwiICsgZG9tLmdldFN0eWxlKHByb3BlcnR5KS5mcm9tKGVsZW1lbnQpICsgXCI7XCI7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgdG86IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgICAgIGRvbS5zZXRTdHlsZXMoY3NzVGV4dCkub24oZWxlbWVudCk7XG4gICAgICAgICAgICByZXR1cm4geyBhbmRUbzogYXJndW1lbnRzLmNhbGxlZSB9O1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9O1xuICB9O1xufSkod3lzaWh0bWw1LmRvbSk7LyoqXG4gKiBFdmVudCBEZWxlZ2F0aW9uXG4gKlxuICogQGV4YW1wbGVcbiAqICAgIHd5c2lodG1sNS5kb20uZGVsZWdhdGUoZG9jdW1lbnQuYm9keSwgXCJhXCIsIFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XG4gKiAgICAgIC8vIGZvb1xuICogICAgfSk7XG4gKi9cbihmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgXG4gIHd5c2lodG1sNS5kb20uZGVsZWdhdGUgPSBmdW5jdGlvbihjb250YWluZXIsIHNlbGVjdG9yLCBldmVudE5hbWUsIGhhbmRsZXIpIHtcbiAgICByZXR1cm4gd3lzaWh0bWw1LmRvbS5vYnNlcnZlKGNvbnRhaW5lciwgZXZlbnROYW1lLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgdmFyIHRhcmdldCAgICA9IGV2ZW50LnRhcmdldCxcbiAgICAgICAgICBtYXRjaCAgICAgPSB3eXNpaHRtbDUubGFuZy5hcnJheShjb250YWluZXIucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvcikpO1xuICAgICAgXG4gICAgICB3aGlsZSAodGFyZ2V0ICYmIHRhcmdldCAhPT0gY29udGFpbmVyKSB7XG4gICAgICAgIGlmIChtYXRjaC5jb250YWlucyh0YXJnZXQpKSB7XG4gICAgICAgICAgaGFuZGxlci5jYWxsKHRhcmdldCwgZXZlbnQpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIHRhcmdldCA9IHRhcmdldC5wYXJlbnROb2RlO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xuICBcbn0pKHd5c2lodG1sNSk7LyoqXG4gKiBSZXR1cm5zIHRoZSBnaXZlbiBodG1sIHdyYXBwZWQgaW4gYSBkaXYgZWxlbWVudFxuICpcbiAqIEZpeGluZyBJRSdzIGluYWJpbGl0eSB0byB0cmVhdCB1bmtub3duIGVsZW1lbnRzIChIVE1MNSBzZWN0aW9uLCBhcnRpY2xlLCAuLi4pIGNvcnJlY3RseVxuICogd2hlbiBpbnNlcnRlZCB2aWEgaW5uZXJIVE1MXG4gKiBcbiAqIEBwYXJhbSB7U3RyaW5nfSBodG1sIFRoZSBodG1sIHdoaWNoIHNob3VsZCBiZSB3cmFwcGVkIGluIGEgZG9tIGVsZW1lbnRcbiAqIEBwYXJhbSB7T2JlamN0fSBbY29udGV4dF0gRG9jdW1lbnQgb2JqZWN0IG9mIHRoZSBjb250ZXh0IHRoZSBodG1sIGJlbG9uZ3MgdG9cbiAqXG4gKiBAZXhhbXBsZVxuICogICAgd3lzaWh0bWw1LmRvbS5nZXRBc0RvbShcIjxhcnRpY2xlPmZvbzwvYXJ0aWNsZT5cIik7XG4gKi9cbnd5c2lodG1sNS5kb20uZ2V0QXNEb20gPSAoZnVuY3Rpb24oKSB7XG4gIFxuICB2YXIgX2lubmVySFRNTFNoaXYgPSBmdW5jdGlvbihodG1sLCBjb250ZXh0KSB7XG4gICAgdmFyIHRlbXBFbGVtZW50ID0gY29udGV4dC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHRlbXBFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICBjb250ZXh0LmJvZHkuYXBwZW5kQ2hpbGQodGVtcEVsZW1lbnQpO1xuICAgIC8vIElFIHRocm93cyBhbiBleGNlcHRpb24gd2hlbiB0cnlpbmcgdG8gaW5zZXJ0IDxmcmFtZXNldD48L2ZyYW1lc2V0PiB2aWEgaW5uZXJIVE1MXG4gICAgdHJ5IHsgdGVtcEVsZW1lbnQuaW5uZXJIVE1MID0gaHRtbDsgfSBjYXRjaChlKSB7fVxuICAgIGNvbnRleHQuYm9keS5yZW1vdmVDaGlsZCh0ZW1wRWxlbWVudCk7XG4gICAgcmV0dXJuIHRlbXBFbGVtZW50O1xuICB9O1xuICBcbiAgLyoqXG4gICAqIE1ha2Ugc3VyZSBJRSBzdXBwb3J0cyBIVE1MNSB0YWdzLCB3aGljaCBpcyBhY2NvbXBsaXNoZWQgYnkgc2ltcGx5IGNyZWF0aW5nIG9uZSBpbnN0YW5jZSBvZiBlYWNoIGVsZW1lbnRcbiAgICovXG4gIHZhciBfZW5zdXJlSFRNTDVDb21wYXRpYmlsaXR5ID0gZnVuY3Rpb24oY29udGV4dCkge1xuICAgIGlmIChjb250ZXh0Ll93eXNpaHRtbDVfc3VwcG9ydHNIVE1MNVRhZ3MpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yICh2YXIgaT0wLCBsZW5ndGg9SFRNTDVfRUxFTUVOVFMubGVuZ3RoOyBpPGxlbmd0aDsgaSsrKSB7XG4gICAgICBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoSFRNTDVfRUxFTUVOVFNbaV0pO1xuICAgIH1cbiAgICBjb250ZXh0Ll93eXNpaHRtbDVfc3VwcG9ydHNIVE1MNVRhZ3MgPSB0cnVlO1xuICB9O1xuICBcbiAgXG4gIC8qKlxuICAgKiBMaXN0IG9mIGh0bWw1IHRhZ3NcbiAgICogdGFrZW4gZnJvbSBodHRwOi8vc2ltb24uaHRtbDUub3JnL2h0bWw1LWVsZW1lbnRzXG4gICAqL1xuICB2YXIgSFRNTDVfRUxFTUVOVFMgPSBbXG4gICAgXCJhYmJyXCIsIFwiYXJ0aWNsZVwiLCBcImFzaWRlXCIsIFwiYXVkaW9cIiwgXCJiZGlcIiwgXCJjYW52YXNcIiwgXCJjb21tYW5kXCIsIFwiZGF0YWxpc3RcIiwgXCJkZXRhaWxzXCIsIFwiZmlnY2FwdGlvblwiLFxuICAgIFwiZmlndXJlXCIsIFwiZm9vdGVyXCIsIFwiaGVhZGVyXCIsIFwiaGdyb3VwXCIsIFwia2V5Z2VuXCIsIFwibWFya1wiLCBcIm1ldGVyXCIsIFwibmF2XCIsIFwib3V0cHV0XCIsIFwicHJvZ3Jlc3NcIixcbiAgICBcInJwXCIsIFwicnRcIiwgXCJydWJ5XCIsIFwic3ZnXCIsIFwic2VjdGlvblwiLCBcInNvdXJjZVwiLCBcInN1bW1hcnlcIiwgXCJ0aW1lXCIsIFwidHJhY2tcIiwgXCJ2aWRlb1wiLCBcIndiclwiXG4gIF07XG4gIFxuICByZXR1cm4gZnVuY3Rpb24oaHRtbCwgY29udGV4dCkge1xuICAgIGNvbnRleHQgPSBjb250ZXh0IHx8IGRvY3VtZW50O1xuICAgIHZhciB0ZW1wRWxlbWVudDtcbiAgICBpZiAodHlwZW9mKGh0bWwpID09PSBcIm9iamVjdFwiICYmIGh0bWwubm9kZVR5cGUpIHtcbiAgICAgIHRlbXBFbGVtZW50ID0gY29udGV4dC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgdGVtcEVsZW1lbnQuYXBwZW5kQ2hpbGQoaHRtbCk7XG4gICAgfSBlbHNlIGlmICh3eXNpaHRtbDUuYnJvd3Nlci5zdXBwb3J0c0hUTUw1VGFncyhjb250ZXh0KSkge1xuICAgICAgdGVtcEVsZW1lbnQgPSBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICB0ZW1wRWxlbWVudC5pbm5lckhUTUwgPSBodG1sO1xuICAgIH0gZWxzZSB7XG4gICAgICBfZW5zdXJlSFRNTDVDb21wYXRpYmlsaXR5KGNvbnRleHQpO1xuICAgICAgdGVtcEVsZW1lbnQgPSBfaW5uZXJIVE1MU2hpdihodG1sLCBjb250ZXh0KTtcbiAgICB9XG4gICAgcmV0dXJuIHRlbXBFbGVtZW50O1xuICB9O1xufSkoKTsvKipcbiAqIFdhbGtzIHRoZSBkb20gdHJlZSBmcm9tIHRoZSBnaXZlbiBub2RlIHVwIHVudGlsIGl0IGZpbmRzIGEgbWF0Y2hcbiAqIERlc2lnbmVkIGZvciBvcHRpbWFsIHBlcmZvcm1hbmNlLlxuICpcbiAqIEBwYXJhbSB7RWxlbWVudH0gbm9kZSBUaGUgZnJvbSB3aGljaCB0byBjaGVjayB0aGUgcGFyZW50IG5vZGVzXG4gKiBAcGFyYW0ge09iamVjdH0gbWF0Y2hpbmdTZXQgT2JqZWN0IHRvIG1hdGNoIGFnYWluc3QgKHBvc3NpYmxlIHByb3BlcnRpZXM6IG5vZGVOYW1lLCBjbGFzc05hbWUsIGNsYXNzUmVnRXhwKVxuICogQHBhcmFtIHtOdW1iZXJ9IFtsZXZlbHNdIEhvdyBtYW55IHBhcmVudHMgc2hvdWxkIHRoZSBmdW5jdGlvbiBjaGVjayB1cCBmcm9tIHRoZSBjdXJyZW50IG5vZGUgKGRlZmF1bHRzIHRvIDUwKVxuICogQHJldHVybiB7bnVsbHxFbGVtZW50fSBSZXR1cm5zIHRoZSBmaXJzdCBlbGVtZW50IHRoYXQgbWF0Y2hlZCB0aGUgZGVzaXJlZE5vZGVOYW1lKHMpXG4gKiBAZXhhbXBsZVxuICogICAgdmFyIGxpc3RFbGVtZW50ID0gd3lzaWh0bWw1LmRvbS5nZXRQYXJlbnRFbGVtZW50KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJsaVwiKSwgeyBub2RlTmFtZTogW1wiTUVOVVwiLCBcIlVMXCIsIFwiT0xcIl0gfSk7XG4gKiAgICAvLyAuLi4gb3IgLi4uXG4gKiAgICB2YXIgdW5vcmRlcmVkTGlzdEVsZW1lbnQgPSB3eXNpaHRtbDUuZG9tLmdldFBhcmVudEVsZW1lbnQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImxpXCIpLCB7IG5vZGVOYW1lOiBcIlVMXCIgfSk7XG4gKiAgICAvLyAuLi4gb3IgLi4uXG4gKiAgICB2YXIgY29sb3JlZEVsZW1lbnQgPSB3eXNpaHRtbDUuZG9tLmdldFBhcmVudEVsZW1lbnQobXlUZXh0Tm9kZSwgeyBub2RlTmFtZTogXCJTUEFOXCIsIGNsYXNzTmFtZTogXCJ3eXNpd3lnLWNvbG9yLXJlZFwiLCBjbGFzc1JlZ0V4cDogL3d5c2l3eWctY29sb3ItW2Etel0vZyB9KTtcbiAqL1xud3lzaWh0bWw1LmRvbS5nZXRQYXJlbnRFbGVtZW50ID0gKGZ1bmN0aW9uKCkge1xuICBcbiAgZnVuY3Rpb24gX2lzU2FtZU5vZGVOYW1lKG5vZGVOYW1lLCBkZXNpcmVkTm9kZU5hbWVzKSB7XG4gICAgaWYgKCFkZXNpcmVkTm9kZU5hbWVzIHx8ICFkZXNpcmVkTm9kZU5hbWVzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIFxuICAgIGlmICh0eXBlb2YoZGVzaXJlZE5vZGVOYW1lcykgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHJldHVybiBub2RlTmFtZSA9PT0gZGVzaXJlZE5vZGVOYW1lcztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHd5c2lodG1sNS5sYW5nLmFycmF5KGRlc2lyZWROb2RlTmFtZXMpLmNvbnRhaW5zKG5vZGVOYW1lKTtcbiAgICB9XG4gIH1cbiAgXG4gIGZ1bmN0aW9uIF9pc0VsZW1lbnQobm9kZSkge1xuICAgIHJldHVybiBub2RlLm5vZGVUeXBlID09PSB3eXNpaHRtbDUuRUxFTUVOVF9OT0RFO1xuICB9XG4gIFxuICBmdW5jdGlvbiBfaGFzQ2xhc3NOYW1lKGVsZW1lbnQsIGNsYXNzTmFtZSwgY2xhc3NSZWdFeHApIHtcbiAgICB2YXIgY2xhc3NOYW1lcyA9IChlbGVtZW50LmNsYXNzTmFtZSB8fCBcIlwiKS5tYXRjaChjbGFzc1JlZ0V4cCkgfHwgW107XG4gICAgaWYgKCFjbGFzc05hbWUpIHtcbiAgICAgIHJldHVybiAhIWNsYXNzTmFtZXMubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gY2xhc3NOYW1lc1tjbGFzc05hbWVzLmxlbmd0aCAtIDFdID09PSBjbGFzc05hbWU7XG4gIH1cbiAgXG4gIGZ1bmN0aW9uIF9nZXRQYXJlbnRFbGVtZW50V2l0aE5vZGVOYW1lKG5vZGUsIG5vZGVOYW1lLCBsZXZlbHMpIHtcbiAgICB3aGlsZSAobGV2ZWxzLS0gJiYgbm9kZSAmJiBub2RlLm5vZGVOYW1lICE9PSBcIkJPRFlcIikge1xuICAgICAgaWYgKF9pc1NhbWVOb2RlTmFtZShub2RlLm5vZGVOYW1lLCBub2RlTmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgICB9XG4gICAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBcbiAgZnVuY3Rpb24gX2dldFBhcmVudEVsZW1lbnRXaXRoTm9kZU5hbWVBbmRDbGFzc05hbWUobm9kZSwgbm9kZU5hbWUsIGNsYXNzTmFtZSwgY2xhc3NSZWdFeHAsIGxldmVscykge1xuICAgIHdoaWxlIChsZXZlbHMtLSAmJiBub2RlICYmIG5vZGUubm9kZU5hbWUgIT09IFwiQk9EWVwiKSB7XG4gICAgICBpZiAoX2lzRWxlbWVudChub2RlKSAmJlxuICAgICAgICAgIF9pc1NhbWVOb2RlTmFtZShub2RlLm5vZGVOYW1lLCBub2RlTmFtZSkgJiZcbiAgICAgICAgICBfaGFzQ2xhc3NOYW1lKG5vZGUsIGNsYXNzTmFtZSwgY2xhc3NSZWdFeHApKSB7XG4gICAgICAgIHJldHVybiBub2RlO1xuICAgICAgfVxuICAgICAgbm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgXG4gIHJldHVybiBmdW5jdGlvbihub2RlLCBtYXRjaGluZ1NldCwgbGV2ZWxzKSB7XG4gICAgbGV2ZWxzID0gbGV2ZWxzIHx8IDUwOyAvLyBHbyBtYXggNTAgbm9kZXMgdXB3YXJkcyBmcm9tIGN1cnJlbnQgbm9kZVxuICAgIGlmIChtYXRjaGluZ1NldC5jbGFzc05hbWUgfHwgbWF0Y2hpbmdTZXQuY2xhc3NSZWdFeHApIHtcbiAgICAgIHJldHVybiBfZ2V0UGFyZW50RWxlbWVudFdpdGhOb2RlTmFtZUFuZENsYXNzTmFtZShcbiAgICAgICAgbm9kZSwgbWF0Y2hpbmdTZXQubm9kZU5hbWUsIG1hdGNoaW5nU2V0LmNsYXNzTmFtZSwgbWF0Y2hpbmdTZXQuY2xhc3NSZWdFeHAsIGxldmVsc1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIF9nZXRQYXJlbnRFbGVtZW50V2l0aE5vZGVOYW1lKFxuICAgICAgICBub2RlLCBtYXRjaGluZ1NldC5ub2RlTmFtZSwgbGV2ZWxzXG4gICAgICApO1xuICAgIH1cbiAgfTtcbn0pKCk7XG4vKipcbiAqIEdldCBlbGVtZW50J3Mgc3R5bGUgZm9yIGEgc3BlY2lmaWMgY3NzIHByb3BlcnR5XG4gKlxuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IFRoZSBlbGVtZW50IG9uIHdoaWNoIHRvIHJldHJpZXZlIHRoZSBzdHlsZVxuICogQHBhcmFtIHtTdHJpbmd9IHByb3BlcnR5IFRoZSBDU1MgcHJvcGVydHkgdG8gcmV0cmlldmUgKFwiZmxvYXRcIiwgXCJkaXNwbGF5XCIsIFwidGV4dC1hbGlnblwiLCAuLi4pXG4gKlxuICogQGV4YW1wbGVcbiAqICAgIHd5c2lodG1sNS5kb20uZ2V0U3R5bGUoXCJkaXNwbGF5XCIpLmZyb20oZG9jdW1lbnQuYm9keSk7XG4gKiAgICAvLyA9PiBcImJsb2NrXCJcbiAqL1xud3lzaWh0bWw1LmRvbS5nZXRTdHlsZSA9IChmdW5jdGlvbigpIHtcbiAgdmFyIHN0eWxlUHJvcGVydHlNYXBwaW5nID0ge1xuICAgICAgICBcImZsb2F0XCI6IChcInN0eWxlRmxvYXRcIiBpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlKSA/IFwic3R5bGVGbG9hdFwiIDogXCJjc3NGbG9hdFwiXG4gICAgICB9LFxuICAgICAgUkVHX0VYUF9DQU1FTElaRSA9IC9cXC1bYS16XS9nO1xuICBcbiAgZnVuY3Rpb24gY2FtZWxpemUoc3RyKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKFJFR19FWFBfQ0FNRUxJWkUsIGZ1bmN0aW9uKG1hdGNoKSB7XG4gICAgICByZXR1cm4gbWF0Y2guY2hhckF0KDEpLnRvVXBwZXJDYXNlKCk7XG4gICAgfSk7XG4gIH1cbiAgXG4gIHJldHVybiBmdW5jdGlvbihwcm9wZXJ0eSkge1xuICAgIHJldHVybiB7XG4gICAgICBmcm9tOiBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgIGlmIChlbGVtZW50Lm5vZGVUeXBlICE9PSB3eXNpaHRtbDUuRUxFTUVOVF9OT0RFKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB2YXIgZG9jICAgICAgICAgICAgICAgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQsXG4gICAgICAgICAgICBjYW1lbGl6ZWRQcm9wZXJ0eSA9IHN0eWxlUHJvcGVydHlNYXBwaW5nW3Byb3BlcnR5XSB8fCBjYW1lbGl6ZShwcm9wZXJ0eSksXG4gICAgICAgICAgICBzdHlsZSAgICAgICAgICAgICA9IGVsZW1lbnQuc3R5bGUsXG4gICAgICAgICAgICBjdXJyZW50U3R5bGUgICAgICA9IGVsZW1lbnQuY3VycmVudFN0eWxlLFxuICAgICAgICAgICAgc3R5bGVWYWx1ZSAgICAgICAgPSBzdHlsZVtjYW1lbGl6ZWRQcm9wZXJ0eV07XG4gICAgICAgIGlmIChzdHlsZVZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHN0eWxlVmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIGN1cnJlbnRTdHlsZSBpcyBubyBzdGFuZGFyZCBhbmQgb25seSBzdXBwb3J0ZWQgYnkgT3BlcmEgYW5kIElFIGJ1dCBpdCBoYXMgb25lIGltcG9ydGFudCBhZHZhbnRhZ2Ugb3ZlciB0aGUgc3RhbmRhcmQtY29tcGxpYW50XG4gICAgICAgIC8vIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlLCBzaW5jZSBpdCByZXR1cm5zIGNzcyBwcm9wZXJ0eSB2YWx1ZXMgaW4gdGhlaXIgb3JpZ2luYWwgdW5pdDpcbiAgICAgICAgLy8gSWYgeW91IHNldCBhbiBlbGVtZW50cyB3aWR0aCB0byBcIjUwJVwiLCB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSB3aWxsIGdpdmUgeW91IGl0J3MgY3VycmVudCB3aWR0aCBpbiBweCB3aGlsZSBjdXJyZW50U3R5bGVcbiAgICAgICAgLy8gZ2l2ZXMgeW91IHRoZSBvcmlnaW5hbCBcIjUwJVwiLlxuICAgICAgICAvLyBPcGVyYSBzdXBwb3J0cyBib3RoLCBjdXJyZW50U3R5bGUgYW5kIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlLCB0aGF0J3Mgd2h5IGNoZWNraW5nIGZvciBjdXJyZW50U3R5bGUgc2hvdWxkIGhhdmUgaGlnaGVyIHByaW9cbiAgICAgICAgaWYgKGN1cnJlbnRTdHlsZSkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gY3VycmVudFN0eWxlW2NhbWVsaXplZFByb3BlcnR5XTtcbiAgICAgICAgICB9IGNhdGNoKGUpIHtcbiAgICAgICAgICAgIC8vaWUgd2lsbCBvY2Nhc2lvbmFsbHkgZmFpbCBmb3IgdW5rbm93biByZWFzb25zLiBzd2FsbG93aW5nIGV4Y2VwdGlvblxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZhciB3aW4gICAgICAgICAgICAgICAgID0gZG9jLmRlZmF1bHRWaWV3IHx8IGRvYy5wYXJlbnRXaW5kb3csXG4gICAgICAgICAgICBuZWVkc092ZXJmbG93UmVzZXQgID0gKHByb3BlcnR5ID09PSBcImhlaWdodFwiIHx8IHByb3BlcnR5ID09PSBcIndpZHRoXCIpICYmIGVsZW1lbnQubm9kZU5hbWUgPT09IFwiVEVYVEFSRUFcIixcbiAgICAgICAgICAgIG9yaWdpbmFsT3ZlcmZsb3csXG4gICAgICAgICAgICByZXR1cm5WYWx1ZTtcblxuICAgICAgICBpZiAod2luLmdldENvbXB1dGVkU3R5bGUpIHtcbiAgICAgICAgICAvLyBDaHJvbWUgYW5kIFNhZmFyaSBib3RoIGNhbGN1bGF0ZSBhIHdyb25nIHdpZHRoIGFuZCBoZWlnaHQgZm9yIHRleHRhcmVhcyB3aGVuIHRoZXkgaGF2ZSBzY3JvbGwgYmFyc1xuICAgICAgICAgIC8vIHRoZXJmb3JlIHdlIHJlbW92ZSBhbmQgcmVzdG9yZSB0aGUgc2Nyb2xsYmFyIGFuZCBjYWxjdWxhdGUgdGhlIHZhbHVlIGluIGJldHdlZW5cbiAgICAgICAgICBpZiAobmVlZHNPdmVyZmxvd1Jlc2V0KSB7XG4gICAgICAgICAgICBvcmlnaW5hbE92ZXJmbG93ID0gc3R5bGUub3ZlcmZsb3c7XG4gICAgICAgICAgICBzdHlsZS5vdmVyZmxvdyA9IFwiaGlkZGVuXCI7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVyblZhbHVlID0gd2luLmdldENvbXB1dGVkU3R5bGUoZWxlbWVudCwgbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShwcm9wZXJ0eSk7XG4gICAgICAgICAgaWYgKG5lZWRzT3ZlcmZsb3dSZXNldCkge1xuICAgICAgICAgICAgc3R5bGUub3ZlcmZsb3cgPSBvcmlnaW5hbE92ZXJmbG93IHx8IFwiXCI7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByZXR1cm5WYWx1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH07XG59KSgpOy8qKlxuICogSGlnaCBwZXJmb3JtYW50IHdheSB0byBjaGVjayB3aGV0aGVyIGFuIGVsZW1lbnQgd2l0aCBhIHNwZWNpZmljIHRhZyBuYW1lIGlzIGluIHRoZSBnaXZlbiBkb2N1bWVudFxuICogT3B0aW1pemVkIGZvciBiZWluZyBoZWF2aWx5IGV4ZWN1dGVkXG4gKiBVbmxlYXNoZXMgdGhlIHBvd2VyIG9mIGxpdmUgbm9kZSBsaXN0c1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkb2MgVGhlIGRvY3VtZW50IG9iamVjdCBvZiB0aGUgY29udGV4dCB3aGVyZSB0byBjaGVja1xuICogQHBhcmFtIHtTdHJpbmd9IHRhZ05hbWUgVXBwZXIgY2FzZWQgdGFnIG5hbWVcbiAqIEBleGFtcGxlXG4gKiAgICB3eXNpaHRtbDUuZG9tLmhhc0VsZW1lbnRXaXRoVGFnTmFtZShkb2N1bWVudCwgXCJJTUdcIik7XG4gKi9cbnd5c2lodG1sNS5kb20uaGFzRWxlbWVudFdpdGhUYWdOYW1lID0gKGZ1bmN0aW9uKCkge1xuICB2YXIgTElWRV9DQUNIRSAgICAgICAgICA9IHt9LFxuICAgICAgRE9DVU1FTlRfSURFTlRJRklFUiA9IDE7XG4gIFxuICBmdW5jdGlvbiBfZ2V0RG9jdW1lbnRJZGVudGlmaWVyKGRvYykge1xuICAgIHJldHVybiBkb2MuX3d5c2lodG1sNV9pZGVudGlmaWVyIHx8IChkb2MuX3d5c2lodG1sNV9pZGVudGlmaWVyID0gRE9DVU1FTlRfSURFTlRJRklFUisrKTtcbiAgfVxuICBcbiAgcmV0dXJuIGZ1bmN0aW9uKGRvYywgdGFnTmFtZSkge1xuICAgIHZhciBrZXkgICAgICAgICA9IF9nZXREb2N1bWVudElkZW50aWZpZXIoZG9jKSArIFwiOlwiICsgdGFnTmFtZSxcbiAgICAgICAgY2FjaGVFbnRyeSAgPSBMSVZFX0NBQ0hFW2tleV07XG4gICAgaWYgKCFjYWNoZUVudHJ5KSB7XG4gICAgICBjYWNoZUVudHJ5ID0gTElWRV9DQUNIRVtrZXldID0gZG9jLmdldEVsZW1lbnRzQnlUYWdOYW1lKHRhZ05hbWUpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gY2FjaGVFbnRyeS5sZW5ndGggPiAwO1xuICB9O1xufSkoKTsvKipcbiAqIEhpZ2ggcGVyZm9ybWFudCB3YXkgdG8gY2hlY2sgd2hldGhlciBhbiBlbGVtZW50IHdpdGggYSBzcGVjaWZpYyBjbGFzcyBuYW1lIGlzIGluIHRoZSBnaXZlbiBkb2N1bWVudFxuICogT3B0aW1pemVkIGZvciBiZWluZyBoZWF2aWx5IGV4ZWN1dGVkXG4gKiBVbmxlYXNoZXMgdGhlIHBvd2VyIG9mIGxpdmUgbm9kZSBsaXN0c1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkb2MgVGhlIGRvY3VtZW50IG9iamVjdCBvZiB0aGUgY29udGV4dCB3aGVyZSB0byBjaGVja1xuICogQHBhcmFtIHtTdHJpbmd9IHRhZ05hbWUgVXBwZXIgY2FzZWQgdGFnIG5hbWVcbiAqIEBleGFtcGxlXG4gKiAgICB3eXNpaHRtbDUuZG9tLmhhc0VsZW1lbnRXaXRoQ2xhc3NOYW1lKGRvY3VtZW50LCBcImZvb2JhclwiKTtcbiAqL1xuKGZ1bmN0aW9uKHd5c2lodG1sNSkge1xuICB2YXIgTElWRV9DQUNIRSAgICAgICAgICA9IHt9LFxuICAgICAgRE9DVU1FTlRfSURFTlRJRklFUiA9IDE7XG5cbiAgZnVuY3Rpb24gX2dldERvY3VtZW50SWRlbnRpZmllcihkb2MpIHtcbiAgICByZXR1cm4gZG9jLl93eXNpaHRtbDVfaWRlbnRpZmllciB8fCAoZG9jLl93eXNpaHRtbDVfaWRlbnRpZmllciA9IERPQ1VNRU5UX0lERU5USUZJRVIrKyk7XG4gIH1cbiAgXG4gIHd5c2lodG1sNS5kb20uaGFzRWxlbWVudFdpdGhDbGFzc05hbWUgPSBmdW5jdGlvbihkb2MsIGNsYXNzTmFtZSkge1xuICAgIC8vIGdldEVsZW1lbnRzQnlDbGFzc05hbWUgaXMgbm90IHN1cHBvcnRlZCBieSBJRTw5XG4gICAgLy8gYnV0IGlzIHNvbWV0aW1lcyBtb2NrZWQgdmlhIGxpYnJhcnkgY29kZSAod2hpY2ggdGhlbiBkb2Vzbid0IHJldHVybiBsaXZlIG5vZGUgbGlzdHMpXG4gICAgaWYgKCF3eXNpaHRtbDUuYnJvd3Nlci5zdXBwb3J0c05hdGl2ZUdldEVsZW1lbnRzQnlDbGFzc05hbWUoKSkge1xuICAgICAgcmV0dXJuICEhZG9jLnF1ZXJ5U2VsZWN0b3IoXCIuXCIgKyBjbGFzc05hbWUpO1xuICAgIH1cblxuICAgIHZhciBrZXkgICAgICAgICA9IF9nZXREb2N1bWVudElkZW50aWZpZXIoZG9jKSArIFwiOlwiICsgY2xhc3NOYW1lLFxuICAgICAgICBjYWNoZUVudHJ5ICA9IExJVkVfQ0FDSEVba2V5XTtcbiAgICBpZiAoIWNhY2hlRW50cnkpIHtcbiAgICAgIGNhY2hlRW50cnkgPSBMSVZFX0NBQ0hFW2tleV0gPSBkb2MuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShjbGFzc05hbWUpO1xuICAgIH1cblxuICAgIHJldHVybiBjYWNoZUVudHJ5Lmxlbmd0aCA+IDA7XG4gIH07XG59KSh3eXNpaHRtbDUpO1xud3lzaWh0bWw1LmRvbS5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50VG9JbnNlcnQpIHtcbiAgcmV0dXJuIHtcbiAgICBhZnRlcjogZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgZWxlbWVudC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtZW50VG9JbnNlcnQsIGVsZW1lbnQubmV4dFNpYmxpbmcpO1xuICAgIH0sXG4gICAgXG4gICAgYmVmb3JlOiBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICBlbGVtZW50LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW1lbnRUb0luc2VydCwgZWxlbWVudCk7XG4gICAgfSxcbiAgICBcbiAgICBpbnRvOiBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICBlbGVtZW50LmFwcGVuZENoaWxkKGVsZW1lbnRUb0luc2VydCk7XG4gICAgfVxuICB9O1xufTt3eXNpaHRtbDUuZG9tLmluc2VydENTUyA9IGZ1bmN0aW9uKHJ1bGVzKSB7XG4gIHJ1bGVzID0gcnVsZXMuam9pbihcIlxcblwiKTtcbiAgXG4gIHJldHVybiB7XG4gICAgaW50bzogZnVuY3Rpb24oZG9jKSB7XG4gICAgICB2YXIgc3R5bGVFbGVtZW50ID0gZG9jLmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgICAgIHN0eWxlRWxlbWVudC50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuICAgICAgXG4gICAgICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICAgICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJ1bGVzO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvYy5jcmVhdGVUZXh0Tm9kZShydWxlcykpO1xuICAgICAgfVxuICAgICAgXG4gICAgICB2YXIgbGluayA9IGRvYy5xdWVyeVNlbGVjdG9yKFwiaGVhZCBsaW5rXCIpO1xuICAgICAgaWYgKGxpbmspIHtcbiAgICAgICAgbGluay5wYXJlbnROb2RlLmluc2VydEJlZm9yZShzdHlsZUVsZW1lbnQsIGxpbmspO1xuICAgICAgICByZXR1cm47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgaGVhZCA9IGRvYy5xdWVyeVNlbGVjdG9yKFwiaGVhZFwiKTtcbiAgICAgICAgaWYgKGhlYWQpIHtcbiAgICAgICAgICBoZWFkLmFwcGVuZENoaWxkKHN0eWxlRWxlbWVudCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG59Oy8qKlxuICogTWV0aG9kIHRvIHNldCBkb20gZXZlbnRzXG4gKlxuICogQGV4YW1wbGVcbiAqICAgIHd5c2lodG1sNS5kb20ub2JzZXJ2ZShpZnJhbWUuY29udGVudFdpbmRvdy5kb2N1bWVudC5ib2R5LCBbXCJmb2N1c1wiLCBcImJsdXJcIl0sIGZ1bmN0aW9uKCkgeyAuLi4gfSk7XG4gKi9cbnd5c2lodG1sNS5kb20ub2JzZXJ2ZSA9IGZ1bmN0aW9uKGVsZW1lbnQsIGV2ZW50TmFtZXMsIGhhbmRsZXIpIHtcbiAgZXZlbnROYW1lcyA9IHR5cGVvZihldmVudE5hbWVzKSA9PT0gXCJzdHJpbmdcIiA/IFtldmVudE5hbWVzXSA6IGV2ZW50TmFtZXM7XG4gIFxuICB2YXIgaGFuZGxlcldyYXBwZXIsXG4gICAgICBldmVudE5hbWUsXG4gICAgICBpICAgICAgID0gMCxcbiAgICAgIGxlbmd0aCAgPSBldmVudE5hbWVzLmxlbmd0aDtcbiAgXG4gIGZvciAoOyBpPGxlbmd0aDsgaSsrKSB7XG4gICAgZXZlbnROYW1lID0gZXZlbnROYW1lc1tpXTtcbiAgICBpZiAoZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBoYW5kbGVyLCBmYWxzZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhhbmRsZXJXcmFwcGVyID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgaWYgKCEoXCJ0YXJnZXRcIiBpbiBldmVudCkpIHtcbiAgICAgICAgICBldmVudC50YXJnZXQgPSBldmVudC5zcmNFbGVtZW50O1xuICAgICAgICB9XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0ID0gZXZlbnQucHJldmVudERlZmF1bHQgfHwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdGhpcy5yZXR1cm5WYWx1ZSA9IGZhbHNlO1xuICAgICAgICB9O1xuICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24gPSBldmVudC5zdG9wUHJvcGFnYXRpb24gfHwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdGhpcy5jYW5jZWxCdWJibGUgPSB0cnVlO1xuICAgICAgICB9O1xuICAgICAgICBoYW5kbGVyLmNhbGwoZWxlbWVudCwgZXZlbnQpO1xuICAgICAgfTtcbiAgICAgIGVsZW1lbnQuYXR0YWNoRXZlbnQoXCJvblwiICsgZXZlbnROYW1lLCBoYW5kbGVyV3JhcHBlcik7XG4gICAgfVxuICB9XG4gIFxuICByZXR1cm4ge1xuICAgIHN0b3A6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGV2ZW50TmFtZSxcbiAgICAgICAgICBpICAgICAgID0gMCxcbiAgICAgICAgICBsZW5ndGggID0gZXZlbnROYW1lcy5sZW5ndGg7XG4gICAgICBmb3IgKDsgaTxsZW5ndGg7IGkrKykge1xuICAgICAgICBldmVudE5hbWUgPSBldmVudE5hbWVzW2ldO1xuICAgICAgICBpZiAoZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKSB7XG4gICAgICAgICAgZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgaGFuZGxlciwgZmFsc2UpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGVsZW1lbnQuZGV0YWNoRXZlbnQoXCJvblwiICsgZXZlbnROYW1lLCBoYW5kbGVyV3JhcHBlcik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG59O1xuLyoqXG4gKiBIVE1MIFNhbml0aXplclxuICogUmV3cml0ZXMgdGhlIEhUTUwgYmFzZWQgb24gZ2l2ZW4gcnVsZXNcbiAqXG4gKiBAcGFyYW0ge0VsZW1lbnR8U3RyaW5nfSBlbGVtZW50T3JIdG1sIEhUTUwgU3RyaW5nIHRvIGJlIHNhbml0aXplZCBPUiBlbGVtZW50IHdob3NlIGNvbnRlbnQgc2hvdWxkIGJlIHNhbml0aXplZFxuICogQHBhcmFtIHtPYmplY3R9IFtydWxlc10gTGlzdCBvZiBydWxlcyBmb3IgcmV3cml0aW5nIHRoZSBIVE1MLCBpZiB0aGVyZSdzIG5vIHJ1bGUgZm9yIGFuIGVsZW1lbnQgaXQgd2lsbFxuICogICAgYmUgY29udmVydGVkIHRvIGEgXCJzcGFuXCIuIEVhY2ggcnVsZSBpcyBhIGtleS92YWx1ZSBwYWlyIHdoZXJlIGtleSBpcyB0aGUgdGFnIHRvIGNvbnZlcnQsIGFuZCB2YWx1ZSB0aGVcbiAqICAgIGRlc2lyZWQgc3Vic3RpdHV0aW9uLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbnRleHQgRG9jdW1lbnQgb2JqZWN0IGluIHdoaWNoIHRvIHBhcnNlIHRoZSBodG1sLCBuZWVkZWQgdG8gc2FuZGJveCB0aGUgcGFyc2luZ1xuICpcbiAqIEByZXR1cm4ge0VsZW1lbnR8U3RyaW5nfSBEZXBlbmRzIG9uIHRoZSBlbGVtZW50T3JIdG1sIHBhcmFtZXRlci4gV2hlbiBodG1sIHRoZW4gdGhlIHNhbml0aXplZCBodG1sIGFzIHN0cmluZyBlbHNld2lzZSB0aGUgZWxlbWVudC5cbiAqXG4gKiBAZXhhbXBsZVxuICogICAgdmFyIHVzZXJIVE1MID0gJzxkaXYgaWQ9XCJmb29cIiBvbmNsaWNrPVwiYWxlcnQoMSk7XCI+PHA+PGZvbnQgY29sb3I9XCJyZWRcIj5mb288L2ZvbnQ+PHNjcmlwdD5hbGVydCgxKTs8L3NjcmlwdD48L3A+PC9kaXY+JztcbiAqICAgIHd5c2lodG1sNS5kb20ucGFyc2UodXNlckhUTUwsIHtcbiAqICAgICAgdGFncyB7XG4gKiAgICAgICAgcDogICAgICBcImRpdlwiLCAgICAgIC8vIFJlbmFtZSBwIHRhZ3MgdG8gZGl2IHRhZ3NcbiAqICAgICAgICBmb250OiAgIFwic3BhblwiICAgICAgLy8gUmVuYW1lIGZvbnQgdGFncyB0byBzcGFuIHRhZ3NcbiAqICAgICAgICBkaXY6ICAgIHRydWUsICAgICAgIC8vIEtlZXAgdGhlbSwgYWxzbyBwb3NzaWJsZSAoc2FtZSByZXN1bHQgd2hlbiBwYXNzaW5nOiBcImRpdlwiIG9yIHRydWUpXG4gKiAgICAgICAgc2NyaXB0OiB1bmRlZmluZWQgICAvLyBSZW1vdmUgc2NyaXB0IGVsZW1lbnRzXG4gKiAgICAgIH1cbiAqICAgIH0pO1xuICogICAgLy8gPT4gPGRpdj48ZGl2PjxzcGFuPmZvbyBiYXI8L3NwYW4+PC9kaXY+PC9kaXY+XG4gKlxuICogICAgdmFyIHVzZXJIVE1MID0gJzx0YWJsZT48dGJvZHk+PHRyPjx0ZD5JJ20gYSB0YWJsZSE8L3RkPjwvdHI+PC90Ym9keT48L3RhYmxlPic7XG4gKiAgICB3eXNpaHRtbDUuZG9tLnBhcnNlKHVzZXJIVE1MKTtcbiAqICAgIC8vID0+ICc8c3Bhbj48c3Bhbj48c3Bhbj48c3Bhbj5JJ20gYSB0YWJsZSE8L3NwYW4+PC9zcGFuPjwvc3Bhbj48L3NwYW4+J1xuICpcbiAqICAgIHZhciB1c2VySFRNTCA9ICc8ZGl2PmZvb2Jhcjxicj5mb29iYXI8L2Rpdj4nO1xuICogICAgd3lzaWh0bWw1LmRvbS5wYXJzZSh1c2VySFRNTCwge1xuICogICAgICB0YWdzOiB7XG4gKiAgICAgICAgZGl2OiB1bmRlZmluZWQsXG4gKiAgICAgICAgYnI6ICB0cnVlXG4gKiAgICAgIH1cbiAqICAgIH0pO1xuICogICAgLy8gPT4gJydcbiAqXG4gKiAgICB2YXIgdXNlckhUTUwgPSAnPGRpdiBjbGFzcz1cInJlZFwiPmZvbzwvZGl2PjxkaXYgY2xhc3M9XCJwaW5rXCI+YmFyPC9kaXY+JztcbiAqICAgIHd5c2lodG1sNS5kb20ucGFyc2UodXNlckhUTUwsIHtcbiAqICAgICAgY2xhc3Nlczoge1xuICogICAgICAgIHJlZDogICAgMSxcbiAqICAgICAgICBncmVlbjogIDFcbiAqICAgICAgfSxcbiAqICAgICAgdGFnczoge1xuICogICAgICAgIGRpdjoge1xuICogICAgICAgICAgcmVuYW1lX3RhZzogICAgIFwicFwiXG4gKiAgICAgICAgfVxuICogICAgICB9XG4gKiAgICB9KTtcbiAqICAgIC8vID0+ICc8cCBjbGFzcz1cInJlZFwiPmZvbzwvcD48cD5iYXI8L3A+J1xuICovXG53eXNpaHRtbDUuZG9tLnBhcnNlID0gKGZ1bmN0aW9uKCkge1xuXG4gIC8qKlxuICAgKiBJdCdzIG5vdCBwb3NzaWJsZSB0byB1c2UgYSBYTUxQYXJzZXIvRE9NUGFyc2VyIGFzIEhUTUw1IGlzIG5vdCBhbHdheXMgd2VsbC1mb3JtZWQgWE1MXG4gICAqIG5ldyBET01QYXJzZXIoKS5wYXJzZUZyb21TdHJpbmcoJzxpbWcgc3JjPVwiZm9vLmdpZlwiPicpIHdpbGwgY2F1c2UgYSBwYXJzZUVycm9yIHNpbmNlIHRoZVxuICAgKiBub2RlIGlzbid0IGNsb3NlZFxuICAgKlxuICAgKiBUaGVyZWZvcmUgd2UndmUgdG8gdXNlIHRoZSBicm93c2VyJ3Mgb3JkaW5hcnkgSFRNTCBwYXJzZXIgaW52b2tlZCBieSBzZXR0aW5nIGlubmVySFRNTC5cbiAgICovXG4gIHZhciBOT0RFX1RZUEVfTUFQUElORyA9IHtcbiAgICAgICAgXCIxXCI6IF9oYW5kbGVFbGVtZW50LFxuICAgICAgICBcIjNcIjogX2hhbmRsZVRleHRcbiAgICAgIH0sXG4gICAgICAvLyBSZW5hbWUgdW5rbm93biB0YWdzIHRvIHRoaXNcbiAgICAgIERFRkFVTFRfTk9ERV9OQU1FICAgPSBcInNwYW5cIixcbiAgICAgIFdISVRFX1NQQUNFX1JFR19FWFAgPSAvXFxzKy8sXG4gICAgICBkZWZhdWx0UnVsZXMgICAgICAgID0geyB0YWdzOiB7fSwgY2xhc3Nlczoge30gfSxcbiAgICAgIGN1cnJlbnRSdWxlcyAgICAgICAgPSB7fTtcblxuICAvKipcbiAgICogSXRlcmF0ZXMgb3ZlciBhbGwgY2hpbGRzIG9mIHRoZSBlbGVtZW50LCByZWNyZWF0ZXMgdGhlbSwgYXBwZW5kcyB0aGVtIGludG8gYSBkb2N1bWVudCBmcmFnbWVudFxuICAgKiB3aGljaCBsYXRlciByZXBsYWNlcyB0aGUgZW50aXJlIGJvZHkgY29udGVudFxuICAgKi9cbiAgZnVuY3Rpb24gcGFyc2UoZWxlbWVudE9ySHRtbCwgcnVsZXMsIGNvbnRleHQsIGNsZWFuVXApIHtcbiAgICB3eXNpaHRtbDUubGFuZy5vYmplY3QoY3VycmVudFJ1bGVzKS5tZXJnZShkZWZhdWx0UnVsZXMpLm1lcmdlKHJ1bGVzKS5nZXQoKTtcblxuICAgIGNvbnRleHQgICAgICAgICAgID0gY29udGV4dCB8fCBlbGVtZW50T3JIdG1sLm93bmVyRG9jdW1lbnQgfHwgZG9jdW1lbnQ7XG4gICAgdmFyIGZyYWdtZW50ICAgICAgPSBjb250ZXh0LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxcbiAgICAgICAgaXNTdHJpbmcgICAgICA9IHR5cGVvZihlbGVtZW50T3JIdG1sKSA9PT0gXCJzdHJpbmdcIixcbiAgICAgICAgZWxlbWVudCxcbiAgICAgICAgbmV3Tm9kZSxcbiAgICAgICAgZmlyc3RDaGlsZDtcblxuICAgIGlmIChpc1N0cmluZykge1xuICAgICAgZWxlbWVudCA9IHd5c2lodG1sNS5kb20uZ2V0QXNEb20oZWxlbWVudE9ySHRtbCwgY29udGV4dCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVsZW1lbnQgPSBlbGVtZW50T3JIdG1sO1xuICAgIH1cblxuICAgIHdoaWxlIChlbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIGZpcnN0Q2hpbGQgPSBlbGVtZW50LmZpcnN0Q2hpbGQ7XG4gICAgICBuZXdOb2RlID0gX2NvbnZlcnQoZmlyc3RDaGlsZCwgY2xlYW5VcCk7XG4gICAgICBlbGVtZW50LnJlbW92ZUNoaWxkKGZpcnN0Q2hpbGQpO1xuICAgICAgaWYgKG5ld05vZGUpIHtcbiAgICAgICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQobmV3Tm9kZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQ2xlYXIgZWxlbWVudCBjb250ZW50c1xuICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gXCJcIjtcblxuICAgIC8vIEluc2VydCBuZXcgRE9NIHRyZWVcbiAgICBlbGVtZW50LmFwcGVuZENoaWxkKGZyYWdtZW50KTtcblxuICAgIHJldHVybiBpc1N0cmluZyA/IHd5c2lodG1sNS5xdWlya3MuZ2V0Q29ycmVjdElubmVySFRNTChlbGVtZW50KSA6IGVsZW1lbnQ7XG4gIH1cblxuICBmdW5jdGlvbiBfY29udmVydChvbGROb2RlLCBjbGVhblVwKSB7XG4gICAgdmFyIG9sZE5vZGVUeXBlICAgICA9IG9sZE5vZGUubm9kZVR5cGUsXG4gICAgICAgIG9sZENoaWxkcyAgICAgICA9IG9sZE5vZGUuY2hpbGROb2RlcyxcbiAgICAgICAgb2xkQ2hpbGRzTGVuZ3RoID0gb2xkQ2hpbGRzLmxlbmd0aCxcbiAgICAgICAgbWV0aG9kICAgICAgICAgID0gTk9ERV9UWVBFX01BUFBJTkdbb2xkTm9kZVR5cGVdLFxuICAgICAgICBpICAgICAgICAgICAgICAgPSAwLFxuICAgICAgICBmcmFnbWVudCxcbiAgICAgICAgbmV3Tm9kZSxcbiAgICAgICAgbmV3Q2hpbGQ7XG5cbiAgICBuZXdOb2RlID0gbWV0aG9kICYmIG1ldGhvZChvbGROb2RlKTtcblxuICAgIGlmICghbmV3Tm9kZSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgZm9yIChpPTA7IGk8b2xkQ2hpbGRzTGVuZ3RoOyBpKyspIHtcbiAgICAgIG5ld0NoaWxkID0gX2NvbnZlcnQob2xkQ2hpbGRzW2ldLCBjbGVhblVwKTtcbiAgICAgIGlmIChuZXdDaGlsZCkge1xuICAgICAgICBuZXdOb2RlLmFwcGVuZENoaWxkKG5ld0NoaWxkKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBDbGVhbnVwIHNlbnNlbGVzcyA8c3Bhbj4gZWxlbWVudHNcbiAgICBpZiAoY2xlYW5VcCAmJlxuICAgICAgICBuZXdOb2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IERFRkFVTFRfTk9ERV9OQU1FICYmXG4gICAgICAgICghbmV3Tm9kZS5jaGlsZE5vZGVzLmxlbmd0aCB8fCAhbmV3Tm9kZS5hdHRyaWJ1dGVzLmxlbmd0aCkpIHtcbiAgICAgIGZyYWdtZW50ID0gbmV3Tm9kZS5vd25lckRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgICAgIHdoaWxlIChuZXdOb2RlLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQobmV3Tm9kZS5maXJzdENoaWxkKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmcmFnbWVudDtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3Tm9kZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9oYW5kbGVFbGVtZW50KG9sZE5vZGUpIHtcbiAgICB2YXIgcnVsZSxcbiAgICAgICAgbmV3Tm9kZSxcbiAgICAgICAgdGFnUnVsZXMgICAgPSBjdXJyZW50UnVsZXMudGFncyxcbiAgICAgICAgbm9kZU5hbWUgICAgPSBvbGROb2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksXG4gICAgICAgIHNjb3BlTmFtZSAgID0gb2xkTm9kZS5zY29wZU5hbWU7XG5cbiAgICAvKipcbiAgICAgKiBXZSBhbHJlYWR5IHBhcnNlZCB0aGF0IGVsZW1lbnRcbiAgICAgKiBpZ25vcmUgaXQhICh5ZXMsIHRoaXMgc29tZXRpbWVzIGhhcHBlbnMgaW4gSUU4IHdoZW4gdGhlIGh0bWwgaXMgaW52YWxpZClcbiAgICAgKi9cbiAgICBpZiAob2xkTm9kZS5fd3lzaWh0bWw1KSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgb2xkTm9kZS5fd3lzaWh0bWw1ID0gMTtcblxuICAgIGlmIChvbGROb2RlLmNsYXNzTmFtZSA9PT0gXCJ3eXNpaHRtbDUtdGVtcFwiKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBJRSBpcyB0aGUgb25seSBicm93c2VyIHdobyBkb2Vzbid0IGluY2x1ZGUgdGhlIG5hbWVzcGFjZSBpbiB0aGVcbiAgICAgKiBub2RlTmFtZSwgdGhhdCdzIHdoeSB3ZSBoYXZlIHRvIHByZXBlbmQgaXQgYnkgb3Vyc2VsdmVzXG4gICAgICogc2NvcGVOYW1lIGlzIGEgcHJvcHJpZXRhcnkgSUUgZmVhdHVyZVxuICAgICAqIHJlYWQgbW9yZSBoZXJlIGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9tczUzNDM4OCh2PXZzLjg1KS5hc3B4XG4gICAgICovXG4gICAgaWYgKHNjb3BlTmFtZSAmJiBzY29wZU5hbWUgIT0gXCJIVE1MXCIpIHtcbiAgICAgIG5vZGVOYW1lID0gc2NvcGVOYW1lICsgXCI6XCIgKyBub2RlTmFtZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXBhaXIgbm9kZVxuICAgICAqIElFIGlzIGEgYml0IGJpdGNoeSB3aGVuIGl0IGNvbWVzIHRvIGludmFsaWQgbmVzdGVkIG1hcmt1cCB3aGljaCBpbmNsdWRlcyB1bmNsb3NlZCB0YWdzXG4gICAgICogQSA8cD4gZG9lc24ndCBuZWVkIHRvIGJlIGNsb3NlZCBhY2NvcmRpbmcgSFRNTDQtNSBzcGVjLCB3ZSBzaW1wbHkgcmVwbGFjZSBpdCB3aXRoIGEgPGRpdj4gdG8gcHJlc2VydmUgaXRzIGNvbnRlbnQgYW5kIGxheW91dFxuICAgICAqL1xuICAgIGlmIChcIm91dGVySFRNTFwiIGluIG9sZE5vZGUpIHtcbiAgICAgIGlmICghd3lzaWh0bWw1LmJyb3dzZXIuYXV0b0Nsb3Nlc1VuY2xvc2VkVGFncygpICYmXG4gICAgICAgICAgb2xkTm9kZS5ub2RlTmFtZSA9PT0gXCJQXCIgJiZcbiAgICAgICAgICBvbGROb2RlLm91dGVySFRNTC5zbGljZSgtNCkudG9Mb3dlckNhc2UoKSAhPT0gXCI8L3A+XCIpIHtcbiAgICAgICAgbm9kZU5hbWUgPSBcImRpdlwiO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChub2RlTmFtZSBpbiB0YWdSdWxlcykge1xuICAgICAgcnVsZSA9IHRhZ1J1bGVzW25vZGVOYW1lXTtcbiAgICAgIGlmICghcnVsZSB8fCBydWxlLnJlbW92ZSkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cblxuICAgICAgcnVsZSA9IHR5cGVvZihydWxlKSA9PT0gXCJzdHJpbmdcIiA/IHsgcmVuYW1lX3RhZzogcnVsZSB9IDogcnVsZTtcbiAgICB9IGVsc2UgaWYgKG9sZE5vZGUuZmlyc3RDaGlsZCkge1xuICAgICAgcnVsZSA9IHsgcmVuYW1lX3RhZzogREVGQVVMVF9OT0RFX05BTUUgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gUmVtb3ZlIGVtcHR5IHVua25vd24gZWxlbWVudHNcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIG5ld05vZGUgPSBvbGROb2RlLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudChydWxlLnJlbmFtZV90YWcgfHwgbm9kZU5hbWUpO1xuICAgIF9oYW5kbGVBdHRyaWJ1dGVzKG9sZE5vZGUsIG5ld05vZGUsIHJ1bGUpO1xuXG4gICAgb2xkTm9kZSA9IG51bGw7XG4gICAgcmV0dXJuIG5ld05vZGU7XG4gIH1cblxuICBmdW5jdGlvbiBfaGFuZGxlQXR0cmlidXRlcyhvbGROb2RlLCBuZXdOb2RlLCBydWxlKSB7XG4gICAgdmFyIGF0dHJpYnV0ZXMgICAgICAgICAgPSB7fSwgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZnJlc2ggbmV3IHNldCBvZiBhdHRyaWJ1dGVzIHRvIHNldCBvbiBuZXdOb2RlXG4gICAgICAgIHNldENsYXNzICAgICAgICAgICAgPSBydWxlLnNldF9jbGFzcywgICAgICAgICAgICAgLy8gY2xhc3NlcyB0byBzZXRcbiAgICAgICAgYWRkQ2xhc3MgICAgICAgICAgICA9IHJ1bGUuYWRkX2NsYXNzLCAgICAgICAgICAgICAvLyBhZGQgY2xhc3NlcyBiYXNlZCBvbiBleGlzdGluZyBhdHRyaWJ1dGVzXG4gICAgICAgIHNldEF0dHJpYnV0ZXMgICAgICAgPSBydWxlLnNldF9hdHRyaWJ1dGVzLCAgICAgICAgLy8gYXR0cmlidXRlcyB0byBzZXQgb24gdGhlIGN1cnJlbnQgbm9kZVxuICAgICAgICBjaGVja0F0dHJpYnV0ZXMgICAgID0gcnVsZS5jaGVja19hdHRyaWJ1dGVzLCAgICAgIC8vIGNoZWNrL2NvbnZlcnQgdmFsdWVzIG9mIGF0dHJpYnV0ZXNcbiAgICAgICAgYWxsb3dlZENsYXNzZXMgICAgICA9IGN1cnJlbnRSdWxlcy5jbGFzc2VzLFxuICAgICAgICBpICAgICAgICAgICAgICAgICAgID0gMCxcbiAgICAgICAgY2xhc3NlcyAgICAgICAgICAgICA9IFtdLFxuICAgICAgICBuZXdDbGFzc2VzICAgICAgICAgID0gW10sXG4gICAgICAgIG5ld1VuaXF1ZUNsYXNzZXMgICAgPSBbXSxcbiAgICAgICAgb2xkQ2xhc3NlcyAgICAgICAgICA9IFtdLFxuICAgICAgICBjbGFzc2VzTGVuZ3RoLFxuICAgICAgICBuZXdDbGFzc2VzTGVuZ3RoLFxuICAgICAgICBjdXJyZW50Q2xhc3MsXG4gICAgICAgIG5ld0NsYXNzLFxuICAgICAgICBhdHRyaWJ1dGVOYW1lLFxuICAgICAgICBuZXdBdHRyaWJ1dGVWYWx1ZSxcbiAgICAgICAgbWV0aG9kO1xuXG4gICAgaWYgKHNldEF0dHJpYnV0ZXMpIHtcbiAgICAgIGF0dHJpYnV0ZXMgPSB3eXNpaHRtbDUubGFuZy5vYmplY3Qoc2V0QXR0cmlidXRlcykuY2xvbmUoKTtcbiAgICB9XG5cbiAgICBpZiAoY2hlY2tBdHRyaWJ1dGVzKSB7XG4gICAgICBmb3IgKGF0dHJpYnV0ZU5hbWUgaW4gY2hlY2tBdHRyaWJ1dGVzKSB7XG4gICAgICAgIG1ldGhvZCA9IGF0dHJpYnV0ZUNoZWNrTWV0aG9kc1tjaGVja0F0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV1dO1xuICAgICAgICBpZiAoIW1ldGhvZCkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIG5ld0F0dHJpYnV0ZVZhbHVlID0gbWV0aG9kKF9nZXRBdHRyaWJ1dGUob2xkTm9kZSwgYXR0cmlidXRlTmFtZSkpO1xuICAgICAgICBpZiAodHlwZW9mKG5ld0F0dHJpYnV0ZVZhbHVlKSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgIGF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV0gPSBuZXdBdHRyaWJ1dGVWYWx1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChzZXRDbGFzcykge1xuICAgICAgY2xhc3Nlcy5wdXNoKHNldENsYXNzKTtcbiAgICB9XG5cbiAgICBpZiAoYWRkQ2xhc3MpIHtcbiAgICAgIGZvciAoYXR0cmlidXRlTmFtZSBpbiBhZGRDbGFzcykge1xuICAgICAgICBtZXRob2QgPSBhZGRDbGFzc01ldGhvZHNbYWRkQ2xhc3NbYXR0cmlidXRlTmFtZV1dO1xuICAgICAgICBpZiAoIW1ldGhvZCkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIG5ld0NsYXNzID0gbWV0aG9kKF9nZXRBdHRyaWJ1dGUob2xkTm9kZSwgYXR0cmlidXRlTmFtZSkpO1xuICAgICAgICBpZiAodHlwZW9mKG5ld0NsYXNzKSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgIGNsYXNzZXMucHVzaChuZXdDbGFzcyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBtYWtlIHN1cmUgdGhhdCB3eXNpaHRtbDUgdGVtcCBjbGFzcyBkb2Vzbid0IGdldCBzdHJpcHBlZCBvdXRcbiAgICBhbGxvd2VkQ2xhc3Nlc1tcIl93eXNpaHRtbDUtdGVtcC1wbGFjZWhvbGRlclwiXSA9IDE7XG5cbiAgICAvLyBhZGQgb2xkIGNsYXNzZXMgbGFzdFxuICAgIG9sZENsYXNzZXMgPSBvbGROb2RlLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpO1xuICAgIGlmIChvbGRDbGFzc2VzKSB7XG4gICAgICBjbGFzc2VzID0gY2xhc3Nlcy5jb25jYXQob2xkQ2xhc3Nlcy5zcGxpdChXSElURV9TUEFDRV9SRUdfRVhQKSk7XG4gICAgfVxuICAgIGNsYXNzZXNMZW5ndGggPSBjbGFzc2VzLmxlbmd0aDtcbiAgICBmb3IgKDsgaTxjbGFzc2VzTGVuZ3RoOyBpKyspIHtcbiAgICAgIGN1cnJlbnRDbGFzcyA9IGNsYXNzZXNbaV07XG4gICAgICAvLyBEb25uYSAtIEFsbG93IGFsbCBjbGFzc2VzLlxuICAgICAgLy9pZiAoYWxsb3dlZENsYXNzZXNbY3VycmVudENsYXNzXSkge1xuICAgICAgICBuZXdDbGFzc2VzLnB1c2goY3VycmVudENsYXNzKTtcbiAgICAgIC8vfVxuICAgIH1cblxuICAgIC8vIHJlbW92ZSBkdXBsaWNhdGUgZW50cmllcyBhbmQgcHJlc2VydmUgY2xhc3Mgc3BlY2lmaWNpdHlcbiAgICBuZXdDbGFzc2VzTGVuZ3RoID0gbmV3Q2xhc3Nlcy5sZW5ndGg7XG4gICAgd2hpbGUgKG5ld0NsYXNzZXNMZW5ndGgtLSkge1xuICAgICAgY3VycmVudENsYXNzID0gbmV3Q2xhc3Nlc1tuZXdDbGFzc2VzTGVuZ3RoXTtcbiAgICAgIGlmICghd3lzaWh0bWw1LmxhbmcuYXJyYXkobmV3VW5pcXVlQ2xhc3NlcykuY29udGFpbnMoY3VycmVudENsYXNzKSkge1xuICAgICAgICBuZXdVbmlxdWVDbGFzc2VzLnVuc2hpZnQoY3VycmVudENsYXNzKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAobmV3VW5pcXVlQ2xhc3Nlcy5sZW5ndGgpIHtcbiAgICAgIGF0dHJpYnV0ZXNbXCJjbGFzc1wiXSA9IG5ld1VuaXF1ZUNsYXNzZXMuam9pbihcIiBcIik7XG4gICAgfVxuXG4gICAgLy8gc2V0IGF0dHJpYnV0ZXMgb24gbmV3Tm9kZVxuICAgIGZvciAoYXR0cmlidXRlTmFtZSBpbiBhdHRyaWJ1dGVzKSB7XG4gICAgICAvLyBTZXR0aW5nIGF0dHJpYnV0ZXMgY2FuIGNhdXNlIGEganMgZXJyb3IgaW4gSUUgdW5kZXIgY2VydGFpbiBjaXJjdW1zdGFuY2VzXG4gICAgICAvLyBlZy4gb24gYSA8aW1nPiB1bmRlciBodHRwcyB3aGVuIGl0J3MgbmV3IGF0dHJpYnV0ZSB2YWx1ZSBpcyBub24taHR0cHNcbiAgICAgIC8vIFRPRE86IEludmVzdGlnYXRlIHRoaXMgZnVydGhlciBhbmQgY2hlY2sgZm9yIHNtYXJ0ZXIgaGFuZGxpbmdcbiAgICAgIHRyeSB7XG4gICAgICAgIG5ld05vZGUuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZU5hbWUsIGF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV0pO1xuICAgICAgfSBjYXRjaChlKSB7fVxuICAgIH1cblxuICAgIC8vIElFOCBzb21ldGltZXMgbG9zZXMgdGhlIHdpZHRoL2hlaWdodCBhdHRyaWJ1dGVzIHdoZW4gdGhvc2UgYXJlIHNldCBiZWZvcmUgdGhlIFwic3JjXCJcbiAgICAvLyBzbyB3ZSBtYWtlIHN1cmUgdG8gc2V0IHRoZW0gYWdhaW5cbiAgICBpZiAoYXR0cmlidXRlcy5zcmMpIHtcbiAgICAgIGlmICh0eXBlb2YoYXR0cmlidXRlcy53aWR0aCkgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgbmV3Tm9kZS5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLCBhdHRyaWJ1dGVzLndpZHRoKTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YoYXR0cmlidXRlcy5oZWlnaHQpICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIG5ld05vZGUuc2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIsIGF0dHJpYnV0ZXMuaGVpZ2h0KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogSUUgZ2l2ZXMgd3JvbmcgcmVzdWx0cyBmb3IgaGFzQXR0cmlidXRlL2dldEF0dHJpYnV0ZSwgZm9yIGV4YW1wbGU6XG4gICAqICAgIHZhciB0ZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZFwiKTtcbiAgICogICAgdGQuZ2V0QXR0cmlidXRlKFwicm93c3BhblwiKTsgLy8gPT4gXCIxXCIgaW4gSUVcbiAgICpcbiAgICogVGhlcmVmb3JlIHdlIGhhdmUgdG8gY2hlY2sgdGhlIGVsZW1lbnQncyBvdXRlckhUTUwgZm9yIHRoZSBhdHRyaWJ1dGVcbiAgICovXG4gIHZhciBIQVNfR0VUX0FUVFJJQlVURV9CVUcgPSAhd3lzaWh0bWw1LmJyb3dzZXIuc3VwcG9ydHNHZXRBdHRyaWJ1dGVDb3JyZWN0bHkoKTtcbiAgZnVuY3Rpb24gX2dldEF0dHJpYnV0ZShub2RlLCBhdHRyaWJ1dGVOYW1lKSB7XG4gICAgYXR0cmlidXRlTmFtZSA9IGF0dHJpYnV0ZU5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICB2YXIgbm9kZU5hbWUgPSBub2RlLm5vZGVOYW1lO1xuICAgIGlmIChub2RlTmFtZSA9PSBcIklNR1wiICYmIGF0dHJpYnV0ZU5hbWUgPT0gXCJzcmNcIiAmJiBfaXNMb2FkZWRJbWFnZShub2RlKSA9PT0gdHJ1ZSkge1xuICAgICAgLy8gR2V0ICdzcmMnIGF0dHJpYnV0ZSB2YWx1ZSB2aWEgb2JqZWN0IHByb3BlcnR5IHNpbmNlIHRoaXMgd2lsbCBhbHdheXMgY29udGFpbiB0aGVcbiAgICAgIC8vIGZ1bGwgYWJzb2x1dGUgdXJsIChodHRwOi8vLi4uKVxuICAgICAgLy8gdGhpcyBmaXhlcyBhIHZlcnkgYW5ub3lpbmcgYnVnIGluIGZpcmVmb3ggKHZlciAzLjYgJiA0KSBhbmQgSUUgOCB3aGVyZSBpbWFnZXMgY29waWVkIGZyb20gdGhlIHNhbWUgaG9zdFxuICAgICAgLy8gd2lsbCBoYXZlIHJlbGF0aXZlIHBhdGhzLCB3aGljaCB0aGUgc2FuaXRpemVyIHN0cmlwcyBvdXQgKHNlZSBhdHRyaWJ1dGVDaGVja01ldGhvZHMudXJsKVxuICAgICAgcmV0dXJuIG5vZGUuc3JjO1xuICAgIH0gZWxzZSBpZiAoSEFTX0dFVF9BVFRSSUJVVEVfQlVHICYmIFwib3V0ZXJIVE1MXCIgaW4gbm9kZSkge1xuICAgICAgLy8gRG9uJ3QgdHJ1c3QgZ2V0QXR0cmlidXRlL2hhc0F0dHJpYnV0ZSBpbiBJRSA2LTgsIGluc3RlYWQgY2hlY2sgdGhlIGVsZW1lbnQncyBvdXRlckhUTUxcbiAgICAgIHZhciBvdXRlckhUTUwgICAgICA9IG5vZGUub3V0ZXJIVE1MLnRvTG93ZXJDYXNlKCksXG4gICAgICAgICAgLy8gVE9ETzogVGhpcyBtaWdodCBub3Qgd29yayBmb3IgYXR0cmlidXRlcyB3aXRob3V0IHZhbHVlOiA8aW5wdXQgZGlzYWJsZWQ+XG4gICAgICAgICAgaGFzQXR0cmlidXRlICAgPSBvdXRlckhUTUwuaW5kZXhPZihcIiBcIiArIGF0dHJpYnV0ZU5hbWUgKyAgXCI9XCIpICE9IC0xO1xuXG4gICAgICByZXR1cm4gaGFzQXR0cmlidXRlID8gbm9kZS5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlTmFtZSkgOiBudWxsO1xuICAgIH0gZWxzZXtcbiAgICAgIHJldHVybiBub2RlLmdldEF0dHJpYnV0ZShhdHRyaWJ1dGVOYW1lKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgd2hldGhlciB0aGUgZ2l2ZW4gbm9kZSBpcyBhIHByb3BlciBsb2FkZWQgaW1hZ2VcbiAgICogRklYTUU6IFJldHVybnMgdW5kZWZpbmVkIHdoZW4gdW5rbm93biAoQ2hyb21lLCBTYWZhcmkpXG4gICAqL1xuICBmdW5jdGlvbiBfaXNMb2FkZWRJbWFnZShub2RlKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBub2RlLmNvbXBsZXRlICYmICFub2RlLm1vek1hdGNoZXNTZWxlY3RvcihcIjotbW96LWJyb2tlblwiKTtcbiAgICB9IGNhdGNoKGUpIHtcbiAgICAgIGlmIChub2RlLmNvbXBsZXRlICYmIG5vZGUucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHZhciBJTlZJU0lCTEVfU1BBQ0VfUkVHX0VYUCA9IC9cXHVGRUZGL2c7XG4gIGZ1bmN0aW9uIF9oYW5kbGVUZXh0KG9sZE5vZGUpIHtcbiAgICB2YXIgbmV4dFNpYmxpbmcgPSBvbGROb2RlLm5leHRTaWJsaW5nO1xuICAgIGlmIChuZXh0U2libGluZyAmJiBuZXh0U2libGluZy5ub2RlVHlwZSA9PT0gd3lzaWh0bWw1LlRFWFRfTk9ERSkge1xuICAgICAgLy8gQ29uY2F0ZW5hdGUgdGV4dCBub2Rlc1xuICAgICAgbmV4dFNpYmxpbmcuZGF0YSA9IG9sZE5vZGUuZGF0YSArIG5leHRTaWJsaW5nLmRhdGE7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFxcdUZFRkYgPSB3eXNpaHRtbDUuSU5WSVNJQkxFX1NQQUNFICh1c2VkIGFzIGEgaGFjayBpbiBjZXJ0YWluIHJpY2ggdGV4dCBlZGl0aW5nIHNpdHVhdGlvbnMpXG4gICAgICB2YXIgZGF0YSA9IG9sZE5vZGUuZGF0YS5yZXBsYWNlKElOVklTSUJMRV9TUEFDRV9SRUdfRVhQLCBcIlwiKTtcbiAgICAgIHJldHVybiBvbGROb2RlLm93bmVyRG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoZGF0YSk7XG4gICAgfVxuICB9XG5cblxuICAvLyAtLS0tLS0tLS0tLS0gYXR0cmlidXRlIGNoZWNrcyAtLS0tLS0tLS0tLS0gXFxcXFxuICB2YXIgYXR0cmlidXRlQ2hlY2tNZXRob2RzID0ge1xuICAgIHVybDogKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIFJFR19FWFAgPSAvXmh0dHBzPzpcXC9cXC8vaTtcbiAgICAgIHJldHVybiBmdW5jdGlvbihhdHRyaWJ1dGVWYWx1ZSkge1xuICAgICAgICBpZiAoIWF0dHJpYnV0ZVZhbHVlIHx8ICFhdHRyaWJ1dGVWYWx1ZS5tYXRjaChSRUdfRVhQKSkge1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhdHRyaWJ1dGVWYWx1ZS5yZXBsYWNlKFJFR19FWFAsIGZ1bmN0aW9uKG1hdGNoKSB7XG4gICAgICAgICAgcmV0dXJuIG1hdGNoLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIH0pO1xuICAgICAgfTtcbiAgICB9KSgpLFxuXG4gICAgc3JjOiAoZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgUkVHX0VYUCA9IC9eKFxcL3xodHRwcz86XFwvXFwvKS9pO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKGF0dHJpYnV0ZVZhbHVlKSB7XG4gICAgICAgIGlmICghYXR0cmlidXRlVmFsdWUgfHwgIWF0dHJpYnV0ZVZhbHVlLm1hdGNoKFJFR19FWFApKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGF0dHJpYnV0ZVZhbHVlLnJlcGxhY2UoUkVHX0VYUCwgZnVuY3Rpb24obWF0Y2gpIHtcbiAgICAgICAgICByZXR1cm4gbWF0Y2gudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuICAgIH0pKCksXG5cbiAgICBocmVmOiAoZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgUkVHX0VYUCA9IC9eKFxcL3xodHRwcz86XFwvXFwvfG1haWx0bzopL2k7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oYXR0cmlidXRlVmFsdWUpIHtcbiAgICAgICAgaWYgKCFhdHRyaWJ1dGVWYWx1ZSB8fCAhYXR0cmlidXRlVmFsdWUubWF0Y2goUkVHX0VYUCkpIHtcbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXR0cmlidXRlVmFsdWUucmVwbGFjZShSRUdfRVhQLCBmdW5jdGlvbihtYXRjaCkge1xuICAgICAgICAgIHJldHVybiBtYXRjaC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICB9KTtcbiAgICAgIH07XG4gICAgfSkoKSxcblxuICAgIGFsdDogKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIFJFR19FWFAgPSAvW14gYS16MC05X1xcLV0vZ2k7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oYXR0cmlidXRlVmFsdWUpIHtcbiAgICAgICAgaWYgKCFhdHRyaWJ1dGVWYWx1ZSkge1xuICAgICAgICAgIHJldHVybiBcIlwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhdHRyaWJ1dGVWYWx1ZS5yZXBsYWNlKFJFR19FWFAsIFwiXCIpO1xuICAgICAgfTtcbiAgICB9KSgpLFxuXG4gICAgbnVtYmVyczogKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIFJFR19FWFAgPSAvXFxEL2c7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oYXR0cmlidXRlVmFsdWUpIHtcbiAgICAgICAgYXR0cmlidXRlVmFsdWUgPSAoYXR0cmlidXRlVmFsdWUgfHwgXCJcIikucmVwbGFjZShSRUdfRVhQLCBcIlwiKTtcbiAgICAgICAgcmV0dXJuIGF0dHJpYnV0ZVZhbHVlIHx8IG51bGw7XG4gICAgICB9O1xuICAgIH0pKClcbiAgfTtcblxuICAvLyAtLS0tLS0tLS0tLS0gY2xhc3MgY29udmVydGVyIChjb252ZXJ0cyBhbiBodG1sIGF0dHJpYnV0ZSB0byBhIGNsYXNzIG5hbWUpIC0tLS0tLS0tLS0tLSBcXFxcXG4gIHZhciBhZGRDbGFzc01ldGhvZHMgPSB7XG4gICAgYWxpZ25faW1nOiAoZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgbWFwcGluZyA9IHtcbiAgICAgICAgbGVmdDogICBcInd5c2l3eWctZmxvYXQtbGVmdFwiLFxuICAgICAgICByaWdodDogIFwid3lzaXd5Zy1mbG9hdC1yaWdodFwiXG4gICAgICB9O1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKGF0dHJpYnV0ZVZhbHVlKSB7XG4gICAgICAgIHJldHVybiBtYXBwaW5nW1N0cmluZyhhdHRyaWJ1dGVWYWx1ZSkudG9Mb3dlckNhc2UoKV07XG4gICAgICB9O1xuICAgIH0pKCksXG5cbiAgICBhbGlnbl90ZXh0OiAoZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgbWFwcGluZyA9IHtcbiAgICAgICAgbGVmdDogICAgIFwid3lzaXd5Zy10ZXh0LWFsaWduLWxlZnRcIixcbiAgICAgICAgcmlnaHQ6ICAgIFwid3lzaXd5Zy10ZXh0LWFsaWduLXJpZ2h0XCIsXG4gICAgICAgIGNlbnRlcjogICBcInd5c2l3eWctdGV4dC1hbGlnbi1jZW50ZXJcIixcbiAgICAgICAganVzdGlmeTogIFwid3lzaXd5Zy10ZXh0LWFsaWduLWp1c3RpZnlcIlxuICAgICAgfTtcbiAgICAgIHJldHVybiBmdW5jdGlvbihhdHRyaWJ1dGVWYWx1ZSkge1xuICAgICAgICByZXR1cm4gbWFwcGluZ1tTdHJpbmcoYXR0cmlidXRlVmFsdWUpLnRvTG93ZXJDYXNlKCldO1xuICAgICAgfTtcbiAgICB9KSgpLFxuXG4gICAgY2xlYXJfYnI6IChmdW5jdGlvbigpIHtcbiAgICAgIHZhciBtYXBwaW5nID0ge1xuICAgICAgICBsZWZ0OiAgIFwid3lzaXd5Zy1jbGVhci1sZWZ0XCIsXG4gICAgICAgIHJpZ2h0OiAgXCJ3eXNpd3lnLWNsZWFyLXJpZ2h0XCIsXG4gICAgICAgIGJvdGg6ICAgXCJ3eXNpd3lnLWNsZWFyLWJvdGhcIixcbiAgICAgICAgYWxsOiAgICBcInd5c2l3eWctY2xlYXItYm90aFwiXG4gICAgICB9O1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKGF0dHJpYnV0ZVZhbHVlKSB7XG4gICAgICAgIHJldHVybiBtYXBwaW5nW1N0cmluZyhhdHRyaWJ1dGVWYWx1ZSkudG9Mb3dlckNhc2UoKV07XG4gICAgICB9O1xuICAgIH0pKCksXG5cbiAgICBzaXplX2ZvbnQ6IChmdW5jdGlvbigpIHtcbiAgICAgIHZhciBtYXBwaW5nID0ge1xuICAgICAgICBcIjFcIjogXCJ3eXNpd3lnLWZvbnQtc2l6ZS14eC1zbWFsbFwiLFxuICAgICAgICBcIjJcIjogXCJ3eXNpd3lnLWZvbnQtc2l6ZS1zbWFsbFwiLFxuICAgICAgICBcIjNcIjogXCJ3eXNpd3lnLWZvbnQtc2l6ZS1tZWRpdW1cIixcbiAgICAgICAgXCI0XCI6IFwid3lzaXd5Zy1mb250LXNpemUtbGFyZ2VcIixcbiAgICAgICAgXCI1XCI6IFwid3lzaXd5Zy1mb250LXNpemUteC1sYXJnZVwiLFxuICAgICAgICBcIjZcIjogXCJ3eXNpd3lnLWZvbnQtc2l6ZS14eC1sYXJnZVwiLFxuICAgICAgICBcIjdcIjogXCJ3eXNpd3lnLWZvbnQtc2l6ZS14eC1sYXJnZVwiLFxuICAgICAgICBcIi1cIjogXCJ3eXNpd3lnLWZvbnQtc2l6ZS1zbWFsbGVyXCIsXG4gICAgICAgIFwiK1wiOiBcInd5c2l3eWctZm9udC1zaXplLWxhcmdlclwiXG4gICAgICB9O1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKGF0dHJpYnV0ZVZhbHVlKSB7XG4gICAgICAgIHJldHVybiBtYXBwaW5nW1N0cmluZyhhdHRyaWJ1dGVWYWx1ZSkuY2hhckF0KDApXTtcbiAgICAgIH07XG4gICAgfSkoKVxuICB9O1xuXG4gIHJldHVybiBwYXJzZTtcbn0pKCk7XG4vKipcbiAqIENoZWNrcyBmb3IgZW1wdHkgdGV4dCBub2RlIGNoaWxkcyBhbmQgcmVtb3ZlcyB0aGVtXG4gKlxuICogQHBhcmFtIHtFbGVtZW50fSBub2RlIFRoZSBlbGVtZW50IGluIHdoaWNoIHRvIGNsZWFudXBcbiAqIEBleGFtcGxlXG4gKiAgICB3eXNpaHRtbDUuZG9tLnJlbW92ZUVtcHR5VGV4dE5vZGVzKGVsZW1lbnQpO1xuICovXG53eXNpaHRtbDUuZG9tLnJlbW92ZUVtcHR5VGV4dE5vZGVzID0gZnVuY3Rpb24obm9kZSkge1xuICB2YXIgY2hpbGROb2RlLFxuICAgICAgY2hpbGROb2RlcyAgICAgICAgPSB3eXNpaHRtbDUubGFuZy5hcnJheShub2RlLmNoaWxkTm9kZXMpLmdldCgpLFxuICAgICAgY2hpbGROb2Rlc0xlbmd0aCAgPSBjaGlsZE5vZGVzLmxlbmd0aCxcbiAgICAgIGkgICAgICAgICAgICAgICAgID0gMDtcbiAgZm9yICg7IGk8Y2hpbGROb2Rlc0xlbmd0aDsgaSsrKSB7XG4gICAgY2hpbGROb2RlID0gY2hpbGROb2Rlc1tpXTtcbiAgICBpZiAoY2hpbGROb2RlLm5vZGVUeXBlID09PSB3eXNpaHRtbDUuVEVYVF9OT0RFICYmIGNoaWxkTm9kZS5kYXRhID09PSBcIlwiKSB7XG4gICAgICBjaGlsZE5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjaGlsZE5vZGUpO1xuICAgIH1cbiAgfVxufTtcbi8qKlxuICogUmVuYW1lcyBhbiBlbGVtZW50IChlZy4gYSA8ZGl2PiB0byBhIDxwPikgYW5kIGtlZXBzIGl0cyBjaGlsZHNcbiAqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQgVGhlIGxpc3QgZWxlbWVudCB3aGljaCBzaG91bGQgYmUgcmVuYW1lZFxuICogQHBhcmFtIHtFbGVtZW50fSBuZXdOb2RlTmFtZSBUaGUgZGVzaXJlZCB0YWcgbmFtZVxuICpcbiAqIEBleGFtcGxlXG4gKiAgICA8IS0tIEFzc3VtZSB0aGUgZm9sbG93aW5nIGRvbTogLS0+XG4gKiAgICA8dWwgaWQ9XCJsaXN0XCI+XG4gKiAgICAgIDxsaT5lbWluZW08L2xpPlxuICogICAgICA8bGk+ZHIuIGRyZTwvbGk+XG4gKiAgICAgIDxsaT41MCBDZW50PC9saT5cbiAqICAgIDwvdWw+XG4gKlxuICogICAgPHNjcmlwdD5cbiAqICAgICAgd3lzaWh0bWw1LmRvbS5yZW5hbWVFbGVtZW50KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibGlzdFwiKSwgXCJvbFwiKTtcbiAqICAgIDwvc2NyaXB0PlxuICpcbiAqICAgIDwhLS0gV2lsbCByZXN1bHQgaW46IC0tPlxuICogICAgPG9sPlxuICogICAgICA8bGk+ZW1pbmVtPC9saT5cbiAqICAgICAgPGxpPmRyLiBkcmU8L2xpPlxuICogICAgICA8bGk+NTAgQ2VudDwvbGk+XG4gKiAgICA8L29sPlxuICovXG53eXNpaHRtbDUuZG9tLnJlbmFtZUVsZW1lbnQgPSBmdW5jdGlvbihlbGVtZW50LCBuZXdOb2RlTmFtZSkge1xuICB2YXIgbmV3RWxlbWVudCA9IGVsZW1lbnQub3duZXJEb2N1bWVudC5jcmVhdGVFbGVtZW50KG5ld05vZGVOYW1lKSxcbiAgICAgIGZpcnN0Q2hpbGQ7XG4gIHdoaWxlIChmaXJzdENoaWxkID0gZWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgbmV3RWxlbWVudC5hcHBlbmRDaGlsZChmaXJzdENoaWxkKTtcbiAgfVxuICB3eXNpaHRtbDUuZG9tLmNvcHlBdHRyaWJ1dGVzKFtcImFsaWduXCIsIFwiY2xhc3NOYW1lXCJdKS5mcm9tKGVsZW1lbnQpLnRvKG5ld0VsZW1lbnQpO1xuICBlbGVtZW50LnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKG5ld0VsZW1lbnQsIGVsZW1lbnQpO1xuICByZXR1cm4gbmV3RWxlbWVudDtcbn07LyoqXG4gKiBUYWtlcyBhbiBlbGVtZW50LCByZW1vdmVzIGl0IGFuZCByZXBsYWNlcyBpdCB3aXRoIGl0J3MgY2hpbGRzXG4gKiBcbiAqIEBwYXJhbSB7T2JqZWN0fSBub2RlIFRoZSBub2RlIHdoaWNoIHRvIHJlcGxhY2Ugd2l0aCBpdCdzIGNoaWxkIG5vZGVzXG4gKiBAZXhhbXBsZVxuICogICAgPGRpdiBpZD1cImZvb1wiPlxuICogICAgICA8c3Bhbj5oZWxsbzwvc3Bhbj5cbiAqICAgIDwvZGl2PlxuICogICAgPHNjcmlwdD5cbiAqICAgICAgLy8gUmVtb3ZlICNmb28gYW5kIHJlcGxhY2Ugd2l0aCBpdCdzIGNoaWxkcmVuXG4gKiAgICAgIHd5c2lodG1sNS5kb20ucmVwbGFjZVdpdGhDaGlsZE5vZGVzKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZm9vXCIpKTtcbiAqICAgIDwvc2NyaXB0PlxuICovXG53eXNpaHRtbDUuZG9tLnJlcGxhY2VXaXRoQ2hpbGROb2RlcyA9IGZ1bmN0aW9uKG5vZGUpIHtcbiAgaWYgKCFub2RlLnBhcmVudE5vZGUpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgXG4gIGlmICghbm9kZS5maXJzdENoaWxkKSB7XG4gICAgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUpO1xuICAgIHJldHVybjtcbiAgfVxuICBcbiAgdmFyIGZyYWdtZW50ID0gbm9kZS5vd25lckRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgd2hpbGUgKG5vZGUuZmlyc3RDaGlsZCkge1xuICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKG5vZGUuZmlyc3RDaGlsZCk7XG4gIH1cbiAgbm9kZS5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChmcmFnbWVudCwgbm9kZSk7XG4gIG5vZGUgPSBmcmFnbWVudCA9IG51bGw7XG59O1xuLyoqXG4gKiBVbndyYXBzIGFuIHVub3JkZXJlZC9vcmRlcmVkIGxpc3RcbiAqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnQgVGhlIGxpc3QgZWxlbWVudCB3aGljaCBzaG91bGQgYmUgdW53cmFwcGVkXG4gKlxuICogQGV4YW1wbGVcbiAqICAgIDwhLS0gQXNzdW1lIHRoZSBmb2xsb3dpbmcgZG9tOiAtLT5cbiAqICAgIDx1bCBpZD1cImxpc3RcIj5cbiAqICAgICAgPGxpPmVtaW5lbTwvbGk+XG4gKiAgICAgIDxsaT5kci4gZHJlPC9saT5cbiAqICAgICAgPGxpPjUwIENlbnQ8L2xpPlxuICogICAgPC91bD5cbiAqXG4gKiAgICA8c2NyaXB0PlxuICogICAgICB3eXNpaHRtbDUuZG9tLnJlc29sdmVMaXN0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibGlzdFwiKSk7XG4gKiAgICA8L3NjcmlwdD5cbiAqXG4gKiAgICA8IS0tIFdpbGwgcmVzdWx0IGluOiAtLT5cbiAqICAgIGVtaW5lbTxicj5cbiAqICAgIGRyLiBkcmU8YnI+XG4gKiAgICA1MCBDZW50PGJyPlxuICovXG4oZnVuY3Rpb24oZG9tKSB7XG4gIGZ1bmN0aW9uIF9pc0Jsb2NrRWxlbWVudChub2RlKSB7XG4gICAgcmV0dXJuIGRvbS5nZXRTdHlsZShcImRpc3BsYXlcIikuZnJvbShub2RlKSA9PT0gXCJibG9ja1wiO1xuICB9XG4gIFxuICBmdW5jdGlvbiBfaXNMaW5lQnJlYWsobm9kZSkge1xuICAgIHJldHVybiBub2RlLm5vZGVOYW1lID09PSBcIkJSXCI7XG4gIH1cbiAgXG4gIGZ1bmN0aW9uIF9hcHBlbmRMaW5lQnJlYWsoZWxlbWVudCkge1xuICAgIHZhciBsaW5lQnJlYWsgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJyXCIpO1xuICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQobGluZUJyZWFrKTtcbiAgfVxuICBcbiAgZnVuY3Rpb24gcmVzb2x2ZUxpc3QobGlzdCwgdXNlTGluZUJyZWFrcykge1xuICAgIGlmICghbGlzdC5ub2RlTmFtZS5tYXRjaCgvXihNRU5VfFVMfE9MKSQvKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICB2YXIgZG9jICAgICAgICAgICAgID0gbGlzdC5vd25lckRvY3VtZW50LFxuICAgICAgICBmcmFnbWVudCAgICAgICAgPSBkb2MuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuICAgICAgICBwcmV2aW91c1NpYmxpbmcgPSBsaXN0LnByZXZpb3VzRWxlbWVudFNpYmxpbmcgfHwgbGlzdC5wcmV2aW91c1NpYmxpbmcsXG4gICAgICAgIGZpcnN0Q2hpbGQsXG4gICAgICAgIGxhc3RDaGlsZCxcbiAgICAgICAgaXNMYXN0Q2hpbGQsXG4gICAgICAgIHNob3VsZEFwcGVuZExpbmVCcmVhayxcbiAgICAgICAgcGFyYWdyYXBoLFxuICAgICAgICBsaXN0SXRlbTtcbiAgICBcbiAgICBpZiAodXNlTGluZUJyZWFrcykge1xuICAgICAgLy8gSW5zZXJ0IGxpbmUgYnJlYWsgaWYgbGlzdCBpcyBhZnRlciBhIG5vbi1ibG9jayBlbGVtZW50XG4gICAgICBpZiAocHJldmlvdXNTaWJsaW5nICYmICFfaXNCbG9ja0VsZW1lbnQocHJldmlvdXNTaWJsaW5nKSkge1xuICAgICAgICBfYXBwZW5kTGluZUJyZWFrKGZyYWdtZW50KTtcbiAgICAgIH1cblxuICAgICAgd2hpbGUgKGxpc3RJdGVtID0gKGxpc3QuZmlyc3RFbGVtZW50Q2hpbGQgfHwgbGlzdC5maXJzdENoaWxkKSkge1xuICAgICAgICBsYXN0Q2hpbGQgPSBsaXN0SXRlbS5sYXN0Q2hpbGQ7XG4gICAgICAgIHdoaWxlIChmaXJzdENoaWxkID0gbGlzdEl0ZW0uZmlyc3RDaGlsZCkge1xuICAgICAgICAgIGlzTGFzdENoaWxkICAgICAgICAgICA9IGZpcnN0Q2hpbGQgPT09IGxhc3RDaGlsZDtcbiAgICAgICAgICAvLyBUaGlzIG5lZWRzIHRvIGJlIGRvbmUgYmVmb3JlIGFwcGVuZGluZyBpdCB0byB0aGUgZnJhZ21lbnQsIGFzIGl0IG90aGVyd2lzZSB3aWxsIGxvc2Ugc3R5bGUgaW5mb3JtYXRpb25cbiAgICAgICAgICBzaG91bGRBcHBlbmRMaW5lQnJlYWsgPSBpc0xhc3RDaGlsZCAmJiAhX2lzQmxvY2tFbGVtZW50KGZpcnN0Q2hpbGQpICYmICFfaXNMaW5lQnJlYWsoZmlyc3RDaGlsZCk7XG4gICAgICAgICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoZmlyc3RDaGlsZCk7XG4gICAgICAgICAgaWYgKHNob3VsZEFwcGVuZExpbmVCcmVhaykge1xuICAgICAgICAgICAgX2FwcGVuZExpbmVCcmVhayhmcmFnbWVudCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBsaXN0SXRlbS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGxpc3RJdGVtKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgd2hpbGUgKGxpc3RJdGVtID0gKGxpc3QuZmlyc3RFbGVtZW50Q2hpbGQgfHwgbGlzdC5maXJzdENoaWxkKSkge1xuICAgICAgICBpZiAobGlzdEl0ZW0ucXVlcnlTZWxlY3RvciAmJiBsaXN0SXRlbS5xdWVyeVNlbGVjdG9yKFwiZGl2LCBwLCB1bCwgb2wsIG1lbnUsIGJsb2NrcXVvdGUsIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDZcIikpIHtcbiAgICAgICAgICB3aGlsZSAoZmlyc3RDaGlsZCA9IGxpc3RJdGVtLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKGZpcnN0Q2hpbGQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwYXJhZ3JhcGggPSBkb2MuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICAgICAgd2hpbGUgKGZpcnN0Q2hpbGQgPSBsaXN0SXRlbS5maXJzdENoaWxkKSB7XG4gICAgICAgICAgICBwYXJhZ3JhcGguYXBwZW5kQ2hpbGQoZmlyc3RDaGlsZCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKHBhcmFncmFwaCk7XG4gICAgICAgIH1cbiAgICAgICAgbGlzdEl0ZW0ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChsaXN0SXRlbSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGlzdC5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChmcmFnbWVudCwgbGlzdCk7XG4gIH1cbiAgXG4gIGRvbS5yZXNvbHZlTGlzdCA9IHJlc29sdmVMaXN0O1xufSkod3lzaWh0bWw1LmRvbSk7LyoqXG4gKiBTYW5kYm94IGZvciBleGVjdXRpbmcgamF2YXNjcmlwdCwgcGFyc2luZyBjc3Mgc3R5bGVzIGFuZCBkb2luZyBkb20gb3BlcmF0aW9ucyBpbiBhIHNlY3VyZSB3YXlcbiAqXG4gKiBCcm93c2VyIENvbXBhdGliaWxpdHk6XG4gKiAgLSBTZWN1cmUgaW4gTVNJRSA2KywgYnV0IG9ubHkgd2hlbiB0aGUgdXNlciBoYXNuJ3QgbWFkZSBjaGFuZ2VzIHRvIGhpcyBzZWN1cml0eSBsZXZlbCBcInJlc3RyaWN0ZWRcIlxuICogIC0gUGFydGlhbGx5IHNlY3VyZSBpbiBvdGhlciBicm93c2VycyAoRmlyZWZveCwgT3BlcmEsIFNhZmFyaSwgQ2hyb21lLCAuLi4pXG4gKlxuICogUGxlYXNlIG5vdGUgdGhhdCB0aGlzIGNsYXNzIGNhbid0IGJlbmVmaXQgZnJvbSB0aGUgSFRNTDUgc2FuZGJveCBhdHRyaWJ1dGUgZm9yIHRoZSBmb2xsb3dpbmcgcmVhc29uczpcbiAqICAgIC0gc2FuZGJveGluZyBkb2Vzbid0IHdvcmsgY29ycmVjdGx5IHdpdGggaW5saW5lZCBjb250ZW50IChzcmM9XCJqYXZhc2NyaXB0Oic8aHRtbD4uLi48L2h0bWw+J1wiKVxuICogICAgLSBzYW5kYm94aW5nIG9mIHBoeXNpY2FsIGRvY3VtZW50cyBjYXVzZXMgdGhhdCB0aGUgZG9tIGlzbid0IGFjY2Vzc2libGUgYW55bW9yZSBmcm9tIHRoZSBvdXRzaWRlIChpZnJhbWUuY29udGVudFdpbmRvdywgLi4uKVxuICogICAgLSBzZXR0aW5nIHRoZSBcImFsbG93LXNhbWUtb3JpZ2luXCIgZmxhZyB3b3VsZCBmaXggdGhhdCwgYnV0IHRoZW4gc3RpbGwgamF2YXNjcmlwdCBhbmQgZG9tIGV2ZW50cyByZWZ1c2UgdG8gZmlyZVxuICogICAgLSB0aGVyZWZvcmUgdGhlIFwiYWxsb3ctc2NyaXB0c1wiIGZsYWcgaXMgbmVlZGVkLCB3aGljaCB0aGVuIHdvdWxkIGRlYWN0aXZhdGUgYW55IHNlY3VyaXR5LCBhcyB0aGUganMgZXhlY3V0ZWQgaW5zaWRlIHRoZSBpZnJhbWVcbiAqICAgICAgY2FuIGRvIGFueXRoaW5nIGFzIGlmIHRoZSBzYW5kYm94IGF0dHJpYnV0ZSB3YXNuJ3Qgc2V0XG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW3JlYWR5Q2FsbGJhY2tdIE1ldGhvZCB0aGF0IGdldHMgaW52b2tlZCB3aGVuIHRoZSBzYW5kYm94IGlzIHJlYWR5XG4gKiBAcGFyYW0ge09iamVjdH0gW2NvbmZpZ10gT3B0aW9uYWwgcGFyYW1ldGVyc1xuICpcbiAqIEBleGFtcGxlXG4gKiAgICBuZXcgd3lzaWh0bWw1LmRvbS5TYW5kYm94KGZ1bmN0aW9uKHNhbmRib3gpIHtcbiAqICAgICAgc2FuZGJveC5nZXRXaW5kb3coKS5kb2N1bWVudC5ib2R5LmlubmVySFRNTCA9ICc8aW1nIHNyYz1mb28uZ2lmIG9uZXJyb3I9XCJhbGVydChkb2N1bWVudC5jb29raWUpXCI+JztcbiAqICAgIH0pO1xuICovXG4oZnVuY3Rpb24od3lzaWh0bWw1KSB7XG4gIHZhciAvKipcbiAgICAgICAqIERlZmF1bHQgY29uZmlndXJhdGlvblxuICAgICAgICovXG4gICAgICBkb2MgICAgICAgICAgICAgICAgID0gZG9jdW1lbnQsXG4gICAgICAvKipcbiAgICAgICAqIFByb3BlcnRpZXMgdG8gdW5zZXQvcHJvdGVjdCBvbiB0aGUgd2luZG93IG9iamVjdFxuICAgICAgICovXG4gICAgICB3aW5kb3dQcm9wZXJ0aWVzICAgID0gW1xuICAgICAgICBcInBhcmVudFwiLCBcInRvcFwiLCBcIm9wZW5lclwiLCBcImZyYW1lRWxlbWVudFwiLCBcImZyYW1lc1wiLFxuICAgICAgICBcImxvY2FsU3RvcmFnZVwiLCBcImdsb2JhbFN0b3JhZ2VcIiwgXCJzZXNzaW9uU3RvcmFnZVwiLCBcImluZGV4ZWREQlwiXG4gICAgICBdLFxuICAgICAgLyoqXG4gICAgICAgKiBQcm9wZXJ0aWVzIG9uIHRoZSB3aW5kb3cgb2JqZWN0IHdoaWNoIGFyZSBzZXQgdG8gYW4gZW1wdHkgZnVuY3Rpb25cbiAgICAgICAqL1xuICAgICAgd2luZG93UHJvcGVydGllczIgICA9IFtcbiAgICAgICAgXCJvcGVuXCIsIFwiY2xvc2VcIiwgXCJvcGVuRGlhbG9nXCIsIFwic2hvd01vZGFsRGlhbG9nXCIsXG4gICAgICAgIFwiYWxlcnRcIiwgXCJjb25maXJtXCIsIFwicHJvbXB0XCIsXG4gICAgICAgIFwib3BlbkRhdGFiYXNlXCIsIFwicG9zdE1lc3NhZ2VcIixcbiAgICAgICAgXCJYTUxIdHRwUmVxdWVzdFwiLCBcIlhEb21haW5SZXF1ZXN0XCJcbiAgICAgIF0sXG4gICAgICAvKipcbiAgICAgICAqIFByb3BlcnRpZXMgdG8gdW5zZXQvcHJvdGVjdCBvbiB0aGUgZG9jdW1lbnQgb2JqZWN0XG4gICAgICAgKi9cbiAgICAgIGRvY3VtZW50UHJvcGVydGllcyAgPSBbXG4gICAgICAgIFwicmVmZXJyZXJcIixcbiAgICAgICAgXCJ3cml0ZVwiLCBcIm9wZW5cIiwgXCJjbG9zZVwiXG4gICAgICBdO1xuICBcbiAgd3lzaWh0bWw1LmRvbS5TYW5kYm94ID0gQmFzZS5leHRlbmQoXG4gICAgLyoqIEBzY29wZSB3eXNpaHRtbDUuZG9tLlNhbmRib3gucHJvdG90eXBlICovIHtcblxuICAgIGNvbnN0cnVjdG9yOiBmdW5jdGlvbihyZWFkeUNhbGxiYWNrLCBjb25maWcpIHtcbiAgICAgIHRoaXMuY2FsbGJhY2sgPSByZWFkeUNhbGxiYWNrIHx8IHd5c2lodG1sNS5FTVBUWV9GVU5DVElPTjtcbiAgICAgIHRoaXMuY29uZmlnICAgPSB3eXNpaHRtbDUubGFuZy5vYmplY3Qoe30pLm1lcmdlKGNvbmZpZykuZ2V0KCk7XG4gICAgICB0aGlzLmlmcmFtZSAgID0gdGhpcy5fY3JlYXRlSWZyYW1lKCk7XG4gICAgfSxcbiAgICBcbiAgICBpbnNlcnRJbnRvOiBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICBpZiAodHlwZW9mKGVsZW1lbnQpID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGVsZW1lbnQgPSBkb2MuZ2V0RWxlbWVudEJ5SWQoZWxlbWVudCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGVsZW1lbnQuYXBwZW5kQ2hpbGQodGhpcy5pZnJhbWUpO1xuICAgIH0sXG5cbiAgICBnZXRJZnJhbWU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuaWZyYW1lO1xuICAgIH0sXG5cbiAgICBnZXRXaW5kb3c6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5fcmVhZHlFcnJvcigpO1xuICAgIH0sXG5cbiAgICBnZXREb2N1bWVudDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLl9yZWFkeUVycm9yKCk7XG4gICAgfSxcblxuICAgIGRlc3Ryb3k6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGlmcmFtZSA9IHRoaXMuZ2V0SWZyYW1lKCk7XG4gICAgICBpZnJhbWUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChpZnJhbWUpO1xuICAgIH0sXG5cbiAgICBfcmVhZHlFcnJvcjogZnVuY3Rpb24oKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ3eXNpaHRtbDUuU2FuZGJveDogU2FuZGJveCBpZnJhbWUgaXNuJ3QgbG9hZGVkIHlldFwiKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyB0aGUgc2FuZGJveCBpZnJhbWVcbiAgICAgKlxuICAgICAqIFNvbWUgaW1wb3J0YW50IG5vdGVzOlxuICAgICAqICAtIFdlIGNhbid0IHVzZSBIVE1MNSBzYW5kYm94IGZvciBub3c6XG4gICAgICogICAgc2V0dGluZyBpdCBjYXVzZXMgdGhhdCB0aGUgaWZyYW1lJ3MgZG9tIGNhbid0IGJlIGFjY2Vzc2VkIGZyb20gdGhlIG91dHNpZGVcbiAgICAgKiAgICBUaGVyZWZvcmUgd2UgbmVlZCB0byBzZXQgdGhlIFwiYWxsb3ctc2FtZS1vcmlnaW5cIiBmbGFnIHdoaWNoIGVuYWJsZXMgYWNjZXNzaW5nIHRoZSBpZnJhbWUncyBkb21cbiAgICAgKiAgICBCdXQgdGhlbiB0aGVyZSdzIGFub3RoZXIgcHJvYmxlbSwgRE9NIGV2ZW50cyAoZm9jdXMsIGJsdXIsIGNoYW5nZSwga2V5cHJlc3MsIC4uLikgYXJlbid0IGZpcmVkLlxuICAgICAqICAgIEluIG9yZGVyIHRvIG1ha2UgdGhpcyBoYXBwZW4gd2UgbmVlZCB0byBzZXQgdGhlIFwiYWxsb3ctc2NyaXB0c1wiIGZsYWcuXG4gICAgICogICAgQSBjb21iaW5hdGlvbiBvZiBhbGxvdy1zY3JpcHRzIGFuZCBhbGxvdy1zYW1lLW9yaWdpbiBpcyBhbG1vc3QgdGhlIHNhbWUgYXMgc2V0dGluZyBubyBzYW5kYm94IGF0dHJpYnV0ZSBhdCBhbGwuXG4gICAgICogIC0gQ2hyb21lICYgU2FmYXJpLCBkb2Vzbid0IHNlZW0gdG8gc3VwcG9ydCBzYW5kYm94aW5nIGNvcnJlY3RseSB3aGVuIHRoZSBpZnJhbWUncyBodG1sIGlzIGlubGluZWQgKG5vIHBoeXNpY2FsIGRvY3VtZW50KVxuICAgICAqICAtIElFIG5lZWRzIHRvIGhhdmUgdGhlIHNlY3VyaXR5PVwicmVzdHJpY3RlZFwiIGF0dHJpYnV0ZSBzZXQgYmVmb3JlIHRoZSBpZnJhbWUgaXMgXG4gICAgICogICAgaW5zZXJ0ZWQgaW50byB0aGUgZG9tIHRyZWVcbiAgICAgKiAgLSBCZWxpZXZlIGl0IG9yIG5vdCBidXQgaW4gSUUgXCJzZWN1cml0eVwiIGluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIikgaXMgZmFsc2UsIGV2ZW5cbiAgICAgKiAgICB0aG91Z2ggaXQgc3VwcG9ydHMgaXRcbiAgICAgKiAgLSBXaGVuIGFuIGlmcmFtZSBoYXMgc2VjdXJpdHk9XCJyZXN0cmljdGVkXCIsIGluIElFIGV2YWwoKSAmIGV4ZWNTY3JpcHQoKSBkb24ndCB3b3JrIGFueW1vcmVcbiAgICAgKiAgLSBJRSBkb2Vzbid0IGZpcmUgdGhlIG9ubG9hZCBldmVudCB3aGVuIHRoZSBjb250ZW50IGlzIGlubGluZWQgaW4gdGhlIHNyYyBhdHRyaWJ1dGUsIHRoZXJlZm9yZSB3ZSByZWx5XG4gICAgICogICAgb24gdGhlIG9ucmVhZHlzdGF0ZWNoYW5nZSBldmVudFxuICAgICAqL1xuICAgIF9jcmVhdGVJZnJhbWU6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHRoYXQgICA9IHRoaXMsXG4gICAgICAgICAgaWZyYW1lID0gZG9jLmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIik7XG4gICAgICBpZnJhbWUuY2xhc3NOYW1lID0gXCJ3eXNpaHRtbDUtc2FuZGJveFwiO1xuICAgICAgd3lzaWh0bWw1LmRvbS5zZXRBdHRyaWJ1dGVzKHtcbiAgICAgICAgXCJzZWN1cml0eVwiOiAgICAgICAgICAgXCJyZXN0cmljdGVkXCIsXG4gICAgICAgIFwiYWxsb3d0cmFuc3BhcmVuY3lcIjogIFwidHJ1ZVwiLFxuICAgICAgICBcImZyYW1lYm9yZGVyXCI6ICAgICAgICAwLFxuICAgICAgICBcIndpZHRoXCI6ICAgICAgICAgICAgICAwLFxuICAgICAgICBcImhlaWdodFwiOiAgICAgICAgICAgICAwLFxuICAgICAgICBcIm1hcmdpbndpZHRoXCI6ICAgICAgICAwLFxuICAgICAgICBcIm1hcmdpbmhlaWdodFwiOiAgICAgICAwXG4gICAgICB9KS5vbihpZnJhbWUpO1xuXG4gICAgICAvLyBTZXR0aW5nIHRoZSBzcmMgbGlrZSB0aGlzIHByZXZlbnRzIHNzbCB3YXJuaW5ncyBpbiBJRTZcbiAgICAgIGlmICh3eXNpaHRtbDUuYnJvd3Nlci50aHJvd3NNaXhlZENvbnRlbnRXYXJuaW5nV2hlbklmcmFtZVNyY0lzRW1wdHkoKSkge1xuICAgICAgICBpZnJhbWUuc3JjID0gXCJqYXZhc2NyaXB0Oic8aHRtbD48L2h0bWw+J1wiO1xuICAgICAgfVxuXG4gICAgICBpZnJhbWUub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmcmFtZS5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBpZnJhbWUub25sb2FkID0gbnVsbDtcbiAgICAgICAgdGhhdC5fb25Mb2FkSWZyYW1lKGlmcmFtZSk7XG4gICAgICB9O1xuXG4gICAgICBpZnJhbWUub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICgvbG9hZGVkfGNvbXBsZXRlLy50ZXN0KGlmcmFtZS5yZWFkeVN0YXRlKSkge1xuICAgICAgICAgIGlmcmFtZS5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBpZnJhbWUub25sb2FkID0gbnVsbDtcbiAgICAgICAgICB0aGF0Ll9vbkxvYWRJZnJhbWUoaWZyYW1lKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIGlmcmFtZTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogQ2FsbGJhY2sgZm9yIHdoZW4gdGhlIGlmcmFtZSBoYXMgZmluaXNoZWQgbG9hZGluZ1xuICAgICAqL1xuICAgIF9vbkxvYWRJZnJhbWU6IGZ1bmN0aW9uKGlmcmFtZSkge1xuICAgICAgLy8gZG9uJ3QgcmVzdW1lIHdoZW4gdGhlIGlmcmFtZSBnb3QgdW5sb2FkZWQgKGVnLiBieSByZW1vdmluZyBpdCBmcm9tIHRoZSBkb20pXG4gICAgICBpZiAoIXd5c2lodG1sNS5kb20uY29udGFpbnMoZG9jLmRvY3VtZW50RWxlbWVudCwgaWZyYW1lKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciB0aGF0ICAgICAgICAgICA9IHRoaXMsXG4gICAgICAgICAgaWZyYW1lV2luZG93ICAgPSBpZnJhbWUuY29udGVudFdpbmRvdyxcbiAgICAgICAgICBpZnJhbWVEb2N1bWVudCA9IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50LFxuICAgICAgICAgIGNoYXJzZXQgICAgICAgID0gZG9jLmNoYXJhY3RlclNldCB8fCBkb2MuY2hhcnNldCB8fCBcInV0Zi04XCIsXG4gICAgICAgICAgc2FuZGJveEh0bWwgICAgPSB0aGlzLl9nZXRIdG1sKHtcbiAgICAgICAgICAgIGNoYXJzZXQ6ICAgICAgY2hhcnNldCxcbiAgICAgICAgICAgIHN0eWxlc2hlZXRzOiAgdGhpcy5jb25maWcuc3R5bGVzaGVldHNcbiAgICAgICAgICB9KTtcblxuICAgICAgLy8gQ3JlYXRlIHRoZSBiYXNpYyBkb20gdHJlZSBpbmNsdWRpbmcgcHJvcGVyIERPQ1RZUEUgYW5kIGNoYXJzZXRcbiAgICAgIGlmcmFtZURvY3VtZW50Lm9wZW4oXCJ0ZXh0L2h0bWxcIiwgXCJyZXBsYWNlXCIpO1xuICAgICAgaWZyYW1lRG9jdW1lbnQud3JpdGUoc2FuZGJveEh0bWwpO1xuICAgICAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTtcblxuICAgICAgdGhpcy5nZXRXaW5kb3cgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGlmcmFtZS5jb250ZW50V2luZG93OyB9O1xuICAgICAgdGhpcy5nZXREb2N1bWVudCA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7IH07XG5cbiAgICAgIC8vIENhdGNoIGpzIGVycm9ycyBhbmQgcGFzcyB0aGVtIHRvIHRoZSBwYXJlbnQncyBvbmVycm9yIGV2ZW50XG4gICAgICAvLyBhZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIikgZG9lc24ndCB3b3JrIHByb3Blcmx5IGluIHNvbWUgYnJvd3NlcnNcbiAgICAgIC8vIFRPRE86IGFwcGFyZW50bHkgdGhpcyBkb2Vzbid0IHdvcmsgaW4gSUU5IVxuICAgICAgaWZyYW1lV2luZG93Lm9uZXJyb3IgPSBmdW5jdGlvbihlcnJvck1lc3NhZ2UsIGZpbGVOYW1lLCBsaW5lTnVtYmVyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcInd5c2lodG1sNS5TYW5kYm94OiBcIiArIGVycm9yTWVzc2FnZSwgZmlsZU5hbWUsIGxpbmVOdW1iZXIpO1xuICAgICAgfTtcblxuICAgICAgaWYgKCF3eXNpaHRtbDUuYnJvd3Nlci5zdXBwb3J0c1NhbmRib3hlZElmcmFtZXMoKSkge1xuICAgICAgICAvLyBVbnNldCBhIGJ1bmNoIG9mIHNlbnNpdGl2ZSB2YXJpYWJsZXNcbiAgICAgICAgLy8gUGxlYXNlIG5vdGU6IFRoaXMgaXNuJ3QgaGFjayBzYWZlISAgXG4gICAgICAgIC8vIEl0IG1vcmUgb3IgbGVzcyBqdXN0IHRha2VzIGNhcmUgb2YgYmFzaWMgYXR0YWNrcyBhbmQgcHJldmVudHMgYWNjaWRlbnRhbCB0aGVmdCBvZiBzZW5zaXRpdmUgaW5mb3JtYXRpb25cbiAgICAgICAgLy8gSUUgaXMgc2VjdXJlIHRob3VnaCwgd2hpY2ggaXMgdGhlIG1vc3QgaW1wb3J0YW50IHRoaW5nLCBzaW5jZSBJRSBpcyB0aGUgb25seSBicm93c2VyLCB3aG9cbiAgICAgICAgLy8gdGFrZXMgb3ZlciBzY3JpcHRzICYgc3R5bGVzIGludG8gY29udGVudEVkaXRhYmxlIGVsZW1lbnRzIHdoZW4gY29waWVkIGZyb20gZXh0ZXJuYWwgd2Vic2l0ZXNcbiAgICAgICAgLy8gb3IgYXBwbGljYXRpb25zIChNaWNyb3NvZnQgV29yZCwgLi4uKVxuICAgICAgICB2YXIgaSwgbGVuZ3RoO1xuICAgICAgICBmb3IgKGk9MCwgbGVuZ3RoPXdpbmRvd1Byb3BlcnRpZXMubGVuZ3RoOyBpPGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgdGhpcy5fdW5zZXQoaWZyYW1lV2luZG93LCB3aW5kb3dQcm9wZXJ0aWVzW2ldKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGk9MCwgbGVuZ3RoPXdpbmRvd1Byb3BlcnRpZXMyLmxlbmd0aDsgaTxsZW5ndGg7IGkrKykge1xuICAgICAgICAgIHRoaXMuX3Vuc2V0KGlmcmFtZVdpbmRvdywgd2luZG93UHJvcGVydGllczJbaV0sIHd5c2lodG1sNS5FTVBUWV9GVU5DVElPTik7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChpPTAsIGxlbmd0aD1kb2N1bWVudFByb3BlcnRpZXMubGVuZ3RoOyBpPGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgdGhpcy5fdW5zZXQoaWZyYW1lRG9jdW1lbnQsIGRvY3VtZW50UHJvcGVydGllc1tpXSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVGhpcyBkb2Vzbid0IHdvcmsgaW4gU2FmYXJpIDUgXG4gICAgICAgIC8vIFNlZSBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzk5MjQ2MS9pcy1pdC1wb3NzaWJsZS10by1vdmVycmlkZS1kb2N1bWVudC1jb29raWUtaW4td2Via2l0XG4gICAgICAgIHRoaXMuX3Vuc2V0KGlmcmFtZURvY3VtZW50LCBcImNvb2tpZVwiLCBcIlwiLCB0cnVlKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5sb2FkZWQgPSB0cnVlO1xuXG4gICAgICAvLyBUcmlnZ2VyIHRoZSBjYWxsYmFja1xuICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsgdGhhdC5jYWxsYmFjayh0aGF0KTsgfSwgMCk7XG4gICAgfSxcblxuICAgIF9nZXRIdG1sOiBmdW5jdGlvbih0ZW1wbGF0ZVZhcnMpIHtcbiAgICAgIHZhciBzdHlsZXNoZWV0cyA9IHRlbXBsYXRlVmFycy5zdHlsZXNoZWV0cyxcbiAgICAgICAgICBodG1sICAgICAgICA9IFwiXCIsXG4gICAgICAgICAgaSAgICAgICAgICAgPSAwLFxuICAgICAgICAgIGxlbmd0aDtcbiAgICAgIHN0eWxlc2hlZXRzID0gdHlwZW9mKHN0eWxlc2hlZXRzKSA9PT0gXCJzdHJpbmdcIiA/IFtzdHlsZXNoZWV0c10gOiBzdHlsZXNoZWV0cztcbiAgICAgIGlmIChzdHlsZXNoZWV0cykge1xuICAgICAgICBsZW5ndGggPSBzdHlsZXNoZWV0cy5sZW5ndGg7XG4gICAgICAgIGZvciAoOyBpPGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgaHRtbCArPSAnPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIGhyZWY9XCInICsgc3R5bGVzaGVldHNbaV0gKyAnXCI+JztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdGVtcGxhdGVWYXJzLnN0eWxlc2hlZXRzID0gaHRtbDtcblxuICAgICAgcmV0dXJuIHd5c2lodG1sNS5sYW5nLnN0cmluZyhcbiAgICAgICAgJzwhRE9DVFlQRSBodG1sPjxodG1sPjxoZWFkPidcbiAgICAgICAgKyAnPG1ldGEgY2hhcnNldD1cIiN7Y2hhcnNldH1cIj4je3N0eWxlc2hlZXRzfTwvaGVhZD4nXG4gICAgICAgICsgJzxib2R5PjwvYm9keT48L2h0bWw+J1xuICAgICAgKS5pbnRlcnBvbGF0ZSh0ZW1wbGF0ZVZhcnMpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBNZXRob2QgdG8gdW5zZXQvb3ZlcnJpZGUgZXhpc3RpbmcgdmFyaWFibGVzXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiAgICAvLyBNYWtlIGNvb2tpZSB1bnJlYWRhYmxlIGFuZCB1bndyaXRhYmxlXG4gICAgICogICAgdGhpcy5fdW5zZXQoZG9jdW1lbnQsIFwiY29va2llXCIsIFwiXCIsIHRydWUpO1xuICAgICAqL1xuICAgIF91bnNldDogZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSwgdmFsdWUsIHNldHRlcikge1xuICAgICAgdHJ5IHsgb2JqZWN0W3Byb3BlcnR5XSA9IHZhbHVlOyB9IGNhdGNoKGUpIHt9XG5cbiAgICAgIHRyeSB7IG9iamVjdC5fX2RlZmluZUdldHRlcl9fKHByb3BlcnR5LCBmdW5jdGlvbigpIHsgcmV0dXJuIHZhbHVlOyB9KTsgfSBjYXRjaChlKSB7fVxuICAgICAgaWYgKHNldHRlcikge1xuICAgICAgICB0cnkgeyBvYmplY3QuX19kZWZpbmVTZXR0ZXJfXyhwcm9wZXJ0eSwgZnVuY3Rpb24oKSB7fSk7IH0gY2F0Y2goZSkge31cbiAgICAgIH1cblxuICAgICAgaWYgKCF3eXNpaHRtbDUuYnJvd3Nlci5jcmFzaGVzV2hlbkRlZmluZVByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHZhciBjb25maWcgPSB7XG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gdmFsdWU7IH1cbiAgICAgICAgICB9O1xuICAgICAgICAgIGlmIChzZXR0ZXIpIHtcbiAgICAgICAgICAgIGNvbmZpZy5zZXQgPSBmdW5jdGlvbigpIHt9O1xuICAgICAgICAgIH1cbiAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBwcm9wZXJ0eSwgY29uZmlnKTtcbiAgICAgICAgfSBjYXRjaChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfSk7XG59KSh3eXNpaHRtbDUpO1xuKGZ1bmN0aW9uKCkge1xuICB2YXIgbWFwcGluZyA9IHtcbiAgICBcImNsYXNzTmFtZVwiOiBcImNsYXNzXCJcbiAgfTtcbiAgd3lzaWh0bWw1LmRvbS5zZXRBdHRyaWJ1dGVzID0gZnVuY3Rpb24oYXR0cmlidXRlcykge1xuICAgIHJldHVybiB7XG4gICAgICBvbjogZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICBmb3IgKHZhciBpIGluIGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShtYXBwaW5nW2ldIHx8IGksIGF0dHJpYnV0ZXNbaV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcbiAgfTtcbn0pKCk7d3lzaWh0bWw1LmRvbS5zZXRTdHlsZXMgPSBmdW5jdGlvbihzdHlsZXMpIHtcbiAgcmV0dXJuIHtcbiAgICBvbjogZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgdmFyIHN0eWxlID0gZWxlbWVudC5zdHlsZTtcbiAgICAgIGlmICh0eXBlb2Yoc3R5bGVzKSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBzdHlsZS5jc3NUZXh0ICs9IFwiO1wiICsgc3R5bGVzO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBpIGluIHN0eWxlcykge1xuICAgICAgICBpZiAoaSA9PT0gXCJmbG9hdFwiKSB7XG4gICAgICAgICAgc3R5bGUuY3NzRmxvYXQgPSBzdHlsZXNbaV07XG4gICAgICAgICAgc3R5bGUuc3R5bGVGbG9hdCA9IHN0eWxlc1tpXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdHlsZVtpXSA9IHN0eWxlc1tpXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcbn07LyoqXG4gKiBTaW11bGF0ZSBIVE1MNSBwbGFjZWhvbGRlciBhdHRyaWJ1dGVcbiAqXG4gKiBOZWVkZWQgc2luY2VcbiAqICAgIC0gZGl2W2NvbnRlbnRFZGl0YWJsZV0gZWxlbWVudHMgZG9uJ3Qgc3VwcG9ydCBpdFxuICogICAgLSBvbGRlciBicm93c2VycyAoc3VjaCBhcyBJRTggYW5kIEZpcmVmb3ggMy42KSBkb24ndCBzdXBwb3J0IGl0IGF0IGFsbFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYXJlbnQgSW5zdGFuY2Ugb2YgbWFpbiB3eXNpaHRtbDUuRWRpdG9yIGNsYXNzXG4gKiBAcGFyYW0ge0VsZW1lbnR9IHZpZXcgSW5zdGFuY2Ugb2Ygd3lzaWh0bWw1LnZpZXdzLiogY2xhc3NcbiAqIEBwYXJhbSB7U3RyaW5nfSBwbGFjZWhvbGRlclRleHRcbiAqXG4gKiBAZXhhbXBsZVxuICogICAgd3lzaWh0bWwuZG9tLnNpbXVsYXRlUGxhY2Vob2xkZXIodGhpcywgY29tcG9zZXIsIFwiRm9vYmFyXCIpO1xuICovXG4oZnVuY3Rpb24oZG9tKSB7XG4gIGRvbS5zaW11bGF0ZVBsYWNlaG9sZGVyID0gZnVuY3Rpb24oZWRpdG9yLCB2aWV3LCBwbGFjZWhvbGRlclRleHQpIHtcbiAgICB2YXIgQ0xBU1NfTkFNRSA9IFwicGxhY2Vob2xkZXJcIixcbiAgICAgICAgdW5zZXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAodmlldy5oYXNQbGFjZWhvbGRlclNldCgpKSB7XG4gICAgICAgICAgICB2aWV3LmNsZWFyKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHZpZXcucGxhY2Vob2xkZXJTZXQgPSBmYWxzZTtcbiAgICAgICAgICBkb20ucmVtb3ZlQ2xhc3Modmlldy5lbGVtZW50LCBDTEFTU19OQU1FKTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYgKHZpZXcuaXNFbXB0eSgpKSB7XG4gICAgICAgICAgICB2aWV3LnBsYWNlaG9sZGVyU2V0ID0gdHJ1ZTtcbiAgICAgICAgICAgIHZpZXcuc2V0VmFsdWUocGxhY2Vob2xkZXJUZXh0KTtcbiAgICAgICAgICAgIGRvbS5hZGRDbGFzcyh2aWV3LmVsZW1lbnQsIENMQVNTX05BTUUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgIGVkaXRvclxuICAgICAgLm9uKFwic2V0X3BsYWNlaG9sZGVyXCIsIHNldClcbiAgICAgIC5vbihcInVuc2V0X3BsYWNlaG9sZGVyXCIsIHVuc2V0KVxuICAgICAgLm9uKFwiZm9jdXM6Y29tcG9zZXJcIiwgdW5zZXQpXG4gICAgICAub24oXCJwYXN0ZTpjb21wb3NlclwiLCB1bnNldClcbiAgICAgIC5vbihcImJsdXI6Y29tcG9zZXJcIiwgc2V0KTtcblxuICAgIHNldCgpO1xuICB9O1xufSkod3lzaWh0bWw1LmRvbSk7XG4oZnVuY3Rpb24oZG9tKSB7XG4gIHZhciBkb2N1bWVudEVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4gIGlmIChcInRleHRDb250ZW50XCIgaW4gZG9jdW1lbnRFbGVtZW50KSB7XG4gICAgZG9tLnNldFRleHRDb250ZW50ID0gZnVuY3Rpb24oZWxlbWVudCwgdGV4dCkge1xuICAgICAgZWxlbWVudC50ZXh0Q29udGVudCA9IHRleHQ7XG4gICAgfTtcblxuICAgIGRvbS5nZXRUZXh0Q29udGVudCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgIHJldHVybiBlbGVtZW50LnRleHRDb250ZW50O1xuICAgIH07XG4gIH0gZWxzZSBpZiAoXCJpbm5lclRleHRcIiBpbiBkb2N1bWVudEVsZW1lbnQpIHtcbiAgICBkb20uc2V0VGV4dENvbnRlbnQgPSBmdW5jdGlvbihlbGVtZW50LCB0ZXh0KSB7XG4gICAgICBlbGVtZW50LmlubmVyVGV4dCA9IHRleHQ7XG4gICAgfTtcblxuICAgIGRvbS5nZXRUZXh0Q29udGVudCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgIHJldHVybiBlbGVtZW50LmlubmVyVGV4dDtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIGRvbS5zZXRUZXh0Q29udGVudCA9IGZ1bmN0aW9uKGVsZW1lbnQsIHRleHQpIHtcbiAgICAgIGVsZW1lbnQubm9kZVZhbHVlID0gdGV4dDtcbiAgICB9O1xuXG4gICAgZG9tLmdldFRleHRDb250ZW50ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgcmV0dXJuIGVsZW1lbnQubm9kZVZhbHVlO1xuICAgIH07XG4gIH1cbn0pKHd5c2lodG1sNS5kb20pO1xuXG4vKipcbiAqIEZpeCBtb3N0IGNvbW1vbiBodG1sIGZvcm1hdHRpbmcgbWlzYmVoYXZpb3JzIG9mIGJyb3dzZXJzIGltcGxlbWVudGF0aW9uIHdoZW4gaW5zZXJ0aW5nXG4gKiBjb250ZW50IHZpYSBjb3B5ICYgcGFzdGUgY29udGVudEVkaXRhYmxlXG4gKlxuICogQGF1dGhvciBDaHJpc3RvcGhlciBCbHVtXG4gKi9cbnd5c2lodG1sNS5xdWlya3MuY2xlYW5QYXN0ZWRIVE1MID0gKGZ1bmN0aW9uKCkge1xuICAvLyBUT0RPOiBXZSBwcm9iYWJseSBuZWVkIG1vcmUgcnVsZXMgaGVyZVxuICB2YXIgZGVmYXVsdFJ1bGVzID0ge1xuICAgIC8vIFdoZW4gcGFzdGluZyB1bmRlcmxpbmVkIGxpbmtzIDxhPiBpbnRvIGEgY29udGVudEVkaXRhYmxlLCBJRSB0aGlua3MsIGl0IGhhcyB0byBpbnNlcnQgPHU+IHRvIGtlZXAgdGhlIHN0eWxpbmdcbiAgICBcImEgdVwiOiB3eXNpaHRtbDUuZG9tLnJlcGxhY2VXaXRoQ2hpbGROb2Rlc1xuICB9O1xuICBcbiAgZnVuY3Rpb24gY2xlYW5QYXN0ZWRIVE1MKGVsZW1lbnRPckh0bWwsIHJ1bGVzLCBjb250ZXh0KSB7XG4gICAgcnVsZXMgICA9IHJ1bGVzIHx8IGRlZmF1bHRSdWxlcztcbiAgICBjb250ZXh0ID0gY29udGV4dCB8fCBlbGVtZW50T3JIdG1sLm93bmVyRG9jdW1lbnQgfHwgZG9jdW1lbnQ7XG4gICAgXG4gICAgdmFyIGVsZW1lbnQsXG4gICAgICAgIGlzU3RyaW5nID0gdHlwZW9mKGVsZW1lbnRPckh0bWwpID09PSBcInN0cmluZ1wiLFxuICAgICAgICBtZXRob2QsXG4gICAgICAgIG1hdGNoZXMsXG4gICAgICAgIG1hdGNoZXNMZW5ndGgsXG4gICAgICAgIGksXG4gICAgICAgIGogPSAwO1xuICAgIGlmIChpc1N0cmluZykge1xuICAgICAgZWxlbWVudCA9IHd5c2lodG1sNS5kb20uZ2V0QXNEb20oZWxlbWVudE9ySHRtbCwgY29udGV4dCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVsZW1lbnQgPSBlbGVtZW50T3JIdG1sO1xuICAgIH1cbiAgICBcbiAgICBmb3IgKGkgaW4gcnVsZXMpIHtcbiAgICAgIG1hdGNoZXMgICAgICAgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoaSk7XG4gICAgICBtZXRob2QgICAgICAgID0gcnVsZXNbaV07XG4gICAgICBtYXRjaGVzTGVuZ3RoID0gbWF0Y2hlcy5sZW5ndGg7XG4gICAgICBmb3IgKDsgajxtYXRjaGVzTGVuZ3RoOyBqKyspIHtcbiAgICAgICAgbWV0aG9kKG1hdGNoZXNbal0pO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBtYXRjaGVzID0gZWxlbWVudE9ySHRtbCA9IHJ1bGVzID0gbnVsbDtcbiAgICBcbiAgICByZXR1cm4gaXNTdHJpbmcgPyBlbGVtZW50LmlubmVySFRNTCA6IGVsZW1lbnQ7XG4gIH1cbiAgXG4gIHJldHVybiBjbGVhblBhc3RlZEhUTUw7XG59KSgpOy8qKlxuICogSUUgYW5kIE9wZXJhIGxlYXZlIGFuIGVtcHR5IHBhcmFncmFwaCBpbiB0aGUgY29udGVudEVkaXRhYmxlIGVsZW1lbnQgYWZ0ZXIgY2xlYXJpbmcgaXRcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29udGVudEVkaXRhYmxlRWxlbWVudCBUaGUgY29udGVudEVkaXRhYmxlIGVsZW1lbnQgdG8gb2JzZXJ2ZSBmb3IgY2xlYXJpbmcgZXZlbnRzXG4gKiBAZXhhcGxlXG4gKiAgICB3eXNpaHRtbDUucXVpcmtzLmVuc3VyZVByb3BlckNsZWFyaW5nKG15Q29udGVudEVkaXRhYmxlRWxlbWVudCk7XG4gKi9cbnd5c2lodG1sNS5xdWlya3MuZW5zdXJlUHJvcGVyQ2xlYXJpbmcgPSAoZnVuY3Rpb24oKSB7XG4gIHZhciBjbGVhcklmTmVjZXNzYXJ5ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGVsZW1lbnQgPSB0aGlzO1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgaW5uZXJIVE1MID0gZWxlbWVudC5pbm5lckhUTUwudG9Mb3dlckNhc2UoKTtcbiAgICAgIGlmIChpbm5lckhUTUwgPT0gXCI8cD4mbmJzcDs8L3A+XCIgfHxcbiAgICAgICAgICBpbm5lckhUTUwgPT0gXCI8cD4mbmJzcDs8L3A+PHA+Jm5ic3A7PC9wPlwiKSB7XG4gICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgIH1cbiAgICB9LCAwKTtcbiAgfTtcblxuICByZXR1cm4gZnVuY3Rpb24oY29tcG9zZXIpIHtcbiAgICB3eXNpaHRtbDUuZG9tLm9ic2VydmUoY29tcG9zZXIuZWxlbWVudCwgW1wiY3V0XCIsIFwia2V5ZG93blwiXSwgY2xlYXJJZk5lY2Vzc2FyeSk7XG4gIH07XG59KSgpO1xuLy8gU2VlIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTY2NDM5OFxuLy9cbi8vIEluIEZpcmVmb3ggdGhpczpcbi8vICAgICAgdmFyIGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuLy8gICAgICBkLmlubmVySFRNTCA9JzxhIGhyZWY9XCJ+XCI+PC9hPic7XG4vLyAgICAgIGQuaW5uZXJIVE1MO1xuLy8gd2lsbCByZXN1bHQgaW46XG4vLyAgICAgIDxhIGhyZWY9XCIlN0VcIj48L2E+XG4vLyB3aGljaCBpcyB3cm9uZ1xuKGZ1bmN0aW9uKHd5c2lodG1sNSkge1xuICB2YXIgVElMREVfRVNDQVBFRCA9IFwiJTdFXCI7XG4gIHd5c2lodG1sNS5xdWlya3MuZ2V0Q29ycmVjdElubmVySFRNTCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICB2YXIgaW5uZXJIVE1MID0gZWxlbWVudC5pbm5lckhUTUw7XG4gICAgaWYgKGlubmVySFRNTC5pbmRleE9mKFRJTERFX0VTQ0FQRUQpID09PSAtMSkge1xuICAgICAgcmV0dXJuIGlubmVySFRNTDtcbiAgICB9XG4gICAgXG4gICAgdmFyIGVsZW1lbnRzV2l0aFRpbGRlID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiW2hyZWYqPSd+J10sIFtzcmMqPSd+J11cIiksXG4gICAgICAgIHVybCxcbiAgICAgICAgdXJsVG9TZWFyY2gsXG4gICAgICAgIGxlbmd0aCxcbiAgICAgICAgaTtcbiAgICBmb3IgKGk9MCwgbGVuZ3RoPWVsZW1lbnRzV2l0aFRpbGRlLmxlbmd0aDsgaTxsZW5ndGg7IGkrKykge1xuICAgICAgdXJsICAgICAgICAgPSBlbGVtZW50c1dpdGhUaWxkZVtpXS5ocmVmIHx8IGVsZW1lbnRzV2l0aFRpbGRlW2ldLnNyYztcbiAgICAgIHVybFRvU2VhcmNoID0gd3lzaWh0bWw1Lmxhbmcuc3RyaW5nKHVybCkucmVwbGFjZShcIn5cIikuYnkoVElMREVfRVNDQVBFRCk7XG4gICAgICBpbm5lckhUTUwgICA9IHd5c2lodG1sNS5sYW5nLnN0cmluZyhpbm5lckhUTUwpLnJlcGxhY2UodXJsVG9TZWFyY2gpLmJ5KHVybCk7XG4gICAgfVxuICAgIHJldHVybiBpbm5lckhUTUw7XG4gIH07XG59KSh3eXNpaHRtbDUpOy8qKlxuICogRm9yY2UgcmVyZW5kZXJpbmcgb2YgYSBnaXZlbiBlbGVtZW50XG4gKiBOZWVkZWQgdG8gZml4IGRpc3BsYXkgbWlzYmVoYXZpb3JzIG9mIElFXG4gKlxuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50IFRoZSBlbGVtZW50IG9iamVjdCB3aGljaCBuZWVkcyB0byBiZSByZXJlbmRlcmVkXG4gKiBAZXhhbXBsZVxuICogICAgd3lzaWh0bWw1LnF1aXJrcy5yZWRyYXcoZG9jdW1lbnQuYm9keSk7XG4gKi9cbihmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIENMQVNTX05BTUUgPSBcInd5c2lodG1sNS1xdWlya3MtcmVkcmF3XCI7XG4gIFxuICB3eXNpaHRtbDUucXVpcmtzLnJlZHJhdyA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICB3eXNpaHRtbDUuZG9tLmFkZENsYXNzKGVsZW1lbnQsIENMQVNTX05BTUUpO1xuICAgIHd5c2lodG1sNS5kb20ucmVtb3ZlQ2xhc3MoZWxlbWVudCwgQ0xBU1NfTkFNRSk7XG4gICAgXG4gICAgLy8gRm9sbG93aW5nIGhhY2sgaXMgbmVlZGVkIGZvciBmaXJlZm94IHRvIG1ha2Ugc3VyZSB0aGF0IGltYWdlIHJlc2l6ZSBoYW5kbGVzIGFyZSBwcm9wZXJseSByZW1vdmVkXG4gICAgdHJ5IHtcbiAgICAgIHZhciBkb2MgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQ7XG4gICAgICBkb2MuZXhlY0NvbW1hbmQoXCJpdGFsaWNcIiwgZmFsc2UsIG51bGwpO1xuICAgICAgZG9jLmV4ZWNDb21tYW5kKFwiaXRhbGljXCIsIGZhbHNlLCBudWxsKTtcbiAgICB9IGNhdGNoKGUpIHt9XG4gIH07XG59KSh3eXNpaHRtbDUpOy8qKlxuICogU2VsZWN0aW9uIEFQSVxuICpcbiAqIEBleGFtcGxlXG4gKiAgICB2YXIgc2VsZWN0aW9uID0gbmV3IHd5c2lodG1sNS5TZWxlY3Rpb24oZWRpdG9yKTtcbiAqL1xuKGZ1bmN0aW9uKHd5c2lodG1sNSkge1xuICB2YXIgZG9tID0gd3lzaWh0bWw1LmRvbTtcbiAgXG4gIGZ1bmN0aW9uIF9nZXRDdW11bGF0aXZlT2Zmc2V0VG9wKGVsZW1lbnQpIHtcbiAgICB2YXIgdG9wID0gMDtcbiAgICBpZiAoZWxlbWVudC5wYXJlbnROb2RlKSB7XG4gICAgICBkbyB7XG4gICAgICAgIHRvcCArPSBlbGVtZW50Lm9mZnNldFRvcCB8fCAwO1xuICAgICAgICBlbGVtZW50ID0gZWxlbWVudC5vZmZzZXRQYXJlbnQ7XG4gICAgICB9IHdoaWxlIChlbGVtZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIHRvcDtcbiAgfVxuICBcbiAgd3lzaWh0bWw1LlNlbGVjdGlvbiA9IEJhc2UuZXh0ZW5kKFxuICAgIC8qKiBAc2NvcGUgd3lzaWh0bWw1LlNlbGVjdGlvbi5wcm90b3R5cGUgKi8ge1xuICAgIGNvbnN0cnVjdG9yOiBmdW5jdGlvbihlZGl0b3IpIHtcbiAgICAgIC8vIE1ha2Ugc3VyZSB0aGF0IG91ciBleHRlcm5hbCByYW5nZSBsaWJyYXJ5IGlzIGluaXRpYWxpemVkXG4gICAgICB3aW5kb3cucmFuZ3kuaW5pdCgpO1xuICAgICAgXG4gICAgICB0aGlzLmVkaXRvciAgID0gZWRpdG9yO1xuICAgICAgdGhpcy5jb21wb3NlciA9IGVkaXRvci5jb21wb3NlcjtcbiAgICAgIHRoaXMuZG9jICAgICAgPSB0aGlzLmNvbXBvc2VyLmRvYztcbiAgICB9LFxuICAgIFxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgY3VycmVudCBzZWxlY3Rpb24gYXMgYSBib29rbWFyayB0byBiZSBhYmxlIHRvIGxhdGVyIHJlc3RvcmUgaXRcbiAgICAgKlxuICAgICAqIEByZXR1cm4ge09iamVjdH0gQW4gb2JqZWN0IHRoYXQgcmVwcmVzZW50cyB0aGUgY3VycmVudCBzZWxlY3Rpb25cbiAgICAgKi9cbiAgICBnZXRCb29rbWFyazogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgcmFuZ2UgPSB0aGlzLmdldFJhbmdlKCk7XG4gICAgICByZXR1cm4gcmFuZ2UgJiYgcmFuZ2UuY2xvbmVSYW5nZSgpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBSZXN0b3JlIGEgc2VsZWN0aW9uIHJldHJpZXZlZCB2aWEgd3lzaWh0bWw1LlNlbGVjdGlvbi5wcm90b3R5cGUuZ2V0Qm9va21hcmtcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBib29rbWFyayBBbiBvYmplY3QgdGhhdCByZXByZXNlbnRzIHRoZSBjdXJyZW50IHNlbGVjdGlvblxuICAgICAqL1xuICAgIHNldEJvb2ttYXJrOiBmdW5jdGlvbihib29rbWFyaykge1xuICAgICAgaWYgKCFib29rbWFyaykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2V0U2VsZWN0aW9uKGJvb2ttYXJrKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogU2V0IHRoZSBjYXJldCBpbiBmcm9udCBvZiB0aGUgZ2l2ZW4gbm9kZVxuICAgICAqXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG5vZGUgVGhlIGVsZW1lbnQgb3IgdGV4dCBub2RlIHdoZXJlIHRvIHBvc2l0aW9uIHRoZSBjYXJldCBpbiBmcm9udCBvZlxuICAgICAqIEBleGFtcGxlXG4gICAgICogICAgc2VsZWN0aW9uLnNldEJlZm9yZShteUVsZW1lbnQpO1xuICAgICAqL1xuICAgIHNldEJlZm9yZTogZnVuY3Rpb24obm9kZSkge1xuICAgICAgdmFyIHJhbmdlID0gcmFuZ3kuY3JlYXRlUmFuZ2UodGhpcy5kb2MpO1xuICAgICAgcmFuZ2Uuc2V0U3RhcnRCZWZvcmUobm9kZSk7XG4gICAgICByYW5nZS5zZXRFbmRCZWZvcmUobm9kZSk7XG4gICAgICByZXR1cm4gdGhpcy5zZXRTZWxlY3Rpb24ocmFuZ2UpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIGNhcmV0IGFmdGVyIHRoZSBnaXZlbiBub2RlXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gbm9kZSBUaGUgZWxlbWVudCBvciB0ZXh0IG5vZGUgd2hlcmUgdG8gcG9zaXRpb24gdGhlIGNhcmV0IGluIGZyb250IG9mXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiAgICBzZWxlY3Rpb24uc2V0QmVmb3JlKG15RWxlbWVudCk7XG4gICAgICovXG4gICAgc2V0QWZ0ZXI6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIHZhciByYW5nZSA9IHJhbmd5LmNyZWF0ZVJhbmdlKHRoaXMuZG9jKTtcbiAgICAgIHJhbmdlLnNldFN0YXJ0QWZ0ZXIobm9kZSk7XG4gICAgICByYW5nZS5zZXRFbmRBZnRlcihub2RlKTtcbiAgICAgIHJldHVybiB0aGlzLnNldFNlbGVjdGlvbihyYW5nZSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEFiaWxpdHkgdG8gc2VsZWN0L21hcmsgbm9kZXNcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7RWxlbWVudH0gbm9kZSBUaGUgbm9kZS9lbGVtZW50IHRvIHNlbGVjdFxuICAgICAqIEBleGFtcGxlXG4gICAgICogICAgc2VsZWN0aW9uLnNlbGVjdE5vZGUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJteS1pbWFnZVwiKSk7XG4gICAgICovXG4gICAgc2VsZWN0Tm9kZTogZnVuY3Rpb24obm9kZSwgYXZvaWRJbnZpc2libGVTcGFjZSkge1xuICAgICAgdmFyIHJhbmdlICAgICAgICAgICA9IHJhbmd5LmNyZWF0ZVJhbmdlKHRoaXMuZG9jKSxcbiAgICAgICAgICBpc0VsZW1lbnQgICAgICAgPSBub2RlLm5vZGVUeXBlID09PSB3eXNpaHRtbDUuRUxFTUVOVF9OT0RFLFxuICAgICAgICAgIGNhbkhhdmVIVE1MICAgICA9IFwiY2FuSGF2ZUhUTUxcIiBpbiBub2RlID8gbm9kZS5jYW5IYXZlSFRNTCA6IChub2RlLm5vZGVOYW1lICE9PSBcIklNR1wiKSxcbiAgICAgICAgICBjb250ZW50ICAgICAgICAgPSBpc0VsZW1lbnQgPyBub2RlLmlubmVySFRNTCA6IG5vZGUuZGF0YSxcbiAgICAgICAgICBpc0VtcHR5ICAgICAgICAgPSAoY29udGVudCA9PT0gXCJcIiB8fCBjb250ZW50ID09PSB3eXNpaHRtbDUuSU5WSVNJQkxFX1NQQUNFKSxcbiAgICAgICAgICBkaXNwbGF5U3R5bGUgICAgPSBkb20uZ2V0U3R5bGUoXCJkaXNwbGF5XCIpLmZyb20obm9kZSksXG4gICAgICAgICAgaXNCbG9ja0VsZW1lbnQgID0gKGRpc3BsYXlTdHlsZSA9PT0gXCJibG9ja1wiIHx8IGRpc3BsYXlTdHlsZSA9PT0gXCJsaXN0LWl0ZW1cIik7XG5cbiAgICAgIGlmIChpc0VtcHR5ICYmIGlzRWxlbWVudCAmJiBjYW5IYXZlSFRNTCAmJiAhYXZvaWRJbnZpc2libGVTcGFjZSkge1xuICAgICAgICAvLyBNYWtlIHN1cmUgdGhhdCBjYXJldCBpcyB2aXNpYmxlIGluIG5vZGUgYnkgaW5zZXJ0aW5nIGEgemVybyB3aWR0aCBubyBicmVha2luZyBzcGFjZVxuICAgICAgICB0cnkgeyBub2RlLmlubmVySFRNTCA9IHd5c2lodG1sNS5JTlZJU0lCTEVfU1BBQ0U7IH0gY2F0Y2goZSkge31cbiAgICAgIH1cblxuICAgICAgaWYgKGNhbkhhdmVIVE1MKSB7XG4gICAgICAgIHJhbmdlLnNlbGVjdE5vZGVDb250ZW50cyhub2RlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJhbmdlLnNlbGVjdE5vZGUobm9kZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChjYW5IYXZlSFRNTCAmJiBpc0VtcHR5ICYmIGlzRWxlbWVudCkge1xuICAgICAgICByYW5nZS5jb2xsYXBzZShpc0Jsb2NrRWxlbWVudCk7XG4gICAgICB9IGVsc2UgaWYgKGNhbkhhdmVIVE1MICYmIGlzRW1wdHkpIHtcbiAgICAgICAgcmFuZ2Uuc2V0U3RhcnRBZnRlcihub2RlKTtcbiAgICAgICAgcmFuZ2Uuc2V0RW5kQWZ0ZXIobm9kZSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2V0U2VsZWN0aW9uKHJhbmdlKTtcbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBub2RlIHdoaWNoIGNvbnRhaW5zIHRoZSBzZWxlY3Rpb25cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7Qm9vbGVhbn0gW2NvbnRyb2xSYW5nZV0gKG9ubHkgSUUpIFdoZXRoZXIgaXQgc2hvdWxkIHJldHVybiB0aGUgc2VsZWN0ZWQgQ29udHJvbFJhbmdlIGVsZW1lbnQgd2hlbiB0aGUgc2VsZWN0aW9uIHR5cGUgaXMgYSBcIkNvbnRyb2xSYW5nZVwiXG4gICAgICogQHJldHVybiB7T2JqZWN0fSBUaGUgbm9kZSB0aGF0IGNvbnRhaW5zIHRoZSBjYXJldFxuICAgICAqIEBleGFtcGxlXG4gICAgICogICAgdmFyIG5vZGVUaGF0Q29udGFpbnNDYXJldCA9IHNlbGVjdGlvbi5nZXRTZWxlY3RlZE5vZGUoKTtcbiAgICAgKi9cbiAgICBnZXRTZWxlY3RlZE5vZGU6IGZ1bmN0aW9uKGNvbnRyb2xSYW5nZSkge1xuICAgICAgdmFyIHNlbGVjdGlvbixcbiAgICAgICAgICByYW5nZTtcblxuICAgICAgaWYgKGNvbnRyb2xSYW5nZSAmJiB0aGlzLmRvYy5zZWxlY3Rpb24gJiYgdGhpcy5kb2Muc2VsZWN0aW9uLnR5cGUgPT09IFwiQ29udHJvbFwiKSB7XG4gICAgICAgIHJhbmdlID0gdGhpcy5kb2Muc2VsZWN0aW9uLmNyZWF0ZVJhbmdlKCk7XG4gICAgICAgIGlmIChyYW5nZSAmJiByYW5nZS5sZW5ndGgpIHtcbiAgICAgICAgICByZXR1cm4gcmFuZ2UuaXRlbSgwKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBzZWxlY3Rpb24gPSB0aGlzLmdldFNlbGVjdGlvbih0aGlzLmRvYyk7XG4gICAgICBpZiAoc2VsZWN0aW9uLmZvY3VzTm9kZSA9PT0gc2VsZWN0aW9uLmFuY2hvck5vZGUpIHtcbiAgICAgICAgcmV0dXJuIHNlbGVjdGlvbi5mb2N1c05vZGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByYW5nZSA9IHRoaXMuZ2V0UmFuZ2UodGhpcy5kb2MpO1xuICAgICAgICByZXR1cm4gcmFuZ2UgPyByYW5nZS5jb21tb25BbmNlc3RvckNvbnRhaW5lciA6IHRoaXMuZG9jLmJvZHk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGV4ZWN1dGVBbmRSZXN0b3JlOiBmdW5jdGlvbihtZXRob2QsIHJlc3RvcmVTY3JvbGxQb3NpdGlvbikge1xuICAgICAgdmFyIGJvZHkgICAgICAgICAgICAgICAgICA9IHRoaXMuZG9jLmJvZHksXG4gICAgICAgICAgb2xkU2Nyb2xsVG9wICAgICAgICAgID0gcmVzdG9yZVNjcm9sbFBvc2l0aW9uICYmIGJvZHkuc2Nyb2xsVG9wLFxuICAgICAgICAgIG9sZFNjcm9sbExlZnQgICAgICAgICA9IHJlc3RvcmVTY3JvbGxQb3NpdGlvbiAmJiBib2R5LnNjcm9sbExlZnQsXG4gICAgICAgICAgY2xhc3NOYW1lICAgICAgICAgICAgID0gXCJfd3lzaWh0bWw1LXRlbXAtcGxhY2Vob2xkZXJcIixcbiAgICAgICAgICBwbGFjZWhvbGRlckh0bWwgICAgICAgPSAnPHNwYW4gY2xhc3M9XCInICsgY2xhc3NOYW1lICsgJ1wiPicgKyB3eXNpaHRtbDUuSU5WSVNJQkxFX1NQQUNFICsgJzwvc3Bhbj4nLFxuICAgICAgICAgIHJhbmdlICAgICAgICAgICAgICAgICA9IHRoaXMuZ2V0UmFuZ2UodGhpcy5kb2MpLFxuICAgICAgICAgIGNhcmV0UGxhY2Vob2xkZXIsXG4gICAgICAgICAgbmV3Q2FyZXRQbGFjZWhvbGRlcixcbiAgICAgICAgICBuZXh0U2libGluZyxcbiAgICAgICAgICBub2RlLFxuICAgICAgICAgIG5ld1JhbmdlO1xuICAgICAgXG4gICAgICAvLyBOb3RoaW5nIHNlbGVjdGVkLCBleGVjdXRlIGFuZCBzYXkgZ29vZGJ5ZVxuICAgICAgaWYgKCFyYW5nZSkge1xuICAgICAgICBtZXRob2QoYm9keSwgYm9keSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgaWYgKHd5c2lodG1sNS5icm93c2VyLmhhc0luc2VydE5vZGVJc3N1ZSgpKSB7XG4gICAgICAgIHRoaXMuZG9jLmV4ZWNDb21tYW5kKFwiaW5zZXJ0SFRNTFwiLCBmYWxzZSwgcGxhY2Vob2xkZXJIdG1sKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5vZGUgPSByYW5nZS5jcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQocGxhY2Vob2xkZXJIdG1sKTtcbiAgICAgICAgcmFuZ2UuaW5zZXJ0Tm9kZShub2RlKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gTWFrZSBzdXJlIHRoYXQgYSBwb3RlbnRpYWwgZXJyb3IgZG9lc24ndCBjYXVzZSBvdXIgcGxhY2Vob2xkZXIgZWxlbWVudCB0byBiZSBsZWZ0IGFzIGEgcGxhY2Vob2xkZXJcbiAgICAgIHRyeSB7XG4gICAgICAgIG1ldGhvZChyYW5nZS5zdGFydENvbnRhaW5lciwgcmFuZ2UuZW5kQ29udGFpbmVyKTtcbiAgICAgIH0gY2F0Y2goZSkge1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0aHJvdyBlOyB9LCAwKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY2FyZXRQbGFjZWhvbGRlciA9IHRoaXMuZG9jLnF1ZXJ5U2VsZWN0b3IoXCIuXCIgKyBjbGFzc05hbWUpO1xuICAgICAgaWYgKGNhcmV0UGxhY2Vob2xkZXIpIHtcbiAgICAgICAgbmV3UmFuZ2UgPSByYW5neS5jcmVhdGVSYW5nZSh0aGlzLmRvYyk7XG4gICAgICAgIG5leHRTaWJsaW5nID0gY2FyZXRQbGFjZWhvbGRlci5uZXh0U2libGluZztcbiAgICAgICAgLy8gT3BlcmEgaXMgc28gZnVja2VkIHVwIHdoZW4geW91IHdhbm5hIHNldCBmb2N1cyBiZWZvcmUgYSA8YnI+XG4gICAgICAgIGlmICh3eXNpaHRtbDUuYnJvd3Nlci5oYXNJbnNlcnROb2RlSXNzdWUoKSAmJiBuZXh0U2libGluZyAmJiBuZXh0U2libGluZy5ub2RlTmFtZSA9PT0gXCJCUlwiKSB7XG4gICAgICAgICAgbmV3Q2FyZXRQbGFjZWhvbGRlciA9IHRoaXMuZG9jLmNyZWF0ZVRleHROb2RlKHd5c2lodG1sNS5JTlZJU0lCTEVfU1BBQ0UpO1xuICAgICAgICAgIGRvbS5pbnNlcnQobmV3Q2FyZXRQbGFjZWhvbGRlcikuYWZ0ZXIoY2FyZXRQbGFjZWhvbGRlcik7XG4gICAgICAgICAgbmV3UmFuZ2Uuc2V0U3RhcnRCZWZvcmUobmV3Q2FyZXRQbGFjZWhvbGRlcik7XG4gICAgICAgICAgbmV3UmFuZ2Uuc2V0RW5kQmVmb3JlKG5ld0NhcmV0UGxhY2Vob2xkZXIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5ld1JhbmdlLnNlbGVjdE5vZGUoY2FyZXRQbGFjZWhvbGRlcik7XG4gICAgICAgICAgbmV3UmFuZ2UuZGVsZXRlQ29udGVudHMoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldFNlbGVjdGlvbihuZXdSYW5nZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBmYWxsYmFjayBmb3Igd2hlbiBhbGwgaGVsbCBicmVha3MgbG9vc2VcbiAgICAgICAgYm9keS5mb2N1cygpO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVzdG9yZVNjcm9sbFBvc2l0aW9uKSB7XG4gICAgICAgIGJvZHkuc2Nyb2xsVG9wICA9IG9sZFNjcm9sbFRvcDtcbiAgICAgICAgYm9keS5zY3JvbGxMZWZ0ID0gb2xkU2Nyb2xsTGVmdDtcbiAgICAgIH1cblxuICAgICAgLy8gUmVtb3ZlIGl0IGFnYWluLCBqdXN0IHRvIG1ha2Ugc3VyZSB0aGF0IHRoZSBwbGFjZWhvbGRlciBpcyBkZWZpbml0ZWx5IG91dCBvZiB0aGUgZG9tIHRyZWVcbiAgICAgIHRyeSB7XG4gICAgICAgIGNhcmV0UGxhY2Vob2xkZXIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjYXJldFBsYWNlaG9sZGVyKTtcbiAgICAgIH0gY2F0Y2goZTIpIHt9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIERpZmZlcmVudCBhcHByb2FjaCBvZiBwcmVzZXJ2aW5nIHRoZSBzZWxlY3Rpb24gKGRvZXNuJ3QgbW9kaWZ5IHRoZSBkb20pXG4gICAgICogVGFrZXMgYWxsIHRleHQgbm9kZXMgaW4gdGhlIHNlbGVjdGlvbiBhbmQgc2F2ZXMgdGhlIHNlbGVjdGlvbiBwb3NpdGlvbiBpbiB0aGUgZmlyc3QgYW5kIGxhc3Qgb25lXG4gICAgICovXG4gICAgZXhlY3V0ZUFuZFJlc3RvcmVTaW1wbGU6IGZ1bmN0aW9uKG1ldGhvZCkge1xuICAgICAgdmFyIHJhbmdlID0gdGhpcy5nZXRSYW5nZSgpLFxuICAgICAgICAgIGJvZHkgID0gdGhpcy5kb2MuYm9keSxcbiAgICAgICAgICBuZXdSYW5nZSxcbiAgICAgICAgICBmaXJzdE5vZGUsXG4gICAgICAgICAgbGFzdE5vZGUsXG4gICAgICAgICAgdGV4dE5vZGVzLFxuICAgICAgICAgIHJhbmdlQmFja3VwO1xuXG4gICAgICAvLyBOb3RoaW5nIHNlbGVjdGVkLCBleGVjdXRlIGFuZCBzYXkgZ29vZGJ5ZVxuICAgICAgaWYgKCFyYW5nZSkge1xuICAgICAgICBtZXRob2QoYm9keSwgYm9keSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdGV4dE5vZGVzID0gcmFuZ2UuZ2V0Tm9kZXMoWzNdKTtcbiAgICAgIGZpcnN0Tm9kZSA9IHRleHROb2Rlc1swXSB8fCByYW5nZS5zdGFydENvbnRhaW5lcjtcbiAgICAgIGxhc3ROb2RlICA9IHRleHROb2Rlc1t0ZXh0Tm9kZXMubGVuZ3RoIC0gMV0gfHwgcmFuZ2UuZW5kQ29udGFpbmVyO1xuXG4gICAgICByYW5nZUJhY2t1cCA9IHtcbiAgICAgICAgY29sbGFwc2VkOiAgICAgIHJhbmdlLmNvbGxhcHNlZCxcbiAgICAgICAgc3RhcnRDb250YWluZXI6IGZpcnN0Tm9kZSxcbiAgICAgICAgc3RhcnRPZmZzZXQ6ICAgIGZpcnN0Tm9kZSA9PT0gcmFuZ2Uuc3RhcnRDb250YWluZXIgPyByYW5nZS5zdGFydE9mZnNldCA6IDAsXG4gICAgICAgIGVuZENvbnRhaW5lcjogICBsYXN0Tm9kZSxcbiAgICAgICAgZW5kT2Zmc2V0OiAgICAgIGxhc3ROb2RlID09PSByYW5nZS5lbmRDb250YWluZXIgPyByYW5nZS5lbmRPZmZzZXQgOiBsYXN0Tm9kZS5sZW5ndGhcbiAgICAgIH07XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIG1ldGhvZChyYW5nZS5zdGFydENvbnRhaW5lciwgcmFuZ2UuZW5kQ29udGFpbmVyKTtcbiAgICAgIH0gY2F0Y2goZSkge1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0aHJvdyBlOyB9LCAwKTtcbiAgICAgIH1cblxuICAgICAgbmV3UmFuZ2UgPSByYW5neS5jcmVhdGVSYW5nZSh0aGlzLmRvYyk7XG4gICAgICB0cnkgeyBuZXdSYW5nZS5zZXRTdGFydChyYW5nZUJhY2t1cC5zdGFydENvbnRhaW5lciwgcmFuZ2VCYWNrdXAuc3RhcnRPZmZzZXQpOyB9IGNhdGNoKGUxKSB7fVxuICAgICAgdHJ5IHsgbmV3UmFuZ2Uuc2V0RW5kKHJhbmdlQmFja3VwLmVuZENvbnRhaW5lciwgcmFuZ2VCYWNrdXAuZW5kT2Zmc2V0KTsgfSBjYXRjaChlMikge31cbiAgICAgIHRyeSB7IHRoaXMuc2V0U2VsZWN0aW9uKG5ld1JhbmdlKTsgfSBjYXRjaChlMykge31cbiAgICB9LFxuICAgIFxuICAgIHNldDogZnVuY3Rpb24obm9kZSwgb2Zmc2V0KSB7XG4gICAgICB2YXIgbmV3UmFuZ2UgPSByYW5neS5jcmVhdGVSYW5nZSh0aGlzLmRvYyk7XG4gICAgICBuZXdSYW5nZS5zZXRTdGFydChub2RlLCBvZmZzZXQgfHwgMCk7XG4gICAgICB0aGlzLnNldFNlbGVjdGlvbihuZXdSYW5nZSk7XG4gICAgfSxcbiAgICBcbiAgICAvKipcbiAgICAgKiBJbnNlcnQgaHRtbCBhdCB0aGUgY2FyZXQgcG9zaXRpb24gYW5kIG1vdmUgdGhlIGN1cnNvciBhZnRlciB0aGUgaW5zZXJ0ZWQgaHRtbFxuICAgICAqXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IGh0bWwgSFRNTCBzdHJpbmcgdG8gaW5zZXJ0XG4gICAgICogQGV4YW1wbGVcbiAgICAgKiAgICBzZWxlY3Rpb24uaW5zZXJ0SFRNTChcIjxwPmZvb2JhcjwvcD5cIik7XG4gICAgICovXG4gICAgaW5zZXJ0SFRNTDogZnVuY3Rpb24oaHRtbCkge1xuICAgICAgdmFyIHJhbmdlICAgICA9IHJhbmd5LmNyZWF0ZVJhbmdlKHRoaXMuZG9jKSxcbiAgICAgICAgICBub2RlICAgICAgPSByYW5nZS5jcmVhdGVDb250ZXh0dWFsRnJhZ21lbnQoaHRtbCksXG4gICAgICAgICAgbGFzdENoaWxkID0gbm9kZS5sYXN0Q2hpbGQ7XG4gICAgICB0aGlzLmluc2VydE5vZGUobm9kZSk7XG4gICAgICBpZiAobGFzdENoaWxkKSB7XG4gICAgICAgIHRoaXMuc2V0QWZ0ZXIobGFzdENoaWxkKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgLyoqXG4gICAgICogSW5zZXJ0IGEgbm9kZSBhdCB0aGUgY2FyZXQgcG9zaXRpb24gYW5kIG1vdmUgdGhlIGN1cnNvciBiZWhpbmQgaXRcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBub2RlIEhUTUwgc3RyaW5nIHRvIGluc2VydFxuICAgICAqIEBleGFtcGxlXG4gICAgICogICAgc2VsZWN0aW9uLmluc2VydE5vZGUoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJmb29iYXJcIikpO1xuICAgICAqL1xuICAgIGluc2VydE5vZGU6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIHZhciByYW5nZSA9IHRoaXMuZ2V0UmFuZ2UoKTtcbiAgICAgIGlmIChyYW5nZSkge1xuICAgICAgICByYW5nZS5pbnNlcnROb2RlKG5vZGUpO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBXcmFwcyBjdXJyZW50IHNlbGVjdGlvbiB3aXRoIHRoZSBnaXZlbiBub2RlXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gbm9kZSBUaGUgbm9kZSB0byBzdXJyb3VuZCB0aGUgc2VsZWN0ZWQgZWxlbWVudHMgd2l0aFxuICAgICAqL1xuICAgIHN1cnJvdW5kOiBmdW5jdGlvbihub2RlKSB7XG4gICAgICB2YXIgcmFuZ2UgPSB0aGlzLmdldFJhbmdlKCk7XG4gICAgICBpZiAoIXJhbmdlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyBvbmx5IHdvcmtzIHdoZW4gdGhlIHJhbmdlIGJvdW5kYXJpZXMgYXJlIG5vdCBvdmVybGFwcGluZyBvdGhlciBlbGVtZW50c1xuICAgICAgICByYW5nZS5zdXJyb3VuZENvbnRlbnRzKG5vZGUpO1xuICAgICAgICB0aGlzLnNlbGVjdE5vZGUobm9kZSk7XG4gICAgICB9IGNhdGNoKGUpIHtcbiAgICAgICAgLy8gZmFsbGJhY2tcbiAgICAgICAgbm9kZS5hcHBlbmRDaGlsZChyYW5nZS5leHRyYWN0Q29udGVudHMoKSk7XG4gICAgICAgIHJhbmdlLmluc2VydE5vZGUobm9kZSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFNjcm9sbCB0aGUgY3VycmVudCBjYXJldCBwb3NpdGlvbiBpbnRvIHRoZSB2aWV3XG4gICAgICogRklYTUU6IFRoaXMgaXMgYSBiaXQgaGFja3ksIHRoZXJlIG1pZ2h0IGJlIGEgc21hcnRlciB3YXkgb2YgZG9pbmcgdGhpc1xuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiAgICBzZWxlY3Rpb24uc2Nyb2xsSW50b1ZpZXcoKTtcbiAgICAgKi9cbiAgICBzY3JvbGxJbnRvVmlldzogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgZG9jICAgICAgICAgICA9IHRoaXMuZG9jLFxuICAgICAgICAgIHRvbGVyYW5jZSAgICAgPSA1LCAvLyBweFxuICAgICAgICAgIGhhc1Njcm9sbEJhcnMgPSBkb2MuZG9jdW1lbnRFbGVtZW50LnNjcm9sbEhlaWdodCA+IGRvYy5kb2N1bWVudEVsZW1lbnQub2Zmc2V0SGVpZ2h0LFxuICAgICAgICAgIHRlbXBFbGVtZW50ICAgPSBkb2MuX3d5c2lodG1sNVNjcm9sbEludG9WaWV3RWxlbWVudCA9IGRvYy5fd3lzaWh0bWw1U2Nyb2xsSW50b1ZpZXdFbGVtZW50IHx8IChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBlbGVtZW50ID0gZG9jLmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgICAgICAgICAgLy8gVGhlIGVsZW1lbnQgbmVlZHMgY29udGVudCBpbiBvcmRlciB0byBiZSBhYmxlIHRvIGNhbGN1bGF0ZSBpdCdzIHBvc2l0aW9uIHByb3Blcmx5XG4gICAgICAgICAgICBlbGVtZW50LmlubmVySFRNTCA9IHd5c2lodG1sNS5JTlZJU0lCTEVfU1BBQ0U7XG4gICAgICAgICAgICByZXR1cm4gZWxlbWVudDtcbiAgICAgICAgICB9KSgpLFxuICAgICAgICAgIG9mZnNldFRvcDtcblxuICAgICAgaWYgKGhhc1Njcm9sbEJhcnMpIHtcbiAgICAgICAgdGhpcy5pbnNlcnROb2RlKHRlbXBFbGVtZW50KTtcbiAgICAgICAgb2Zmc2V0VG9wID0gX2dldEN1bXVsYXRpdmVPZmZzZXRUb3AodGVtcEVsZW1lbnQpO1xuICAgICAgICB0ZW1wRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRlbXBFbGVtZW50KTtcbiAgICAgICAgaWYgKG9mZnNldFRvcCA+PSAoZG9jLmJvZHkuc2Nyb2xsVG9wICsgZG9jLmRvY3VtZW50RWxlbWVudC5vZmZzZXRIZWlnaHQgLSB0b2xlcmFuY2UpKSB7XG4gICAgICAgICAgZG9jLmJvZHkuc2Nyb2xsVG9wID0gb2Zmc2V0VG9wO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFNlbGVjdCBsaW5lIHdoZXJlIHRoZSBjYXJldCBpcyBpblxuICAgICAqL1xuICAgIHNlbGVjdExpbmU6IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKHd5c2lodG1sNS5icm93c2VyLnN1cHBvcnRzU2VsZWN0aW9uTW9kaWZ5KCkpIHtcbiAgICAgICAgdGhpcy5fc2VsZWN0TGluZV9XM0MoKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5kb2Muc2VsZWN0aW9uKSB7XG4gICAgICAgIHRoaXMuX3NlbGVjdExpbmVfTVNJRSgpO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTZWUgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4vRE9NL1NlbGVjdGlvbi9tb2RpZnlcbiAgICAgKi9cbiAgICBfc2VsZWN0TGluZV9XM0M6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHdpbiAgICAgICA9IHRoaXMuZG9jLmRlZmF1bHRWaWV3LFxuICAgICAgICAgIHNlbGVjdGlvbiA9IHdpbi5nZXRTZWxlY3Rpb24oKTtcbiAgICAgIHNlbGVjdGlvbi5tb2RpZnkoXCJleHRlbmRcIiwgXCJsZWZ0XCIsIFwibGluZWJvdW5kYXJ5XCIpO1xuICAgICAgc2VsZWN0aW9uLm1vZGlmeShcImV4dGVuZFwiLCBcInJpZ2h0XCIsIFwibGluZWJvdW5kYXJ5XCIpO1xuICAgIH0sXG5cbiAgICBfc2VsZWN0TGluZV9NU0lFOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciByYW5nZSAgICAgICA9IHRoaXMuZG9jLnNlbGVjdGlvbi5jcmVhdGVSYW5nZSgpLFxuICAgICAgICAgIHJhbmdlVG9wICAgID0gcmFuZ2UuYm91bmRpbmdUb3AsXG4gICAgICAgICAgc2Nyb2xsV2lkdGggPSB0aGlzLmRvYy5ib2R5LnNjcm9sbFdpZHRoLFxuICAgICAgICAgIHJhbmdlQm90dG9tLFxuICAgICAgICAgIHJhbmdlRW5kLFxuICAgICAgICAgIG1lYXN1cmVOb2RlLFxuICAgICAgICAgIGksXG4gICAgICAgICAgajtcblxuICAgICAgaWYgKCFyYW5nZS5tb3ZlVG9Qb2ludCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChyYW5nZVRvcCA9PT0gMCkge1xuICAgICAgICAvLyBEb24ndCBrbm93IHdoeSwgYnV0IHdoZW4gdGhlIHNlbGVjdGlvbiBlbmRzIGF0IHRoZSBlbmQgb2YgYSBsaW5lXG4gICAgICAgIC8vIHJhbmdlLmJvdW5kaW5nVG9wIGlzIDBcbiAgICAgICAgbWVhc3VyZU5vZGUgPSB0aGlzLmRvYy5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgICAgICAgdGhpcy5pbnNlcnROb2RlKG1lYXN1cmVOb2RlKTtcbiAgICAgICAgcmFuZ2VUb3AgPSBtZWFzdXJlTm9kZS5vZmZzZXRUb3A7XG4gICAgICAgIG1lYXN1cmVOb2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobWVhc3VyZU5vZGUpO1xuICAgICAgfVxuXG4gICAgICByYW5nZVRvcCArPSAxO1xuXG4gICAgICBmb3IgKGk9LTEwOyBpPHNjcm9sbFdpZHRoOyBpKz0yKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcmFuZ2UubW92ZVRvUG9pbnQoaSwgcmFuZ2VUb3ApO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9IGNhdGNoKGUxKSB7fVxuICAgICAgfVxuXG4gICAgICAvLyBJbnZlc3RpZ2F0ZSB0aGUgZm9sbG93aW5nIGluIG9yZGVyIHRvIGhhbmRsZSBtdWx0aSBsaW5lIHNlbGVjdGlvbnNcbiAgICAgIC8vIHJhbmdlQm90dG9tID0gcmFuZ2VUb3AgKyAocmFuZ2VIZWlnaHQgPyAocmFuZ2VIZWlnaHQgLSAxKSA6IDApO1xuICAgICAgcmFuZ2VCb3R0b20gPSByYW5nZVRvcDtcbiAgICAgIHJhbmdlRW5kID0gdGhpcy5kb2Muc2VsZWN0aW9uLmNyZWF0ZVJhbmdlKCk7XG4gICAgICBmb3IgKGo9c2Nyb2xsV2lkdGg7IGo+PTA7IGotLSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHJhbmdlRW5kLm1vdmVUb1BvaW50KGosIHJhbmdlQm90dG9tKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfSBjYXRjaChlMikge31cbiAgICAgIH1cblxuICAgICAgcmFuZ2Uuc2V0RW5kUG9pbnQoXCJFbmRUb0VuZFwiLCByYW5nZUVuZCk7XG4gICAgICByYW5nZS5zZWxlY3QoKTtcbiAgICB9LFxuXG4gICAgZ2V0VGV4dDogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgc2VsZWN0aW9uID0gdGhpcy5nZXRTZWxlY3Rpb24oKTtcbiAgICAgIHJldHVybiBzZWxlY3Rpb24gPyBzZWxlY3Rpb24udG9TdHJpbmcoKSA6IFwiXCI7XG4gICAgfSxcblxuICAgIGdldE5vZGVzOiBmdW5jdGlvbihub2RlVHlwZSwgZmlsdGVyKSB7XG4gICAgICB2YXIgcmFuZ2UgPSB0aGlzLmdldFJhbmdlKCk7XG4gICAgICBpZiAocmFuZ2UpIHtcbiAgICAgICAgcmV0dXJuIHJhbmdlLmdldE5vZGVzKFtub2RlVHlwZV0sIGZpbHRlcik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9XG4gICAgfSxcbiAgICBcbiAgICBnZXRSYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgc2VsZWN0aW9uID0gdGhpcy5nZXRTZWxlY3Rpb24oKTtcbiAgICAgIHJldHVybiBzZWxlY3Rpb24gJiYgc2VsZWN0aW9uLnJhbmdlQ291bnQgJiYgc2VsZWN0aW9uLmdldFJhbmdlQXQoMCk7XG4gICAgfSxcblxuICAgIGdldFNlbGVjdGlvbjogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gcmFuZ3kuZ2V0U2VsZWN0aW9uKHRoaXMuZG9jLmRlZmF1bHRWaWV3IHx8IHRoaXMuZG9jLnBhcmVudFdpbmRvdyk7XG4gICAgfSxcblxuICAgIHNldFNlbGVjdGlvbjogZnVuY3Rpb24ocmFuZ2UpIHtcbiAgICAgIHZhciB3aW4gICAgICAgPSB0aGlzLmRvYy5kZWZhdWx0VmlldyB8fCB0aGlzLmRvYy5wYXJlbnRXaW5kb3csXG4gICAgICAgICAgc2VsZWN0aW9uID0gcmFuZ3kuZ2V0U2VsZWN0aW9uKHdpbik7XG4gICAgICByZXR1cm4gc2VsZWN0aW9uLnNldFNpbmdsZVJhbmdlKHJhbmdlKTtcbiAgICB9XG4gIH0pO1xuICBcbn0pKHd5c2lodG1sNSk7XG4vKipcbiAqIEluc3BpcmVkIGJ5IHRoZSByYW5neSBDU1MgQXBwbGllciBtb2R1bGUgd3JpdHRlbiBieSBUaW0gRG93biBhbmQgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLlxuICogaHR0cDovL2NvZGUuZ29vZ2xlLmNvbS9wL3Jhbmd5L1xuICpcbiAqIGNoYW5nZWQgaW4gb3JkZXIgdG8gYmUgYWJsZSAuLi5cbiAqICAgIC0gdG8gdXNlIGN1c3RvbSB0YWdzXG4gKiAgICAtIHRvIGRldGVjdCBhbmQgcmVwbGFjZSBzaW1pbGFyIGNzcyBjbGFzc2VzIHZpYSByZWcgZXhwXG4gKi9cbihmdW5jdGlvbih3eXNpaHRtbDUsIHJhbmd5KSB7XG4gIHZhciBkZWZhdWx0VGFnTmFtZSA9IFwic3BhblwiO1xuXG4gIHZhciBSRUdfRVhQX1dISVRFX1NQQUNFID0gL1xccysvZztcblxuICBmdW5jdGlvbiBoYXNDbGFzcyhlbCwgY3NzQ2xhc3MsIHJlZ0V4cCkge1xuICAgIGlmICghZWwuY2xhc3NOYW1lKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIG1hdGNoaW5nQ2xhc3NOYW1lcyA9IGVsLmNsYXNzTmFtZS5tYXRjaChyZWdFeHApIHx8IFtdO1xuICAgIHJldHVybiBtYXRjaGluZ0NsYXNzTmFtZXNbbWF0Y2hpbmdDbGFzc05hbWVzLmxlbmd0aCAtIDFdID09PSBjc3NDbGFzcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGFkZENsYXNzKGVsLCBjc3NDbGFzcywgcmVnRXhwKSB7XG4gICAgaWYgKGVsLmNsYXNzTmFtZSkge1xuICAgICAgcmVtb3ZlQ2xhc3MoZWwsIHJlZ0V4cCk7XG4gICAgICBlbC5jbGFzc05hbWUgKz0gXCIgXCIgKyBjc3NDbGFzcztcbiAgICB9IGVsc2Uge1xuICAgICAgZWwuY2xhc3NOYW1lID0gY3NzQ2xhc3M7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVtb3ZlQ2xhc3MoZWwsIHJlZ0V4cCkge1xuICAgIGlmIChlbC5jbGFzc05hbWUpIHtcbiAgICAgIGVsLmNsYXNzTmFtZSA9IGVsLmNsYXNzTmFtZS5yZXBsYWNlKHJlZ0V4cCwgXCJcIik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gaGFzU2FtZUNsYXNzZXMoZWwxLCBlbDIpIHtcbiAgICByZXR1cm4gZWwxLmNsYXNzTmFtZS5yZXBsYWNlKFJFR19FWFBfV0hJVEVfU1BBQ0UsIFwiIFwiKSA9PSBlbDIuY2xhc3NOYW1lLnJlcGxhY2UoUkVHX0VYUF9XSElURV9TUEFDRSwgXCIgXCIpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVwbGFjZVdpdGhPd25DaGlsZHJlbihlbCkge1xuICAgIHZhciBwYXJlbnQgPSBlbC5wYXJlbnROb2RlO1xuICAgIHdoaWxlIChlbC5maXJzdENoaWxkKSB7XG4gICAgICBwYXJlbnQuaW5zZXJ0QmVmb3JlKGVsLmZpcnN0Q2hpbGQsIGVsKTtcbiAgICB9XG4gICAgcGFyZW50LnJlbW92ZUNoaWxkKGVsKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGVsZW1lbnRzSGF2ZVNhbWVOb25DbGFzc0F0dHJpYnV0ZXMoZWwxLCBlbDIpIHtcbiAgICBpZiAoZWwxLmF0dHJpYnV0ZXMubGVuZ3RoICE9IGVsMi5hdHRyaWJ1dGVzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gZWwxLmF0dHJpYnV0ZXMubGVuZ3RoLCBhdHRyMSwgYXR0cjIsIG5hbWU7IGkgPCBsZW47ICsraSkge1xuICAgICAgYXR0cjEgPSBlbDEuYXR0cmlidXRlc1tpXTtcbiAgICAgIG5hbWUgPSBhdHRyMS5uYW1lO1xuICAgICAgaWYgKG5hbWUgIT0gXCJjbGFzc1wiKSB7XG4gICAgICAgIGF0dHIyID0gZWwyLmF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKG5hbWUpO1xuICAgICAgICBpZiAoYXR0cjEuc3BlY2lmaWVkICE9IGF0dHIyLnNwZWNpZmllZCkge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYXR0cjEuc3BlY2lmaWVkICYmIGF0dHIxLm5vZGVWYWx1ZSAhPT0gYXR0cjIubm9kZVZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgZnVuY3Rpb24gaXNTcGxpdFBvaW50KG5vZGUsIG9mZnNldCkge1xuICAgIGlmIChyYW5neS5kb20uaXNDaGFyYWN0ZXJEYXRhTm9kZShub2RlKSkge1xuICAgICAgaWYgKG9mZnNldCA9PSAwKSB7XG4gICAgICAgIHJldHVybiAhIW5vZGUucHJldmlvdXNTaWJsaW5nO1xuICAgICAgfSBlbHNlIGlmIChvZmZzZXQgPT0gbm9kZS5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuICEhbm9kZS5uZXh0U2libGluZztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBvZmZzZXQgPiAwICYmIG9mZnNldCA8IG5vZGUuY2hpbGROb2Rlcy5sZW5ndGg7XG4gIH1cblxuICBmdW5jdGlvbiBzcGxpdE5vZGVBdChub2RlLCBkZXNjZW5kYW50Tm9kZSwgZGVzY2VuZGFudE9mZnNldCkge1xuICAgIHZhciBuZXdOb2RlO1xuICAgIGlmIChyYW5neS5kb20uaXNDaGFyYWN0ZXJEYXRhTm9kZShkZXNjZW5kYW50Tm9kZSkpIHtcbiAgICAgIGlmIChkZXNjZW5kYW50T2Zmc2V0ID09IDApIHtcbiAgICAgICAgZGVzY2VuZGFudE9mZnNldCA9IHJhbmd5LmRvbS5nZXROb2RlSW5kZXgoZGVzY2VuZGFudE5vZGUpO1xuICAgICAgICBkZXNjZW5kYW50Tm9kZSA9IGRlc2NlbmRhbnROb2RlLnBhcmVudE5vZGU7XG4gICAgICB9IGVsc2UgaWYgKGRlc2NlbmRhbnRPZmZzZXQgPT0gZGVzY2VuZGFudE5vZGUubGVuZ3RoKSB7XG4gICAgICAgIGRlc2NlbmRhbnRPZmZzZXQgPSByYW5neS5kb20uZ2V0Tm9kZUluZGV4KGRlc2NlbmRhbnROb2RlKSArIDE7XG4gICAgICAgIGRlc2NlbmRhbnROb2RlID0gZGVzY2VuZGFudE5vZGUucGFyZW50Tm9kZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG5ld05vZGUgPSByYW5neS5kb20uc3BsaXREYXRhTm9kZShkZXNjZW5kYW50Tm9kZSwgZGVzY2VuZGFudE9mZnNldCk7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICghbmV3Tm9kZSkge1xuICAgICAgbmV3Tm9kZSA9IGRlc2NlbmRhbnROb2RlLmNsb25lTm9kZShmYWxzZSk7XG4gICAgICBpZiAobmV3Tm9kZS5pZCkge1xuICAgICAgICBuZXdOb2RlLnJlbW92ZUF0dHJpYnV0ZShcImlkXCIpO1xuICAgICAgfVxuICAgICAgdmFyIGNoaWxkO1xuICAgICAgd2hpbGUgKChjaGlsZCA9IGRlc2NlbmRhbnROb2RlLmNoaWxkTm9kZXNbZGVzY2VuZGFudE9mZnNldF0pKSB7XG4gICAgICAgIG5ld05vZGUuYXBwZW5kQ2hpbGQoY2hpbGQpO1xuICAgICAgfVxuICAgICAgcmFuZ3kuZG9tLmluc2VydEFmdGVyKG5ld05vZGUsIGRlc2NlbmRhbnROb2RlKTtcbiAgICB9XG4gICAgcmV0dXJuIChkZXNjZW5kYW50Tm9kZSA9PSBub2RlKSA/IG5ld05vZGUgOiBzcGxpdE5vZGVBdChub2RlLCBuZXdOb2RlLnBhcmVudE5vZGUsIHJhbmd5LmRvbS5nZXROb2RlSW5kZXgobmV3Tm9kZSkpO1xuICB9XG5cbiAgZnVuY3Rpb24gTWVyZ2UoZmlyc3ROb2RlKSB7XG4gICAgdGhpcy5pc0VsZW1lbnRNZXJnZSA9IChmaXJzdE5vZGUubm9kZVR5cGUgPT0gd3lzaWh0bWw1LkVMRU1FTlRfTk9ERSk7XG4gICAgdGhpcy5maXJzdFRleHROb2RlID0gdGhpcy5pc0VsZW1lbnRNZXJnZSA/IGZpcnN0Tm9kZS5sYXN0Q2hpbGQgOiBmaXJzdE5vZGU7XG4gICAgdGhpcy50ZXh0Tm9kZXMgPSBbdGhpcy5maXJzdFRleHROb2RlXTtcbiAgfVxuXG4gIE1lcmdlLnByb3RvdHlwZSA9IHtcbiAgICBkb01lcmdlOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB0ZXh0Qml0cyA9IFtdLCB0ZXh0Tm9kZSwgcGFyZW50LCB0ZXh0O1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHRoaXMudGV4dE5vZGVzLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgIHRleHROb2RlID0gdGhpcy50ZXh0Tm9kZXNbaV07XG4gICAgICAgIHBhcmVudCA9IHRleHROb2RlLnBhcmVudE5vZGU7XG4gICAgICAgIHRleHRCaXRzW2ldID0gdGV4dE5vZGUuZGF0YTtcbiAgICAgICAgaWYgKGkpIHtcbiAgICAgICAgICBwYXJlbnQucmVtb3ZlQ2hpbGQodGV4dE5vZGUpO1xuICAgICAgICAgIGlmICghcGFyZW50Lmhhc0NoaWxkTm9kZXMoKSkge1xuICAgICAgICAgICAgcGFyZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocGFyZW50KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRoaXMuZmlyc3RUZXh0Tm9kZS5kYXRhID0gdGV4dCA9IHRleHRCaXRzLmpvaW4oXCJcIik7XG4gICAgICByZXR1cm4gdGV4dDtcbiAgICB9LFxuXG4gICAgZ2V0TGVuZ3RoOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBpID0gdGhpcy50ZXh0Tm9kZXMubGVuZ3RoLCBsZW4gPSAwO1xuICAgICAgd2hpbGUgKGktLSkge1xuICAgICAgICBsZW4gKz0gdGhpcy50ZXh0Tm9kZXNbaV0ubGVuZ3RoO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGxlbjtcbiAgICB9LFxuXG4gICAgdG9TdHJpbmc6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHRleHRCaXRzID0gW107XG4gICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdGhpcy50ZXh0Tm9kZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgdGV4dEJpdHNbaV0gPSBcIidcIiArIHRoaXMudGV4dE5vZGVzW2ldLmRhdGEgKyBcIidcIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBcIltNZXJnZShcIiArIHRleHRCaXRzLmpvaW4oXCIsXCIpICsgXCIpXVwiO1xuICAgIH1cbiAgfTtcblxuICAvKiBEb25uYSBTdGFydCAtIEFkZGVkIGF0dHJzIHBhcmFtZXRlci4gKi9cbiAgZnVuY3Rpb24gSFRNTEFwcGxpZXIodGFnTmFtZXMsIGNzc0NsYXNzLCBzaW1pbGFyQ2xhc3NSZWdFeHAsIG5vcm1hbGl6ZSwgYXR0cnMpIHtcbiAgICB0aGlzLnRhZ05hbWVzID0gdGFnTmFtZXMgfHwgW2RlZmF1bHRUYWdOYW1lXTtcbiAgICB0aGlzLmNzc0NsYXNzID0gY3NzQ2xhc3MgfHwgXCJcIjtcbiAgICB0aGlzLnNpbWlsYXJDbGFzc1JlZ0V4cCA9IHNpbWlsYXJDbGFzc1JlZ0V4cDtcbiAgICB0aGlzLm5vcm1hbGl6ZSA9IG5vcm1hbGl6ZTtcbiAgICB0aGlzLmF0dHJzID0gYXR0cnMgfHwgW107XG4gICAgdGhpcy5hcHBseVRvQW55VGFnTmFtZSA9IGZhbHNlO1xuICB9XG4gIC8qIERvbm5hIEVuZCAqL1xuXG4gIEhUTUxBcHBsaWVyLnByb3RvdHlwZSA9IHtcbiAgICBnZXRBbmNlc3RvcldpdGhDbGFzczogZnVuY3Rpb24obm9kZSkge1xuICAgICAgdmFyIGNzc0NsYXNzTWF0Y2g7XG4gICAgICB3aGlsZSAobm9kZSkge1xuICAgICAgICBjc3NDbGFzc01hdGNoID0gdGhpcy5jc3NDbGFzcyA/IGhhc0NsYXNzKG5vZGUsIHRoaXMuY3NzQ2xhc3MsIHRoaXMuc2ltaWxhckNsYXNzUmVnRXhwKSA6IHRydWU7XG4gICAgICAgIGlmIChub2RlLm5vZGVUeXBlID09IHd5c2lodG1sNS5FTEVNRU5UX05PREUgJiYgcmFuZ3kuZG9tLmFycmF5Q29udGFpbnModGhpcy50YWdOYW1lcywgbm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCkpICYmIGNzc0NsYXNzTWF0Y2gpIHtcbiAgICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgICAgfVxuICAgICAgICBub2RlID0gbm9kZS5wYXJlbnROb2RlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0sXG5cbiAgICAvLyBOb3JtYWxpemVzIG5vZGVzIGFmdGVyIGFwcGx5aW5nIGEgQ1NTIGNsYXNzIHRvIGEgUmFuZ2UuXG4gICAgcG9zdEFwcGx5OiBmdW5jdGlvbih0ZXh0Tm9kZXMsIHJhbmdlKSB7XG4gICAgICB2YXIgZmlyc3ROb2RlID0gdGV4dE5vZGVzWzBdLCBsYXN0Tm9kZSA9IHRleHROb2Rlc1t0ZXh0Tm9kZXMubGVuZ3RoIC0gMV07XG5cbiAgICAgIHZhciBtZXJnZXMgPSBbXSwgY3VycmVudE1lcmdlO1xuXG4gICAgICB2YXIgcmFuZ2VTdGFydE5vZGUgPSBmaXJzdE5vZGUsIHJhbmdlRW5kTm9kZSA9IGxhc3ROb2RlO1xuICAgICAgdmFyIHJhbmdlU3RhcnRPZmZzZXQgPSAwLCByYW5nZUVuZE9mZnNldCA9IGxhc3ROb2RlLmxlbmd0aDtcblxuICAgICAgdmFyIHRleHROb2RlLCBwcmVjZWRpbmdUZXh0Tm9kZTtcblxuICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHRleHROb2Rlcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgICB0ZXh0Tm9kZSA9IHRleHROb2Rlc1tpXTtcbiAgICAgICAgcHJlY2VkaW5nVGV4dE5vZGUgPSB0aGlzLmdldEFkamFjZW50TWVyZ2VhYmxlVGV4dE5vZGUodGV4dE5vZGUucGFyZW50Tm9kZSwgZmFsc2UpO1xuICAgICAgICBpZiAocHJlY2VkaW5nVGV4dE5vZGUpIHtcbiAgICAgICAgICBpZiAoIWN1cnJlbnRNZXJnZSkge1xuICAgICAgICAgICAgY3VycmVudE1lcmdlID0gbmV3IE1lcmdlKHByZWNlZGluZ1RleHROb2RlKTtcbiAgICAgICAgICAgIG1lcmdlcy5wdXNoKGN1cnJlbnRNZXJnZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGN1cnJlbnRNZXJnZS50ZXh0Tm9kZXMucHVzaCh0ZXh0Tm9kZSk7XG4gICAgICAgICAgaWYgKHRleHROb2RlID09PSBmaXJzdE5vZGUpIHtcbiAgICAgICAgICAgIHJhbmdlU3RhcnROb2RlID0gY3VycmVudE1lcmdlLmZpcnN0VGV4dE5vZGU7XG4gICAgICAgICAgICByYW5nZVN0YXJ0T2Zmc2V0ID0gcmFuZ2VTdGFydE5vZGUubGVuZ3RoO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAodGV4dE5vZGUgPT09IGxhc3ROb2RlKSB7XG4gICAgICAgICAgICByYW5nZUVuZE5vZGUgPSBjdXJyZW50TWVyZ2UuZmlyc3RUZXh0Tm9kZTtcbiAgICAgICAgICAgIHJhbmdlRW5kT2Zmc2V0ID0gY3VycmVudE1lcmdlLmdldExlbmd0aCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjdXJyZW50TWVyZ2UgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRlc3Qgd2hldGhlciB0aGUgZmlyc3Qgbm9kZSBhZnRlciB0aGUgcmFuZ2UgbmVlZHMgbWVyZ2luZ1xuICAgICAgdmFyIG5leHRUZXh0Tm9kZSA9IHRoaXMuZ2V0QWRqYWNlbnRNZXJnZWFibGVUZXh0Tm9kZShsYXN0Tm9kZS5wYXJlbnROb2RlLCB0cnVlKTtcbiAgICAgIGlmIChuZXh0VGV4dE5vZGUpIHtcbiAgICAgICAgaWYgKCFjdXJyZW50TWVyZ2UpIHtcbiAgICAgICAgICBjdXJyZW50TWVyZ2UgPSBuZXcgTWVyZ2UobGFzdE5vZGUpO1xuICAgICAgICAgIG1lcmdlcy5wdXNoKGN1cnJlbnRNZXJnZSk7XG4gICAgICAgIH1cbiAgICAgICAgY3VycmVudE1lcmdlLnRleHROb2Rlcy5wdXNoKG5leHRUZXh0Tm9kZSk7XG4gICAgICB9XG5cbiAgICAgIC8vIERvIHRoZSBtZXJnZXNcbiAgICAgIGlmIChtZXJnZXMubGVuZ3RoKSB7XG4gICAgICAgIGZvciAoaSA9IDAsIGxlbiA9IG1lcmdlcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgICAgIG1lcmdlc1tpXS5kb01lcmdlKCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gU2V0IHRoZSByYW5nZSBib3VuZGFyaWVzXG4gICAgICAgIHJhbmdlLnNldFN0YXJ0KHJhbmdlU3RhcnROb2RlLCByYW5nZVN0YXJ0T2Zmc2V0KTtcbiAgICAgICAgcmFuZ2Uuc2V0RW5kKHJhbmdlRW5kTm9kZSwgcmFuZ2VFbmRPZmZzZXQpO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBnZXRBZGphY2VudE1lcmdlYWJsZVRleHROb2RlOiBmdW5jdGlvbihub2RlLCBmb3J3YXJkKSB7XG4gICAgICAgIHZhciBpc1RleHROb2RlID0gKG5vZGUubm9kZVR5cGUgPT0gd3lzaWh0bWw1LlRFWFRfTk9ERSk7XG4gICAgICAgIHZhciBlbCA9IGlzVGV4dE5vZGUgPyBub2RlLnBhcmVudE5vZGUgOiBub2RlO1xuICAgICAgICB2YXIgYWRqYWNlbnROb2RlO1xuICAgICAgICB2YXIgcHJvcE5hbWUgPSBmb3J3YXJkID8gXCJuZXh0U2libGluZ1wiIDogXCJwcmV2aW91c1NpYmxpbmdcIjtcbiAgICAgICAgaWYgKGlzVGV4dE5vZGUpIHtcbiAgICAgICAgICAvLyBDYW4gbWVyZ2UgaWYgdGhlIG5vZGUncyBwcmV2aW91cy9uZXh0IHNpYmxpbmcgaXMgYSB0ZXh0IG5vZGVcbiAgICAgICAgICBhZGphY2VudE5vZGUgPSBub2RlW3Byb3BOYW1lXTtcbiAgICAgICAgICBpZiAoYWRqYWNlbnROb2RlICYmIGFkamFjZW50Tm9kZS5ub2RlVHlwZSA9PSB3eXNpaHRtbDUuVEVYVF9OT0RFKSB7XG4gICAgICAgICAgICByZXR1cm4gYWRqYWNlbnROb2RlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBDb21wYXJlIGVsZW1lbnQgd2l0aCBpdHMgc2libGluZ1xuICAgICAgICAgIGFkamFjZW50Tm9kZSA9IGVsW3Byb3BOYW1lXTtcbiAgICAgICAgICBpZiAoYWRqYWNlbnROb2RlICYmIHRoaXMuYXJlRWxlbWVudHNNZXJnZWFibGUobm9kZSwgYWRqYWNlbnROb2RlKSkge1xuICAgICAgICAgICAgcmV0dXJuIGFkamFjZW50Tm9kZVtmb3J3YXJkID8gXCJmaXJzdENoaWxkXCIgOiBcImxhc3RDaGlsZFwiXTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcblxuICAgIGFyZUVsZW1lbnRzTWVyZ2VhYmxlOiBmdW5jdGlvbihlbDEsIGVsMikge1xuICAgICAgcmV0dXJuIHJhbmd5LmRvbS5hcnJheUNvbnRhaW5zKHRoaXMudGFnTmFtZXMsIChlbDEudGFnTmFtZSB8fCBcIlwiKS50b0xvd2VyQ2FzZSgpKVxuICAgICAgICAmJiByYW5neS5kb20uYXJyYXlDb250YWlucyh0aGlzLnRhZ05hbWVzLCAoZWwyLnRhZ05hbWUgfHwgXCJcIikudG9Mb3dlckNhc2UoKSlcbiAgICAgICAgJiYgaGFzU2FtZUNsYXNzZXMoZWwxLCBlbDIpXG4gICAgICAgICYmIGVsZW1lbnRzSGF2ZVNhbWVOb25DbGFzc0F0dHJpYnV0ZXMoZWwxLCBlbDIpO1xuICAgIH0sXG5cbiAgICBjcmVhdGVDb250YWluZXI6IGZ1bmN0aW9uKGRvYykge1xuICAgICAgdmFyIGVsID0gZG9jLmNyZWF0ZUVsZW1lbnQodGhpcy50YWdOYW1lc1swXSk7XG5cbiAgICAgIGlmICh0aGlzLmNzc0NsYXNzKSB7XG4gICAgICAgIGVsLmNsYXNzTmFtZSA9IHRoaXMuY3NzQ2xhc3M7XG4gICAgICB9XG5cbiAgICAgIC8qIERvbm5hIFN0YXJ0IC0gQWRkIHN1cHBvcnQgZm9yIG90aGVyIGF0dHJpYnV0ZXMuICovXG4gICAgICBpZiAodGhpcy5hdHRycykge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuYXR0cnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBlbC5zZXRBdHRyaWJ1dGUodGhpcy5hdHRyc1tpXS5uYW1lLCB0aGlzLmF0dHJzW2ldLnZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLyogRG9ubmEgRW5kICovXG5cbiAgICAgIHJldHVybiBlbDtcbiAgICB9LFxuXG4gICAgYXBwbHlUb1RleHROb2RlOiBmdW5jdGlvbih0ZXh0Tm9kZSkge1xuICAgICAgdmFyIHBhcmVudCA9IHRleHROb2RlLnBhcmVudE5vZGU7XG4gICAgICBpZiAocGFyZW50LmNoaWxkTm9kZXMubGVuZ3RoID09IDEgJiYgcmFuZ3kuZG9tLmFycmF5Q29udGFpbnModGhpcy50YWdOYW1lcywgcGFyZW50LnRhZ05hbWUudG9Mb3dlckNhc2UoKSkpIHtcbiAgICAgICAgaWYgKHRoaXMuY3NzQ2xhc3MpIHtcbiAgICAgICAgICBhZGRDbGFzcyhwYXJlbnQsIHRoaXMuY3NzQ2xhc3MsIHRoaXMuc2ltaWxhckNsYXNzUmVnRXhwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8qIERvbm5hIFN0YXJ0IC0gQWRkIHN1cHBvcnQgZm9yIG90aGVyIGF0dHJpYnV0ZXMuICovXG4gICAgICAgIGlmICh0aGlzLmF0dHJzKSB7XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmF0dHJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBwYXJlbnQucmVtb3ZlQXR0cmlidXRlKHRoaXMuYXR0cnNbaV0ubmFtZSk7XG4gICAgICAgICAgICBwYXJlbnQuc2V0QXR0cmlidXRlKHRoaXMuYXR0cnNbaV0ubmFtZSwgdGhpcy5hdHRyc1tpXS52YWx1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8qIERvbm5hIEVuZCAqL1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIGVsID0gdGhpcy5jcmVhdGVDb250YWluZXIocmFuZ3kuZG9tLmdldERvY3VtZW50KHRleHROb2RlKSk7XG5cbiAgICAgICAgLyogRG9ubmEgU3RhcnQgLSBSZW1vdmUgYW55IGxpbmUgYnJlYWtzIHRoYXQgaW1tZWRpYXRlbHkgZm9sbG93IGEgZGl2IHRoYXRcbiAgICAgICAgICAgaXMgYWRkZWQgdG8gdGhlIGVkaXRvciwgc2luY2UgaXQncyBhIGJsb2NrLWxldmVsIGVsZW1lbnQgdGhhdCBtYWtlc1xuICAgICAgICAgICB0aGUgbGluZSBicmVhayBvYnNvbGV0ZSBhbmQganVzdCBjcmVhdGVzIHVubmVjZXNzYXJ5IHdoaXRlc3BhY2UuXG4gICAgICAgICovXG4gICAgICAgIGlmICh0aGlzLnRhZ05hbWVzWzBdID09PSBcImRpdlwiICYmIHRleHROb2RlLm5leHRTaWJsaW5nKSB7XG4gICAgICAgICAgdmFyIG5leHRTaWJsaW5nID0gdGV4dE5vZGUubmV4dFNpYmxpbmc7XG5cbiAgICAgICAgICBpZiAoKG5leHRTaWJsaW5nLm5vZGVUeXBlID09PSAxKSAmJiAobmV4dFNpYmxpbmcubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJiclwiKSkge1xuICAgICAgICAgICAgdGV4dE5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChuZXh0U2libGluZyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8qIERvbm5hIEVuZCAqL1xuXG4gICAgICAgIHRleHROb2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsLCB0ZXh0Tm9kZSk7XG4gICAgICAgIGVsLmFwcGVuZENoaWxkKHRleHROb2RlKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgaXNSZW1vdmFibGU6IGZ1bmN0aW9uKGVsKSB7XG4gICAgICByZXR1cm4gcmFuZ3kuZG9tLmFycmF5Q29udGFpbnModGhpcy50YWdOYW1lcywgZWwudGFnTmFtZS50b0xvd2VyQ2FzZSgpKSAmJiB3eXNpaHRtbDUubGFuZy5zdHJpbmcoZWwuY2xhc3NOYW1lKS50cmltKCkgPT0gdGhpcy5jc3NDbGFzcztcbiAgICB9LFxuXG4gICAgdW5kb1RvVGV4dE5vZGU6IGZ1bmN0aW9uKHRleHROb2RlLCByYW5nZSwgYW5jZXN0b3JXaXRoQ2xhc3MpIHtcbiAgICAgIGlmICghcmFuZ2UuY29udGFpbnNOb2RlKGFuY2VzdG9yV2l0aENsYXNzKSkge1xuICAgICAgICAvLyBTcGxpdCBvdXQgdGhlIHBvcnRpb24gb2YgdGhlIGFuY2VzdG9yIGZyb20gd2hpY2ggd2UgY2FuIHJlbW92ZSB0aGUgQ1NTIGNsYXNzXG4gICAgICAgIHZhciBhbmNlc3RvclJhbmdlID0gcmFuZ2UuY2xvbmVSYW5nZSgpO1xuICAgICAgICBhbmNlc3RvclJhbmdlLnNlbGVjdE5vZGUoYW5jZXN0b3JXaXRoQ2xhc3MpO1xuXG4gICAgICAgIGlmIChhbmNlc3RvclJhbmdlLmlzUG9pbnRJblJhbmdlKHJhbmdlLmVuZENvbnRhaW5lciwgcmFuZ2UuZW5kT2Zmc2V0KSAmJiBpc1NwbGl0UG9pbnQocmFuZ2UuZW5kQ29udGFpbmVyLCByYW5nZS5lbmRPZmZzZXQpKSB7XG4gICAgICAgICAgc3BsaXROb2RlQXQoYW5jZXN0b3JXaXRoQ2xhc3MsIHJhbmdlLmVuZENvbnRhaW5lciwgcmFuZ2UuZW5kT2Zmc2V0KTtcbiAgICAgICAgICByYW5nZS5zZXRFbmRBZnRlcihhbmNlc3RvcldpdGhDbGFzcyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFuY2VzdG9yUmFuZ2UuaXNQb2ludEluUmFuZ2UocmFuZ2Uuc3RhcnRDb250YWluZXIsIHJhbmdlLnN0YXJ0T2Zmc2V0KSAmJiBpc1NwbGl0UG9pbnQocmFuZ2Uuc3RhcnRDb250YWluZXIsIHJhbmdlLnN0YXJ0T2Zmc2V0KSkge1xuICAgICAgICAgIGFuY2VzdG9yV2l0aENsYXNzID0gc3BsaXROb2RlQXQoYW5jZXN0b3JXaXRoQ2xhc3MsIHJhbmdlLnN0YXJ0Q29udGFpbmVyLCByYW5nZS5zdGFydE9mZnNldCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuc2ltaWxhckNsYXNzUmVnRXhwKSB7XG4gICAgICAgIHJlbW92ZUNsYXNzKGFuY2VzdG9yV2l0aENsYXNzLCB0aGlzLnNpbWlsYXJDbGFzc1JlZ0V4cCk7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5pc1JlbW92YWJsZShhbmNlc3RvcldpdGhDbGFzcykpIHtcbiAgICAgICAgcmVwbGFjZVdpdGhPd25DaGlsZHJlbihhbmNlc3RvcldpdGhDbGFzcyk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGFwcGx5VG9SYW5nZTogZnVuY3Rpb24ocmFuZ2UpIHtcbiAgICAgICAgdmFyIHRleHROb2RlcyA9IHJhbmdlLmdldE5vZGVzKFt3eXNpaHRtbDUuVEVYVF9OT0RFXSk7XG4gICAgICAgIGlmICghdGV4dE5vZGVzLmxlbmd0aCkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICB2YXIgbm9kZSA9IHRoaXMuY3JlYXRlQ29udGFpbmVyKHJhbmdlLmVuZENvbnRhaW5lci5vd25lckRvY3VtZW50KTtcbiAgICAgICAgICAgIHJhbmdlLnN1cnJvdW5kQ29udGVudHMobm9kZSk7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdE5vZGUocmFuZ2UsIG5vZGUpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH0gY2F0Y2goZSkge31cbiAgICAgICAgfVxuXG4gICAgICAgIHJhbmdlLnNwbGl0Qm91bmRhcmllcygpO1xuICAgICAgICB0ZXh0Tm9kZXMgPSByYW5nZS5nZXROb2Rlcyhbd3lzaWh0bWw1LlRFWFRfTk9ERV0pO1xuXG4gICAgICAgIGlmICh0ZXh0Tm9kZXMubGVuZ3RoKSB7XG4gICAgICAgICAgdmFyIHRleHROb2RlO1xuXG4gICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHRleHROb2Rlcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgICAgICAgdGV4dE5vZGUgPSB0ZXh0Tm9kZXNbaV07XG4gICAgICAgICAgICBpZiAoIXRoaXMuZ2V0QW5jZXN0b3JXaXRoQ2xhc3ModGV4dE5vZGUpKSB7XG4gICAgICAgICAgICAgIHRoaXMuYXBwbHlUb1RleHROb2RlKHRleHROb2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICByYW5nZS5zZXRTdGFydCh0ZXh0Tm9kZXNbMF0sIDApO1xuICAgICAgICAgIHRleHROb2RlID0gdGV4dE5vZGVzW3RleHROb2Rlcy5sZW5ndGggLSAxXTtcbiAgICAgICAgICByYW5nZS5zZXRFbmQodGV4dE5vZGUsIHRleHROb2RlLmxlbmd0aCk7XG5cbiAgICAgICAgICBpZiAodGhpcy5ub3JtYWxpemUpIHtcbiAgICAgICAgICAgIHRoaXMucG9zdEFwcGx5KHRleHROb2RlcywgcmFuZ2UpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICB1bmRvVG9SYW5nZTogZnVuY3Rpb24ocmFuZ2UpIHtcbiAgICAgIHZhciB0ZXh0Tm9kZXMgPSByYW5nZS5nZXROb2Rlcyhbd3lzaWh0bWw1LlRFWFRfTk9ERV0pLCB0ZXh0Tm9kZSwgYW5jZXN0b3JXaXRoQ2xhc3M7XG4gICAgICBpZiAodGV4dE5vZGVzLmxlbmd0aCkge1xuICAgICAgICByYW5nZS5zcGxpdEJvdW5kYXJpZXMoKTtcbiAgICAgICAgdGV4dE5vZGVzID0gcmFuZ2UuZ2V0Tm9kZXMoW3d5c2lodG1sNS5URVhUX05PREVdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBkb2MgPSByYW5nZS5lbmRDb250YWluZXIub3duZXJEb2N1bWVudCxcbiAgICAgICAgICAgIG5vZGUgPSBkb2MuY3JlYXRlVGV4dE5vZGUod3lzaWh0bWw1LklOVklTSUJMRV9TUEFDRSk7XG4gICAgICAgIHJhbmdlLmluc2VydE5vZGUobm9kZSk7XG4gICAgICAgIHJhbmdlLnNlbGVjdE5vZGUobm9kZSk7XG4gICAgICAgIHRleHROb2RlcyA9IFtub2RlXTtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHRleHROb2Rlcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgICB0ZXh0Tm9kZSA9IHRleHROb2Rlc1tpXTtcbiAgICAgICAgYW5jZXN0b3JXaXRoQ2xhc3MgPSB0aGlzLmdldEFuY2VzdG9yV2l0aENsYXNzKHRleHROb2RlKTtcbiAgICAgICAgaWYgKGFuY2VzdG9yV2l0aENsYXNzKSB7XG4gICAgICAgICAgdGhpcy51bmRvVG9UZXh0Tm9kZSh0ZXh0Tm9kZSwgcmFuZ2UsIGFuY2VzdG9yV2l0aENsYXNzKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobGVuID09IDEpIHtcbiAgICAgICAgdGhpcy5zZWxlY3ROb2RlKHJhbmdlLCB0ZXh0Tm9kZXNbMF0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmFuZ2Uuc2V0U3RhcnQodGV4dE5vZGVzWzBdLCAwKTtcbiAgICAgICAgdGV4dE5vZGUgPSB0ZXh0Tm9kZXNbdGV4dE5vZGVzLmxlbmd0aCAtIDFdO1xuICAgICAgICByYW5nZS5zZXRFbmQodGV4dE5vZGUsIHRleHROb2RlLmxlbmd0aCk7XG5cbiAgICAgICAgaWYgKHRoaXMubm9ybWFsaXplKSB7XG4gICAgICAgICAgdGhpcy5wb3N0QXBwbHkodGV4dE5vZGVzLCByYW5nZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc2VsZWN0Tm9kZTogZnVuY3Rpb24ocmFuZ2UsIG5vZGUpIHtcbiAgICAgIHZhciBpc0VsZW1lbnQgICAgICAgPSBub2RlLm5vZGVUeXBlID09PSB3eXNpaHRtbDUuRUxFTUVOVF9OT0RFLFxuICAgICAgICAgIGNhbkhhdmVIVE1MICAgICA9IFwiY2FuSGF2ZUhUTUxcIiBpbiBub2RlID8gbm9kZS5jYW5IYXZlSFRNTCA6IHRydWUsXG4gICAgICAgICAgY29udGVudCAgICAgICAgID0gaXNFbGVtZW50ID8gbm9kZS5pbm5lckhUTUwgOiBub2RlLmRhdGEsXG4gICAgICAgICAgaXNFbXB0eSAgICAgICAgID0gKGNvbnRlbnQgPT09IFwiXCIgfHwgY29udGVudCA9PT0gd3lzaWh0bWw1LklOVklTSUJMRV9TUEFDRSk7XG5cbiAgICAgIGlmIChpc0VtcHR5ICYmIGlzRWxlbWVudCAmJiBjYW5IYXZlSFRNTCkge1xuICAgICAgICAvLyBNYWtlIHN1cmUgdGhhdCBjYXJldCBpcyB2aXNpYmxlIGluIG5vZGUgYnkgaW5zZXJ0aW5nIGEgemVybyB3aWR0aCBubyBicmVha2luZyBzcGFjZVxuICAgICAgICB0cnkgeyBub2RlLmlubmVySFRNTCA9IHd5c2lodG1sNS5JTlZJU0lCTEVfU1BBQ0U7IH0gY2F0Y2goZSkge31cbiAgICAgIH1cbiAgICAgIHJhbmdlLnNlbGVjdE5vZGVDb250ZW50cyhub2RlKTtcbiAgICAgIGlmIChpc0VtcHR5ICYmIGlzRWxlbWVudCkge1xuICAgICAgICByYW5nZS5jb2xsYXBzZShmYWxzZSk7XG4gICAgICB9IGVsc2UgaWYgKGlzRW1wdHkpIHtcbiAgICAgICAgcmFuZ2Uuc2V0U3RhcnRBZnRlcihub2RlKTtcbiAgICAgICAgcmFuZ2Uuc2V0RW5kQWZ0ZXIobm9kZSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGdldFRleHRTZWxlY3RlZEJ5UmFuZ2U6IGZ1bmN0aW9uKHRleHROb2RlLCByYW5nZSkge1xuICAgICAgdmFyIHRleHRSYW5nZSA9IHJhbmdlLmNsb25lUmFuZ2UoKTtcbiAgICAgIHRleHRSYW5nZS5zZWxlY3ROb2RlQ29udGVudHModGV4dE5vZGUpO1xuXG4gICAgICB2YXIgaW50ZXJzZWN0aW9uUmFuZ2UgPSB0ZXh0UmFuZ2UuaW50ZXJzZWN0aW9uKHJhbmdlKTtcbiAgICAgIHZhciB0ZXh0ID0gaW50ZXJzZWN0aW9uUmFuZ2UgPyBpbnRlcnNlY3Rpb25SYW5nZS50b1N0cmluZygpIDogXCJcIjtcbiAgICAgIHRleHRSYW5nZS5kZXRhY2goKTtcblxuICAgICAgcmV0dXJuIHRleHQ7XG4gICAgfSxcblxuICAgIGlzQXBwbGllZFRvUmFuZ2U6IGZ1bmN0aW9uKHJhbmdlKSB7XG4gICAgICB2YXIgYW5jZXN0b3JzID0gW10sXG4gICAgICAgICAgYW5jZXN0b3IsXG4gICAgICAgICAgdGV4dE5vZGVzID0gcmFuZ2UuZ2V0Tm9kZXMoW3d5c2lodG1sNS5URVhUX05PREVdKTtcbiAgICAgIGlmICghdGV4dE5vZGVzLmxlbmd0aCkge1xuICAgICAgICBhbmNlc3RvciA9IHRoaXMuZ2V0QW5jZXN0b3JXaXRoQ2xhc3MocmFuZ2Uuc3RhcnRDb250YWluZXIpO1xuICAgICAgICByZXR1cm4gYW5jZXN0b3IgPyBbYW5jZXN0b3JdIDogZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB0ZXh0Tm9kZXMubGVuZ3RoLCBzZWxlY3RlZFRleHQ7IGkgPCBsZW47ICsraSkge1xuICAgICAgICBzZWxlY3RlZFRleHQgPSB0aGlzLmdldFRleHRTZWxlY3RlZEJ5UmFuZ2UodGV4dE5vZGVzW2ldLCByYW5nZSk7XG4gICAgICAgIGFuY2VzdG9yID0gdGhpcy5nZXRBbmNlc3RvcldpdGhDbGFzcyh0ZXh0Tm9kZXNbaV0pO1xuICAgICAgICBpZiAoc2VsZWN0ZWRUZXh0ICE9IFwiXCIgJiYgIWFuY2VzdG9yKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFuY2VzdG9ycy5wdXNoKGFuY2VzdG9yKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGFuY2VzdG9ycztcbiAgICB9LFxuXG4gICAgdG9nZ2xlUmFuZ2U6IGZ1bmN0aW9uKHJhbmdlKSB7XG4gICAgICBpZiAodGhpcy5pc0FwcGxpZWRUb1JhbmdlKHJhbmdlKSkge1xuICAgICAgICB0aGlzLnVuZG9Ub1JhbmdlKHJhbmdlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuYXBwbHlUb1JhbmdlKHJhbmdlKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgd3lzaWh0bWw1LnNlbGVjdGlvbi5IVE1MQXBwbGllciA9IEhUTUxBcHBsaWVyO1xuXG59KSh3eXNpaHRtbDUsIHJhbmd5KTtcbi8qKlxuICogUmljaCBUZXh0IFF1ZXJ5L0Zvcm1hdHRpbmcgQ29tbWFuZHNcbiAqIFxuICogQGV4YW1wbGVcbiAqICAgIHZhciBjb21tYW5kcyA9IG5ldyB3eXNpaHRtbDUuQ29tbWFuZHMoZWRpdG9yKTtcbiAqL1xud3lzaWh0bWw1LkNvbW1hbmRzID0gQmFzZS5leHRlbmQoXG4gIC8qKiBAc2NvcGUgd3lzaWh0bWw1LkNvbW1hbmRzLnByb3RvdHlwZSAqLyB7XG4gIGNvbnN0cnVjdG9yOiBmdW5jdGlvbihlZGl0b3IpIHtcbiAgICB0aGlzLmVkaXRvciAgID0gZWRpdG9yO1xuICAgIHRoaXMuY29tcG9zZXIgPSBlZGl0b3IuY29tcG9zZXI7XG4gICAgdGhpcy5kb2MgICAgICA9IHRoaXMuY29tcG9zZXIuZG9jO1xuICB9LFxuICBcbiAgLyoqXG4gICAqIENoZWNrIHdoZXRoZXIgdGhlIGJyb3dzZXIgc3VwcG9ydHMgdGhlIGdpdmVuIGNvbW1hbmRcbiAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IGNvbW1hbmQgVGhlIGNvbW1hbmQgc3RyaW5nIHdoaWNoIHRvIGNoZWNrIChlZy4gXCJib2xkXCIsIFwiaXRhbGljXCIsIFwiaW5zZXJ0VW5vcmRlcmVkTGlzdFwiKVxuICAgKiBAZXhhbXBsZVxuICAgKiAgICBjb21tYW5kcy5zdXBwb3J0cyhcImNyZWF0ZUxpbmtcIik7XG4gICAqL1xuICBzdXBwb3J0OiBmdW5jdGlvbihjb21tYW5kKSB7XG4gICAgcmV0dXJuIHd5c2lodG1sNS5icm93c2VyLnN1cHBvcnRzQ29tbWFuZCh0aGlzLmRvYywgY29tbWFuZCk7XG4gIH0sXG4gIFxuICAvKipcbiAgICogQ2hlY2sgd2hldGhlciB0aGUgYnJvd3NlciBzdXBwb3J0cyB0aGUgZ2l2ZW4gY29tbWFuZFxuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gY29tbWFuZCBUaGUgY29tbWFuZCBzdHJpbmcgd2hpY2ggdG8gZXhlY3V0ZSAoZWcuIFwiYm9sZFwiLCBcIml0YWxpY1wiLCBcImluc2VydFVub3JkZXJlZExpc3RcIilcbiAgICogQHBhcmFtIHtTdHJpbmd9IFt2YWx1ZV0gVGhlIGNvbW1hbmQgdmFsdWUgcGFyYW1ldGVyLCBuZWVkZWQgZm9yIHNvbWUgY29tbWFuZHMgKFwiY3JlYXRlTGlua1wiLCBcImluc2VydEltYWdlXCIsIC4uLiksIG9wdGlvbmFsIGZvciBjb21tYW5kcyB0aGF0IGRvbid0IHJlcXVpcmUgb25lIChcImJvbGRcIiwgXCJ1bmRlcmxpbmVcIiwgLi4uKVxuICAgKiBAZXhhbXBsZVxuICAgKiAgICBjb21tYW5kcy5leGVjKFwiaW5zZXJ0SW1hZ2VcIiwgXCJodHRwOi8vYTEudHdpbWcuY29tL3Byb2ZpbGVfaW1hZ2VzLzExMzg2ODY1NS9zY2hyZWlfdHdpdHRlcl9yZWFzb25hYmx5X3NtYWxsLmpwZ1wiKTtcbiAgICovXG4gIGV4ZWM6IGZ1bmN0aW9uKGNvbW1hbmQsIHZhbHVlKSB7XG4gICAgdmFyIG9iaiAgICAgPSB3eXNpaHRtbDUuY29tbWFuZHNbY29tbWFuZF0sXG4gICAgICAgIGFyZ3MgICAgPSB3eXNpaHRtbDUubGFuZy5hcnJheShhcmd1bWVudHMpLmdldCgpLFxuICAgICAgICBtZXRob2QgID0gb2JqICYmIG9iai5leGVjLFxuICAgICAgICByZXN1bHQgID0gbnVsbDtcbiAgICBcbiAgICB0aGlzLmVkaXRvci5maXJlKFwiYmVmb3JlY29tbWFuZDpjb21wb3NlclwiKTtcbiAgICBcbiAgICBpZiAobWV0aG9kKSB7XG4gICAgICBhcmdzLnVuc2hpZnQodGhpcy5jb21wb3Nlcik7XG4gICAgICByZXN1bHQgPSBtZXRob2QuYXBwbHkob2JqLCBhcmdzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gdHJ5L2NhdGNoIGZvciBidWdneSBmaXJlZm94XG4gICAgICAgIHJlc3VsdCA9IHRoaXMuZG9jLmV4ZWNDb21tYW5kKGNvbW1hbmQsIGZhbHNlLCB2YWx1ZSk7XG4gICAgICB9IGNhdGNoKGUpIHt9XG4gICAgfVxuICAgIFxuICAgIHRoaXMuZWRpdG9yLmZpcmUoXCJhZnRlcmNvbW1hbmQ6Y29tcG9zZXJcIik7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSxcbiAgXG4gIC8qKlxuICAgKiBDaGVjayB3aGV0aGVyIHRoZSBjdXJyZW50IGNvbW1hbmQgaXMgYWN0aXZlXG4gICAqIElmIHRoZSBjYXJldCBpcyB3aXRoaW4gYSBib2xkIHRleHQsIHRoZW4gY2FsbGluZyB0aGlzIHdpdGggY29tbWFuZCBcImJvbGRcIiBzaG91bGQgcmV0dXJuIHRydWVcbiAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IGNvbW1hbmQgVGhlIGNvbW1hbmQgc3RyaW5nIHdoaWNoIHRvIGNoZWNrIChlZy4gXCJib2xkXCIsIFwiaXRhbGljXCIsIFwiaW5zZXJ0VW5vcmRlcmVkTGlzdFwiKVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW2NvbW1hbmRWYWx1ZV0gVGhlIGNvbW1hbmQgdmFsdWUgcGFyYW1ldGVyIChlZy4gZm9yIFwiaW5zZXJ0SW1hZ2VcIiB0aGUgaW1hZ2Ugc3JjKVxuICAgKiBAcmV0dXJuIHtCb29sZWFufSBXaGV0aGVyIHRoZSBjb21tYW5kIGlzIGFjdGl2ZVxuICAgKiBAZXhhbXBsZVxuICAgKiAgICB2YXIgaXNDdXJyZW50U2VsZWN0aW9uQm9sZCA9IGNvbW1hbmRzLnN0YXRlKFwiYm9sZFwiKTtcbiAgICovXG4gIHN0YXRlOiBmdW5jdGlvbihjb21tYW5kLCBjb21tYW5kVmFsdWUpIHtcbiAgICB2YXIgb2JqICAgICA9IHd5c2lodG1sNS5jb21tYW5kc1tjb21tYW5kXSxcbiAgICAgICAgYXJncyAgICA9IHd5c2lodG1sNS5sYW5nLmFycmF5KGFyZ3VtZW50cykuZ2V0KCksXG4gICAgICAgIG1ldGhvZCAgPSBvYmogJiYgb2JqLnN0YXRlO1xuICAgIGlmIChtZXRob2QpIHtcbiAgICAgIGFyZ3MudW5zaGlmdCh0aGlzLmNvbXBvc2VyKTtcbiAgICAgIHJldHVybiBtZXRob2QuYXBwbHkob2JqLCBhcmdzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gdHJ5L2NhdGNoIGZvciBidWdneSBmaXJlZm94XG4gICAgICAgIHJldHVybiB0aGlzLmRvYy5xdWVyeUNvbW1hbmRTdGF0ZShjb21tYW5kKTtcbiAgICAgIH0gY2F0Y2goZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfVxuICB9XG59KTtcbihmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIFJFR19FWFAgPSAvKGFsaWduLShsZWZ0fGNlbnRlcnxyaWdodCl8anVzdGlmeSkvZztcblxuICB3eXNpaHRtbDUuY29tbWFuZHMuYWxpZ25tZW50ID0ge1xuICAgIGV4ZWM6IGZ1bmN0aW9uKGNvbXBvc2VyLCBjb21tYW5kLCBhbGlnbm1lbnQpIHtcbiAgICAgIGlmIChhbGlnbm1lbnQgPT09IFwianVzdGlmeVwiKSB7XG4gICAgICAgIHJldHVybiB3eXNpaHRtbDUuY29tbWFuZHMuZm9ybWF0SW5saW5lLmV4ZWMoY29tcG9zZXIsIGNvbW1hbmQsIFwiZGl2XCIsXG4gICAgICAgICAgXCJqdXN0aWZ5XCIsIFJFR19FWFApO1xuICAgICAgfVxuICAgICAgZWxzZSAge1xuICAgICAgICByZXR1cm4gd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdElubGluZS5leGVjKGNvbXBvc2VyLCBjb21tYW5kLCBcImRpdlwiLFxuICAgICAgICAgIFwiYWxpZ24tXCIgKyBhbGlnbm1lbnQsIFJFR19FWFApO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBzdGF0ZTogZnVuY3Rpb24oY29tcG9zZXIsIGNvbW1hbmQsIGFsaWdubWVudCkge1xuICAgICAgaWYgKGFsaWdubWVudCA9PT0gXCJqdXN0aWZ5XCIpIHtcbiAgICAgICAgcmV0dXJuIHd5c2lodG1sNS5jb21tYW5kcy5mb3JtYXRJbmxpbmUuc3RhdGUoY29tcG9zZXIsIGNvbW1hbmQsIFwiZGl2XCIsXG4gICAgICAgICAgXCJqdXN0aWZ5XCIsIFJFR19FWFApO1xuICAgICAgfVxuICAgICAgZWxzZSAge1xuICAgICAgICByZXR1cm4gd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdElubGluZS5zdGF0ZShjb21wb3NlciwgY29tbWFuZCwgXCJkaXZcIixcbiAgICAgICAgICBcImFsaWduLVwiICsgYWxpZ25tZW50LCBSRUdfRVhQKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG59KSh3eXNpaHRtbDUpOyhmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIFJFR19FWFAgPSAvd3lzaXd5Zy1iYWNrZ3JvdW5kLWNvbG9yLVswLTlcXC1dKy9nO1xuXG4gIHd5c2lodG1sNS5jb21tYW5kcy5iYWNrZ3JvdW5kQ29sb3IgPSB7XG4gICAgZXhlYzogZnVuY3Rpb24oY29tcG9zZXIsIGNvbW1hbmQsIHJnYmEsIGF0dHJzKSB7XG4gICAgICB2YXIgY2xhc3NOYW1lID0gXCJ3eXNpd3lnLWJhY2tncm91bmQtY29sb3ItXCIgKyByZ2JhLnIgKyBcIi1cIiArIHJnYmEuZyArIFwiLVwiICtcbiAgICAgICAgcmdiYS5iICsgXCItXCIgKyByZ2JhLmEudG9TdHJpbmcoKS5yZXBsYWNlKFwiLlwiLCBcIi1cIik7XG4gICAgICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gICAgICB2YXIgYm9keSA9IGVkaXRvci5jb21wb3Nlci5kb2MuYm9keTtcbiAgICAgIHZhciBjbGFzc2VzID0gYm9keS5jbGFzc0xpc3Q7XG5cbiAgICAgIC8vIEFkZCBhIENTUyBjbGFzcyBmb3IgdGhlIHNlbGVjdGVkIGZvbnQuIFVuZm9ydHVuYXRlbHksICFpbXBvcnRhbnQgaXNcbiAgICAgIC8vIG5lZWRlZCB0byBvdmVycmlkZSB0aGUgaW5saW5lIHN0eWxlLlxuICAgICAgc3R5bGUudHlwZSA9IFwidGV4dC9jc3NcIjtcbiAgICAgIHN0eWxlLmlubmVySFRNTCA9IFwiLlwiICsgY2xhc3NOYW1lICsgXCIgeyBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKFwiICsgcmdiYS5yXG4gICAgICAgICsgXCIsIFwiICsgcmdiYS5nICsgXCIsIFwiICsgcmdiYS5iICsgXCIsIFwiICsgcmdiYS5hICsgXCIpICFpbXBvcnRhbnQ7IH1cIjtcbiAgICAgIGNvbXBvc2VyLmlmcmFtZS5jb250ZW50RG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdXG4gICAgICAgIC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cbiAgICAgIC8vIFJlbW92ZSBhbnkgb2xkIGJhY2tncm91bmQgY2xhc3MgYmVmb3JlIGFkZGluZyB0aGUgbmV3IGNsYXNzLlxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjbGFzc2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChjbGFzc2VzW2ldLm1hdGNoKFJFR19FWFApKSB7XG4gICAgICAgICAgYm9keS5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzZXNbaV0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGZvciAoaSA9IDA7IGkgPCBhdHRycy5sZW5ndGg7IGkrKykge1xuICAgICAgICBib2R5LnNldEF0dHJpYnV0ZShhdHRyc1tpXS5uYW1lLCBhdHRyc1tpXS52YWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIGJvZHkuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xuICAgIH0sXG5cbiAgICBzdGF0ZTogZnVuY3Rpb24oY29tcG9zZXIsIGNvbW1hbmQsIHJnYmEsIGF0dHJzKSB7XG4gICAgfVxuICB9O1xufSkod3lzaWh0bWw1KTtcbnd5c2lodG1sNS5jb21tYW5kcy5ib2xkID0ge1xuICBleGVjOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCkge1xuICAgIHJldHVybiB3eXNpaHRtbDUuY29tbWFuZHMuZm9ybWF0SW5saW5lLmV4ZWMoY29tcG9zZXIsIGNvbW1hbmQsIFwiYlwiKTtcbiAgfSxcblxuICBzdGF0ZTogZnVuY3Rpb24oY29tcG9zZXIsIGNvbW1hbmQpIHtcbiAgICAvLyBlbGVtZW50Lm93bmVyRG9jdW1lbnQucXVlcnlDb21tYW5kU3RhdGUoXCJib2xkXCIpIHJlc3VsdHM6XG4gICAgLy8gZmlyZWZveDogb25seSA8Yj5cbiAgICAvLyBjaHJvbWU6ICA8Yj4sIDxzdHJvbmc+LCA8aDE+LCA8aDI+LCAuLi5cbiAgICAvLyBpZTogICAgICA8Yj4sIDxzdHJvbmc+XG4gICAgLy8gb3BlcmE6ICAgPGI+LCA8c3Ryb25nPlxuICAgIHJldHVybiB3eXNpaHRtbDUuY29tbWFuZHMuZm9ybWF0SW5saW5lLnN0YXRlKGNvbXBvc2VyLCBjb21tYW5kLCBcImJcIik7XG4gIH1cbn07XG5cbihmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIFJFR19FWFAgPSAvd3lzaXd5Zy1iYWNrZ3JvdW5kLWNvbG9yLVswLTlcXC1dKy9nO1xuXG4gIHd5c2lodG1sNS5jb21tYW5kcy5jbGVhciA9IHtcbiAgICBleGVjOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCkge1xuICAgICAgdmFyIGJvZHkgPSBjb21wb3Nlci5kb2MuYm9keTtcbiAgICAgIHZhciBjbGFzc2VzID0gYm9keS5jbGFzc0xpc3Q7XG5cbiAgICAgIGJvZHkuaW5uZXJIVE1MID0gXCJcIjtcblxuICAgICAgLy8gUmVtb3ZlIGV4aXN0aW5nIGJhY2tncm91bmQgY2xhc3MuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNsYXNzZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGNsYXNzZXNbaV0ubWF0Y2goUkVHX0VYUCkpIHtcbiAgICAgICAgICBib2R5LmNsYXNzTGlzdC5yZW1vdmUoY2xhc3Nlc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIHN0YXRlOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCkge1xuICAgIH1cbiAgfTtcbn0pKHd5c2lodG1sNSk7XG4oZnVuY3Rpb24od3lzaWh0bWw1KSB7XG4gIHZhciB1bmRlZixcbiAgICAgIE5PREVfTkFNRSA9IFwiQVwiLFxuICAgICAgZG9tICAgICAgID0gd3lzaWh0bWw1LmRvbTtcbiAgXG4gIGZ1bmN0aW9uIF9yZW1vdmVGb3JtYXQoY29tcG9zZXIsIGFuY2hvcnMpIHtcbiAgICB2YXIgbGVuZ3RoICA9IGFuY2hvcnMubGVuZ3RoLFxuICAgICAgICBpICAgICAgID0gMCxcbiAgICAgICAgYW5jaG9yLFxuICAgICAgICBjb2RlRWxlbWVudCxcbiAgICAgICAgdGV4dENvbnRlbnQ7XG4gICAgZm9yICg7IGk8bGVuZ3RoOyBpKyspIHtcbiAgICAgIGFuY2hvciAgICAgID0gYW5jaG9yc1tpXTtcbiAgICAgIGNvZGVFbGVtZW50ID0gZG9tLmdldFBhcmVudEVsZW1lbnQoYW5jaG9yLCB7IG5vZGVOYW1lOiBcImNvZGVcIiB9KTtcbiAgICAgIHRleHRDb250ZW50ID0gZG9tLmdldFRleHRDb250ZW50KGFuY2hvcik7XG5cbiAgICAgIC8vIGlmIDxhPiBjb250YWlucyB1cmwtbGlrZSB0ZXh0IGNvbnRlbnQsIHJlbmFtZSBpdCB0byA8Y29kZT4gdG8gcHJldmVudCByZS1hdXRvbGlua2luZ1xuICAgICAgLy8gZWxzZSByZXBsYWNlIDxhPiB3aXRoIGl0cyBjaGlsZE5vZGVzXG4gICAgICBpZiAodGV4dENvbnRlbnQubWF0Y2goZG9tLmF1dG9MaW5rLlVSTF9SRUdfRVhQKSAmJiAhY29kZUVsZW1lbnQpIHtcbiAgICAgICAgLy8gPGNvZGU+IGVsZW1lbnQgaXMgdXNlZCB0byBwcmV2ZW50IGxhdGVyIGF1dG8tbGlua2luZyBvZiB0aGUgY29udGVudFxuICAgICAgICBjb2RlRWxlbWVudCA9IGRvbS5yZW5hbWVFbGVtZW50KGFuY2hvciwgXCJjb2RlXCIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZG9tLnJlcGxhY2VXaXRoQ2hpbGROb2RlcyhhbmNob3IpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIF9mb3JtYXQoY29tcG9zZXIsIGF0dHJpYnV0ZXMpIHtcbiAgICB2YXIgZG9jICAgICAgICAgICAgID0gY29tcG9zZXIuZG9jLFxuICAgICAgICB0ZW1wQ2xhc3MgICAgICAgPSBcIl93eXNpaHRtbDUtdGVtcC1cIiArICgrbmV3IERhdGUoKSksXG4gICAgICAgIHRlbXBDbGFzc1JlZ0V4cCA9IC9ub24tbWF0Y2hpbmctY2xhc3MvZyxcbiAgICAgICAgaSAgICAgICAgICAgICAgID0gMCxcbiAgICAgICAgbGVuZ3RoLFxuICAgICAgICBhbmNob3JzLFxuICAgICAgICBhbmNob3IsXG4gICAgICAgIGhhc0VsZW1lbnRDaGlsZCxcbiAgICAgICAgaXNFbXB0eSxcbiAgICAgICAgZWxlbWVudFRvU2V0Q2FyZXRBZnRlcixcbiAgICAgICAgdGV4dENvbnRlbnQsXG4gICAgICAgIHdoaXRlU3BhY2UsXG4gICAgICAgIGo7XG4gICAgd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdElubGluZS5leGVjKGNvbXBvc2VyLCB1bmRlZiwgTk9ERV9OQU1FLCB0ZW1wQ2xhc3MsIHRlbXBDbGFzc1JlZ0V4cCk7XG4gICAgYW5jaG9ycyA9IGRvYy5xdWVyeVNlbGVjdG9yQWxsKE5PREVfTkFNRSArIFwiLlwiICsgdGVtcENsYXNzKTtcbiAgICBsZW5ndGggID0gYW5jaG9ycy5sZW5ndGg7XG4gICAgZm9yICg7IGk8bGVuZ3RoOyBpKyspIHtcbiAgICAgIGFuY2hvciA9IGFuY2hvcnNbaV07XG4gICAgICBhbmNob3IucmVtb3ZlQXR0cmlidXRlKFwiY2xhc3NcIik7XG4gICAgICBmb3IgKGogaW4gYXR0cmlidXRlcykge1xuICAgICAgICBhbmNob3Iuc2V0QXR0cmlidXRlKGosIGF0dHJpYnV0ZXNbal0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGVsZW1lbnRUb1NldENhcmV0QWZ0ZXIgPSBhbmNob3I7XG4gICAgaWYgKGxlbmd0aCA9PT0gMSkge1xuICAgICAgdGV4dENvbnRlbnQgPSBkb20uZ2V0VGV4dENvbnRlbnQoYW5jaG9yKTtcbiAgICAgIGhhc0VsZW1lbnRDaGlsZCA9ICEhYW5jaG9yLnF1ZXJ5U2VsZWN0b3IoXCIqXCIpO1xuICAgICAgaXNFbXB0eSA9IHRleHRDb250ZW50ID09PSBcIlwiIHx8IHRleHRDb250ZW50ID09PSB3eXNpaHRtbDUuSU5WSVNJQkxFX1NQQUNFO1xuICAgICAgaWYgKCFoYXNFbGVtZW50Q2hpbGQgJiYgaXNFbXB0eSkge1xuICAgICAgICBkb20uc2V0VGV4dENvbnRlbnQoYW5jaG9yLCBhdHRyaWJ1dGVzLnRleHQgfHwgYW5jaG9yLmhyZWYpO1xuICAgICAgICB3aGl0ZVNwYWNlID0gZG9jLmNyZWF0ZVRleHROb2RlKFwiIFwiKTtcbiAgICAgICAgY29tcG9zZXIuc2VsZWN0aW9uLnNldEFmdGVyKGFuY2hvcik7XG4gICAgICAgIGRvbS5pbnNlcnQod2hpdGVTcGFjZSkuYWZ0ZXIoYW5jaG9yKTtcbiAgICAgICAgZWxlbWVudFRvU2V0Q2FyZXRBZnRlciA9IHdoaXRlU3BhY2U7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbXBvc2VyLnNlbGVjdGlvbi5zZXRBZnRlcihlbGVtZW50VG9TZXRDYXJldEFmdGVyKTtcbiAgfVxuICBcbiAgd3lzaWh0bWw1LmNvbW1hbmRzLmNyZWF0ZUxpbmsgPSB7XG4gICAgLyoqXG4gICAgICogVE9ETzogVXNlIEhUTUxBcHBsaWVyIG9yIGZvcm1hdElubGluZSBoZXJlXG4gICAgICpcbiAgICAgKiBUdXJucyBzZWxlY3Rpb24gaW50byBhIGxpbmtcbiAgICAgKiBJZiBzZWxlY3Rpb24gaXMgYWxyZWFkeSBhIGxpbmssIGl0IHJlbW92ZXMgdGhlIGxpbmsgYW5kIHdyYXBzIGl0IHdpdGggYSA8Y29kZT4gZWxlbWVudFxuICAgICAqIFRoZSA8Y29kZT4gZWxlbWVudCBpcyBuZWVkZWQgdG8gYXZvaWQgYXV0byBsaW5raW5nXG4gICAgICogXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiAgICAvLyBlaXRoZXIgLi4uXG4gICAgICogICAgd3lzaWh0bWw1LmNvbW1hbmRzLmNyZWF0ZUxpbmsuZXhlYyhjb21wb3NlciwgXCJjcmVhdGVMaW5rXCIsIFwiaHR0cDovL3d3dy5nb29nbGUuZGVcIik7XG4gICAgICogICAgLy8gLi4uIG9yIC4uLlxuICAgICAqICAgIHd5c2lodG1sNS5jb21tYW5kcy5jcmVhdGVMaW5rLmV4ZWMoY29tcG9zZXIsIFwiY3JlYXRlTGlua1wiLCB7IGhyZWY6IFwiaHR0cDovL3d3dy5nb29nbGUuZGVcIiwgdGFyZ2V0OiBcIl9ibGFua1wiIH0pO1xuICAgICAqL1xuICAgIGV4ZWM6IGZ1bmN0aW9uKGNvbXBvc2VyLCBjb21tYW5kLCB2YWx1ZSkge1xuICAgICAgdmFyIGFuY2hvcnMgPSB0aGlzLnN0YXRlKGNvbXBvc2VyLCBjb21tYW5kKTtcbiAgICAgIGlmIChhbmNob3JzKSB7XG4gICAgICAgIC8vIFNlbGVjdGlvbiBjb250YWlucyBsaW5rc1xuICAgICAgICBjb21wb3Nlci5zZWxlY3Rpb24uZXhlY3V0ZUFuZFJlc3RvcmUoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgX3JlbW92ZUZvcm1hdChjb21wb3NlciwgYW5jaG9ycyk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gQ3JlYXRlIGxpbmtzXG4gICAgICAgIHZhbHVlID0gdHlwZW9mKHZhbHVlKSA9PT0gXCJvYmplY3RcIiA/IHZhbHVlIDogeyBocmVmOiB2YWx1ZSB9O1xuICAgICAgICBfZm9ybWF0KGNvbXBvc2VyLCB2YWx1ZSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHN0YXRlOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCkge1xuICAgICAgcmV0dXJuIHd5c2lodG1sNS5jb21tYW5kcy5mb3JtYXRJbmxpbmUuc3RhdGUoY29tcG9zZXIsIGNvbW1hbmQsIFwiQVwiKTtcbiAgICB9XG4gIH07XG59KSh3eXNpaHRtbDUpOyhmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIFJFR19FWFAgPSAvd3lzaXd5Zy1mb250LWZhbWlseS1bYS16XFwtXSsvZztcblxuICB3eXNpaHRtbDUuY29tbWFuZHMuY3VzdG9tRm9udCA9IHtcbiAgICBleGVjOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgZm9udCwgYXR0cnMpIHtcbiAgICAgIHZhciBjbGFzc05hbWUgPSBcInd5c2l3eWctZm9udC1mYW1pbHktXCIgKyBmb250LnJlcGxhY2UoLyAvZywgXCItXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpO1xuICAgICAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG4gICAgICAvLyBBZGQgQ1NTIGZvciB0aGUgc2VsZWN0ZWQgZm9udCBwbHVzIGEgZmFsbGJhY2suXG4gICAgICBzdHlsZS50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuICAgICAgc3R5bGUuaW5uZXJIVE1MID0gXCIuXCIgKyBjbGFzc05hbWUgK1wiIHsgZm9udC1mYW1pbHk6ICdcIiArIGZvbnQgK1xuICAgICAgICBcIicsIHNlcmlmOyB9XCI7XG4gICAgICBjb21wb3Nlci5pZnJhbWUuY29udGVudERvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXVxuICAgICAgICAuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXG4gICAgICByZXR1cm4gd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdElubGluZS5leGVjKGNvbXBvc2VyLCBjb21tYW5kLCBcInNwYW5cIixcbiAgICAgICAgY2xhc3NOYW1lLCBSRUdfRVhQLCBhdHRycyk7XG4gICAgfSxcblxuICAgIHN0YXRlOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgZm9udCwgYXR0cnMpIHtcbiAgICAgIHZhciBjbGFzc05hbWUgPSBcInd5c2l3eWctZm9udC1mYW1pbHktXCIgKyBmb250LnJlcGxhY2UoLyAvZywgXCItXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICByZXR1cm4gd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdElubGluZS5zdGF0ZShjb21wb3NlciwgY29tbWFuZCwgXCJzcGFuXCIsXG4gICAgICAgIGNsYXNzTmFtZSwgUkVHX0VYUCwgYXR0cnMpO1xuICAgIH1cbiAgfTtcbn0pKHd5c2lodG1sNSk7LyoqXG4gKiBkb2N1bWVudC5leGVjQ29tbWFuZChcImZvbnRTaXplXCIpIHdpbGwgY3JlYXRlIGVpdGhlciBpbmxpbmUgc3R5bGVzIChmaXJlZm94LCBjaHJvbWUpIG9yIHVzZSBmb250IHRhZ3NcbiAqIHdoaWNoIHdlIGRvbid0IHdhbnRcbiAqIEluc3RlYWQgd2Ugc2V0IGEgY3NzIGNsYXNzXG4gKi9cbihmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIFJFR19FWFAgPSAvd3lzaXd5Zy1mb250LXNpemUtWzAtOWEtelxcLV0rL2c7XG4gIFxuICB3eXNpaHRtbDUuY29tbWFuZHMuZm9udFNpemUgPSB7XG4gICAgZXhlYzogZnVuY3Rpb24oY29tcG9zZXIsIGNvbW1hbmQsIHNpemUpIHtcbiAgICAgIHJldHVybiB3eXNpaHRtbDUuY29tbWFuZHMuZm9ybWF0SW5saW5lLmV4ZWMoY29tcG9zZXIsIGNvbW1hbmQsIFwic3BhblwiLCBcInd5c2l3eWctZm9udC1zaXplLVwiICsgc2l6ZSwgUkVHX0VYUCk7XG4gICAgfSxcblxuICAgIHN0YXRlOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgc2l6ZSkge1xuICAgICAgcmV0dXJuIHd5c2lodG1sNS5jb21tYW5kcy5mb3JtYXRJbmxpbmUuc3RhdGUoY29tcG9zZXIsIGNvbW1hbmQsIFwic3BhblwiLCBcInd5c2l3eWctZm9udC1zaXplLVwiICsgc2l6ZSwgUkVHX0VYUCk7XG4gICAgfVxuICB9O1xufSkod3lzaWh0bWw1KTtcbi8qKlxuICogZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJmb3JlQ29sb3JcIikgd2lsbCBjcmVhdGUgZWl0aGVyIGlubGluZSBzdHlsZXMgKGZpcmVmb3gsIGNocm9tZSkgb3IgdXNlIGZvbnQgdGFnc1xuICogd2hpY2ggd2UgZG9uJ3Qgd2FudFxuICogSW5zdGVhZCB3ZSBzZXQgYSBjc3MgY2xhc3NcbiAqL1xuKGZ1bmN0aW9uKHd5c2lodG1sNSkge1xuICB2YXIgUkVHX0VYUCA9IC93eXNpd3lnLWNvbG9yLVswLTlhLXpdKy9nO1xuICBcbiAgd3lzaWh0bWw1LmNvbW1hbmRzLmZvcmVDb2xvciA9IHtcbiAgICBleGVjOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgY29sb3IpIHtcbiAgICAgIHJldHVybiB3eXNpaHRtbDUuY29tbWFuZHMuZm9ybWF0SW5saW5lLmV4ZWMoY29tcG9zZXIsIGNvbW1hbmQsIFwic3BhblwiLCBcInd5c2l3eWctY29sb3ItXCIgKyBjb2xvciwgUkVHX0VYUCk7XG4gICAgfSxcblxuICAgIHN0YXRlOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgY29sb3IpIHtcbiAgICAgIHJldHVybiB3eXNpaHRtbDUuY29tbWFuZHMuZm9ybWF0SW5saW5lLnN0YXRlKGNvbXBvc2VyLCBjb21tYW5kLCBcInNwYW5cIiwgXCJ3eXNpd3lnLWNvbG9yLVwiICsgY29sb3IsIFJFR19FWFApO1xuICAgIH1cbiAgfTtcbn0pKHd5c2lodG1sNSk7KGZ1bmN0aW9uKHd5c2lodG1sNSkge1xuICB2YXIgZG9tICAgICAgICAgICAgICAgICAgICAgPSB3eXNpaHRtbDUuZG9tLFxuICAgICAgLy8gRm9sbG93aW5nIGVsZW1lbnRzIGFyZSBncm91cGVkXG4gICAgICAvLyB3aGVuIHRoZSBjYXJldCBpcyB3aXRoaW4gYSBIMSBhbmQgdGhlIEg0IGlzIGludm9rZWQsIHRoZSBIMSBzaG91bGQgdHVybiBpbnRvIEg0XG4gICAgICAvLyBpbnN0ZWFkIG9mIGNyZWF0aW5nIGEgSDQgd2l0aGluIGEgSDEgd2hpY2ggd291bGQgcmVzdWx0IGluIHNlbWFudGljYWxseSBpbnZhbGlkIGh0bWxcbiAgICAgIEJMT0NLX0VMRU1FTlRTX0dST1VQICAgID0gW1wiSDFcIiwgXCJIMlwiLCBcIkgzXCIsIFwiSDRcIiwgXCJINVwiLCBcIkg2XCIsIFwiUFwiLCBcIkJMT0NLUVVPVEVcIiwgXCJESVZcIl07XG4gIFxuICAvKipcbiAgICogUmVtb3ZlIHNpbWlsaWFyIGNsYXNzZXMgKGJhc2VkIG9uIGNsYXNzUmVnRXhwKVxuICAgKiBhbmQgYWRkIHRoZSBkZXNpcmVkIGNsYXNzIG5hbWVcbiAgICovXG4gIGZ1bmN0aW9uIF9hZGRDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUsIGNsYXNzUmVnRXhwKSB7XG4gICAgaWYgKGVsZW1lbnQuY2xhc3NOYW1lKSB7XG4gICAgICBfcmVtb3ZlQ2xhc3MoZWxlbWVudCwgY2xhc3NSZWdFeHApO1xuICAgICAgZWxlbWVudC5jbGFzc05hbWUgKz0gXCIgXCIgKyBjbGFzc05hbWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVsZW1lbnQuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIF9yZW1vdmVDbGFzcyhlbGVtZW50LCBjbGFzc1JlZ0V4cCkge1xuICAgIGVsZW1lbnQuY2xhc3NOYW1lID0gZWxlbWVudC5jbGFzc05hbWUucmVwbGFjZShjbGFzc1JlZ0V4cCwgXCJcIik7XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgd2hldGhlciBnaXZlbiBub2RlIGlzIGEgdGV4dCBub2RlIGFuZCB3aGV0aGVyIGl0J3MgZW1wdHlcbiAgICovXG4gIGZ1bmN0aW9uIF9pc0JsYW5rVGV4dE5vZGUobm9kZSkge1xuICAgIHJldHVybiBub2RlLm5vZGVUeXBlID09PSB3eXNpaHRtbDUuVEVYVF9OT0RFICYmICF3eXNpaHRtbDUubGFuZy5zdHJpbmcobm9kZS5kYXRhKS50cmltKCk7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBwcmV2aW91cyBzaWJsaW5nIG5vZGUgdGhhdCBpcyBub3QgYSBibGFuayB0ZXh0IG5vZGVcbiAgICovXG4gIGZ1bmN0aW9uIF9nZXRQcmV2aW91c1NpYmxpbmdUaGF0SXNOb3RCbGFuayhub2RlKSB7XG4gICAgdmFyIHByZXZpb3VzU2libGluZyA9IG5vZGUucHJldmlvdXNTaWJsaW5nO1xuICAgIHdoaWxlIChwcmV2aW91c1NpYmxpbmcgJiYgX2lzQmxhbmtUZXh0Tm9kZShwcmV2aW91c1NpYmxpbmcpKSB7XG4gICAgICBwcmV2aW91c1NpYmxpbmcgPSBwcmV2aW91c1NpYmxpbmcucHJldmlvdXNTaWJsaW5nO1xuICAgIH1cbiAgICByZXR1cm4gcHJldmlvdXNTaWJsaW5nO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgbmV4dCBzaWJsaW5nIG5vZGUgdGhhdCBpcyBub3QgYSBibGFuayB0ZXh0IG5vZGVcbiAgICovXG4gIGZ1bmN0aW9uIF9nZXROZXh0U2libGluZ1RoYXRJc05vdEJsYW5rKG5vZGUpIHtcbiAgICB2YXIgbmV4dFNpYmxpbmcgPSBub2RlLm5leHRTaWJsaW5nO1xuICAgIHdoaWxlIChuZXh0U2libGluZyAmJiBfaXNCbGFua1RleHROb2RlKG5leHRTaWJsaW5nKSkge1xuICAgICAgbmV4dFNpYmxpbmcgPSBuZXh0U2libGluZy5uZXh0U2libGluZztcbiAgICB9XG4gICAgcmV0dXJuIG5leHRTaWJsaW5nO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHMgbGluZSBicmVha3MgYmVmb3JlIGFuZCBhZnRlciB0aGUgZ2l2ZW4gbm9kZSBpZiB0aGUgcHJldmlvdXMgYW5kIG5leHQgc2libGluZ3NcbiAgICogYXJlbid0IGFscmVhZHkgY2F1c2luZyBhIHZpc3VhbCBsaW5lIGJyZWFrIChibG9jayBlbGVtZW50IG9yIDxicj4pXG4gICAqL1xuICBmdW5jdGlvbiBfYWRkTGluZUJyZWFrQmVmb3JlQW5kQWZ0ZXIobm9kZSkge1xuICAgIHZhciBkb2MgICAgICAgICAgICAgPSBub2RlLm93bmVyRG9jdW1lbnQsXG4gICAgICAgIG5leHRTaWJsaW5nICAgICA9IF9nZXROZXh0U2libGluZ1RoYXRJc05vdEJsYW5rKG5vZGUpLFxuICAgICAgICBwcmV2aW91c1NpYmxpbmcgPSBfZ2V0UHJldmlvdXNTaWJsaW5nVGhhdElzTm90Qmxhbmsobm9kZSk7XG5cbiAgICBpZiAobmV4dFNpYmxpbmcgJiYgIV9pc0xpbmVCcmVha09yQmxvY2tFbGVtZW50KG5leHRTaWJsaW5nKSkge1xuICAgICAgbm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShkb2MuY3JlYXRlRWxlbWVudChcImJyXCIpLCBuZXh0U2libGluZyk7XG4gICAgfVxuICAgIGlmIChwcmV2aW91c1NpYmxpbmcgJiYgIV9pc0xpbmVCcmVha09yQmxvY2tFbGVtZW50KHByZXZpb3VzU2libGluZykpIHtcbiAgICAgIG5vZGUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZG9jLmNyZWF0ZUVsZW1lbnQoXCJiclwiKSwgbm9kZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgbGluZSBicmVha3MgYmVmb3JlIGFuZCBhZnRlciB0aGUgZ2l2ZW4gbm9kZVxuICAgKi9cbiAgZnVuY3Rpb24gX3JlbW92ZUxpbmVCcmVha0JlZm9yZUFuZEFmdGVyKG5vZGUpIHtcbiAgICB2YXIgbmV4dFNpYmxpbmcgICAgID0gX2dldE5leHRTaWJsaW5nVGhhdElzTm90Qmxhbmsobm9kZSksXG4gICAgICAgIHByZXZpb3VzU2libGluZyA9IF9nZXRQcmV2aW91c1NpYmxpbmdUaGF0SXNOb3RCbGFuayhub2RlKTtcblxuICAgIGlmIChuZXh0U2libGluZyAmJiBfaXNMaW5lQnJlYWsobmV4dFNpYmxpbmcpKSB7XG4gICAgICBuZXh0U2libGluZy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5leHRTaWJsaW5nKTtcbiAgICB9XG4gICAgaWYgKHByZXZpb3VzU2libGluZyAmJiBfaXNMaW5lQnJlYWsocHJldmlvdXNTaWJsaW5nKSkge1xuICAgICAgcHJldmlvdXNTaWJsaW5nLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocHJldmlvdXNTaWJsaW5nKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBfcmVtb3ZlTGFzdENoaWxkSWZMaW5lQnJlYWsobm9kZSkge1xuICAgIHZhciBsYXN0Q2hpbGQgPSBub2RlLmxhc3RDaGlsZDtcbiAgICBpZiAobGFzdENoaWxkICYmIF9pc0xpbmVCcmVhayhsYXN0Q2hpbGQpKSB7XG4gICAgICBsYXN0Q2hpbGQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChsYXN0Q2hpbGQpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIF9pc0xpbmVCcmVhayhub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUubm9kZU5hbWUgPT09IFwiQlJcIjtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVja3Mgd2hldGhlciB0aGUgZWxtZW50IGNhdXNlcyBhIHZpc3VhbCBsaW5lIGJyZWFrXG4gICAqICg8YnI+IG9yIGJsb2NrIGVsZW1lbnRzKVxuICAgKi9cbiAgZnVuY3Rpb24gX2lzTGluZUJyZWFrT3JCbG9ja0VsZW1lbnQoZWxlbWVudCkge1xuICAgIGlmIChfaXNMaW5lQnJlYWsoZWxlbWVudCkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGlmIChkb20uZ2V0U3R5bGUoXCJkaXNwbGF5XCIpLmZyb20oZWxlbWVudCkgPT09IFwiYmxvY2tcIikge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqIEV4ZWN1dGUgbmF0aXZlIHF1ZXJ5IGNvbW1hbmRcbiAgICogYW5kIGlmIG5lY2Vzc2FyeSBtb2RpZnkgdGhlIGluc2VydGVkIG5vZGUncyBjbGFzc05hbWVcbiAgICovXG4gIGZ1bmN0aW9uIF9leGVjQ29tbWFuZChkb2MsIGNvbW1hbmQsIG5vZGVOYW1lLCBjbGFzc05hbWUpIHtcbiAgICBpZiAoY2xhc3NOYW1lKSB7XG4gICAgICB2YXIgZXZlbnRMaXN0ZW5lciA9IGRvbS5vYnNlcnZlKGRvYywgXCJET01Ob2RlSW5zZXJ0ZWRcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgdmFyIHRhcmdldCA9IGV2ZW50LnRhcmdldCxcbiAgICAgICAgICAgIGRpc3BsYXlTdHlsZTtcbiAgICAgICAgaWYgKHRhcmdldC5ub2RlVHlwZSAhPT0gd3lzaWh0bWw1LkVMRU1FTlRfTk9ERSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBkaXNwbGF5U3R5bGUgPSBkb20uZ2V0U3R5bGUoXCJkaXNwbGF5XCIpLmZyb20odGFyZ2V0KTtcbiAgICAgICAgaWYgKGRpc3BsYXlTdHlsZS5zdWJzdHIoMCwgNikgIT09IFwiaW5saW5lXCIpIHtcbiAgICAgICAgICAvLyBNYWtlIHN1cmUgdGhhdCBvbmx5IGJsb2NrIGVsZW1lbnRzIHJlY2VpdmUgdGhlIGdpdmVuIGNsYXNzXG4gICAgICAgICAgdGFyZ2V0LmNsYXNzTmFtZSArPSBcIiBcIiArIGNsYXNzTmFtZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIGRvYy5leGVjQ29tbWFuZChjb21tYW5kLCBmYWxzZSwgbm9kZU5hbWUpO1xuICAgIGlmIChldmVudExpc3RlbmVyKSB7XG4gICAgICBldmVudExpc3RlbmVyLnN0b3AoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBfc2VsZWN0TGluZUFuZFdyYXAoY29tcG9zZXIsIGVsZW1lbnQpIHtcbiAgICBjb21wb3Nlci5zZWxlY3Rpb24uc2VsZWN0TGluZSgpO1xuICAgIGNvbXBvc2VyLnNlbGVjdGlvbi5zdXJyb3VuZChlbGVtZW50KTtcbiAgICBfcmVtb3ZlTGluZUJyZWFrQmVmb3JlQW5kQWZ0ZXIoZWxlbWVudCk7XG4gICAgX3JlbW92ZUxhc3RDaGlsZElmTGluZUJyZWFrKGVsZW1lbnQpO1xuICAgIGNvbXBvc2VyLnNlbGVjdGlvbi5zZWxlY3ROb2RlKGVsZW1lbnQsIHd5c2lodG1sNS5icm93c2VyLmRpc3BsYXlzQ2FyZXRJbkVtcHR5Q29udGVudEVkaXRhYmxlQ29ycmVjdGx5KCkpO1xuICB9XG5cbiAgZnVuY3Rpb24gX2hhc0NsYXNzZXMoZWxlbWVudCkge1xuICAgIHJldHVybiAhIXd5c2lodG1sNS5sYW5nLnN0cmluZyhlbGVtZW50LmNsYXNzTmFtZSkudHJpbSgpO1xuICB9XG4gIFxuICB3eXNpaHRtbDUuY29tbWFuZHMuZm9ybWF0QmxvY2sgPSB7XG4gICAgZXhlYzogZnVuY3Rpb24oY29tcG9zZXIsIGNvbW1hbmQsIG5vZGVOYW1lLCBjbGFzc05hbWUsIGNsYXNzUmVnRXhwKSB7XG4gICAgICB2YXIgZG9jICAgICAgICAgICAgID0gY29tcG9zZXIuZG9jLFxuICAgICAgICAgIGJsb2NrRWxlbWVudCAgICA9IHRoaXMuc3RhdGUoY29tcG9zZXIsIGNvbW1hbmQsIG5vZGVOYW1lLCBjbGFzc05hbWUsIGNsYXNzUmVnRXhwKSxcbiAgICAgICAgICB1c2VMaW5lQnJlYWtzICAgPSBjb21wb3Nlci5jb25maWcudXNlTGluZUJyZWFrcyxcbiAgICAgICAgICBkZWZhdWx0Tm9kZU5hbWUgPSB1c2VMaW5lQnJlYWtzID8gXCJESVZcIiA6IFwiUFwiLFxuICAgICAgICAgIHNlbGVjdGVkTm9kZTtcblxuICAgICAgbm9kZU5hbWUgPSB0eXBlb2Yobm9kZU5hbWUpID09PSBcInN0cmluZ1wiID8gbm9kZU5hbWUudG9VcHBlckNhc2UoKSA6IG5vZGVOYW1lO1xuICAgICAgXG4gICAgICBpZiAoYmxvY2tFbGVtZW50KSB7XG4gICAgICAgIGNvbXBvc2VyLnNlbGVjdGlvbi5leGVjdXRlQW5kUmVzdG9yZVNpbXBsZShmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAoY2xhc3NSZWdFeHApIHtcbiAgICAgICAgICAgIF9yZW1vdmVDbGFzcyhibG9ja0VsZW1lbnQsIGNsYXNzUmVnRXhwKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIGhhc0NsYXNzZXMgPSBfaGFzQ2xhc3NlcyhibG9ja0VsZW1lbnQpO1xuICAgICAgICAgIGlmICghaGFzQ2xhc3NlcyAmJiAodXNlTGluZUJyZWFrcyB8fCBub2RlTmFtZSA9PT0gXCJQXCIpKSB7XG4gICAgICAgICAgICAvLyBJbnNlcnQgYSBsaW5lIGJyZWFrIGFmdGVyd2FyZHMgYW5kIGJlZm9yZXdhcmRzIHdoZW4gdGhlcmUgYXJlIHNpYmxpbmdzXG4gICAgICAgICAgICAvLyB0aGF0IGFyZSBub3Qgb2YgdHlwZSBsaW5lIGJyZWFrIG9yIGJsb2NrIGVsZW1lbnRcbiAgICAgICAgICAgIF9hZGRMaW5lQnJlYWtCZWZvcmVBbmRBZnRlcihibG9ja0VsZW1lbnQpO1xuICAgICAgICAgICAgZG9tLnJlcGxhY2VXaXRoQ2hpbGROb2RlcyhibG9ja0VsZW1lbnQpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBNYWtlIHN1cmUgdGhhdCBzdHlsaW5nIGlzIGtlcHQgYnkgcmVuYW1pbmcgdGhlIGVsZW1lbnQgdG8gYSA8ZGl2PiBvciA8cD4gYW5kIGNvcHlpbmcgb3ZlciB0aGUgY2xhc3MgbmFtZVxuICAgICAgICAgICAgZG9tLnJlbmFtZUVsZW1lbnQoYmxvY2tFbGVtZW50LCBub2RlTmFtZSA9PT0gXCJQXCIgPyBcIkRJVlwiIDogZGVmYXVsdE5vZGVOYW1lKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIEZpbmQgc2ltaWxpYXIgYmxvY2sgZWxlbWVudCBhbmQgcmVuYW1lIGl0ICg8aDIgY2xhc3M9XCJmb29cIj48L2gyPiAgPT4gIDxoMSBjbGFzcz1cImZvb1wiPjwvaDE+KVxuICAgICAgaWYgKG5vZGVOYW1lID09PSBudWxsIHx8IHd5c2lodG1sNS5sYW5nLmFycmF5KEJMT0NLX0VMRU1FTlRTX0dST1VQKS5jb250YWlucyhub2RlTmFtZSkpIHtcbiAgICAgICAgc2VsZWN0ZWROb2RlID0gY29tcG9zZXIuc2VsZWN0aW9uLmdldFNlbGVjdGVkTm9kZSgpO1xuICAgICAgICBibG9ja0VsZW1lbnQgPSBkb20uZ2V0UGFyZW50RWxlbWVudChzZWxlY3RlZE5vZGUsIHtcbiAgICAgICAgICBub2RlTmFtZTogQkxPQ0tfRUxFTUVOVFNfR1JPVVBcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKGJsb2NrRWxlbWVudCkge1xuICAgICAgICAgIGNvbXBvc2VyLnNlbGVjdGlvbi5leGVjdXRlQW5kUmVzdG9yZShmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIC8vIFJlbmFtZSBjdXJyZW50IGJsb2NrIGVsZW1lbnQgdG8gbmV3IGJsb2NrIGVsZW1lbnQgYW5kIGFkZCBjbGFzc1xuICAgICAgICAgICAgaWYgKG5vZGVOYW1lKSB7XG4gICAgICAgICAgICAgIGJsb2NrRWxlbWVudCA9IGRvbS5yZW5hbWVFbGVtZW50KGJsb2NrRWxlbWVudCwgbm9kZU5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNsYXNzTmFtZSkge1xuICAgICAgICAgICAgICBfYWRkQ2xhc3MoYmxvY2tFbGVtZW50LCBjbGFzc05hbWUsIGNsYXNzUmVnRXhwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGNvbXBvc2VyLmNvbW1hbmRzLnN1cHBvcnQoY29tbWFuZCkpIHtcbiAgICAgICAgX2V4ZWNDb21tYW5kKGRvYywgY29tbWFuZCwgbm9kZU5hbWUgfHwgZGVmYXVsdE5vZGVOYW1lLCBjbGFzc05hbWUpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGJsb2NrRWxlbWVudCA9IGRvYy5jcmVhdGVFbGVtZW50KG5vZGVOYW1lIHx8IGRlZmF1bHROb2RlTmFtZSk7XG4gICAgICBpZiAoY2xhc3NOYW1lKSB7XG4gICAgICAgIGJsb2NrRWxlbWVudC5jbGFzc05hbWUgPSBjbGFzc05hbWU7XG4gICAgICB9XG4gICAgICBfc2VsZWN0TGluZUFuZFdyYXAoY29tcG9zZXIsIGJsb2NrRWxlbWVudCk7XG4gICAgfSxcblxuICAgIHN0YXRlOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgbm9kZU5hbWUsIGNsYXNzTmFtZSwgY2xhc3NSZWdFeHApIHtcbiAgICAgIG5vZGVOYW1lID0gdHlwZW9mKG5vZGVOYW1lKSA9PT0gXCJzdHJpbmdcIiA/IG5vZGVOYW1lLnRvVXBwZXJDYXNlKCkgOiBub2RlTmFtZTtcbiAgICAgIHZhciBzZWxlY3RlZE5vZGUgPSBjb21wb3Nlci5zZWxlY3Rpb24uZ2V0U2VsZWN0ZWROb2RlKCk7XG4gICAgICByZXR1cm4gZG9tLmdldFBhcmVudEVsZW1lbnQoc2VsZWN0ZWROb2RlLCB7XG4gICAgICAgIG5vZGVOYW1lOiAgICAgbm9kZU5hbWUsXG4gICAgICAgIGNsYXNzTmFtZTogICAgY2xhc3NOYW1lLFxuICAgICAgICBjbGFzc1JlZ0V4cDogIGNsYXNzUmVnRXhwXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59KSh3eXNpaHRtbDUpOy8qKlxuICogZm9ybWF0SW5saW5lIHNjZW5hcmlvcyBmb3IgdGFnIFwiQlwiICh8ID0gY2FyZXQsIHxmb298ID0gc2VsZWN0ZWQgdGV4dClcbiAqXG4gKiAgICMxIGNhcmV0IGluIHVuZm9ybWF0dGVkIHRleHQ6XG4gKiAgICAgIGFiY2RlZmd8XG4gKiAgIG91dHB1dDpcbiAqICAgICAgYWJjZGVmZzxiPnw8L2I+XG4gKlxuICogICAjMiB1bmZvcm1hdHRlZCB0ZXh0IHNlbGVjdGVkOlxuICogICAgICBhYmN8ZGVnfGhcbiAqICAgb3V0cHV0OlxuICogICAgICBhYmM8Yj58ZGVnfDwvYj5oXG4gKlxuICogICAjMyB1bmZvcm1hdHRlZCB0ZXh0IHNlbGVjdGVkIGFjcm9zcyBib3VuZGFyaWVzOlxuICogICAgICBhYnxjIDxzcGFuPmRlZmd8aDwvc3Bhbj5cbiAqICAgb3V0cHV0OlxuICogICAgICBhYjxiPnxjIDwvYj48c3Bhbj48Yj5kZWZnPC9iPnxoPC9zcGFuPlxuICpcbiAqICAgIzQgZm9ybWF0dGVkIHRleHQgZW50aXJlbHkgc2VsZWN0ZWRcbiAqICAgICAgPGI+fGFiY3w8L2I+XG4gKiAgIG91dHB1dDpcbiAqICAgICAgfGFiY3xcbiAqXG4gKiAgICM1IGZvcm1hdHRlZCB0ZXh0IHBhcnRpYWxseSBzZWxlY3RlZFxuICogICAgICA8Yj5hYnxjfDwvYj5cbiAqICAgb3V0cHV0OlxuICogICAgICA8Yj5hYjwvYj58Y3xcbiAqXG4gKiAgICM2IGZvcm1hdHRlZCB0ZXh0IHNlbGVjdGVkIGFjcm9zcyBib3VuZGFyaWVzXG4gKiAgICAgIDxzcGFuPmFifGM8L3NwYW4+IDxiPmRlfGZnaDwvYj5cbiAqICAgb3V0cHV0OlxuICogICAgICA8c3Bhbj5hYnxjPC9zcGFuPiBkZXw8Yj5mZ2g8L2I+XG4gKi9cbihmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIC8vIFRyZWF0IDxiPiBhcyA8c3Ryb25nPiBhbmQgdmljZSB2ZXJzYVxuICAgICAgQUxJQVNfTUFQUElORyA9IHtcbiAgICAgICAgXCJzdHJvbmdcIjogXCJiXCIsXG4gICAgICAgIFwiZW1cIjogICAgIFwiaVwiLFxuICAgICAgICBcImJcIjogICAgICBcInN0cm9uZ1wiLFxuICAgICAgICBcImlcIjogICAgICBcImVtXCJcbiAgICAgIH0sXG4gICAgICBodG1sQXBwbGllciA9IHt9O1xuXG4gIGZ1bmN0aW9uIF9nZXRUYWdOYW1lcyh0YWdOYW1lKSB7XG4gICAgdmFyIGFsaWFzID0gQUxJQVNfTUFQUElOR1t0YWdOYW1lXTtcbiAgICByZXR1cm4gYWxpYXMgPyBbdGFnTmFtZS50b0xvd2VyQ2FzZSgpLCBhbGlhcy50b0xvd2VyQ2FzZSgpXSA6IFt0YWdOYW1lLnRvTG93ZXJDYXNlKCldO1xuICB9XG5cbiAgIC8qIERvbm5hIFN0YXJ0IC0gQWRkZWQgYXR0cnMgcGFyYW1ldGVyLiAqL1xuICBmdW5jdGlvbiBfZ2V0QXBwbGllcih0YWdOYW1lLCBjbGFzc05hbWUsIGNsYXNzUmVnRXhwLCBhdHRycykge1xuICAgIHZhciBpZGVudGlmaWVyID0gdGFnTmFtZSArIFwiOlwiICsgY2xhc3NOYW1lO1xuICAgIGlmICghaHRtbEFwcGxpZXJbaWRlbnRpZmllcl0pIHtcbiAgICAgIGh0bWxBcHBsaWVyW2lkZW50aWZpZXJdID0gbmV3IHd5c2lodG1sNS5zZWxlY3Rpb24uSFRNTEFwcGxpZXIoX2dldFRhZ05hbWVzKHRhZ05hbWUpLCBjbGFzc05hbWUsIGNsYXNzUmVnRXhwLCB0cnVlLCBhdHRycyk7XG4gICAgfVxuICAgIHJldHVybiBodG1sQXBwbGllcltpZGVudGlmaWVyXTtcbiAgfVxuICAvKiBEb25uYSBFbmQgKi9cblxuICAvKiBEb25uYSBTdGFydCAtIEFkZGVkIGF0dHJzIHBhcmFtZXRlci4gKi9cbiAgd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdElubGluZSA9IHtcbiAgICBleGVjOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgdGFnTmFtZSwgY2xhc3NOYW1lLCBjbGFzc1JlZ0V4cCwgYXR0cnMpIHtcbiAgICAgIHZhciByYW5nZSA9IGNvbXBvc2VyLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuICAgICAgaWYgKCFyYW5nZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICBfZ2V0QXBwbGllcih0YWdOYW1lLCBjbGFzc05hbWUsIGNsYXNzUmVnRXhwLCBhdHRycykudG9nZ2xlUmFuZ2UocmFuZ2UpO1xuICAgICAgY29tcG9zZXIuc2VsZWN0aW9uLnNldFNlbGVjdGlvbihyYW5nZSk7XG4gICAgfSxcblxuICAgIHN0YXRlOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgdGFnTmFtZSwgY2xhc3NOYW1lLCBjbGFzc1JlZ0V4cCwgYXR0cnMpIHtcbiAgICAgIHZhciBkb2MgICAgICAgICAgID0gY29tcG9zZXIuZG9jLFxuICAgICAgICAgIGFsaWFzVGFnTmFtZSAgPSBBTElBU19NQVBQSU5HW3RhZ05hbWVdIHx8IHRhZ05hbWUsXG4gICAgICAgICAgcmFuZ2U7XG5cbiAgICAgIC8vIENoZWNrIHdoZXRoZXIgdGhlIGRvY3VtZW50IGNvbnRhaW5zIGEgbm9kZSB3aXRoIHRoZSBkZXNpcmVkIHRhZ05hbWVcbiAgICAgIGlmICghd3lzaWh0bWw1LmRvbS5oYXNFbGVtZW50V2l0aFRhZ05hbWUoZG9jLCB0YWdOYW1lKSAmJlxuICAgICAgICAgICF3eXNpaHRtbDUuZG9tLmhhc0VsZW1lbnRXaXRoVGFnTmFtZShkb2MsIGFsaWFzVGFnTmFtZSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICAgLy8gQ2hlY2sgd2hldGhlciB0aGUgZG9jdW1lbnQgY29udGFpbnMgYSBub2RlIHdpdGggdGhlIGRlc2lyZWQgY2xhc3NOYW1lXG4gICAgICBpZiAoY2xhc3NOYW1lICYmICF3eXNpaHRtbDUuZG9tLmhhc0VsZW1lbnRXaXRoQ2xhc3NOYW1lKGRvYywgY2xhc3NOYW1lKSkge1xuICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICByYW5nZSA9IGNvbXBvc2VyLnNlbGVjdGlvbi5nZXRSYW5nZSgpO1xuXG4gICAgICBpZiAoIXJhbmdlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIF9nZXRBcHBsaWVyKHRhZ05hbWUsIGNsYXNzTmFtZSwgY2xhc3NSZWdFeHAsIGF0dHJzKS5pc0FwcGxpZWRUb1JhbmdlKHJhbmdlKTtcbiAgICB9XG4gICAgLyogRG9ubmEgRW5kICovXG4gIH07XG59KSh3eXNpaHRtbDUpOyhmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIFJFR19FWFAgPSAvd3lzaXd5Zy1mb250LWZhbWlseS1bYS16XFwtXSsvZztcblxuICB3eXNpaHRtbDUuY29tbWFuZHMuZ29vZ2xlRm9udCA9IHtcbiAgICBleGVjOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgZm9udCwgYXR0cnMpIHtcbiAgICAgIHZhciBjbGFzc05hbWUgPSBcInd5c2l3eWctZm9udC1mYW1pbHktXCIgKyBmb250LnJlcGxhY2UoLyAvZywgXCItXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpO1xuICAgICAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG4gICAgICAvLyBBZGQgQ1NTIGZvciB0aGUgc2VsZWN0ZWQgZm9udCBwbHVzIGEgZmFsbGJhY2suXG4gICAgICBzdHlsZS50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuICAgICAgc3R5bGUuaW5uZXJIVE1MID0gXCIuXCIgKyBjbGFzc05hbWUgK1wiIHsgZm9udC1mYW1pbHk6ICdcIiArIGZvbnQgK1xuICAgICAgICBcIicsIHNlcmlmOyB9XCI7XG4gICAgICBjb21wb3Nlci5pZnJhbWUuY29udGVudERvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXVxuICAgICAgICAuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXG4gICAgICByZXR1cm4gd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdElubGluZS5leGVjKGNvbXBvc2VyLCBjb21tYW5kLCBcInNwYW5cIixcbiAgICAgICAgY2xhc3NOYW1lLCBSRUdfRVhQLCBhdHRycyk7XG4gICAgfSxcblxuICAgIHN0YXRlOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgZm9udCwgYXR0cnMpIHtcbiAgICAgIHZhciBjbGFzc05hbWUgPSBcInd5c2l3eWctZm9udC1mYW1pbHktXCIgKyBmb250LnJlcGxhY2UoLyAvZywgXCItXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICByZXR1cm4gd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdElubGluZS5zdGF0ZShjb21wb3NlciwgY29tbWFuZCwgXCJzcGFuXCIsXG4gICAgICAgIGNsYXNzTmFtZSwgUkVHX0VYUCwgYXR0cnMpO1xuICAgIH1cbiAgfTtcbn0pKHd5c2lodG1sNSk7KGZ1bmN0aW9uKHd5c2lodG1sNSkge1xuICB2YXIgUkVHX0VYUCA9IC93eXNpd3lnLWhpZ2hsaWdodC1jb2xvci1bMC05XFwtXSsvZztcblxuICB3eXNpaHRtbDUuY29tbWFuZHMuaGlnaGxpZ2h0Q29sb3IgPSB7XG4gICAgZXhlYzogZnVuY3Rpb24oY29tcG9zZXIsIGNvbW1hbmQsIHJnYmEsIGF0dHJzKSB7XG4gICAgICB2YXIgY2xhc3NOYW1lID0gXCJ3eXNpd3lnLWhpZ2hsaWdodC1jb2xvci1cIiArIHJnYmEuciArIFwiLVwiICsgcmdiYS5nICsgXCItXCIgK1xuICAgICAgICByZ2JhLmIgKyBcIi1cIiArIHJnYmEuYS50b1N0cmluZygpLnJlcGxhY2UoXCIuXCIsIFwiLVwiKTtcbiAgICAgIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuICAgICAgLy8gQWRkIGEgQ1NTIGNsYXNzIGZvciB0aGUgc2VsZWN0ZWQgaGlnaGxpZ2h0IGNvbG9yLlxuICAgICAgc3R5bGUudHlwZSA9IFwidGV4dC9jc3NcIjtcbiAgICAgIHN0eWxlLmlubmVySFRNTCA9IFwiLlwiICsgY2xhc3NOYW1lICtcIiB7IGJhY2tncm91bmQtY29sb3I6IHJnYmEoXCIgKyByZ2JhLnJcbiAgICAgICAgKyBcIiwgXCIgKyByZ2JhLmcgKyBcIiwgXCIgKyByZ2JhLmIgKyBcIiwgXCIgKyByZ2JhLmEgKyBcIik7IH1cIjtcbiAgICAgIGNvbXBvc2VyLmlmcmFtZS5jb250ZW50RG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdXG4gICAgICAgIC5hcHBlbmRDaGlsZChzdHlsZSk7XG5cbiAgICAgIHJldHVybiB3eXNpaHRtbDUuY29tbWFuZHMuZm9ybWF0SW5saW5lLmV4ZWMoY29tcG9zZXIsIGNvbW1hbmQsIFwic3BhblwiLFxuICAgICAgICBjbGFzc05hbWUsIFJFR19FWFAsIGF0dHJzKTtcbiAgICB9LFxuXG4gICAgc3RhdGU6IGZ1bmN0aW9uKGNvbXBvc2VyLCBjb21tYW5kLCByZ2JhLCBhdHRycykge1xuICAgICAgdmFyIGNsYXNzTmFtZSA9IFwid3lzaXd5Zy1oaWdobGlnaHQtY29sb3ItXCIgKyByZ2JhLnIgKyBcIi1cIiArIHJnYmEuZyArIFwiLVwiICtcbiAgICAgICAgcmdiYS5iICsgXCItXCIgKyByZ2JhLmEudG9TdHJpbmcoKS5yZXBsYWNlKFwiLlwiLCBcIi1cIik7XG5cbiAgICAgIHJldHVybiB3eXNpaHRtbDUuY29tbWFuZHMuZm9ybWF0SW5saW5lLnN0YXRlKGNvbXBvc2VyLCBjb21tYW5kLCBcInNwYW5cIixcbiAgICAgICAgY2xhc3NOYW1lLCBSRUdfRVhQLCBhdHRycyk7XG4gICAgfVxuICB9O1xufSkod3lzaWh0bWw1KTtcbnd5c2lodG1sNS5jb21tYW5kcy5pbnNlcnRIVE1MID0ge1xuICBleGVjOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgaHRtbCkge1xuICAgIGlmIChjb21wb3Nlci5jb21tYW5kcy5zdXBwb3J0KGNvbW1hbmQpKSB7XG4gICAgICBjb21wb3Nlci5kb2MuZXhlY0NvbW1hbmQoY29tbWFuZCwgZmFsc2UsIGh0bWwpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb21wb3Nlci5zZWxlY3Rpb24uaW5zZXJ0SFRNTChodG1sKTtcbiAgICB9XG4gIH0sXG5cbiAgc3RhdGU6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufTtcbihmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIE5PREVfTkFNRSA9IFwiSU1HXCI7XG4gIFxuICB3eXNpaHRtbDUuY29tbWFuZHMuaW5zZXJ0SW1hZ2UgPSB7XG4gICAgLyoqXG4gICAgICogSW5zZXJ0cyBhbiA8aW1nPlxuICAgICAqIElmIHNlbGVjdGlvbiBpcyBhbHJlYWR5IGFuIGltYWdlIGxpbmssIGl0IHJlbW92ZXMgaXRcbiAgICAgKiBcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqICAgIC8vIGVpdGhlciAuLi5cbiAgICAgKiAgICB3eXNpaHRtbDUuY29tbWFuZHMuaW5zZXJ0SW1hZ2UuZXhlYyhjb21wb3NlciwgXCJpbnNlcnRJbWFnZVwiLCBcImh0dHA6Ly93d3cuZ29vZ2xlLmRlL2xvZ28uanBnXCIpO1xuICAgICAqICAgIC8vIC4uLiBvciAuLi5cbiAgICAgKiAgICB3eXNpaHRtbDUuY29tbWFuZHMuaW5zZXJ0SW1hZ2UuZXhlYyhjb21wb3NlciwgXCJpbnNlcnRJbWFnZVwiLCB7IHNyYzogXCJodHRwOi8vd3d3Lmdvb2dsZS5kZS9sb2dvLmpwZ1wiLCB0aXRsZTogXCJmb29cIiB9KTtcbiAgICAgKi9cbiAgICBleGVjOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgdmFsdWUpIHtcbiAgICAgIHZhbHVlID0gdHlwZW9mKHZhbHVlKSA9PT0gXCJvYmplY3RcIiA/IHZhbHVlIDogeyBzcmM6IHZhbHVlIH07XG5cbiAgICAgIHZhciBkb2MgICAgID0gY29tcG9zZXIuZG9jLFxuICAgICAgICAgIGltYWdlICAgPSB0aGlzLnN0YXRlKGNvbXBvc2VyKSxcbiAgICAgICAgICB0ZXh0Tm9kZSxcbiAgICAgICAgICBwYXJlbnQ7XG5cbiAgICAgIGlmIChpbWFnZSkge1xuICAgICAgICAvLyBJbWFnZSBhbHJlYWR5IHNlbGVjdGVkLCBzZXQgdGhlIGNhcmV0IGJlZm9yZSBpdCBhbmQgZGVsZXRlIGl0XG4gICAgICAgIGNvbXBvc2VyLnNlbGVjdGlvbi5zZXRCZWZvcmUoaW1hZ2UpO1xuICAgICAgICBwYXJlbnQgPSBpbWFnZS5wYXJlbnROb2RlO1xuICAgICAgICBwYXJlbnQucmVtb3ZlQ2hpbGQoaW1hZ2UpO1xuXG4gICAgICAgIC8vIGFuZCBpdCdzIHBhcmVudCA8YT4gdG9vIGlmIGl0IGhhc24ndCBnb3QgYW55IG90aGVyIHJlbGV2YW50IGNoaWxkIG5vZGVzXG4gICAgICAgIHd5c2lodG1sNS5kb20ucmVtb3ZlRW1wdHlUZXh0Tm9kZXMocGFyZW50KTtcbiAgICAgICAgaWYgKHBhcmVudC5ub2RlTmFtZSA9PT0gXCJBXCIgJiYgIXBhcmVudC5maXJzdENoaWxkKSB7XG4gICAgICAgICAgY29tcG9zZXIuc2VsZWN0aW9uLnNldEFmdGVyKHBhcmVudCk7XG4gICAgICAgICAgcGFyZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQocGFyZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGZpcmVmb3ggYW5kIGllIHNvbWV0aW1lcyBkb24ndCByZW1vdmUgdGhlIGltYWdlIGhhbmRsZXMsIGV2ZW4gdGhvdWdoIHRoZSBpbWFnZSBnb3QgcmVtb3ZlZFxuICAgICAgICB3eXNpaHRtbDUucXVpcmtzLnJlZHJhdyhjb21wb3Nlci5lbGVtZW50KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpbWFnZSA9IGRvYy5jcmVhdGVFbGVtZW50KE5PREVfTkFNRSk7XG4gICAgICBcbiAgICAgIGZvciAodmFyIGkgaW4gdmFsdWUpIHtcbiAgICAgICAgaW1hZ2Uuc2V0QXR0cmlidXRlKGkgPT09IFwiY2xhc3NOYW1lXCIgPyBcImNsYXNzXCIgOiBpLCB2YWx1ZVtpXSk7XG4gICAgICB9XG5cbiAgICAgIGNvbXBvc2VyLnNlbGVjdGlvbi5pbnNlcnROb2RlKGltYWdlKTtcbiAgICAgIGlmICh3eXNpaHRtbDUuYnJvd3Nlci5oYXNQcm9ibGVtc1NldHRpbmdDYXJldEFmdGVySW1nKCkpIHtcbiAgICAgICAgdGV4dE5vZGUgPSBkb2MuY3JlYXRlVGV4dE5vZGUod3lzaWh0bWw1LklOVklTSUJMRV9TUEFDRSk7XG4gICAgICAgIGNvbXBvc2VyLnNlbGVjdGlvbi5pbnNlcnROb2RlKHRleHROb2RlKTtcbiAgICAgICAgY29tcG9zZXIuc2VsZWN0aW9uLnNldEFmdGVyKHRleHROb2RlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbXBvc2VyLnNlbGVjdGlvbi5zZXRBZnRlcihpbWFnZSk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHN0YXRlOiBmdW5jdGlvbihjb21wb3Nlcikge1xuICAgICAgdmFyIGRvYyA9IGNvbXBvc2VyLmRvYyxcbiAgICAgICAgICBzZWxlY3RlZE5vZGUsXG4gICAgICAgICAgdGV4dCxcbiAgICAgICAgICBpbWFnZXNJblNlbGVjdGlvbjtcblxuICAgICAgaWYgKCF3eXNpaHRtbDUuZG9tLmhhc0VsZW1lbnRXaXRoVGFnTmFtZShkb2MsIE5PREVfTkFNRSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBzZWxlY3RlZE5vZGUgPSBjb21wb3Nlci5zZWxlY3Rpb24uZ2V0U2VsZWN0ZWROb2RlKCk7XG4gICAgICBpZiAoIXNlbGVjdGVkTm9kZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIGlmIChzZWxlY3RlZE5vZGUubm9kZU5hbWUgPT09IE5PREVfTkFNRSkge1xuICAgICAgICAvLyBUaGlzIHdvcmtzIHBlcmZlY3RseSBpbiBJRVxuICAgICAgICByZXR1cm4gc2VsZWN0ZWROb2RlO1xuICAgICAgfVxuXG4gICAgICBpZiAoc2VsZWN0ZWROb2RlLm5vZGVUeXBlICE9PSB3eXNpaHRtbDUuRUxFTUVOVF9OT0RFKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgdGV4dCA9IGNvbXBvc2VyLnNlbGVjdGlvbi5nZXRUZXh0KCk7XG4gICAgICB0ZXh0ID0gd3lzaWh0bWw1Lmxhbmcuc3RyaW5nKHRleHQpLnRyaW0oKTtcbiAgICAgIGlmICh0ZXh0KSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgaW1hZ2VzSW5TZWxlY3Rpb24gPSBjb21wb3Nlci5zZWxlY3Rpb24uZ2V0Tm9kZXMod3lzaWh0bWw1LkVMRU1FTlRfTk9ERSwgZnVuY3Rpb24obm9kZSkge1xuICAgICAgICByZXR1cm4gbm9kZS5ub2RlTmFtZSA9PT0gXCJJTUdcIjtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoaW1hZ2VzSW5TZWxlY3Rpb24ubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGltYWdlc0luU2VsZWN0aW9uWzBdO1xuICAgIH1cbiAgfTtcbn0pKHd5c2lodG1sNSk7KGZ1bmN0aW9uKHd5c2lodG1sNSkge1xuICB2YXIgTElORV9CUkVBSyA9IFwiPGJyPlwiICsgKHd5c2lodG1sNS5icm93c2VyLm5lZWRzU3BhY2VBZnRlckxpbmVCcmVhaygpID8gXCIgXCIgOiBcIlwiKTtcbiAgXG4gIHd5c2lodG1sNS5jb21tYW5kcy5pbnNlcnRMaW5lQnJlYWsgPSB7XG4gICAgZXhlYzogZnVuY3Rpb24oY29tcG9zZXIsIGNvbW1hbmQpIHtcbiAgICAgIGlmIChjb21wb3Nlci5jb21tYW5kcy5zdXBwb3J0KGNvbW1hbmQpKSB7XG4gICAgICAgIGNvbXBvc2VyLmRvYy5leGVjQ29tbWFuZChjb21tYW5kLCBmYWxzZSwgbnVsbCk7XG4gICAgICAgIGlmICghd3lzaWh0bWw1LmJyb3dzZXIuYXV0b1Njcm9sbHNUb0NhcmV0KCkpIHtcbiAgICAgICAgICBjb21wb3Nlci5zZWxlY3Rpb24uc2Nyb2xsSW50b1ZpZXcoKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29tcG9zZXIuY29tbWFuZHMuZXhlYyhcImluc2VydEhUTUxcIiwgTElORV9CUkVBSyk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIHN0YXRlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH07XG59KSh3eXNpaHRtbDUpO3d5c2lodG1sNS5jb21tYW5kcy5pbnNlcnRPcmRlcmVkTGlzdCA9IHtcbiAgZXhlYzogZnVuY3Rpb24oY29tcG9zZXIsIGNvbW1hbmQpIHtcbiAgICB2YXIgZG9jICAgICAgICAgICA9IGNvbXBvc2VyLmRvYyxcbiAgICAgICAgc2VsZWN0ZWROb2RlICA9IGNvbXBvc2VyLnNlbGVjdGlvbi5nZXRTZWxlY3RlZE5vZGUoKSxcbiAgICAgICAgbGlzdCAgICAgICAgICA9IHd5c2lodG1sNS5kb20uZ2V0UGFyZW50RWxlbWVudChzZWxlY3RlZE5vZGUsIHsgbm9kZU5hbWU6IFwiT0xcIiB9KSxcbiAgICAgICAgb3RoZXJMaXN0ICAgICA9IHd5c2lodG1sNS5kb20uZ2V0UGFyZW50RWxlbWVudChzZWxlY3RlZE5vZGUsIHsgbm9kZU5hbWU6IFwiVUxcIiB9KSxcbiAgICAgICAgdGVtcENsYXNzTmFtZSA9ICBcIl93eXNpaHRtbDUtdGVtcC1cIiArIG5ldyBEYXRlKCkuZ2V0VGltZSgpLFxuICAgICAgICBpc0VtcHR5LFxuICAgICAgICB0ZW1wRWxlbWVudDtcbiAgICBcbiAgICBpZiAoIWxpc3QgJiYgIW90aGVyTGlzdCAmJiBjb21wb3Nlci5jb21tYW5kcy5zdXBwb3J0KGNvbW1hbmQpKSB7XG4gICAgICBkb2MuZXhlY0NvbW1hbmQoY29tbWFuZCwgZmFsc2UsIG51bGwpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICBpZiAobGlzdCkge1xuICAgICAgLy8gVW53cmFwIGxpc3RcbiAgICAgIC8vIDxvbD48bGk+Zm9vPC9saT48bGk+YmFyPC9saT48L29sPlxuICAgICAgLy8gYmVjb21lczpcbiAgICAgIC8vIGZvbzxicj5iYXI8YnI+XG4gICAgICBjb21wb3Nlci5zZWxlY3Rpb24uZXhlY3V0ZUFuZFJlc3RvcmUoZnVuY3Rpb24oKSB7XG4gICAgICAgIHd5c2lodG1sNS5kb20ucmVzb2x2ZUxpc3QobGlzdCwgY29tcG9zZXIuY29uZmlnLnVzZUxpbmVCcmVha3MpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChvdGhlckxpc3QpIHtcbiAgICAgIC8vIFR1cm4gYW4gdW5vcmRlcmVkIGxpc3QgaW50byBhbiBvcmRlcmVkIGxpc3RcbiAgICAgIC8vIDx1bD48bGk+Zm9vPC9saT48bGk+YmFyPC9saT48L3VsPlxuICAgICAgLy8gYmVjb21lczpcbiAgICAgIC8vIDxvbD48bGk+Zm9vPC9saT48bGk+YmFyPC9saT48L29sPlxuICAgICAgY29tcG9zZXIuc2VsZWN0aW9uLmV4ZWN1dGVBbmRSZXN0b3JlKGZ1bmN0aW9uKCkge1xuICAgICAgICB3eXNpaHRtbDUuZG9tLnJlbmFtZUVsZW1lbnQob3RoZXJMaXN0LCBcIm9sXCIpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIENyZWF0ZSBsaXN0XG4gICAgICBjb21wb3Nlci5jb21tYW5kcy5leGVjKFwiZm9ybWF0QmxvY2tcIiwgXCJkaXZcIiwgdGVtcENsYXNzTmFtZSk7XG4gICAgICB0ZW1wRWxlbWVudCA9IGRvYy5xdWVyeVNlbGVjdG9yKFwiLlwiICsgdGVtcENsYXNzTmFtZSk7XG4gICAgICBpc0VtcHR5ID0gdGVtcEVsZW1lbnQuaW5uZXJIVE1MID09PSBcIlwiIHx8IHRlbXBFbGVtZW50LmlubmVySFRNTCA9PT0gd3lzaWh0bWw1LklOVklTSUJMRV9TUEFDRSB8fCB0ZW1wRWxlbWVudC5pbm5lckhUTUwgPT09IFwiPGJyPlwiO1xuICAgICAgY29tcG9zZXIuc2VsZWN0aW9uLmV4ZWN1dGVBbmRSZXN0b3JlKGZ1bmN0aW9uKCkge1xuICAgICAgICBsaXN0ID0gd3lzaWh0bWw1LmRvbS5jb252ZXJ0VG9MaXN0KHRlbXBFbGVtZW50LCBcIm9sXCIpO1xuICAgICAgfSk7XG4gICAgICBpZiAoaXNFbXB0eSkge1xuICAgICAgICBjb21wb3Nlci5zZWxlY3Rpb24uc2VsZWN0Tm9kZShsaXN0LnF1ZXJ5U2VsZWN0b3IoXCJsaVwiKSwgdHJ1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBcbiAgc3RhdGU6IGZ1bmN0aW9uKGNvbXBvc2VyKSB7XG4gICAgdmFyIHNlbGVjdGVkTm9kZSA9IGNvbXBvc2VyLnNlbGVjdGlvbi5nZXRTZWxlY3RlZE5vZGUoKTtcbiAgICByZXR1cm4gd3lzaWh0bWw1LmRvbS5nZXRQYXJlbnRFbGVtZW50KHNlbGVjdGVkTm9kZSwgeyBub2RlTmFtZTogXCJPTFwiIH0pO1xuICB9XG59O3d5c2lodG1sNS5jb21tYW5kcy5pbnNlcnRVbm9yZGVyZWRMaXN0ID0ge1xuICBleGVjOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCkge1xuICAgIHZhciBkb2MgICAgICAgICAgID0gY29tcG9zZXIuZG9jLFxuICAgICAgICBzZWxlY3RlZE5vZGUgID0gY29tcG9zZXIuc2VsZWN0aW9uLmdldFNlbGVjdGVkTm9kZSgpLFxuICAgICAgICBsaXN0ICAgICAgICAgID0gd3lzaWh0bWw1LmRvbS5nZXRQYXJlbnRFbGVtZW50KHNlbGVjdGVkTm9kZSwgeyBub2RlTmFtZTogXCJVTFwiIH0pLFxuICAgICAgICBvdGhlckxpc3QgICAgID0gd3lzaWh0bWw1LmRvbS5nZXRQYXJlbnRFbGVtZW50KHNlbGVjdGVkTm9kZSwgeyBub2RlTmFtZTogXCJPTFwiIH0pLFxuICAgICAgICB0ZW1wQ2xhc3NOYW1lID0gIFwiX3d5c2lodG1sNS10ZW1wLVwiICsgbmV3IERhdGUoKS5nZXRUaW1lKCksXG4gICAgICAgIGlzRW1wdHksXG4gICAgICAgIHRlbXBFbGVtZW50O1xuICAgIFxuICAgIGlmICghbGlzdCAmJiAhb3RoZXJMaXN0ICYmIGNvbXBvc2VyLmNvbW1hbmRzLnN1cHBvcnQoY29tbWFuZCkpIHtcbiAgICAgIGRvYy5leGVjQ29tbWFuZChjb21tYW5kLCBmYWxzZSwgbnVsbCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIGlmIChsaXN0KSB7XG4gICAgICAvLyBVbndyYXAgbGlzdFxuICAgICAgLy8gPHVsPjxsaT5mb288L2xpPjxsaT5iYXI8L2xpPjwvdWw+XG4gICAgICAvLyBiZWNvbWVzOlxuICAgICAgLy8gZm9vPGJyPmJhcjxicj5cbiAgICAgIGNvbXBvc2VyLnNlbGVjdGlvbi5leGVjdXRlQW5kUmVzdG9yZShmdW5jdGlvbigpIHtcbiAgICAgICAgd3lzaWh0bWw1LmRvbS5yZXNvbHZlTGlzdChsaXN0LCBjb21wb3Nlci5jb25maWcudXNlTGluZUJyZWFrcyk7XG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKG90aGVyTGlzdCkge1xuICAgICAgLy8gVHVybiBhbiBvcmRlcmVkIGxpc3QgaW50byBhbiB1bm9yZGVyZWQgbGlzdFxuICAgICAgLy8gPG9sPjxsaT5mb288L2xpPjxsaT5iYXI8L2xpPjwvb2w+XG4gICAgICAvLyBiZWNvbWVzOlxuICAgICAgLy8gPHVsPjxsaT5mb288L2xpPjxsaT5iYXI8L2xpPjwvdWw+XG4gICAgICBjb21wb3Nlci5zZWxlY3Rpb24uZXhlY3V0ZUFuZFJlc3RvcmUoZnVuY3Rpb24oKSB7XG4gICAgICAgIHd5c2lodG1sNS5kb20ucmVuYW1lRWxlbWVudChvdGhlckxpc3QsIFwidWxcIik7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQ3JlYXRlIGxpc3RcbiAgICAgIGNvbXBvc2VyLmNvbW1hbmRzLmV4ZWMoXCJmb3JtYXRCbG9ja1wiLCBcImRpdlwiLCB0ZW1wQ2xhc3NOYW1lKTtcbiAgICAgIHRlbXBFbGVtZW50ID0gZG9jLnF1ZXJ5U2VsZWN0b3IoXCIuXCIgKyB0ZW1wQ2xhc3NOYW1lKTtcbiAgICAgIGlzRW1wdHkgPSB0ZW1wRWxlbWVudC5pbm5lckhUTUwgPT09IFwiXCIgfHwgdGVtcEVsZW1lbnQuaW5uZXJIVE1MID09PSB3eXNpaHRtbDUuSU5WSVNJQkxFX1NQQUNFIHx8IHRlbXBFbGVtZW50LmlubmVySFRNTCA9PT0gXCI8YnI+XCI7XG4gICAgICBjb21wb3Nlci5zZWxlY3Rpb24uZXhlY3V0ZUFuZFJlc3RvcmUoZnVuY3Rpb24oKSB7XG4gICAgICAgIGxpc3QgPSB3eXNpaHRtbDUuZG9tLmNvbnZlcnRUb0xpc3QodGVtcEVsZW1lbnQsIFwidWxcIik7XG4gICAgICB9KTtcbiAgICAgIGlmIChpc0VtcHR5KSB7XG4gICAgICAgIGNvbXBvc2VyLnNlbGVjdGlvbi5zZWxlY3ROb2RlKGxpc3QucXVlcnlTZWxlY3RvcihcImxpXCIpLCB0cnVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIFxuICBzdGF0ZTogZnVuY3Rpb24oY29tcG9zZXIpIHtcbiAgICB2YXIgc2VsZWN0ZWROb2RlID0gY29tcG9zZXIuc2VsZWN0aW9uLmdldFNlbGVjdGVkTm9kZSgpO1xuICAgIHJldHVybiB3eXNpaHRtbDUuZG9tLmdldFBhcmVudEVsZW1lbnQoc2VsZWN0ZWROb2RlLCB7IG5vZGVOYW1lOiBcIlVMXCIgfSk7XG4gIH1cbn07d3lzaWh0bWw1LmNvbW1hbmRzLml0YWxpYyA9IHtcbiAgZXhlYzogZnVuY3Rpb24oY29tcG9zZXIsIGNvbW1hbmQpIHtcbiAgICByZXR1cm4gd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdElubGluZS5leGVjKGNvbXBvc2VyLCBjb21tYW5kLCBcImlcIik7XG4gIH0sXG5cbiAgc3RhdGU6IGZ1bmN0aW9uKGNvbXBvc2VyLCBjb21tYW5kKSB7XG4gICAgLy8gZWxlbWVudC5vd25lckRvY3VtZW50LnF1ZXJ5Q29tbWFuZFN0YXRlKFwiaXRhbGljXCIpIHJlc3VsdHM6XG4gICAgLy8gZmlyZWZveDogb25seSA8aT5cbiAgICAvLyBjaHJvbWU6ICA8aT4sIDxlbT4sIDxibG9ja3F1b3RlPiwgLi4uXG4gICAgLy8gaWU6ICAgICAgPGk+LCA8ZW0+XG4gICAgLy8gb3BlcmE6ICAgb25seSA8aT5cbiAgICByZXR1cm4gd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdElubGluZS5zdGF0ZShjb21wb3NlciwgY29tbWFuZCwgXCJpXCIpO1xuICB9XG59OyhmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIENMQVNTX05BTUUgID0gXCJ3eXNpd3lnLXRleHQtYWxpZ24tY2VudGVyXCIsXG4gICAgICBSRUdfRVhQICAgICA9IC93eXNpd3lnLXRleHQtYWxpZ24tWzAtOWEtel0rL2c7XG4gIFxuICB3eXNpaHRtbDUuY29tbWFuZHMuanVzdGlmeUNlbnRlciA9IHtcbiAgICBleGVjOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCkge1xuICAgICAgcmV0dXJuIHd5c2lodG1sNS5jb21tYW5kcy5mb3JtYXRCbG9jay5leGVjKGNvbXBvc2VyLCBcImZvcm1hdEJsb2NrXCIsIG51bGwsIENMQVNTX05BTUUsIFJFR19FWFApO1xuICAgIH0sXG5cbiAgICBzdGF0ZTogZnVuY3Rpb24oY29tcG9zZXIsIGNvbW1hbmQpIHtcbiAgICAgIHJldHVybiB3eXNpaHRtbDUuY29tbWFuZHMuZm9ybWF0QmxvY2suc3RhdGUoY29tcG9zZXIsIFwiZm9ybWF0QmxvY2tcIiwgbnVsbCwgQ0xBU1NfTkFNRSwgUkVHX0VYUCk7XG4gICAgfVxuICB9O1xufSkod3lzaWh0bWw1KTsoZnVuY3Rpb24od3lzaWh0bWw1KSB7XG4gIHZhciBDTEFTU19OQU1FICA9IFwid3lzaXd5Zy10ZXh0LWFsaWduLWxlZnRcIixcbiAgICAgIFJFR19FWFAgICAgID0gL3d5c2l3eWctdGV4dC1hbGlnbi1bMC05YS16XSsvZztcbiAgXG4gIHd5c2lodG1sNS5jb21tYW5kcy5qdXN0aWZ5TGVmdCA9IHtcbiAgICBleGVjOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCkge1xuICAgICAgcmV0dXJuIHd5c2lodG1sNS5jb21tYW5kcy5mb3JtYXRCbG9jay5leGVjKGNvbXBvc2VyLCBcImZvcm1hdEJsb2NrXCIsIG51bGwsIENMQVNTX05BTUUsIFJFR19FWFApO1xuICAgIH0sXG5cbiAgICBzdGF0ZTogZnVuY3Rpb24oY29tcG9zZXIsIGNvbW1hbmQpIHtcbiAgICAgIHJldHVybiB3eXNpaHRtbDUuY29tbWFuZHMuZm9ybWF0QmxvY2suc3RhdGUoY29tcG9zZXIsIFwiZm9ybWF0QmxvY2tcIiwgbnVsbCwgQ0xBU1NfTkFNRSwgUkVHX0VYUCk7XG4gICAgfVxuICB9O1xufSkod3lzaWh0bWw1KTsoZnVuY3Rpb24od3lzaWh0bWw1KSB7XG4gIHZhciBDTEFTU19OQU1FICA9IFwid3lzaXd5Zy10ZXh0LWFsaWduLXJpZ2h0XCIsXG4gICAgICBSRUdfRVhQICAgICA9IC93eXNpd3lnLXRleHQtYWxpZ24tWzAtOWEtel0rL2c7XG4gIFxuICB3eXNpaHRtbDUuY29tbWFuZHMuanVzdGlmeVJpZ2h0ID0ge1xuICAgIGV4ZWM6IGZ1bmN0aW9uKGNvbXBvc2VyLCBjb21tYW5kKSB7XG4gICAgICByZXR1cm4gd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdEJsb2NrLmV4ZWMoY29tcG9zZXIsIFwiZm9ybWF0QmxvY2tcIiwgbnVsbCwgQ0xBU1NfTkFNRSwgUkVHX0VYUCk7XG4gICAgfSxcblxuICAgIHN0YXRlOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCkge1xuICAgICAgcmV0dXJuIHd5c2lodG1sNS5jb21tYW5kcy5mb3JtYXRCbG9jay5zdGF0ZShjb21wb3NlciwgXCJmb3JtYXRCbG9ja1wiLCBudWxsLCBDTEFTU19OQU1FLCBSRUdfRVhQKTtcbiAgICB9XG4gIH07XG59KSh3eXNpaHRtbDUpOyhmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIENMQVNTX05BTUUgID0gXCJ3eXNpd3lnLXRleHQtYWxpZ24tanVzdGlmeVwiLFxuICAgICAgUkVHX0VYUCAgICAgPSAvd3lzaXd5Zy10ZXh0LWFsaWduLVswLTlhLXpdKy9nO1xuICBcbiAgd3lzaWh0bWw1LmNvbW1hbmRzLmp1c3RpZnlGdWxsID0ge1xuICAgIGV4ZWM6IGZ1bmN0aW9uKGNvbXBvc2VyLCBjb21tYW5kKSB7XG4gICAgICByZXR1cm4gd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdEJsb2NrLmV4ZWMoY29tcG9zZXIsIFwiZm9ybWF0QmxvY2tcIiwgbnVsbCwgQ0xBU1NfTkFNRSwgUkVHX0VYUCk7XG4gICAgfSxcblxuICAgIHN0YXRlOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCkge1xuICAgICAgcmV0dXJuIHd5c2lodG1sNS5jb21tYW5kcy5mb3JtYXRCbG9jay5zdGF0ZShjb21wb3NlciwgXCJmb3JtYXRCbG9ja1wiLCBudWxsLCBDTEFTU19OQU1FLCBSRUdfRVhQKTtcbiAgICB9XG4gIH07XG59KSh3eXNpaHRtbDUpO1xuKGZ1bmN0aW9uKHd5c2lodG1sNSkge1xuICB2YXIgUkVHX0VYUCA9IC93eXNpd3lnLWxpbmUtaGVpZ2h0LVswLTlcXC1dKy9nO1xuXG4gIHd5c2lodG1sNS5jb21tYW5kcy5saW5lSGVpZ2h0ID0ge1xuICAgIGV4ZWM6IGZ1bmN0aW9uKGNvbXBvc2VyLCBjb21tYW5kLCBsaW5lSGVpZ2h0LCBhdHRycykge1xuICAgICAgcmV0dXJuIHd5c2lodG1sNS5jb21tYW5kcy5mb3JtYXRJbmxpbmUuZXhlYyhjb21wb3NlciwgY29tbWFuZCwgXCJzcGFuXCIsXG4gICAgICAgIFwid3lzaXd5Zy1saW5lLWhlaWdodC1cIiArIGxpbmVIZWlnaHQsIFJFR19FWFAsIGF0dHJzKTtcbiAgICB9LFxuXG4gICAgc3RhdGU6IGZ1bmN0aW9uKGNvbXBvc2VyLCBjb21tYW5kLCBsaW5lSGVpZ2h0LCBhdHRycykge1xuICAgICAgcmV0dXJuIHd5c2lodG1sNS5jb21tYW5kcy5mb3JtYXRJbmxpbmUuc3RhdGUoY29tcG9zZXIsIGNvbW1hbmQsIFwic3BhblwiLFxuICAgICAgICBcInd5c2l3eWctbGluZS1oZWlnaHQtXCIgKyBsaW5lSGVpZ2h0LCBSRUdfRVhQLCBhdHRycyk7XG4gICAgfVxuICB9O1xufSkod3lzaWh0bWw1KTtcbnd5c2lodG1sNS5jb21tYW5kcy5yZWRvID0ge1xuICBleGVjOiBmdW5jdGlvbihjb21wb3Nlcikge1xuICAgIHJldHVybiBjb21wb3Nlci51bmRvTWFuYWdlci5yZWRvKCk7XG4gIH0sXG5cbiAgc3RhdGU6IGZ1bmN0aW9uKGNvbXBvc2VyKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59OyhmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIFJFR19FWFAgPSAvd3lzaXd5Zy1mb250LWZhbWlseS1bYS16XFwtXSsvZztcblxuICB3eXNpaHRtbDUuY29tbWFuZHMuc3RhbmRhcmRGb250ID0ge1xuICAgIGV4ZWM6IGZ1bmN0aW9uKGNvbXBvc2VyLCBjb21tYW5kLCBmb250LCBmb250RmFtaWx5LCBhdHRycykge1xuICAgICAgdmFyIGNsYXNzTmFtZSA9IFwid3lzaXd5Zy1mb250LWZhbWlseS1cIiArIGZvbnQucmVwbGFjZSgvIC9nLCBcIi1cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKCk7XG4gICAgICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cbiAgICAgIC8vIEFkZCBhIENTUyBjbGFzcyBmb3IgdGhlIHNlbGVjdGVkIGZvbnQuXG4gICAgICBzdHlsZS50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuICAgICAgc3R5bGUuaW5uZXJIVE1MID0gXCIuXCIgKyBjbGFzc05hbWUgK1wiIHsgZm9udC1mYW1pbHk6IFwiICsgZm9udEZhbWlseSArXG4gICAgICAgIFwiOyB9XCI7XG4gICAgICBjb21wb3Nlci5pZnJhbWUuY29udGVudERvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXVxuICAgICAgICAuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXG4gICAgICByZXR1cm4gd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdElubGluZS5leGVjKGNvbXBvc2VyLCBjb21tYW5kLCBcInNwYW5cIixcbiAgICAgICAgY2xhc3NOYW1lLCBSRUdfRVhQLCBhdHRycyk7XG4gICAgfSxcblxuICAgIHN0YXRlOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgZm9udCwgZm9udEZhbWlseSwgYXR0cnMpIHtcbiAgICAgIHZhciBjbGFzc05hbWUgPSBcInd5c2l3eWctZm9udC1mYW1pbHktXCIgKyBmb250LnJlcGxhY2UoLyAvZywgXCItXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICByZXR1cm4gd3lzaWh0bWw1LmNvbW1hbmRzLmZvcm1hdElubGluZS5zdGF0ZShjb21wb3NlciwgY29tbWFuZCwgXCJzcGFuXCIsXG4gICAgICAgIGNsYXNzTmFtZSwgUkVHX0VYUCwgYXR0cnMpO1xuICAgIH1cbiAgfTtcbn0pKHd5c2lodG1sNSk7KGZ1bmN0aW9uKHd5c2lodG1sNSkge1xuICB2YXIgUkVHX0VYUCA9IC93eXNpd3lnLXRleHQtY29sb3ItWzAtOVxcLV0rL2c7XG5cbiAgd3lzaWh0bWw1LmNvbW1hbmRzLnRleHRDb2xvciA9IHtcbiAgICBleGVjOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCwgcmdiYSwgYXR0cnMpIHtcbiAgICAgIHZhciBjbGFzc05hbWUgPSBcInd5c2l3eWctdGV4dC1jb2xvci1cIiArIHJnYmEuciArIFwiLVwiICsgcmdiYS5nICsgXCItXCIgK1xuICAgICAgICByZ2JhLmIgKyBcIi1cIiArIHJnYmEuYS50b1N0cmluZygpLnJlcGxhY2UoXCIuXCIsIFwiLVwiKTtcbiAgICAgIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuICAgICAgLy8gQWRkIGEgQ1NTIGNsYXNzIGZvciB0aGUgc2VsZWN0ZWQgdGV4dCBjb2xvci5cbiAgICAgIHN0eWxlLnR5cGUgPSBcInRleHQvY3NzXCI7XG4gICAgICBzdHlsZS5pbm5lckhUTUwgPSBcIi5cIiArIGNsYXNzTmFtZSArXCIgeyBjb2xvcjogcmdiYShcIiArIHJnYmEuciArIFwiLCBcIiArXG4gICAgICAgIHJnYmEuZyArIFwiLCBcIiArIHJnYmEuYiArIFwiLCBcIiArIHJnYmEuYSArIFwiKTsgfVwiO1xuICAgICAgY29tcG9zZXIuaWZyYW1lLmNvbnRlbnREb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF1cbiAgICAgICAgLmFwcGVuZENoaWxkKHN0eWxlKTtcblxuICAgICAgcmV0dXJuIHd5c2lodG1sNS5jb21tYW5kcy5mb3JtYXRJbmxpbmUuZXhlYyhjb21wb3NlciwgY29tbWFuZCwgXCJzcGFuXCIsXG4gICAgICAgIGNsYXNzTmFtZSwgUkVHX0VYUCwgYXR0cnMpO1xuICAgIH0sXG5cbiAgICBzdGF0ZTogZnVuY3Rpb24oY29tcG9zZXIsIGNvbW1hbmQsIHJnYmEsIGF0dHJzKSB7XG4gICAgICB2YXIgY2xhc3NOYW1lID0gXCJ3eXNpd3lnLXRleHQtY29sb3ItXCIgKyByZ2JhLnIgKyBcIi1cIiArIHJnYmEuZyArIFwiLVwiICtcbiAgICAgICAgcmdiYS5iICsgXCItXCIgKyByZ2JhLmEudG9TdHJpbmcoKS5yZXBsYWNlKFwiLlwiLCBcIi1cIik7XG5cbiAgICAgIHJldHVybiB3eXNpaHRtbDUuY29tbWFuZHMuZm9ybWF0SW5saW5lLnN0YXRlKGNvbXBvc2VyLCBjb21tYW5kLCBcInNwYW5cIixcbiAgICAgICAgY2xhc3NOYW1lLCBSRUdfRVhQLCBhdHRycyk7XG4gICAgfVxuICB9O1xufSkod3lzaWh0bWw1KTtcbnd5c2lodG1sNS5jb21tYW5kcy51bmRlcmxpbmUgPSB7XG4gIGV4ZWM6IGZ1bmN0aW9uKGNvbXBvc2VyLCBjb21tYW5kKSB7XG4gICAgcmV0dXJuIHd5c2lodG1sNS5jb21tYW5kcy5mb3JtYXRJbmxpbmUuZXhlYyhjb21wb3NlciwgY29tbWFuZCwgXCJ1XCIpO1xuICB9LFxuXG4gIHN0YXRlOiBmdW5jdGlvbihjb21wb3NlciwgY29tbWFuZCkge1xuICAgIHJldHVybiB3eXNpaHRtbDUuY29tbWFuZHMuZm9ybWF0SW5saW5lLnN0YXRlKGNvbXBvc2VyLCBjb21tYW5kLCBcInVcIik7XG4gIH1cbn07d3lzaWh0bWw1LmNvbW1hbmRzLnVuZG8gPSB7XG4gIGV4ZWM6IGZ1bmN0aW9uKGNvbXBvc2VyKSB7XG4gICAgcmV0dXJuIGNvbXBvc2VyLnVuZG9NYW5hZ2VyLnVuZG8oKTtcbiAgfSxcblxuICBzdGF0ZTogZnVuY3Rpb24oY29tcG9zZXIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07LyoqXG4gKiBVbmRvIE1hbmFnZXIgZm9yIHd5c2lodG1sNVxuICogc2xpZ2h0bHkgaW5zcGlyZWQgYnkgaHR0cDovL3JuaXdhLmNvbS9lZGl0aW5nL3VuZG9tYW5hZ2VyLmh0bWwjdGhlLXVuZG9tYW5hZ2VyLWludGVyZmFjZVxuICovXG4oZnVuY3Rpb24od3lzaWh0bWw1KSB7XG4gIHZhciBaX0tFWSAgICAgICAgICAgICAgID0gOTAsXG4gICAgICBZX0tFWSAgICAgICAgICAgICAgID0gODksXG4gICAgICBCQUNLU1BBQ0VfS0VZICAgICAgID0gOCxcbiAgICAgIERFTEVURV9LRVkgICAgICAgICAgPSA0NixcbiAgICAgIE1BWF9ISVNUT1JZX0VOVFJJRVMgPSAyNSxcbiAgICAgIERBVEFfQVRUUl9OT0RFICAgICAgPSBcImRhdGEtd3lzaWh0bWw1LXNlbGVjdGlvbi1ub2RlXCIsXG4gICAgICBEQVRBX0FUVFJfT0ZGU0VUICAgID0gXCJkYXRhLXd5c2lodG1sNS1zZWxlY3Rpb24tb2Zmc2V0XCIsXG4gICAgICBVTkRPX0hUTUwgICAgICAgICAgID0gJzxzcGFuIGlkPVwiX3d5c2lodG1sNS11bmRvXCIgY2xhc3M9XCJfd3lzaWh0bWw1LXRlbXBcIj4nICsgd3lzaWh0bWw1LklOVklTSUJMRV9TUEFDRSArICc8L3NwYW4+JyxcbiAgICAgIFJFRE9fSFRNTCAgICAgICAgICAgPSAnPHNwYW4gaWQ9XCJfd3lzaWh0bWw1LXJlZG9cIiBjbGFzcz1cIl93eXNpaHRtbDUtdGVtcFwiPicgKyB3eXNpaHRtbDUuSU5WSVNJQkxFX1NQQUNFICsgJzwvc3Bhbj4nLFxuICAgICAgZG9tICAgICAgICAgICAgICAgICA9IHd5c2lodG1sNS5kb207XG4gIFxuICBmdW5jdGlvbiBjbGVhblRlbXBFbGVtZW50cyhkb2MpIHtcbiAgICB2YXIgdGVtcEVsZW1lbnQ7XG4gICAgd2hpbGUgKHRlbXBFbGVtZW50ID0gZG9jLnF1ZXJ5U2VsZWN0b3IoXCIuX3d5c2lodG1sNS10ZW1wXCIpKSB7XG4gICAgICB0ZW1wRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRlbXBFbGVtZW50KTtcbiAgICB9XG4gIH1cbiAgXG4gIHd5c2lodG1sNS5VbmRvTWFuYWdlciA9IHd5c2lodG1sNS5sYW5nLkRpc3BhdGNoZXIuZXh0ZW5kKFxuICAgIC8qKiBAc2NvcGUgd3lzaWh0bWw1LlVuZG9NYW5hZ2VyLnByb3RvdHlwZSAqLyB7XG4gICAgY29uc3RydWN0b3I6IGZ1bmN0aW9uKGVkaXRvcikge1xuICAgICAgdGhpcy5lZGl0b3IgPSBlZGl0b3I7XG4gICAgICB0aGlzLmNvbXBvc2VyID0gZWRpdG9yLmNvbXBvc2VyO1xuICAgICAgdGhpcy5lbGVtZW50ID0gdGhpcy5jb21wb3Nlci5lbGVtZW50O1xuICAgICAgXG4gICAgICB0aGlzLnBvc2l0aW9uID0gMDtcbiAgICAgIHRoaXMuaGlzdG9yeVN0ciA9IFtdO1xuICAgICAgdGhpcy5oaXN0b3J5RG9tID0gW107XG4gICAgICBcbiAgICAgIHRoaXMudHJhbnNhY3QoKTtcbiAgICAgIFxuICAgICAgdGhpcy5fb2JzZXJ2ZSgpO1xuICAgIH0sXG4gICAgXG4gICAgX29ic2VydmU6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHRoYXQgICAgICA9IHRoaXMsXG4gICAgICAgICAgZG9jICAgICAgID0gdGhpcy5jb21wb3Nlci5zYW5kYm94LmdldERvY3VtZW50KCksXG4gICAgICAgICAgbGFzdEtleTtcbiAgICAgICAgICBcbiAgICAgIC8vIENhdGNoIENUUkwrWiBhbmQgQ1RSTCtZXG4gICAgICBkb20ub2JzZXJ2ZSh0aGlzLmVsZW1lbnQsIFwia2V5ZG93blwiLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICBpZiAoZXZlbnQuYWx0S2V5IHx8ICghZXZlbnQuY3RybEtleSAmJiAhZXZlbnQubWV0YUtleSkpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHZhciBrZXlDb2RlID0gZXZlbnQua2V5Q29kZSxcbiAgICAgICAgICAgIGlzVW5kbyA9IGtleUNvZGUgPT09IFpfS0VZICYmICFldmVudC5zaGlmdEtleSxcbiAgICAgICAgICAgIGlzUmVkbyA9IChrZXlDb2RlID09PSBaX0tFWSAmJiBldmVudC5zaGlmdEtleSkgfHwgKGtleUNvZGUgPT09IFlfS0VZKTtcbiAgICAgICAgXG4gICAgICAgIGlmIChpc1VuZG8pIHtcbiAgICAgICAgICB0aGF0LnVuZG8oKTtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9IGVsc2UgaWYgKGlzUmVkbykge1xuICAgICAgICAgIHRoYXQucmVkbygpO1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgXG4gICAgICAvLyBDYXRjaCBkZWxldGUgYW5kIGJhY2tzcGFjZVxuICAgICAgZG9tLm9ic2VydmUodGhpcy5lbGVtZW50LCBcImtleWRvd25cIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgdmFyIGtleUNvZGUgPSBldmVudC5rZXlDb2RlO1xuICAgICAgICBpZiAoa2V5Q29kZSA9PT0gbGFzdEtleSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgbGFzdEtleSA9IGtleUNvZGU7XG4gICAgICAgIFxuICAgICAgICBpZiAoa2V5Q29kZSA9PT0gQkFDS1NQQUNFX0tFWSB8fCBrZXlDb2RlID09PSBERUxFVEVfS0VZKSB7XG4gICAgICAgICAgdGhhdC50cmFuc2FjdCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgLy8gTm93IHRoaXMgaXMgdmVyeSBoYWNreTpcbiAgICAgIC8vIFRoZXNlIGRheXMgYnJvd3NlcnMgZG9uJ3Qgb2ZmZXIgYSB1bmRvL3JlZG8gZXZlbnQgd2hpY2ggd2UgY291bGQgaG9vayBpbnRvXG4gICAgICAvLyB0byBiZSBub3RpZmllZCB3aGVuIHRoZSB1c2VyIGhpdHMgdW5kby9yZWRvIGluIHRoZSBjb250ZXh0bWVudS5cbiAgICAgIC8vIFRoZXJlZm9yZSB3ZSBzaW1wbHkgaW5zZXJ0IHR3byBlbGVtZW50cyBhcyBzb29uIGFzIHRoZSBjb250ZXh0bWVudSBnZXRzIG9wZW5lZC5cbiAgICAgIC8vIFRoZSBsYXN0IGVsZW1lbnQgYmVpbmcgaW5zZXJ0ZWQgd2lsbCBiZSBpbW1lZGlhdGVseSBiZSByZW1vdmVkIGFnYWluIGJ5IGEgZXhleENvbW1hbmQoXCJ1bmRvXCIpXG4gICAgICAvLyAgPT4gV2hlbiB0aGUgc2Vjb25kIGVsZW1lbnQgYXBwZWFycyBpbiB0aGUgZG9tIHRyZWUgdGhlbiB3ZSBrbm93IHRoZSB1c2VyIGNsaWNrZWQgXCJyZWRvXCIgaW4gdGhlIGNvbnRleHQgbWVudVxuICAgICAgLy8gID0+IFdoZW4gdGhlIGZpcnN0IGVsZW1lbnQgZGlzYXBwZWFycyBmcm9tIHRoZSBkb20gdHJlZSB0aGVuIHdlIGtub3cgdGhlIHVzZXIgY2xpY2tlZCBcInVuZG9cIiBpbiB0aGUgY29udGV4dCBtZW51XG4gICAgICBpZiAod3lzaWh0bWw1LmJyb3dzZXIuaGFzVW5kb0luQ29udGV4dE1lbnUoKSkge1xuICAgICAgICB2YXIgaW50ZXJ2YWwsIG9ic2VydmVkLCBjbGVhblVwID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgY2xlYW5UZW1wRWxlbWVudHMoZG9jKTtcbiAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTtcbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIGRvbS5vYnNlcnZlKHRoaXMuZWxlbWVudCwgXCJjb250ZXh0bWVudVwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBjbGVhblVwKCk7XG4gICAgICAgICAgdGhhdC5jb21wb3Nlci5zZWxlY3Rpb24uZXhlY3V0ZUFuZFJlc3RvcmVTaW1wbGUoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAodGhhdC5lbGVtZW50Lmxhc3RDaGlsZCkge1xuICAgICAgICAgICAgICB0aGF0LmNvbXBvc2VyLnNlbGVjdGlvbi5zZXRBZnRlcih0aGF0LmVsZW1lbnQubGFzdENoaWxkKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gZW5hYmxlIHVuZG8gYnV0dG9uIGluIGNvbnRleHQgbWVudVxuICAgICAgICAgICAgZG9jLmV4ZWNDb21tYW5kKFwiaW5zZXJ0SFRNTFwiLCBmYWxzZSwgVU5ET19IVE1MKTtcbiAgICAgICAgICAgIC8vIGVuYWJsZSByZWRvIGJ1dHRvbiBpbiBjb250ZXh0IG1lbnVcbiAgICAgICAgICAgIGRvYy5leGVjQ29tbWFuZChcImluc2VydEhUTUxcIiwgZmFsc2UsIFJFRE9fSFRNTCk7XG4gICAgICAgICAgICBkb2MuZXhlY0NvbW1hbmQoXCJ1bmRvXCIsIGZhbHNlLCBudWxsKTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIGludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoZG9jLmdldEVsZW1lbnRCeUlkKFwiX3d5c2lodG1sNS1yZWRvXCIpKSB7XG4gICAgICAgICAgICAgIGNsZWFuVXAoKTtcbiAgICAgICAgICAgICAgdGhhdC5yZWRvKCk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKCFkb2MuZ2V0RWxlbWVudEJ5SWQoXCJfd3lzaWh0bWw1LXVuZG9cIikpIHtcbiAgICAgICAgICAgICAgY2xlYW5VcCgpO1xuICAgICAgICAgICAgICB0aGF0LnVuZG8oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LCA0MDApO1xuXG4gICAgICAgICAgaWYgKCFvYnNlcnZlZCkge1xuICAgICAgICAgICAgb2JzZXJ2ZWQgPSB0cnVlO1xuICAgICAgICAgICAgZG9tLm9ic2VydmUoZG9jdW1lbnQsIFwibW91c2Vkb3duXCIsIGNsZWFuVXApO1xuICAgICAgICAgICAgZG9tLm9ic2VydmUoZG9jLCBbXCJtb3VzZWRvd25cIiwgXCJwYXN0ZVwiLCBcImN1dFwiLCBcImNvcHlcIl0sIGNsZWFuVXApO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHRoaXMuZWRpdG9yXG4gICAgICAgIC5vbihcIm5ld3dvcmQ6Y29tcG9zZXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdGhhdC50cmFuc2FjdCgpO1xuICAgICAgICB9KVxuICAgICAgICBcbiAgICAgICAgLm9uKFwiYmVmb3JlY29tbWFuZDpjb21wb3NlclwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICB0aGF0LnRyYW5zYWN0KCk7XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgXG4gICAgdHJhbnNhY3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHByZXZpb3VzSHRtbCAgICAgID0gdGhpcy5oaXN0b3J5U3RyW3RoaXMucG9zaXRpb24gLSAxXSxcbiAgICAgICAgICBjdXJyZW50SHRtbCAgICAgICA9IHRoaXMuY29tcG9zZXIuZ2V0VmFsdWUoKTtcbiAgICAgIFxuICAgICAgaWYgKGN1cnJlbnRIdG1sID09PSBwcmV2aW91c0h0bWwpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgXG4gICAgICB2YXIgbGVuZ3RoID0gdGhpcy5oaXN0b3J5U3RyLmxlbmd0aCA9IHRoaXMuaGlzdG9yeURvbS5sZW5ndGggPSB0aGlzLnBvc2l0aW9uO1xuICAgICAgaWYgKGxlbmd0aCA+IE1BWF9ISVNUT1JZX0VOVFJJRVMpIHtcbiAgICAgICAgdGhpcy5oaXN0b3J5U3RyLnNoaWZ0KCk7XG4gICAgICAgIHRoaXMuaGlzdG9yeURvbS5zaGlmdCgpO1xuICAgICAgICB0aGlzLnBvc2l0aW9uLS07XG4gICAgICB9XG4gICAgICBcbiAgICAgIHRoaXMucG9zaXRpb24rKztcbiAgICAgIFxuICAgICAgdmFyIHJhbmdlICAgPSB0aGlzLmNvbXBvc2VyLnNlbGVjdGlvbi5nZXRSYW5nZSgpLFxuICAgICAgICAgIG5vZGUgICAgPSByYW5nZS5zdGFydENvbnRhaW5lciB8fCB0aGlzLmVsZW1lbnQsXG4gICAgICAgICAgb2Zmc2V0ICA9IHJhbmdlLnN0YXJ0T2Zmc2V0ICAgIHx8IDAsXG4gICAgICAgICAgZWxlbWVudCxcbiAgICAgICAgICBwb3NpdGlvbjtcbiAgICAgIFxuICAgICAgaWYgKG5vZGUubm9kZVR5cGUgPT09IHd5c2lodG1sNS5FTEVNRU5UX05PREUpIHtcbiAgICAgICAgZWxlbWVudCA9IG5vZGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBlbGVtZW50ICA9IG5vZGUucGFyZW50Tm9kZTtcbiAgICAgICAgcG9zaXRpb24gPSB0aGlzLmdldENoaWxkTm9kZUluZGV4KGVsZW1lbnQsIG5vZGUpO1xuICAgICAgfVxuICAgICAgXG4gICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShEQVRBX0FUVFJfT0ZGU0VULCBvZmZzZXQpO1xuICAgICAgaWYgKHR5cGVvZihwb3NpdGlvbikgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoREFUQV9BVFRSX05PREUsIHBvc2l0aW9uKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdmFyIGNsb25lID0gdGhpcy5lbGVtZW50LmNsb25lTm9kZSghIWN1cnJlbnRIdG1sKTtcbiAgICAgIHRoaXMuaGlzdG9yeURvbS5wdXNoKGNsb25lKTtcbiAgICAgIHRoaXMuaGlzdG9yeVN0ci5wdXNoKGN1cnJlbnRIdG1sKTtcbiAgICAgIFxuICAgICAgZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoREFUQV9BVFRSX09GRlNFVCk7XG4gICAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShEQVRBX0FUVFJfTk9ERSk7XG4gICAgfSxcbiAgICBcbiAgICB1bmRvOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMudHJhbnNhY3QoKTtcbiAgICAgIFxuICAgICAgaWYgKCF0aGlzLnVuZG9Qb3NzaWJsZSgpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdGhpcy5zZXQodGhpcy5oaXN0b3J5RG9tWy0tdGhpcy5wb3NpdGlvbiAtIDFdKTtcbiAgICAgIHRoaXMuZWRpdG9yLmZpcmUoXCJ1bmRvOmNvbXBvc2VyXCIpO1xuICAgIH0sXG4gICAgXG4gICAgcmVkbzogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIXRoaXMucmVkb1Bvc3NpYmxlKCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgXG4gICAgICB0aGlzLnNldCh0aGlzLmhpc3RvcnlEb21bKyt0aGlzLnBvc2l0aW9uIC0gMV0pO1xuICAgICAgdGhpcy5lZGl0b3IuZmlyZShcInJlZG86Y29tcG9zZXJcIik7XG4gICAgfSxcbiAgICBcbiAgICB1bmRvUG9zc2libGU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMucG9zaXRpb24gPiAxO1xuICAgIH0sXG4gICAgXG4gICAgcmVkb1Bvc3NpYmxlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLnBvc2l0aW9uIDwgdGhpcy5oaXN0b3J5U3RyLmxlbmd0aDtcbiAgICB9LFxuICAgIFxuICAgIHNldDogZnVuY3Rpb24oaGlzdG9yeUVudHJ5KSB7XG4gICAgICB0aGlzLmVsZW1lbnQuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgIFxuICAgICAgdmFyIGkgPSAwLFxuICAgICAgICAgIGNoaWxkTm9kZXMgPSBoaXN0b3J5RW50cnkuY2hpbGROb2RlcyxcbiAgICAgICAgICBsZW5ndGggPSBoaXN0b3J5RW50cnkuY2hpbGROb2Rlcy5sZW5ndGg7XG4gICAgICBcbiAgICAgIGZvciAoOyBpPGxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChjaGlsZE5vZGVzW2ldLmNsb25lTm9kZSh0cnVlKSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIFJlc3RvcmUgc2VsZWN0aW9uXG4gICAgICB2YXIgb2Zmc2V0LFxuICAgICAgICAgIG5vZGUsXG4gICAgICAgICAgcG9zaXRpb247XG4gICAgICBcbiAgICAgIGlmIChoaXN0b3J5RW50cnkuaGFzQXR0cmlidXRlKERBVEFfQVRUUl9PRkZTRVQpKSB7XG4gICAgICAgIG9mZnNldCAgICA9IGhpc3RvcnlFbnRyeS5nZXRBdHRyaWJ1dGUoREFUQV9BVFRSX09GRlNFVCk7XG4gICAgICAgIHBvc2l0aW9uICA9IGhpc3RvcnlFbnRyeS5nZXRBdHRyaWJ1dGUoREFUQV9BVFRSX05PREUpO1xuICAgICAgICBub2RlICAgICAgPSB0aGlzLmVsZW1lbnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub2RlICAgICAgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihcIltcIiArIERBVEFfQVRUUl9PRkZTRVQgKyBcIl1cIikgfHwgdGhpcy5lbGVtZW50O1xuICAgICAgICBvZmZzZXQgICAgPSBub2RlLmdldEF0dHJpYnV0ZShEQVRBX0FUVFJfT0ZGU0VUKTtcbiAgICAgICAgcG9zaXRpb24gID0gbm9kZS5nZXRBdHRyaWJ1dGUoREFUQV9BVFRSX05PREUpO1xuICAgICAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZShEQVRBX0FUVFJfT0ZGU0VUKTtcbiAgICAgICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGUoREFUQV9BVFRSX05PREUpO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAocG9zaXRpb24gIT09IG51bGwpIHtcbiAgICAgICAgbm9kZSA9IHRoaXMuZ2V0Q2hpbGROb2RlQnlJbmRleChub2RlLCArcG9zaXRpb24pO1xuICAgICAgfVxuICAgICAgXG4gICAgICB0aGlzLmNvbXBvc2VyLnNlbGVjdGlvbi5zZXQobm9kZSwgb2Zmc2V0KTtcbiAgICB9LFxuICAgIFxuICAgIGdldENoaWxkTm9kZUluZGV4OiBmdW5jdGlvbihwYXJlbnQsIGNoaWxkKSB7XG4gICAgICB2YXIgaSAgICAgICAgICAgPSAwLFxuICAgICAgICAgIGNoaWxkTm9kZXMgID0gcGFyZW50LmNoaWxkTm9kZXMsXG4gICAgICAgICAgbGVuZ3RoICAgICAgPSBjaGlsZE5vZGVzLmxlbmd0aDtcbiAgICAgIGZvciAoOyBpPGxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChjaGlsZE5vZGVzW2ldID09PSBjaGlsZCkge1xuICAgICAgICAgIHJldHVybiBpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBcbiAgICBnZXRDaGlsZE5vZGVCeUluZGV4OiBmdW5jdGlvbihwYXJlbnQsIGluZGV4KSB7XG4gICAgICByZXR1cm4gcGFyZW50LmNoaWxkTm9kZXNbaW5kZXhdO1xuICAgIH1cbiAgfSk7XG59KSh3eXNpaHRtbDUpO1xuLyoqXG4gKiBUT0RPOiB0aGUgZm9sbG93aW5nIG1ldGhvZHMgc3RpbGwgbmVlZCB1bml0IHRlc3QgY292ZXJhZ2VcbiAqL1xud3lzaWh0bWw1LnZpZXdzLlZpZXcgPSBCYXNlLmV4dGVuZChcbiAgLyoqIEBzY29wZSB3eXNpaHRtbDUudmlld3MuVmlldy5wcm90b3R5cGUgKi8ge1xuICBjb25zdHJ1Y3RvcjogZnVuY3Rpb24ocGFyZW50LCB0ZXh0YXJlYUVsZW1lbnQsIGNvbmZpZykge1xuICAgIHRoaXMucGFyZW50ICAgPSBwYXJlbnQ7XG4gICAgdGhpcy5lbGVtZW50ICA9IHRleHRhcmVhRWxlbWVudDtcbiAgICB0aGlzLmNvbmZpZyAgID0gY29uZmlnO1xuICAgIFxuICAgIHRoaXMuX29ic2VydmVWaWV3Q2hhbmdlKCk7XG4gIH0sXG4gIFxuICBfb2JzZXJ2ZVZpZXdDaGFuZ2U6IGZ1bmN0aW9uKCkge1xuICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICB0aGlzLnBhcmVudC5vbihcImJlZm9yZWxvYWRcIiwgZnVuY3Rpb24oKSB7XG4gICAgICB0aGF0LnBhcmVudC5vbihcImNoYW5nZV92aWV3XCIsIGZ1bmN0aW9uKHZpZXcpIHtcbiAgICAgICAgaWYgKHZpZXcgPT09IHRoYXQubmFtZSkge1xuICAgICAgICAgIHRoYXQucGFyZW50LmN1cnJlbnRWaWV3ID0gdGhhdDtcbiAgICAgICAgICB0aGF0LnNob3coKTtcbiAgICAgICAgICAvLyBVc2luZyB0aW55IGRlbGF5IGhlcmUgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIHBsYWNlaG9sZGVyIGlzIHNldCBiZWZvcmUgZm9jdXNpbmdcbiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0aGF0LmZvY3VzKCk7IH0sIDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoYXQuaGlkZSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSxcbiAgXG4gIGZvY3VzOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5lbGVtZW50Lm93bmVyRG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIjpmb2N1c1wiKSA9PT0gdGhpcy5lbGVtZW50KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIHRyeSB7IHRoaXMuZWxlbWVudC5mb2N1cygpOyB9IGNhdGNoKGUpIHt9XG4gIH0sXG4gIFxuICBoaWRlOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLmVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICB9LFxuICBcbiAgc2hvdzogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5lbGVtZW50LnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xuICB9LFxuICBcbiAgZGlzYWJsZTogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIFwiZGlzYWJsZWRcIik7XG4gIH0sXG4gIFxuICBlbmFibGU6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTtcbiAgfVxufSk7KGZ1bmN0aW9uKHd5c2lodG1sNSkge1xuICB2YXIgZG9tICAgICAgID0gd3lzaWh0bWw1LmRvbSxcbiAgICAgIGJyb3dzZXIgICA9IHd5c2lodG1sNS5icm93c2VyO1xuICBcbiAgd3lzaWh0bWw1LnZpZXdzLkNvbXBvc2VyID0gd3lzaWh0bWw1LnZpZXdzLlZpZXcuZXh0ZW5kKFxuICAgIC8qKiBAc2NvcGUgd3lzaWh0bWw1LnZpZXdzLkNvbXBvc2VyLnByb3RvdHlwZSAqLyB7XG4gICAgbmFtZTogXCJjb21wb3NlclwiLFxuXG4gICAgLy8gTmVlZGVkIGZvciBmaXJlZm94IGluIG9yZGVyIHRvIGRpc3BsYXkgYSBwcm9wZXIgY2FyZXQgaW4gYW4gZW1wdHkgY29udGVudEVkaXRhYmxlXG4gICAgQ0FSRVRfSEFDSzogXCI8YnI+XCIsXG5cbiAgICBjb25zdHJ1Y3RvcjogZnVuY3Rpb24ocGFyZW50LCB0ZXh0YXJlYUVsZW1lbnQsIGNvbmZpZykge1xuICAgICAgdGhpcy5iYXNlKHBhcmVudCwgdGV4dGFyZWFFbGVtZW50LCBjb25maWcpO1xuICAgICAgdGhpcy50ZXh0YXJlYSA9IHRoaXMucGFyZW50LnRleHRhcmVhO1xuICAgICAgdGhpcy5faW5pdFNhbmRib3goKTtcbiAgICB9LFxuXG4gICAgY2xlYXI6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5lbGVtZW50LmlubmVySFRNTCA9IGJyb3dzZXIuZGlzcGxheXNDYXJldEluRW1wdHlDb250ZW50RWRpdGFibGVDb3JyZWN0bHkoKSA/IFwiXCIgOiB0aGlzLkNBUkVUX0hBQ0s7XG4gICAgfSxcblxuICAgIGdldFZhbHVlOiBmdW5jdGlvbihwYXJzZSkge1xuICAgICAgdmFyIHZhbHVlID0gdGhpcy5pc0VtcHR5KCkgPyBcIlwiIDogd3lzaWh0bWw1LnF1aXJrcy5nZXRDb3JyZWN0SW5uZXJIVE1MKHRoaXMuZWxlbWVudCk7XG4gICAgICBcbiAgICAgIGlmIChwYXJzZSkge1xuICAgICAgICB2YWx1ZSA9IHRoaXMucGFyZW50LnBhcnNlKHZhbHVlKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG5cbiAgICBzZXRWYWx1ZTogZnVuY3Rpb24oaHRtbCwgcGFyc2UpIHtcbiAgICAgIGlmIChwYXJzZSkge1xuICAgICAgICBodG1sID0gdGhpcy5wYXJlbnQucGFyc2UoaHRtbCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHRyeSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5pbm5lckhUTUwgPSBodG1sO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICB0aGlzLmVsZW1lbnQuaW5uZXJUZXh0ID0gaHRtbDtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc2hvdzogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmlmcmFtZS5zdHlsZS5kaXNwbGF5ID0gdGhpcy5fZGlzcGxheVN0eWxlIHx8IFwiXCI7XG4gICAgICBcbiAgICAgIGlmICghdGhpcy50ZXh0YXJlYS5lbGVtZW50LmRpc2FibGVkKSB7XG4gICAgICAgIC8vIEZpcmVmb3ggbmVlZHMgdGhpcywgb3RoZXJ3aXNlIGNvbnRlbnRFZGl0YWJsZSBiZWNvbWVzIHVuZWRpdGFibGVcbiAgICAgICAgdGhpcy5kaXNhYmxlKCk7XG4gICAgICAgIHRoaXMuZW5hYmxlKCk7XG4gICAgICB9XG4gICAgfSxcblxuICAgIGhpZGU6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5fZGlzcGxheVN0eWxlID0gZG9tLmdldFN0eWxlKFwiZGlzcGxheVwiKS5mcm9tKHRoaXMuaWZyYW1lKTtcbiAgICAgIGlmICh0aGlzLl9kaXNwbGF5U3R5bGUgPT09IFwibm9uZVwiKSB7XG4gICAgICAgIHRoaXMuX2Rpc3BsYXlTdHlsZSA9IG51bGw7XG4gICAgICB9XG4gICAgICB0aGlzLmlmcmFtZS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgfSxcblxuICAgIGRpc2FibGU6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5wYXJlbnQuZmlyZShcImRpc2FibGU6Y29tcG9zZXJcIik7XG4gICAgICB0aGlzLmVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKFwiY29udGVudEVkaXRhYmxlXCIpO1xuICAgIH0sXG5cbiAgICBlbmFibGU6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5wYXJlbnQuZmlyZShcImVuYWJsZTpjb21wb3NlclwiKTtcbiAgICAgIHRoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJjb250ZW50RWRpdGFibGVcIiwgXCJ0cnVlXCIpO1xuICAgIH0sXG5cbiAgICBmb2N1czogZnVuY3Rpb24oc2V0VG9FbmQpIHtcbiAgICAgIC8vIElFIDggZmlyZXMgdGhlIGZvY3VzIGV2ZW50IGFmdGVyIC5mb2N1cygpXG4gICAgICAvLyBUaGlzIGlzIG5lZWRlZCBieSBvdXIgc2ltdWxhdGVfcGxhY2Vob2xkZXIuanMgdG8gd29ya1xuICAgICAgLy8gdGhlcmVmb3JlIHdlIGNsZWFyIGl0IG91cnNlbHZlcyB0aGlzIHRpbWVcbiAgICAgIGlmICh3eXNpaHRtbDUuYnJvd3Nlci5kb2VzQXN5bmNGb2N1cygpICYmIHRoaXMuaGFzUGxhY2Vob2xkZXJTZXQoKSkge1xuICAgICAgICB0aGlzLmNsZWFyKCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHRoaXMuYmFzZSgpO1xuICAgICAgXG4gICAgICB2YXIgbGFzdENoaWxkID0gdGhpcy5lbGVtZW50Lmxhc3RDaGlsZDtcbiAgICAgIGlmIChzZXRUb0VuZCAmJiBsYXN0Q2hpbGQpIHtcbiAgICAgICAgaWYgKGxhc3RDaGlsZC5ub2RlTmFtZSA9PT0gXCJCUlwiKSB7XG4gICAgICAgICAgdGhpcy5zZWxlY3Rpb24uc2V0QmVmb3JlKHRoaXMuZWxlbWVudC5sYXN0Q2hpbGQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuc2VsZWN0aW9uLnNldEFmdGVyKHRoaXMuZWxlbWVudC5sYXN0Q2hpbGQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIGdldFRleHRDb250ZW50OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkb20uZ2V0VGV4dENvbnRlbnQodGhpcy5lbGVtZW50KTtcbiAgICB9LFxuXG4gICAgaGFzUGxhY2Vob2xkZXJTZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0VGV4dENvbnRlbnQoKSA9PSB0aGlzLnRleHRhcmVhLmVsZW1lbnQuZ2V0QXR0cmlidXRlKFwicGxhY2Vob2xkZXJcIikgJiYgdGhpcy5wbGFjZWhvbGRlclNldDtcbiAgICB9LFxuXG4gICAgaXNFbXB0eTogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgaW5uZXJIVE1MID0gdGhpcy5lbGVtZW50LmlubmVySFRNTC50b0xvd2VyQ2FzZSgpO1xuICAgICAgcmV0dXJuIGlubmVySFRNTCA9PT0gXCJcIiAgICAgICAgICAgIHx8XG4gICAgICAgICAgICAgaW5uZXJIVE1MID09PSBcIjxicj5cIiAgICAgICAgfHxcbiAgICAgICAgICAgICBpbm5lckhUTUwgPT09IFwiPHA+PC9wPlwiICAgICB8fFxuICAgICAgICAgICAgIGlubmVySFRNTCA9PT0gXCI8cD48YnI+PC9wPlwiIHx8XG4gICAgICAgICAgICAgdGhpcy5oYXNQbGFjZWhvbGRlclNldCgpO1xuICAgIH0sXG5cbiAgICBfaW5pdFNhbmRib3g6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgXG4gICAgICB0aGlzLnNhbmRib3ggPSBuZXcgZG9tLlNhbmRib3goZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoYXQuX2NyZWF0ZSgpO1xuICAgICAgfSwge1xuICAgICAgICBzdHlsZXNoZWV0czogIHRoaXMuY29uZmlnLnN0eWxlc2hlZXRzXG4gICAgICB9KTtcbiAgICAgIHRoaXMuaWZyYW1lICA9IHRoaXMuc2FuZGJveC5nZXRJZnJhbWUoKTtcbiAgICAgIFxuICAgICAgdmFyIHRleHRhcmVhRWxlbWVudCA9IHRoaXMudGV4dGFyZWEuZWxlbWVudDtcbiAgICAgIGRvbS5pbnNlcnQodGhpcy5pZnJhbWUpLmFmdGVyKHRleHRhcmVhRWxlbWVudCk7XG4gICAgICBcbiAgICAgIC8vIENyZWF0ZSBoaWRkZW4gZmllbGQgd2hpY2ggdGVsbHMgdGhlIHNlcnZlciBhZnRlciBzdWJtaXQsIHRoYXQgdGhlIHVzZXIgdXNlZCBhbiB3eXNpd3lnIGVkaXRvclxuICAgICAgaWYgKHRleHRhcmVhRWxlbWVudC5mb3JtKSB7XG4gICAgICAgIHZhciBoaWRkZW5GaWVsZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICAgICAgaGlkZGVuRmllbGQudHlwZSAgID0gXCJoaWRkZW5cIjtcbiAgICAgICAgaGlkZGVuRmllbGQubmFtZSAgID0gXCJfd3lzaWh0bWw1X21vZGVcIjtcbiAgICAgICAgaGlkZGVuRmllbGQudmFsdWUgID0gMTtcbiAgICAgICAgZG9tLmluc2VydChoaWRkZW5GaWVsZCkuYWZ0ZXIodGV4dGFyZWFFbGVtZW50KTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgX2NyZWF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICBcbiAgICAgIHRoaXMuZG9jICAgICAgICAgICAgICAgID0gdGhpcy5zYW5kYm94LmdldERvY3VtZW50KCk7XG4gICAgICB0aGlzLmVsZW1lbnQgICAgICAgICAgICA9IHRoaXMuZG9jLmJvZHk7XG4gICAgICB0aGlzLnRleHRhcmVhICAgICAgICAgICA9IHRoaXMucGFyZW50LnRleHRhcmVhO1xuICAgICAgdGhpcy5lbGVtZW50LmlubmVySFRNTCAgPSB0aGlzLnRleHRhcmVhLmdldFZhbHVlKHRydWUpO1xuICAgICAgXG4gICAgICAvLyBNYWtlIHN1cmUgb3VyIHNlbGVjdGlvbiBoYW5kbGVyIGlzIHJlYWR5XG4gICAgICB0aGlzLnNlbGVjdGlvbiA9IG5ldyB3eXNpaHRtbDUuU2VsZWN0aW9uKHRoaXMucGFyZW50KTtcbiAgICAgIFxuICAgICAgLy8gTWFrZSBzdXJlIGNvbW1hbmRzIGRpc3BhdGNoZXIgaXMgcmVhZHlcbiAgICAgIHRoaXMuY29tbWFuZHMgID0gbmV3IHd5c2lodG1sNS5Db21tYW5kcyh0aGlzLnBhcmVudCk7XG4gICAgICBcbiAgICAgIGRvbS5jb3B5QXR0cmlidXRlcyhbXG4gICAgICAgIFwiY2xhc3NOYW1lXCIsIFwic3BlbGxjaGVja1wiLCBcInRpdGxlXCIsIFwibGFuZ1wiLCBcImRpclwiLCBcImFjY2Vzc0tleVwiXG4gICAgICBdKS5mcm9tKHRoaXMudGV4dGFyZWEuZWxlbWVudCkudG8odGhpcy5lbGVtZW50KTtcbiAgICAgIFxuICAgICAgZG9tLmFkZENsYXNzKHRoaXMuZWxlbWVudCwgdGhpcy5jb25maWcuY29tcG9zZXJDbGFzc05hbWUpO1xuICAgICAgLy8gXG4gICAgICAvLyAvLyBNYWtlIHRoZSBlZGl0b3IgbG9vayBsaWtlIHRoZSBvcmlnaW5hbCB0ZXh0YXJlYSwgYnkgc3luY2luZyBzdHlsZXNcbiAgICAgIGlmICh0aGlzLmNvbmZpZy5zdHlsZSkge1xuICAgICAgICB0aGlzLnN0eWxlKCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIHRoaXMub2JzZXJ2ZSgpO1xuICAgICAgXG4gICAgICB2YXIgbmFtZSA9IHRoaXMuY29uZmlnLm5hbWU7XG4gICAgICBpZiAobmFtZSkge1xuICAgICAgICBkb20uYWRkQ2xhc3ModGhpcy5lbGVtZW50LCBuYW1lKTtcbiAgICAgICAgZG9tLmFkZENsYXNzKHRoaXMuaWZyYW1lLCBuYW1lKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdGhpcy5lbmFibGUoKTtcbiAgICAgIFxuICAgICAgaWYgKHRoaXMudGV4dGFyZWEuZWxlbWVudC5kaXNhYmxlZCkge1xuICAgICAgICB0aGlzLmRpc2FibGUoKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gU2ltdWxhdGUgaHRtbDUgcGxhY2Vob2xkZXIgYXR0cmlidXRlIG9uIGNvbnRlbnRFZGl0YWJsZSBlbGVtZW50XG4gICAgICB2YXIgcGxhY2Vob2xkZXJUZXh0ID0gdHlwZW9mKHRoaXMuY29uZmlnLnBsYWNlaG9sZGVyKSA9PT0gXCJzdHJpbmdcIlxuICAgICAgICA/IHRoaXMuY29uZmlnLnBsYWNlaG9sZGVyXG4gICAgICAgIDogdGhpcy50ZXh0YXJlYS5lbGVtZW50LmdldEF0dHJpYnV0ZShcInBsYWNlaG9sZGVyXCIpO1xuICAgICAgaWYgKHBsYWNlaG9sZGVyVGV4dCkge1xuICAgICAgICBkb20uc2ltdWxhdGVQbGFjZWhvbGRlcih0aGlzLnBhcmVudCwgdGhpcywgcGxhY2Vob2xkZXJUZXh0KTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gTWFrZSBzdXJlIHRoYXQgdGhlIGJyb3dzZXIgYXZvaWRzIHVzaW5nIGlubGluZSBzdHlsZXMgd2hlbmV2ZXIgcG9zc2libGVcbiAgICAgIHRoaXMuY29tbWFuZHMuZXhlYyhcInN0eWxlV2l0aENTU1wiLCBmYWxzZSk7XG4gICAgICBcbiAgICAgIHRoaXMuX2luaXRBdXRvTGlua2luZygpO1xuICAgICAgdGhpcy5faW5pdE9iamVjdFJlc2l6aW5nKCk7XG4gICAgICB0aGlzLl9pbml0VW5kb01hbmFnZXIoKTtcbiAgICAgIHRoaXMuX2luaXRMaW5lQnJlYWtpbmcoKTtcbiAgICAgIFxuICAgICAgLy8gU2ltdWxhdGUgaHRtbDUgYXV0b2ZvY3VzIG9uIGNvbnRlbnRFZGl0YWJsZSBlbGVtZW50XG4gICAgICAvLyBUaGlzIGRvZXNuJ3Qgd29yayBvbiBJT1MgKDUuMS4xKVxuICAgICAgaWYgKCh0aGlzLnRleHRhcmVhLmVsZW1lbnQuaGFzQXR0cmlidXRlKFwiYXV0b2ZvY3VzXCIpIHx8IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCI6Zm9jdXNcIikgPT0gdGhpcy50ZXh0YXJlYS5lbGVtZW50KSAmJiAhYnJvd3Nlci5pc0lvcygpKSB7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IHRoYXQuZm9jdXModHJ1ZSk7IH0sIDEwMCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIElFIHNvbWV0aW1lcyBsZWF2ZXMgYSBzaW5nbGUgcGFyYWdyYXBoLCB3aGljaCBjYW4ndCBiZSByZW1vdmVkIGJ5IHRoZSB1c2VyXG4gICAgICBpZiAoIWJyb3dzZXIuY2xlYXJzQ29udGVudEVkaXRhYmxlQ29ycmVjdGx5KCkpIHtcbiAgICAgICAgd3lzaWh0bWw1LnF1aXJrcy5lbnN1cmVQcm9wZXJDbGVhcmluZyh0aGlzKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gU2V0IHVwIGEgc3luYyB0aGF0IG1ha2VzIHN1cmUgdGhhdCB0ZXh0YXJlYSBhbmQgZWRpdG9yIGhhdmUgdGhlIHNhbWUgY29udGVudFxuICAgICAgaWYgKHRoaXMuaW5pdFN5bmMgJiYgdGhpcy5jb25maWcuc3luYykge1xuICAgICAgICB0aGlzLmluaXRTeW5jKCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIE9rYXkgaGlkZSB0aGUgdGV4dGFyZWEsIHdlIGFyZSByZWFkeSB0byBnb1xuICAgICAgdGhpcy50ZXh0YXJlYS5oaWRlKCk7XG4gICAgICBcbiAgICAgIC8vIEZpcmUgZ2xvYmFsIChiZWZvcmUtKWxvYWQgZXZlbnRcbiAgICAgIHRoaXMucGFyZW50LmZpcmUoXCJiZWZvcmVsb2FkXCIpLmZpcmUoXCJsb2FkXCIpO1xuICAgIH0sXG5cbiAgICBfaW5pdEF1dG9MaW5raW5nOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB0aGF0ICAgICAgICAgICAgICAgICAgICAgICAgICAgPSB0aGlzLFxuICAgICAgICAgIHN1cHBvcnRzRGlzYWJsaW5nT2ZBdXRvTGlua2luZyA9IGJyb3dzZXIuY2FuRGlzYWJsZUF1dG9MaW5raW5nKCksXG4gICAgICAgICAgc3VwcG9ydHNBdXRvTGlua2luZyAgICAgICAgICAgID0gYnJvd3Nlci5kb2VzQXV0b0xpbmtpbmdJbkNvbnRlbnRFZGl0YWJsZSgpO1xuICAgICAgaWYgKHN1cHBvcnRzRGlzYWJsaW5nT2ZBdXRvTGlua2luZykge1xuICAgICAgICB0aGlzLmNvbW1hbmRzLmV4ZWMoXCJhdXRvVXJsRGV0ZWN0XCIsIGZhbHNlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLmNvbmZpZy5hdXRvTGluaykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIE9ubHkgZG8gdGhlIGF1dG8gbGlua2luZyBieSBvdXJzZWx2ZXMgd2hlbiB0aGUgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgYXV0byBsaW5raW5nXG4gICAgICAvLyBPUiB3aGVuIGhlIHN1cHBvcnRzIGF1dG8gbGlua2luZyBidXQgd2Ugd2VyZSBhYmxlIHRvIHR1cm4gaXQgb2ZmIChJRTkrKVxuICAgICAgaWYgKCFzdXBwb3J0c0F1dG9MaW5raW5nIHx8IChzdXBwb3J0c0F1dG9MaW5raW5nICYmIHN1cHBvcnRzRGlzYWJsaW5nT2ZBdXRvTGlua2luZykpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQub24oXCJuZXd3b3JkOmNvbXBvc2VyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmIChkb20uZ2V0VGV4dENvbnRlbnQodGhhdC5lbGVtZW50KS5tYXRjaChkb20uYXV0b0xpbmsuVVJMX1JFR19FWFApKSB7XG4gICAgICAgICAgICB0aGF0LnNlbGVjdGlvbi5leGVjdXRlQW5kUmVzdG9yZShmdW5jdGlvbihzdGFydENvbnRhaW5lciwgZW5kQ29udGFpbmVyKSB7XG4gICAgICAgICAgICAgIGRvbS5hdXRvTGluayhlbmRDb250YWluZXIucGFyZW50Tm9kZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgZG9tLm9ic2VydmUodGhpcy5lbGVtZW50LCBcImJsdXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgZG9tLmF1dG9MaW5rKHRoYXQuZWxlbWVudCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICAvLyBBc3N1bWluZyB3ZSBoYXZlIHRoZSBmb2xsb3dpbmc6XG4gICAgICAvLyAgPGEgaHJlZj1cImh0dHA6Ly93d3cuZ29vZ2xlLmRlXCI+aHR0cDovL3d3dy5nb29nbGUuZGU8L2E+XG4gICAgICAvLyBJZiBhIHVzZXIgbm93IGNoYW5nZXMgdGhlIHVybCBpbiB0aGUgaW5uZXJIVE1MIHdlIHdhbnQgdG8gbWFrZSBzdXJlIHRoYXRcbiAgICAgIC8vIGl0J3Mgc3luY2hyb25pemVkIHdpdGggdGhlIGhyZWYgYXR0cmlidXRlIChhcyBsb25nIGFzIHRoZSBpbm5lckhUTUwgaXMgc3RpbGwgYSB1cmwpXG4gICAgICB2YXIgLy8gVXNlIGEgbGl2ZSBOb2RlTGlzdCB0byBjaGVjayB3aGV0aGVyIHRoZXJlIGFyZSBhbnkgbGlua3MgaW4gdGhlIGRvY3VtZW50XG4gICAgICAgICAgbGlua3MgICAgICAgICAgID0gdGhpcy5zYW5kYm94LmdldERvY3VtZW50KCkuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJhXCIpLFxuICAgICAgICAgIC8vIFRoZSBhdXRvTGluayBoZWxwZXIgbWV0aG9kIHJldmVhbHMgYSByZWcgZXhwIHRvIGRldGVjdCBjb3JyZWN0IHVybHNcbiAgICAgICAgICB1cmxSZWdFeHAgICAgICAgPSBkb20uYXV0b0xpbmsuVVJMX1JFR19FWFAsXG4gICAgICAgICAgZ2V0VGV4dENvbnRlbnQgID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICAgICAgdmFyIHRleHRDb250ZW50ID0gd3lzaWh0bWw1Lmxhbmcuc3RyaW5nKGRvbS5nZXRUZXh0Q29udGVudChlbGVtZW50KSkudHJpbSgpO1xuICAgICAgICAgICAgaWYgKHRleHRDb250ZW50LnN1YnN0cigwLCA0KSA9PT0gXCJ3d3cuXCIpIHtcbiAgICAgICAgICAgICAgdGV4dENvbnRlbnQgPSBcImh0dHA6Ly9cIiArIHRleHRDb250ZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRleHRDb250ZW50O1xuICAgICAgICAgIH07XG5cbiAgICAgIGRvbS5vYnNlcnZlKHRoaXMuZWxlbWVudCwgXCJrZXlkb3duXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIGlmICghbGlua3MubGVuZ3RoKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHNlbGVjdGVkTm9kZSA9IHRoYXQuc2VsZWN0aW9uLmdldFNlbGVjdGVkTm9kZShldmVudC50YXJnZXQub3duZXJEb2N1bWVudCksXG4gICAgICAgICAgICBsaW5rICAgICAgICAgPSBkb20uZ2V0UGFyZW50RWxlbWVudChzZWxlY3RlZE5vZGUsIHsgbm9kZU5hbWU6IFwiQVwiIH0sIDQpLFxuICAgICAgICAgICAgdGV4dENvbnRlbnQ7XG5cbiAgICAgICAgaWYgKCFsaW5rKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGV4dENvbnRlbnQgPSBnZXRUZXh0Q29udGVudChsaW5rKTtcbiAgICAgICAgLy8ga2V5ZG93biBpcyBmaXJlZCBiZWZvcmUgdGhlIGFjdHVhbCBjb250ZW50IGlzIGNoYW5nZWRcbiAgICAgICAgLy8gdGhlcmVmb3JlIHdlIHNldCBhIHRpbWVvdXQgdG8gY2hhbmdlIHRoZSBocmVmXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgdmFyIG5ld1RleHRDb250ZW50ID0gZ2V0VGV4dENvbnRlbnQobGluayk7XG4gICAgICAgICAgaWYgKG5ld1RleHRDb250ZW50ID09PSB0ZXh0Q29udGVudCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIE9ubHkgc2V0IGhyZWYgd2hlbiBuZXcgaHJlZiBsb29rcyBsaWtlIGEgdmFsaWQgdXJsXG4gICAgICAgICAgaWYgKG5ld1RleHRDb250ZW50Lm1hdGNoKHVybFJlZ0V4cCkpIHtcbiAgICAgICAgICAgIGxpbmsuc2V0QXR0cmlidXRlKFwiaHJlZlwiLCBuZXdUZXh0Q29udGVudCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCAwKTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBfaW5pdE9iamVjdFJlc2l6aW5nOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuY29tbWFuZHMuZXhlYyhcImVuYWJsZU9iamVjdFJlc2l6aW5nXCIsIHRydWUpO1xuICAgICAgXG4gICAgICAvLyBJRSBzZXRzIGlubGluZSBzdHlsZXMgYWZ0ZXIgcmVzaXppbmcgb2JqZWN0c1xuICAgICAgLy8gVGhlIGZvbGxvd2luZyBsaW5lcyBtYWtlIHN1cmUgdGhhdCB0aGUgd2lkdGgvaGVpZ2h0IGNzcyBwcm9wZXJ0aWVzXG4gICAgICAvLyBhcmUgY29waWVkIG92ZXIgdG8gdGhlIHdpZHRoL2hlaWdodCBhdHRyaWJ1dGVzXG4gICAgICBpZiAoYnJvd3Nlci5zdXBwb3J0c0V2ZW50KFwicmVzaXplZW5kXCIpKSB7XG4gICAgICAgIHZhciBwcm9wZXJ0aWVzICAgICAgICA9IFtcIndpZHRoXCIsIFwiaGVpZ2h0XCJdLFxuICAgICAgICAgICAgcHJvcGVydGllc0xlbmd0aCAgPSBwcm9wZXJ0aWVzLmxlbmd0aCxcbiAgICAgICAgICAgIGVsZW1lbnQgICAgICAgICAgID0gdGhpcy5lbGVtZW50O1xuICAgICAgICBcbiAgICAgICAgZG9tLm9ic2VydmUoZWxlbWVudCwgXCJyZXNpemVlbmRcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICB2YXIgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0IHx8IGV2ZW50LnNyY0VsZW1lbnQsXG4gICAgICAgICAgICAgIHN0eWxlICA9IHRhcmdldC5zdHlsZSxcbiAgICAgICAgICAgICAgaSAgICAgID0gMCxcbiAgICAgICAgICAgICAgcHJvcGVydHk7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKHRhcmdldC5ub2RlTmFtZSAhPT0gXCJJTUdcIikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICBmb3IgKDsgaTxwcm9wZXJ0aWVzTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHByb3BlcnR5ID0gcHJvcGVydGllc1tpXTtcbiAgICAgICAgICAgIGlmIChzdHlsZVtwcm9wZXJ0eV0pIHtcbiAgICAgICAgICAgICAgdGFyZ2V0LnNldEF0dHJpYnV0ZShwcm9wZXJ0eSwgcGFyc2VJbnQoc3R5bGVbcHJvcGVydHldLCAxMCkpO1xuICAgICAgICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBcIlwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAvLyBBZnRlciByZXNpemluZyBJRSBzb21ldGltZXMgZm9yZ2V0cyB0byByZW1vdmUgdGhlIG9sZCByZXNpemUgaGFuZGxlc1xuICAgICAgICAgIHd5c2lodG1sNS5xdWlya3MucmVkcmF3KGVsZW1lbnQpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFxuICAgIF9pbml0VW5kb01hbmFnZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy51bmRvTWFuYWdlciA9IG5ldyB3eXNpaHRtbDUuVW5kb01hbmFnZXIodGhpcy5wYXJlbnQpO1xuICAgIH0sXG4gICAgXG4gICAgX2luaXRMaW5lQnJlYWtpbmc6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHRoYXQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9IHRoaXMsXG4gICAgICAgICAgVVNFX05BVElWRV9MSU5FX0JSRUFLX0lOU0lERV9UQUdTID0gW1wiTElcIiwgXCJQXCIsIFwiSDFcIiwgXCJIMlwiLCBcIkgzXCIsIFwiSDRcIiwgXCJINVwiLCBcIkg2XCJdLFxuICAgICAgICAgIExJU1RfVEFHUyAgICAgICAgICAgICAgICAgICAgICAgICA9IFtcIlVMXCIsIFwiT0xcIiwgXCJNRU5VXCJdO1xuICAgICAgXG4gICAgICBmdW5jdGlvbiBhZGp1c3Qoc2VsZWN0ZWROb2RlKSB7XG4gICAgICAgIHZhciBwYXJlbnRFbGVtZW50ID0gZG9tLmdldFBhcmVudEVsZW1lbnQoc2VsZWN0ZWROb2RlLCB7IG5vZGVOYW1lOiBbXCJQXCIsIFwiRElWXCJdIH0sIDIpO1xuICAgICAgICBpZiAocGFyZW50RWxlbWVudCkge1xuICAgICAgICAgIHRoYXQuc2VsZWN0aW9uLmV4ZWN1dGVBbmRSZXN0b3JlKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKHRoYXQuY29uZmlnLnVzZUxpbmVCcmVha3MpIHtcbiAgICAgICAgICAgICAgZG9tLnJlcGxhY2VXaXRoQ2hpbGROb2RlcyhwYXJlbnRFbGVtZW50KTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAocGFyZW50RWxlbWVudC5ub2RlTmFtZSAhPT0gXCJQXCIpIHtcbiAgICAgICAgICAgICAgZG9tLnJlbmFtZUVsZW1lbnQocGFyZW50RWxlbWVudCwgXCJwXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmICghdGhpcy5jb25maWcudXNlTGluZUJyZWFrcykge1xuICAgICAgICBkb20ub2JzZXJ2ZSh0aGlzLmVsZW1lbnQsIFtcImZvY3VzXCIsIFwia2V5ZG93blwiXSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYgKHRoYXQuaXNFbXB0eSgpKSB7XG4gICAgICAgICAgICB2YXIgcGFyYWdyYXBoID0gdGhhdC5kb2MuY3JlYXRlRWxlbWVudChcIlBcIik7XG4gICAgICAgICAgICB0aGF0LmVsZW1lbnQuaW5uZXJIVE1MID0gXCJcIjtcbiAgICAgICAgICAgIHRoYXQuZWxlbWVudC5hcHBlbmRDaGlsZChwYXJhZ3JhcGgpO1xuICAgICAgICAgICAgaWYgKCFicm93c2VyLmRpc3BsYXlzQ2FyZXRJbkVtcHR5Q29udGVudEVkaXRhYmxlQ29ycmVjdGx5KCkpIHtcbiAgICAgICAgICAgICAgcGFyYWdyYXBoLmlubmVySFRNTCA9IFwiPGJyPlwiO1xuICAgICAgICAgICAgICB0aGF0LnNlbGVjdGlvbi5zZXRCZWZvcmUocGFyYWdyYXBoLmZpcnN0Q2hpbGQpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdGhhdC5zZWxlY3Rpb24uc2VsZWN0Tm9kZShwYXJhZ3JhcGgsIHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIFVuZGVyIGNlcnRhaW4gY2lyY3Vtc3RhbmNlcyBDaHJvbWUgKyBTYWZhcmkgY3JlYXRlIG5lc3RlZCA8cD4gb3IgPGhYPiB0YWdzIGFmdGVyIHBhc3RlXG4gICAgICAvLyBJbnNlcnRpbmcgYW4gaW52aXNpYmxlIHdoaXRlIHNwYWNlIGluIGZyb250IG9mIGl0IGZpeGVzIHRoZSBpc3N1ZVxuICAgICAgaWYgKGJyb3dzZXIuY3JlYXRlc05lc3RlZEludmFsaWRNYXJrdXBBZnRlclBhc3RlKCkpIHtcbiAgICAgICAgZG9tLm9ic2VydmUodGhpcy5lbGVtZW50LCBcInBhc3RlXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgdmFyIGludmlzaWJsZVNwYWNlID0gdGhhdC5kb2MuY3JlYXRlVGV4dE5vZGUod3lzaWh0bWw1LklOVklTSUJMRV9TUEFDRSk7XG4gICAgICAgICAgdGhhdC5zZWxlY3Rpb24uaW5zZXJ0Tm9kZShpbnZpc2libGVTcGFjZSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBcbiAgICAgIGRvbS5vYnNlcnZlKHRoaXMuZG9jLCBcImtleWRvd25cIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgdmFyIGtleUNvZGUgPSBldmVudC5rZXlDb2RlO1xuICAgICAgICBcbiAgICAgICAgaWYgKGV2ZW50LnNoaWZ0S2V5KSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZiAoa2V5Q29kZSAhPT0gd3lzaWh0bWw1LkVOVEVSX0tFWSAmJiBrZXlDb2RlICE9PSB3eXNpaHRtbDUuQkFDS1NQQUNFX0tFWSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdmFyIGJsb2NrRWxlbWVudCA9IGRvbS5nZXRQYXJlbnRFbGVtZW50KHRoYXQuc2VsZWN0aW9uLmdldFNlbGVjdGVkTm9kZSgpLCB7IG5vZGVOYW1lOiBVU0VfTkFUSVZFX0xJTkVfQlJFQUtfSU5TSURFX1RBR1MgfSwgNCk7XG4gICAgICAgIGlmIChibG9ja0VsZW1lbnQpIHtcbiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgLy8gVW53cmFwIHBhcmFncmFwaCBhZnRlciBsZWF2aW5nIGEgbGlzdCBvciBhIEgxLTZcbiAgICAgICAgICAgIHZhciBzZWxlY3RlZE5vZGUgPSB0aGF0LnNlbGVjdGlvbi5nZXRTZWxlY3RlZE5vZGUoKSxcbiAgICAgICAgICAgICAgICBsaXN0O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoYmxvY2tFbGVtZW50Lm5vZGVOYW1lID09PSBcIkxJXCIpIHtcbiAgICAgICAgICAgICAgaWYgKCFzZWxlY3RlZE5vZGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBsaXN0ID0gZG9tLmdldFBhcmVudEVsZW1lbnQoc2VsZWN0ZWROb2RlLCB7IG5vZGVOYW1lOiBMSVNUX1RBR1MgfSwgMik7XG5cbiAgICAgICAgICAgICAgaWYgKCFsaXN0KSB7XG4gICAgICAgICAgICAgICAgYWRqdXN0KHNlbGVjdGVkTm9kZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGtleUNvZGUgPT09IHd5c2lodG1sNS5FTlRFUl9LRVkgJiYgYmxvY2tFbGVtZW50Lm5vZGVOYW1lLm1hdGNoKC9eSFsxLTZdJC8pKSB7XG4gICAgICAgICAgICAgIGFkanVzdChzZWxlY3RlZE5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sIDApO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaWYgKHRoYXQuY29uZmlnLnVzZUxpbmVCcmVha3MgJiYga2V5Q29kZSA9PT0gd3lzaWh0bWw1LkVOVEVSX0tFWSAmJiAhd3lzaWh0bWw1LmJyb3dzZXIuaW5zZXJ0c0xpbmVCcmVha3NPblJldHVybigpKSB7XG4gICAgICAgICAgdGhhdC5jb21tYW5kcy5leGVjKFwiaW5zZXJ0TGluZUJyZWFrXCIpO1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59KSh3eXNpaHRtbDUpOyhmdW5jdGlvbih3eXNpaHRtbDUpIHtcbiAgdmFyIGRvbSAgICAgICAgICAgICA9IHd5c2lodG1sNS5kb20sXG4gICAgICBkb2MgICAgICAgICAgICAgPSBkb2N1bWVudCxcbiAgICAgIHdpbiAgICAgICAgICAgICA9IHdpbmRvdyxcbiAgICAgIEhPU1RfVEVNUExBVEUgICA9IGRvYy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLFxuICAgICAgLyoqXG4gICAgICAgKiBTdHlsZXMgdG8gY29weSBmcm9tIHRleHRhcmVhIHRvIHRoZSBjb21wb3NlciBlbGVtZW50XG4gICAgICAgKi9cbiAgICAgIFRFWFRfRk9STUFUVElORyA9IFtcbiAgICAgICAgXCJiYWNrZ3JvdW5kLWNvbG9yXCIsXG4gICAgICAgIFwiY29sb3JcIiwgXCJjdXJzb3JcIixcbiAgICAgICAgXCJmb250LWZhbWlseVwiLCBcImZvbnQtc2l6ZVwiLCBcImZvbnQtc3R5bGVcIiwgXCJmb250LXZhcmlhbnRcIiwgXCJmb250LXdlaWdodFwiLFxuICAgICAgICBcImxpbmUtaGVpZ2h0XCIsIFwibGV0dGVyLXNwYWNpbmdcIixcbiAgICAgICAgXCJ0ZXh0LWFsaWduXCIsIFwidGV4dC1kZWNvcmF0aW9uXCIsIFwidGV4dC1pbmRlbnRcIiwgXCJ0ZXh0LXJlbmRlcmluZ1wiLFxuICAgICAgICBcIndvcmQtYnJlYWtcIiwgXCJ3b3JkLXdyYXBcIiwgXCJ3b3JkLXNwYWNpbmdcIlxuICAgICAgXSxcbiAgICAgIC8qKlxuICAgICAgICogU3R5bGVzIHRvIGNvcHkgZnJvbSB0ZXh0YXJlYSB0byB0aGUgaWZyYW1lXG4gICAgICAgKi9cbiAgICAgIEJPWF9GT1JNQVRUSU5HID0gW1xuICAgICAgICBcImJhY2tncm91bmQtY29sb3JcIixcbiAgICAgICAgXCJib3JkZXItY29sbGFwc2VcIixcbiAgICAgICAgXCJib3JkZXItYm90dG9tLWNvbG9yXCIsIFwiYm9yZGVyLWJvdHRvbS1zdHlsZVwiLCBcImJvcmRlci1ib3R0b20td2lkdGhcIixcbiAgICAgICAgXCJib3JkZXItbGVmdC1jb2xvclwiLCBcImJvcmRlci1sZWZ0LXN0eWxlXCIsIFwiYm9yZGVyLWxlZnQtd2lkdGhcIixcbiAgICAgICAgXCJib3JkZXItcmlnaHQtY29sb3JcIiwgXCJib3JkZXItcmlnaHQtc3R5bGVcIiwgXCJib3JkZXItcmlnaHQtd2lkdGhcIixcbiAgICAgICAgXCJib3JkZXItdG9wLWNvbG9yXCIsIFwiYm9yZGVyLXRvcC1zdHlsZVwiLCBcImJvcmRlci10b3Atd2lkdGhcIixcbiAgICAgICAgXCJjbGVhclwiLCBcImRpc3BsYXlcIiwgXCJmbG9hdFwiLFxuICAgICAgICBcIm1hcmdpbi1ib3R0b21cIiwgXCJtYXJnaW4tbGVmdFwiLCBcIm1hcmdpbi1yaWdodFwiLCBcIm1hcmdpbi10b3BcIixcbiAgICAgICAgXCJvdXRsaW5lLWNvbG9yXCIsIFwib3V0bGluZS1vZmZzZXRcIiwgXCJvdXRsaW5lLXdpZHRoXCIsIFwib3V0bGluZS1zdHlsZVwiLFxuICAgICAgICBcInBhZGRpbmctbGVmdFwiLCBcInBhZGRpbmctcmlnaHRcIiwgXCJwYWRkaW5nLXRvcFwiLCBcInBhZGRpbmctYm90dG9tXCIsXG4gICAgICAgIFwicG9zaXRpb25cIiwgXCJ0b3BcIiwgXCJsZWZ0XCIsIFwicmlnaHRcIiwgXCJib3R0b21cIiwgXCJ6LWluZGV4XCIsXG4gICAgICAgIFwidmVydGljYWwtYWxpZ25cIiwgXCJ0ZXh0LWFsaWduXCIsXG4gICAgICAgIFwiLXdlYmtpdC1ib3gtc2l6aW5nXCIsIFwiLW1vei1ib3gtc2l6aW5nXCIsIFwiLW1zLWJveC1zaXppbmdcIiwgXCJib3gtc2l6aW5nXCIsXG4gICAgICAgIFwiLXdlYmtpdC1ib3gtc2hhZG93XCIsIFwiLW1vei1ib3gtc2hhZG93XCIsIFwiLW1zLWJveC1zaGFkb3dcIixcImJveC1zaGFkb3dcIixcbiAgICAgICAgXCItd2Via2l0LWJvcmRlci10b3AtcmlnaHQtcmFkaXVzXCIsIFwiLW1vei1ib3JkZXItcmFkaXVzLXRvcHJpZ2h0XCIsIFwiYm9yZGVyLXRvcC1yaWdodC1yYWRpdXNcIixcbiAgICAgICAgXCItd2Via2l0LWJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzXCIsIFwiLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbXJpZ2h0XCIsIFwiYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXNcIixcbiAgICAgICAgXCItd2Via2l0LWJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXNcIiwgXCItbW96LWJvcmRlci1yYWRpdXMtYm90dG9tbGVmdFwiLCBcImJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXNcIixcbiAgICAgICAgXCItd2Via2l0LWJvcmRlci10b3AtbGVmdC1yYWRpdXNcIiwgXCItbW96LWJvcmRlci1yYWRpdXMtdG9wbGVmdFwiLCBcImJvcmRlci10b3AtbGVmdC1yYWRpdXNcIixcbiAgICAgICAgXCJ3aWR0aFwiLCBcImhlaWdodFwiXG4gICAgICBdLFxuICAgICAgQURESVRJT05BTF9DU1NfUlVMRVMgPSBbXG4gICAgICAgIFwiaHRtbCAgICAgICAgICAgICAgICAgeyBoZWlnaHQ6IDEwMCU7IH1cIixcbiAgICAgICAgXCJib2R5ICAgICAgICAgICAgICAgICB7IGhlaWdodDogMTAwJTsgcGFkZGluZzogMXB4IDAgMCAwOyBtYXJnaW46IC0xcHggMCAwIDA7IH1cIixcbiAgICAgICAgXCJib2R5ID4gcDpmaXJzdC1jaGlsZCB7IG1hcmdpbi10b3A6IDA7IH1cIixcbiAgICAgICAgXCIuX3d5c2lodG1sNS10ZW1wICAgICB7IGRpc3BsYXk6IG5vbmU7IH1cIixcbiAgICAgICAgd3lzaWh0bWw1LmJyb3dzZXIuaXNHZWNrbyA/XG4gICAgICAgICAgXCJib2R5LnBsYWNlaG9sZGVyIHsgY29sb3I6IGdyYXl0ZXh0ICFpbXBvcnRhbnQ7IH1cIiA6IFxuICAgICAgICAgIFwiYm9keS5wbGFjZWhvbGRlciB7IGNvbG9yOiAjYTlhOWE5ICFpbXBvcnRhbnQ7IH1cIixcbiAgICAgICAgLy8gRW5zdXJlIHRoYXQgdXNlciBzZWUncyBicm9rZW4gaW1hZ2VzIGFuZCBjYW4gZGVsZXRlIHRoZW1cbiAgICAgICAgXCJpbWc6LW1vei1icm9rZW4gICAgICB7IC1tb3otZm9yY2UtYnJva2VuLWltYWdlLWljb246IDE7IGhlaWdodDogMjRweDsgd2lkdGg6IDI0cHg7IH1cIlxuICAgICAgXTtcbiAgXG4gIC8qKlxuICAgKiBXaXRoIFwic2V0QWN0aXZlXCIgSUUgb2ZmZXJzIGEgc21hcnQgd2F5IG9mIGZvY3VzaW5nIGVsZW1lbnRzIHdpdGhvdXQgc2Nyb2xsaW5nIHRoZW0gaW50byB2aWV3OlxuICAgKiBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvbXM1MzY3Mzgodj12cy44NSkuYXNweFxuICAgKlxuICAgKiBPdGhlciBicm93c2VycyBuZWVkIGEgbW9yZSBoYWNreSB3YXk6IChwc3NzdCBkb24ndCB0ZWxsIG15IG1hbWEpXG4gICAqIEluIG9yZGVyIHRvIHByZXZlbnQgdGhlIGVsZW1lbnQgYmVpbmcgc2Nyb2xsZWQgaW50byB2aWV3IHdoZW4gZm9jdXNpbmcgaXQsIHdlIHNpbXBseVxuICAgKiBtb3ZlIGl0IG91dCBvZiB0aGUgc2Nyb2xsYWJsZSBhcmVhLCBmb2N1cyBpdCwgYW5kIHJlc2V0IGl0J3MgcG9zaXRpb25cbiAgICovXG4gIHZhciBmb2N1c1dpdGhvdXRTY3JvbGxpbmcgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgaWYgKGVsZW1lbnQuc2V0QWN0aXZlKSB7XG4gICAgICAvLyBGb2xsb3dpbmcgbGluZSBjb3VsZCBjYXVzZSBhIGpzIGVycm9yIHdoZW4gdGhlIHRleHRhcmVhIGlzIGludmlzaWJsZVxuICAgICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS94aW5nL3d5c2lodG1sNS9pc3N1ZXMvOVxuICAgICAgdHJ5IHsgZWxlbWVudC5zZXRBY3RpdmUoKTsgfSBjYXRjaChlKSB7fVxuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgZWxlbWVudFN0eWxlID0gZWxlbWVudC5zdHlsZSxcbiAgICAgICAgICBvcmlnaW5hbFNjcm9sbFRvcCA9IGRvYy5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wIHx8IGRvYy5ib2R5LnNjcm9sbFRvcCxcbiAgICAgICAgICBvcmlnaW5hbFNjcm9sbExlZnQgPSBkb2MuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQgfHwgZG9jLmJvZHkuc2Nyb2xsTGVmdCxcbiAgICAgICAgICBvcmlnaW5hbFN0eWxlcyA9IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiAgICAgICAgIGVsZW1lbnRTdHlsZS5wb3NpdGlvbixcbiAgICAgICAgICAgIHRvcDogICAgICAgICAgICAgIGVsZW1lbnRTdHlsZS50b3AsXG4gICAgICAgICAgICBsZWZ0OiAgICAgICAgICAgICBlbGVtZW50U3R5bGUubGVmdCxcbiAgICAgICAgICAgIFdlYmtpdFVzZXJTZWxlY3Q6IGVsZW1lbnRTdHlsZS5XZWJraXRVc2VyU2VsZWN0XG4gICAgICAgICAgfTtcbiAgICAgIFxuICAgICAgZG9tLnNldFN0eWxlcyh7XG4gICAgICAgIHBvc2l0aW9uOiAgICAgICAgIFwiYWJzb2x1dGVcIixcbiAgICAgICAgdG9wOiAgICAgICAgICAgICAgXCItOTk5OTlweFwiLFxuICAgICAgICBsZWZ0OiAgICAgICAgICAgICBcIi05OTk5OXB4XCIsXG4gICAgICAgIC8vIERvbid0IGFzayB3aHkgYnV0IHRlbXBvcmFyaWx5IHNldHRpbmcgLXdlYmtpdC11c2VyLXNlbGVjdCB0byBub25lIG1ha2VzIHRoZSB3aG9sZSB0aGluZyBwZXJmb3JtaW5nIHNtb290aGVyXG4gICAgICAgIFdlYmtpdFVzZXJTZWxlY3Q6IFwibm9uZVwiXG4gICAgICB9KS5vbihlbGVtZW50KTtcbiAgICAgIFxuICAgICAgZWxlbWVudC5mb2N1cygpO1xuICAgICAgXG4gICAgICBkb20uc2V0U3R5bGVzKG9yaWdpbmFsU3R5bGVzKS5vbihlbGVtZW50KTtcbiAgICAgIFxuICAgICAgaWYgKHdpbi5zY3JvbGxUbykge1xuICAgICAgICAvLyBTb21lIGJyb3dzZXIgZXh0ZW5zaW9ucyB1bnNldCB0aGlzIG1ldGhvZCB0byBwcmV2ZW50IGFubm95YW5jZXNcbiAgICAgICAgLy8gXCJCZXR0ZXIgUG9wVXAgQmxvY2tlclwiIGZvciBDaHJvbWUgaHR0cDovL2NvZGUuZ29vZ2xlLmNvbS9wL2JldHRlcnBvcHVwYmxvY2tlci9zb3VyY2UvYnJvd3NlL3RydW5rL2Jsb2NrU3RhcnQuanMjMTAwXG4gICAgICAgIC8vIElzc3VlOiBodHRwOi8vY29kZS5nb29nbGUuY29tL3AvYmV0dGVycG9wdXBibG9ja2VyL2lzc3Vlcy9kZXRhaWw/aWQ9MVxuICAgICAgICB3aW4uc2Nyb2xsVG8ob3JpZ2luYWxTY3JvbGxMZWZ0LCBvcmlnaW5hbFNjcm9sbFRvcCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICBcbiAgXG4gIHd5c2lodG1sNS52aWV3cy5Db21wb3Nlci5wcm90b3R5cGUuc3R5bGUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdGhhdCAgICAgICAgICAgICAgICAgID0gdGhpcyxcbiAgICAgICAgb3JpZ2luYWxBY3RpdmVFbGVtZW50ID0gZG9jLnF1ZXJ5U2VsZWN0b3IoXCI6Zm9jdXNcIiksXG4gICAgICAgIHRleHRhcmVhRWxlbWVudCAgICAgICA9IHRoaXMudGV4dGFyZWEuZWxlbWVudCxcbiAgICAgICAgaGFzUGxhY2Vob2xkZXIgICAgICAgID0gdGV4dGFyZWFFbGVtZW50Lmhhc0F0dHJpYnV0ZShcInBsYWNlaG9sZGVyXCIpLFxuICAgICAgICBvcmlnaW5hbFBsYWNlaG9sZGVyICAgPSBoYXNQbGFjZWhvbGRlciAmJiB0ZXh0YXJlYUVsZW1lbnQuZ2V0QXR0cmlidXRlKFwicGxhY2Vob2xkZXJcIiksXG4gICAgICAgIG9yaWdpbmFsRGlzcGxheVZhbHVlICA9IHRleHRhcmVhRWxlbWVudC5zdHlsZS5kaXNwbGF5LFxuICAgICAgICBvcmlnaW5hbERpc2FibGVkICAgICAgPSB0ZXh0YXJlYUVsZW1lbnQuZGlzYWJsZWQsXG4gICAgICAgIGRpc3BsYXlWYWx1ZUZvckNvcHlpbmc7XG4gICAgXG4gICAgdGhpcy5mb2N1c1N0eWxlc0hvc3QgICAgICA9IEhPU1RfVEVNUExBVEUuY2xvbmVOb2RlKGZhbHNlKTtcbiAgICB0aGlzLmJsdXJTdHlsZXNIb3N0ICAgICAgID0gSE9TVF9URU1QTEFURS5jbG9uZU5vZGUoZmFsc2UpO1xuICAgIHRoaXMuZGlzYWJsZWRTdHlsZXNIb3N0ICAgPSBIT1NUX1RFTVBMQVRFLmNsb25lTm9kZShmYWxzZSk7XG4gIFxuICAgIC8vIFJlbW92ZSBwbGFjZWhvbGRlciBiZWZvcmUgY29weWluZyAoYXMgdGhlIHBsYWNlaG9sZGVyIGhhcyBhbiBhZmZlY3Qgb24gdGhlIGNvbXB1dGVkIHN0eWxlKVxuICAgIGlmIChoYXNQbGFjZWhvbGRlcikge1xuICAgICAgdGV4dGFyZWFFbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShcInBsYWNlaG9sZGVyXCIpO1xuICAgIH1cbiAgXG4gICAgaWYgKHRleHRhcmVhRWxlbWVudCA9PT0gb3JpZ2luYWxBY3RpdmVFbGVtZW50KSB7XG4gICAgICB0ZXh0YXJlYUVsZW1lbnQuYmx1cigpO1xuICAgIH1cbiAgICBcbiAgICAvLyBlbmFibGUgZm9yIGNvcHlpbmcgc3R5bGVzXG4gICAgdGV4dGFyZWFFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XG4gICAgXG4gICAgLy8gc2V0IHRleHRhcmVhIHRvIGRpc3BsYXk9XCJub25lXCIgdG8gZ2V0IGNhc2NhZGVkIHN0eWxlcyB2aWEgZ2V0Q29tcHV0ZWRTdHlsZVxuICAgIHRleHRhcmVhRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gZGlzcGxheVZhbHVlRm9yQ29weWluZyA9IFwibm9uZVwiO1xuICAgIFxuICAgIGlmICgodGV4dGFyZWFFbGVtZW50LmdldEF0dHJpYnV0ZShcInJvd3NcIikgJiYgZG9tLmdldFN0eWxlKFwiaGVpZ2h0XCIpLmZyb20odGV4dGFyZWFFbGVtZW50KSA9PT0gXCJhdXRvXCIpIHx8XG4gICAgICAgICh0ZXh0YXJlYUVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiY29sc1wiKSAmJiBkb20uZ2V0U3R5bGUoXCJ3aWR0aFwiKS5mcm9tKHRleHRhcmVhRWxlbWVudCkgPT09IFwiYXV0b1wiKSkge1xuICAgICAgdGV4dGFyZWFFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSBkaXNwbGF5VmFsdWVGb3JDb3B5aW5nID0gb3JpZ2luYWxEaXNwbGF5VmFsdWU7XG4gICAgfVxuICAgIFxuICAgIC8vIC0tLS0tLS0tLSBpZnJhbWUgc3R5bGVzIChoYXMgdG8gYmUgc2V0IGJlZm9yZSBlZGl0b3Igc3R5bGVzLCBvdGhlcndpc2UgSUU5IHNldHMgd3JvbmcgZm9udEZhbWlseSBvbiBibHVyU3R5bGVzSG9zdCkgLS0tLS0tLS0tXG4gICAgZG9tLmNvcHlTdHlsZXMoQk9YX0ZPUk1BVFRJTkcpLmZyb20odGV4dGFyZWFFbGVtZW50KS50byh0aGlzLmlmcmFtZSkuYW5kVG8odGhpcy5ibHVyU3R5bGVzSG9zdCk7XG4gICAgXG4gICAgLy8gLS0tLS0tLS0tIGVkaXRvciBzdHlsZXMgLS0tLS0tLS0tXG4gICAgZG9tLmNvcHlTdHlsZXMoVEVYVF9GT1JNQVRUSU5HKS5mcm9tKHRleHRhcmVhRWxlbWVudCkudG8odGhpcy5lbGVtZW50KS5hbmRUbyh0aGlzLmJsdXJTdHlsZXNIb3N0KTtcbiAgICBcbiAgICAvLyAtLS0tLS0tLS0gYXBwbHkgc3RhbmRhcmQgcnVsZXMgLS0tLS0tLS0tXG4gICAgZG9tLmluc2VydENTUyhBRERJVElPTkFMX0NTU19SVUxFUykuaW50byh0aGlzLmVsZW1lbnQub3duZXJEb2N1bWVudCk7XG4gICAgXG4gICAgLy8gLS0tLS0tLS0tIDpkaXNhYmxlZCBzdHlsZXMgLS0tLS0tLS0tXG4gICAgdGV4dGFyZWFFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcbiAgICBkb20uY29weVN0eWxlcyhCT1hfRk9STUFUVElORykuZnJvbSh0ZXh0YXJlYUVsZW1lbnQpLnRvKHRoaXMuZGlzYWJsZWRTdHlsZXNIb3N0KTtcbiAgICBkb20uY29weVN0eWxlcyhURVhUX0ZPUk1BVFRJTkcpLmZyb20odGV4dGFyZWFFbGVtZW50KS50byh0aGlzLmRpc2FibGVkU3R5bGVzSG9zdCk7XG4gICAgdGV4dGFyZWFFbGVtZW50LmRpc2FibGVkID0gb3JpZ2luYWxEaXNhYmxlZDtcbiAgICBcbiAgICAvLyAtLS0tLS0tLS0gOmZvY3VzIHN0eWxlcyAtLS0tLS0tLS1cbiAgICB0ZXh0YXJlYUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IG9yaWdpbmFsRGlzcGxheVZhbHVlO1xuICAgIGZvY3VzV2l0aG91dFNjcm9sbGluZyh0ZXh0YXJlYUVsZW1lbnQpO1xuICAgIHRleHRhcmVhRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gZGlzcGxheVZhbHVlRm9yQ29weWluZztcbiAgICBcbiAgICBkb20uY29weVN0eWxlcyhCT1hfRk9STUFUVElORykuZnJvbSh0ZXh0YXJlYUVsZW1lbnQpLnRvKHRoaXMuZm9jdXNTdHlsZXNIb3N0KTtcbiAgICBkb20uY29weVN0eWxlcyhURVhUX0ZPUk1BVFRJTkcpLmZyb20odGV4dGFyZWFFbGVtZW50KS50byh0aGlzLmZvY3VzU3R5bGVzSG9zdCk7XG4gICAgXG4gICAgLy8gcmVzZXQgdGV4dGFyZWFcbiAgICB0ZXh0YXJlYUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IG9yaWdpbmFsRGlzcGxheVZhbHVlO1xuICAgIFxuICAgIGRvbS5jb3B5U3R5bGVzKFtcImRpc3BsYXlcIl0pLmZyb20odGV4dGFyZWFFbGVtZW50KS50byh0aGlzLmlmcmFtZSk7XG4gICAgXG4gICAgLy8gTWFrZSBzdXJlIHRoYXQgd2UgZG9uJ3QgY2hhbmdlIHRoZSBkaXNwbGF5IHN0eWxlIG9mIHRoZSBpZnJhbWUgd2hlbiBjb3B5aW5nIHN0eWxlcyBvYmx1ci9vbmZvY3VzXG4gICAgLy8gdGhpcyBpcyBuZWVkZWQgZm9yIHdoZW4gdGhlIGNoYW5nZV92aWV3IGV2ZW50IGlzIGZpcmVkIHdoZXJlIHRoZSBpZnJhbWUgaXMgaGlkZGVuIGFuZCB0aGVuXG4gICAgLy8gdGhlIGJsdXIgZXZlbnQgZmlyZXMgYW5kIHJlLWRpc3BsYXlzIGl0XG4gICAgdmFyIGJveEZvcm1hdHRpbmdTdHlsZXMgPSB3eXNpaHRtbDUubGFuZy5hcnJheShCT1hfRk9STUFUVElORykud2l0aG91dChbXCJkaXNwbGF5XCJdKTtcbiAgICBcbiAgICAvLyAtLS0tLS0tLS0gcmVzdG9yZSBmb2N1cyAtLS0tLS0tLS1cbiAgICBpZiAob3JpZ2luYWxBY3RpdmVFbGVtZW50KSB7XG4gICAgICBvcmlnaW5hbEFjdGl2ZUVsZW1lbnQuZm9jdXMoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGV4dGFyZWFFbGVtZW50LmJsdXIoKTtcbiAgICB9XG4gICAgXG4gICAgLy8gLS0tLS0tLS0tIHJlc3RvcmUgcGxhY2Vob2xkZXIgLS0tLS0tLS0tXG4gICAgaWYgKGhhc1BsYWNlaG9sZGVyKSB7XG4gICAgICB0ZXh0YXJlYUVsZW1lbnQuc2V0QXR0cmlidXRlKFwicGxhY2Vob2xkZXJcIiwgb3JpZ2luYWxQbGFjZWhvbGRlcik7XG4gICAgfVxuICAgIFxuICAgIC8vIC0tLS0tLS0tLSBTeW5jIGZvY3VzL2JsdXIgc3R5bGVzIC0tLS0tLS0tLVxuICAgIHRoaXMucGFyZW50Lm9uKFwiZm9jdXM6Y29tcG9zZXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICBkb20uY29weVN0eWxlcyhib3hGb3JtYXR0aW5nU3R5bGVzKSAuZnJvbSh0aGF0LmZvY3VzU3R5bGVzSG9zdCkudG8odGhhdC5pZnJhbWUpO1xuICAgICAgZG9tLmNvcHlTdHlsZXMoVEVYVF9GT1JNQVRUSU5HKSAgICAgLmZyb20odGhhdC5mb2N1c1N0eWxlc0hvc3QpLnRvKHRoYXQuZWxlbWVudCk7XG4gICAgfSk7XG4gICAgXG4gICAgdGhpcy5wYXJlbnQub24oXCJibHVyOmNvbXBvc2VyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgZG9tLmNvcHlTdHlsZXMoYm94Rm9ybWF0dGluZ1N0eWxlcykgLmZyb20odGhhdC5ibHVyU3R5bGVzSG9zdCkudG8odGhhdC5pZnJhbWUpO1xuICAgICAgZG9tLmNvcHlTdHlsZXMoVEVYVF9GT1JNQVRUSU5HKSAgICAgLmZyb20odGhhdC5ibHVyU3R5bGVzSG9zdCkudG8odGhhdC5lbGVtZW50KTtcbiAgICB9KTtcbiAgICBcbiAgICB0aGlzLnBhcmVudC5vYnNlcnZlKFwiZGlzYWJsZTpjb21wb3NlclwiLCBmdW5jdGlvbigpIHtcbiAgICAgIGRvbS5jb3B5U3R5bGVzKGJveEZvcm1hdHRpbmdTdHlsZXMpIC5mcm9tKHRoYXQuZGlzYWJsZWRTdHlsZXNIb3N0KS50byh0aGF0LmlmcmFtZSk7XG4gICAgICBkb20uY29weVN0eWxlcyhURVhUX0ZPUk1BVFRJTkcpICAgICAuZnJvbSh0aGF0LmRpc2FibGVkU3R5bGVzSG9zdCkudG8odGhhdC5lbGVtZW50KTtcbiAgICB9KTtcbiAgICBcbiAgICB0aGlzLnBhcmVudC5vYnNlcnZlKFwiZW5hYmxlOmNvbXBvc2VyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgZG9tLmNvcHlTdHlsZXMoYm94Rm9ybWF0dGluZ1N0eWxlcykgLmZyb20odGhhdC5ibHVyU3R5bGVzSG9zdCkudG8odGhhdC5pZnJhbWUpO1xuICAgICAgZG9tLmNvcHlTdHlsZXMoVEVYVF9GT1JNQVRUSU5HKSAgICAgLmZyb20odGhhdC5ibHVyU3R5bGVzSG9zdCkudG8odGhhdC5lbGVtZW50KTtcbiAgICB9KTtcbiAgICBcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcbn0pKHd5c2lodG1sNSk7LyoqXG4gKiBUYWtpbmcgY2FyZSBvZiBldmVudHNcbiAqICAtIFNpbXVsYXRpbmcgJ2NoYW5nZScgZXZlbnQgb24gY29udGVudEVkaXRhYmxlIGVsZW1lbnRcbiAqICAtIEhhbmRsaW5nIGRyYWcgJiBkcm9wIGxvZ2ljXG4gKiAgLSBDYXRjaCBwYXN0ZSBldmVudHNcbiAqICAtIERpc3BhdGNoIHByb3ByaWV0YXJ5IG5ld3dvcmQ6Y29tcG9zZXIgZXZlbnRcbiAqICAtIEtleWJvYXJkIHNob3J0Y3V0c1xuICovXG4oZnVuY3Rpb24od3lzaWh0bWw1KSB7XG4gIHZhciBkb20gICAgICAgPSB3eXNpaHRtbDUuZG9tLFxuICAgICAgYnJvd3NlciAgID0gd3lzaWh0bWw1LmJyb3dzZXIsXG4gICAgICAvKipcbiAgICAgICAqIE1hcCBrZXlDb2RlcyB0byBxdWVyeSBjb21tYW5kc1xuICAgICAgICovXG4gICAgICBzaG9ydGN1dHMgPSB7XG4gICAgICAgIFwiNjZcIjogXCJib2xkXCIsICAgICAvLyBCXG4gICAgICAgIFwiNzNcIjogXCJpdGFsaWNcIiwgICAvLyBJXG4gICAgICAgIFwiODVcIjogXCJ1bmRlcmxpbmVcIiAvLyBVXG4gICAgICB9O1xuICBcbiAgd3lzaWh0bWw1LnZpZXdzLkNvbXBvc2VyLnByb3RvdHlwZS5vYnNlcnZlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHRoYXQgICAgICAgICAgICAgICAgPSB0aGlzLFxuICAgICAgICBzdGF0ZSAgICAgICAgICAgICAgID0gdGhpcy5nZXRWYWx1ZSgpLFxuICAgICAgICBpZnJhbWUgICAgICAgICAgICAgID0gdGhpcy5zYW5kYm94LmdldElmcmFtZSgpLFxuICAgICAgICBlbGVtZW50ICAgICAgICAgICAgID0gdGhpcy5lbGVtZW50LFxuICAgICAgICBmb2N1c0JsdXJFbGVtZW50ICAgID0gYnJvd3Nlci5zdXBwb3J0c0V2ZW50c0luSWZyYW1lQ29ycmVjdGx5KCkgPyBlbGVtZW50IDogdGhpcy5zYW5kYm94LmdldFdpbmRvdygpLFxuICAgICAgICBwYXN0ZUV2ZW50cyAgICAgICAgID0gW1wiZHJvcFwiLCBcInBhc3RlXCJdO1xuXG4gICAgLy8gLS0tLS0tLS0tIGRlc3Ryb3k6Y29tcG9zZXIgZXZlbnQgLS0tLS0tLS0tXG4gICAgZG9tLm9ic2VydmUoaWZyYW1lLCBcIkRPTU5vZGVSZW1vdmVkXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgY2xlYXJJbnRlcnZhbChkb21Ob2RlUmVtb3ZlZEludGVydmFsKTtcbiAgICAgIHRoYXQucGFyZW50LmZpcmUoXCJkZXN0cm95OmNvbXBvc2VyXCIpO1xuICAgIH0pO1xuXG4gICAgLy8gRE9NTm9kZVJlbW92ZWQgZXZlbnQgaXMgbm90IHN1cHBvcnRlZCBpbiBJRSA4XG4gICAgdmFyIGRvbU5vZGVSZW1vdmVkSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcbiAgICAgIGlmICghZG9tLmNvbnRhaW5zKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgaWZyYW1lKSkge1xuICAgICAgICBjbGVhckludGVydmFsKGRvbU5vZGVSZW1vdmVkSW50ZXJ2YWwpO1xuICAgICAgICB0aGF0LnBhcmVudC5maXJlKFwiZGVzdHJveTpjb21wb3NlclwiKTtcbiAgICAgIH1cbiAgICB9LCAyNTApO1xuXG4gICAgLy8gLS0tLS0tLS0tIEZvY3VzICYgYmx1ciBsb2dpYyAtLS0tLS0tLS1cbiAgICBkb20ub2JzZXJ2ZShmb2N1c0JsdXJFbGVtZW50LCBcImZvY3VzXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgdGhhdC5wYXJlbnQuZmlyZShcImZvY3VzXCIpLmZpcmUoXCJmb2N1czpjb21wb3NlclwiKTtcblxuICAgICAgLy8gRGVsYXkgc3RvcmluZyBvZiBzdGF0ZSB1bnRpbCBhbGwgZm9jdXMgaGFuZGxlciBhcmUgZmlyZWRcbiAgICAgIC8vIGVzcGVjaWFsbHkgdGhlIG9uZSB3aGljaCByZXNldHMgdGhlIHBsYWNlaG9sZGVyXG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyBzdGF0ZSA9IHRoYXQuZ2V0VmFsdWUoKTsgfSwgMCk7XG4gICAgfSk7XG5cbiAgICBkb20ub2JzZXJ2ZShmb2N1c0JsdXJFbGVtZW50LCBcImJsdXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoc3RhdGUgIT09IHRoYXQuZ2V0VmFsdWUoKSkge1xuICAgICAgICB0aGF0LnBhcmVudC5maXJlKFwiY2hhbmdlXCIpLmZpcmUoXCJjaGFuZ2U6Y29tcG9zZXJcIik7XG4gICAgICB9XG4gICAgICB0aGF0LnBhcmVudC5maXJlKFwiYmx1clwiKS5maXJlKFwiYmx1cjpjb21wb3NlclwiKTtcbiAgICB9KTtcblxuICAgIC8vIC0tLS0tLS0tLSBEcmFnICYgRHJvcCBsb2dpYyAtLS0tLS0tLS1cbiAgICBkb20ub2JzZXJ2ZShlbGVtZW50LCBcImRyYWdlbnRlclwiLCBmdW5jdGlvbigpIHtcbiAgICAgIHRoYXQucGFyZW50LmZpcmUoXCJ1bnNldF9wbGFjZWhvbGRlclwiKTtcbiAgICB9KTtcblxuICAgIGRvbS5vYnNlcnZlKGVsZW1lbnQsIHBhc3RlRXZlbnRzLCBmdW5jdGlvbigpIHtcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIHRoYXQucGFyZW50LmZpcmUoXCJwYXN0ZVwiKS5maXJlKFwicGFzdGU6Y29tcG9zZXJcIik7XG4gICAgICB9LCAwKTtcbiAgICB9KTtcblxuICAgIC8vIC0tLS0tLS0tLSBuZXdvcmQgZXZlbnQgLS0tLS0tLS0tXG4gICAgZG9tLm9ic2VydmUoZWxlbWVudCwgXCJrZXl1cFwiLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgdmFyIGtleUNvZGUgPSBldmVudC5rZXlDb2RlO1xuICAgICAgaWYgKGtleUNvZGUgPT09IHd5c2lodG1sNS5TUEFDRV9LRVkgfHwga2V5Q29kZSA9PT0gd3lzaWh0bWw1LkVOVEVSX0tFWSkge1xuICAgICAgICB0aGF0LnBhcmVudC5maXJlKFwibmV3d29yZDpjb21wb3NlclwiKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHRoaXMucGFyZW50Lm9uKFwicGFzdGU6Y29tcG9zZXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0aGF0LnBhcmVudC5maXJlKFwibmV3d29yZDpjb21wb3NlclwiKTsgfSwgMCk7XG4gICAgfSk7XG5cbiAgICAvLyAtLS0tLS0tLS0gTWFrZSBzdXJlIHRoYXQgaW1hZ2VzIGFyZSBzZWxlY3RlZCB3aGVuIGNsaWNraW5nIG9uIHRoZW0gLS0tLS0tLS0tXG4gICAgaWYgKCFicm93c2VyLmNhblNlbGVjdEltYWdlc0luQ29udGVudEVkaXRhYmxlKCkpIHtcbiAgICAgIGRvbS5vYnNlcnZlKGVsZW1lbnQsIFwibW91c2Vkb3duXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgICAgIGlmICh0YXJnZXQubm9kZU5hbWUgPT09IFwiSU1HXCIpIHtcbiAgICAgICAgICB0aGF0LnNlbGVjdGlvbi5zZWxlY3ROb2RlKHRhcmdldCk7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIGlmIChicm93c2VyLmhhc0hpc3RvcnlJc3N1ZSgpICYmIGJyb3dzZXIuc3VwcG9ydHNTZWxlY3Rpb25Nb2RpZnkoKSkge1xuICAgICAgZG9tLm9ic2VydmUoZWxlbWVudCwgXCJrZXlkb3duXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIGlmICghZXZlbnQubWV0YUtleSAmJiAhZXZlbnQuY3RybEtleSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdmFyIGtleUNvZGUgICA9IGV2ZW50LmtleUNvZGUsXG4gICAgICAgICAgICB3aW4gICAgICAgPSBlbGVtZW50Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcsXG4gICAgICAgICAgICBzZWxlY3Rpb24gPSB3aW4uZ2V0U2VsZWN0aW9uKCk7XG4gICAgICAgIFxuICAgICAgICBpZiAoa2V5Q29kZSA9PT0gMzcgfHwga2V5Q29kZSA9PT0gMzkpIHtcbiAgICAgICAgICBpZiAoa2V5Q29kZSA9PT0gMzcpIHtcbiAgICAgICAgICAgIHNlbGVjdGlvbi5tb2RpZnkoXCJleHRlbmRcIiwgXCJsZWZ0XCIsIFwibGluZWJvdW5kYXJ5XCIpO1xuICAgICAgICAgICAgaWYgKCFldmVudC5zaGlmdEtleSkge1xuICAgICAgICAgICAgICBzZWxlY3Rpb24uY29sbGFwc2VUb1N0YXJ0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChrZXlDb2RlID09PSAzOSkge1xuICAgICAgICAgICAgc2VsZWN0aW9uLm1vZGlmeShcImV4dGVuZFwiLCBcInJpZ2h0XCIsIFwibGluZWJvdW5kYXJ5XCIpO1xuICAgICAgICAgICAgaWYgKCFldmVudC5zaGlmdEtleSkge1xuICAgICAgICAgICAgICBzZWxlY3Rpb24uY29sbGFwc2VUb0VuZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gLS0tLS0tLS0tIFNob3J0Y3V0IGxvZ2ljIC0tLS0tLS0tLVxuICAgIGRvbS5vYnNlcnZlKGVsZW1lbnQsIFwia2V5ZG93blwiLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgdmFyIGtleUNvZGUgID0gZXZlbnQua2V5Q29kZSxcbiAgICAgICAgICBjb21tYW5kICA9IHNob3J0Y3V0c1trZXlDb2RlXTtcbiAgICAgIGlmICgoZXZlbnQuY3RybEtleSB8fCBldmVudC5tZXRhS2V5KSAmJiAhZXZlbnQuYWx0S2V5ICYmIGNvbW1hbmQpIHtcbiAgICAgICAgdGhhdC5jb21tYW5kcy5leGVjKGNvbW1hbmQpO1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gLS0tLS0tLS0tIE1ha2Ugc3VyZSB0aGF0IHdoZW4gcHJlc3NpbmcgYmFja3NwYWNlL2RlbGV0ZSBvbiBzZWxlY3RlZCBpbWFnZXMgZGVsZXRlcyB0aGUgaW1hZ2UgYW5kIGl0J3MgYW5jaG9yIC0tLS0tLS0tLVxuICAgIGRvbS5vYnNlcnZlKGVsZW1lbnQsIFwia2V5ZG93blwiLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgdmFyIHRhcmdldCAgPSB0aGF0LnNlbGVjdGlvbi5nZXRTZWxlY3RlZE5vZGUodHJ1ZSksXG4gICAgICAgICAga2V5Q29kZSA9IGV2ZW50LmtleUNvZGUsXG4gICAgICAgICAgcGFyZW50O1xuICAgICAgaWYgKHRhcmdldCAmJiB0YXJnZXQubm9kZU5hbWUgPT09IFwiSU1HXCIgJiYgKGtleUNvZGUgPT09IHd5c2lodG1sNS5CQUNLU1BBQ0VfS0VZIHx8IGtleUNvZGUgPT09IHd5c2lodG1sNS5ERUxFVEVfS0VZKSkgeyAvLyA4ID0+IGJhY2tzcGFjZSwgNDYgPT4gZGVsZXRlXG4gICAgICAgIHBhcmVudCA9IHRhcmdldC5wYXJlbnROb2RlO1xuICAgICAgICAvLyBkZWxldGUgdGhlIDxpbWc+XG4gICAgICAgIHBhcmVudC5yZW1vdmVDaGlsZCh0YXJnZXQpO1xuICAgICAgICAvLyBhbmQgaXQncyBwYXJlbnQgPGE+IHRvbyBpZiBpdCBoYXNuJ3QgZ290IGFueSBvdGhlciBjaGlsZCBub2Rlc1xuICAgICAgICBpZiAocGFyZW50Lm5vZGVOYW1lID09PSBcIkFcIiAmJiAhcGFyZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICBwYXJlbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChwYXJlbnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsgd3lzaWh0bWw1LnF1aXJrcy5yZWRyYXcoZWxlbWVudCk7IH0sIDApO1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICAgIC8vIC0tLS0tLS0tLSBJRSA4KzkgZm9jdXMgdGhlIGVkaXRvciB3aGVuIHRoZSBpZnJhbWUgaXMgY2xpY2tlZCAod2l0aG91dCBhY3R1YWxseSBmaXJpbmcgdGhlICdmb2N1cycgZXZlbnQgb24gdGhlIDxib2R5PikgLS0tLS0tLS0tXG4gICAgaWYgKGJyb3dzZXIuaGFzSWZyYW1lRm9jdXNJc3N1ZSgpKSB7XG4gICAgICBkb20ub2JzZXJ2ZSh0aGlzLmlmcmFtZSwgXCJmb2N1c1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZiAodGhhdC5kb2MucXVlcnlTZWxlY3RvcihcIjpmb2N1c1wiKSAhPT0gdGhhdC5lbGVtZW50KSB7XG4gICAgICAgICAgICB0aGF0LmZvY3VzKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCAwKTtcbiAgICAgIH0pO1xuXG4gICAgICBkb20ub2JzZXJ2ZSh0aGlzLmVsZW1lbnQsIFwiYmx1clwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICB0aGF0LnNlbGVjdGlvbi5nZXRTZWxlY3Rpb24oKS5yZW1vdmVBbGxSYW5nZXMoKTtcbiAgICAgICAgfSwgMCk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gLS0tLS0tLS0tIFNob3cgdXJsIGluIHRvb2x0aXAgd2hlbiBob3ZlcmluZyBsaW5rcyBvciBpbWFnZXMgLS0tLS0tLS0tXG4gICAgdmFyIHRpdGxlUHJlZml4ZXMgPSB7XG4gICAgICBJTUc6IFwiSW1hZ2U6IFwiLFxuICAgICAgQTogICBcIkxpbms6IFwiXG4gICAgfTtcbiAgICBcbiAgICBkb20ub2JzZXJ2ZShlbGVtZW50LCBcIm1vdXNlb3ZlclwiLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgdmFyIHRhcmdldCAgID0gZXZlbnQudGFyZ2V0LFxuICAgICAgICAgIG5vZGVOYW1lID0gdGFyZ2V0Lm5vZGVOYW1lLFxuICAgICAgICAgIHRpdGxlO1xuICAgICAgaWYgKG5vZGVOYW1lICE9PSBcIkFcIiAmJiBub2RlTmFtZSAhPT0gXCJJTUdcIikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB2YXIgaGFzVGl0bGUgPSB0YXJnZXQuaGFzQXR0cmlidXRlKFwidGl0bGVcIik7XG4gICAgICBpZighaGFzVGl0bGUpe1xuICAgICAgICB0aXRsZSA9IHRpdGxlUHJlZml4ZXNbbm9kZU5hbWVdICsgKHRhcmdldC5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpIHx8IHRhcmdldC5nZXRBdHRyaWJ1dGUoXCJzcmNcIikpO1xuICAgICAgICB0YXJnZXQuc2V0QXR0cmlidXRlKFwidGl0bGVcIiwgdGl0bGUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9O1xufSkod3lzaWh0bWw1KTsvKipcbiAqIENsYXNzIHRoYXQgdGFrZXMgY2FyZSB0aGF0IHRoZSB2YWx1ZSBvZiB0aGUgY29tcG9zZXIgYW5kIHRoZSB0ZXh0YXJlYSBpcyBhbHdheXMgaW4gc3luY1xuICovXG4oZnVuY3Rpb24od3lzaWh0bWw1KSB7XG4gIHZhciBJTlRFUlZBTCA9IDQwMDtcbiAgXG4gIHd5c2lodG1sNS52aWV3cy5TeW5jaHJvbml6ZXIgPSBCYXNlLmV4dGVuZChcbiAgICAvKiogQHNjb3BlIHd5c2lodG1sNS52aWV3cy5TeW5jaHJvbml6ZXIucHJvdG90eXBlICovIHtcblxuICAgIGNvbnN0cnVjdG9yOiBmdW5jdGlvbihlZGl0b3IsIHRleHRhcmVhLCBjb21wb3Nlcikge1xuICAgICAgdGhpcy5lZGl0b3IgICA9IGVkaXRvcjtcbiAgICAgIHRoaXMudGV4dGFyZWEgPSB0ZXh0YXJlYTtcbiAgICAgIHRoaXMuY29tcG9zZXIgPSBjb21wb3NlcjtcblxuICAgICAgdGhpcy5fb2JzZXJ2ZSgpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTeW5jIGh0bWwgZnJvbSBjb21wb3NlciB0byB0ZXh0YXJlYVxuICAgICAqIFRha2VzIGNhcmUgb2YgcGxhY2Vob2xkZXJzXG4gICAgICogQHBhcmFtIHtCb29sZWFufSBzaG91bGRQYXJzZUh0bWwgV2hldGhlciB0aGUgaHRtbCBzaG91bGQgYmUgc2FuaXRpemVkIGJlZm9yZSBpbnNlcnRpbmcgaXQgaW50byB0aGUgdGV4dGFyZWFcbiAgICAgKi9cbiAgICBmcm9tQ29tcG9zZXJUb1RleHRhcmVhOiBmdW5jdGlvbihzaG91bGRQYXJzZUh0bWwpIHtcbiAgICAgIHRoaXMudGV4dGFyZWEuc2V0VmFsdWUod3lzaWh0bWw1Lmxhbmcuc3RyaW5nKHRoaXMuY29tcG9zZXIuZ2V0VmFsdWUoKSkudHJpbSgpLCBzaG91bGRQYXJzZUh0bWwpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTeW5jIHZhbHVlIG9mIHRleHRhcmVhIHRvIGNvbXBvc2VyXG4gICAgICogVGFrZXMgY2FyZSBvZiBwbGFjZWhvbGRlcnNcbiAgICAgKiBAcGFyYW0ge0Jvb2xlYW59IHNob3VsZFBhcnNlSHRtbCBXaGV0aGVyIHRoZSBodG1sIHNob3VsZCBiZSBzYW5pdGl6ZWQgYmVmb3JlIGluc2VydGluZyBpdCBpbnRvIHRoZSBjb21wb3NlclxuICAgICAqL1xuICAgIGZyb21UZXh0YXJlYVRvQ29tcG9zZXI6IGZ1bmN0aW9uKHNob3VsZFBhcnNlSHRtbCkge1xuICAgICAgdmFyIHRleHRhcmVhVmFsdWUgPSB0aGlzLnRleHRhcmVhLmdldFZhbHVlKCk7XG4gICAgICBpZiAodGV4dGFyZWFWYWx1ZSkge1xuICAgICAgICB0aGlzLmNvbXBvc2VyLnNldFZhbHVlKHRleHRhcmVhVmFsdWUsIHNob3VsZFBhcnNlSHRtbCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNvbXBvc2VyLmNsZWFyKCk7XG4gICAgICAgIHRoaXMuZWRpdG9yLmZpcmUoXCJzZXRfcGxhY2Vob2xkZXJcIik7XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEludm9rZSBzeW5jaW5nIGJhc2VkIG9uIHZpZXcgc3RhdGVcbiAgICAgKiBAcGFyYW0ge0Jvb2xlYW59IHNob3VsZFBhcnNlSHRtbCBXaGV0aGVyIHRoZSBodG1sIHNob3VsZCBiZSBzYW5pdGl6ZWQgYmVmb3JlIGluc2VydGluZyBpdCBpbnRvIHRoZSBjb21wb3Nlci90ZXh0YXJlYVxuICAgICAqL1xuICAgIHN5bmM6IGZ1bmN0aW9uKHNob3VsZFBhcnNlSHRtbCkge1xuICAgICAgaWYgKHRoaXMuZWRpdG9yLmN1cnJlbnRWaWV3Lm5hbWUgPT09IFwidGV4dGFyZWFcIikge1xuICAgICAgICB0aGlzLmZyb21UZXh0YXJlYVRvQ29tcG9zZXIoc2hvdWxkUGFyc2VIdG1sKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZnJvbUNvbXBvc2VyVG9UZXh0YXJlYShzaG91bGRQYXJzZUh0bWwpO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBJbml0aWFsaXplcyBpbnRlcnZhbC1iYXNlZCBzeW5jaW5nXG4gICAgICogYWxzbyBtYWtlcyBzdXJlIHRoYXQgb24tc3VibWl0IHRoZSBjb21wb3NlcidzIGNvbnRlbnQgaXMgc3luY2VkIHdpdGggdGhlIHRleHRhcmVhXG4gICAgICogaW1tZWRpYXRlbHkgd2hlbiB0aGUgZm9ybSBnZXRzIHN1Ym1pdHRlZFxuICAgICAqL1xuICAgIF9vYnNlcnZlOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBpbnRlcnZhbCxcbiAgICAgICAgICB0aGF0ICAgICAgICAgID0gdGhpcyxcbiAgICAgICAgICBmb3JtICAgICAgICAgID0gdGhpcy50ZXh0YXJlYS5lbGVtZW50LmZvcm0sXG4gICAgICAgICAgc3RhcnRJbnRlcnZhbCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHsgdGhhdC5mcm9tQ29tcG9zZXJUb1RleHRhcmVhKCk7IH0sIElOVEVSVkFMKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHN0b3BJbnRlcnZhbCAgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpO1xuICAgICAgICAgICAgaW50ZXJ2YWwgPSBudWxsO1xuICAgICAgICAgIH07XG5cbiAgICAgIHN0YXJ0SW50ZXJ2YWwoKTtcblxuICAgICAgaWYgKGZvcm0pIHtcbiAgICAgICAgLy8gSWYgdGhlIHRleHRhcmVhIGlzIGluIGEgZm9ybSBtYWtlIHN1cmUgdGhhdCBhZnRlciBvbnJlc2V0IGFuZCBvbnN1Ym1pdCB0aGUgY29tcG9zZXJcbiAgICAgICAgLy8gaGFzIHRoZSBjb3JyZWN0IHN0YXRlXG4gICAgICAgIHd5c2lodG1sNS5kb20ub2JzZXJ2ZShmb3JtLCBcInN1Ym1pdFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICB0aGF0LnN5bmModHJ1ZSk7XG4gICAgICAgIH0pO1xuICAgICAgICB3eXNpaHRtbDUuZG9tLm9ic2VydmUoZm9ybSwgXCJyZXNldFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0aGF0LmZyb21UZXh0YXJlYVRvQ29tcG9zZXIoKTsgfSwgMCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmVkaXRvci5vbihcImNoYW5nZV92aWV3XCIsIGZ1bmN0aW9uKHZpZXcpIHtcbiAgICAgICAgaWYgKHZpZXcgPT09IFwiY29tcG9zZXJcIiAmJiAhaW50ZXJ2YWwpIHtcbiAgICAgICAgICB0aGF0LmZyb21UZXh0YXJlYVRvQ29tcG9zZXIodHJ1ZSk7XG4gICAgICAgICAgc3RhcnRJbnRlcnZhbCgpO1xuICAgICAgICB9IGVsc2UgaWYgKHZpZXcgPT09IFwidGV4dGFyZWFcIikge1xuICAgICAgICAgIHRoYXQuZnJvbUNvbXBvc2VyVG9UZXh0YXJlYSh0cnVlKTtcbiAgICAgICAgICBzdG9wSW50ZXJ2YWwoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuZWRpdG9yLm9uKFwiZGVzdHJveTpjb21wb3NlclwiLCBzdG9wSW50ZXJ2YWwpO1xuICAgIH1cbiAgfSk7XG59KSh3eXNpaHRtbDUpO1xud3lzaWh0bWw1LnZpZXdzLlRleHRhcmVhID0gd3lzaWh0bWw1LnZpZXdzLlZpZXcuZXh0ZW5kKFxuICAvKiogQHNjb3BlIHd5c2lodG1sNS52aWV3cy5UZXh0YXJlYS5wcm90b3R5cGUgKi8ge1xuICBuYW1lOiBcInRleHRhcmVhXCIsXG4gIFxuICBjb25zdHJ1Y3RvcjogZnVuY3Rpb24ocGFyZW50LCB0ZXh0YXJlYUVsZW1lbnQsIGNvbmZpZykge1xuICAgIHRoaXMuYmFzZShwYXJlbnQsIHRleHRhcmVhRWxlbWVudCwgY29uZmlnKTtcbiAgICBcbiAgICB0aGlzLl9vYnNlcnZlKCk7XG4gIH0sXG4gIFxuICBjbGVhcjogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5lbGVtZW50LnZhbHVlID0gXCJcIjtcbiAgfSxcbiAgXG4gIGdldFZhbHVlOiBmdW5jdGlvbihwYXJzZSkge1xuICAgIHZhciB2YWx1ZSA9IHRoaXMuaXNFbXB0eSgpID8gXCJcIiA6IHRoaXMuZWxlbWVudC52YWx1ZTtcbiAgICBpZiAocGFyc2UpIHtcbiAgICAgIHZhbHVlID0gdGhpcy5wYXJlbnQucGFyc2UodmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG4gIH0sXG4gIFxuICBzZXRWYWx1ZTogZnVuY3Rpb24oaHRtbCwgcGFyc2UpIHtcbiAgICBpZiAocGFyc2UpIHtcbiAgICAgIGh0bWwgPSB0aGlzLnBhcmVudC5wYXJzZShodG1sKTtcbiAgICB9XG4gICAgdGhpcy5lbGVtZW50LnZhbHVlID0gaHRtbDtcbiAgfSxcbiAgXG4gIGhhc1BsYWNlaG9sZGVyU2V0OiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3VwcG9ydHNQbGFjZWhvbGRlciA9IHd5c2lodG1sNS5icm93c2VyLnN1cHBvcnRzUGxhY2Vob2xkZXJBdHRyaWJ1dGVPbih0aGlzLmVsZW1lbnQpLFxuICAgICAgICBwbGFjZWhvbGRlclRleHQgICAgID0gdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZShcInBsYWNlaG9sZGVyXCIpIHx8IG51bGwsXG4gICAgICAgIHZhbHVlICAgICAgICAgICAgICAgPSB0aGlzLmVsZW1lbnQudmFsdWUsXG4gICAgICAgIGlzRW1wdHkgICAgICAgICAgICAgPSAhdmFsdWU7XG4gICAgcmV0dXJuIChzdXBwb3J0c1BsYWNlaG9sZGVyICYmIGlzRW1wdHkpIHx8ICh2YWx1ZSA9PT0gcGxhY2Vob2xkZXJUZXh0KTtcbiAgfSxcbiAgXG4gIGlzRW1wdHk6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiAhd3lzaWh0bWw1Lmxhbmcuc3RyaW5nKHRoaXMuZWxlbWVudC52YWx1ZSkudHJpbSgpIHx8IHRoaXMuaGFzUGxhY2Vob2xkZXJTZXQoKTtcbiAgfSxcbiAgXG4gIF9vYnNlcnZlOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgZWxlbWVudCA9IHRoaXMuZWxlbWVudCxcbiAgICAgICAgcGFyZW50ICA9IHRoaXMucGFyZW50LFxuICAgICAgICBldmVudE1hcHBpbmcgPSB7XG4gICAgICAgICAgZm9jdXNpbjogIFwiZm9jdXNcIixcbiAgICAgICAgICBmb2N1c291dDogXCJibHVyXCJcbiAgICAgICAgfSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENhbGxpbmcgZm9jdXMoKSBvciBibHVyKCkgb24gYW4gZWxlbWVudCBkb2Vzbid0IHN5bmNocm9ub3VzbHkgdHJpZ2dlciB0aGUgYXR0YWNoZWQgZm9jdXMvYmx1ciBldmVudHNcbiAgICAgICAgICogVGhpcyBpcyB0aGUgY2FzZSBmb3IgZm9jdXNpbiBhbmQgZm9jdXNvdXQsIHNvIGxldCdzIHVzZSB0aGVtIHdoZW5ldmVyIHBvc3NpYmxlLCBra3RoeGJhaVxuICAgICAgICAgKi9cbiAgICAgICAgZXZlbnRzID0gd3lzaWh0bWw1LmJyb3dzZXIuc3VwcG9ydHNFdmVudChcImZvY3VzaW5cIikgPyBbXCJmb2N1c2luXCIsIFwiZm9jdXNvdXRcIiwgXCJjaGFuZ2VcIl0gOiBbXCJmb2N1c1wiLCBcImJsdXJcIiwgXCJjaGFuZ2VcIl07XG4gICAgXG4gICAgcGFyZW50Lm9uKFwiYmVmb3JlbG9hZFwiLCBmdW5jdGlvbigpIHtcbiAgICAgIHd5c2lodG1sNS5kb20ub2JzZXJ2ZShlbGVtZW50LCBldmVudHMsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIHZhciBldmVudE5hbWUgPSBldmVudE1hcHBpbmdbZXZlbnQudHlwZV0gfHwgZXZlbnQudHlwZTtcbiAgICAgICAgcGFyZW50LmZpcmUoZXZlbnROYW1lKS5maXJlKGV2ZW50TmFtZSArIFwiOnRleHRhcmVhXCIpO1xuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHd5c2lodG1sNS5kb20ub2JzZXJ2ZShlbGVtZW50LCBbXCJwYXN0ZVwiLCBcImRyb3BcIl0sIGZ1bmN0aW9uKCkge1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyBwYXJlbnQuZmlyZShcInBhc3RlXCIpLmZpcmUoXCJwYXN0ZTp0ZXh0YXJlYVwiKTsgfSwgMCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufSk7LyoqXG4gKiBUb29sYmFyIERpYWxvZ1xuICpcbiAqIEBwYXJhbSB7RWxlbWVudH0gbGluayBUaGUgdG9vbGJhciBsaW5rIHdoaWNoIGNhdXNlcyB0aGUgZGlhbG9nIHRvIHNob3cgdXBcbiAqIEBwYXJhbSB7RWxlbWVudH0gY29udGFpbmVyIFRoZSBkaWFsb2cgY29udGFpbmVyXG4gKlxuICogQGV4YW1wbGVcbiAqICAgIDwhLS0gVG9vbGJhciBsaW5rIC0tPlxuICogICAgPGEgZGF0YS13eXNpaHRtbDUtY29tbWFuZD1cImluc2VydEltYWdlXCI+aW5zZXJ0IGFuIGltYWdlPC9hPlxuICpcbiAqICAgIDwhLS0gRGlhbG9nIC0tPlxuICogICAgPGRpdiBkYXRhLXd5c2lodG1sNS1kaWFsb2c9XCJpbnNlcnRJbWFnZVwiIHN0eWxlPVwiZGlzcGxheTogbm9uZTtcIj5cbiAqICAgICAgPGxhYmVsPlxuICogICAgICAgIFVSTDogPGlucHV0IGRhdGEtd3lzaWh0bWw1LWRpYWxvZy1maWVsZD1cInNyY1wiIHZhbHVlPVwiaHR0cDovL1wiPlxuICogICAgICA8L2xhYmVsPlxuICogICAgICA8bGFiZWw+XG4gKiAgICAgICAgQWx0ZXJuYXRpdmUgdGV4dDogPGlucHV0IGRhdGEtd3lzaWh0bWw1LWRpYWxvZy1maWVsZD1cImFsdFwiIHZhbHVlPVwiXCI+XG4gKiAgICAgIDwvbGFiZWw+XG4gKiAgICA8L2Rpdj5cbiAqXG4gKiAgICA8c2NyaXB0PlxuICogICAgICB2YXIgZGlhbG9nID0gbmV3IHd5c2lodG1sNS50b29sYmFyLkRpYWxvZyhcbiAqICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtd3lzaWh0bWw1LWNvbW1hbmQ9J2luc2VydEltYWdlJ11cIiksXG4gKiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIltkYXRhLXd5c2lodG1sNS1kaWFsb2c9J2luc2VydEltYWdlJ11cIilcbiAqICAgICAgKTtcbiAqICAgICAgZGlhbG9nLm9ic2VydmUoXCJzYXZlXCIsIGZ1bmN0aW9uKGF0dHJpYnV0ZXMpIHtcbiAqICAgICAgICAvLyBkbyBzb21ldGhpbmdcbiAqICAgICAgfSk7XG4gKiAgICA8L3NjcmlwdD5cbiAqL1xuKGZ1bmN0aW9uKHd5c2lodG1sNSkge1xuICB2YXIgZG9tICAgICAgICAgICAgICAgICAgICAgPSB3eXNpaHRtbDUuZG9tLFxuICAgICAgQ0xBU1NfTkFNRV9PUEVORUQgICAgICAgPSBcInd5c2lodG1sNS1jb21tYW5kLWRpYWxvZy1vcGVuZWRcIixcbiAgICAgIFNFTEVDVE9SX0ZPUk1fRUxFTUVOVFMgID0gXCJpbnB1dCwgc2VsZWN0LCB0ZXh0YXJlYVwiLFxuICAgICAgU0VMRUNUT1JfRklFTERTICAgICAgICAgPSBcIltkYXRhLXd5c2lodG1sNS1kaWFsb2ctZmllbGRdXCIsXG4gICAgICBBVFRSSUJVVEVfRklFTERTICAgICAgICA9IFwiZGF0YS13eXNpaHRtbDUtZGlhbG9nLWZpZWxkXCI7XG4gICAgICBcbiAgXG4gIHd5c2lodG1sNS50b29sYmFyLkRpYWxvZyA9IHd5c2lodG1sNS5sYW5nLkRpc3BhdGNoZXIuZXh0ZW5kKFxuICAgIC8qKiBAc2NvcGUgd3lzaWh0bWw1LnRvb2xiYXIuRGlhbG9nLnByb3RvdHlwZSAqLyB7XG4gICAgY29uc3RydWN0b3I6IGZ1bmN0aW9uKGxpbmssIGNvbnRhaW5lcikge1xuICAgICAgdGhpcy5saW5rICAgICAgID0gbGluaztcbiAgICAgIHRoaXMuY29udGFpbmVyICA9IGNvbnRhaW5lcjtcbiAgICB9LFxuXG4gICAgX29ic2VydmU6IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKHRoaXMuX29ic2VydmVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdmFyIHRoYXQgPSB0aGlzLFxuICAgICAgICAgIGNhbGxiYWNrV3JhcHBlciA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICB2YXIgYXR0cmlidXRlcyA9IHRoYXQuX3NlcmlhbGl6ZSgpO1xuICAgICAgICAgICAgaWYgKGF0dHJpYnV0ZXMgPT0gdGhhdC5lbGVtZW50VG9DaGFuZ2UpIHtcbiAgICAgICAgICAgICAgdGhhdC5maXJlKFwiZWRpdFwiLCBhdHRyaWJ1dGVzKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRoYXQuZmlyZShcInNhdmVcIiwgYXR0cmlidXRlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGF0LmhpZGUoKTtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICB9O1xuXG4gICAgICBkb20ub2JzZXJ2ZSh0aGF0LmxpbmssIFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChkb20uaGFzQ2xhc3ModGhhdC5saW5rLCBDTEFTU19OQU1FX09QRU5FRCkpIHtcbiAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyB0aGF0LmhpZGUoKTsgfSwgMCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICBkb20ub2JzZXJ2ZSh0aGlzLmNvbnRhaW5lciwgXCJrZXlkb3duXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIHZhciBrZXlDb2RlID0gZXZlbnQua2V5Q29kZTtcbiAgICAgICAgaWYgKGtleUNvZGUgPT09IHd5c2lodG1sNS5FTlRFUl9LRVkpIHtcbiAgICAgICAgICBjYWxsYmFja1dyYXBwZXIoZXZlbnQpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChrZXlDb2RlID09PSB3eXNpaHRtbDUuRVNDQVBFX0tFWSkge1xuICAgICAgICAgIHRoYXQuZmlyZShcImNhbmNlbFwiKTtcbiAgICAgICAgICB0aGF0LmhpZGUoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIGRvbS5kZWxlZ2F0ZSh0aGlzLmNvbnRhaW5lciwgXCJbZGF0YS13eXNpaHRtbDUtZGlhbG9nLWFjdGlvbj1zYXZlXVwiLCBcImNsaWNrXCIsIGNhbGxiYWNrV3JhcHBlcik7XG5cbiAgICAgIGRvbS5kZWxlZ2F0ZSh0aGlzLmNvbnRhaW5lciwgXCJbZGF0YS13eXNpaHRtbDUtZGlhbG9nLWFjdGlvbj1jYW5jZWxdXCIsIFwiY2xpY2tcIiwgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgdGhhdC5maXJlKFwiY2FuY2VsXCIpO1xuICAgICAgICB0aGF0LmhpZGUoKTtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICB9KTtcblxuICAgICAgdmFyIGZvcm1FbGVtZW50cyAgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKFNFTEVDVE9SX0ZPUk1fRUxFTUVOVFMpLFxuICAgICAgICAgIGkgICAgICAgICAgICAgPSAwLFxuICAgICAgICAgIGxlbmd0aCAgICAgICAgPSBmb3JtRWxlbWVudHMubGVuZ3RoLFxuICAgICAgICAgIF9jbGVhckludGVydmFsID0gZnVuY3Rpb24oKSB7IGNsZWFySW50ZXJ2YWwodGhhdC5pbnRlcnZhbCk7IH07XG4gICAgICBmb3IgKDsgaTxsZW5ndGg7IGkrKykge1xuICAgICAgICBkb20ub2JzZXJ2ZShmb3JtRWxlbWVudHNbaV0sIFwiY2hhbmdlXCIsIF9jbGVhckludGVydmFsKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fb2JzZXJ2ZWQgPSB0cnVlO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBHcmFicyBhbGwgZmllbGRzIGluIHRoZSBkaWFsb2cgYW5kIHB1dHMgdGhlbSBpbiBrZXk9PnZhbHVlIHN0eWxlIGluIGFuIG9iamVjdCB3aGljaFxuICAgICAqIHRoZW4gZ2V0cyByZXR1cm5lZFxuICAgICAqL1xuICAgIF9zZXJpYWxpemU6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGRhdGEgICAgPSB0aGlzLmVsZW1lbnRUb0NoYW5nZSB8fCB7fSxcbiAgICAgICAgICBmaWVsZHMgID0gdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvckFsbChTRUxFQ1RPUl9GSUVMRFMpLFxuICAgICAgICAgIGxlbmd0aCAgPSBmaWVsZHMubGVuZ3RoLFxuICAgICAgICAgIGkgICAgICAgPSAwO1xuICAgICAgZm9yICg7IGk8bGVuZ3RoOyBpKyspIHtcbiAgICAgICAgZGF0YVtmaWVsZHNbaV0uZ2V0QXR0cmlidXRlKEFUVFJJQlVURV9GSUVMRFMpXSA9IGZpZWxkc1tpXS52YWx1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBUYWtlcyB0aGUgYXR0cmlidXRlcyBvZiB0aGUgXCJlbGVtZW50VG9DaGFuZ2VcIlxuICAgICAqIGFuZCBpbnNlcnRzIHRoZW0gaW4gdGhlaXIgY29ycmVzcG9uZGluZyBkaWFsb2cgaW5wdXQgZmllbGRzXG4gICAgICogXG4gICAgICogQXNzdW1lIHRoZSBcImVsZW1lbnRUb0NoYW5nZVwiIGxvb2tzIGxpa2UgdGhpczpcbiAgICAgKiAgICA8YSBocmVmPVwiaHR0cDovL3d3dy5nb29nbGUuY29tXCIgdGFyZ2V0PVwiX2JsYW5rXCI+Zm9vPC9hPlxuICAgICAqXG4gICAgICogYW5kIHdlIGhhdmUgdGhlIGZvbGxvd2luZyBkaWFsb2c6XG4gICAgICogICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgZGF0YS13eXNpaHRtbDUtZGlhbG9nLWZpZWxkPVwiaHJlZlwiIHZhbHVlPVwiXCI+XG4gICAgICogICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgZGF0YS13eXNpaHRtbDUtZGlhbG9nLWZpZWxkPVwidGFyZ2V0XCIgdmFsdWU9XCJcIj5cbiAgICAgKiBcbiAgICAgKiBhZnRlciBjYWxsaW5nIF9pbnRlcnBvbGF0ZSgpIHRoZSBkaWFsb2cgd2lsbCBsb29rIGxpa2UgdGhpc1xuICAgICAqICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGRhdGEtd3lzaWh0bWw1LWRpYWxvZy1maWVsZD1cImhyZWZcIiB2YWx1ZT1cImh0dHA6Ly93d3cuZ29vZ2xlLmNvbVwiPlxuICAgICAqICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGRhdGEtd3lzaWh0bWw1LWRpYWxvZy1maWVsZD1cInRhcmdldFwiIHZhbHVlPVwiX2JsYW5rXCI+XG4gICAgICpcbiAgICAgKiBCYXNpY2FsbHkgaXQgYWRvcHRlZCB0aGUgYXR0cmlidXRlIHZhbHVlcyBpbnRvIHRoZSBjb3JyZXNwb25kaW5nIGlucHV0IGZpZWxkc1xuICAgICAqXG4gICAgICovXG4gICAgX2ludGVycG9sYXRlOiBmdW5jdGlvbihhdm9pZEhpZGRlbkZpZWxkcykge1xuICAgICAgdmFyIGZpZWxkLFxuICAgICAgICAgIGZpZWxkTmFtZSxcbiAgICAgICAgICBuZXdWYWx1ZSxcbiAgICAgICAgICBmb2N1c2VkRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCI6Zm9jdXNcIiksXG4gICAgICAgICAgZmllbGRzICAgICAgICAgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKFNFTEVDVE9SX0ZJRUxEUyksXG4gICAgICAgICAgbGVuZ3RoICAgICAgICAgPSBmaWVsZHMubGVuZ3RoLFxuICAgICAgICAgIGkgICAgICAgICAgICAgID0gMDtcbiAgICAgIGZvciAoOyBpPGxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGZpZWxkID0gZmllbGRzW2ldO1xuICAgICAgICBcbiAgICAgICAgLy8gTmV2ZXIgY2hhbmdlIGVsZW1lbnRzIHdoZXJlIHRoZSB1c2VyIGlzIGN1cnJlbnRseSB0eXBpbmcgaW5cbiAgICAgICAgaWYgKGZpZWxkID09PSBmb2N1c2VkRWxlbWVudCkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBEb24ndCB1cGRhdGUgaGlkZGVuIGZpZWxkc1xuICAgICAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3hpbmcvd3lzaWh0bWw1L3B1bGwvMTRcbiAgICAgICAgaWYgKGF2b2lkSGlkZGVuRmllbGRzICYmIGZpZWxkLnR5cGUgPT09IFwiaGlkZGVuXCIpIHtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgZmllbGROYW1lID0gZmllbGQuZ2V0QXR0cmlidXRlKEFUVFJJQlVURV9GSUVMRFMpO1xuICAgICAgICBuZXdWYWx1ZSAgPSB0aGlzLmVsZW1lbnRUb0NoYW5nZSA/ICh0aGlzLmVsZW1lbnRUb0NoYW5nZVtmaWVsZE5hbWVdIHx8IFwiXCIpIDogZmllbGQuZGVmYXVsdFZhbHVlO1xuICAgICAgICBmaWVsZC52YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBTaG93IHRoZSBkaWFsb2cgZWxlbWVudFxuICAgICAqL1xuICAgIHNob3c6IGZ1bmN0aW9uKGVsZW1lbnRUb0NoYW5nZSkge1xuICAgICAgaWYgKGRvbS5oYXNDbGFzcyh0aGlzLmxpbmssIENMQVNTX05BTUVfT1BFTkVEKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBcbiAgICAgIHZhciB0aGF0ICAgICAgICA9IHRoaXMsXG4gICAgICAgICAgZmlyc3RGaWVsZCAgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFNFTEVDVE9SX0ZPUk1fRUxFTUVOVFMpO1xuICAgICAgdGhpcy5lbGVtZW50VG9DaGFuZ2UgPSBlbGVtZW50VG9DaGFuZ2U7XG4gICAgICB0aGlzLl9vYnNlcnZlKCk7XG4gICAgICB0aGlzLl9pbnRlcnBvbGF0ZSgpO1xuICAgICAgaWYgKGVsZW1lbnRUb0NoYW5nZSkge1xuICAgICAgICB0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7IHRoYXQuX2ludGVycG9sYXRlKHRydWUpOyB9LCA1MDApO1xuICAgICAgfVxuICAgICAgZG9tLmFkZENsYXNzKHRoaXMubGluaywgQ0xBU1NfTkFNRV9PUEVORUQpO1xuICAgICAgdGhpcy5jb250YWluZXIuc3R5bGUuZGlzcGxheSA9IFwiXCI7XG4gICAgICB0aGlzLmZpcmUoXCJzaG93XCIpO1xuICAgICAgaWYgKGZpcnN0RmllbGQgJiYgIWVsZW1lbnRUb0NoYW5nZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGZpcnN0RmllbGQuZm9jdXMoKTtcbiAgICAgICAgfSBjYXRjaChlKSB7fVxuICAgICAgfVxuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBIaWRlIHRoZSBkaWFsb2cgZWxlbWVudFxuICAgICAqL1xuICAgIGhpZGU6IGZ1bmN0aW9uKCkge1xuICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTtcbiAgICAgIHRoaXMuZWxlbWVudFRvQ2hhbmdlID0gbnVsbDtcbiAgICAgIGRvbS5yZW1vdmVDbGFzcyh0aGlzLmxpbmssIENMQVNTX05BTUVfT1BFTkVEKTtcbiAgICAgIHRoaXMuY29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgIHRoaXMuZmlyZShcImhpZGVcIik7XG4gICAgfVxuICB9KTtcbn0pKHd5c2lodG1sNSk7XG4vKipcbiAqIENvbnZlcnRzIHNwZWVjaC10by10ZXh0IGFuZCBpbnNlcnRzIHRoaXMgaW50byB0aGUgZWRpdG9yXG4gKiBBcyBvZiBub3cgKDIwMTEvMDMvMjUpIHRoaXMgb25seSBpcyBzdXBwb3J0ZWQgaW4gQ2hyb21lID49IDExXG4gKlxuICogTm90ZSB0aGF0IGl0IHNlbmRzIHRoZSByZWNvcmRlZCBhdWRpbyB0byB0aGUgZ29vZ2xlIHNwZWVjaCByZWNvZ25pdGlvbiBhcGk6XG4gKiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQzNjE4MjYvZG9lcy1jaHJvbWUtaGF2ZS1idWlsLWluLXNwZWVjaC1yZWNvZ25pdGlvbi1mb3ItaW5wdXQtdHlwZS10ZXh0LXgtd2Via2l0LXNwZWVjXG4gKlxuICogQ3VycmVudCBIVE1MNSBkcmFmdCBjYW4gYmUgZm91bmQgaGVyZVxuICogaHR0cDovL2xpc3RzLnczLm9yZy9BcmNoaXZlcy9QdWJsaWMvcHVibGljLXhnLWh0bWxzcGVlY2gvMjAxMUZlYi9hdHQtMDAyMC9hcGktZHJhZnQuaHRtbFxuICogXG4gKiBcIkFjY2Vzc2luZyBHb29nbGUgU3BlZWNoIEFQSSBDaHJvbWUgMTFcIlxuICogaHR0cDovL21pa2VwdWx0ei5jb20vMjAxMS8wMy9hY2Nlc3NpbmctZ29vZ2xlLXNwZWVjaC1hcGktY2hyb21lLTExL1xuICovXG4oZnVuY3Rpb24od3lzaWh0bWw1KSB7XG4gIHZhciBkb20gPSB3eXNpaHRtbDUuZG9tO1xuICBcbiAgdmFyIGxpbmtTdHlsZXMgPSB7XG4gICAgcG9zaXRpb246IFwicmVsYXRpdmVcIlxuICB9O1xuICBcbiAgdmFyIHdyYXBwZXJTdHlsZXMgPSB7XG4gICAgbGVmdDogICAgIDAsXG4gICAgbWFyZ2luOiAgIDAsXG4gICAgb3BhY2l0eTogIDAsXG4gICAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG4gICAgcGFkZGluZzogIDAsXG4gICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICB0b3A6ICAgICAgMCxcbiAgICB6SW5kZXg6ICAgMVxuICB9O1xuICBcbiAgdmFyIGlucHV0U3R5bGVzID0ge1xuICAgIGN1cnNvcjogICAgIFwiaW5oZXJpdFwiLFxuICAgIGZvbnRTaXplOiAgIFwiNTBweFwiLFxuICAgIGhlaWdodDogICAgIFwiNTBweFwiLFxuICAgIG1hcmdpblRvcDogIFwiLTI1cHhcIixcbiAgICBvdXRsaW5lOiAgICAwLFxuICAgIHBhZGRpbmc6ICAgIDAsXG4gICAgcG9zaXRpb246ICAgXCJhYnNvbHV0ZVwiLFxuICAgIHJpZ2h0OiAgICAgIFwiLTRweFwiLFxuICAgIHRvcDogICAgICAgIFwiNTAlXCJcbiAgfTtcbiAgXG4gIHZhciBpbnB1dEF0dHJpYnV0ZXMgPSB7XG4gICAgXCJ4LXdlYmtpdC1zcGVlY2hcIjogXCJcIixcbiAgICBcInNwZWVjaFwiOiAgICAgICAgICBcIlwiXG4gIH07XG4gIFxuICB3eXNpaHRtbDUudG9vbGJhci5TcGVlY2ggPSBmdW5jdGlvbihwYXJlbnQsIGxpbmspIHtcbiAgICB2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgaWYgKCF3eXNpaHRtbDUuYnJvd3Nlci5zdXBwb3J0c1NwZWVjaEFwaU9uKGlucHV0KSkge1xuICAgICAgbGluay5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBsYW5nID0gcGFyZW50LmVkaXRvci50ZXh0YXJlYS5lbGVtZW50LmdldEF0dHJpYnV0ZShcImxhbmdcIik7XG4gICAgaWYgKGxhbmcpIHtcbiAgICAgIGlucHV0QXR0cmlidXRlcy5sYW5nID0gbGFuZztcbiAgICB9XG5cbiAgICB2YXIgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgXG4gICAgd3lzaWh0bWw1Lmxhbmcub2JqZWN0KHdyYXBwZXJTdHlsZXMpLm1lcmdlKHtcbiAgICAgIHdpZHRoOiAgbGluay5vZmZzZXRXaWR0aCAgKyBcInB4XCIsXG4gICAgICBoZWlnaHQ6IGxpbmsub2Zmc2V0SGVpZ2h0ICsgXCJweFwiXG4gICAgfSk7XG4gICAgXG4gICAgZG9tLmluc2VydChpbnB1dCkuaW50byh3cmFwcGVyKTtcbiAgICBkb20uaW5zZXJ0KHdyYXBwZXIpLmludG8obGluayk7XG4gICAgXG4gICAgZG9tLnNldFN0eWxlcyhpbnB1dFN0eWxlcykub24oaW5wdXQpO1xuICAgIGRvbS5zZXRBdHRyaWJ1dGVzKGlucHV0QXR0cmlidXRlcykub24oaW5wdXQpO1xuICAgIFxuICAgIGRvbS5zZXRTdHlsZXMod3JhcHBlclN0eWxlcykub24od3JhcHBlcik7XG4gICAgZG9tLnNldFN0eWxlcyhsaW5rU3R5bGVzKS5vbihsaW5rKTtcbiAgICBcbiAgICB2YXIgZXZlbnROYW1lID0gXCJvbndlYmtpdHNwZWVjaGNoYW5nZVwiIGluIGlucHV0ID8gXCJ3ZWJraXRzcGVlY2hjaGFuZ2VcIiA6IFwic3BlZWNoY2hhbmdlXCI7XG4gICAgZG9tLm9ic2VydmUoaW5wdXQsIGV2ZW50TmFtZSwgZnVuY3Rpb24oKSB7XG4gICAgICBwYXJlbnQuZXhlY0NvbW1hbmQoXCJpbnNlcnRUZXh0XCIsIGlucHV0LnZhbHVlKTtcbiAgICAgIGlucHV0LnZhbHVlID0gXCJcIjtcbiAgICB9KTtcbiAgICBcbiAgICBkb20ub2JzZXJ2ZShpbnB1dCwgXCJjbGlja1wiLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgaWYgKGRvbS5oYXNDbGFzcyhsaW5rLCBcInd5c2lodG1sNS1jb21tYW5kLWRpc2FibGVkXCIpKSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH0pO1xuICB9O1xufSkod3lzaWh0bWw1KTsvKipcbiAqIFRvb2xiYXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcGFyZW50IFJlZmVyZW5jZSB0byBpbnN0YW5jZSBvZiBFZGl0b3IgaW5zdGFuY2VcbiAqIEBwYXJhbSB7RWxlbWVudH0gY29udGFpbmVyIFJlZmVyZW5jZSB0byB0aGUgdG9vbGJhciBjb250YWluZXIgZWxlbWVudFxuICpcbiAqIEBleGFtcGxlXG4gKiAgICA8ZGl2IGlkPVwidG9vbGJhclwiPlxuICogICAgICA8YSBkYXRhLXd5c2lodG1sNS1jb21tYW5kPVwiY3JlYXRlTGlua1wiPmluc2VydCBsaW5rPC9hPlxuICogICAgICA8YSBkYXRhLXd5c2lodG1sNS1jb21tYW5kPVwiZm9ybWF0QmxvY2tcIiBkYXRhLXd5c2lodG1sNS1jb21tYW5kLXZhbHVlPVwiaDFcIj5pbnNlcnQgaDE8L2E+XG4gKiAgICA8L2Rpdj5cbiAqXG4gKiAgICA8c2NyaXB0PlxuICogICAgICB2YXIgdG9vbGJhciA9IG5ldyB3eXNpaHRtbDUudG9vbGJhci5Ub29sYmFyKGVkaXRvciwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b29sYmFyXCIpKTtcbiAqICAgIDwvc2NyaXB0PlxuICovXG4oZnVuY3Rpb24od3lzaWh0bWw1KSB7XG4gIHZhciBDTEFTU19OQU1FX0NPTU1BTkRfRElTQUJMRUQgICA9IFwid3lzaWh0bWw1LWNvbW1hbmQtZGlzYWJsZWRcIixcbiAgICAgIENMQVNTX05BTUVfQ09NTUFORFNfRElTQUJMRUQgID0gXCJ3eXNpaHRtbDUtY29tbWFuZHMtZGlzYWJsZWRcIixcbiAgICAgIENMQVNTX05BTUVfQ09NTUFORF9BQ1RJVkUgICAgID0gXCJ3eXNpaHRtbDUtY29tbWFuZC1hY3RpdmVcIixcbiAgICAgIENMQVNTX05BTUVfQUNUSU9OX0FDVElWRSAgICAgID0gXCJ3eXNpaHRtbDUtYWN0aW9uLWFjdGl2ZVwiLFxuICAgICAgZG9tICAgICAgICAgICAgICAgICAgICAgICAgICAgPSB3eXNpaHRtbDUuZG9tO1xuICBcbiAgd3lzaWh0bWw1LnRvb2xiYXIuVG9vbGJhciA9IEJhc2UuZXh0ZW5kKFxuICAgIC8qKiBAc2NvcGUgd3lzaWh0bWw1LnRvb2xiYXIuVG9vbGJhci5wcm90b3R5cGUgKi8ge1xuICAgIGNvbnN0cnVjdG9yOiBmdW5jdGlvbihlZGl0b3IsIGNvbnRhaW5lcikge1xuICAgICAgdGhpcy5lZGl0b3IgICAgID0gZWRpdG9yO1xuICAgICAgdGhpcy5jb250YWluZXIgID0gdHlwZW9mKGNvbnRhaW5lcikgPT09IFwic3RyaW5nXCIgPyBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChjb250YWluZXIpIDogY29udGFpbmVyO1xuICAgICAgdGhpcy5jb21wb3NlciAgID0gZWRpdG9yLmNvbXBvc2VyO1xuXG4gICAgICB0aGlzLl9nZXRMaW5rcyhcImNvbW1hbmRcIik7XG4gICAgICB0aGlzLl9nZXRMaW5rcyhcImFjdGlvblwiKTtcblxuICAgICAgdGhpcy5fb2JzZXJ2ZSgpO1xuICAgICAgdGhpcy5zaG93KCk7XG4gICAgICBcbiAgICAgIHZhciBzcGVlY2hJbnB1dExpbmtzICA9IHRoaXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS13eXNpaHRtbDUtY29tbWFuZD1pbnNlcnRTcGVlY2hdXCIpLFxuICAgICAgICAgIGxlbmd0aCAgICAgICAgICAgID0gc3BlZWNoSW5wdXRMaW5rcy5sZW5ndGgsXG4gICAgICAgICAgaSAgICAgICAgICAgICAgICAgPSAwO1xuICAgICAgZm9yICg7IGk8bGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbmV3IHd5c2lodG1sNS50b29sYmFyLlNwZWVjaCh0aGlzLCBzcGVlY2hJbnB1dExpbmtzW2ldKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgX2dldExpbmtzOiBmdW5jdGlvbih0eXBlKSB7XG4gICAgICB2YXIgbGlua3MgICA9IHRoaXNbdHlwZSArIFwiTGlua3NcIl0gPSB3eXNpaHRtbDUubGFuZy5hcnJheSh0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKFwiW2RhdGEtd3lzaWh0bWw1LVwiICsgdHlwZSArIFwiXVwiKSkuZ2V0KCksXG4gICAgICAgICAgbGVuZ3RoICA9IGxpbmtzLmxlbmd0aCxcbiAgICAgICAgICBpICAgICAgID0gMCxcbiAgICAgICAgICBtYXBwaW5nID0gdGhpc1t0eXBlICsgXCJNYXBwaW5nXCJdID0ge30sXG4gICAgICAgICAgbGluayxcbiAgICAgICAgICBncm91cCxcbiAgICAgICAgICBuYW1lLFxuICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgIGRpYWxvZztcbiAgICAgIGZvciAoOyBpPGxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxpbmsgICAgPSBsaW5rc1tpXTtcbiAgICAgICAgbmFtZSAgICA9IGxpbmsuZ2V0QXR0cmlidXRlKFwiZGF0YS13eXNpaHRtbDUtXCIgKyB0eXBlKTtcbiAgICAgICAgdmFsdWUgICA9IGxpbmsuZ2V0QXR0cmlidXRlKFwiZGF0YS13eXNpaHRtbDUtXCIgKyB0eXBlICsgXCItdmFsdWVcIik7XG4gICAgICAgIGdyb3VwICAgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFwiW2RhdGEtd3lzaWh0bWw1LVwiICsgdHlwZSArIFwiLWdyb3VwPSdcIiArIG5hbWUgKyBcIiddXCIpO1xuICAgICAgICBkaWFsb2cgID0gdGhpcy5fZ2V0RGlhbG9nKGxpbmssIG5hbWUpO1xuICAgICAgICBcbiAgICAgICAgbWFwcGluZ1tuYW1lICsgXCI6XCIgKyB2YWx1ZV0gPSB7XG4gICAgICAgICAgbGluazogICBsaW5rLFxuICAgICAgICAgIGdyb3VwOiAgZ3JvdXAsXG4gICAgICAgICAgbmFtZTogICBuYW1lLFxuICAgICAgICAgIHZhbHVlOiAgdmFsdWUsXG4gICAgICAgICAgZGlhbG9nOiBkaWFsb2csXG4gICAgICAgICAgc3RhdGU6ICBmYWxzZVxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBfZ2V0RGlhbG9nOiBmdW5jdGlvbihsaW5rLCBjb21tYW5kKSB7XG4gICAgICB2YXIgdGhhdCAgICAgICAgICA9IHRoaXMsXG4gICAgICAgICAgZGlhbG9nRWxlbWVudCA9IHRoaXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS13eXNpaHRtbDUtZGlhbG9nPSdcIiArIGNvbW1hbmQgKyBcIiddXCIpLFxuICAgICAgICAgIGRpYWxvZyxcbiAgICAgICAgICBjYXJldEJvb2ttYXJrO1xuICAgICAgXG4gICAgICBpZiAoZGlhbG9nRWxlbWVudCkge1xuICAgICAgICBkaWFsb2cgPSBuZXcgd3lzaWh0bWw1LnRvb2xiYXIuRGlhbG9nKGxpbmssIGRpYWxvZ0VsZW1lbnQpO1xuXG4gICAgICAgIGRpYWxvZy5vbihcInNob3dcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgY2FyZXRCb29rbWFyayA9IHRoYXQuY29tcG9zZXIuc2VsZWN0aW9uLmdldEJvb2ttYXJrKCk7XG5cbiAgICAgICAgICB0aGF0LmVkaXRvci5maXJlKFwic2hvdzpkaWFsb2dcIiwgeyBjb21tYW5kOiBjb21tYW5kLCBkaWFsb2dDb250YWluZXI6IGRpYWxvZ0VsZW1lbnQsIGNvbW1hbmRMaW5rOiBsaW5rIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBkaWFsb2cub24oXCJzYXZlXCIsIGZ1bmN0aW9uKGF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICBpZiAoY2FyZXRCb29rbWFyaykge1xuICAgICAgICAgICAgdGhhdC5jb21wb3Nlci5zZWxlY3Rpb24uc2V0Qm9va21hcmsoY2FyZXRCb29rbWFyayk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoYXQuX2V4ZWNDb21tYW5kKGNvbW1hbmQsIGF0dHJpYnV0ZXMpO1xuICAgICAgICAgIFxuICAgICAgICAgIHRoYXQuZWRpdG9yLmZpcmUoXCJzYXZlOmRpYWxvZ1wiLCB7IGNvbW1hbmQ6IGNvbW1hbmQsIGRpYWxvZ0NvbnRhaW5lcjogZGlhbG9nRWxlbWVudCwgY29tbWFuZExpbms6IGxpbmsgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGRpYWxvZy5vbihcImNhbmNlbFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICB0aGF0LmVkaXRvci5mb2N1cyhmYWxzZSk7XG4gICAgICAgICAgdGhhdC5lZGl0b3IuZmlyZShcImNhbmNlbDpkaWFsb2dcIiwgeyBjb21tYW5kOiBjb21tYW5kLCBkaWFsb2dDb250YWluZXI6IGRpYWxvZ0VsZW1lbnQsIGNvbW1hbmRMaW5rOiBsaW5rIH0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBkaWFsb2c7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogICAgdmFyIHRvb2xiYXIgPSBuZXcgd3lzaWh0bWw1LlRvb2xiYXIoKTtcbiAgICAgKiAgICAvLyBJbnNlcnQgYSA8YmxvY2txdW90ZT4gZWxlbWVudCBvciB3cmFwIGN1cnJlbnQgc2VsZWN0aW9uIGluIDxibG9ja3F1b3RlPlxuICAgICAqICAgIHRvb2xiYXIuZXhlY0NvbW1hbmQoXCJmb3JtYXRCbG9ja1wiLCBcImJsb2NrcXVvdGVcIik7XG4gICAgICovXG4gICAgZXhlY0NvbW1hbmQ6IGZ1bmN0aW9uKGNvbW1hbmQsIGNvbW1hbmRWYWx1ZSkge1xuICAgICAgaWYgKHRoaXMuY29tbWFuZHNEaXNhYmxlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBjb21tYW5kT2JqID0gdGhpcy5jb21tYW5kTWFwcGluZ1tjb21tYW5kICsgXCI6XCIgKyBjb21tYW5kVmFsdWVdO1xuXG4gICAgICAvLyBTaG93IGRpYWxvZyB3aGVuIGF2YWlsYWJsZVxuICAgICAgaWYgKGNvbW1hbmRPYmogJiYgY29tbWFuZE9iai5kaWFsb2cgJiYgIWNvbW1hbmRPYmouc3RhdGUpIHtcbiAgICAgICAgY29tbWFuZE9iai5kaWFsb2cuc2hvdygpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fZXhlY0NvbW1hbmQoY29tbWFuZCwgY29tbWFuZFZhbHVlKTtcbiAgICAgIH1cbiAgICB9LFxuXG4gICAgX2V4ZWNDb21tYW5kOiBmdW5jdGlvbihjb21tYW5kLCBjb21tYW5kVmFsdWUpIHtcbiAgICAgIC8vIE1ha2Ugc3VyZSB0aGF0IGNvbXBvc2VyIGlzIGZvY3Vzc2VkIChmYWxzZSA9PiBkb24ndCBtb3ZlIGNhcmV0IHRvIHRoZSBlbmQpXG4gICAgICB0aGlzLmVkaXRvci5mb2N1cyhmYWxzZSk7XG5cbiAgICAgIHRoaXMuY29tcG9zZXIuY29tbWFuZHMuZXhlYyhjb21tYW5kLCBjb21tYW5kVmFsdWUpO1xuICAgICAgdGhpcy5fdXBkYXRlTGlua1N0YXRlcygpO1xuICAgIH0sXG5cbiAgICBleGVjQWN0aW9uOiBmdW5jdGlvbihhY3Rpb24pIHtcbiAgICAgIHZhciBlZGl0b3IgPSB0aGlzLmVkaXRvcjtcbiAgICAgIGlmIChhY3Rpb24gPT09IFwiY2hhbmdlX3ZpZXdcIikge1xuICAgICAgICBpZiAoZWRpdG9yLmN1cnJlbnRWaWV3ID09PSBlZGl0b3IudGV4dGFyZWEpIHtcbiAgICAgICAgICBlZGl0b3IuZmlyZShcImNoYW5nZV92aWV3XCIsIFwiY29tcG9zZXJcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZWRpdG9yLmZpcmUoXCJjaGFuZ2Vfdmlld1wiLCBcInRleHRhcmVhXCIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIF9vYnNlcnZlOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB0aGF0ICAgICAgPSB0aGlzLFxuICAgICAgICAgIGVkaXRvciAgICA9IHRoaXMuZWRpdG9yLFxuICAgICAgICAgIGNvbnRhaW5lciA9IHRoaXMuY29udGFpbmVyLFxuICAgICAgICAgIGxpbmtzICAgICA9IHRoaXMuY29tbWFuZExpbmtzLmNvbmNhdCh0aGlzLmFjdGlvbkxpbmtzKSxcbiAgICAgICAgICBsZW5ndGggICAgPSBsaW5rcy5sZW5ndGgsXG4gICAgICAgICAgaSAgICAgICAgID0gMDtcbiAgICAgIFxuICAgICAgZm9yICg7IGk8bGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gJ2phdmFzY3JpcHQ6OycgYW5kIHVuc2VsZWN0YWJsZT1vbiBOZWVkZWQgZm9yIElFLCBidXQgZG9uZSBpbiBhbGwgYnJvd3NlcnMgdG8gbWFrZSBzdXJlIHRoYXQgYWxsIGdldCB0aGUgc2FtZSBjc3MgYXBwbGllZFxuICAgICAgICAvLyAoeW91IGtub3csIGE6bGluayB7IC4uLiB9IGRvZXNuJ3QgbWF0Y2ggYW5jaG9ycyB3aXRoIG1pc3NpbmcgaHJlZiBhdHRyaWJ1dGUpXG4gICAgICAgIGlmIChsaW5rc1tpXS5ub2RlTmFtZSA9PT0gXCJBXCIpIHtcbiAgICAgICAgICBkb20uc2V0QXR0cmlidXRlcyh7XG4gICAgICAgICAgICBocmVmOiAgICAgICAgIFwiamF2YXNjcmlwdDo7XCIsXG4gICAgICAgICAgICB1bnNlbGVjdGFibGU6IFwib25cIlxuICAgICAgICAgIH0pLm9uKGxpbmtzW2ldKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkb20uc2V0QXR0cmlidXRlcyh7IHVuc2VsZWN0YWJsZTogXCJvblwiIH0pLm9uKGxpbmtzW2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBOZWVkZWQgZm9yIG9wZXJhIGFuZCBjaHJvbWVcbiAgICAgIGRvbS5kZWxlZ2F0ZShjb250YWluZXIsIFwiW2RhdGEtd3lzaWh0bWw1LWNvbW1hbmRdLCBbZGF0YS13eXNpaHRtbDUtYWN0aW9uXVwiLCBcIm1vdXNlZG93blwiLCBmdW5jdGlvbihldmVudCkgeyBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyB9KTtcbiAgICAgIFxuICAgICAgZG9tLmRlbGVnYXRlKGNvbnRhaW5lciwgXCJbZGF0YS13eXNpaHRtbDUtY29tbWFuZF1cIiwgXCJjbGlja1wiLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICB2YXIgbGluayAgICAgICAgICA9IHRoaXMsXG4gICAgICAgICAgICBjb21tYW5kICAgICAgID0gbGluay5nZXRBdHRyaWJ1dGUoXCJkYXRhLXd5c2lodG1sNS1jb21tYW5kXCIpLFxuICAgICAgICAgICAgY29tbWFuZFZhbHVlICA9IGxpbmsuZ2V0QXR0cmlidXRlKFwiZGF0YS13eXNpaHRtbDUtY29tbWFuZC12YWx1ZVwiKTtcbiAgICAgICAgdGhhdC5leGVjQ29tbWFuZChjb21tYW5kLCBjb21tYW5kVmFsdWUpO1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfSk7XG5cbiAgICAgIGRvbS5kZWxlZ2F0ZShjb250YWluZXIsIFwiW2RhdGEtd3lzaWh0bWw1LWFjdGlvbl1cIiwgXCJjbGlja1wiLCBmdW5jdGlvbihldmVudCkge1xuICAgICAgICB2YXIgYWN0aW9uID0gdGhpcy5nZXRBdHRyaWJ1dGUoXCJkYXRhLXd5c2lodG1sNS1hY3Rpb25cIik7XG4gICAgICAgIHRoYXQuZXhlY0FjdGlvbihhY3Rpb24pO1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfSk7XG5cbiAgICAgIGVkaXRvci5vbihcImZvY3VzOmNvbXBvc2VyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICB0aGF0LmJvb2ttYXJrID0gbnVsbDtcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGF0LmludGVydmFsKTtcbiAgICAgICAgdGhhdC5pbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkgeyB0aGF0Ll91cGRhdGVMaW5rU3RhdGVzKCk7IH0sIDUwMCk7XG4gICAgICB9KTtcblxuICAgICAgZWRpdG9yLm9uKFwiYmx1cjpjb21wb3NlclwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGF0LmludGVydmFsKTtcbiAgICAgIH0pO1xuXG4gICAgICBlZGl0b3Iub24oXCJkZXN0cm95OmNvbXBvc2VyXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICBjbGVhckludGVydmFsKHRoYXQuaW50ZXJ2YWwpO1xuICAgICAgfSk7XG5cbiAgICAgIGVkaXRvci5vbihcImNoYW5nZV92aWV3XCIsIGZ1bmN0aW9uKGN1cnJlbnRWaWV3KSB7XG4gICAgICAgIC8vIFNldCB0aW1lb3V0IG5lZWRlZCBpbiBvcmRlciB0byBsZXQgdGhlIGJsdXIgZXZlbnQgZmlyZSBmaXJzdFxuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHRoYXQuY29tbWFuZHNEaXNhYmxlZCA9IChjdXJyZW50VmlldyAhPT0gXCJjb21wb3NlclwiKTtcbiAgICAgICAgICB0aGF0Ll91cGRhdGVMaW5rU3RhdGVzKCk7XG4gICAgICAgICAgaWYgKHRoYXQuY29tbWFuZHNEaXNhYmxlZCkge1xuICAgICAgICAgICAgZG9tLmFkZENsYXNzKGNvbnRhaW5lciwgQ0xBU1NfTkFNRV9DT01NQU5EU19ESVNBQkxFRCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRvbS5yZW1vdmVDbGFzcyhjb250YWluZXIsIENMQVNTX05BTUVfQ09NTUFORFNfRElTQUJMRUQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgMCk7XG4gICAgICB9KTtcbiAgICB9LFxuXG4gICAgX3VwZGF0ZUxpbmtTdGF0ZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGNvbW1hbmRNYXBwaW5nICAgID0gdGhpcy5jb21tYW5kTWFwcGluZyxcbiAgICAgICAgICBhY3Rpb25NYXBwaW5nICAgICA9IHRoaXMuYWN0aW9uTWFwcGluZyxcbiAgICAgICAgICBpLFxuICAgICAgICAgIHN0YXRlLFxuICAgICAgICAgIGFjdGlvbixcbiAgICAgICAgICBjb21tYW5kO1xuICAgICAgLy8gZXZlcnkgbWlsbGlzZWNvbmQgY291bnRzLi4uIHRoaXMgaXMgZXhlY3V0ZWQgcXVpdGUgb2Z0ZW5cbiAgICAgIGZvciAoaSBpbiBjb21tYW5kTWFwcGluZykge1xuICAgICAgICBjb21tYW5kID0gY29tbWFuZE1hcHBpbmdbaV07XG4gICAgICAgIGlmICh0aGlzLmNvbW1hbmRzRGlzYWJsZWQpIHtcbiAgICAgICAgICBzdGF0ZSA9IGZhbHNlO1xuICAgICAgICAgIGRvbS5yZW1vdmVDbGFzcyhjb21tYW5kLmxpbmssIENMQVNTX05BTUVfQ09NTUFORF9BQ1RJVkUpO1xuICAgICAgICAgIGlmIChjb21tYW5kLmdyb3VwKSB7XG4gICAgICAgICAgICBkb20ucmVtb3ZlQ2xhc3MoY29tbWFuZC5ncm91cCwgQ0xBU1NfTkFNRV9DT01NQU5EX0FDVElWRSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChjb21tYW5kLmRpYWxvZykge1xuICAgICAgICAgICAgY29tbWFuZC5kaWFsb2cuaGlkZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdGF0ZSA9IHRoaXMuY29tcG9zZXIuY29tbWFuZHMuc3RhdGUoY29tbWFuZC5uYW1lLCBjb21tYW5kLnZhbHVlKTtcbiAgICAgICAgICBpZiAod3lzaWh0bWw1Lmxhbmcub2JqZWN0KHN0YXRlKS5pc0FycmF5KCkpIHtcbiAgICAgICAgICAgIC8vIEdyYWIgZmlyc3QgYW5kIG9ubHkgb2JqZWN0L2VsZW1lbnQgaW4gc3RhdGUgYXJyYXksIG90aGVyd2lzZSBjb252ZXJ0IHN0YXRlIGludG8gYm9vbGVhblxuICAgICAgICAgICAgLy8gdG8gYXZvaWQgc2hvd2luZyBhIGRpYWxvZyBmb3IgbXVsdGlwbGUgc2VsZWN0ZWQgZWxlbWVudHMgd2hpY2ggbWF5IGhhdmUgZGlmZmVyZW50IGF0dHJpYnV0ZXNcbiAgICAgICAgICAgIC8vIGVnLiB3aGVuIHR3byBsaW5rcyB3aXRoIGRpZmZlcmVudCBocmVmIGFyZSBzZWxlY3RlZCwgdGhlIHN0YXRlIHdpbGwgYmUgYW4gYXJyYXkgY29uc2lzdGluZyBvZiBib3RoIGxpbmsgZWxlbWVudHNcbiAgICAgICAgICAgIC8vIGJ1dCB0aGUgZGlhbG9nIGludGVyZmFjZSBjYW4gb25seSB1cGRhdGUgb25lXG4gICAgICAgICAgICBzdGF0ZSA9IHN0YXRlLmxlbmd0aCA9PT0gMSA/IHN0YXRlWzBdIDogdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZG9tLnJlbW92ZUNsYXNzKGNvbW1hbmQubGluaywgQ0xBU1NfTkFNRV9DT01NQU5EX0RJU0FCTEVEKTtcbiAgICAgICAgICBpZiAoY29tbWFuZC5ncm91cCkge1xuICAgICAgICAgICAgZG9tLnJlbW92ZUNsYXNzKGNvbW1hbmQuZ3JvdXAsIENMQVNTX05BTUVfQ09NTUFORF9ESVNBQkxFRCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbW1hbmQuc3RhdGUgPT09IHN0YXRlKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBjb21tYW5kLnN0YXRlID0gc3RhdGU7XG4gICAgICAgIGlmIChzdGF0ZSkge1xuICAgICAgICAgIGRvbS5hZGRDbGFzcyhjb21tYW5kLmxpbmssIENMQVNTX05BTUVfQ09NTUFORF9BQ1RJVkUpO1xuICAgICAgICAgIGlmIChjb21tYW5kLmdyb3VwKSB7XG4gICAgICAgICAgICBkb20uYWRkQ2xhc3MoY29tbWFuZC5ncm91cCwgQ0xBU1NfTkFNRV9DT01NQU5EX0FDVElWRSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChjb21tYW5kLmRpYWxvZykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZihzdGF0ZSkgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgICAgY29tbWFuZC5kaWFsb2cuc2hvdyhzdGF0ZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBjb21tYW5kLmRpYWxvZy5oaWRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRvbS5yZW1vdmVDbGFzcyhjb21tYW5kLmxpbmssIENMQVNTX05BTUVfQ09NTUFORF9BQ1RJVkUpO1xuICAgICAgICAgIGlmIChjb21tYW5kLmdyb3VwKSB7XG4gICAgICAgICAgICBkb20ucmVtb3ZlQ2xhc3MoY29tbWFuZC5ncm91cCwgQ0xBU1NfTkFNRV9DT01NQU5EX0FDVElWRSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChjb21tYW5kLmRpYWxvZykge1xuICAgICAgICAgICAgY29tbWFuZC5kaWFsb2cuaGlkZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgXG4gICAgICBmb3IgKGkgaW4gYWN0aW9uTWFwcGluZykge1xuICAgICAgICBhY3Rpb24gPSBhY3Rpb25NYXBwaW5nW2ldO1xuICAgICAgICBcbiAgICAgICAgaWYgKGFjdGlvbi5uYW1lID09PSBcImNoYW5nZV92aWV3XCIpIHtcbiAgICAgICAgICBhY3Rpb24uc3RhdGUgPSB0aGlzLmVkaXRvci5jdXJyZW50VmlldyA9PT0gdGhpcy5lZGl0b3IudGV4dGFyZWE7XG4gICAgICAgICAgaWYgKGFjdGlvbi5zdGF0ZSkge1xuICAgICAgICAgICAgZG9tLmFkZENsYXNzKGFjdGlvbi5saW5rLCBDTEFTU19OQU1FX0FDVElPTl9BQ1RJVkUpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkb20ucmVtb3ZlQ2xhc3MoYWN0aW9uLmxpbmssIENMQVNTX05BTUVfQUNUSU9OX0FDVElWRSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIHNob3c6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5jb250YWluZXIuc3R5bGUuZGlzcGxheSA9IFwiXCI7XG4gICAgfSxcblxuICAgIGhpZGU6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5jb250YWluZXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIH1cbiAgfSk7XG4gIFxufSkod3lzaWh0bWw1KTtcbi8qKlxuICogV1lTSUhUTUw1IEVkaXRvclxuICpcbiAqIEBwYXJhbSB7RWxlbWVudH0gdGV4dGFyZWFFbGVtZW50IFJlZmVyZW5jZSB0byB0aGUgdGV4dGFyZWEgd2hpY2ggc2hvdWxkIGJlIHR1cm5lZCBpbnRvIGEgcmljaCB0ZXh0IGludGVyZmFjZVxuICogQHBhcmFtIHtPYmplY3R9IFtjb25maWddIFNlZSBkZWZhdWx0Q29uZmlnIG9iamVjdCBiZWxvdyBmb3IgZXhwbGFuYXRpb24gb2YgZWFjaCBpbmRpdmlkdWFsIGNvbmZpZyBvcHRpb25cbiAqXG4gKiBAZXZlbnRzXG4gKiAgICBsb2FkXG4gKiAgICBiZWZvcmVsb2FkIChmb3IgaW50ZXJuYWwgdXNlIG9ubHkpXG4gKiAgICBmb2N1c1xuICogICAgZm9jdXM6Y29tcG9zZXJcbiAqICAgIGZvY3VzOnRleHRhcmVhXG4gKiAgICBibHVyXG4gKiAgICBibHVyOmNvbXBvc2VyXG4gKiAgICBibHVyOnRleHRhcmVhXG4gKiAgICBjaGFuZ2VcbiAqICAgIGNoYW5nZTpjb21wb3NlclxuICogICAgY2hhbmdlOnRleHRhcmVhXG4gKiAgICBwYXN0ZVxuICogICAgcGFzdGU6Y29tcG9zZXJcbiAqICAgIHBhc3RlOnRleHRhcmVhXG4gKiAgICBuZXd3b3JkOmNvbXBvc2VyXG4gKiAgICBkZXN0cm95OmNvbXBvc2VyXG4gKiAgICB1bmRvOmNvbXBvc2VyXG4gKiAgICByZWRvOmNvbXBvc2VyXG4gKiAgICBiZWZvcmVjb21tYW5kOmNvbXBvc2VyXG4gKiAgICBhZnRlcmNvbW1hbmQ6Y29tcG9zZXJcbiAqICAgIGVuYWJsZTpjb21wb3NlclxuICogICAgZGlzYWJsZTpjb21wb3NlclxuICogICAgY2hhbmdlX3ZpZXdcbiAqL1xuKGZ1bmN0aW9uKHd5c2lodG1sNSkge1xuICB2YXIgdW5kZWY7XG4gIFxuICB2YXIgZGVmYXVsdENvbmZpZyA9IHtcbiAgICAvLyBHaXZlIHRoZSBlZGl0b3IgYSBuYW1lLCB0aGUgbmFtZSB3aWxsIGFsc28gYmUgc2V0IGFzIGNsYXNzIG5hbWUgb24gdGhlIGlmcmFtZSBhbmQgb24gdGhlIGlmcmFtZSdzIGJvZHkgXG4gICAgbmFtZTogICAgICAgICAgICAgICAgIHVuZGVmLFxuICAgIC8vIFdoZXRoZXIgdGhlIGVkaXRvciBzaG91bGQgbG9vayBsaWtlIHRoZSB0ZXh0YXJlYSAoYnkgYWRvcHRpbmcgc3R5bGVzKVxuICAgIHN0eWxlOiAgICAgICAgICAgICAgICB0cnVlLFxuICAgIC8vIElkIG9mIHRoZSB0b29sYmFyIGVsZW1lbnQsIHBhc3MgZmFsc2V5IHZhbHVlIGlmIHlvdSBkb24ndCB3YW50IGFueSB0b29sYmFyIGxvZ2ljXG4gICAgdG9vbGJhcjogICAgICAgICAgICAgIHVuZGVmLFxuICAgIC8vIFdoZXRoZXIgdXJscywgZW50ZXJlZCBieSB0aGUgdXNlciBzaG91bGQgYXV0b21hdGljYWxseSBiZWNvbWUgY2xpY2thYmxlLWxpbmtzXG4gICAgYXV0b0xpbms6ICAgICAgICAgICAgIHRydWUsXG4gICAgLy8gT2JqZWN0IHdoaWNoIGluY2x1ZGVzIHBhcnNlciBydWxlcyB0byBhcHBseSB3aGVuIGh0bWwgZ2V0cyBpbnNlcnRlZCB2aWEgY29weSAmIHBhc3RlXG4gICAgLy8gU2VlIHBhcnNlcl9ydWxlcy8qLmpzIGZvciBleGFtcGxlc1xuICAgIHBhcnNlclJ1bGVzOiAgICAgICAgICB7IHRhZ3M6IHsgYnI6IHt9LCBzcGFuOiB7fSwgZGl2OiB7fSwgcDoge30gfSwgY2xhc3Nlczoge30gfSxcbiAgICAvLyBQYXJzZXIgbWV0aG9kIHRvIHVzZSB3aGVuIHRoZSB1c2VyIGluc2VydHMgY29udGVudCB2aWEgY29weSAmIHBhc3RlXG4gICAgcGFyc2VyOiAgICAgICAgICAgICAgIHd5c2lodG1sNS5kb20ucGFyc2UsXG4gICAgLy8gQ2xhc3MgbmFtZSB3aGljaCBzaG91bGQgYmUgc2V0IG9uIHRoZSBjb250ZW50RWRpdGFibGUgZWxlbWVudCBpbiB0aGUgY3JlYXRlZCBzYW5kYm94IGlmcmFtZSwgY2FuIGJlIHN0eWxlZCB2aWEgdGhlICdzdHlsZXNoZWV0cycgb3B0aW9uXG4gICAgY29tcG9zZXJDbGFzc05hbWU6ICAgIFwid3lzaWh0bWw1LWVkaXRvclwiLFxuICAgIC8vIENsYXNzIG5hbWUgdG8gYWRkIHRvIHRoZSBib2R5IHdoZW4gdGhlIHd5c2lodG1sNSBlZGl0b3IgaXMgc3VwcG9ydGVkXG4gICAgYm9keUNsYXNzTmFtZTogICAgICAgIFwid3lzaWh0bWw1LXN1cHBvcnRlZFwiLFxuICAgIC8vIEJ5IGRlZmF1bHQgd3lzaWh0bWw1IHdpbGwgaW5zZXJ0IGEgPGJyPiBmb3IgbGluZSBicmVha3MsIHNldCB0aGlzIHRvIGZhbHNlIHRvIHVzZSA8cD5cbiAgICB1c2VMaW5lQnJlYWtzOiAgICAgICAgdHJ1ZSxcbiAgICAvLyBBcnJheSAob3Igc2luZ2xlIHN0cmluZykgb2Ygc3R5bGVzaGVldCB1cmxzIHRvIGJlIGxvYWRlZCBpbiB0aGUgZWRpdG9yJ3MgaWZyYW1lXG4gICAgc3R5bGVzaGVldHM6ICAgICAgICAgIFtdLFxuICAgIC8vIFBsYWNlaG9sZGVyIHRleHQgdG8gdXNlLCBkZWZhdWx0cyB0byB0aGUgcGxhY2Vob2xkZXIgYXR0cmlidXRlIG9uIHRoZSB0ZXh0YXJlYSBlbGVtZW50XG4gICAgcGxhY2Vob2xkZXJUZXh0OiAgICAgIHVuZGVmLFxuICAgIC8vIFdoZXRoZXIgdGhlIHJpY2ggdGV4dCBlZGl0b3Igc2hvdWxkIGJlIHJlbmRlcmVkIG9uIHRvdWNoIGRldmljZXMgKHd5c2lodG1sNSA+PSAwLjMuMCBjb21lcyB3aXRoIGJhc2ljIHN1cHBvcnQgZm9yIGlPUyA1KVxuICAgIHN1cHBvcnRUb3VjaERldmljZXM6ICB0cnVlLFxuICAgIC8vIFdoZXRoZXIgc2Vuc2VsZXNzIDxzcGFuPiBlbGVtZW50cyAoZW1wdHkgb3Igd2l0aG91dCBhdHRyaWJ1dGVzKSBzaG91bGQgYmUgcmVtb3ZlZC9yZXBsYWNlZCB3aXRoIHRoZWlyIGNvbnRlbnRcbiAgICBjbGVhblVwOiAgICAgICAgICAgICAgdHJ1ZVxuICB9O1xuICBcbiAgd3lzaWh0bWw1LkVkaXRvciA9IHd5c2lodG1sNS5sYW5nLkRpc3BhdGNoZXIuZXh0ZW5kKFxuICAgIC8qKiBAc2NvcGUgd3lzaWh0bWw1LkVkaXRvci5wcm90b3R5cGUgKi8ge1xuICAgIGNvbnN0cnVjdG9yOiBmdW5jdGlvbih0ZXh0YXJlYUVsZW1lbnQsIGNvbmZpZykge1xuICAgICAgdGhpcy50ZXh0YXJlYUVsZW1lbnQgID0gdHlwZW9mKHRleHRhcmVhRWxlbWVudCkgPT09IFwic3RyaW5nXCIgPyBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0ZXh0YXJlYUVsZW1lbnQpIDogdGV4dGFyZWFFbGVtZW50O1xuICAgICAgdGhpcy5jb25maWcgICAgICAgICAgID0gd3lzaWh0bWw1Lmxhbmcub2JqZWN0KHt9KS5tZXJnZShkZWZhdWx0Q29uZmlnKS5tZXJnZShjb25maWcpLmdldCgpO1xuICAgICAgdGhpcy50ZXh0YXJlYSAgICAgICAgID0gbmV3IHd5c2lodG1sNS52aWV3cy5UZXh0YXJlYSh0aGlzLCB0aGlzLnRleHRhcmVhRWxlbWVudCwgdGhpcy5jb25maWcpO1xuICAgICAgdGhpcy5jdXJyZW50VmlldyAgICAgID0gdGhpcy50ZXh0YXJlYTtcbiAgICAgIHRoaXMuX2lzQ29tcGF0aWJsZSAgICA9IHd5c2lodG1sNS5icm93c2VyLnN1cHBvcnRlZCgpO1xuICAgICAgXG4gICAgICAvLyBTb3J0IG91dCB1bnN1cHBvcnRlZC91bndhbnRlZCBicm93c2VycyBoZXJlXG4gICAgICBpZiAoIXRoaXMuX2lzQ29tcGF0aWJsZSB8fCAoIXRoaXMuY29uZmlnLnN1cHBvcnRUb3VjaERldmljZXMgJiYgd3lzaWh0bWw1LmJyb3dzZXIuaXNUb3VjaERldmljZSgpKSkge1xuICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IHRoYXQuZmlyZShcImJlZm9yZWxvYWRcIikuZmlyZShcImxvYWRcIik7IH0sIDApO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIEFkZCBjbGFzcyBuYW1lIHRvIGJvZHksIHRvIGluZGljYXRlIHRoYXQgdGhlIGVkaXRvciBpcyBzdXBwb3J0ZWRcbiAgICAgIHd5c2lodG1sNS5kb20uYWRkQ2xhc3MoZG9jdW1lbnQuYm9keSwgdGhpcy5jb25maWcuYm9keUNsYXNzTmFtZSk7XG4gICAgICBcbiAgICAgIHRoaXMuY29tcG9zZXIgPSBuZXcgd3lzaWh0bWw1LnZpZXdzLkNvbXBvc2VyKHRoaXMsIHRoaXMudGV4dGFyZWFFbGVtZW50LCB0aGlzLmNvbmZpZyk7XG4gICAgICB0aGlzLmN1cnJlbnRWaWV3ID0gdGhpcy5jb21wb3NlcjtcbiAgICAgIFxuICAgICAgaWYgKHR5cGVvZih0aGlzLmNvbmZpZy5wYXJzZXIpID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgdGhpcy5faW5pdFBhcnNlcigpO1xuICAgICAgfVxuICAgICAgXG4gICAgICB0aGlzLm9uKFwiYmVmb3JlbG9hZFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5zeW5jaHJvbml6ZXIgPSBuZXcgd3lzaWh0bWw1LnZpZXdzLlN5bmNocm9uaXplcih0aGlzLCB0aGlzLnRleHRhcmVhLCB0aGlzLmNvbXBvc2VyKTtcbiAgICAgICAgaWYgKHRoaXMuY29uZmlnLnRvb2xiYXIpIHtcbiAgICAgICAgICB0aGlzLnRvb2xiYXIgPSBuZXcgd3lzaWh0bWw1LnRvb2xiYXIuVG9vbGJhcih0aGlzLCB0aGlzLmNvbmZpZy50b29sYmFyKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiSGV5YSEgVGhpcyBwYWdlIGlzIHVzaW5nIHd5c2lodG1sNSBmb3IgcmljaCB0ZXh0IGVkaXRpbmcuIENoZWNrIG91dCBodHRwczovL2dpdGh1Yi5jb20veGluZy93eXNpaHRtbDVcIik7XG4gICAgICB9IGNhdGNoKGUpIHt9XG4gICAgfSxcbiAgICBcbiAgICBpc0NvbXBhdGlibGU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2lzQ29tcGF0aWJsZTtcbiAgICB9LFxuXG4gICAgY2xlYXI6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5jdXJyZW50Vmlldy5jbGVhcigpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcblxuICAgIGdldFZhbHVlOiBmdW5jdGlvbihwYXJzZSkge1xuICAgICAgcmV0dXJuIHRoaXMuY3VycmVudFZpZXcuZ2V0VmFsdWUocGFyc2UpO1xuICAgIH0sXG5cbiAgICBzZXRWYWx1ZTogZnVuY3Rpb24oaHRtbCwgcGFyc2UpIHtcbiAgICAgIHRoaXMuZmlyZShcInVuc2V0X3BsYWNlaG9sZGVyXCIpO1xuICAgICAgXG4gICAgICBpZiAoIWh0bWwpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY2xlYXIoKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgdGhpcy5jdXJyZW50Vmlldy5zZXRWYWx1ZShodG1sLCBwYXJzZSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LFxuXG4gICAgZm9jdXM6IGZ1bmN0aW9uKHNldFRvRW5kKSB7XG4gICAgICB0aGlzLmN1cnJlbnRWaWV3LmZvY3VzKHNldFRvRW5kKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBEZWFjdGl2YXRlIGVkaXRvciAobWFrZSBpdCByZWFkb25seSlcbiAgICAgKi9cbiAgICBkaXNhYmxlOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuY3VycmVudFZpZXcuZGlzYWJsZSgpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcbiAgICBcbiAgICAvKipcbiAgICAgKiBBY3RpdmF0ZSBlZGl0b3JcbiAgICAgKi9cbiAgICBlbmFibGU6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5jdXJyZW50Vmlldy5lbmFibGUoKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG4gICAgXG4gICAgaXNFbXB0eTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5jdXJyZW50Vmlldy5pc0VtcHR5KCk7XG4gICAgfSxcbiAgICBcbiAgICBoYXNQbGFjZWhvbGRlclNldDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5jdXJyZW50Vmlldy5oYXNQbGFjZWhvbGRlclNldCgpO1xuICAgIH0sXG4gICAgXG4gICAgcGFyc2U6IGZ1bmN0aW9uKGh0bWxPckVsZW1lbnQpIHtcbiAgICAgIHZhciByZXR1cm5WYWx1ZSA9IHRoaXMuY29uZmlnLnBhcnNlcihodG1sT3JFbGVtZW50LCB0aGlzLmNvbmZpZy5wYXJzZXJSdWxlcywgdGhpcy5jb21wb3Nlci5zYW5kYm94LmdldERvY3VtZW50KCksIHRoaXMuY29uZmlnLmNsZWFuVXApO1xuICAgICAgaWYgKHR5cGVvZihodG1sT3JFbGVtZW50KSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICB3eXNpaHRtbDUucXVpcmtzLnJlZHJhdyhodG1sT3JFbGVtZW50KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXR1cm5WYWx1ZTtcbiAgICB9LFxuICAgIFxuICAgIC8qKlxuICAgICAqIFByZXBhcmUgaHRtbCBwYXJzZXIgbG9naWNcbiAgICAgKiAgLSBPYnNlcnZlcyBmb3IgcGFzdGUgYW5kIGRyb3BcbiAgICAgKi9cbiAgICBfaW5pdFBhcnNlcjogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLm9uKFwicGFzdGU6Y29tcG9zZXJcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBrZWVwU2Nyb2xsUG9zaXRpb24gID0gdHJ1ZSxcbiAgICAgICAgICAgIHRoYXQgICAgICAgICAgICAgICAgPSB0aGlzO1xuICAgICAgICB0aGF0LmNvbXBvc2VyLnNlbGVjdGlvbi5leGVjdXRlQW5kUmVzdG9yZShmdW5jdGlvbigpIHtcbiAgICAgICAgICB3eXNpaHRtbDUucXVpcmtzLmNsZWFuUGFzdGVkSFRNTCh0aGF0LmNvbXBvc2VyLmVsZW1lbnQpO1xuICAgICAgICAgIHRoYXQucGFyc2UodGhhdC5jb21wb3Nlci5lbGVtZW50KTtcbiAgICAgICAgfSwga2VlcFNjcm9sbFBvc2l0aW9uKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59KSh3eXNpaHRtbDUpO1xuXG4hZnVuY3Rpb24odCxpKXtcInVzZSBzdHJpY3RcIjt2YXIgYT17YWxpZ25tZW50OmZ1bmN0aW9uKCl7cmV0dXJuXCI8bGk+PGRpdiBjbGFzcz0nYWxpZ25tZW50Jz48L2Rpdj48L2xpPlwifSxmb250OmZ1bmN0aW9uKCl7cmV0dXJuXCI8bGk+PGRpdiBjbGFzcz0nZm9udC1waWNrZXInPjwvZGl2PjwvbGk+XCJ9LFwiZm9udC1zaXplXCI6ZnVuY3Rpb24oKXtyZXR1cm5cIjxsaT48ZGl2IGNsYXNzPSdmb250LXNpemUtcGlja2VyJz48L2Rpdj48L2xpPlwifSxcImxpbmUtaGVpZ2h0XCI6ZnVuY3Rpb24odCl7cmV0dXJuXCI8bGk+PGRpdiBjbGFzcz0nbGluZS1oZWlnaHQgYnRuLWdyb3VwJz48YnV0dG9uIHR5cGU9J2J1dHRvbicgY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4tc20gZHJvcGRvd24tdG9nZ2xlJ2RhdGEtdG9nZ2xlPSdkcm9wZG93bicgZGF0YS13eXNpaHRtbDUtY29tbWFuZC12YWx1ZT0nMSc+PGkgY2xhc3M9J2dseXBoaWNvbiBnbHlwaGljb24tdGV4dC1oZWlnaHQnPjwvaT48c3BhbiBjbGFzcz0nY2FyZXQnPjwvc3Bhbj48L2J1dHRvbj48dWwgY2xhc3M9J2Ryb3Bkb3duLW1lbnUnIHJvbGU9J21lbnUnPjxsaT48YSBkYXRhLXd5c2lodG1sNS1jb21tYW5kLXZhbHVlPScxJyB0YWJpbmRleD0nLTEnPlwiK3QubGluZV9oZWlnaHQuc2luZ2xlK1wiPC9hPjwvbGk+PGxpPjxhIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9JzEtMTUnIHRhYmluZGV4PSctMSc+MS4xNTwvYT48L2xpPjxsaT48YSBkYXRhLXd5c2lodG1sNS1jb21tYW5kLXZhbHVlPScxLTUnIHRhYmluZGV4PSctMSc+MS41PC9hPjwvbGk+PGxpPjxhIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9JzInIHRhYmluZGV4PSctMSc+XCIrdC5saW5lX2hlaWdodC5kb3VibGUrXCI8L2E+PC9saT48L3VsPjwvZGl2PjwvbGk+XCJ9LFwidGV4dC1jb2xvclwiOmZ1bmN0aW9uKCl7cmV0dXJuXCI8bGk+PGlucHV0IGNsYXNzPSd0ZXh0LWNvbG9yJyB0eXBlPSdjb2xvcic+PC9saT5cIn0sXCJoaWdobGlnaHQtY29sb3JcIjpmdW5jdGlvbigpe3JldHVyblwiPGxpPjxpbnB1dCBjbGFzcz0naGlnaGxpZ2h0LWNvbG9yJyB0eXBlPSdjb2xvcic+PC9saT5cIn0sXCJiYWNrZ3JvdW5kLWNvbG9yXCI6ZnVuY3Rpb24oKXtyZXR1cm5cIjxsaT48aW5wdXQgY2xhc3M9J2JhY2tncm91bmQtY29sb3InIHR5cGU9J2NvbG9yJz48L2xpPlwifSxjbGVhcjpmdW5jdGlvbigpe3JldHVyblwiPGxpPjxhIGNsYXNzPSdjbGVhciBidG4gYnRuLXNtIGJ0bi1kZWZhdWx0JyBkYXRhLXd5c2lodG1sNS1jb21tYW5kPSdjbGVhcicgdGl0bGU9J0NsZWFyJyB0YWJpbmRleD0nLTEnPjxzcGFuIGNsYXNzPSdnbHlwaGljb24gZ2x5cGhpY29uLWZpbGUnPjwvc3Bhbj48L2E+PC9saT5cIn0sXCJmb250LXN0eWxlc1wiOmZ1bmN0aW9uKHQsaSl7dmFyIGE9aSYmaS5zaXplP1wiIGJ0bi1cIitpLnNpemU6XCJcIjtyZXR1cm5cIjxsaSBjbGFzcz0nZHJvcGRvd24nPjxhIGNsYXNzPSdidG4gZHJvcGRvd24tdG9nZ2xlIFwiK2ErXCIgYnRuLWRlZmF1bHQnIGRhdGEtdG9nZ2xlPSdkcm9wZG93bicgaHJlZj0nIyc+PGkgY2xhc3M9J2dseXBoaWNvbiBnbHlwaGljb24tZm9udCc+PC9pPiZuYnNwOzxzcGFuIGNsYXNzPSdjdXJyZW50LWZvbnQnPlwiK3QuZm9udF9zdHlsZXMubm9ybWFsK1wiPC9zcGFuPiZuYnNwOzxiIGNsYXNzPSdjYXJldCc+PC9iPjwvYT48dWwgY2xhc3M9J2Ryb3Bkb3duLW1lbnUnIHJvbGU9J21lbnUnPjxsaT48YSBkYXRhLXd5c2lodG1sNS1jb21tYW5kPSdmb3JtYXRCbG9jaycgZGF0YS13eXNpaHRtbDUtY29tbWFuZC12YWx1ZT0nZGl2JyB0YWJpbmRleD0nLTEnPlwiK3QuZm9udF9zdHlsZXMubm9ybWFsK1wiPC9hPjwvbGk+PGxpPjxhIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQ9J2Zvcm1hdEJsb2NrJyBkYXRhLXd5c2lodG1sNS1jb21tYW5kLXZhbHVlPSdoMScgdGFiaW5kZXg9Jy0xJz5cIit0LmZvbnRfc3R5bGVzLmgxK1wiPC9hPjwvbGk+PGxpPjxhIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQ9J2Zvcm1hdEJsb2NrJyBkYXRhLXd5c2lodG1sNS1jb21tYW5kLXZhbHVlPSdoMicgdGFiaW5kZXg9Jy0xJz5cIit0LmZvbnRfc3R5bGVzLmgyK1wiPC9hPjwvbGk+PGxpPjxhIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQ9J2Zvcm1hdEJsb2NrJyBkYXRhLXd5c2lodG1sNS1jb21tYW5kLXZhbHVlPSdoMycgdGFiaW5kZXg9Jy0xJz5cIit0LmZvbnRfc3R5bGVzLmgzK1wiPC9hPjwvbGk+PGxpPjxhIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQ9J2Zvcm1hdEJsb2NrJyBkYXRhLXd5c2lodG1sNS1jb21tYW5kLXZhbHVlPSdoNCc+XCIrdC5mb250X3N0eWxlcy5oNCtcIjwvYT48L2xpPjxsaT48YSBkYXRhLXd5c2lodG1sNS1jb21tYW5kPSdmb3JtYXRCbG9jaycgZGF0YS13eXNpaHRtbDUtY29tbWFuZC12YWx1ZT0naDUnPlwiK3QuZm9udF9zdHlsZXMuaDUrXCI8L2E+PC9saT48bGk+PGEgZGF0YS13eXNpaHRtbDUtY29tbWFuZD0nZm9ybWF0QmxvY2snIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J2g2Jz5cIit0LmZvbnRfc3R5bGVzLmg2K1wiPC9hPjwvbGk+PC91bD48L2xpPlwifSxlbXBoYXNpczpmdW5jdGlvbigpe3JldHVyblwiPGxpPjxkaXYgY2xhc3M9J2VtcGhhc2lzJz48ZGl2PjwvbGk+XCJ9LGxpc3RzOmZ1bmN0aW9uKHQsaSl7dmFyIGE9aSYmaS5zaXplP1wiIGJ0bi1cIitpLnNpemU6XCJcIjtyZXR1cm5cIjxsaT48ZGl2IGNsYXNzPSdidG4tZ3JvdXAnPjxhIGNsYXNzPSdidG4gXCIrYStcIiBidG4tZGVmYXVsdCcgZGF0YS13eXNpaHRtbDUtY29tbWFuZD0naW5zZXJ0VW5vcmRlcmVkTGlzdCcgdGl0bGU9J1wiK3QubGlzdHMudW5vcmRlcmVkK1wiJyB0YWJpbmRleD0nLTEnPjxpIGNsYXNzPSdnbHlwaGljb24gZ2x5cGhpY29uLWxpc3QnPjwvaT48L2E+PGEgY2xhc3M9J2J0biBcIithK1wiIGJ0bi1kZWZhdWx0JyBkYXRhLXd5c2lodG1sNS1jb21tYW5kPSdpbnNlcnRPcmRlcmVkTGlzdCcgdGl0bGU9J1wiK3QubGlzdHMub3JkZXJlZCtcIicgdGFiaW5kZXg9Jy0xJz48aSBjbGFzcz0nZ2x5cGhpY29uIGdseXBoaWNvbi10aC1saXN0Jz48L2k+PC9hPjxhIGNsYXNzPSdidG4gXCIrYStcIiBidG4tZGVmYXVsdCcgZGF0YS13eXNpaHRtbDUtY29tbWFuZD0nT3V0ZGVudCcgdGl0bGU9J1wiK3QubGlzdHMub3V0ZGVudCtcIicgdGFiaW5kZXg9Jy0xJz48aSBjbGFzcz0nZ2x5cGhpY29uIGdseXBoaWNvbi1pbmRlbnQtcmlnaHQnPjwvaT48L2E+PGEgY2xhc3M9J2J0biAtXCIrYStcIiBidG4tZGVmYXVsdCcgZGF0YS13eXNpaHRtbDUtY29tbWFuZD0nSW5kZW50JyB0aXRsZT0nXCIrdC5saXN0cy5pbmRlbnQrXCInIHRhYmluZGV4PSctMSc+PGkgY2xhc3M9J2dseXBoaWNvbiBnbHlwaGljb24taW5kZW50LWxlZnQnPjwvaT48L2E+PC9kaXY+PC9saT5cIn0sbGluazpmdW5jdGlvbih0LGkpe3ZhciBhPWkmJmkuc2l6ZT9cIiBidG4tXCIraS5zaXplOlwiXCI7cmV0dXJuXCI8bGk+PGRpdiBjbGFzcz0nYm9vdHN0cmFwLXd5c2lodG1sNS1pbnNlcnQtbGluay1tb2RhbCBtb2RhbCBmYWRlJz48ZGl2IGNsYXNzPSdtb2RhbC1kaWFsb2cnPjxkaXYgY2xhc3M9J21vZGFsLWNvbnRlbnQnPjxkaXYgY2xhc3M9J21vZGFsLWhlYWRlcic+PGEgY2xhc3M9J2Nsb3NlJyBkYXRhLWRpc21pc3M9J21vZGFsJz4mdGltZXM7PC9hPjxoND5cIit0LmxpbmsuaW5zZXJ0K1wiPC9oND48L2Rpdj48ZGl2IGNsYXNzPSdtb2RhbC1ib2R5Jz48aW5wdXQgdmFsdWU9J2h0dHA6Ly8nIGNsYXNzPSdib290c3RyYXAtd3lzaWh0bWw1LWluc2VydC1saW5rLXVybCBmb3JtLWNvbnRyb2wnPjxsYWJlbCBjbGFzcz0nY2hlY2tib3gnPiA8aW5wdXQgdHlwZT0nY2hlY2tib3gnIGNsYXNzPSdib290c3RyYXAtd3lzaWh0bWw1LWluc2VydC1saW5rLXRhcmdldCcgY2hlY2tlZD5cIit0LmxpbmsudGFyZ2V0K1wiPC9sYWJlbD48L2Rpdj48ZGl2IGNsYXNzPSdtb2RhbC1mb290ZXInPjxidXR0b24gY2xhc3M9J2J0biBidG4tZGVmYXVsdCcgZGF0YS1kaXNtaXNzPSdtb2RhbCc+XCIrdC5saW5rLmNhbmNlbCtcIjwvYnV0dG9uPjxidXR0b24gaHJlZj0nIycgY2xhc3M9J2J0biBidG4tcHJpbWFyeScgZGF0YS1kaXNtaXNzPSdtb2RhbCc+XCIrdC5saW5rLmluc2VydCtcIjwvYnV0dG9uPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxhIGNsYXNzPSdidG4gXCIrYStcIiBidG4tZGVmYXVsdCcgZGF0YS13eXNpaHRtbDUtY29tbWFuZD0nY3JlYXRlTGluaycgdGl0bGU9J1wiK3QubGluay5pbnNlcnQrXCInIHRhYmluZGV4PSctMSc+PGkgY2xhc3M9J2dseXBoaWNvbiBnbHlwaGljb24tc2hhcmUnPjwvaT48L2E+PC9saT5cIn0saW1hZ2U6ZnVuY3Rpb24odCxpKXt2YXIgYT1pJiZpLnNpemU/XCIgYnRuLVwiK2kuc2l6ZTpcIlwiO3JldHVyblwiPGxpPjxkaXYgY2xhc3M9J2Jvb3RzdHJhcC13eXNpaHRtbDUtaW5zZXJ0LWltYWdlLW1vZGFsIG1vZGFsIGZhZGUnPjxkaXYgY2xhc3M9J21vZGFsLWRpYWxvZyc+PGRpdiBjbGFzcz0nbW9kYWwtY29udGVudCc+PGRpdiBjbGFzcz0nbW9kYWwtaGVhZGVyJz48YSBjbGFzcz0nY2xvc2UnIGRhdGEtZGlzbWlzcz0nbW9kYWwnPiZ0aW1lczs8L2E+PGg0PlwiK3QuaW1hZ2UuaW5zZXJ0K1wiPC9oND48L2Rpdj48ZGl2IGNsYXNzPSdtb2RhbC1ib2R5Jz48aW5wdXQgdmFsdWU9J2h0dHA6Ly8nIGNsYXNzPSdib290c3RyYXAtd3lzaWh0bWw1LWluc2VydC1pbWFnZS11cmwgZm9ybS1jb250cm9sJz48L2Rpdj48ZGl2IGNsYXNzPSdtb2RhbC1mb290ZXInPjxidXR0b24gY2xhc3M9J2J0biBidG4tZGVmYXVsdCcgZGF0YS1kaXNtaXNzPSdtb2RhbCc+XCIrdC5pbWFnZS5jYW5jZWwrXCI8L2J1dHRvbj48YnV0dG9uIGNsYXNzPSdidG4gYnRuLXByaW1hcnknIGRhdGEtZGlzbWlzcz0nbW9kYWwnPlwiK3QuaW1hZ2UuaW5zZXJ0K1wiPC9idXR0b24+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PGEgY2xhc3M9J2J0biBcIithK1wiIGJ0bi1kZWZhdWx0JyBkYXRhLXd5c2lodG1sNS1jb21tYW5kPSdpbnNlcnRJbWFnZScgdGl0bGU9J1wiK3QuaW1hZ2UuaW5zZXJ0K1wiJyB0YWJpbmRleD0nLTEnPjxpIGNsYXNzPSdnbHlwaGljb24gZ2x5cGhpY29uLXBpY3R1cmUnPjwvaT48L2E+PC9saT5cIn0saHRtbDpmdW5jdGlvbih0LGkpe3ZhciBhPWkmJmkuc2l6ZT9cIiBidG4tXCIraS5zaXplOlwiXCI7cmV0dXJuXCI8bGk+PGRpdiBjbGFzcz0nYnRuLWdyb3VwJz48YSBjbGFzcz0nYnRuIFwiK2ErXCIgYnRuLWRlZmF1bHQnIGRhdGEtd3lzaWh0bWw1LWFjdGlvbj0nY2hhbmdlX3ZpZXcnIHRpdGxlPSdcIit0Lmh0bWwuZWRpdCtcIicgdGFiaW5kZXg9Jy0xJz48aSBjbGFzcz0nZ2x5cGhpY29uIGdseXBoaWNvbi1wZW5jaWwnPjwvaT48L2E+PC9kaXY+PC9saT5cIn0sY29sb3I6ZnVuY3Rpb24odCxpKXt2YXIgYT1pJiZpLnNpemU/XCIgYnRuLVwiK2kuc2l6ZTpcIlwiO3JldHVyblwiPGxpIGNsYXNzPSdkcm9wZG93bic+PGEgY2xhc3M9J2J0biBkcm9wZG93bi10b2dnbGUgXCIrYStcIiBidG4tZGVmYXVsdCcgZGF0YS10b2dnbGU9J2Ryb3Bkb3duJyBocmVmPScjJyB0YWJpbmRleD0nLTEnPjxzcGFuIGNsYXNzPSdjdXJyZW50LWNvbG9yJz5cIit0LmNvbG91cnMuYmxhY2srXCI8L3NwYW4+Jm5ic3A7PGIgY2xhc3M9J2NhcmV0Jz48L2I+PC9hPjx1bCBjbGFzcz0nZHJvcGRvd24tbWVudSc+PGxpPjxkaXYgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J2JsYWNrJz48L2Rpdj48YSBjbGFzcz0nd3lzaWh0bWw1LWNvbG9ycy10aXRsZScgZGF0YS13eXNpaHRtbDUtY29tbWFuZD0nZm9yZUNvbG9yJyBkYXRhLXd5c2lodG1sNS1jb21tYW5kLXZhbHVlPSdibGFjayc+XCIrdC5jb2xvdXJzLmJsYWNrK1wiPC9hPjwvbGk+PGxpPjxkaXYgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J3NpbHZlcic+PC9kaXY+PGEgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMtdGl0bGUnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQ9J2ZvcmVDb2xvcicgZGF0YS13eXNpaHRtbDUtY29tbWFuZC12YWx1ZT0nc2lsdmVyJz5cIit0LmNvbG91cnMuc2lsdmVyK1wiPC9hPjwvbGk+PGxpPjxkaXYgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J2dyYXknPjwvZGl2PjxhIGNsYXNzPSd3eXNpaHRtbDUtY29sb3JzLXRpdGxlJyBkYXRhLXd5c2lodG1sNS1jb21tYW5kPSdmb3JlQ29sb3InIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J2dyYXknPlwiK3QuY29sb3Vycy5ncmF5K1wiPC9hPjwvbGk+PGxpPjxkaXYgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J21hcm9vbic+PC9kaXY+PGEgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMtdGl0bGUnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQ9J2ZvcmVDb2xvcicgZGF0YS13eXNpaHRtbDUtY29tbWFuZC12YWx1ZT0nbWFyb29uJz5cIit0LmNvbG91cnMubWFyb29uK1wiPC9hPjwvbGk+PGxpPjxkaXYgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J3JlZCc+PC9kaXY+PGEgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMtdGl0bGUnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQ9J2ZvcmVDb2xvcicgZGF0YS13eXNpaHRtbDUtY29tbWFuZC12YWx1ZT0ncmVkJz5cIit0LmNvbG91cnMucmVkK1wiPC9hPjwvbGk+PGxpPjxkaXYgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J3B1cnBsZSc+PC9kaXY+PGEgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMtdGl0bGUnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQ9J2ZvcmVDb2xvcicgZGF0YS13eXNpaHRtbDUtY29tbWFuZC12YWx1ZT0ncHVycGxlJz5cIit0LmNvbG91cnMucHVycGxlK1wiPC9hPjwvbGk+PGxpPjxkaXYgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J2dyZWVuJz48L2Rpdj48YSBjbGFzcz0nd3lzaWh0bWw1LWNvbG9ycy10aXRsZScgZGF0YS13eXNpaHRtbDUtY29tbWFuZD0nZm9yZUNvbG9yJyBkYXRhLXd5c2lodG1sNS1jb21tYW5kLXZhbHVlPSdncmVlbic+XCIrdC5jb2xvdXJzLmdyZWVuK1wiPC9hPjwvbGk+PGxpPjxkaXYgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J29saXZlJz48L2Rpdj48YSBjbGFzcz0nd3lzaWh0bWw1LWNvbG9ycy10aXRsZScgZGF0YS13eXNpaHRtbDUtY29tbWFuZD0nZm9yZUNvbG9yJyBkYXRhLXd5c2lodG1sNS1jb21tYW5kLXZhbHVlPSdvbGl2ZSc+XCIrdC5jb2xvdXJzLm9saXZlK1wiPC9hPjwvbGk+PGxpPjxkaXYgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J25hdnknPjwvZGl2PjxhIGNsYXNzPSd3eXNpaHRtbDUtY29sb3JzLXRpdGxlJyBkYXRhLXd5c2lodG1sNS1jb21tYW5kPSdmb3JlQ29sb3InIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J25hdnknPlwiK3QuY29sb3Vycy5uYXZ5K1wiPC9hPjwvbGk+PGxpPjxkaXYgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J2JsdWUnPjwvZGl2PjxhIGNsYXNzPSd3eXNpaHRtbDUtY29sb3JzLXRpdGxlJyBkYXRhLXd5c2lodG1sNS1jb21tYW5kPSdmb3JlQ29sb3InIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J2JsdWUnPlwiK3QuY29sb3Vycy5ibHVlK1wiPC9hPjwvbGk+PGxpPjxkaXYgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQtdmFsdWU9J29yYW5nZSc+PC9kaXY+PGEgY2xhc3M9J3d5c2lodG1sNS1jb2xvcnMtdGl0bGUnIGRhdGEtd3lzaWh0bWw1LWNvbW1hbmQ9J2ZvcmVDb2xvcicgZGF0YS13eXNpaHRtbDUtY29tbWFuZC12YWx1ZT0nb3JhbmdlJz5cIit0LmNvbG91cnMub3JhbmdlK1wiPC9hPjwvbGk+PC91bD48L2xpPlwifX0sbz1mdW5jdGlvbih0LGksbyl7cmV0dXJuIGFbdF0oaSxvKX0sbD1mdW5jdGlvbihpLG8pe3RoaXMuZWw9aTt2YXIgbD1vfHxuO2Zvcih2YXIgZSBpbiBsLmN1c3RvbVRlbXBsYXRlcylhW2VdPWwuY3VzdG9tVGVtcGxhdGVzW2VdO3RoaXMudG9vbGJhcj10aGlzLmNyZWF0ZVRvb2xiYXIoaSxsKSx0aGlzLmVkaXRvcj10aGlzLmNyZWF0ZUVkaXRvcihvKSx3aW5kb3cuZWRpdG9yPXRoaXMuZWRpdG9yLHQod2luZG93KS50cmlnZ2VyKFwiZWRpdG9yTG9hZGVkXCIpLHQoXCJpZnJhbWUud3lzaWh0bWw1LXNhbmRib3hcIikuZWFjaChmdW5jdGlvbihpLGEpe3QoYS5jb250ZW50V2luZG93KS5vZmYoXCJmb2N1cy53eXNpaHRtbDVcIikub24oe1wiZm9jdXMud3lzaWh0bWw1XCI6ZnVuY3Rpb24oKXt0KFwibGkuZHJvcGRvd25cIikucmVtb3ZlQ2xhc3MoXCJvcGVuXCIpfX0pfSl9O2wucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpsLGNyZWF0ZUVkaXRvcjpmdW5jdGlvbihhKXthPWF8fHt9LGE9dC5leHRlbmQoITAse30sYSksYS50b29sYmFyPXRoaXMudG9vbGJhclswXTt2YXIgbz1uZXcgaS5FZGl0b3IodGhpcy5lbFswXSxhKTtpZihhJiZhLmV2ZW50cylmb3IodmFyIGwgaW4gYS5ldmVudHMpby5vbihsLGEuZXZlbnRzW2xdKTtyZXR1cm4gb30sY3JlYXRlVG9vbGJhcjpmdW5jdGlvbihpLGEpe3ZhciBsPXRoaXMsZT10KFwiPHVsLz5cIix7XCJjbGFzc1wiOlwid3lzaWh0bWw1LXRvb2xiYXJcIixzdHlsZTpcImRpc3BsYXk6bm9uZVwifSkscj1hLmxvY2FsZXx8bi5sb2NhbGV8fFwiZW5cIjtmb3IodmFyIGMgaW4gbil7dmFyIGQ9ITE7dm9pZCAwIT09YVtjXT9hW2NdPT09ITAmJihkPSEwKTpkPW5bY10sZD09PSEwJiYoZS5hcHBlbmQobyhjLHNbcl0sYSkpLFwiaHRtbFwiPT09YyYmdGhpcy5pbml0SHRtbChlKSxcImxpbmtcIj09PWMmJnRoaXMuaW5pdEluc2VydExpbmsoZSksXCJpbWFnZVwiPT09YyYmdGhpcy5pbml0SW5zZXJ0SW1hZ2UoZSksXCJhbGlnbm1lbnRcIj09PWMmJnRoaXMuaW5pdEFsaWdubWVudChlKSxcImNsZWFyXCI9PT1jJiZ0aGlzLmluaXRDbGVhcihlKSxcImZvbnRcIj09PWMmJnRoaXMuaW5pdEZvbnQoZSksXCJmb250LXNpemVcIj09PWMmJnRoaXMuaW5pdEZvbnRTaXplKGUpLFwiZW1waGFzaXNcIj09PWMmJnRoaXMuaW5pdEVtcGhhc2lzKGUpLFwidGV4dC1jb2xvclwiPT09YyYmdGhpcy5pbml0Q29sb3JQaWNrZXIoZSx7ZWxlbTpcIi50ZXh0LWNvbG9yXCIsdHlwZTpcInRleHRcIixjb2xvcjpcIiMwMDBcIixjb21tYW5kOlwidGV4dENvbG9yXCIsYXR0cmlidXRlOlwiZGF0YS10ZXh0LWNvbG9yXCJ9KSxcImhpZ2hsaWdodC1jb2xvclwiPT09YyYmdGhpcy5pbml0Q29sb3JQaWNrZXIoZSx7ZWxlbTpcIi5oaWdobGlnaHQtY29sb3JcIix0eXBlOlwiaGlnaGxpZ2h0XCIsY29sb3I6XCIjZmZmXCIsY29tbWFuZDpcImhpZ2hsaWdodENvbG9yXCIsYXR0cmlidXRlOlwiZGF0YS1oaWdobGlnaHQtY29sb3JcIn0pLFwiYmFja2dyb3VuZC1jb2xvclwiPT09YyYmdGhpcy5pbml0Q29sb3JQaWNrZXIoZSx7ZWxlbTpcIi5iYWNrZ3JvdW5kLWNvbG9yXCIsdHlwZTpcImJhY2tncm91bmRcIixjb2xvcjpcIiNmZmZcIixjb21tYW5kOlwiYmFja2dyb3VuZENvbG9yXCIsYXR0cmlidXRlOlwiZGF0YS1iYWNrZ3JvdW5kLWNvbG9yXCJ9KSl9aWYoYS50b29sYmFyKWZvcihjIGluIGEudG9vbGJhcillLmFwcGVuZChhLnRvb2xiYXJbY10pO3JldHVybiBlLmZpbmQoXCJhW2RhdGEtd3lzaWh0bWw1LWNvbW1hbmQ9J2Zvcm1hdEJsb2NrJ11cIikuY2xpY2soZnVuY3Rpb24oaSl7dmFyIGE9aS50YXJnZXR8fGkuc3JjRWxlbWVudCxvPXQoYSk7bC50b29sYmFyLmZpbmQoXCIuY3VycmVudC1mb250XCIpLnRleHQoby5odG1sKCkpfSksZS5maW5kKFwiYVtkYXRhLXd5c2lodG1sNS1jb21tYW5kPSdmb3JlQ29sb3InXVwiKS5jbGljayhmdW5jdGlvbihpKXt2YXIgYT1pLnRhcmdldHx8aS5zcmNFbGVtZW50LG89dChhKTtsLnRvb2xiYXIuZmluZChcIi5jdXJyZW50LWNvbG9yXCIpLnRleHQoby5odG1sKCkpfSksZS5maW5kKFwiLmxpbmUtaGVpZ2h0XCIpLm9uKFwic2hvd24uYnMuZHJvcGRvd25cIixmdW5jdGlvbihpKXt2YXIgYT10KGkudGFyZ2V0KSxvPWEuZmluZChcImJ1dHRvblwiKS5kYXRhKFwid3lzaWh0bWw1LWNvbW1hbmQtdmFsdWVcIik7c2V0VGltZW91dChmdW5jdGlvbigpe2EuZmluZChcImFbZGF0YS13eXNpaHRtbDUtY29tbWFuZC12YWx1ZT0nXCIrbytcIiddXCIpLmZvY3VzKCl9LDApfSksZS5maW5kKFwiLmxpbmUtaGVpZ2h0IGFcIikuY2xpY2soZnVuY3Rpb24oaSl7dmFyIGE9aS50YXJnZXR8fGkuc3JjRWxlbWVudCxvPXQoYSksbj1vLmRhdGEoXCJ3eXNpaHRtbDUtY29tbWFuZC12YWx1ZVwiKTtlLmZpbmQoXCIubGluZS1oZWlnaHQgYnV0dG9uXCIpLmRhdGEoXCJ3eXNpaHRtbDUtY29tbWFuZC12YWx1ZVwiLG4pLGwuZWRpdG9yLmNvbXBvc2VyLmNvbW1hbmRzLmV4ZWMoXCJsaW5lSGVpZ2h0XCIsbixbe25hbWU6XCJkYXRhLWxpbmUtaGVpZ2h0XCIsdmFsdWU6bn1dKX0pLHRoaXMuZWwuYmVmb3JlKGUpLGV9LGluaXRIdG1sOmZ1bmN0aW9uKHQpe3ZhciBpPVwiYVtkYXRhLXd5c2lodG1sNS1hY3Rpb249J2NoYW5nZV92aWV3J11cIjt0LmZpbmQoaSkuY2xpY2soZnVuY3Rpb24oKXt0LmZpbmQoXCJhLmJ0blwiKS5ub3QoaSkudG9nZ2xlQ2xhc3MoXCJkaXNhYmxlZFwiKX0pfSxpbml0SW5zZXJ0SW1hZ2U6ZnVuY3Rpb24oaSl7dmFyIGEsbz10aGlzLGw9aS5maW5kKFwiLmJvb3RzdHJhcC13eXNpaHRtbDUtaW5zZXJ0LWltYWdlLW1vZGFsXCIpLGU9bC5maW5kKFwiLmJvb3RzdHJhcC13eXNpaHRtbDUtaW5zZXJ0LWltYWdlLXVybFwiKSxuPWwuZmluZChcIi5idG4tcHJpbWFyeVwiKSxzPWUudmFsKCkscj1mdW5jdGlvbigpe3ZhciB0PWUudmFsKCk7ZS52YWwocyksby5lZGl0b3IuY3VycmVudFZpZXcuZWxlbWVudC5mb2N1cygpLGEmJihvLmVkaXRvci5jb21wb3Nlci5zZWxlY3Rpb24uc2V0Qm9va21hcmsoYSksYT1udWxsKSxvLmVkaXRvci5jb21wb3Nlci5jb21tYW5kcy5leGVjKFwiaW5zZXJ0SW1hZ2VcIix0KX07ZS5rZXlwcmVzcyhmdW5jdGlvbih0KXsxMz09dC53aGljaCYmKHIoKSxsLm1vZGFsKFwiaGlkZVwiKSl9KSxuLmNsaWNrKHIpLGwub24oXCJzaG93blwiLGZ1bmN0aW9uKCl7ZS5mb2N1cygpfSksbC5vbihcImhpZGVcIixmdW5jdGlvbigpe28uZWRpdG9yLmN1cnJlbnRWaWV3LmVsZW1lbnQuZm9jdXMoKX0pLGkuZmluZChcImFbZGF0YS13eXNpaHRtbDUtY29tbWFuZD1pbnNlcnRJbWFnZV1cIikuY2xpY2soZnVuY3Rpb24oKXt2YXIgaT10KHRoaXMpLmhhc0NsYXNzKFwid3lzaWh0bWw1LWNvbW1hbmQtYWN0aXZlXCIpO3JldHVybiBpPyEwOihvLmVkaXRvci5jdXJyZW50Vmlldy5lbGVtZW50LmZvY3VzKCExKSxhPW8uZWRpdG9yLmNvbXBvc2VyLnNlbGVjdGlvbi5nZXRCb29rbWFyaygpLGwuYXBwZW5kVG8oXCJib2R5XCIpLm1vZGFsKFwic2hvd1wiKSxsLm9uKFwiY2xpY2suZGlzbWlzcy5tb2RhbFwiLCdbZGF0YS1kaXNtaXNzPVwibW9kYWxcIl0nLGZ1bmN0aW9uKHQpe3Quc3RvcFByb3BhZ2F0aW9uKCl9KSwhMSl9KX0saW5pdEluc2VydExpbms6ZnVuY3Rpb24oaSl7dmFyIGEsbz10aGlzLGw9aS5maW5kKFwiLmJvb3RzdHJhcC13eXNpaHRtbDUtaW5zZXJ0LWxpbmstbW9kYWxcIiksZT1sLmZpbmQoXCIuYm9vdHN0cmFwLXd5c2lodG1sNS1pbnNlcnQtbGluay11cmxcIiksbj1sLmZpbmQoXCIuYm9vdHN0cmFwLXd5c2lodG1sNS1pbnNlcnQtbGluay10YXJnZXRcIikscz1sLmZpbmQoXCIuYnRuLXByaW1hcnlcIikscj1lLnZhbCgpLGM9ZnVuY3Rpb24oKXt2YXIgdD1lLnZhbCgpO2UudmFsKHIpLG8uZWRpdG9yLmN1cnJlbnRWaWV3LmVsZW1lbnQuZm9jdXMoKSxhJiYoby5lZGl0b3IuY29tcG9zZXIuc2VsZWN0aW9uLnNldEJvb2ttYXJrKGEpLGE9bnVsbCk7dmFyIGk9bi5wcm9wKFwiY2hlY2tlZFwiKTtvLmVkaXRvci5jb21wb3Nlci5jb21tYW5kcy5leGVjKFwiY3JlYXRlTGlua1wiLHtocmVmOnQsdGFyZ2V0Omk/XCJfYmxhbmtcIjpcIl9zZWxmXCIscmVsOmk/XCJub2ZvbGxvd1wiOlwiXCJ9KX07ZS5rZXlwcmVzcyhmdW5jdGlvbih0KXsxMz09dC53aGljaCYmKGMoKSxsLm1vZGFsKFwiaGlkZVwiKSl9KSxzLmNsaWNrKGMpLGwub24oXCJzaG93blwiLGZ1bmN0aW9uKCl7ZS5mb2N1cygpfSksbC5vbihcImhpZGVcIixmdW5jdGlvbigpe28uZWRpdG9yLmN1cnJlbnRWaWV3LmVsZW1lbnQuZm9jdXMoKX0pLGkuZmluZChcImFbZGF0YS13eXNpaHRtbDUtY29tbWFuZD1jcmVhdGVMaW5rXVwiKS5jbGljayhmdW5jdGlvbigpe3ZhciBpPXQodGhpcykuaGFzQ2xhc3MoXCJ3eXNpaHRtbDUtY29tbWFuZC1hY3RpdmVcIik7cmV0dXJuIGk/ITA6KG8uZWRpdG9yLmN1cnJlbnRWaWV3LmVsZW1lbnQuZm9jdXMoITEpLGE9by5lZGl0b3IuY29tcG9zZXIuc2VsZWN0aW9uLmdldEJvb2ttYXJrKCksbC5hcHBlbmRUbyhcImJvZHlcIikubW9kYWwoXCJzaG93XCIpLGwub24oXCJjbGljay5kaXNtaXNzLm1vZGFsXCIsJ1tkYXRhLWRpc21pc3M9XCJtb2RhbFwiXScsZnVuY3Rpb24odCl7dC5zdG9wUHJvcGFnYXRpb24oKX0pLCExKX0pfSxpbml0QWxpZ25tZW50OmZ1bmN0aW9uKHQpe3QuZmluZChcIi5hbGlnbm1lbnRcIikuYWxpZ25tZW50KCl9LGluaXRDbGVhcjpmdW5jdGlvbih0KXt0LmZpbmQoXCIuY2xlYXJcIikub24oXCJjbGlja1wiLGZ1bmN0aW9uKCl7dmFyIGk9dGlueWNvbG9yKFwiI2ZmZlwiKSxhPWkudG9SZ2IoKTt0LmZpbmQoXCIuZm9udC1waWNrZXJcIikuZGF0YShcInBsdWdpbl9mb250UGlja2VyXCIpLnJlc2V0KCksdC5maW5kKFwiLmZvbnQtc2l6ZS1waWNrZXJcIikuZGF0YShcInBsdWdpbl9mb250U2l6ZVBpY2tlclwiKS5yZXNldCgpLHQuZmluZChcIi5lbXBoYXNpc1wiKS5kYXRhKFwicGx1Z2luX2ZvbnRTdHlsZVwiKS5yZXNldCgpLHQuZmluZChcIi5hbGlnbm1lbnRcIikuZGF0YShcInBsdWdpbl9hbGlnbm1lbnRcIikucmVzZXQoKSx0LmZpbmQoXCIubGluZS1oZWlnaHQgYVtkYXRhLXd5c2lodG1sNS1jb21tYW5kLXZhbHVlPScxJ11cIikudHJpZ2dlcihcImNsaWNrXCIpLHQuZmluZChcIi50ZXh0LWNvbG9yXCIpLnNwZWN0cnVtKFwic2V0XCIsXCIjMDAwXCIpLHQuZmluZChcIi5oaWdobGlnaHQtY29sb3JcIikuc3BlY3RydW0oXCJzZXRcIixcIiNmZmZcIiksdC5maW5kKFwiLmJhY2tncm91bmQtY29sb3JcIikuc3BlY3RydW0oXCJzZXRcIixcIiNmZmZcIiksc2VsZi5lZGl0b3IuY29tcG9zZXIuY29tbWFuZHMuZXhlYyhcImJhY2tncm91bmRDb2xvclwiLGEsW3tuYW1lOlwiZGF0YS1iYWNrZ3JvdW5kLWNvbG9yXCIsdmFsdWU6aS50b1JnYlN0cmluZygpfV0pfSl9LGluaXRGb250OmZ1bmN0aW9uKGkpe3Qod2luZG93KS5vbihcImVkaXRvckxvYWRlZFwiLGZ1bmN0aW9uKCl7aS5maW5kKFwiLmZvbnQtcGlja2VyXCIpLmRhdGEoXCJwbHVnaW5fZm9udFBpY2tlclwiKS5zZXRDb250ZW50RG9jKHNlbGYuZWRpdG9yLmNvbXBvc2VyLmlmcmFtZS5jb250ZW50RG9jdW1lbnQpfSksaS5maW5kKFwiLmZvbnQtcGlja2VyXCIpLmZvbnRQaWNrZXIoe30pLm9uKFwic3RhbmRhcmRGb250U2VsZWN0ZWRcIixmdW5jdGlvbih0LGksYSl7c2VsZi5lZGl0b3IuY29tcG9zZXIuY29tbWFuZHMuZXhlYyhcInN0YW5kYXJkRm9udFwiLGksYSxbe25hbWU6XCJkYXRhLXN0YW5kYXJkLWZvbnRcIix2YWx1ZTppfSx7bmFtZTpcImRhdGEtc3RhbmRhcmQtZm9udC1mYW1pbHlcIix2YWx1ZTphfV0pLHNlbGYuZWRpdG9yLmZvY3VzKCl9KS5vbihcImdvb2dsZUZvbnRTZWxlY3RlZFwiLGZ1bmN0aW9uKHQsaSl7c2VsZi5lZGl0b3IuY29tcG9zZXIuY29tbWFuZHMuZXhlYyhcImdvb2dsZUZvbnRcIixpLFt7bmFtZTpcImRhdGEtZ29vZ2xlLWZvbnRcIix2YWx1ZTppfV0pLHNlbGYuZWRpdG9yLmZvY3VzKCl9KS5vbihcImN1c3RvbUZvbnRTZWxlY3RlZFwiLGZ1bmN0aW9uKHQsaSxhKXtzZWxmLmVkaXRvci5jb21wb3Nlci5jb21tYW5kcy5leGVjKFwiY3VzdG9tRm9udFwiLGksW3tuYW1lOlwiZGF0YS1jdXN0b20tZm9udFwiLHZhbHVlOml9LHtuYW1lOlwiZGF0YS1jdXN0b20tZm9udC11cmxcIix2YWx1ZTphfV0pLHNlbGYuZWRpdG9yLmZvY3VzKCl9KX0saW5pdEZvbnRTaXplOmZ1bmN0aW9uKHQpe3QuZmluZChcIi5mb250LXNpemUtcGlja2VyXCIpLmZvbnRTaXplUGlja2VyKCkub24oXCJzaXplQ2hhbmdlZFwiLGZ1bmN0aW9uKHQsaSl7c2VsZi5lZGl0b3IuY29tcG9zZXIuY29tbWFuZHMuZXhlYyhcImZvbnRTaXplXCIsaSksc2VsZi5lZGl0b3IuZm9jdXMoKX0pfSxpbml0RW1waGFzaXM6ZnVuY3Rpb24odCl7dC5maW5kKFwiLmVtcGhhc2lzXCIpLmZvbnRTdHlsZSgpfSxpbml0Q29sb3JQaWNrZXI6ZnVuY3Rpb24odCxpKXt0LmZpbmQoaS5lbGVtKS5zcGVjdHJ1bSh7Y2FuY2VsVGV4dDpcIkNhbmNlbFwiLGNob29zZVRleHQ6XCJBcHBseVwiLGNsaWNrb3V0RmlyZXNDaGFuZ2U6ITAsY29sb3I6aS5jb2xvcixwcmVmZXJyZWRGb3JtYXQ6XCJoZXhcIixzaG93QWxwaGE6ITAsc2hvd0lucHV0OiEwLHR5cGU6aS50eXBlLGNoYW5nZTpmdW5jdGlvbih0KXt2YXIgYT10LnRvUmdiKCk7c2VsZi5lZGl0b3IuY29tcG9zZXIuY29tbWFuZHMuZXhlYyhpLmNvbW1hbmQsYSxbe25hbWU6aS5hdHRyaWJ1dGUsdmFsdWU6dC50b1JnYlN0cmluZygpfV0pLHNlbGYuZWRpdG9yLmZvY3VzKCl9fSl9fTt2YXIgZT17cmVzZXREZWZhdWx0czpmdW5jdGlvbigpe3QuZm4ud3lzaWh0bWw1LmRlZmF1bHRPcHRpb25zPXQuZXh0ZW5kKCEwLHt9LHQuZm4ud3lzaWh0bWw1LmRlZmF1bHRPcHRpb25zQ2FjaGUpfSxieXBhc3NEZWZhdWx0czpmdW5jdGlvbihpKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGE9dCh0aGlzKTthLmRhdGEoXCJ3eXNpaHRtbDVcIixuZXcgbChhLGkpKX0pfSxzaGFsbG93RXh0ZW5kOmZ1bmN0aW9uKGkpe3ZhciBhPXQuZXh0ZW5kKHt9LHQuZm4ud3lzaWh0bWw1LmRlZmF1bHRPcHRpb25zLGl8fHt9LHQodGhpcykuZGF0YSgpKSxvPXRoaXM7cmV0dXJuIGUuYnlwYXNzRGVmYXVsdHMuYXBwbHkobyxbYV0pfSxkZWVwRXh0ZW5kOmZ1bmN0aW9uKGkpe3ZhciBhPXQuZXh0ZW5kKCEwLHt9LHQuZm4ud3lzaWh0bWw1LmRlZmF1bHRPcHRpb25zLGl8fHt9KSxvPXRoaXM7cmV0dXJuIGUuYnlwYXNzRGVmYXVsdHMuYXBwbHkobyxbYV0pfSxpbml0OmZ1bmN0aW9uKHQpe3ZhciBpPXRoaXM7cmV0dXJuIGUuc2hhbGxvd0V4dGVuZC5hcHBseShpLFt0XSl9fTt0LmZuLnd5c2lodG1sNT1mdW5jdGlvbihpKXtyZXR1cm4gZVtpXT9lW2ldLmFwcGx5KHRoaXMsQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpKTpcIm9iamVjdFwiIT10eXBlb2YgaSYmaT8odC5lcnJvcihcIk1ldGhvZCBcIitpK1wiIGRvZXMgbm90IGV4aXN0IG9uIGpRdWVyeS53eXNpaHRtbDVcIiksdm9pZCAwKTplLmluaXQuYXBwbHkodGhpcyxhcmd1bWVudHMpfSx0LmZuLnd5c2lodG1sNS5Db25zdHJ1Y3Rvcj1sO3ZhciBuPXQuZm4ud3lzaWh0bWw1LmRlZmF1bHRPcHRpb25zPXtmb250OiEwLFwiZm9udC1zaXplXCI6ITAsZW1waGFzaXM6ITAsYWxpZ25tZW50OiEwLFwibGluZS1oZWlnaHRcIjohMCxcImhpZ2hsaWdodC1jb2xvclwiOiEwLFwidGV4dC1jb2xvclwiOiEwLFwiYmFja2dyb3VuZC1jb2xvclwiOiEwLGNsZWFyOiEwLGNvbG9yOiExLFwiZm9udC1zdHlsZXNcIjohMSxodG1sOiExLGltYWdlOiExLGxpbms6ITEsbGlzdHM6ITEsc2l6ZTpcInNtXCIsZXZlbnRzOnt9LHBhcnNlclJ1bGVzOntjbGFzc2VzOntcInd5c2l3eWctY29sb3Itc2lsdmVyXCI6MSxcInd5c2l3eWctY29sb3ItZ3JheVwiOjEsXCJ3eXNpd3lnLWNvbG9yLXdoaXRlXCI6MSxcInd5c2l3eWctY29sb3ItbWFyb29uXCI6MSxcInd5c2l3eWctY29sb3ItcmVkXCI6MSxcInd5c2l3eWctY29sb3ItcHVycGxlXCI6MSxcInd5c2l3eWctY29sb3ItZnVjaHNpYVwiOjEsXCJ3eXNpd3lnLWNvbG9yLWdyZWVuXCI6MSxcInd5c2l3eWctY29sb3ItbGltZVwiOjEsXCJ3eXNpd3lnLWNvbG9yLW9saXZlXCI6MSxcInd5c2l3eWctY29sb3IteWVsbG93XCI6MSxcInd5c2l3eWctY29sb3ItbmF2eVwiOjEsXCJ3eXNpd3lnLWNvbG9yLWJsdWVcIjoxLFwid3lzaXd5Zy1jb2xvci10ZWFsXCI6MSxcInd5c2l3eWctY29sb3ItYXF1YVwiOjEsXCJ3eXNpd3lnLWNvbG9yLW9yYW5nZVwiOjEsXCJhbGlnbi1sZWZ0XCI6MSxcImFsaWduLWNlbnRlclwiOjEsXCJhbGlnbi1yaWdodFwiOjEsanVzdGlmeToxfSx0YWdzOntiOnt9LGk6e30sYnI6e30sb2w6e30sdWw6e30sbGk6e30saDE6e30saDI6e30saDM6e30saDQ6e30saDU6e30saDY6e30sYmxvY2txdW90ZTp7fSx1OjEsaW1nOntjaGVja19hdHRyaWJ1dGVzOnt3aWR0aDpcIm51bWJlcnNcIixhbHQ6XCJhbHRcIixzcmM6XCJ1cmxcIixoZWlnaHQ6XCJudW1iZXJzXCJ9fSxhOntjaGVja19hdHRyaWJ1dGVzOntocmVmOlwidXJsXCIsdGFyZ2V0OlwiYWx0XCIscmVsOlwiYWx0XCJ9fSxzcGFuOjEsZGl2OjEsY29kZToxLHByZToxfX0sc3R5bGVzaGVldHM6W1wiLi9jc3MvYm9vdHN0cmFwMy13eXNpd3lnNS1jb2xvci5jc3NcIl0sbG9jYWxlOlwiZW5cIn07XCJ1bmRlZmluZWRcIj09dHlwZW9mIHQuZm4ud3lzaWh0bWw1LmRlZmF1bHRPcHRpb25zQ2FjaGUmJih0LmZuLnd5c2lodG1sNS5kZWZhdWx0T3B0aW9uc0NhY2hlPXQuZXh0ZW5kKCEwLHt9LHQuZm4ud3lzaWh0bWw1LmRlZmF1bHRPcHRpb25zKSk7dmFyIHM9dC5mbi53eXNpaHRtbDUubG9jYWxlPXtlbjp7Zm9udF9zdHlsZXM6e25vcm1hbDpcIk5vcm1hbCB0ZXh0XCIsaDE6XCJIZWFkaW5nIDFcIixoMjpcIkhlYWRpbmcgMlwiLGgzOlwiSGVhZGluZyAzXCIsaDQ6XCJIZWFkaW5nIDRcIixoNTpcIkhlYWRpbmcgNVwiLGg2OlwiSGVhZGluZyA2XCJ9LGVtcGhhc2lzOntib2xkOlwiQm9sZFwiLGl0YWxpYzpcIkl0YWxpY1wiLHVuZGVybGluZTpcIlVuZGVybGluZVwifSxsaXN0czp7dW5vcmRlcmVkOlwiVW5vcmRlcmVkIGxpc3RcIixvcmRlcmVkOlwiT3JkZXJlZCBsaXN0XCIsb3V0ZGVudDpcIk91dGRlbnRcIixpbmRlbnQ6XCJJbmRlbnRcIn0sbGluazp7aW5zZXJ0OlwiSW5zZXJ0IGxpbmtcIixjYW5jZWw6XCJDYW5jZWxcIix0YXJnZXQ6XCJPcGVuIGxpbmsgaW4gbmV3IHdpbmRvd1wifSxpbWFnZTp7aW5zZXJ0OlwiSW5zZXJ0IGltYWdlXCIsY2FuY2VsOlwiQ2FuY2VsXCJ9LGh0bWw6e2VkaXQ6XCJFZGl0IEhUTUxcIn0sY29sb3Vyczp7YmxhY2s6XCJCbGFja1wiLHNpbHZlcjpcIlNpbHZlclwiLGdyYXk6XCJHcmV5XCIsbWFyb29uOlwiTWFyb29uXCIscmVkOlwiUmVkXCIscHVycGxlOlwiUHVycGxlXCIsZ3JlZW46XCJHcmVlblwiLG9saXZlOlwiT2xpdmVcIixuYXZ5OlwiTmF2eVwiLGJsdWU6XCJCbHVlXCIsb3JhbmdlOlwiT3JhbmdlXCJ9LGxpbmVfaGVpZ2h0OntzaW5nbGU6XCJTaW5nbGVcIixcImRvdWJsZVwiOlwiRG91YmxlXCJ9fX19KHdpbmRvdy5qUXVlcnksd2luZG93Lnd5c2lodG1sNSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1KdmIzUnpkSEpoY0RNdGQzbHphV2gwYld3MUxtcHpJbDBzSW01aGJXVnpJanBiSWlRaUxDSjNlWE5wSWl3aWRIQnNJaXdpWVd4cFoyNXRaVzUwSWl3aVptOXVkQ0lzSW1admJuUXRjMmw2WlNJc0lteHBibVV0YUdWcFoyaDBJaXdpYkc5allXeGxJaXdpYkdsdVpWOW9aV2xuYUhRaUxDSnphVzVuYkdVaUxDSmtiM1ZpYkdVaUxDSjBaWGgwTFdOdmJHOXlJaXdpYUdsbmFHeHBaMmgwTFdOdmJHOXlJaXdpWW1GamEyZHliM1Z1WkMxamIyeHZjaUlzSW1Oc1pXRnlJaXdpWm05dWRDMXpkSGxzWlhNaUxDSnZjSFJwYjI1eklpd2ljMmw2WlNJc0ltWnZiblJmYzNSNWJHVnpJaXdpYm05eWJXRnNJaXdpYURFaUxDSm9NaUlzSW1neklpd2lhRFFpTENKb05TSXNJbWcySWl3aVpXMXdhR0Z6YVhNaUxDSnNhWE4wY3lJc0luVnViM0prWlhKbFpDSXNJbTl5WkdWeVpXUWlMQ0p2ZFhSa1pXNTBJaXdpYVc1a1pXNTBJaXdpYkdsdWF5SXNJbWx1YzJWeWRDSXNJblJoY21kbGRDSXNJbU5oYm1ObGJDSXNJbWx0WVdkbElpd2lhSFJ0YkNJc0ltVmthWFFpTENKamIyeHZjaUlzSW1OdmJHOTFjbk1pTENKaWJHRmpheUlzSW5OcGJIWmxjaUlzSW1keVlYa2lMQ0p0WVhKdmIyNGlMQ0p5WldRaUxDSndkWEp3YkdVaUxDSm5jbVZsYmlJc0ltOXNhWFpsSWl3aWJtRjJlU0lzSW1Kc2RXVWlMQ0p2Y21GdVoyVWlMQ0owWlcxd2JHRjBaWE1pTENKclpYa2lMQ0pYZVhOcGFIUnRiRFVpTENKbGJDSXNJblJvYVhNaUxDSjBiMjlzWW1GeVQzQjBjeUlzSW1SbFptRjFiSFJQY0hScGIyNXpJaXdpZENJc0ltTjFjM1J2YlZSbGJYQnNZWFJsY3lJc0luUnZiMnhpWVhJaUxDSmpjbVZoZEdWVWIyOXNZbUZ5SWl3aVpXUnBkRzl5SWl3aVkzSmxZWFJsUldScGRHOXlJaXdpZDJsdVpHOTNJaXdpZEhKcFoyZGxjaUlzSW1WaFkyZ2lMQ0pwSWl3aVkyOXVkR1Z1ZEZkcGJtUnZkeUlzSW05bVppSXNJbTl1SWl3aVptOWpkWE11ZDNsemFXaDBiV3cxSWl3aWNtVnRiM1psUTJ4aGMzTWlMQ0p3Y205MGIzUjVjR1VpTENKamIyNXpkSEoxWTNSdmNpSXNJbVY0ZEdWdVpDSXNJa1ZrYVhSdmNpSXNJbVYyWlc1MGN5SXNJbVYyWlc1MFRtRnRaU0lzSW5ObGJHWWlMQ0pqYkdGemN5SXNJbk4wZVd4bElpd2lZM1ZzZEhWeVpTSXNJblpoYkhWbElpd2lkVzVrWldacGJtVmtJaXdpWVhCd1pXNWtJaXdpYVc1cGRFaDBiV3dpTENKcGJtbDBTVzV6WlhKMFRHbHVheUlzSW1sdWFYUkpibk5sY25SSmJXRm5aU0lzSW1sdWFYUkJiR2xuYm0xbGJuUWlMQ0pwYm1sMFEyeGxZWElpTENKcGJtbDBSbTl1ZENJc0ltbHVhWFJHYjI1MFUybDZaU0lzSW1sdWFYUkZiWEJvWVhOcGN5SXNJbWx1YVhSRGIyeHZjbEJwWTJ0bGNpSXNJbVZzWlcwaUxDSjBlWEJsSWl3aVkyOXRiV0Z1WkNJc0ltRjBkSEpwWW5WMFpTSXNJbVpwYm1RaUxDSmpiR2xqYXlJc0ltVWlMQ0p6Y21ORmJHVnRaVzUwSWl3aWRHVjRkQ0lzSW14cGJtVklaV2xuYUhRaUxDSmtZWFJoSWl3aWMyVjBWR2x0Wlc5MWRDSXNJbVp2WTNWeklpd2lZMjl0Y0c5elpYSWlMQ0pqYjIxdFlXNWtjeUlzSW1WNFpXTWlMQ0p1WVcxbElpd2lZbVZtYjNKbElpd2lZMmhoYm1kbFZtbGxkMU5sYkdWamRHOXlJaXdpYm05MElpd2lkRzluWjJ4bFEyeGhjM01pTENKallYSmxkRUp2YjJ0dFlYSnJJaXdpYVc1elpYSjBTVzFoWjJWTmIyUmhiQ0lzSW5WeWJFbHVjSFYwSWl3aWFXNXpaWEowUW5WMGRHOXVJaXdpYVc1cGRHbGhiRlpoYkhWbElpd2lkbUZzSWl3aWFXNXpaWEowU1cxaFoyVWlMQ0oxY213aUxDSmpkWEp5Wlc1MFZtbGxkeUlzSW1Wc1pXMWxiblFpTENKelpXeGxZM1JwYjI0aUxDSnpaWFJDYjI5cmJXRnlheUlzSW10bGVYQnlaWE56SWl3aWQyaHBZMmdpTENKdGIyUmhiQ0lzSW1GamRHbDJaVUoxZEhSdmJpSXNJbWhoYzBOc1lYTnpJaXdpWjJWMFFtOXZhMjFoY21zaUxDSmhjSEJsYm1SVWJ5SXNJbk4wYjNCUWNtOXdZV2RoZEdsdmJpSXNJbWx1YzJWeWRFeHBibXROYjJSaGJDSXNJblJoY21kbGRFbHVjSFYwSWl3aWFXNXpaWEowVEdsdWF5SXNJbTVsZDFkcGJtUnZkeUlzSW5CeWIzQWlMQ0pvY21WbUlpd2ljbVZzSWl3aVltRmphMmR5YjNWdVpFTnZiRzl5SWl3aWRHbHVlV052Ykc5eUlpd2ljbWRpWVNJc0luUnZVbWRpSWl3aWNtVnpaWFFpTENKemNHVmpkSEoxYlNJc0luUnZVbWRpVTNSeWFXNW5JaXdpYzJWMFEyOXVkR1Z1ZEVSdll5SXNJbWxtY21GdFpTSXNJbU52Ym5SbGJuUkViMk4xYldWdWRDSXNJbVp2Ym5SUWFXTnJaWElpTENKbWIyNTBSbUZ0YVd4NUlpd2labTl1ZEZWU1RDSXNJbVp2Ym5SVGFYcGxVR2xqYTJWeUlpd2labTl1ZEZOMGVXeGxJaXdpWTJGdVkyVnNWR1Y0ZENJc0ltTm9iMjl6WlZSbGVIUWlMQ0pqYkdsamEyOTFkRVpwY21WelEyaGhibWRsSWl3aWNISmxabVZ5Y21Wa1JtOXliV0YwSWl3aWMyaHZkMEZzY0doaElpd2ljMmh2ZDBsdWNIVjBJaXdpWTJoaGJtZGxJaXdpYldWMGFHOWtjeUlzSW5KbGMyVjBSR1ZtWVhWc2RITWlMQ0ptYmlJc0luZDVjMmxvZEcxc05TSXNJbVJsWm1GMWJIUlBjSFJwYjI1elEyRmphR1VpTENKaWVYQmhjM05FWldaaGRXeDBjeUlzSWlSMGFHbHpJaXdpYzJoaGJHeHZkMFY0ZEdWdVpDSXNJbk5sZEhScGJtZHpJaXdpZEdoaGRDSXNJbUZ3Y0d4NUlpd2laR1ZsY0VWNGRHVnVaQ0lzSW1sdWFYUWlMQ0p0WlhSb2IyUWlMQ0pCY25KaGVTSXNJbk5zYVdObElpd2lZMkZzYkNJc0ltRnlaM1Z0Wlc1MGN5SXNJbVZ5Y205eUlpd2lRMjl1YzNSeWRXTjBiM0lpTENKd1lYSnpaWEpTZFd4bGN5SXNJbU5zWVhOelpYTWlMQ0ozZVhOcGQzbG5MV052Ykc5eUxYTnBiSFpsY2lJc0luZDVjMmwzZVdjdFkyOXNiM0l0WjNKaGVTSXNJbmQ1YzJsM2VXY3RZMjlzYjNJdGQyaHBkR1VpTENKM2VYTnBkM2xuTFdOdmJHOXlMVzFoY205dmJpSXNJbmQ1YzJsM2VXY3RZMjlzYjNJdGNtVmtJaXdpZDNsemFYZDVaeTFqYjJ4dmNpMXdkWEp3YkdVaUxDSjNlWE5wZDNsbkxXTnZiRzl5TFdaMVkyaHphV0VpTENKM2VYTnBkM2xuTFdOdmJHOXlMV2R5WldWdUlpd2lkM2x6YVhkNVp5MWpiMnh2Y2kxc2FXMWxJaXdpZDNsemFYZDVaeTFqYjJ4dmNpMXZiR2wyWlNJc0luZDVjMmwzZVdjdFkyOXNiM0l0ZVdWc2JHOTNJaXdpZDNsemFYZDVaeTFqYjJ4dmNpMXVZWFo1SWl3aWQzbHphWGQ1WnkxamIyeHZjaTFpYkhWbElpd2lkM2x6YVhkNVp5MWpiMnh2Y2kxMFpXRnNJaXdpZDNsemFYZDVaeTFqYjJ4dmNpMWhjWFZoSWl3aWQzbHphWGQ1WnkxamIyeHZjaTF2Y21GdVoyVWlMQ0poYkdsbmJpMXNaV1owSWl3aVlXeHBaMjR0WTJWdWRHVnlJaXdpWVd4cFoyNHRjbWxuYUhRaUxDSnFkWE4wYVdaNUlpd2lkR0ZuY3lJc0ltSWlMQ0ppY2lJc0ltOXNJaXdpZFd3aUxDSnNhU0lzSW1Kc2IyTnJjWFZ2ZEdVaUxDSjFJaXdpYVcxbklpd2lZMmhsWTJ0ZllYUjBjbWxpZFhSbGN5SXNJbmRwWkhSb0lpd2lZV3gwSWl3aWMzSmpJaXdpYUdWcFoyaDBJaXdpWVNJc0luTndZVzRpTENKa2FYWWlMQ0pqYjJSbElpd2ljSEpsSWl3aWMzUjViR1Z6YUdWbGRITWlMQ0psYmlJc0ltSnZiR1FpTENKcGRHRnNhV01pTENKMWJtUmxjbXhwYm1VaUxDSnFVWFZsY25raVhTd2liV0Z3Y0dsdVozTWlPaUpEUVVGRExGTkJRVk5CTEVWQlFVZERMRWRCUTFRc1dVRkZRU3hKUVVGSlF5eEpRVVZCUXl4VlFVRmhMRmRCUTFnc1RVRkJUeXd3UTBGSlZFTXNTMEZCVVN4WFFVTk9MRTFCUVU4c05FTkJTVlJETEZsQlFXRXNWMEZEV0N4TlFVRlBMR2xFUVVsVVF5eGpRVUZsTEZOQlFWTkRMRWRCUTNSQ0xFMUJRVThzY1ZaQlUzZEVRU3hGUVVGUFF5eFpRVUZaUXl4UFFVRlRMRFJOUVZNMVFrWXNSVUZCVDBNc1dVRkJXVVVzVDBGQlV5dzJRa0ZOTjBaRExHRkJRV01zVjBGRFdDeE5RVUZQTEc5RVFVbFdReXhyUWtGQmJVSXNWMEZEYUVJc1RVRkJUeXg1UkVGSlZrTXNiVUpCUVc5Q0xGZEJRMnBDTEUxQlFVOHNNRVJCU1ZaRExFMUJRVk1zVjBGRFVDeE5RVUZQTEd0TFFVOVVReXhqUVVGbExGTkJRVk5TTEVWQlFWRlRMRWRCUXpWQ0xFZEJRVWxETEVkQlFWRkVMRWRCUVZkQkxFVkJRVkZETEV0QlFWRXNVVUZCVlVRc1JVRkJVVU1zUzBGQlR5eEZRVU5vUlN4UFFVRlBMSE5FUVVOblEwRXNSVUZCVHl3d1NFRkRiME5XTEVWQlFVOVhMRmxCUVZsRExFOUJRVk1zTkV0QlIxSmFMRVZCUVU5WExGbEJRVmxETEU5QlFWTXNkMGRCUXpkQ1dpeEZRVUZQVnl4WlFVRlpSU3hIUVVGTExIZEhRVU40UW1Jc1JVRkJUMWNzV1VGQldVY3NSMEZCU3l4M1IwRkRlRUprTEVWQlFVOVhMRmxCUVZsSkxFZEJRVXNzTUVaQlEzUkRaaXhGUVVGUFZ5eFpRVUZaU3l4SFFVRkxMREJHUVVONFFtaENMRVZCUVU5WExGbEJRVmxOTEVkQlFVc3NNRVpCUTNoQ2FrSXNSVUZCVDFjc1dVRkJXVThzUjBGQlN5eDFRa0ZOYmtoRExGTkJRVmtzVjBGRFZpeE5RVUZQTEhkRFFVMVVReXhOUVVGVExGTkJRVk53UWl4RlFVRlJVeXhIUVVOMFFpeEhRVUZKUXl4SFFVRlJSQ3hIUVVGWFFTeEZRVUZSUXl4TFFVRlJMRkZCUVZGRUxFVkJRVkZETEV0QlFVOHNSVUZET1VRc1QwRkJUeXcwUTBGRlowSkJMRVZCUVU4c2NVVkJRWFZGVml4RlFVRlBiMElzVFVGQlRVTXNWVUZCV1N3MlJVRkRka2RZTEVWQlFVOHNiVVZCUVhGRlZpeEZRVUZQYjBJc1RVRkJUVVVzVVVGQlZTeG5Sa0ZEYmtkYUxFVkJRVThzZVVSQlFUSkVWaXhGUVVGUGIwSXNUVUZCVFVjc1VVRkJWU3h6UmtGRGVFWmlMRVZCUVU4c2QwUkJRVEJFVml4RlFVRlBiMElzVFVGQlRVa3NUMEZCVXl4clJrRkxia2hETEV0QlFWRXNVMEZCVTNwQ0xFVkJRVkZUTEVkQlEzSkNMRWRCUVVsRExFZEJRVkZFTEVkQlFWZEJMRVZCUVZGRExFdEJRVkVzVVVGQlVVUXNSVUZCVVVNc1MwRkJUeXhGUVVNNVJDeFBRVUZQTEhsTlFVOU5WaXhGUVVGUGVVSXNTMEZCUzBNc1QwRkJVeXcyVGtGSk9FVXhRaXhGUVVGUGVVSXNTMEZCUzBVc1QwRkJVeXhuUjBGSGRrVXpRaXhGUVVGUGVVSXNTMEZCUzBjc1QwRkJVeXd3UlVGRFdqVkNMRVZCUVU5NVFpeExRVUZMUXl4UFFVRlRMR3RFUVV0eVJXaENMRVZCUVU4c05FUkJRVGhFVml4RlFVRlBlVUlzUzBGQlMwTXNUMEZCVXl4elJVRkpja2hITEUxQlFWTXNVMEZCVXpkQ0xFVkJRVkZUTEVkQlEzUkNMRWRCUVVsRExFZEJRVkZFTEVkQlFWZEJMRVZCUVZGRExFdEJRVkVzVVVGQlVVUXNSVUZCVVVNc1MwRkJUeXhGUVVNNVJDeFBRVUZQTERCTlFVMU5WaXhGUVVGUE5rSXNUVUZCVFVnc1QwRkJVeXcwVFVGTk1rSXhRaXhGUVVGUE5rSXNUVUZCVFVRc1QwRkJVeXhwUlVGRGRFSTFRaXhGUVVGUE5rSXNUVUZCVFVnc1QwRkJVeXhyUkVGTE4wUm9RaXhGUVVGUExEWkVRVUVyUkZZc1JVRkJUelpDTEUxQlFVMUlMRTlCUVZNc2QwVkJTWFpJU1N4TFFVRlJMRk5CUVZNNVFpeEZRVUZSVXl4SFFVTnlRaXhIUVVGSlF5eEhRVUZSUkN4SFFVRlhRU3hGUVVGUlF5eExRVUZSTEZGQlFWRkVMRVZCUVZGRExFdEJRVThzUlVGRE9VUXNUMEZCVHl3MFEwRkZaMEpCTEVWQlFVOHNORVJCUVRoRVZpeEZRVUZQT0VJc1MwRkJTME1zUzBGQlR5dzJSVUZMYmtoRExFMUJRVk1zVTBGQlUyaERMRVZCUVZGVExFZEJRM1JDTEVkQlFVbERMRWRCUVZGRUxFZEJRVmRCTEVWQlFWRkRMRXRCUVZFc1VVRkJVVVFzUlVGQlVVTXNTMEZCVHl4RlFVTTVSQ3hQUVVGUExITkVRVU5uUTBFc1JVRkJUeXd5UmtGRFZGWXNSVUZCVDJsRExGRkJRVkZETEUxQlFWRXNNRkJCUjI5SmJFTXNSVUZCVDJsRExGRkJRVkZETEUxQlFWRXNjVTFCUTNKQ2JFTXNSVUZCVDJsRExGRkJRVkZGTEU5QlFWTXNhVTFCUXpWQ2JrTXNSVUZCVDJsRExGRkJRVkZITEV0QlFVOHNjVTFCUTJ4Q2NFTXNSVUZCVDJsRExGRkJRVkZKTEU5QlFWTXNLMHhCUXpsQ2NrTXNSVUZCVDJsRExGRkJRVkZMTEVsQlFVMHNjVTFCUTJaMFF5eEZRVUZQYVVNc1VVRkJVVTBzVDBGQlV5eHRUVUZETVVKMlF5eEZRVUZQYVVNc1VVRkJVVThzVFVGQlVTeHRUVUZEZGtKNFF5eEZRVUZQYVVNc1VVRkJVVkVzVFVGQlVTeHBUVUZEZWtKNlF5eEZRVUZQYVVNc1VVRkJVVk1zUzBGQlR5eHBUVUZEZEVJeFF5eEZRVUZQYVVNc1VVRkJVVlVzUzBGQlR5eHhUVUZEYkVJelF5eEZRVUZQYVVNc1VVRkJVVmNzVDBGQlV5eDNRa0ZOT1U1RExFVkJRVmtzVTBGQlUwTXNSVUZCU3psRExFVkJRVkZUTEVkQlEyeERMRTFCUVU5a0xFZEJRVWx0UkN4SFFVRkxPVU1zUlVGQlVWTXNTVUZKZUVKelF5eEZRVUZaTEZOQlFWTkRMRVZCUVVsMlF5eEhRVU42UW5kRExFdEJRVXRFTEVkQlFVdEJMRU5CUTFZc1NVRkJTVVVzUjBGQlkzcERMRWRCUVZjd1F5eERRVU0zUWl4TFFVRkpMRWRCUVVsRExFdEJRVXRHTEVkQlFWbEhMR2RDUVVOeVFqRkVMRVZCUVVsNVJDeEhRVUZMUml4RlFVRlpSeXhuUWtGQlowSkVMRVZCUlhwRFNDeE5RVUZMU3l4UlFVRlZUQ3hMUVVGTFRTeGpRVUZqVUN4RlFVRkpSU3hIUVVOMFEwUXNTMEZCUzA4c1QwRkJWVkFzUzBGQlMxRXNZVUZCWVdoRUxFZEJSV3BEYVVRc1QwRkJUMFlzVDBGQlUxQXNTMEZCUzA4c1QwRkZja0l2UkN4RlFVRkZhVVVzVVVGQlVVTXNVVUZCVVN4blFrRkZiRUpzUlN4RlFVRkZMRFJDUVVFMFFtMUZMRXRCUVVzc1UwRkJVME1zUlVGQlIySXNSMEZETTBOMlJDeEZRVUZGZFVRc1JVRkJSMk1zWlVGQlpVTXNTVUZCU1N4dFFrRkJiVUpETEVsQlEzWkRReXhyUWtGQmIwSXNWMEZEYUVKNFJTeEZRVUZGTEdWQlFXVjVSU3haUVVGWkxHRkJUVGREYmtJc1IwRkJWVzlDTEZkQlJVNURMRmxCUVdGeVFpeEZRVVZpVlN4aFFVRmpMRk5CUVZOb1JDeEhRVU51UWtFc1JVRkJWVUVzVFVGSlZrRXNSVUZCVldoQ0xFVkJRVVUwUlN4UlFVRlBMRXRCUVZVMVJDeEhRVU0zUWtFc1JVRkJVVFpETEZGQlFWVk1MRXRCUVV0TExGRkJRVkVzUlVGRkwwSXNTVUZCU1VVc1IwRkJVeXhIUVVGSk9VUXNSMEZCU3pSRkxFOUJRVTl5UWl4TFFVRkxSQ3hIUVVGSExFZEJRVWwyUXl4RlFVVjZReXhKUVVGSFFTeEhRVUZYUVN4RlFVRlJPRVFzVDBGRGJFSXNTVUZCU1N4SFFVRkpReXhMUVVGaEwwUXNSMEZCVVRoRUxFOUJRM3BDWml4RlFVRlBVU3hIUVVGSFVTeEZRVUZYTDBRc1JVRkJVVGhFTEU5QlFVOURMRWRCUnpWRExFOUJRVTlvUWl4SlFVZFlSQ3hqUVVGbExGTkJRVk5RTEVWQlFVbDJReXhIUVVONFFpeEhRVUZKWjBVc1IwRkJUM2hDTEV0QlExQkxMRVZCUVZVM1JDeEZRVUZGTEZOQlExcHBSaXhSUVVGVkxHOUNRVU5XUXl4TlFVRlRMR2xDUVVWVVF5eEZRVUZWYmtVc1JVRkJVVlFzVVVGQlZXMUVMRVZCUVdWdVJDeFJRVUZWTEVsQlEzcEVMRXRCUVVrc1IwRkJTVGhETEV0QlFVOUxMRWRCUVdkQ0xFTkJRek5DTEVkQlFVa3dRaXhKUVVGUkxFTkJSVkZETEZWQlFXcENja1VzUlVGQlVYRkRMRWRCUTBweVF5eEZRVUZSY1VNc1RVRkJVeXhKUVVOb1FpdENMRWRCUVZFc1IwRkhXa0VzUlVGQlVURkNMRVZCUVdWTUxFZEJSM2hDSzBJc1MwRkJWU3hKUVVOVWRrSXNSVUZCVVhsQ0xFOUJRVTlzUXl4RlFVRlZReXhGUVVGTE9VTXNSVUZCVHpSRkxFZEJRVlZ1UlN4SlFVVndReXhUUVVGU2NVTXNSMEZEUTBjc1MwRkJTeXRDTEZOQlFWTXhRaXhIUVVkUUxGTkJRVkpTTEVkQlEwTkhMRXRCUVV0blF5eGxRVUZsTTBJc1IwRkhZaXhWUVVGU1VpeEhRVU5EUnl4TFFVRkxhVU1zWjBKQlFXZENOVUlzUjBGSllpeGpRVUZTVWl4SFFVTkdSeXhMUVVGTGEwTXNZMEZCWXpkQ0xFZEJSMVFzVlVGQlVsSXNSMEZEUmtjc1MwRkJTMjFETEZWQlFWVTVRaXhIUVVkTUxGTkJRVkpTTEVkQlEwRkhMRXRCUVV0dlF5eFRRVUZUTDBJc1IwRkhUaXhqUVVGU1VpeEhRVU5CUnl4TFFVRkxjVU1zWVVGQllXaERMRWRCUjFZc1lVRkJVbElzUjBGRFFVY3NTMEZCUzNORExHRkJRV0ZxUXl4SFFVZFdMR1ZCUVZKU0xFZEJRMEZITEV0QlFVdDFReXhuUWtGQlowSnNReXhIUVVOdVFtMURMRXRCUVUwc1kwRkRUa01zUzBGQlRTeFBRVU5PTVVRc1RVRkJUeXhQUVVOUU1rUXNVVUZCVXl4WlFVTlVReXhWUVVGWExHOUNRVWxNTEc5Q1FVRlNPVU1zUjBGRFFVY3NTMEZCUzNWRExHZENRVUZuUW14RExFZEJRMjVDYlVNc1MwRkJUU3h0UWtGRFRrTXNTMEZCVFN4WlFVTk9NVVFzVFVGQlR5eFBRVU5RTWtRc1VVRkJVeXhwUWtGRFZFTXNWVUZCVnl4NVFrRkpUQ3h4UWtGQlVqbERMRWRCUTBGSExFdEJRVXQxUXl4blFrRkJaMEpzUXl4SFFVTnVRbTFETEV0QlFVMHNiMEpCUTA1RExFdEJRVTBzWVVGRFRqRkVMRTFCUVU4c1QwRkRVREpFTEZGQlFWTXNhMEpCUTFSRExGVkJRVmNzTWtKQlQzcENMRWRCUVVkdVJpeEZRVUZSTmtNc1VVRkRVQ3hKUVVGSlVpeEpRVUZQY2tNc1IwRkJVVFpETEZGQlEyWkJMRVZCUVZGNVFpeFBRVUZQZEVVc1JVRkJVVFpETEZGQlFWRlNMRWRCTkVOMlF5eFBRWGhEUVZFc1IwRkJVWFZETEV0QlFVc3NNa05CUVRKRFF5eE5RVUZOTEZOQlFWTkRMRWRCUTI1RkxFZEJRVWx3UlN4SFFVRlRiMFVzUlVGQlJYQkZMRkZCUVZWdlJTeEZRVUZGUXl4WFFVTjJRbWhFTEVWQlFVdDJSQ3hGUVVGRmEwTXNSVUZEV0RoRExFZEJRVXR1UWl4UlFVRlJkVU1zUzBGQlN5eHBRa0ZCYVVKSkxFdEJRVXRxUkN4RlFVRkhiRUlzVlVGSEwwTjNRaXhGUVVGUmRVTXNTMEZCU3l4NVEwRkJlVU5ETEUxQlFVMHNVMEZCVTBNc1IwRkRha1VzUjBGQlNYQkZMRWRCUVZOdlJTeEZRVUZGY0VVc1VVRkJWVzlGTEVWQlFVVkRMRmRCUTNaQ2FFUXNSVUZCUzNaRUxFVkJRVVZyUXl4RlFVTllPRU1zUjBGQlMyNUNMRkZCUVZGMVF5eExRVUZMTEd0Q1FVRnJRa2tzUzBGQlMycEVMRVZCUVVkc1FpeFZRVWxvUkhkQ0xFVkJRVkYxUXl4TFFVRkxMR2RDUVVGblFqZENMRWRCUVVjc2IwSkJRWEZDTEZOQlFWTXJRaXhIUVVNMVJDeEhRVUZKTDBNc1IwRkJTM1pFTEVWQlFVVnpSeXhGUVVGRmNFVXNVVUZEVkhWRkxFVkJRV0ZzUkN4RlFVRkhOa01zUzBGQlN5eFZRVUZWVFN4TFFVRkxMREJDUVVkNFEwTXNXVUZCVnl4WFFVTlVjRVFzUlVGQlJ6WkRMRXRCUVVzc2JVTkJRWEZEU3l4RlFVRmhMRTFCUVUxSExGTkJReTlFTEV0QlNVd3ZReXhGUVVGUmRVTXNTMEZCU3l4clFrRkJhMEpETEUxQlFVMHNVMEZCVTBNc1IwRkROVU1zUjBGQlNYQkZMRWRCUVZOdlJTeEZRVUZGY0VVc1VVRkJWVzlGTEVWQlFVVkRMRmRCUTNaQ2FFUXNSVUZCUzNaRUxFVkJRVVZyUXl4SFFVTlFkVVVzUlVGQllXeEVMRVZCUVVkdFJDeExRVUZMTERCQ1FVVjZRamRETEVkQlFWRjFReXhMUVVGTExIVkNRVUYxUWswc1MwRkJTeXd3UWtGQk1rSkVMRWRCUlhCRmVrSXNSVUZCUzJwQ0xFOUJRVTg0UXl4VFFVRlRReXhUUVVGVFF5eExRVUZMTEdGQlFXTk9MRWxCUXk5RFR5eExRVUZOTEcxQ1FVTk9OVUlzVFVGQlQzRkNMRTlCUzFocVJDeExRVUZMUkN4SFFVRkhNRVFzVDBGQlQzQkVMRWRCUlZKQkxFZEJSMWd3UWl4VFFVRlZMRk5CUVZNeFFpeEhRVU5tTEVkQlFVbHhSQ3hIUVVGeFFpeDNRMEZEZWtKeVJDeEhRVUZSZFVNc1MwRkJTMk1zUjBGQmIwSmlMRTFCUVUwc1YwRkRia040UXl4RlFVRlJkVU1zUzBGQlN5eFRRVUZUWlN4SlFVRkpSQ3hIUVVGdlFrVXNXVUZCV1N4bFFVbHNSVE5DTEdkQ1FVRnBRaXhUUVVGVE5VSXNSMEZEZEVJc1IwRkxTWGRFTEVkQlRFRnlReXhGUVVGUGVFSXNTMEZEVURoRUxFVkJRVzFDZWtRc1JVRkJVWFZETEV0QlFVc3NNa05CUTJoRGJVSXNSVUZCVjBRc1JVRkJhVUpzUWl4TFFVRkxMSGxEUVVOcVEyOUNMRVZCUVdWR0xFVkJRV2xDYkVJc1MwRkJTeXhuUWtGRGNrTnhRaXhGUVVGbFJpeEZRVUZUUnl4TlFVZDRRa01zUlVGQll5eFhRVU5rTEVkQlFVbERMRWRCUVUxTUxFVkJRVk5ITEV0QlEyNUNTQ3hIUVVGVFJ5eEpRVUZKUkN4SFFVTmlla01zUlVGQlMycENMRTlCUVU4NFJDeFpRVUZaUXl4UlFVRlJiRUlzVVVGRE5VSlRMRWxCUTBGeVF5eEZRVUZMYWtJc1QwRkJUemhETEZOQlFWTnJRaXhWUVVGVlF5eFpRVUZaV0N4SFFVTXpRMEVzUlVGQlowSXNUVUZGY0VKeVF5eEZRVUZMYWtJc1QwRkJUemhETEZOQlFWTkRMRk5CUVZORExFdEJRVXNzWTBGQlpXRXNSMEZIZEVSTUxFZEJRVk5WTEZOQlFWTXNVMEZCVXpOQ0xFZEJRMVFzU1VGQldFRXNSVUZCUlRSQ0xGRkJRMFJRTEVsQlEwRk1MRVZCUVdsQ1lTeE5RVUZOTEZkQlNTOUNXQ3hGUVVGaGJrSXNUVUZCVFhOQ0xFZEJSVzVDVEN4RlFVRnBRaTlETEVkQlFVY3NVVUZCVXl4WFFVTjZRbWRFTEVWQlFWTllMRlZCUjJKVkxFVkJRV2xDTDBNc1IwRkJSeXhQUVVGUkxGZEJRM2hDVXl4RlFVRkxha0lzVDBGQlR6aEVMRmxCUVZsRExGRkJRVkZzUWl4VlFVZHdReTlETEVWQlFWRjFReXhMUVVGTExIbERRVUY1UTBNc1RVRkJUU3hYUVVONFJDeEhRVUZKSzBJc1IwRkJaWEJKTEVWQlFVVjNSQ3hOUVVGTk5rVXNVMEZCVXl3eVFrRkZjRU1zVDBGQlMwUXNTVUZWVFN4SFFWUlFjRVFzUlVGQlMycENMRTlCUVU4NFJDeFpRVUZaUXl4UlFVRlJiRUlzVDBGQlRTeEhRVU4wUTFNc1JVRkJaMEp5UXl4RlFVRkxha0lzVDBGQlR6aERMRk5CUVZOclFpeFZRVUZWVHl4alFVTXZRMmhDTEVWQlFXbENhVUlzVTBGQlV5eFJRVUZSU2l4TlFVRk5MRkZCUTNoRFlpeEZRVUZwUWk5RExFZEJRVWNzYzBKQlFYVkNMSGxDUVVFd1FpeFRRVUZUSzBJc1IwRkRNVVZCTEVWQlFVVnJReXh4UWtGRlF5eE5RVkZ1UW1oRUxHVkJRV2RDTEZOQlFWTXpRaXhIUVVOeVFpeEhRVTFKZDBRc1IwRk9RWEpETEVWQlFVOTRRaXhMUVVOUWFVWXNSVUZCYTBJMVJTeEZRVUZSZFVNc1MwRkJTeXd3UTBGREwwSnRRaXhGUVVGWGEwSXNSVUZCWjBKeVF5eExRVUZMTEhkRFFVTm9RM05ETEVWQlFXTkVMRVZCUVdkQ2NrTXNTMEZCU3l3eVEwRkRia052UWl4RlFVRmxhVUlzUlVGQlowSnlReXhMUVVGTExHZENRVU53UTNGQ0xFVkJRV1ZHTEVWQlFWTkhMRTFCUjNoQ2FVSXNSVUZCWVN4WFFVTmlMRWRCUVVsbUxFZEJRVTFNTEVWQlFWTkhMRXRCUTI1Q1NDeEhRVUZUUnl4SlFVRkpSQ3hIUVVOaWVrTXNSVUZCUzJwQ0xFOUJRVTg0UkN4WlFVRlpReXhSUVVGUmJFSXNVVUZETlVKVExFbEJRMEZ5UXl4RlFVRkxha0lzVDBGQlR6aERMRk5CUVZOclFpeFZRVUZWUXl4WlFVRlpXQ3hIUVVNelEwRXNSVUZCWjBJc1MwRkhjRUlzU1VGQlNYVkNMRWRCUVZsR0xFVkJRVmxITEV0QlFVc3NWVUZEYWtNM1JDeEhRVUZMYWtJc1QwRkJUemhETEZOQlFWTkRMRk5CUVZORExFdEJRVXNzWTBGREwwSXJRaXhMUVVGVGJFSXNSVUZEVkRGR0xFOUJRVmt3Unl4RlFVRlpMRk5CUVZjc1VVRkRia05ITEVsQlFWTklMRVZCUVZrc1YwRkJZU3hMUVVzeFEzSkNMRWRCUVZOVkxGTkJRVk1zVTBGQlV6TkNMRWRCUTFRc1NVRkJXRUVzUlVGQlJUUkNMRkZCUTBSVExFbEJRMEZHTEVWQlFXZENUaXhOUVVGTkxGZEJTVGxDV0N4RlFVRmhia0lzVFVGQlRYTkRMRWRCUlc1Q1JpeEZRVUZuUW14RkxFZEJRVWNzVVVGQlV5eFhRVU40UW1kRUxFVkJRVk5ZTEZWQlIySTJRaXhGUVVGblFteEZMRWRCUVVjc1QwRkJVU3hYUVVOMlFsTXNSVUZCUzJwQ0xFOUJRVTg0UkN4WlFVRlpReXhSUVVGUmJFSXNWVUZIY0VNdlF5eEZRVUZSZFVNc1MwRkJTeXgzUTBGQmQwTkRMRTFCUVUwc1YwRkRka1FzUjBGQlNTdENMRWRCUVdWd1NTeEZRVUZGZDBRc1RVRkJUVFpGTEZOQlFWTXNNa0pCUlhCRExFOUJRVXRFTEVsQlZVMHNSMEZVVUhCRUxFVkJRVXRxUWl4UFFVRlBPRVFzV1VGQldVTXNVVUZCVVd4Q0xFOUJRVTBzUjBGRGRFTlRMRVZCUVdkQ2NrTXNSVUZCUzJwQ0xFOUJRVTg0UXl4VFFVRlRhMElzVlVGQlZVOHNZMEZETDBOSExFVkJRV2RDUml4VFFVRlRMRkZCUVZGS0xFMUJRVTBzVVVGRGRrTk5MRVZCUVdkQ2JFVXNSMEZCUnl4elFrRkJkVUlzZVVKQlFUQkNMRk5CUVZNclFpeEhRVU42UlVFc1JVRkJSV3RETEhGQ1FVVkRMRTFCVTI1Q09VTXNZMEZCWlN4VFFVRlROMElzUjBGRGRFSkJMRVZCUVZGMVF5eExRVUZMTEdOQlFXTnFSeXhoUVVrM1FuZEdMRlZCUVZjc1UwRkJVemxDTEVkQlEyeENRU3hGUVVGUmRVTXNTMEZCU3l4VlFVRlZOMElzUjBGQlJ5eFJRVUZUTEZkQlEycERMRWRCUVVsNVJTeEhRVUZyUWtNc1ZVRkJWU3hSUVVNMVFrTXNSVUZCVDBZc1JVRkJaMEpITEU5QlJUTkNkRVlzUjBGQlVYVkRMRXRCUVVzc1owSkJRV2RDVFN4TFFVRkxMSEZDUVVNdlFqQkRMRkZCUTBoMlJpeEZRVUZSZFVNc1MwRkJTeXh4UWtGQmNVSk5MRXRCUVVzc2VVSkJRM0JETUVNc1VVRkRTSFpHTEVWQlFWRjFReXhMUVVGTExHRkJRV0ZOTEV0QlFVc3NiMEpCUXpWQ01FTXNVVUZEU0haR0xFVkJRVkYxUXl4TFFVRkxMR05CUVdOTkxFdEJRVXNzYjBKQlF6ZENNRU1zVVVGRFNIWkdMRVZCUVZGMVF5eExRVUZMTEc5RVFVTldiRU1zVVVGQlVTeFRRVVZZVEN4RlFVRlJkVU1zUzBGQlN5eGxRVUZsYVVRc1UwRkJVeXhOUVVGUExGRkJRelZEZUVZc1JVRkJVWFZETEV0QlFVc3NiMEpCUVc5Q2FVUXNVMEZCVXl4TlFVRlBMRkZCUTJwRWVFWXNSVUZCVVhWRExFdEJRVXNzY1VKQlFYRkNhVVFzVTBGQlV5eE5RVUZQTEZGQlJXeEVja1VzUzBGQlMycENMRTlCUVU4NFF5eFRRVUZUUXl4VFFVRlRReXhMUVVGTExHdENRVUZ0UW0xRExFbEJRM0JFYkVNc1MwRkJUU3gzUWtGRFRqVkNMRTFCUVU4MFJDeEZRVUZuUWswc2IwSkJTemRDTVVRc1UwRkJWU3hUUVVGVEwwSXNSMEZGYWtJM1JDeEZRVUZGYVVVc1VVRkJVVTBzUjBGQlJ5eGxRVUZuUWl4WFFVTXpRbFlzUlVGQlVYVkRMRXRCUVVzc1owSkJRV2RDVFN4TFFVRkxMSEZDUVVNdlFqWkRMR05CUVdOMlJTeExRVUZMYWtJc1QwRkJUemhETEZOQlFWTXlReXhQUVVGUFF5eHRRa0ZITDBNMVJpeEZRVUZSZFVNc1MwRkJTeXhuUWtGQlowSnpSQ3hsUVVNeFFtNUdMRWRCUVVjc2RVSkJRWGRDTEZOQlFWTXJRaXhGUVVGSGJFY3NSVUZCVFhWS0xFZEJRelZETTBVc1MwRkJTMnBDTEU5QlFVODRReXhUUVVGVFF5eFRRVUZUUXl4TFFVRkxMR1ZCUVdkQ00wY3NSVUZCVFhWS0xFbEJRM1pFTTBNc1MwRkJUU3h4UWtGRFRqVkNMRTFCUVU5b1JpeEpRVWRRTkVjc1MwRkJUU3cwUWtGRFRqVkNMRTFCUVU5MVJTeExRVWxVTTBVc1MwRkJTMnBDTEU5QlFVODJReXhWUVVWaWNrTXNSMEZCUnl4eFFrRkJjMElzVTBGQlV5dENMRVZCUVVkc1J5eEhRVU53UXpSRkxFdEJRVXRxUWl4UFFVRlBPRU1zVTBGQlUwTXNVMEZCVTBNc1MwRkJTeXhoUVVGak0wY3NTVUZETDBNMFJ5eExRVUZOTEcxQ1FVTk9OVUlzVFVGQlQyaEdMRXRCUjFRMFJTeExRVUZMYWtJc1QwRkJUelpETEZWQlJXSnlReXhIUVVGSExIRkNRVUZ6UWl4VFFVRlRLMElzUlVGQlIyeEhMRVZCUVUxM1NpeEhRVU14UXpWRkxFdEJRVXRxUWl4UFFVRlBPRU1zVTBGQlUwTXNVMEZCVTBNc1MwRkJTeXhoUVVGak0wY3NTVUZETDBNMFJ5eExRVUZOTEcxQ1FVTk9OVUlzVFVGQlQyaEdMRWxCUjFBMFJ5eExRVUZOTEhWQ1FVTk9OVUlzVFVGQlQzZEZMRXRCUjFRMVJTeExRVUZMYWtJc1QwRkJUelpETEZkQlNXeENaaXhoUVVGakxGTkJRVk5vUXl4SFFVTnlRa0VzUlVGQlVYVkRMRXRCUVVzc2NVSkJRWEZDZVVRc2FVSkJReTlDZEVZc1IwRkJSeXhqUVVGbExGTkJRVk1yUWl4RlFVRkhja1lzUjBGRE4wSXJSQ3hMUVVGTGFrSXNUMEZCVHpoRExGTkJRVk5ETEZOQlFWTkRMRXRCUVVzc1YwRkJXVGxHTEVkQlF5OURLMFFzUzBGQlMycENMRTlCUVU4MlF5eFhRVWxzUW1Rc1lVRkJZeXhUUVVGVGFrTXNSMEZEY2tKQkxFVkJRVkYxUXl4TFFVRkxMR0ZCUVdFd1JDeGhRVWMxUWk5RUxHZENRVUZwUWl4VFFVRlRiRU1zUlVGQlV6ZERMRWRCUTJwRE5rTXNSVUZCVVhWRExFdEJRVXR3Uml4RlFVRlJaMFlzVFVGQlRYRkVMRlZCUTNwQ1ZTeFhRVUZaTEZOQlExcERMRmRCUVZrc1VVRkRXa01zY1VKQlFYRkNMRVZCUTNKQ01VZ3NUVUZCVDNaQ0xFVkJRVkYxUWl4TlFVTm1Na2dzWjBKQlFXbENMRTFCUTJwQ1F5eFhRVUZYTEVWQlExaERMRmRCUVZjc1JVRkRXRzVGTEV0QlFVMXFSaXhGUVVGUmFVWXNTMEZEWkc5RkxFOUJRVkVzVTBGQlV6bElMRWRCUTJZc1IwRkJTVEpITEVkQlFVOHpSeXhGUVVGTk5FY3NUMEZGYWtKdVJTeE5RVUZMYWtJc1QwRkJUemhETEZOQlFWTkRMRk5CUVZORExFdEJRVXN2Uml4RlFVRlJhMFlzVVVGQlUyZEVMRWxCUTJ4RWJFTXNTMEZCVFdoSExFVkJRVkZ0Uml4VlFVTmtaaXhOUVVGUE4wTXNSVUZCVFN0SExHbENRVWRtZEVVc1MwRkJTMnBDTEU5QlFVODJReXhaUVZGMFFpeEpRVUZKTUVRc1NVRkRRVU1zWTBGQlpTeFhRVU5ZZGtzc1JVRkJSWGRMTEVkQlFVZERMRlZCUVZVdlJ5eGxRVUZwUWpGRUxFVkJRVVUwUlN4UlFVRlBMRXRCUVZVMVJTeEZRVUZGZDBzc1IwRkJSME1zVlVGQlZVTXNjMEpCUlhSRlF5eGxRVUZuUWl4VFFVRlRNMG9zUjBGRGNrSXNUVUZCVDNkRExFMUJRVXRYTEV0QlFVc3NWMEZEWWl4SFFVRkplVWNzUjBGQlVUVkxMRVZCUVVWM1JDeExRVU5rYjBnc1IwRkJUV3hGTEV0QlFVc3NXVUZCWVN4SFFVRkpjRVFzUjBGQlZYTklMRVZCUVU4MVNpeFBRVWR5UkRaS0xHTkJRV1VzVTBGQlZUZEtMRWRCUTNKQ0xFZEJRVWs0U2l4SFFVRlhPVXNzUlVGQlJUUkZMRlZCUVZjMVJTeEZRVUZGZDBzc1IwRkJSME1zVlVGQlZTOUhMR1ZCUVdkQ01VTXNUVUZCWldoQ0xFVkJRVVYzUkN4TlFVRk5hMFFzVVVGRE9VVnhSU3hGUVVGUGRrZ3NTVUZEV0N4UFFVRlBPRWNzUjBGQlVVc3NaVUZCWlVzc1RVRkJUVVFzUjBGQlQwUXNTMEZGTDBOSExGZEJRVmtzVTBGQlUycExMRWRCUTJwQ0xFZEJRVWs0U2l4SFFVRlhPVXNzUlVGQlJUUkZMRkZCUVU4c1MwRkJWVFZGTEVWQlFVVjNTeXhIUVVGSFF5eFZRVUZWTDBjc1pVRkJaMEl4UXl4UFFVTTNSQ3RLTEVWQlFVOTJTQ3hKUVVOWUxFOUJRVTg0Unl4SFFVRlJTeXhsUVVGbFN5eE5RVUZOUkN4SFFVRlBSQ3hMUVVVdlEwa3NTMEZCVFN4VFFVRlRiRXNzUjBGRFdDeEhRVUZKSzBvc1IwRkJUM1pJTEVsQlExZ3NUMEZCVHpoSExFZEJRVkZQTEdOQlFXTkhMRTFCUVUxRUxFZEJRVTh2U2l4TFFVbHNSR2hDTEVkQlFVVjNTeXhIUVVGSFF5eFZRVUZaTEZOQlFWZFZMRWRCUTNoQ0xFMUJRVXRpTEVkQlFWRmhMRWRCUTBaaUxFVkJRVkZoTEVkQlFWRklMRTFCUVU5NFNDeExRVUZOTkVnc1RVRkJUVEZITEZWQlFWVXlSeXhOUVVGTlF5eExRVUZOUXl4VlFVRlhMRWxCUTJwRUxHZENRVUZZU2l4SlFVRjVRa0VzUjBGSGVFTnVUQ3hGUVVGRmQwd3NUVUZCVHl4VlFVRmhUQ3hGUVVGVExIVkRRVUV2UW01TUxGRkJSazl6U3l4RlFVRlJXU3hMUVVGTFJpeE5RVUZQZUVnc1MwRkJUU3RJTEZsQlRYcERka3dzUlVGQlJYZExMRWRCUVVkRExGVkJRVlZuUWl4WlFVRmpia2tzUTBGRk4wSXNTVUZCU1Vrc1IwRkJhVUl4UkN4RlFVRkZkMHNzUjBGQlIwTXNWVUZCVlM5SExHZENRVVZvUTNSRUxFMUJRVkVzUlVGRFVrTXNZVUZCWVN4RlFVTmljVUlzVlVGQldTeEZRVU5hZGtJc1YwRkJZU3hGUVVOaVJ5eGxRVUZsTEVWQlEyWk5MRzFDUVVGdFFpeEZRVU51UWtRc1kwRkJZeXhGUVVOa1JTeHZRa0ZCYjBJc1JVRkRjRUpETEU5QlFWTXNSVUZEVkhsQ0xFOUJRVk1zUlVGRFZIaENMR1ZCUVdVc1JVRkRabk5DTEUxQlFWRXNSVUZEVWtRc1QwRkJVeXhGUVVOVVNpeE5RVUZSTEVWQlExSk1MRTlCUVZNc1JVRkRWRllzUzBGQlVTeExRVVZTTmtRc1ZVRkRRVFJITEdGQlEwbERMRk5CUlVsRExIVkNRVUY1UWl4RlFVTjZRa01zY1VKQlFYVkNMRVZCUTNaQ1F5eHpRa0ZCZDBJc1JVRkRlRUpETEhWQ1FVRjVRaXhGUVVONlFrTXNiMEpCUVhOQ0xFVkJRM1JDUXl4MVFrRkJlVUlzUlVGRGVrSkRMSGRDUVVFd1FpeEZRVU14UWtNc2MwSkJRWGRDTEVWQlEzaENReXh4UWtGQmRVSXNSVUZEZGtKRExITkNRVUYzUWl4RlFVTjRRa01zZFVKQlFYbENMRVZCUTNwQ1F5eHhRa0ZCZFVJc1JVRkRka0pETEhGQ1FVRjFRaXhGUVVOMlFrTXNjVUpCUVhWQ0xFVkJRM1pDUXl4eFFrRkJkVUlzUlVGRGRrSkRMSFZDUVVGNVFpeEZRVVY2UWtNc1lVRkJaU3hGUVVObVF5eGxRVUZwUWl4RlFVTnFRa01zWTBGQlowSXNSVUZEYUVKRExGRkJRVmtzUjBGSGFFSkRMRTFCUTBsRExFdEJRMEUzU1N4TFFVTkJPRWtzVFVGRFFVTXNUVUZEUVVNc1RVRkRRVU1zVFVGRFFXcE5MRTFCUTBGRExFMUJRMEZETEUxQlEwRkRMRTFCUTBGRExFMUJRMEZETEUxQlEwRTJUQ3hqUVVOQlF5eEZRVUZMTEVWQlEweERMRXRCUTBsRExHdENRVU5KUXl4TlFVRlRMRlZCUTFSRExFbEJRVThzVFVGRFVFTXNTVUZCVHl4TlFVTlFReXhQUVVGVkxGbEJSMnhDUXl4SFFVTkpUQ3hyUWtGRFNUTkZMRXRCUVZFc1RVRkRValZITEU5QlFWVXNUVUZEVmpaSExFbEJRVThzVVVGSFptZEdMRXRCUVZFc1JVRkRVa01zU1VGQlR5eEZRVVZRUXl4TFFVRlJMRVZCUTFKRExFbEJRVThzU1VGSFprTXNZVUZCWXl4MVEwRkRaRFZPTEU5QlFWRXNTMEZIYzBNc2IwSkJRWFpEVUN4SFFVRkZkMHNzUjBGQlIwTXNWVUZCVlVNc2MwSkJRM1JDTVVzc1JVRkJSWGRMTEVkQlFVZERMRlZCUVZWRExHOUNRVUZ6UWpGTExFVkJRVVUwUlN4UlFVRlBMRXRCUVZVMVJTeEZRVUZGZDBzc1IwRkJSME1zVlVGQlZTOUhMR2RDUVVjelJTeEpRVUZKYmtRc1IwRkJVMUFzUlVGQlJYZExMRWRCUVVkRExGVkJRVlZzU3l4UlFVTjRRalpPTEVsQlEwbHNUaXhoUVVOSlF5eFBRVUZSTEdOQlExSkRMRWRCUVVrc1dVRkRTa01zUjBGQlNTeFpRVU5LUXl4SFFVRkpMRmxCUTBwRExFZEJRVWtzV1VGRFNrTXNSMEZCU1N4WlFVTktReXhIUVVGSkxHRkJSVkpETEZWQlEwa3lUU3hMUVVGTkxFOUJRMDVETEU5QlFWRXNVMEZEVWtNc1ZVRkJWeXhoUVVWbU5VMHNUMEZEU1VNc1ZVRkJWeXhwUWtGRFdFTXNVVUZCVXl4bFFVTlVReXhSUVVGVExGVkJRMVJETEU5QlFWRXNWVUZGV2tNc1RVRkRTVU1zVDBGQlVTeGpRVU5TUlN4UFFVRlJMRk5CUTFKRUxFOUJRVkVzTWtKQlJWcEZMRTlCUTBsSUxFOUJRVkVzWlVGRFVrVXNUMEZCVVN4VlFVVmFSU3hOUVVOSlF5eExRVUZOTEdGQlJWWkZMRk5CUTBsRExFMUJRVThzVVVGRFVFTXNUMEZCVVN4VFFVTlNReXhMUVVGTkxFOUJRMDVETEU5QlFWRXNVMEZEVWtNc1NVRkJTeXhOUVVOTVF5eFBRVUZSTEZOQlExSkRMRTFCUVU4c1VVRkRVRU1zVFVGQlR5eFJRVU5RUXl4TFFVRk5MRTlCUTA1RExFdEJRVTBzVDBGRFRrTXNUMEZCVVN4VlFVZGFNME1zWVVGRFNVTXNUMEZCVVN4VFFVTlNReXhUUVVGUkxHRkJUWFJDZFVRc1QwRkJUM1ZMTEU5QlFWRjJTeXhQUVVGUGQwY2lMQ0ptYVd4bElqb2lZbTl2ZEhOMGNtRndNeTEzZVhOcGFIUnRiRFV1YldsdUxtcHpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpSVdaMWJtTjBhVzl1S0NRc0lIZDVjMmtwSUh0Y2JpQWdJQ0JjSW5WelpTQnpkSEpwWTNSY0lqdGNibHh1SUNBZ0lIWmhjaUIwY0d3Z1BTQjdYRzRnSUNBZ0lDQWdJQzhxSUVSdmJtNWhJRk4wWVhKMElDb3ZYRzRnSUNBZ0lDQWdJRndpWVd4cFoyNXRaVzUwWENJNklHWjFibU4wYVc5dUtHeHZZMkZzWlN3Z2IzQjBhVzl1Y3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmNJanhzYVQ1Y0lpQXJYRzRnSUNBZ0lDQWdJQ0FnSUNCY0lqeGthWFlnWTJ4aGMzTTlKMkZzYVdkdWJXVnVkQ2MrUEM5a2FYWStYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lGd2lQQzlzYVQ1Y0lqdGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnWENKbWIyNTBYQ0k2SUdaMWJtTjBhVzl1S0d4dlkyRnNaU3dnYjNCMGFXOXVjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCY0lqeHNhVDVjSWlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0JjSWp4a2FYWWdZMnhoYzNNOUoyWnZiblF0Y0dsamEyVnlKejQ4TDJScGRqNWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ1hDSThMMnhwUGx3aU8xeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0JjSW1admJuUXRjMmw2WlZ3aU9pQm1kVzVqZEdsdmJpaHNiMk5oYkdVc0lHOXdkR2x2Ym5NcElIdGNiaUFnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdYQ0k4YkdrK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ1hDSThaR2wySUdOc1lYTnpQU2RtYjI1MExYTnBlbVV0Y0dsamEyVnlKejQ4TDJScGRqNWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ1hDSThMMnhwUGx3aU8xeHVJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0JjSW14cGJtVXRhR1ZwWjJoMFhDSTZJR1oxYm1OMGFXOXVLR3h2WTJGc1pTd2diM0IwYVc5dWN5a2dlMXh1SUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJjSWp4c2FUNWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQmNJanhrYVhZZ1kyeGhjM005SjJ4cGJtVXRhR1ZwWjJoMElHSjBiaTFuY205MWNDYytYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0JjSWp4aWRYUjBiMjRnZEhsd1pUMG5ZblYwZEc5dUp5QmpiR0Z6Y3owblluUnVJR0owYmkxa1pXWmhkV3gwSUdKMGJpMXpiU0JrY205d1pHOTNiaTEwYjJkbmJHVW5YQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVpHRjBZUzEwYjJkbmJHVTlKMlJ5YjNCa2IzZHVKeUJrWVhSaExYZDVjMmxvZEcxc05TMWpiMjF0WVc1a0xYWmhiSFZsUFNjeEp6NWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENJOGFTQmpiR0Z6Y3owbloyeDVjR2hwWTI5dUlHZHNlWEJvYVdOdmJpMTBaWGgwTFdobGFXZG9kQ2MrUEM5cFBsd2lJQ3RjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSWp4emNHRnVJR05zWVhOelBTZGpZWEpsZENjK1BDOXpjR0Z1UGx3aUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ1hDSThMMkoxZEhSdmJqNWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEhWc0lHTnNZWE56UFNka2NtOXdaRzkzYmkxdFpXNTFKeUJ5YjJ4bFBTZHRaVzUxSno1Y0lpQXJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0k4YkdrK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENJOFlTQmtZWFJoTFhkNWMybG9kRzFzTlMxamIyMXRZVzVrTFhaaGJIVmxQU2N4SnlCMFlXSnBibVJsZUQwbkxURW5QbHdpSUNzZ2JHOWpZV3hsTG14cGJtVmZhR1ZwWjJoMExuTnBibWRzWlNBcklGd2lQQzloUGx3aUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJand2YkdrK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEd4cFBsd2lJQ3RjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBHRWdaR0YwWVMxM2VYTnBhSFJ0YkRVdFkyOXRiV0Z1WkMxMllXeDFaVDBuTVMweE5TY2dkR0ZpYVc1a1pYZzlKeTB4Sno0eExqRTFQQzloUGx3aUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJand2YkdrK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEd4cFBsd2lJQ3RjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBHRWdaR0YwWVMxM2VYTnBhSFJ0YkRVdFkyOXRiV0Z1WkMxMllXeDFaVDBuTVMwMUp5QjBZV0pwYm1SbGVEMG5MVEVuUGpFdU5Ud3ZZVDVjSWlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSThMMnhwUGx3aUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJanhzYVQ1Y0lpQXJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSWp4aElHUmhkR0V0ZDNsemFXaDBiV3cxTFdOdmJXMWhibVF0ZG1Gc2RXVTlKekluSUhSaFltbHVaR1Y0UFNjdE1TYytYQ0lnS3lCc2IyTmhiR1V1YkdsdVpWOW9aV2xuYUhRdVpHOTFZbXhsSUNzZ1hDSThMMkUrWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQQzlzYVQ1Y0lpQXJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQQzkxYkQ1Y0lpQXJYRzRnSUNBZ0lDQWdJQ0FnSUNCY0lqd3ZaR2wyUGx3aUlDdGNiaUFnSUNBZ0lDQWdJQ0JjSWp3dmJHaytYQ0k3WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lGd2lkR1Y0ZEMxamIyeHZjbHdpT2lCbWRXNWpkR2x2Ymloc2IyTmhiR1VzSUc5d2RHbHZibk1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGd2lQR3hwUGx3aUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUZ3aVBHbHVjSFYwSUdOc1lYTnpQU2QwWlhoMExXTnZiRzl5SnlCMGVYQmxQU2RqYjJ4dmNpYytYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lGd2lQQzlzYVQ1Y0lqdGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnWENKb2FXZG9iR2xuYUhRdFkyOXNiM0pjSWpvZ1puVnVZM1JwYjI0b2JHOWpZV3hsTENCdmNIUnBiMjV6S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQmNJanhzYVQ1Y0lpQXJYRzRnSUNBZ0lDQWdJQ0FnSUNCY0lqeHBibkIxZENCamJHRnpjejBuYUdsbmFHeHBaMmgwTFdOdmJHOXlKeUIwZVhCbFBTZGpiMnh2Y2ljK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUZ3aVBDOXNhVDVjSWp0Y2JpQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdYQ0ppWVdOclozSnZkVzVrTFdOdmJHOXlYQ0k2SUdaMWJtTjBhVzl1S0d4dlkyRnNaU3dnYjNCMGFXOXVjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1hDSThiR2srWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnWENJOGFXNXdkWFFnWTJ4aGMzTTlKMkpoWTJ0bmNtOTFibVF0WTI5c2IzSW5JSFI1Y0dVOUoyTnZiRzl5Sno1Y0lpQXJYRzRnSUNBZ0lDQWdJQ0FnWENJOEwyeHBQbHdpTzF4dUlDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQmNJbU5zWldGeVhDSTZJR1oxYm1OMGFXOXVLR3h2WTJGc1pTd2diM0IwYVc5dWN5a2dlMXh1SUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJjSWp4c2FUNWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQmNJanhoSUdOc1lYTnpQU2RqYkdWaGNpQmlkRzRnWW5SdUxYTnRJR0owYmkxa1pXWmhkV3gwSnlCa1lYUmhMWGQ1YzJsb2RHMXNOUzFqYjIxdFlXNWtQU2RqYkdWaGNpY2dkR2wwYkdVOUowTnNaV0Z5SnlCMFlXSnBibVJsZUQwbkxURW5QbHdpSUN0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnWENJOGMzQmhiaUJqYkdGemN6MG5aMng1Y0docFkyOXVJR2RzZVhCb2FXTnZiaTFtYVd4bEp6NDhMM053WVc0K1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ1hDSThMMkUrWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJRndpUEM5c2FUNWNJanRjYmlBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ0x5b2dSRzl1Ym1FZ1JXNWtJQ292WEc0Z0lDQWdJQ0FnSUZ3aVptOXVkQzF6ZEhsc1pYTmNJam9nWm5WdVkzUnBiMjRvYkc5allXeGxMQ0J2Y0hScGIyNXpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYzJsNlpTQTlJQ2h2Y0hScGIyNXpJQ1ltSUc5d2RHbHZibk11YzJsNlpTa2dQeUJjSWlCaWRHNHRYQ0lnS3lCdmNIUnBiMjV6TG5OcGVtVWdPaUJjSWx3aU8xeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRndpUEd4cElHTnNZWE56UFNka2NtOXdaRzkzYmljK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEdFZ1kyeGhjM005SjJKMGJpQmtjbTl3Wkc5M2JpMTBiMmRuYkdVZ1hDSWdLeUJ6YVhwbElDc2dYQ0lnWW5SdUxXUmxabUYxYkhRbklHUmhkR0V0ZEc5bloyeGxQU2RrY205d1pHOTNiaWNnYUhKbFpqMG5JeWMrWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQR2tnWTJ4aGMzTTlKMmRzZVhCb2FXTnZiaUJuYkhsd2FHbGpiMjR0Wm05dWRDYytQQzlwUGladVluTndPenh6Y0dGdUlHTnNZWE56UFNkamRYSnlaVzUwTFdadmJuUW5QbHdpSUNzZ2JHOWpZV3hsTG1admJuUmZjM1I1YkdWekxtNXZjbTFoYkNBcklGd2lQQzl6Y0dGdVBpWnVZbk53T3p4aUlHTnNZWE56UFNkallYSmxkQ2MrUEM5aVBsd2lJQ3RjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSWp3dllUNWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENJOGRXd2dZMnhoYzNNOUoyUnliM0JrYjNkdUxXMWxiblVuSUhKdmJHVTlKMjFsYm5VblBsd2lJQ3RjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSWp4c2FUNDhZU0JrWVhSaExYZDVjMmxvZEcxc05TMWpiMjF0WVc1a1BTZG1iM0p0WVhSQ2JHOWpheWNnWkdGMFlTMTNlWE5wYUhSdGJEVXRZMjl0YldGdVpDMTJZV3gxWlQwblpHbDJKeUIwWVdKcGJtUmxlRDBuTFRFblBsd2lJQ3NnYkc5allXeGxMbVp2Ym5SZmMzUjViR1Z6TG01dmNtMWhiQ0FySUZ3aVBDOWhQand2YkdrK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEd4cFBqeGhJR1JoZEdFdGQzbHphV2gwYld3MUxXTnZiVzFoYm1ROUoyWnZjbTFoZEVKc2IyTnJKeUJrWVhSaExYZDVjMmxvZEcxc05TMWpiMjF0WVc1a0xYWmhiSFZsUFNkb01TY2dkR0ZpYVc1a1pYZzlKeTB4Sno1Y0lpQXJJR3h2WTJGc1pTNW1iMjUwWDNOMGVXeGxjeTVvTVNBcklGd2lQQzloUGp3dmJHaytYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBHeHBQanhoSUdSaGRHRXRkM2x6YVdoMGJXdzFMV052YlcxaGJtUTlKMlp2Y20xaGRFSnNiMk5ySnlCa1lYUmhMWGQ1YzJsb2RHMXNOUzFqYjIxdFlXNWtMWFpoYkhWbFBTZG9NaWNnZEdGaWFXNWtaWGc5SnkweEp6NWNJaUFySUd4dlkyRnNaUzVtYjI1MFgzTjBlV3hsY3k1b01pQXJJRndpUEM5aFBqd3ZiR2srWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQR3hwUGp4aElHUmhkR0V0ZDNsemFXaDBiV3cxTFdOdmJXMWhibVE5SjJadmNtMWhkRUpzYjJOckp5QmtZWFJoTFhkNWMybG9kRzFzTlMxamIyMXRZVzVrTFhaaGJIVmxQU2RvTXljZ2RHRmlhVzVrWlhnOUp5MHhKejVjSWlBcklHeHZZMkZzWlM1bWIyNTBYM04wZVd4bGN5NW9NeUFySUZ3aVBDOWhQand2YkdrK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEd4cFBqeGhJR1JoZEdFdGQzbHphV2gwYld3MUxXTnZiVzFoYm1ROUoyWnZjbTFoZEVKc2IyTnJKeUJrWVhSaExYZDVjMmxvZEcxc05TMWpiMjF0WVc1a0xYWmhiSFZsUFNkb05DYytYQ0lnS3lCc2IyTmhiR1V1Wm05dWRGOXpkSGxzWlhNdWFEUWdLeUJjSWp3dllUNDhMMnhwUGx3aUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJanhzYVQ0OFlTQmtZWFJoTFhkNWMybG9kRzFzTlMxamIyMXRZVzVrUFNkbWIzSnRZWFJDYkc5amF5Y2daR0YwWVMxM2VYTnBhSFJ0YkRVdFkyOXRiV0Z1WkMxMllXeDFaVDBuYURVblBsd2lJQ3NnYkc5allXeGxMbVp2Ym5SZmMzUjViR1Z6TG1nMUlDc2dYQ0k4TDJFK1BDOXNhVDVjSWlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSThiR2srUEdFZ1pHRjBZUzEzZVhOcGFIUnRiRFV0WTI5dGJXRnVaRDBuWm05eWJXRjBRbXh2WTJzbklHUmhkR0V0ZDNsemFXaDBiV3cxTFdOdmJXMWhibVF0ZG1Gc2RXVTlKMmcySno1Y0lpQXJJR3h2WTJGc1pTNW1iMjUwWDNOMGVXeGxjeTVvTmlBcklGd2lQQzloUGp3dmJHaytYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBDOTFiRDVjSWlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSThMMnhwUGx3aU8xeHVJQ0FnSUNBZ0lDQjlMRnh1WEc0Z0lDQWdJQ0FnSUM4cUlFUnZibTVoSUZOMFlYSjBJQzBnVlhObElHWnZiblF0YzNSNWJHVWdZMjl0Y0c5dVpXNTBMaUFxTDF4dUlDQWdJQ0FnSUNCY0ltVnRjR2hoYzJselhDSTZJR1oxYm1OMGFXOXVLR3h2WTJGc1pTd2diM0IwYVc5dWN5a2dlMXh1SUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJjSWp4c2FUNWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQmNJanhrYVhZZ1kyeGhjM005SjJWdGNHaGhjMmx6Sno0OFpHbDJQbHdpSUN0Y2JpQWdJQ0FnSUNBZ0lDQmNJand2YkdrK1hDSTdYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUM4cUlFUnZibTVoSUVWdVpDQXFMMXh1WEc0Z0lDQWdJQ0FnSUZ3aWJHbHpkSE5jSWpvZ1puVnVZM1JwYjI0b2JHOWpZV3hsTENCdmNIUnBiMjV6S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2MybDZaU0E5SUNodmNIUnBiMjV6SUNZbUlHOXdkR2x2Ym5NdWMybDZaU2tnUHlBbklHSjBiaTBuSzI5d2RHbHZibk11YzJsNlpTQTZJQ2NuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGd2lQR3hwUGx3aUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJanhrYVhZZ1kyeGhjM005SjJKMGJpMW5jbTkxY0NjK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEdFZ1kyeGhjM005SjJKMGJpQmNJaUFySUhOcGVtVWdLeUJjSWlCaWRHNHRaR1ZtWVhWc2RDY2daR0YwWVMxM2VYTnBhSFJ0YkRVdFkyOXRiV0Z1WkQwbmFXNXpaWEowVlc1dmNtUmxjbVZrVEdsemRDY2dkR2wwYkdVOUoxd2lJQ3NnYkc5allXeGxMbXhwYzNSekxuVnViM0prWlhKbFpDQXJJRndpSnlCMFlXSnBibVJsZUQwbkxURW5QanhwSUdOc1lYTnpQU2RuYkhsd2FHbGpiMjRnWjJ4NWNHaHBZMjl1TFd4cGMzUW5Qand2YVQ0OEwyRStYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBHRWdZMnhoYzNNOUoySjBiaUJjSWlBcklITnBlbVVnS3lCY0lpQmlkRzR0WkdWbVlYVnNkQ2NnWkdGMFlTMTNlWE5wYUhSdGJEVXRZMjl0YldGdVpEMG5hVzV6WlhKMFQzSmtaWEpsWkV4cGMzUW5JSFJwZEd4bFBTZGNJaUFySUd4dlkyRnNaUzVzYVhOMGN5NXZjbVJsY21Wa0lDc2dYQ0luSUhSaFltbHVaR1Y0UFNjdE1TYytQR2tnWTJ4aGMzTTlKMmRzZVhCb2FXTnZiaUJuYkhsd2FHbGpiMjR0ZEdndGJHbHpkQ2MrUEM5cFBqd3ZZVDVjSWlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSThZU0JqYkdGemN6MG5ZblJ1SUZ3aUlDc2djMmw2WlNBcklGd2lJR0owYmkxa1pXWmhkV3gwSnlCa1lYUmhMWGQ1YzJsb2RHMXNOUzFqYjIxdFlXNWtQU2RQZFhSa1pXNTBKeUIwYVhSc1pUMG5YQ0lnS3lCc2IyTmhiR1V1YkdsemRITXViM1YwWkdWdWRDQXJJRndpSnlCMFlXSnBibVJsZUQwbkxURW5QanhwSUdOc1lYTnpQU2RuYkhsd2FHbGpiMjRnWjJ4NWNHaHBZMjl1TFdsdVpHVnVkQzF5YVdkb2RDYytQQzlwUGp3dllUNWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENJOFlTQmpiR0Z6Y3owblluUnVJQzFjSWlBcklITnBlbVVnS3lCY0lpQmlkRzR0WkdWbVlYVnNkQ2NnWkdGMFlTMTNlWE5wYUhSdGJEVXRZMjl0YldGdVpEMG5TVzVrWlc1MEp5QjBhWFJzWlQwblhDSWdLeUJzYjJOaGJHVXViR2x6ZEhNdWFXNWtaVzUwSUNzZ1hDSW5JSFJoWW1sdVpHVjRQU2N0TVNjK1BHa2dZMnhoYzNNOUoyZHNlWEJvYVdOdmJpQm5iSGx3YUdsamIyNHRhVzVrWlc1MExXeGxablFuUGp3dmFUNDhMMkUrWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQQzlrYVhZK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEM5c2FUNWNJanRjYmlBZ0lDQWdJQ0FnZlN4Y2JseHVJQ0FnSUNBZ0lDQmNJbXhwYm10Y0lqb2dablZ1WTNScGIyNG9iRzlqWVd4bExDQnZjSFJwYjI1ektTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjMmw2WlNBOUlDaHZjSFJwYjI1eklDWW1JRzl3ZEdsdmJuTXVjMmw2WlNrZ1B5QW5JR0owYmkwbksyOXdkR2x2Ym5NdWMybDZaU0E2SUNjbk8xeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRndpUEd4cFBsd2lJQ3RjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSWx3aUsxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQR1JwZGlCamJHRnpjejBuWW05dmRITjBjbUZ3TFhkNWMybG9kRzFzTlMxcGJuTmxjblF0YkdsdWF5MXRiMlJoYkNCdGIyUmhiQ0JtWVdSbEp6NWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENJOFpHbDJJR05zWVhOelBTZHRiMlJoYkMxa2FXRnNiMmNuUGx3aUsxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQR1JwZGlCamJHRnpjejBuYlc5a1lXd3RZMjl1ZEdWdWRDYytYQ0lyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENJOFpHbDJJR05zWVhOelBTZHRiMlJoYkMxb1pXRmtaWEluUGx3aUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJanhoSUdOc1lYTnpQU2RqYkc5elpTY2daR0YwWVMxa2FYTnRhWE56UFNkdGIyUmhiQ2MrSm5ScGJXVnpPend2WVQ1Y0lpQXJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0k4YURRK1hDSWdLeUJzYjJOaGJHVXViR2x1YXk1cGJuTmxjblFnS3lCY0lqd3ZhRFErWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQQzlrYVhZK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEdScGRpQmpiR0Z6Y3owbmJXOWtZV3d0WW05a2VTYytYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBHbHVjSFYwSUhaaGJIVmxQU2RvZEhSd09pOHZKeUJqYkdGemN6MG5ZbTl2ZEhOMGNtRndMWGQ1YzJsb2RHMXNOUzFwYm5ObGNuUXRiR2x1YXkxMWNtd2dabTl5YlMxamIyNTBjbTlzSno1Y0lpQXJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0k4YkdGaVpXd2dZMnhoYzNNOUoyTm9aV05yWW05NEp6NGdQR2x1Y0hWMElIUjVjR1U5SjJOb1pXTnJZbTk0SnlCamJHRnpjejBuWW05dmRITjBjbUZ3TFhkNWMybG9kRzFzTlMxcGJuTmxjblF0YkdsdWF5MTBZWEpuWlhRbklHTm9aV05yWldRK1hDSWdLeUJzYjJOaGJHVXViR2x1YXk1MFlYSm5aWFFnS3lCY0lqd3ZiR0ZpWld3K1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEM5a2FYWStYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBHUnBkaUJqYkdGemN6MG5iVzlrWVd3dFptOXZkR1Z5Sno1Y0lpQXJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0k4WW5WMGRHOXVJR05zWVhOelBTZGlkRzRnWW5SdUxXUmxabUYxYkhRbklHUmhkR0V0WkdsemJXbHpjejBuYlc5a1lXd25QbHdpSUNzZ2JHOWpZV3hsTG14cGJtc3VZMkZ1WTJWc0lDc2dYQ0k4TDJKMWRIUnZiajVjSWlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSThZblYwZEc5dUlHaHlaV1k5SnlNbklHTnNZWE56UFNkaWRHNGdZblJ1TFhCeWFXMWhjbmtuSUdSaGRHRXRaR2x6YldsemN6MG5iVzlrWVd3blBsd2lJQ3NnYkc5allXeGxMbXhwYm1zdWFXNXpaWEowSUNzZ1hDSThMMkoxZEhSdmJqNWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENJOEwyUnBkajVjSWlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSThMMlJwZGo1Y0lpQXJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0k4TDJScGRqNWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENJOEwyUnBkajVjSWlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSThZU0JqYkdGemN6MG5ZblJ1SUZ3aUlDc2djMmw2WlNBcklGd2lJR0owYmkxa1pXWmhkV3gwSnlCa1lYUmhMWGQ1YzJsb2RHMXNOUzFqYjIxdFlXNWtQU2RqY21WaGRHVk1hVzVySnlCMGFYUnNaVDBuWENJZ0t5QnNiMk5oYkdVdWJHbHVheTVwYm5ObGNuUWdLeUJjSWljZ2RHRmlhVzVrWlhnOUp5MHhKejQ4YVNCamJHRnpjejBuWjJ4NWNHaHBZMjl1SUdkc2VYQm9hV052YmkxemFHRnlaU2MrUEM5cFBqd3ZZVDVjSWlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSThMMnhwUGx3aU8xeHVJQ0FnSUNBZ0lDQjlMRnh1WEc0Z0lDQWdJQ0FnSUZ3aWFXMWhaMlZjSWpvZ1puVnVZM1JwYjI0b2JHOWpZV3hsTENCdmNIUnBiMjV6S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2MybDZaU0E5SUNodmNIUnBiMjV6SUNZbUlHOXdkR2x2Ym5NdWMybDZaU2tnUHlBbklHSjBiaTBuSzI5d2RHbHZibk11YzJsNlpTQTZJQ2NuTzF4dUlDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlGd2lQR3hwUGx3aUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJanhrYVhZZ1kyeGhjM005SjJKdmIzUnpkSEpoY0MxM2VYTnBhSFJ0YkRVdGFXNXpaWEowTFdsdFlXZGxMVzF2WkdGc0lHMXZaR0ZzSUdaaFpHVW5QbHdpSUN0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0lqeGthWFlnWTJ4aGMzTTlKMjF2WkdGc0xXUnBZV3h2WnljK1hDSXJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0k4WkdsMklHTnNZWE56UFNkdGIyUmhiQzFqYjI1MFpXNTBKejVjSWl0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0lqeGthWFlnWTJ4aGMzTTlKMjF2WkdGc0xXaGxZV1JsY2ljK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEdFZ1kyeGhjM005SjJOc2IzTmxKeUJrWVhSaExXUnBjMjFwYzNNOUoyMXZaR0ZzSno0bWRHbHRaWE03UEM5aFBsd2lJQ3RjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSWp4b05ENWNJaUFySUd4dlkyRnNaUzVwYldGblpTNXBibk5sY25RZ0t5QmNJand2YURRK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEM5a2FYWStYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBHUnBkaUJqYkdGemN6MG5iVzlrWVd3dFltOWtlU2MrWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQR2x1Y0hWMElIWmhiSFZsUFNkb2RIUndPaTh2SnlCamJHRnpjejBuWW05dmRITjBjbUZ3TFhkNWMybG9kRzFzTlMxcGJuTmxjblF0YVcxaFoyVXRkWEpzSUdadmNtMHRZMjl1ZEhKdmJDYytYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBDOWthWFkrWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQR1JwZGlCamJHRnpjejBuYlc5a1lXd3RabTl2ZEdWeUp6NWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENJOFluVjBkRzl1SUdOc1lYTnpQU2RpZEc0Z1luUnVMV1JsWm1GMWJIUW5JR1JoZEdFdFpHbHpiV2x6Y3owbmJXOWtZV3duUGx3aUlDc2diRzlqWVd4bExtbHRZV2RsTG1OaGJtTmxiQ0FySUZ3aVBDOWlkWFIwYjI0K1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEdKMWRIUnZiaUJqYkdGemN6MG5ZblJ1SUdKMGJpMXdjbWx0WVhKNUp5QmtZWFJoTFdScGMyMXBjM005SjIxdlpHRnNKejVjSWlBcklHeHZZMkZzWlM1cGJXRm5aUzVwYm5ObGNuUWdLeUJjSWp3dlluVjBkRzl1UGx3aUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJand2WkdsMlBsd2lJQ3RjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSWp3dlpHbDJQbHdpSUN0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0lqd3ZaR2wyUGx3aUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJand2WkdsMlBsd2lJQ3RjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSWp4aElHTnNZWE56UFNkaWRHNGdYQ0lnS3lCemFYcGxJQ3NnWENJZ1luUnVMV1JsWm1GMWJIUW5JR1JoZEdFdGQzbHphV2gwYld3MUxXTnZiVzFoYm1ROUoybHVjMlZ5ZEVsdFlXZGxKeUIwYVhSc1pUMG5YQ0lnS3lCc2IyTmhiR1V1YVcxaFoyVXVhVzV6WlhKMElDc2dYQ0luSUhSaFltbHVaR1Y0UFNjdE1TYytQR2tnWTJ4aGMzTTlKMmRzZVhCb2FXTnZiaUJuYkhsd2FHbGpiMjR0Y0dsamRIVnlaU2MrUEM5cFBqd3ZZVDVjSWlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSThMMnhwUGx3aU8xeHVJQ0FnSUNBZ0lDQjlMRnh1WEc0Z0lDQWdJQ0FnSUZ3aWFIUnRiRndpT2lCbWRXNWpkR2x2Ymloc2IyTmhiR1VzSUc5d2RHbHZibk1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCemFYcGxJRDBnS0c5d2RHbHZibk1nSmlZZ2IzQjBhVzl1Y3k1emFYcGxLU0EvSUNjZ1luUnVMU2NyYjNCMGFXOXVjeTV6YVhwbElEb2dKeWM3WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1hDSThiR2srWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQR1JwZGlCamJHRnpjejBuWW5SdUxXZHliM1Z3Sno1Y0lpQXJYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0k4WVNCamJHRnpjejBuWW5SdUlGd2lJQ3NnYzJsNlpTQXJJRndpSUdKMGJpMWtaV1poZFd4MEp5QmtZWFJoTFhkNWMybG9kRzFzTlMxaFkzUnBiMjQ5SjJOb1lXNW5aVjkyYVdWM0p5QjBhWFJzWlQwblhDSWdLeUJzYjJOaGJHVXVhSFJ0YkM1bFpHbDBJQ3NnWENJbklIUmhZbWx1WkdWNFBTY3RNU2MrUEdrZ1kyeGhjM005SjJkc2VYQm9hV052YmlCbmJIbHdhR2xqYjI0dGNHVnVZMmxzSno0OEwyaytQQzloUGx3aUlDdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJand2WkdsMlBsd2lJQ3RjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSWp3dmJHaytYQ0k3WEc0Z0lDQWdJQ0FnSUgwc1hHNWNiaUFnSUNBZ0lDQWdYQ0pqYjJ4dmNsd2lPaUJtZFc1amRHbHZiaWhzYjJOaGJHVXNJRzl3ZEdsdmJuTXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ6YVhwbElEMGdLRzl3ZEdsdmJuTWdKaVlnYjNCMGFXOXVjeTV6YVhwbEtTQS9JQ2NnWW5SdUxTY3JiM0IwYVc5dWN5NXphWHBsSURvZ0p5YzdYRzRnSUNBZ0lDQWdJQ0FnSUNCeVpYUjFjbTRnWENJOGJHa2dZMnhoYzNNOUoyUnliM0JrYjNkdUp6NWNJaUFyWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENJOFlTQmpiR0Z6Y3owblluUnVJR1J5YjNCa2IzZHVMWFJ2WjJkc1pTQmNJaUFySUhOcGVtVWdLeUJjSWlCaWRHNHRaR1ZtWVhWc2RDY2daR0YwWVMxMGIyZG5iR1U5SjJSeWIzQmtiM2R1SnlCb2NtVm1QU2NqSnlCMFlXSnBibVJsZUQwbkxURW5QbHdpSUN0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0lqeHpjR0Z1SUdOc1lYTnpQU2RqZFhKeVpXNTBMV052Ykc5eUp6NWNJaUFySUd4dlkyRnNaUzVqYjJ4dmRYSnpMbUpzWVdOcklDc2dYQ0k4TDNOd1lXNCtKbTVpYzNBN1BHSWdZMnhoYzNNOUoyTmhjbVYwSno0OEwySStYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBDOWhQbHdpSUN0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0lqeDFiQ0JqYkdGemN6MG5aSEp2Y0dSdmQyNHRiV1Z1ZFNjK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEd4cFBqeGthWFlnWTJ4aGMzTTlKM2Q1YzJsb2RHMXNOUzFqYjJ4dmNuTW5JR1JoZEdFdGQzbHphV2gwYld3MUxXTnZiVzFoYm1RdGRtRnNkV1U5SjJKc1lXTnJKejQ4TDJScGRqNDhZU0JqYkdGemN6MG5kM2x6YVdoMGJXdzFMV052Ykc5eWN5MTBhWFJzWlNjZ1pHRjBZUzEzZVhOcGFIUnRiRFV0WTI5dGJXRnVaRDBuWm05eVpVTnZiRzl5SnlCa1lYUmhMWGQ1YzJsb2RHMXNOUzFqYjIxdFlXNWtMWFpoYkhWbFBTZGliR0ZqYXljK1hDSWdLeUJzYjJOaGJHVXVZMjlzYjNWeWN5NWliR0ZqYXlBcklGd2lQQzloUGp3dmJHaytYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBHeHBQanhrYVhZZ1kyeGhjM005SjNkNWMybG9kRzFzTlMxamIyeHZjbk1uSUdSaGRHRXRkM2x6YVdoMGJXdzFMV052YlcxaGJtUXRkbUZzZFdVOUozTnBiSFpsY2ljK1BDOWthWFkrUEdFZ1kyeGhjM005SjNkNWMybG9kRzFzTlMxamIyeHZjbk10ZEdsMGJHVW5JR1JoZEdFdGQzbHphV2gwYld3MUxXTnZiVzFoYm1ROUoyWnZjbVZEYjJ4dmNpY2daR0YwWVMxM2VYTnBhSFJ0YkRVdFkyOXRiV0Z1WkMxMllXeDFaVDBuYzJsc2RtVnlKejVjSWlBcklHeHZZMkZzWlM1amIyeHZkWEp6TG5OcGJIWmxjaUFySUZ3aVBDOWhQand2YkdrK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEd4cFBqeGthWFlnWTJ4aGMzTTlKM2Q1YzJsb2RHMXNOUzFqYjJ4dmNuTW5JR1JoZEdFdGQzbHphV2gwYld3MUxXTnZiVzFoYm1RdGRtRnNkV1U5SjJkeVlYa25Qand2WkdsMlBqeGhJR05zWVhOelBTZDNlWE5wYUhSdGJEVXRZMjlzYjNKekxYUnBkR3hsSnlCa1lYUmhMWGQ1YzJsb2RHMXNOUzFqYjIxdFlXNWtQU2RtYjNKbFEyOXNiM0luSUdSaGRHRXRkM2x6YVdoMGJXdzFMV052YlcxaGJtUXRkbUZzZFdVOUoyZHlZWGtuUGx3aUlDc2diRzlqWVd4bExtTnZiRzkxY25NdVozSmhlU0FySUZ3aVBDOWhQand2YkdrK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEd4cFBqeGthWFlnWTJ4aGMzTTlKM2Q1YzJsb2RHMXNOUzFqYjJ4dmNuTW5JR1JoZEdFdGQzbHphV2gwYld3MUxXTnZiVzFoYm1RdGRtRnNkV1U5SjIxaGNtOXZiaWMrUEM5a2FYWStQR0VnWTJ4aGMzTTlKM2Q1YzJsb2RHMXNOUzFqYjJ4dmNuTXRkR2wwYkdVbklHUmhkR0V0ZDNsemFXaDBiV3cxTFdOdmJXMWhibVE5SjJadmNtVkRiMnh2Y2ljZ1pHRjBZUzEzZVhOcGFIUnRiRFV0WTI5dGJXRnVaQzEyWVd4MVpUMG5iV0Z5YjI5dUp6NWNJaUFySUd4dlkyRnNaUzVqYjJ4dmRYSnpMbTFoY205dmJpQXJJRndpUEM5aFBqd3ZiR2srWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQR3hwUGp4a2FYWWdZMnhoYzNNOUozZDVjMmxvZEcxc05TMWpiMnh2Y25NbklHUmhkR0V0ZDNsemFXaDBiV3cxTFdOdmJXMWhibVF0ZG1Gc2RXVTlKM0psWkNjK1BDOWthWFkrUEdFZ1kyeGhjM005SjNkNWMybG9kRzFzTlMxamIyeHZjbk10ZEdsMGJHVW5JR1JoZEdFdGQzbHphV2gwYld3MUxXTnZiVzFoYm1ROUoyWnZjbVZEYjJ4dmNpY2daR0YwWVMxM2VYTnBhSFJ0YkRVdFkyOXRiV0Z1WkMxMllXeDFaVDBuY21Wa0p6NWNJaUFySUd4dlkyRnNaUzVqYjJ4dmRYSnpMbkpsWkNBcklGd2lQQzloUGp3dmJHaytYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBHeHBQanhrYVhZZ1kyeGhjM005SjNkNWMybG9kRzFzTlMxamIyeHZjbk1uSUdSaGRHRXRkM2x6YVdoMGJXdzFMV052YlcxaGJtUXRkbUZzZFdVOUozQjFjbkJzWlNjK1BDOWthWFkrUEdFZ1kyeGhjM005SjNkNWMybG9kRzFzTlMxamIyeHZjbk10ZEdsMGJHVW5JR1JoZEdFdGQzbHphV2gwYld3MUxXTnZiVzFoYm1ROUoyWnZjbVZEYjJ4dmNpY2daR0YwWVMxM2VYTnBhSFJ0YkRVdFkyOXRiV0Z1WkMxMllXeDFaVDBuY0hWeWNHeGxKejVjSWlBcklHeHZZMkZzWlM1amIyeHZkWEp6TG5CMWNuQnNaU0FySUZ3aVBDOWhQand2YkdrK1hDSWdLMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpUEd4cFBqeGthWFlnWTJ4aGMzTTlKM2Q1YzJsb2RHMXNOUzFqYjJ4dmNuTW5JR1JoZEdFdGQzbHphV2gwYld3MUxXTnZiVzFoYm1RdGRtRnNkV1U5SjJkeVpXVnVKejQ4TDJScGRqNDhZU0JqYkdGemN6MG5kM2x6YVdoMGJXdzFMV052Ykc5eWN5MTBhWFJzWlNjZ1pHRjBZUzEzZVhOcGFIUnRiRFV0WTI5dGJXRnVaRDBuWm05eVpVTnZiRzl5SnlCa1lYUmhMWGQ1YzJsb2RHMXNOUzFqYjIxdFlXNWtMWFpoYkhWbFBTZG5jbVZsYmljK1hDSWdLeUJzYjJOaGJHVXVZMjlzYjNWeWN5NW5jbVZsYmlBcklGd2lQQzloUGp3dmJHaytYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBHeHBQanhrYVhZZ1kyeGhjM005SjNkNWMybG9kRzFzTlMxamIyeHZjbk1uSUdSaGRHRXRkM2x6YVdoMGJXdzFMV052YlcxaGJtUXRkbUZzZFdVOUoyOXNhWFpsSno0OEwyUnBkajQ4WVNCamJHRnpjejBuZDNsemFXaDBiV3cxTFdOdmJHOXljeTEwYVhSc1pTY2daR0YwWVMxM2VYTnBhSFJ0YkRVdFkyOXRiV0Z1WkQwblptOXlaVU52Ykc5eUp5QmtZWFJoTFhkNWMybG9kRzFzTlMxamIyMXRZVzVrTFhaaGJIVmxQU2R2YkdsMlpTYytYQ0lnS3lCc2IyTmhiR1V1WTI5c2IzVnljeTV2YkdsMlpTQXJJRndpUEM5aFBqd3ZiR2srWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQR3hwUGp4a2FYWWdZMnhoYzNNOUozZDVjMmxvZEcxc05TMWpiMnh2Y25NbklHUmhkR0V0ZDNsemFXaDBiV3cxTFdOdmJXMWhibVF0ZG1Gc2RXVTlKMjVoZG5rblBqd3ZaR2wyUGp4aElHTnNZWE56UFNkM2VYTnBhSFJ0YkRVdFkyOXNiM0p6TFhScGRHeGxKeUJrWVhSaExYZDVjMmxvZEcxc05TMWpiMjF0WVc1a1BTZG1iM0psUTI5c2IzSW5JR1JoZEdFdGQzbHphV2gwYld3MUxXTnZiVzFoYm1RdGRtRnNkV1U5SjI1aGRua25QbHdpSUNzZ2JHOWpZV3hsTG1OdmJHOTFjbk11Ym1GMmVTQXJJRndpUEM5aFBqd3ZiR2srWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQR3hwUGp4a2FYWWdZMnhoYzNNOUozZDVjMmxvZEcxc05TMWpiMnh2Y25NbklHUmhkR0V0ZDNsemFXaDBiV3cxTFdOdmJXMWhibVF0ZG1Gc2RXVTlKMkpzZFdVblBqd3ZaR2wyUGp4aElHTnNZWE56UFNkM2VYTnBhSFJ0YkRVdFkyOXNiM0p6TFhScGRHeGxKeUJrWVhSaExYZDVjMmxvZEcxc05TMWpiMjF0WVc1a1BTZG1iM0psUTI5c2IzSW5JR1JoZEdFdGQzbHphV2gwYld3MUxXTnZiVzFoYm1RdGRtRnNkV1U5SjJKc2RXVW5QbHdpSUNzZ2JHOWpZV3hsTG1OdmJHOTFjbk11WW14MVpTQXJJRndpUEM5aFBqd3ZiR2srWENJZ0sxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lQR3hwUGp4a2FYWWdZMnhoYzNNOUozZDVjMmxvZEcxc05TMWpiMnh2Y25NbklHUmhkR0V0ZDNsemFXaDBiV3cxTFdOdmJXMWhibVF0ZG1Gc2RXVTlKMjl5WVc1blpTYytQQzlrYVhZK1BHRWdZMnhoYzNNOUozZDVjMmxvZEcxc05TMWpiMnh2Y25NdGRHbDBiR1VuSUdSaGRHRXRkM2x6YVdoMGJXdzFMV052YlcxaGJtUTlKMlp2Y21WRGIyeHZjaWNnWkdGMFlTMTNlWE5wYUhSdGJEVXRZMjl0YldGdVpDMTJZV3gxWlQwbmIzSmhibWRsSno1Y0lpQXJJR3h2WTJGc1pTNWpiMnh2ZFhKekxtOXlZVzVuWlNBcklGd2lQQzloUGp3dmJHaytYQ0lnSzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVBDOTFiRDVjSWlBclhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSThMMnhwUGx3aU8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lIWmhjaUIwWlcxd2JHRjBaWE1nUFNCbWRXNWpkR2x2YmloclpYa3NJR3h2WTJGc1pTd2diM0IwYVc5dWN5a2dlMXh1SUNBZ0lDQWdJQ0J5WlhSMWNtNGdkSEJzVzJ0bGVWMG9iRzlqWVd4bExDQnZjSFJwYjI1ektUdGNiaUFnSUNCOU8xeHVYRzVjYmlBZ0lDQjJZWElnVjNsemFXaDBiV3cxSUQwZ1puVnVZM1JwYjI0b1pXd3NJRzl3ZEdsdmJuTXBJSHRjYmlBZ0lDQWdJQ0FnZEdocGN5NWxiQ0E5SUdWc08xeHVJQ0FnSUNBZ0lDQjJZWElnZEc5dmJHSmhjazl3ZEhNZ1BTQnZjSFJwYjI1eklIeDhJR1JsWm1GMWJIUlBjSFJwYjI1ek8xeHVJQ0FnSUNBZ0lDQm1iM0lvZG1GeUlIUWdhVzRnZEc5dmJHSmhjazl3ZEhNdVkzVnpkRzl0VkdWdGNHeGhkR1Z6S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwY0d4YmRGMGdQU0IwYjI5c1ltRnlUM0IwY3k1amRYTjBiMjFVWlcxd2JHRjBaWE5iZEYwN1hHNGdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdkR2hwY3k1MGIyOXNZbUZ5SUQwZ2RHaHBjeTVqY21WaGRHVlViMjlzWW1GeUtHVnNMQ0IwYjI5c1ltRnlUM0IwY3lrN1hHNGdJQ0FnSUNBZ0lIUm9hWE11WldScGRHOXlJRDBnSUhSb2FYTXVZM0psWVhSbFJXUnBkRzl5S0c5d2RHbHZibk1wTzF4dVhHNGdJQ0FnSUNBZ0lIZHBibVJ2ZHk1bFpHbDBiM0lnUFNCMGFHbHpMbVZrYVhSdmNqdGNibHh1SUNBZ0lDQWdJQ0FrS0hkcGJtUnZkeWt1ZEhKcFoyZGxjaWhjSW1Wa2FYUnZja3h2WVdSbFpGd2lLVHRjYmx4dUlDQWdJQ0FnSUNBa0tDZHBabkpoYldVdWQzbHphV2gwYld3MUxYTmhibVJpYjNnbktTNWxZV05vS0daMWJtTjBhVzl1S0drc0lHVnNLWHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDUW9aV3d1WTI5dWRHVnVkRmRwYm1SdmR5a3ViMlptS0NkbWIyTjFjeTUzZVhOcGFIUnRiRFVuS1M1dmJpaDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKMlp2WTNWekxuZDVjMmxvZEcxc05TY2dPaUJtZFc1amRHbHZiaWdwZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWtLQ2RzYVM1a2NtOXdaRzkzYmljcExuSmxiVzkyWlVOc1lYTnpLQ2R2Y0dWdUp5azdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJSDA3WEc1Y2JpQWdJQ0JYZVhOcGFIUnRiRFV1Y0hKdmRHOTBlWEJsSUQwZ2UxeHVYRzRnSUNBZ0lDQWdJR052Ym5OMGNuVmpkRzl5T2lCWGVYTnBhSFJ0YkRVc1hHNWNiaUFnSUNBZ0lDQWdZM0psWVhSbFJXUnBkRzl5T2lCbWRXNWpkR2x2YmlodmNIUnBiMjV6S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2Y0hScGIyNXpJRDBnYjNCMGFXOXVjeUI4ZkNCN2ZUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdRV1JrSUhSb1pTQjBiMjlzWW1GeUlIUnZJR0VnWTJ4dmJtVWdiMllnZEdobElHOXdkR2x2Ym5NZ2IySnFaV04wSUhOdklHMTFiSFJwY0d4bElHbHVjM1JoYm1ObGMxeHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z2IyWWdkR2hsSUZkWlNWTlpWMGNnWkc5dUozUWdZbkpsWVdzZ1ltVmpZWFZ6WlNCY0luUnZiMnhpWVhKY0lpQnBjeUJoYkhKbFlXUjVJR1JsWm1sdVpXUmNiaUFnSUNBZ0lDQWdJQ0FnSUc5d2RHbHZibk1nUFNBa0xtVjRkR1Z1WkNoMGNuVmxMQ0I3ZlN3Z2IzQjBhVzl1Y3lrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J2Y0hScGIyNXpMblJ2YjJ4aVlYSWdQU0IwYUdsekxuUnZiMnhpWVhKYk1GMDdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJsWkdsMGIzSWdQU0J1WlhjZ2QzbHphUzVGWkdsMGIzSW9kR2hwY3k1bGJGc3dYU3dnYjNCMGFXOXVjeWs3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2xtS0c5d2RHbHZibk1nSmlZZ2IzQjBhVzl1Y3k1bGRtVnVkSE1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbWIzSW9kbUZ5SUdWMlpXNTBUbUZ0WlNCcGJpQnZjSFJwYjI1ekxtVjJaVzUwY3lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsWkdsMGIzSXViMjRvWlhabGJuUk9ZVzFsTENCdmNIUnBiMjV6TG1WMlpXNTBjMXRsZG1WdWRFNWhiV1ZkS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnlaWFIxY200Z1pXUnBkRzl5TzF4dUlDQWdJQ0FnSUNCOUxGeHVYRzRnSUNBZ0lDQWdJR055WldGMFpWUnZiMnhpWVhJNklHWjFibU4wYVc5dUtHVnNMQ0J2Y0hScGIyNXpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYzJWc1ppQTlJSFJvYVhNN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2RHOXZiR0poY2lBOUlDUW9YQ0k4ZFd3dlBsd2lMQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSjJOc1lYTnpKeUE2SUZ3aWQzbHphV2gwYld3MUxYUnZiMnhpWVhKY0lpeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQW5jM1I1YkdVbk9pQmNJbVJwYzNCc1lYazZibTl1WlZ3aVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCamRXeDBkWEpsSUQwZ2IzQjBhVzl1Y3k1c2IyTmhiR1VnZkh3Z1pHVm1ZWFZzZEU5d2RHbHZibk11Ykc5allXeGxJSHg4SUZ3aVpXNWNJanRjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZjaWgyWVhJZ2EyVjVJR2x1SUdSbFptRjFiSFJQY0hScGIyNXpLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIWmhiSFZsSUQwZ1ptRnNjMlU3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHZjSFJwYjI1elcydGxlVjBnSVQwOUlIVnVaR1ZtYVc1bFpDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppaHZjSFJwYjI1elcydGxlVjBnUFQwOUlIUnlkV1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxJRDBnZEhKMVpUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsSUQwZ1pHVm1ZWFZzZEU5d2RHbHZibk5iYTJWNVhUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmloMllXeDFaU0E5UFQwZ2RISjFaU2tnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBiMjlzWW1GeUxtRndjR1Z1WkNoMFpXMXdiR0YwWlhNb2EyVjVMQ0JzYjJOaGJHVmJZM1ZzZEhWeVpWMHNJRzl3ZEdsdmJuTXBLVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWhyWlhrZ1BUMDlJRndpYUhSdGJGd2lLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtbHVhWFJJZEcxc0tIUnZiMnhpWVhJcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lvYTJWNUlEMDlQU0JjSW14cGJtdGNJaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEdocGN5NXBibWwwU1c1elpYSjBUR2x1YXloMGIyOXNZbUZ5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1LR3RsZVNBOVBUMGdYQ0pwYldGblpWd2lLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYUdsekxtbHVhWFJKYm5ObGNuUkpiV0ZuWlNoMGIyOXNZbUZ5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHFJRVJ2Ym01aElGTjBZWEowSUNvdlhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtSUNoclpYa2dQVDA5SUZ3aVlXeHBaMjV0Wlc1MFhDSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1sdWFYUkJiR2xuYm0xbGJuUW9kRzl2YkdKaGNpazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2EyVjVJRDA5UFNCY0ltTnNaV0Z5WENJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGFHbHpMbWx1YVhSRGJHVmhjaWgwYjI5c1ltRnlLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUlDaHJaWGtnUFQwOUlGd2labTl1ZEZ3aUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1sdWFYUkdiMjUwS0hSdmIyeGlZWElwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR3RsZVNBOVBUMGdYQ0ptYjI1MExYTnBlbVZjSWlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RHaHBjeTVwYm1sMFJtOXVkRk5wZW1Vb2RHOXZiR0poY2lrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYTJWNUlEMDlQU0JjSW1WdGNHaGhjMmx6WENJcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11YVc1cGRFVnRjR2hoYzJsektIUnZiMnhpWVhJcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0d0bGVTQTlQVDBnWENKMFpYaDBMV052Ykc5eVhDSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJvYVhNdWFXNXBkRU52Ykc5eVVHbGphMlZ5S0hSdmIyeGlZWElzSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pXeGxiVG9nSnk1MFpYaDBMV052Ykc5eUp5eGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSGx3WlRvZ0ozUmxlSFFuTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSnlNd01EQW5MRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjIxdFlXNWtPaUFuZEdWNGRFTnZiRzl5Snl4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lYUjBjbWxpZFhSbE9pQW5aR0YwWVMxMFpYaDBMV052Ykc5eUoxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2EyVjVJRDA5UFNCY0ltaHBaMmhzYVdkb2RDMWpiMnh2Y2x3aUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBhR2x6TG1sdWFYUkRiMnh2Y2xCcFkydGxjaWgwYjI5c1ltRnlMQ0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdWc1pXMDZJQ2N1YUdsbmFHeHBaMmgwTFdOdmJHOXlKeXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhsd1pUb2dKMmhwWjJoc2FXZG9kQ2NzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUFuSTJabVppY3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052YlcxaGJtUTZJQ2RvYVdkb2JHbG5hSFJEYjJ4dmNpY3NYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0YwZEhKcFluVjBaVG9nSjJSaGRHRXRhR2xuYUd4cFoyaDBMV052Ykc5eUoxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2EyVjVJRDA5UFNCY0ltSmhZMnRuY205MWJtUXRZMjlzYjNKY0lpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkR2hwY3k1cGJtbDBRMjlzYjNKUWFXTnJaWElvZEc5dmJHSmhjaXdnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJHVnRPaUFuTG1KaFkydG5jbTkxYm1RdFkyOXNiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGVYQmxPaUFuWW1GamEyZHliM1Z1WkNjc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHTnZiRzl5T2lBbkkyWm1aaWNzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJXMWhibVE2SUNkaVlXTnJaM0p2ZFc1a1EyOXNiM0luTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaGRIUnlhV0oxZEdVNklDZGtZWFJoTFdKaFkydG5jbTkxYm1RdFkyOXNiM0luWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdktpQkViMjV1WVNCRmJtUWdLaTljYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1LRzl3ZEdsdmJuTXVkRzl2YkdKaGNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1p2Y2loclpYa2dhVzRnYjNCMGFXOXVjeTUwYjI5c1ltRnlLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnZiMnhpWVhJdVlYQndaVzVrS0c5d2RHbHZibk11ZEc5dmJHSmhjbHRyWlhsZEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdJQ0FnSUhSdmIyeGlZWEl1Wm1sdVpDaGNJbUZiWkdGMFlTMTNlWE5wYUhSdGJEVXRZMjl0YldGdVpEMG5abTl5YldGMFFteHZZMnNuWFZ3aUtTNWpiR2xqYXlobWRXNWpkR2x2YmlobEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUhSaGNtZGxkQ0E5SUdVdWRHRnlaMlYwSUh4OElHVXVjM0pqUld4bGJXVnVkRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1pXd2dQU0FrS0hSaGNtZGxkQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJWc1ppNTBiMjlzWW1GeUxtWnBibVFvSnk1amRYSnlaVzUwTFdadmJuUW5LUzUwWlhoMEtHVnNMbWgwYld3b0tTazdYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHOXZiR0poY2k1bWFXNWtLRndpWVZ0a1lYUmhMWGQ1YzJsb2RHMXNOUzFqYjIxdFlXNWtQU2RtYjNKbFEyOXNiM0luWFZ3aUtTNWpiR2xqYXlobWRXNWpkR2x2YmlobEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUhSaGNtZGxkQ0E5SUdVdWRHRnlaMlYwSUh4OElHVXVjM0pqUld4bGJXVnVkRHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1pXd2dQU0FrS0hSaGNtZGxkQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJWc1ppNTBiMjlzWW1GeUxtWnBibVFvSnk1amRYSnlaVzUwTFdOdmJHOXlKeWt1ZEdWNGRDaGxiQzVvZEcxc0tDa3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHFJRVJ2Ym01aElGTjBZWEowSUMwZ1FXUmtJR05zYVdOcklHVjJaVzUwSUdoaGJtUnNaWElnWm05eUlHeHBibVVnYUdWcFoyaDBMaUFxTDF4dUlDQWdJQ0FnSUNBZ0lDQWdkRzl2YkdKaGNpNW1hVzVrS0Z3aUxteHBibVV0YUdWcFoyaDBYQ0lwTG05dUtGd2ljMmh2ZDI0dVluTXVaSEp2Y0dSdmQyNWNJaXdnWm5WdVkzUnBiMjRvWlNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllYSWdaV3dnUFNBa0tHVXVkR0Z5WjJWMEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR3hwYm1WSVpXbG5hSFFnUFNCbGJDNW1hVzVrS0Z3aVluVjBkRzl1WENJcExtUmhkR0VvWENKM2VYTnBhSFJ0YkRVdFkyOXRiV0Z1WkMxMllXeDFaVndpS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBdkx5QlZjMlVnYzJodmNuUWdkR2x0Wlc5MWRDQjBieUJ2ZG1WeVkyOXRaU0JwYzNOMVpTQjNhWFJvSUVKdmIzUnpkSEpoY0NCcGJuUmxjbVpsY21sdVp5QjNhWFJvSUhSb2FYTWdhR0Z1Wkd4bGNpNWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2MyVjBWR2x0Wlc5MWRDaG1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsYkM1bWFXNWtLRndpWVZ0a1lYUmhMWGQ1YzJsb2RHMXNOUzFqYjIxdFlXNWtMWFpoYkhWbFBTZGNJaUFySUd4cGJtVklaV2xuYUhRZ0t5QmNJaWRkWENJcExtWnZZM1Z6S0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUgwc0lEQXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDOHZJRUZrWkNCamJHbGpheUJsZG1WdWRDQm9ZVzVrYkdWeUlHWnZjaUJ6Wld4bFkzUnBibWNnWVc0Z2FXNWthWFpwWkhWaGJDQnNhVzVsSUdobGFXZG9kQzVjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnZiMnhpWVhJdVptbHVaQ2hjSWk1c2FXNWxMV2hsYVdkb2RDQmhYQ0lwTG1Oc2FXTnJLR1oxYm1OMGFXOXVLR1VwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIUmhjbWRsZENBOUlHVXVkR0Z5WjJWMElIeDhJR1V1YzNKalJXeGxiV1Z1ZER0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHVnNJRDBnSkNoMFlYSm5aWFFwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2JHbHVaVWhsYVdkb2RDQTlJR1ZzTG1SaGRHRW9YQ0ozZVhOcGFIUnRiRFV0WTI5dGJXRnVaQzEyWVd4MVpWd2lLVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0IwYjI5c1ltRnlMbVpwYm1Rb1hDSXViR2x1WlMxb1pXbG5hSFFnWW5WMGRHOXVYQ0lwTG1SaGRHRW9YQ0ozZVhOcGFIUnRiRFV0WTI5dGJXRnVaQzEyWVd4MVpWd2lMQ0JzYVc1bFNHVnBaMmgwS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpXeG1MbVZrYVhSdmNpNWpiMjF3YjNObGNpNWpiMjF0WVc1a2N5NWxlR1ZqS0Z3aWJHbHVaVWhsYVdkb2RGd2lMQ0JzYVc1bFNHVnBaMmgwTENCYmUxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHNWhiV1U2SUZ3aVpHRjBZUzFzYVc1bExXaGxhV2RvZEZ3aUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhiSFZsT2lCc2FXNWxTR1ZwWjJoMFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUgxZEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnTHlvZ1JHOXVibUVnUlc1a0lDb3ZYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lIUm9hWE11Wld3dVltVm1iM0psS0hSdmIyeGlZWElwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0J5WlhSMWNtNGdkRzl2YkdKaGNqdGNiaUFnSUNBZ0lDQWdmU3hjYmx4dUlDQWdJQ0FnSUNCcGJtbDBTSFJ0YkRvZ1puVnVZM1JwYjI0b2RHOXZiR0poY2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHTm9ZVzVuWlZacFpYZFRaV3hsWTNSdmNpQTlJRndpWVZ0a1lYUmhMWGQ1YzJsb2RHMXNOUzFoWTNScGIyNDlKMk5vWVc1blpWOTJhV1YzSjExY0lqdGNiaUFnSUNBZ0lDQWdJQ0FnSUhSdmIyeGlZWEl1Wm1sdVpDaGphR0Z1WjJWV2FXVjNVMlZzWldOMGIzSXBMbU5zYVdOcktHWjFibU4wYVc5dUtHVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwYjI5c1ltRnlMbVpwYm1Rb0oyRXVZblJ1SnlrdWJtOTBLR05vWVc1blpWWnBaWGRUWld4bFkzUnZjaWt1ZEc5bloyeGxRMnhoYzNNb0oyUnBjMkZpYkdWa0p5azdYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNiaUFnSUNBZ0lDQWdmU3hjYmx4dUlDQWdJQ0FnSUNCcGJtbDBTVzV6WlhKMFNXMWhaMlU2SUdaMWJtTjBhVzl1S0hSdmIyeGlZWElwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCelpXeG1JRDBnZEdocGN6dGNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBibk5sY25SSmJXRm5aVTF2WkdGc0lEMGdkRzl2YkdKaGNpNW1hVzVrS0NjdVltOXZkSE4wY21Gd0xYZDVjMmxvZEcxc05TMXBibk5sY25RdGFXMWhaMlV0Ylc5a1lXd25LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUIxY214SmJuQjFkQ0E5SUdsdWMyVnlkRWx0WVdkbFRXOWtZV3d1Wm1sdVpDZ25MbUp2YjNSemRISmhjQzEzZVhOcGFIUnRiRFV0YVc1elpYSjBMV2x0WVdkbExYVnliQ2NwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdsdWMyVnlkRUoxZEhSdmJpQTlJR2x1YzJWeWRFbHRZV2RsVFc5a1lXd3VabWx1WkNnbkxtSjBiaTF3Y21sdFlYSjVKeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQjJZWElnYVc1cGRHbGhiRlpoYkhWbElEMGdkWEpzU1c1d2RYUXVkbUZzS0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1kyRnlaWFJDYjI5cmJXRnlhenRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdsdWMyVnlkRWx0WVdkbElEMGdablZ1WTNScGIyNG9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIVnliQ0E5SUhWeWJFbHVjSFYwTG5aaGJDZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFZ5YkVsdWNIVjBMblpoYkNocGJtbDBhV0ZzVm1Gc2RXVXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5sYkdZdVpXUnBkRzl5TG1OMWNuSmxiblJXYVdWM0xtVnNaVzFsYm5RdVptOWpkWE1vS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZMkZ5WlhSQ2IyOXJiV0Z5YXlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6Wld4bUxtVmthWFJ2Y2k1amIyMXdiM05sY2k1elpXeGxZM1JwYjI0dWMyVjBRbTl2YTIxaGNtc29ZMkZ5WlhSQ2IyOXJiV0Z5YXlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oY21WMFFtOXZhMjFoY21zZ1BTQnVkV3hzTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpXeG1MbVZrYVhSdmNpNWpiMjF3YjNObGNpNWpiMjF0WVc1a2N5NWxlR1ZqS0Z3aWFXNXpaWEowU1cxaFoyVmNJaXdnZFhKc0tUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgwN1hHNWNiaUFnSUNBZ0lDQWdJQ0FnSUhWeWJFbHVjSFYwTG10bGVYQnlaWE56S0daMWJtTjBhVzl1S0dVcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnBaaWhsTG5kb2FXTm9JRDA5SURFektTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsdWMyVnlkRWx0WVdkbEtDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsdWMyVnlkRWx0WVdkbFRXOWtZV3d1Ylc5a1lXd29KMmhwWkdVbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNXpaWEowUW5WMGRHOXVMbU5zYVdOcktHbHVjMlZ5ZEVsdFlXZGxLVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdhVzV6WlhKMFNXMWhaMlZOYjJSaGJDNXZiaWduYzJodmQyNG5MQ0JtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMWNteEpibkIxZEM1bWIyTjFjeWdwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJR2x1YzJWeWRFbHRZV2RsVFc5a1lXd3ViMjRvSjJocFpHVW5MQ0JtZFc1amRHbHZiaWdwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpXeG1MbVZrYVhSdmNpNWpkWEp5Wlc1MFZtbGxkeTVsYkdWdFpXNTBMbVp2WTNWektDazdYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHOXZiR0poY2k1bWFXNWtLQ2RoVzJSaGRHRXRkM2x6YVdoMGJXdzFMV052YlcxaGJtUTlhVzV6WlhKMFNXMWhaMlZkSnlrdVkyeHBZMnNvWm5WdVkzUnBiMjRvS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RtRnlJR0ZqZEdsMlpVSjFkSFJ2YmlBOUlDUW9kR2hwY3lrdWFHRnpRMnhoYzNNb1hDSjNlWE5wYUhSdGJEVXRZMjl0YldGdVpDMWhZM1JwZG1WY0lpazdYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb0lXRmpkR2wyWlVKMWRIUnZiaWtnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaV3htTG1Wa2FYUnZjaTVqZFhKeVpXNTBWbWxsZHk1bGJHVnRaVzUwTG1adlkzVnpLR1poYkhObEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWTJGeVpYUkNiMjlyYldGeWF5QTlJSE5sYkdZdVpXUnBkRzl5TG1OdmJYQnZjMlZ5TG5ObGJHVmpkR2x2Ymk1blpYUkNiMjlyYldGeWF5Z3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJuTmxjblJKYldGblpVMXZaR0ZzTG1Gd2NHVnVaRlJ2S0NkaWIyUjVKeWt1Ylc5a1lXd29KM05vYjNjbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1elpYSjBTVzFoWjJWTmIyUmhiQzV2YmlnblkyeHBZMnN1WkdsemJXbHpjeTV0YjJSaGJDY3NJQ2RiWkdGMFlTMWthWE50YVhOelBWd2liVzlrWVd4Y0lsMG5MQ0JtZFc1amRHbHZiaWhsS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbExuTjBiM0JRY205d1lXZGhkR2x2YmlncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlHWmhiSE5sTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCbGJITmxJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2NtVjBkWEp1SUhSeWRXVTdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJSDBzWEc1Y2JpQWdJQ0FnSUNBZ2FXNXBkRWx1YzJWeWRFeHBibXM2SUdaMWJtTjBhVzl1S0hSdmIyeGlZWElwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCelpXeG1JRDBnZEdocGN6dGNiaUFnSUNBZ0lDQWdJQ0FnSUhaaGNpQnBibk5sY25STWFXNXJUVzlrWVd3Z1BTQjBiMjlzWW1GeUxtWnBibVFvSnk1aWIyOTBjM1J5WVhBdGQzbHphV2gwYld3MUxXbHVjMlZ5ZEMxc2FXNXJMVzF2WkdGc0p5azdYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdkWEpzU1c1d2RYUWdQU0JwYm5ObGNuUk1hVzVyVFc5a1lXd3VabWx1WkNnbkxtSnZiM1J6ZEhKaGNDMTNlWE5wYUhSdGJEVXRhVzV6WlhKMExXeHBibXN0ZFhKc0p5azdYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdkR0Z5WjJWMFNXNXdkWFFnUFNCcGJuTmxjblJNYVc1clRXOWtZV3d1Wm1sdVpDZ25MbUp2YjNSemRISmhjQzEzZVhOcGFIUnRiRFV0YVc1elpYSjBMV3hwYm1zdGRHRnlaMlYwSnlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2FXNXpaWEowUW5WMGRHOXVJRDBnYVc1elpYSjBUR2x1YTAxdlpHRnNMbVpwYm1Rb0p5NWlkRzR0Y0hKcGJXRnllU2NwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUdsdWFYUnBZV3hXWVd4MVpTQTlJSFZ5YkVsdWNIVjBMblpoYkNncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHTmhjbVYwUW05dmEyMWhjbXM3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCcGJuTmxjblJNYVc1cklEMGdablZ1WTNScGIyNG9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlIVnliQ0E5SUhWeWJFbHVjSFYwTG5aaGJDZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFZ5YkVsdWNIVjBMblpoYkNocGJtbDBhV0ZzVm1Gc2RXVXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5sYkdZdVpXUnBkRzl5TG1OMWNuSmxiblJXYVdWM0xtVnNaVzFsYm5RdVptOWpkWE1vS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9ZMkZ5WlhSQ2IyOXJiV0Z5YXlrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6Wld4bUxtVmthWFJ2Y2k1amIyMXdiM05sY2k1elpXeGxZM1JwYjI0dWMyVjBRbTl2YTIxaGNtc29ZMkZ5WlhSQ2IyOXJiV0Z5YXlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oY21WMFFtOXZhMjFoY21zZ1BTQnVkV3hzTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUJ1WlhkWGFXNWtiM2NnUFNCMFlYSm5aWFJKYm5CMWRDNXdjbTl3S0Z3aVkyaGxZMnRsWkZ3aUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaV3htTG1Wa2FYUnZjaTVqYjIxd2IzTmxjaTVqYjIxdFlXNWtjeTVsZUdWaktGd2lZM0psWVhSbFRHbHVhMXdpTENCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ2RvY21WbUp5QTZJSFZ5YkN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKM1JoY21kbGRDY2dPaUFvYm1WM1YybHVaRzkzSUQ4Z0oxOWliR0Z1YXljZ09pQW5YM05sYkdZbktTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSjNKbGJDY2dPaUFvYm1WM1YybHVaRzkzSUQ4Z0oyNXZabTlzYkc5M0p5QTZJQ2NuS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlR0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCd2NtVnpjMlZrUlc1MFpYSWdQU0JtWVd4elpUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2RYSnNTVzV3ZFhRdWEyVjVjSEpsYzNNb1puVnVZM1JwYjI0b1pTa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2xtS0dVdWQyaHBZMmdnUFQwZ01UTXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXNXpaWEowVEdsdWF5Z3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJuTmxjblJNYVc1clRXOWtZV3d1Ylc5a1lXd29KMmhwWkdVbktUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXNXpaWEowUW5WMGRHOXVMbU5zYVdOcktHbHVjMlZ5ZEV4cGJtc3BPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBibk5sY25STWFXNXJUVzlrWVd3dWIyNG9KM05vYjNkdUp5d2dablZ1WTNScGIyNG9LU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZFhKc1NXNXdkWFF1Wm05amRYTW9LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHBPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBibk5sY25STWFXNXJUVzlrWVd3dWIyNG9KMmhwWkdVbkxDQm1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6Wld4bUxtVmthWFJ2Y2k1amRYSnlaVzUwVm1sbGR5NWxiR1Z0Wlc1MExtWnZZM1Z6S0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5S1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnZEc5dmJHSmhjaTVtYVc1a0tDZGhXMlJoZEdFdGQzbHphV2gwYld3MUxXTnZiVzFoYm1ROVkzSmxZWFJsVEdsdWExMG5LUzVqYkdsamF5aG1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ1lXTjBhWFpsUW5WMGRHOXVJRDBnSkNoMGFHbHpLUzVvWVhORGJHRnpjeWhjSW5kNWMybG9kRzFzTlMxamIyMXRZVzVrTFdGamRHbDJaVndpS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2doWVdOMGFYWmxRblYwZEc5dUtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhObGJHWXVaV1JwZEc5eUxtTjFjbkpsYm5SV2FXVjNMbVZzWlcxbGJuUXVabTlqZFhNb1ptRnNjMlVwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpZWEpsZEVKdmIydHRZWEpySUQwZ2MyVnNaaTVsWkdsMGIzSXVZMjl0Y0c5elpYSXVjMlZzWldOMGFXOXVMbWRsZEVKdmIydHRZWEpyS0NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2x1YzJWeWRFeHBibXROYjJSaGJDNWhjSEJsYm1SVWJ5Z25ZbTlrZVNjcExtMXZaR0ZzS0NkemFHOTNKeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbHVjMlZ5ZEV4cGJtdE5iMlJoYkM1dmJpZ25ZMnhwWTJzdVpHbHpiV2x6Y3k1dGIyUmhiQ2NzSUNkYlpHRjBZUzFrYVhOdGFYTnpQVndpYlc5a1lXeGNJbDBuTENCbWRXNWpkR2x2YmlobEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxMbk4wYjNCUWNtOXdZV2RoZEdsdmJpZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJR1poYkhObE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxiSE5sSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbVYwZFhKdUlIUnlkV1U3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0FnSUgwc1hHNWNiaUFnSUNBZ0lDQWdMeW9nUkc5dWJtRWdVM1JoY25RZ0tpOWNiaUFnSUNBZ0lDQWdhVzVwZEVGc2FXZHViV1Z1ZERvZ1puVnVZM1JwYjI0b2RHOXZiR0poY2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFJ2YjJ4aVlYSXVabWx1WkNoY0lpNWhiR2xuYm0xbGJuUmNJaWt1WVd4cFoyNXRaVzUwS0NrN1hHNGdJQ0FnSUNBZ0lIMHNYRzVjYmlBZ0lDQWdJQ0FnTHk4Z1VtVnpaWFFnWVd4c0lIUnZiMnhpWVhJZ2FXTnZibk11WEc0Z0lDQWdJQ0FnSUdsdWFYUkRiR1ZoY2pvZ1puVnVZM1JwYjI0b2RHOXZiR0poY2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFJ2YjJ4aVlYSXVabWx1WkNoY0lpNWpiR1ZoY2x3aUtTNXZiaWhjSW1Oc2FXTnJYQ0lzSUdaMWJtTjBhVzl1S0NrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnZG1GeUlHSmhZMnRuY205MWJtUkRiMnh2Y2lBOUlIUnBibmxqYjJ4dmNpaGNJaU5tWm1aY0lpazdYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjbWRpWVNBOUlHSmhZMnRuY205MWJtUkRiMnh2Y2k1MGIxSm5ZaWdwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0IwYjI5c1ltRnlMbVpwYm1Rb1hDSXVabTl1ZEMxd2FXTnJaWEpjSWlrdVpHRjBZU2hjSW5Cc2RXZHBibDltYjI1MFVHbGphMlZ5WENJcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUM1eVpYTmxkQ2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkRzl2YkdKaGNpNW1hVzVrS0Z3aUxtWnZiblF0YzJsNlpTMXdhV05yWlhKY0lpa3VaR0YwWVNoY0luQnNkV2RwYmw5bWIyNTBVMmw2WlZCcFkydGxjbHdpS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0F1Y21WelpYUW9LVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnZiMnhpWVhJdVptbHVaQ2hjSWk1bGJYQm9ZWE5wYzF3aUtTNWtZWFJoS0Z3aWNHeDFaMmx1WDJadmJuUlRkSGxzWlZ3aUtWeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBdWNtVnpaWFFvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFJ2YjJ4aVlYSXVabWx1WkNoY0lpNWhiR2xuYm0xbGJuUmNJaWt1WkdGMFlTaGNJbkJzZFdkcGJsOWhiR2xuYm0xbGJuUmNJaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdMbkpsYzJWMEtDazdYRzRnSUNBZ0lDQWdJQ0FnSUNCMGIyOXNZbUZ5TG1acGJtUW9YQ0l1YkdsdVpTMW9aV2xuYUhRZ1lWdGtZWFJoTFhkNWMybG9kRzFzTlMxamIyMXRZVzVrTFhaaGJIVmxQU2N4SjExY0lpbGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0xuUnlhV2RuWlhJb1hDSmpiR2xqYTF3aUtUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ2RHOXZiR0poY2k1bWFXNWtLRndpTG5SbGVIUXRZMjlzYjNKY0lpa3VjM0JsWTNSeWRXMG9YQ0p6WlhSY0lpd2dYQ0lqTURBd1hDSXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2RHOXZiR0poY2k1bWFXNWtLRndpTG1ocFoyaHNhV2RvZEMxamIyeHZjbHdpS1M1emNHVmpkSEoxYlNoY0luTmxkRndpTENCY0lpTm1abVpjSWlrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IwYjI5c1ltRnlMbVpwYm1Rb1hDSXVZbUZqYTJkeWIzVnVaQzFqYjJ4dmNsd2lLUzV6Y0dWamRISjFiU2hjSW5ObGRGd2lMQ0JjSWlObVptWmNJaWs3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJSE5sYkdZdVpXUnBkRzl5TG1OdmJYQnZjMlZ5TG1OdmJXMWhibVJ6TG1WNFpXTW9YQ0ppWVdOclozSnZkVzVrUTI5c2IzSmNJaXdnY21kaVlTd2dXM3RjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ1hDSmtZWFJoTFdKaFkydG5jbTkxYm1RdFkyOXNiM0pjSWl4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJR0poWTJ0bmNtOTFibVJEYjJ4dmNpNTBiMUpuWWxOMGNtbHVaeWdwWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYU2s3WEc0Z0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJSDBzWEc1Y2JpQWdJQ0FnSUNBZ2FXNXBkRVp2Ym5RNklHWjFibU4wYVc5dUtIUnZiMnhpWVhJcElIdGNiaUFnSUNBZ0lDQWdJQ0F2THlCUVlYTnpJR052Ym5SbGJuUWdaRzlqZFcxbGJuUWdZV1owWlhJZ2RHaGxJR1ZrYVhSdmNpQm9ZWE1nYkc5aFpHVmtMbHh1SUNBZ0lDQWdJQ0FnSUNRb2QybHVaRzkzS1M1dmJpaGNJbVZrYVhSdmNreHZZV1JsWkZ3aUxDQm1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIUnZiMnhpWVhJdVptbHVaQ2hjSWk1bWIyNTBMWEJwWTJ0bGNsd2lLUzVrWVhSaEtGd2ljR3gxWjJsdVgyWnZiblJRYVdOclpYSmNJaWxjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdMbk5sZEVOdmJuUmxiblJFYjJNb2MyVnNaaTVsWkdsMGIzSXVZMjl0Y0c5elpYSXVhV1p5WVcxbExtTnZiblJsYm5SRWIyTjFiV1Z1ZENrN1hHNGdJQ0FnSUNBZ0lDQWdmU2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQjBiMjlzWW1GeUxtWnBibVFvWENJdVptOXVkQzF3YVdOclpYSmNJaWt1Wm05dWRGQnBZMnRsY2loN2ZTbGNiaUFnSUNBZ0lDQWdJQ0FnSUM1dmJpaGNJbk4wWVc1a1lYSmtSbTl1ZEZObGJHVmpkR1ZrWENJc0lHWjFibU4wYVc5dUtHVXNJR1p2Ym5Rc0lHWnZiblJHWVcxcGJIa3BJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdjMlZzWmk1bFpHbDBiM0l1WTI5dGNHOXpaWEl1WTI5dGJXRnVaSE11WlhobFl5aGNJbk4wWVc1a1lYSmtSbTl1ZEZ3aUxDQm1iMjUwTENCbWIyNTBSbUZ0YVd4NUxDQmJlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklGd2laR0YwWVMxemRHRnVaR0Z5WkMxbWIyNTBYQ0lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZG1Gc2RXVTZJR1p2Ym5SY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJRndpWkdGMFlTMXpkR0Z1WkdGeVpDMW1iMjUwTFdaaGJXbHNlVndpTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJtYjI1MFJtRnRhV3g1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdYU2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJWc1ppNWxaR2wwYjNJdVptOWpkWE1vS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDBwWEc0Z0lDQWdJQ0FnSUNBZ0lDQXViMjRvWENKbmIyOW5iR1ZHYjI1MFUyVnNaV04wWldSY0lpd2dablZ1WTNScGIyNG9aU3dnWm05dWRDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaV3htTG1Wa2FYUnZjaTVqYjIxd2IzTmxjaTVqYjIxdFlXNWtjeTVsZUdWaktGd2laMjl2WjJ4bFJtOXVkRndpTENCbWIyNTBMQ0JiZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJRndpWkdGMFlTMW5iMjluYkdVdFptOXVkRndpTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhaaGJIVmxPaUJtYjI1MFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUgxZEtUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaV3htTG1Wa2FYUnZjaTVtYjJOMWN5Z3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTbGNiaUFnSUNBZ0lDQWdJQ0FnSUM1dmJpaGNJbU4xYzNSdmJVWnZiblJUWld4bFkzUmxaRndpTENCbWRXNWpkR2x2YmlobExDQm1iMjUwTENCbWIyNTBWVkpNS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUhObGJHWXVaV1JwZEc5eUxtTnZiWEJ2YzJWeUxtTnZiVzFoYm1SekxtVjRaV01vWENKamRYTjBiMjFHYjI1MFhDSXNJR1p2Ym5Rc0lGdDdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibUZ0WlRvZ1hDSmtZWFJoTFdOMWMzUnZiUzFtYjI1MFhDSXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHWnZiblJjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzVoYldVNklGd2laR0YwWVMxamRYTjBiMjB0Wm05dWRDMTFjbXhjSWl4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaVG9nWm05dWRGVlNURnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYU2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJWc1ppNWxaR2wwYjNJdVptOWpkWE1vS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDBwTzF4dUlDQWdJQ0FnSUNCOUxGeHVYRzRnSUNBZ0lDQWdJR2x1YVhSR2IyNTBVMmw2WlRvZ1puVnVZM1JwYjI0b2RHOXZiR0poY2lrZ2UxeHVJQ0FnSUNBZ0lDQWdJSFJ2YjJ4aVlYSXVabWx1WkNoY0lpNW1iMjUwTFhOcGVtVXRjR2xqYTJWeVhDSXBMbVp2Ym5SVGFYcGxVR2xqYTJWeUtDbGNiaUFnSUNBZ0lDQWdJQ0FnSUM1dmJpaGNJbk5wZW1WRGFHRnVaMlZrWENJc0lHWjFibU4wYVc5dUtHVXNJSE5wZW1VcElIdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ2MyVnNaaTVsWkdsMGIzSXVZMjl0Y0c5elpYSXVZMjl0YldGdVpITXVaWGhsWXloY0ltWnZiblJUYVhwbFhDSXNJSE5wZW1VcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCelpXeG1MbVZrYVhSdmNpNW1iMk4xY3lncE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlNrN1hHNGdJQ0FnSUNBZ0lIMHNYRzVjYmlBZ0lDQWdJQ0FnYVc1cGRFVnRjR2hoYzJsek9pQm1kVzVqZEdsdmJpaDBiMjlzWW1GeUtTQjdYRzRnSUNBZ0lDQWdJQ0FnZEc5dmJHSmhjaTVtYVc1a0tGd2lMbVZ0Y0doaGMybHpYQ0lwTG1admJuUlRkSGxzWlNncE8xeHVJQ0FnSUNBZ0lDQjlMRnh1WEc0Z0lDQWdJQ0FnSUdsdWFYUkRiMnh2Y2xCcFkydGxjam9nWm5WdVkzUnBiMjRvZEc5dmJHSmhjaXdnYjNCMGFXOXVjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lIUnZiMnhpWVhJdVptbHVaQ2h2Y0hScGIyNXpMbVZzWlcwcExuTndaV04wY25WdEtIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOaGJtTmxiRlJsZUhRNklGd2lRMkZ1WTJWc1hDSXNYRzRnSUNBZ0lDQWdJQ0FnSUNCamFHOXZjMlZVWlhoME9pQmNJa0Z3Y0d4NVhDSXNYRzRnSUNBZ0lDQWdJQ0FnSUNCamJHbGphMjkxZEVacGNtVnpRMmhoYm1kbE9pQjBjblZsTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklHOXdkR2x2Ym5NdVkyOXNiM0lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQndjbVZtWlhKeVpXUkdiM0p0WVhRNklGd2lhR1Y0WENJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0J6YUc5M1FXeHdhR0U2SUhSeWRXVXNYRzRnSUNBZ0lDQWdJQ0FnSUNCemFHOTNTVzV3ZFhRNklIUnlkV1VzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBlWEJsT2lCdmNIUnBiMjV6TG5SNWNHVXNYRzRnSUNBZ0lDQWdJQ0FnSUNCamFHRnVaMlU2SUdaMWJtTjBhVzl1S0dOdmJHOXlLU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCeVoySmhJRDBnWTI5c2IzSXVkRzlTWjJJb0tUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQnpaV3htTG1Wa2FYUnZjaTVqYjIxd2IzTmxjaTVqYjIxdFlXNWtjeTVsZUdWaktHOXdkR2x2Ym5NdVkyOXRiV0Z1WkN3Z2NtZGlZU3dnVzN0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdVlXMWxPaUJ2Y0hScGIyNXpMbUYwZEhKcFluVjBaU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpUb2dZMjlzYjNJdWRHOVNaMkpUZEhKcGJtY29LVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYU2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJWc1ppNWxaR2wwYjNJdVptOWpkWE1vS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUM4cUlFUnZibTVoSUVWdVpDQXFMMXh1SUNBZ0lIMDdYRzVjYmlBZ0lDQXZMeUIwYUdWelpTQmtaV1pwYm1VZ2IzVnlJSEIxWW14cFl5QmhjR2xjYmlBZ0lDQjJZWElnYldWMGFHOWtjeUE5SUh0Y2JpQWdJQ0FnSUNBZ2NtVnpaWFJFWldaaGRXeDBjem9nWm5WdVkzUnBiMjRvS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FrTG1adUxuZDVjMmxvZEcxc05TNWtaV1poZFd4MFQzQjBhVzl1Y3lBOUlDUXVaWGgwWlc1a0tIUnlkV1VzSUh0OUxDQWtMbVp1TG5kNWMybG9kRzFzTlM1a1pXWmhkV3gwVDNCMGFXOXVjME5oWTJobEtUdGNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnWW5sd1lYTnpSR1ZtWVhWc2RITTZJR1oxYm1OMGFXOXVLRzl3ZEdsdmJuTXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCMGFHbHpMbVZoWTJnb1puVnVZM1JwYjI0Z0tDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFpoY2lBa2RHaHBjeUE5SUNRb2RHaHBjeWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkhSb2FYTXVaR0YwWVNnbmQzbHphV2gwYld3MUp5d2dibVYzSUZkNWMybG9kRzFzTlNna2RHaHBjeXdnYjNCMGFXOXVjeWtwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lITm9ZV3hzYjNkRmVIUmxibVE2SUdaMWJtTjBhVzl1SUNodmNIUnBiMjV6S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0IyWVhJZ2MyVjBkR2x1WjNNZ1BTQWtMbVY0ZEdWdVpDaDdmU3dnSkM1bWJpNTNlWE5wYUhSdGJEVXVaR1ZtWVhWc2RFOXdkR2x2Ym5Nc0lHOXdkR2x2Ym5NZ2ZId2dlMzBzSUNRb2RHaHBjeWt1WkdGMFlTZ3BLVHRjYmlBZ0lDQWdJQ0FnSUNBZ0lIWmhjaUIwYUdGMElEMGdkR2hwY3p0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpsZEhWeWJpQnRaWFJvYjJSekxtSjVjR0Z6YzBSbFptRjFiSFJ6TG1Gd2NHeDVLSFJvWVhRc0lGdHpaWFIwYVc1bmMxMHBPMXh1SUNBZ0lDQWdJQ0I5TEZ4dUlDQWdJQ0FnSUNCa1pXVndSWGgwWlc1a09pQm1kVzVqZEdsdmJpaHZjSFJwYjI1ektTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNCMllYSWdjMlYwZEdsdVozTWdQU0FrTG1WNGRHVnVaQ2gwY25WbExDQjdmU3dnSkM1bWJpNTNlWE5wYUhSdGJEVXVaR1ZtWVhWc2RFOXdkR2x2Ym5Nc0lHOXdkR2x2Ym5NZ2ZId2dlMzBwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdkbUZ5SUhSb1lYUWdQU0IwYUdsek8xeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzFsZEdodlpITXVZbmx3WVhOelJHVm1ZWFZzZEhNdVlYQndiSGtvZEdoaGRDd2dXM05sZEhScGJtZHpYU2s3WEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lHbHVhWFE2SUdaMWJtTjBhVzl1S0c5d2RHbHZibk1wSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJSFpoY2lCMGFHRjBJRDBnZEdocGN6dGNiaUFnSUNBZ0lDQWdJQ0FnSUhKbGRIVnliaUJ0WlhSb2IyUnpMbk5vWVd4c2IzZEZlSFJsYm1RdVlYQndiSGtvZEdoaGRDd2dXMjl3ZEdsdmJuTmRLVHRjYmlBZ0lDQWdJQ0FnZlZ4dUlDQWdJSDA3WEc1Y2JpQWdJQ0FrTG1adUxuZDVjMmxvZEcxc05TQTlJR1oxYm1OMGFXOXVJQ2dnYldWMGFHOWtJQ2tnZTF4dUlDQWdJQ0FnSUNCcFppQW9JRzFsZEdodlpITmJiV1YwYUc5a1hTQXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lISmxkSFZ5YmlCdFpYUm9iMlJ6VzIxbGRHaHZaRjB1WVhCd2JIa29JSFJvYVhNc0lFRnljbUY1TG5CeWIzUnZkSGx3WlM1emJHbGpaUzVqWVd4c0tDQmhjbWQxYldWdWRITXNJREVnS1NrN1hHNGdJQ0FnSUNBZ0lIMGdaV3h6WlNCcFppQW9JSFI1Y0dWdlppQnRaWFJvYjJRZ1BUMDlJQ2R2WW1wbFkzUW5JSHg4SUNFZ2JXVjBhRzlrSUNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnY21WMGRYSnVJRzFsZEdodlpITXVhVzVwZEM1aGNIQnNlU2dnZEdocGN5d2dZWEpuZFcxbGJuUnpJQ2s3WEc0Z0lDQWdJQ0FnSUgwZ1pXeHpaU0I3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWtMbVZ5Y205eUtDQW5UV1YwYUc5a0lDY2dLeUFnYldWMGFHOWtJQ3NnSnlCa2IyVnpJRzV2ZENCbGVHbHpkQ0J2YmlCcVVYVmxjbmt1ZDNsemFXaDBiV3cxSnlBcE8xeHVJQ0FnSUNBZ0lDQjlYRzRnSUNBZ2ZUdGNibHh1SUNBZ0lDUXVabTR1ZDNsemFXaDBiV3cxTGtOdmJuTjBjblZqZEc5eUlEMGdWM2x6YVdoMGJXdzFPMXh1WEc0Z0lDQWdkbUZ5SUdSbFptRjFiSFJQY0hScGIyNXpJRDBnSkM1bWJpNTNlWE5wYUhSdGJEVXVaR1ZtWVhWc2RFOXdkR2x2Ym5NZ1BTQjdYRzRnSUNBZ0lDQWdJQzhxSUVSdmJtNWhJRk4wWVhKMElDMGdSR1ZtYVc1bGN5QnZjbVJsY2lCdlppQjBiMjlzWW1GeUlHbGpiMjV6TGlBcUwxeHVJQ0FnSUNBZ0lDQmNJbVp2Ym5SY0lqb2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ1hDSm1iMjUwTFhOcGVtVmNJam9nZEhKMVpTeGNiaUFnSUNBZ0lDQWdYQ0psYlhCb1lYTnBjMXdpT2lCMGNuVmxMRnh1SUNBZ0lDQWdJQ0JjSW1Gc2FXZHViV1Z1ZEZ3aU9pQjBjblZsTEZ4dUlDQWdJQ0FnSUNCY0lteHBibVV0YUdWcFoyaDBYQ0k2SUhSeWRXVXNYRzRnSUNBZ0lDQWdJRndpYUdsbmFHeHBaMmgwTFdOdmJHOXlYQ0k2SUhSeWRXVXNYRzRnSUNBZ0lDQWdJRndpZEdWNGRDMWpiMnh2Y2x3aU9pQjBjblZsTEZ4dUlDQWdJQ0FnSUNCY0ltSmhZMnRuY205MWJtUXRZMjlzYjNKY0lqb2dkSEoxWlN4Y2JpQWdJQ0FnSUNBZ1hDSmpiR1ZoY2x3aU9pQjBjblZsTEZ4dUlDQWdJQ0FnSUNCY0ltTnZiRzl5WENJNklHWmhiSE5sTEZ4dUlDQWdJQ0FnSUNCY0ltWnZiblF0YzNSNWJHVnpYQ0k2SUdaaGJITmxMRnh1SUNBZ0lDQWdJQ0JjSW1oMGJXeGNJam9nWm1Gc2MyVXNYRzRnSUNBZ0lDQWdJRndpYVcxaFoyVmNJam9nWm1Gc2MyVXNYRzRnSUNBZ0lDQWdJRndpYkdsdWExd2lPaUJtWVd4elpTeGNiaUFnSUNBZ0lDQWdYQ0pzYVhOMGMxd2lPaUJtWVd4elpTeGNiaUFnSUNBZ0lDQWdYQ0p6YVhwbFhDSTZJQ2R6YlNjc1hHNGdJQ0FnSUNBZ0lDOHFJRVJ2Ym01aElFVnVaQ0FxTDF4dUlDQWdJQ0FnSUNCbGRtVnVkSE02SUh0OUxGeHVJQ0FnSUNBZ0lDQndZWEp6WlhKU2RXeGxjem9nZTF4dUlDQWdJQ0FnSUNBZ0lDQWdZMnhoYzNObGN6b2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUNod1lYUm9YM1J2WDNCeWIycGxZM1F2YkdsaUwyTnpjeTlpYjI5MGMzUnlZWEF6TFhkNWMybDNlV2MxTFdOdmJHOXlMbU56Y3lsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0luZDVjMmwzZVdjdFkyOXNiM0l0YzJsc2RtVnlYQ0lnT2lBeExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lkM2x6YVhkNVp5MWpiMnh2Y2kxbmNtRjVYQ0lnT2lBeExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lkM2x6YVhkNVp5MWpiMnh2Y2kxM2FHbDBaVndpSURvZ01TeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJbmQ1YzJsM2VXY3RZMjlzYjNJdGJXRnliMjl1WENJZ09pQXhMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpZDNsemFYZDVaeTFqYjJ4dmNpMXlaV1JjSWlBNklERXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0ozZVhOcGQzbG5MV052Ykc5eUxYQjFjbkJzWlZ3aUlEb2dNU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSW5kNWMybDNlV2N0WTI5c2IzSXRablZqYUhOcFlWd2lJRG9nTVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0luZDVjMmwzZVdjdFkyOXNiM0l0WjNKbFpXNWNJaUE2SURFc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSjNlWE5wZDNsbkxXTnZiRzl5TFd4cGJXVmNJaUE2SURFc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSjNlWE5wZDNsbkxXTnZiRzl5TFc5c2FYWmxYQ0lnT2lBeExGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lkM2x6YVhkNVp5MWpiMnh2Y2kxNVpXeHNiM2RjSWlBNklERXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0ozZVhOcGQzbG5MV052Ykc5eUxXNWhkbmxjSWlBNklERXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0ozZVhOcGQzbG5MV052Ykc5eUxXSnNkV1ZjSWlBNklERXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0ozZVhOcGQzbG5MV052Ykc5eUxYUmxZV3hjSWlBNklERXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0ozZVhOcGQzbG5MV052Ykc5eUxXRnhkV0ZjSWlBNklERXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0ozZVhOcGQzbG5MV052Ykc5eUxXOXlZVzVuWlZ3aUlEb2dNU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F2S2lCRWIyNXVZU0JUZEdGeWRDQXRJRUZzYVdkdWJXVnVkQ0FxTDF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVlXeHBaMjR0YkdWbWRGd2lJRG9nTVN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0ltRnNhV2R1TFdObGJuUmxjbHdpSURvZ01TeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJbUZzYVdkdUxYSnBaMmgwWENJZ09pQXhMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpYW5WemRHbG1lVndpSURvZ01TeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXZLaUJFYjI1dVlTQkZibVFnS2k5Y2JpQWdJQ0FnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQjBZV2R6T2lCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSmlYQ0k2SUNCN2ZTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJbWxjSWpvZ0lIdDlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpWW5KY0lqb2dlMzBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENKdmJGd2lPaUI3ZlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0luVnNYQ0k2SUh0OUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2liR2xjSWpvZ2UzMHNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0pvTVZ3aU9pQjdmU3hjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSW1neVhDSTZJSHQ5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aWFETmNJam9nZTMwc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSm9ORndpT2lCN2ZTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJbWcxWENJNklIdDlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpYURaY0lqb2dlMzBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENKaWJHOWphM0YxYjNSbFhDSTZJSHQ5TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aWRWd2lPaUF4TEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aWFXMW5YQ0k2SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0pqYUdWamExOWhkSFJ5YVdKMWRHVnpYQ0k2SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aWQybGtkR2hjSWpvZ1hDSnVkVzFpWlhKelhDSXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJbUZzZEZ3aU9pQmNJbUZzZEZ3aUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSnpjbU5jSWpvZ1hDSjFjbXhjSWl4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aWFHVnBaMmgwWENJNklGd2liblZ0WW1WeWMxd2lYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lZVndpT2lBZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYUdWamExOWhkSFJ5YVdKMWRHVnpPaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FuYUhKbFppYzZJRndpZFhKc1hDSXNJQzh2SUdsdGNHOXlkR0Z1ZENCMGJ5QmhkbTlwWkNCWVUxTmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDZDBZWEpuWlhRbk9pQW5ZV3gwSnl4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNkeVpXd25PaUFuWVd4MEoxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0luTndZVzVjSWpvZ01TeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJbVJwZGx3aU9pQXhMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUhSdklHRnNiRzkzSUhOaGRtVWdZVzVrSUdWa2FYUWdabWxzWlhNZ2QybDBhQ0JqYjJSbElIUmhaeUJvWVdOcmMxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lZMjlrWlZ3aU9pQXhMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpY0hKbFhDSTZJREZjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdmU3hjYmlBZ0lDQWdJQ0FnYzNSNWJHVnphR1ZsZEhNNklGdGNJaTR2WTNOekwySnZiM1J6ZEhKaGNETXRkM2x6YVhkNVp6VXRZMjlzYjNJdVkzTnpYQ0pkTENBdkx5QW9jR0YwYUY5MGIxOXdjbTlxWldOMEwyeHBZaTlqYzNNdlltOXZkSE4wY21Gd015MTNlWE5wZDNsbk5TMWpiMnh2Y2k1amMzTXBYRzRnSUNBZ0lDQWdJR3h2WTJGc1pUb2dYQ0psYmx3aVhHNGdJQ0FnZlR0Y2JseHVJQ0FnSUdsbUlDaDBlWEJsYjJZZ0pDNW1iaTUzZVhOcGFIUnRiRFV1WkdWbVlYVnNkRTl3ZEdsdmJuTkRZV05vWlNBOVBUMGdKM1Z1WkdWbWFXNWxaQ2NwSUh0Y2JpQWdJQ0FnSUNBZ0pDNW1iaTUzZVhOcGFIUnRiRFV1WkdWbVlYVnNkRTl3ZEdsdmJuTkRZV05vWlNBOUlDUXVaWGgwWlc1a0tIUnlkV1VzSUh0OUxDQWtMbVp1TG5kNWMybG9kRzFzTlM1a1pXWmhkV3gwVDNCMGFXOXVjeWs3WEc0Z0lDQWdmVnh1WEc0Z0lDQWdkbUZ5SUd4dlkyRnNaU0E5SUNRdVptNHVkM2x6YVdoMGJXdzFMbXh2WTJGc1pTQTlJSHRjYmlBZ0lDQWdJQ0FnWlc0NklIdGNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUmZjM1I1YkdWek9pQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdibTl5YldGc09pQmNJazV2Y20xaGJDQjBaWGgwWENJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FERTZJRndpU0dWaFpHbHVaeUF4WENJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FESTZJRndpU0dWaFpHbHVaeUF5WENJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FETTZJRndpU0dWaFpHbHVaeUF6WENJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FEUTZJRndpU0dWaFpHbHVaeUEwWENJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FEVTZJRndpU0dWaFpHbHVaeUExWENJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FEWTZJRndpU0dWaFpHbHVaeUEyWENKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQmxiWEJvWVhOcGN6b2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0p2YkdRNklGd2lRbTlzWkZ3aUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHbDBZV3hwWXpvZ1hDSkpkR0ZzYVdOY0lpeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjFibVJsY214cGJtVTZJRndpVlc1a1pYSnNhVzVsWENKY2JpQWdJQ0FnSUNBZ0lDQWdJSDBzWEc0Z0lDQWdJQ0FnSUNBZ0lDQnNhWE4wY3pvZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIVnViM0prWlhKbFpEb2dYQ0pWYm05eVpHVnlaV1FnYkdsemRGd2lMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRzl5WkdWeVpXUTZJRndpVDNKa1pYSmxaQ0JzYVhOMFhDSXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiM1YwWkdWdWREb2dYQ0pQZFhSa1pXNTBYQ0lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1a1pXNTBPaUJjSWtsdVpHVnVkRndpWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ2JHbHVhem9nZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsdWMyVnlkRG9nWENKSmJuTmxjblFnYkdsdWExd2lMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYm1ObGJEb2dYQ0pEWVc1alpXeGNJaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwWVhKblpYUTZJRndpVDNCbGJpQnNhVzVySUdsdUlHNWxkeUIzYVc1a2IzZGNJbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdJQ0FnSUdsdFlXZGxPaUI3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVc1elpYSjBPaUJjSWtsdWMyVnlkQ0JwYldGblpWd2lMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05oYm1ObGJEb2dYQ0pEWVc1alpXeGNJbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTeGNiaUFnSUNBZ0lDQWdJQ0FnSUdoMGJXdzZJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JsWkdsME9pQmNJa1ZrYVhRZ1NGUk5URndpWEc0Z0lDQWdJQ0FnSUNBZ0lDQjlMRnh1SUNBZ0lDQWdJQ0FnSUNBZ1kyOXNiM1Z5Y3pvZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHSnNZV05yT2lCY0lrSnNZV05yWENJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MybHNkbVZ5T2lCY0lsTnBiSFpsY2x3aUxGeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHZHlZWGs2SUZ3aVIzSmxlVndpTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGNtOXZiam9nWENKTllYSnZiMjVjSWl4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeVpXUTZJRndpVW1Wa1hDSXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjSFZ5Y0d4bE9pQmNJbEIxY25Cc1pWd2lMRnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2R5WldWdU9pQmNJa2R5WldWdVhDSXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiMnhwZG1VNklGd2lUMnhwZG1WY0lpeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnVZWFo1T2lCY0lrNWhkbmxjSWl4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCaWJIVmxPaUJjSWtKc2RXVmNJaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J2Y21GdVoyVTZJRndpVDNKaGJtZGxYQ0pjYmlBZ0lDQWdJQ0FnSUNBZ0lIMHNYRzRnSUNBZ0lDQWdJQ0FnSUNBdktpQkViMjV1WVNCVGRHRnlkQ0FxTDF4dUlDQWdJQ0FnSUNBZ0lDQWdiR2x1WlY5b1pXbG5hSFE2SUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCemFXNW5iR1U2SUZ3aVUybHVaMnhsWENJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1pHOTFZbXhsT2lCY0lrUnZkV0pzWlZ3aVhHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZLaUJFYjI1dVlTQkZibVFnS2k5Y2JpQWdJQ0FnSUNBZ2ZWeHVJQ0FnSUgwN1hHNWNibjBvZDJsdVpHOTNMbXBSZFdWeWVTd2dkMmx1Wkc5M0xuZDVjMmxvZEcxc05TazdYRzRpWFN3aWMyOTFjbU5sVW05dmRDSTZJaTl6YjNWeVkyVXZJbjA9XG4hZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjthbmd1bGFyLm1vZHVsZShcInJpc2V2aXNpb24ud2lkZ2V0LmNvbW1vbi53eXNpaHRtbDVcIixbXSkuZGlyZWN0aXZlKFwid3lzaWh0bWw1XCIsZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsbil7dmFyIG09bnVsbCxnPW51bGw7JChuKS53eXNpaHRtbDUoe3N0eWxlc2hlZXRzOnQuc3R5bGVzaGVldHN9KSxhPSQoXCIuZm9udC1waWNrZXJcIiksaT0kKFwiLmJhY2tncm91bmQtY29sb3JcIiksbD0kKFwiLnRleHQtY29sb3JcIikscj0kKFwiLmhpZ2hsaWdodC1jb2xvclwiKSxkPSQoXCIjZWRpdGFibGVcIikuZGF0YShcInd5c2lodG1sNVwiKS5lZGl0b3IsdC4kb24oXCJsb2FkQWRkaXRpb25hbFBhcmFtc1wiLGZ1bmN0aW9uKHQsbyl7dT0hMCxjPW8sZC5zZXRWYWx1ZShvLmRhdGEpLG8uYmFja2dyb3VuZCYmKG09dGlueWNvbG9yKG8uYmFja2dyb3VuZCksZz1tLnRvUmdiKCksaS5zcGVjdHJ1bShcInNldFwiLG0pLGQuY29tcG9zZXIuY29tbWFuZHMuZXhlYyhcImJhY2tncm91bmRDb2xvclwiLGcsW3tuYW1lOlwiZGF0YS1iYWNrZ3JvdW5kLWNvbG9yXCIsdmFsdWU6bS50b1JnYlN0cmluZygpfV0pKSxlKCl9KSx0LiRvbihcImNvbGxlY3RBZGRpdGlvbmFsUGFyYW1zXCIsZnVuY3Rpb24oKXttPWQuY29tcG9zZXIuZG9jLmJvZHkuZ2V0QXR0cmlidXRlKFwiZGF0YS1iYWNrZ3JvdW5kLWNvbG9yXCIpLHQuJHBhcmVudC5zZXRBZGRpdGlvbmFsUGFyYW0oXCJkYXRhXCIsZC5nZXRWYWx1ZSgpKSx0LiRwYXJlbnQuc2V0QWRkaXRpb25hbFBhcmFtKFwiYmFja2dyb3VuZFwiLG0/bTpcIlwiKX0pLGQub24oXCJsb2FkXCIsZnVuY3Rpb24oKXtzPSEwLG8oKSxlKCl9KX1mdW5jdGlvbiBlKCl7dmFyIHQsZSxvLG4saTtzJiZ1JiYkLmVhY2goJChcIjxkaXYvPlwiKS5odG1sKGMuZGF0YSkuZmluZChcInNwYW5cIikuYWRkQmFjaygpLGZ1bmN0aW9uKCl7bz0kKHRoaXMpLmF0dHIoXCJkYXRhLXN0YW5kYXJkLWZvbnRcIiksbj0kKHRoaXMpLmF0dHIoXCJkYXRhLWdvb2dsZS1mb250XCIpLGk9JCh0aGlzKS5hdHRyKFwiZGF0YS1jdXN0b20tZm9udFwiKSx0PSQodGhpcykuYXR0cihcImRhdGEtdGV4dC1jb2xvclwiKSxlPSQodGhpcykuYXR0cihcImRhdGEtaGlnaGxpZ2h0LWNvbG9yXCIpLG8mJmQuY29tcG9zZXIuY29tbWFuZHMuZXhlYyhcInN0YW5kYXJkRm9udFwiLG8sJCh0aGlzKS5hdHRyKFwiZGF0YS1zdGFuZGFyZC1mb250LWZhbWlseVwiKSksbiYmKGEuZGF0YShcInBsdWdpbl9mb250UGlja2VyXCIpLmFkZEdvb2dsZUZvbnQobiwhMSksZC5jb21wb3Nlci5jb21tYW5kcy5leGVjKFwiZ29vZ2xlRm9udFwiLG4pKSxpJiYoUmlzZVZpc2lvbi5Db21tb24uVXRpbGl0aWVzLmxvYWRDdXN0b21Gb250KGksJCh0aGlzKS5hdHRyKFwiZGF0YS1jdXN0b20tZm9udC11cmxcIiksZC5jb21wb3Nlci5pZnJhbWUuY29udGVudERvY3VtZW50KSxkLmNvbXBvc2VyLmNvbW1hbmRzLmV4ZWMoXCJjdXN0b21Gb250XCIsaSwkKHRoaXMpLmF0dHIoXCJkYXRhLWN1c3RvbS1mb250LXVybFwiKSkpLHQmJihsLnNwZWN0cnVtKFwic2V0XCIsdCksZC5jb21wb3Nlci5jb21tYW5kcy5leGVjKFwidGV4dENvbG9yXCIsbC5zcGVjdHJ1bShcImdldFwiKS50b1JnYigpKSksZSYmKHIuc3BlY3RydW0oXCJzZXRcIixlKSxkLmNvbXBvc2VyLmNvbW1hbmRzLmV4ZWMoXCJoaWdobGlnaHRDb2xvclwiLHIuc3BlY3RydW0oXCJnZXRcIikudG9SZ2IoKSkpfSl9ZnVuY3Rpb24gbygpe3ZhciB0PW51bGwsZT1udWxsLG89ITEsaT0hMSxjPSExLHM9XCJcIix1PVwiXCIsbT1cIlwiLGc9XCJcIixwPVwiXCIsaD1cIlwiLGY9JChcIi5lbXBoYXNpc1wiKSx5PSQoXCIuZm9udC1zaXplLXBpY2tlclwiKSxiPSQoXCIuYWxpZ25tZW50XCIpOyQoXCIuZm9udC1waWNrZXJcIikub24oXCJzaG93LmJmaHNlbGVjdGJveFwiLGZ1bmN0aW9uKCl7bigpfSksJChcIi5mb250LXNpemUtcGlja2VyLCAubGluZS1oZWlnaHQsIC5hbGlnbm1lbnRcIikub24oXCJzaG93LmJzLmRyb3Bkb3duXCIsZnVuY3Rpb24oKXtuKCl9KSwkKFwiLnRleHQtY29sb3IsIC5oaWdobGlnaHQtY29sb3IsIC5iYWNrZ3JvdW5kLWNvbG9yXCIpLm9uKFwiYmVmb3JlU2hvd1wiLGZ1bmN0aW9uKCl7bigpfSksJChcIi53eXNpaHRtbDUtc2FuZGJveFwiKS5jb250ZW50cygpLmZpbmQoXCJib2R5XCIpLm9uKFwiY2xpY2tcIixmdW5jdGlvbigpe24oKSx0PWQuY29tcG9zZXIuc2VsZWN0aW9uLmdldFNlbGVjdGVkTm9kZSgpLHQmJjM9PT10Lm5vZGVUeXBlJiYoZT10LnBhcmVudE5vZGUsZSYmMT09PWUubm9kZVR5cGUmJihcImJvZHlcIiE9PWUudGFnTmFtZS50b0xvd2VyQ2FzZSgpPyhvPVwiYm9sZFwiPT09d2luZG93LmdldENvbXB1dGVkU3R5bGUoZSxudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKFwiZm9udC13ZWlnaHRcIik/ITA6ITEsaT1cIml0YWxpY1wiPT09d2luZG93LmdldENvbXB1dGVkU3R5bGUoZSxudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKFwiZm9udC1zdHlsZVwiKT8hMDohMSxjPS0xIT09d2luZG93LmdldENvbXB1dGVkU3R5bGUoZSxudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKFwidGV4dC1kZWNvcmF0aW9uXCIpLmluZGV4T2YoXCJ1bmRlcmxpbmVcIik/ITA6ITEsZi5kYXRhKFwicGx1Z2luX2ZvbnRTdHlsZVwiKS5zZXRTdHlsZXMoe2JvbGQ6byxpdGFsaWM6aSx1bmRlcmxpbmU6Y30pLHM9d2luZG93LmdldENvbXB1dGVkU3R5bGUoZSxudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKFwiZm9udC1mYW1pbHlcIikscyYmYS5kYXRhKFwicGx1Z2luX2ZvbnRQaWNrZXJcIikuc2V0Rm9udChzKSx1PXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGUsbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShcImZvbnQtc2l6ZVwiKSx1JiZ5LmRhdGEoXCJwbHVnaW5fZm9udFNpemVQaWNrZXJcIikuc2V0Rm9udFNpemUodSksbT13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlLG51bGwpLmdldFByb3BlcnR5VmFsdWUoXCJ0ZXh0LWFsaWduXCIpLG09LTE9PT0kLmluQXJyYXkobSxbXCJsZWZ0XCIsXCJjZW50ZXJcIixcInJpZ2h0XCIsXCJqdXN0aWZ5XCJdKT9cImxlZnRcIjptLG0mJmIuZGF0YShcInBsdWdpbl9hbGlnbm1lbnRcIikuc2V0QWxpZ25tZW50KG0pLGc9JChlKS5kYXRhKFwibGluZS1oZWlnaHRcIik/JChlKS5kYXRhKFwibGluZS1oZWlnaHRcIik6MSwkKFwiLmxpbmUtaGVpZ2h0IGJ1dHRvblwiKS5kYXRhKFwid3lzaWh0bWw1LWNvbW1hbmQtdmFsdWVcIixnKSxwPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGUsbnVsbCkuZ2V0UHJvcGVydHlWYWx1ZShcImNvbG9yXCIpLGg9d2luZG93LmdldENvbXB1dGVkU3R5bGUoZSxudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKFwiYmFja2dyb3VuZC1jb2xvclwiKSxwJiZsLnNwZWN0cnVtKFwic2V0XCIscCksaCYmci5zcGVjdHJ1bShcInNldFwiLGgpKTooYS5kYXRhKFwicGx1Z2luX2ZvbnRQaWNrZXJcIikucmVzZXQoKSx5LmRhdGEoXCJwbHVnaW5fZm9udFNpemVQaWNrZXJcIikucmVzZXQoKSxmLmRhdGEoXCJwbHVnaW5fZm9udFN0eWxlXCIpLnJlc2V0KCksYi5kYXRhKFwicGx1Z2luX2FsaWdubWVudFwiKS5yZXNldCgpLCQoXCIubGluZS1oZWlnaHQgYnV0dG9uXCIpLmRhdGEoXCJ3eXNpaHRtbDUtY29tbWFuZC12YWx1ZVwiLFwiMVwiKSxsLnNwZWN0cnVtKFwic2V0XCIsXCIjMDAwXCIpLHIuc3BlY3RydW0oXCJzZXRcIixcIiNmZmZcIikpKSl9KX1mdW5jdGlvbiBuKCl7JChcIi5vcGVuLmFsaWdubWVudCwgLmZvbnQtcGlja2VyIC5vcGVuLmJmaC1zZWxlY3Rib3gsIC5mb250LXNpemUtcGlja2VyIC5vcGVuLmJmaC1mb250c2l6ZXMsIC5vcGVuLmxpbmUtaGVpZ2h0XCIpLnJlbW92ZUNsYXNzKFwib3BlblwiKSwkKFwiLnRleHQtY29sb3JcIikuc3BlY3RydW0oXCJoaWRlXCIpLCQoXCIuaGlnaGxpZ2h0LWNvbG9yXCIpLnNwZWN0cnVtKFwiaGlkZVwiKSwkKFwiLmJhY2tncm91bmQtY29sb3JcIikuc3BlY3RydW0oXCJoaWRlXCIpfXZhciBhLGksbCxyLGMsZD1udWxsLHM9ITEsdT0hMTtyZXR1cm57cmVzdHJpY3Q6XCJBXCIsc2NvcGU6e3N0eWxlc2hlZXRzOlwiPVwiLGJhY2tncm91bmQ6XCI9XCIsZGF0YTpcIj1cIn0sbGluazp0fX0pfSgpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltUjBkaTFpYjI5MGMzUnlZWEF6TFhkNWMybG9kRzFzTlM1cWN5SmRMQ0p1WVcxbGN5STZXeUpoYm1kMWJHRnlJaXdpYlc5a2RXeGxJaXdpWkdseVpXTjBhWFpsSWl3aWJHbHVheUlzSWlSelkyOXdaU0lzSW1Wc1pXMWxiblFpTENKaVlXTnJaM0p2ZFc1a1EyOXNiM0lpTENKeVoySmhJaXdpSkNJc0luZDVjMmxvZEcxc05TSXNJbk4wZVd4bGMyaGxaWFJ6SWl3aUpHWnZiblJRYVdOclpYSWlMQ0lrWW1GamEyZHliM1Z1WkVOdmJHOXlJaXdpSkhSbGVIUkRiMnh2Y2lJc0lpUm9hV2RvYkdsbmFIUkRiMnh2Y2lJc0ltVmthWFJ2Y2lJc0ltUmhkR0VpTENJa2IyNGlMQ0psSWl3aVlXUmthWFJwYjI1aGJGQmhjbUZ0Y3lJc0ltbHpVR0Z5WVcxelRHOWhaR1ZrSWl3aWNHRnlZVzF6SWl3aWMyVjBWbUZzZFdVaUxDSmlZV05yWjNKdmRXNWtJaXdpZEdsdWVXTnZiRzl5SWl3aWRHOVNaMklpTENKemNHVmpkSEoxYlNJc0ltTnZiWEJ2YzJWeUlpd2lZMjl0YldGdVpITWlMQ0psZUdWaklpd2libUZ0WlNJc0luWmhiSFZsSWl3aWRHOVNaMkpUZEhKcGJtY2lMQ0pwYm1sMFJXUnBkRzl5SWl3aVpHOWpJaXdpWW05a2VTSXNJbWRsZEVGMGRISnBZblYwWlNJc0lpUndZWEpsYm5RaUxDSnpaWFJCWkdScGRHbHZibUZzVUdGeVlXMGlMQ0puWlhSV1lXeDFaU0lzSW05dUlpd2lhWE5GWkdsMGIzSk1iMkZrWldRaUxDSmlhVzVrSWl3aWRHVjRkRU52Ykc5eUlpd2lhR2xuYUd4cFoyaDBRMjlzYjNJaUxDSnpkR0Z1WkdGeVpFWnZiblFpTENKbmIyOW5iR1ZHYjI1MElpd2lZM1Z6ZEc5dFJtOXVkQ0lzSW1WaFkyZ2lMQ0pvZEcxc0lpd2labWx1WkNJc0ltRmtaRUpoWTJzaUxDSjBhR2x6SWl3aVlYUjBjaUlzSW1Ga1pFZHZiMmRzWlVadmJuUWlMQ0pTYVhObFZtbHphVzl1SWl3aVEyOXRiVzl1SWl3aVZYUnBiR2wwYVdWeklpd2liRzloWkVOMWMzUnZiVVp2Ym5RaUxDSnBabkpoYldVaUxDSmpiMjUwWlc1MFJHOWpkVzFsYm5RaUxDSnViMlJsSWl3aWNHRnlaVzUwVG05a1pTSXNJbWx6UW05c1pDSXNJbWx6U1hSaGJHbGpJaXdpYVhOVmJtUmxjbXhwYm1VaUxDSm1iMjUwSWl3aVptOXVkRk5wZW1VaUxDSmhiR2xuYm0xbGJuUWlMQ0pzYVc1bFNHVnBaMmgwSWl3aVkyOXNiM0lpTENJa1ptOXVkRk4wZVd4bElpd2lKR1p2Ym5SVGFYcGxVR2xqYTJWeUlpd2lKR0ZzYVdkdWJXVnVkQ0lzSW1Oc2IzTmxSSEp2Y0dSdmQyNXpJaXdpWTI5dWRHVnVkSE1pTENKelpXeGxZM1JwYjI0aUxDSm5aWFJUWld4bFkzUmxaRTV2WkdVaUxDSnViMlJsVkhsd1pTSXNJblJoWjA1aGJXVWlMQ0owYjB4dmQyVnlRMkZ6WlNJc0luZHBibVJ2ZHlJc0ltZGxkRU52YlhCMWRHVmtVM1I1YkdVaUxDSm5aWFJRY205d1pYSjBlVlpoYkhWbElpd2lhVzVrWlhoUFppSXNJbk5sZEZOMGVXeGxjeUlzSW1KdmJHUWlMQ0pwZEdGc2FXTWlMQ0oxYm1SbGNteHBibVVpTENKelpYUkdiMjUwSWl3aWMyVjBSbTl1ZEZOcGVtVWlMQ0pwYmtGeWNtRjVJaXdpYzJWMFFXeHBaMjV0Wlc1MElpd2ljbVZ6WlhRaUxDSnlaVzF2ZG1WRGJHRnpjeUlzSW5KbGMzUnlhV04wSWl3aWMyTnZjR1VpWFN3aWJXRndjR2x1WjNNaU9pSkRRVVZETEZkQlEwTXNXVUZGUVVFc1UwRkJVVU1zVDBGQlR5eDVRMEZEV2tNc1ZVRkJWU3haUVVGaExGZEJUWFJDTEZGQlFWTkRMRWRCUVV0RExFVkJRVkZETEVkQlEzQkNMRWRCUVVsRExFZEJRV3RDTEV0QlFVMURMRVZCUVU4c1NVRkZia05ETEVkQlFVVklMRWRCUVZOSkxGZEJRMVJETEZsQlFXVk9MRVZCUVU5TkxHTkJSM2hDUXl4RlFVRmpTQ3hGUVVGRkxHZENRVU5vUWtrc1JVRkJiVUpLTEVWQlFVVXNjVUpCUTNKQ1N5eEZRVUZoVEN4RlFVRkZMR1ZCUTJaTkxFVkJRV3RDVGl4RlFVRkZMRzlDUVVOd1FrOHNSVUZCVTFBc1JVRkJSU3hoUVVGaFVTeExRVUZMTEdGQlFXRkVMRTlCUnpGRFdDeEZRVUZQWVN4SlFVRkpMSFZDUVVGM1FpeFRRVUZWUXl4RlFVRkhReXhIUVVNNVEwTXNSMEZCYVVJc1JVRkRha0pETEVWQlFWTkdMRVZCUlZSS0xFVkJRVTlQTEZOQlFWTklMRVZCUVdsQ1NDeE5RVWMzUWtjc1JVRkJhVUpKTEdGQlEyNUNha0lzUlVGQmEwSnJRaXhWUVVGVlRDeEZRVUZwUWtrc1dVRkROME5vUWl4RlFVRlBSQ3hGUVVGblFtMUNMRkZCUlhaQ1lpeEZRVUZwUW1Nc1UwRkJVeXhOUVVGUGNFSXNSMEZGYWtOVExFVkJRVTlaTEZOQlFWTkRMRk5CUVZORExFdEJRVXNzYTBKQlFXMUNkRUlzU1VGRE4wTjFRaXhMUVVGTkxIZENRVU5PUXl4TlFVRlBla0lzUlVGQlowSXdRaXhyUWtGSk4wSkRMRTFCUjBZM1FpeEZRVUZQWVN4SlFVRkpMREJDUVVFeVFpeFhRVU53UTFnc1JVRkJhMEpUTEVWQlFVOVpMRk5CUVZOUExFbEJRVWxETEV0QlEyNURReXhoUVVGaExIbENRVVZvUW1oRExFVkJRVTlwUXl4UlFVRlJReXh0UWtGQmJVSXNUMEZCVVhaQ0xFVkJRVTkzUWl4WlFVTnFSRzVETEVWQlFVOXBReXhSUVVGUlF5eHRRa0ZCYlVJc1lVRkRhRU5vUXl4RlFVRnJRa0VzUlVGQmEwSXNUVUZIZUVOVExFVkJRVTk1UWl4SFFVRkhMRTlCUVZFc1YwRkRhRUpETEVkQlFXbENMRVZCUTJwQ1F5eEpRVU5CVkN4TlFVbEtMRkZCUVZOQkxFdEJRMUFzUjBGQlNWVXNSMEZCVjBNc1JVRkRXRU1zUlVGQlkwTXNSVUZCV1VNc1EwRkZNVUpPTEVsQlFXdENja0lzUjBGRGNFSmFMRVZCUVVWM1F5eExRVUZMZUVNc1JVRkJSU3hWUVVGVmVVTXNTMEZCU3pWQ0xFVkJRVTlNTEUxQlFVMXJReXhMUVVGTExGRkJRVkZETEZWQlFWY3NWMEZETTBST0xFVkJRV1Z5UXl4RlFVRkZORU1zVFVGQlRVTXNTMEZCU3l4elFrRkROVUpRTEVWQlFXRjBReXhGUVVGRk5FTXNUVUZCVFVNc1MwRkJTeXh2UWtGRE1VSk9MRVZCUVdGMlF5eEZRVUZGTkVNc1RVRkJUVU1zUzBGQlN5eHZRa0ZETVVKV0xFVkJRVmx1UXl4RlFVRkZORU1zVFVGQlRVTXNTMEZCU3l4dFFrRkRla0pVTEVWQlFXbENjRU1zUlVGQlJUUkRMRTFCUVUxRExFdEJRVXNzZDBKQlJ6RkNVaXhIUVVOR09VSXNSVUZCVDFrc1UwRkJVME1zVTBGQlUwTXNTMEZCU3l4bFFVRm5RbWRDTEVWQlF6VkRja01zUlVGQlJUUkRMRTFCUVUxRExFdEJRVXNzT0VKQlNXSlFMRWxCUTBadVF5eEZRVUZaU3l4TFFVRkxMSEZDUVVOa2MwTXNZMEZCWTFJc1IwRkJXU3hIUVVrM1FpOUNMRVZCUVU5WkxGTkJRVk5ETEZOQlFWTkRMRXRCUVVzc1lVRkJZMmxDTEVsQlNURkRReXhKUVVOR1VTeFhRVUZYUXl4UFFVRlBReXhWUVVGVlF5eGxRVUZsV0N4RlFVTjZRM1pETEVWQlFVVTBReXhOUVVGTlF5eExRVUZMTEhkQ1FVTmlkRU1zUlVGQlQxa3NVMEZCVTJkRExFOUJRVTlETEdsQ1FVTjZRamRETEVWQlFVOVpMRk5CUVZORExGTkJRVk5ETEV0QlFVc3NZVUZCWTJ0Q0xFVkJRekZEZGtNc1JVRkJSVFJETEUxQlFVMURMRXRCUVVzc01FSkJTV0pXTEVsQlIwWTVRaXhGUVVGWFlTeFRRVUZUTEUxQlFVOXBRaXhIUVVNelFqVkNMRVZCUVU5WkxGTkJRVk5ETEZOQlFWTkRMRXRCUVVzc1dVRkROVUpvUWl4RlFVRlhZU3hUUVVGVExFOUJRVTlFTEZWQlJ6TkNiVUlzU1VGRlJqbENMRVZCUVdkQ1dTeFRRVUZUTEUxQlFVOXJRaXhIUVVOb1F6ZENMRVZCUVU5WkxGTkJRVk5ETEZOQlFWTkRMRXRCUVVzc2FVSkJRelZDWml4RlFVRm5RbGtzVTBGQlV5eFBRVUZQUkN4WlFVMHhReXhSUVVGVGFVSXNTMEZEVUN4SFFVRkpiVUlzUjBGQlR5eExRVUZOUXl4RlFVRmhMRXRCUXpGQ1F5eEhRVUZUTEVWQlFVOURMRWRCUVZjc1JVRkJUME1zUjBGQll5eEZRVU5vUkVNc1JVRkJUeXhIUVVGSlF5eEZRVUZYTEVkQlFVbERMRVZCUVZrc1IwRkJTVU1zUlVGQllTeEhRVU4yUkVNc1JVRkJVU3hIUVVGSk1VSXNSVUZCYVVJc1IwRkROMEl5UWl4RlFVRmhMMFFzUlVGQlJTeGhRVU5tWjBVc1JVRkJhMEpvUlN4RlFVRkZMSEZDUVVOd1FtbEZMRVZCUVdGcVJTeEZRVUZGTEdGQlIyNUNRU3hIUVVGRkxHZENRVUZuUW1kRExFZEJRVWNzYjBKQlFYRkNMRmRCUTNoRGEwTXNUVUZIUm14RkxFVkJRVVVzSzBOQlFTdERaME1zUjBGQlJ5eHRRa0ZEYkVRc1YwRkRSV3RETEUxQlNVcHNSU3hGUVVGRkxHOUVRVU5EWjBNc1IwRkJSeXhoUVVGakxGZEJRMmhDYTBNc1RVRkxTbXhGTEVWQlFVVXNjMEpCUVhOQ2JVVXNWMEZCVjNwQ0xFdEJRVXNzVVVGQlVWWXNSMEZCUnl4UlFVRlRMRmRCUXpGRWEwTXNTVUZGUVdJc1JVRkJUemxETEVWQlFVOVpMRk5CUVZOcFJDeFZRVUZWUXl4clFrRkhOMEpvUWl4SFFVRXdRaXhKUVVGc1FrRXNSVUZCUzJsQ0xGZEJRMlpvUWl4RlFVRmhSQ3hGUVVGTFF5eFhRVWRrUVN4SFFVRnpReXhKUVVGNFFrRXNSVUZCVjJkQ0xGZEJSV01zVTBGQmNrTm9RaXhGUVVGWGFVSXNVVUZCVVVNc1pVRkZja0pxUWl4RlFVTjFReXhUUVVRNVFtdENMRTlCUVU5RExHbENRVUZwUW5CQ0xFVkJRVmtzVFVGRE1VTnhRaXhwUWtGQmFVSXNaMEpCUVRSQ0xFZEJRVThzUlVGRGRrUnVRaXhGUVVOelF5eFhRVVF6UW1sQ0xFOUJRVTlETEdsQ1FVRnBRbkJDTEVWQlFWa3NUVUZETlVOeFFpeHBRa0ZCYVVJc1pVRkJOa0lzUjBGQlR5eEZRVU40Ukd4Q0xFVkJRMmRGTEV0QlJHeEVaMElzVDBGQlQwTXNhVUpCUVdsQ2NFSXNSVUZCV1N4TlFVTXZRM0ZDTEdsQ1FVRnBRaXh0UWtGQmJVSkRMRkZCUVZFc1kwRkJjMElzUjBGQlR5eEZRVVUxUldJc1JVRkJWM1pFTEV0QlFVc3NiMEpCUVc5Q2NVVXNWMEZEYkVORExFdEJRVkYyUWl4RlFVTlNkMElzVDBGQlZYWkNMRVZCUTFaM1FpeFZRVUZoZGtJc1NVRkpaa01zUlVGQlQyVXNUMEZCVDBNc2FVSkJRV2xDY0VJc1JVRkJXU3hOUVVONFEzRkNMR2xDUVVGcFFpeGxRVVZvUW1wQ0xFZEJRMFoyUkN4RlFVRlpTeXhMUVVGTExIRkNRVUZ4UW5sRkxGRkJRVkYyUWl4SFFVbG9SRU1zUlVGQlYyTXNUMEZCVDBNc2FVSkJRV2xDY0VJc1JVRkJXU3hOUVVNMVEzRkNMR2xDUVVGcFFpeGhRVVZvUW1oQ0xFZEJRMFpMTEVWQlFXZENlRVFzUzBGQlN5eDVRa0ZEYkVJd1JTeFpRVUZaZGtJc1IwRkpha0pETEVWQlFWbGhMRTlCUVU5RExHbENRVUZwUW5CQ0xFVkJRVmtzVFVGRE4wTnhRaXhwUWtGQmFVSXNZMEZIY0VKbUxFVkJRVFpGTEV0QlFXcEZOVVFzUlVGQlJXMUdMRkZCUVZGMlFpeEhRVUZaTEU5QlFWRXNVMEZCVlN4UlFVRlRMRmxCUTNwRUxFOUJRVk5CTEVWQlJWUkJMRWRCUTBaTExFVkJRVmQ2UkN4TFFVRkxMRzlDUVVOaU5FVXNZVUZCWVhoQ0xFZEJTV3hDUXl4RlFVRmhOMFFzUlVGQlJYTkVMRWRCUVZrNVF5eExRVUZMTEdWQlF6bENVaXhGUVVGRmMwUXNSMEZCV1RsRExFdEJRVXNzWlVGQmFVSXNSVUZGZEVOU0xFVkJRVVVzZFVKQlFYVkNVU3hMUVVGTExEQkNRVU0xUW5GRUxFZEJSMFpETEVWQlFWRlhMRTlCUVU5RExHbENRVUZwUW5CQ0xFVkJRVmtzVFVGRGVrTnhRaXhwUWtGQmFVSXNVMEZEY0VKMlF5eEZRVUZwUW5GRExFOUJRVTlETEdsQ1FVRnBRbkJDTEVWQlFWa3NUVUZEYkVSeFFpeHBRa0ZCYVVJc2IwSkJSV2hDWWl4SFFVTkdla1FzUlVGQlYyRXNVMEZCVXl4TlFVRlBORU1zUjBGSGVrSXhRaXhIUVVOR09VSXNSVUZCWjBKWkxGTkJRVk1zVFVGQlQydENMRXRCUzJ4RGFrTXNSVUZCV1Vzc1MwRkJTeXh4UWtGQmNVSTJSU3hSUVVOMFEzSkNMRVZCUVdkQ2VFUXNTMEZCU3l4NVFrRkJlVUkyUlN4UlFVTTVRM1JDTEVWQlFWZDJSQ3hMUVVGTExHOUNRVUZ2UWpaRkxGRkJRM0JEY0VJc1JVRkJWM3BFTEV0QlFVc3NiMEpCUVc5Q05rVXNVVUZEY0VOeVJpeEZRVUZGTEhWQ1FVRjFRbEVzUzBGQlN5d3dRa0ZCTWtJc1MwRkRla1JJTEVWQlFWZGhMRk5CUVZNc1RVRkJUeXhSUVVNelFsb3NSVUZCWjBKWkxGTkJRVk1zVFVGQlR5eGhRVkV4UXl4UlFVRlRaMFFzUzBGRFVHeEZMRVZCUVVVc0swZEJSVU56Uml4WlFVRlpMRkZCUTJaMFJpeEZRVUZGTEdWQlFXVnJRaXhUUVVGVExGRkJRekZDYkVJc1JVRkJSU3h2UWtGQmIwSnJRaXhUUVVGVExGRkJReTlDYkVJc1JVRkJSU3h4UWtGQmNVSnJRaXhUUVVGVExGRkJhRkJzUXl4SFFVTkpaaXhIUVVGaFF5eEZRVUZyUWtNc1JVRkJXVU1zUlVGRk0wTlBMRVZCU0VGT0xFVkJRVk1zUzBGRlZEQkNMRWRCUVdsQ0xFVkJRVTl5UWl4SFFVRnBRaXhEUVdsUU4wTXNVVUZEUlRKRkxGTkJRVlVzU1VGRFZrTXNUMEZEUlhSR0xGbEJRV1VzU1VGRFptRXNWMEZCWXl4SlFVTmtVQ3hMUVVGUkxFdEJSVlppTEV0QlFVMUJJaXdpWm1sc1pTSTZJbVIwZGkxaWIyOTBjM1J5WVhBekxYZDVjMmxvZEcxc05TNXRhVzR1YW5NaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SXZLaUJuYkc5aVlXd2dVbWx6WlZacGMybHZiaXdnWVc1bmRXeGhjaXdnZEdsdWVXTnZiRzl5TENBa0lDb3ZYRzVjYmlobWRXNWpkR2x2YmlBb0tTQjdYRzRnSUZ3aWRYTmxJSE4wY21samRGd2lPMXh1WEc0Z0lHRnVaM1ZzWVhJdWJXOWtkV3hsS0Z3aWNtbHpaWFpwYzJsdmJpNTNhV1JuWlhRdVkyOXRiVzl1TG5kNWMybG9kRzFzTlZ3aUxDQmJYU2xjYmlBZ0lDQXVaR2x5WldOMGFYWmxLRndpZDNsemFXaDBiV3cxWENJc0lHWjFibU4wYVc5dUlDZ3BJSHRjYmlBZ0lDQWdJSFpoY2lCbFpHbDBiM0lnUFNCdWRXeHNPMXh1SUNBZ0lDQWdkbUZ5SUNSbWIyNTBVR2xqYTJWeUxDQWtZbUZqYTJkeWIzVnVaRU52Ykc5eUxDQWtkR1Y0ZEVOdmJHOXlMQ0FrYUdsbmFHeHBaMmgwUTI5c2IzSTdYRzRnSUNBZ0lDQjJZWElnYVhORlpHbDBiM0pNYjJGa1pXUWdQU0JtWVd4elpTd2dhWE5RWVhKaGJYTk1iMkZrWldRZ1BTQm1ZV3h6WlR0Y2JpQWdJQ0FnSUhaaGNpQndZWEpoYlhNN1hHNWNiaUFnSUNBZ0lHWjFibU4wYVc5dUlHeHBibXNvSkhOamIzQmxMQ0JsYkdWdFpXNTBLU0I3WEc0Z0lDQWdJQ0FnSUhaaGNpQmlZV05yWjNKdmRXNWtRMjlzYjNJZ1BTQnVkV3hzTENCeVoySmhJRDBnYm5Wc2JEdGNibHh1SUNBZ0lDQWdJQ0FrS0dWc1pXMWxiblFwTG5kNWMybG9kRzFzTlNoN1hHNGdJQ0FnSUNBZ0lDQWdYQ0p6ZEhsc1pYTm9aV1YwYzF3aU9pQWtjMk52Y0dVdWMzUjViR1Z6YUdWbGRITmNiaUFnSUNBZ0lDQWdmU2s3WEc1Y2JpQWdJQ0FnSUNBZ0pHWnZiblJRYVdOclpYSWdQU0FrS0Z3aUxtWnZiblF0Y0dsamEyVnlYQ0lwTzF4dUlDQWdJQ0FnSUNBa1ltRmphMmR5YjNWdVpFTnZiRzl5SUQwZ0pDaGNJaTVpWVdOclozSnZkVzVrTFdOdmJHOXlYQ0lwTzF4dUlDQWdJQ0FnSUNBa2RHVjRkRU52Ykc5eUlEMGdKQ2hjSWk1MFpYaDBMV052Ykc5eVhDSXBPMXh1SUNBZ0lDQWdJQ0FrYUdsbmFHeHBaMmgwUTI5c2IzSWdQU0FrS0Z3aUxtaHBaMmhzYVdkb2RDMWpiMnh2Y2x3aUtUdGNiaUFnSUNBZ0lDQWdaV1JwZEc5eUlEMGdKQ2hjSWlObFpHbDBZV0pzWlZ3aUtTNWtZWFJoS0Z3aWQzbHphV2gwYld3MVhDSXBMbVZrYVhSdmNqdGNibHh1SUNBZ0lDQWdJQ0F2THlCQlpHUWdaWFpsYm5RZ2FHRnVaR3hsY25NdVhHNGdJQ0FnSUNBZ0lDUnpZMjl3WlM0a2IyNG9YQ0pzYjJGa1FXUmthWFJwYjI1aGJGQmhjbUZ0YzF3aUxDQm1kVzVqZEdsdmJpQW9aU3dnWVdSa2FYUnBiMjVoYkZCaGNtRnRjeWtnZTF4dUlDQWdJQ0FnSUNBZ0lHbHpVR0Z5WVcxelRHOWhaR1ZrSUQwZ2RISjFaVHRjYmlBZ0lDQWdJQ0FnSUNCd1lYSmhiWE1nUFNCaFpHUnBkR2x2Ym1Gc1VHRnlZVzF6TzF4dVhHNGdJQ0FnSUNBZ0lDQWdaV1JwZEc5eUxuTmxkRlpoYkhWbEtHRmtaR2wwYVc5dVlXeFFZWEpoYlhNdVpHRjBZU2s3WEc1Y2JpQWdJQ0FnSUNBZ0lDQXZMeUJUWlhRZ1ltRmphMmR5YjNWdVpDQmpiMnh2Y2k1Y2JpQWdJQ0FnSUNBZ0lDQnBaaUFvWVdSa2FYUnBiMjVoYkZCaGNtRnRjeTVpWVdOclozSnZkVzVrS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrUTI5c2IzSWdQU0IwYVc1NVkyOXNiM0lvWVdSa2FYUnBiMjVoYkZCaGNtRnRjeTVpWVdOclozSnZkVzVrS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSEpuWW1FZ1BTQmlZV05yWjNKdmRXNWtRMjlzYjNJdWRHOVNaMklvS1R0Y2JseHVJQ0FnSUNBZ0lDQWdJQ0FnSkdKaFkydG5jbTkxYm1SRGIyeHZjaTV6Y0dWamRISjFiU2hjSW5ObGRGd2lMQ0JpWVdOclozSnZkVzVrUTI5c2IzSXBPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQmxaR2wwYjNJdVkyOXRjRzl6WlhJdVkyOXRiV0Z1WkhNdVpYaGxZeWhjSW1KaFkydG5jbTkxYm1SRGIyeHZjbHdpTENCeVoySmhMQ0JiZTF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUc1aGJXVTZJRndpWkdGMFlTMWlZV05yWjNKdmRXNWtMV052Ykc5eVhDSXNYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkbUZzZFdVNklHSmhZMnRuY205MWJtUkRiMnh2Y2k1MGIxSm5ZbE4wY21sdVp5Z3BYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lIMWRLVHRjYmlBZ0lDQWdJQ0FnSUNCOVhHNWNiaUFnSUNBZ0lDQWdJQ0JwYm1sMFJXUnBkRzl5S0NrN1hHNGdJQ0FnSUNBZ0lIMHBPMXh1WEc0Z0lDQWdJQ0FnSUNSelkyOXdaUzRrYjI0b1hDSmpiMnhzWldOMFFXUmthWFJwYjI1aGJGQmhjbUZ0YzF3aUxDQm1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a1EyOXNiM0lnUFNCbFpHbDBiM0l1WTI5dGNHOXpaWEl1Wkc5akxtSnZaSGxjYmlBZ0lDQWdJQ0FnSUNBZ0lDNW5aWFJCZEhSeWFXSjFkR1VvWENKa1lYUmhMV0poWTJ0bmNtOTFibVF0WTI5c2IzSmNJaWs3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWtjMk52Y0dVdUpIQmhjbVZ1ZEM1elpYUkJaR1JwZEdsdmJtRnNVR0Z5WVcwb1hDSmtZWFJoWENJc0lHVmthWFJ2Y2k1blpYUldZV3gxWlNncEtUdGNiaUFnSUNBZ0lDQWdJQ0FrYzJOdmNHVXVKSEJoY21WdWRDNXpaWFJCWkdScGRHbHZibUZzVUdGeVlXMG9YQ0ppWVdOclozSnZkVzVrWENJc1hHNGdJQ0FnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrUTI5c2IzSWdQeUJpWVdOclozSnZkVzVrUTI5c2IzSWdPaUJjSWx3aUtUdGNiaUFnSUNBZ0lDQWdmU2s3WEc1Y2JpQWdJQ0FnSUNBZ1pXUnBkRzl5TG05dUtGd2liRzloWkZ3aUxDQm1kVzVqZEdsdmJpZ3BJSHRjYmlBZ0lDQWdJQ0FnSUNCcGMwVmthWFJ2Y2t4dllXUmxaQ0E5SUhSeWRXVTdYRzRnSUNBZ0lDQWdJQ0FnWW1sdVpDZ3BPMXh1SUNBZ0lDQWdJQ0FnSUdsdWFYUkZaR2wwYjNJb0tUdGNiaUFnSUNBZ0lDQWdmU2s3WEc0Z0lDQWdJQ0I5WEc1Y2JpQWdJQ0FnSUdaMWJtTjBhVzl1SUdsdWFYUkZaR2wwYjNJb0tTQjdYRzRnSUNBZ0lDQWdJSFpoY2lCMFpYaDBRMjlzYjNJc0lHaHBaMmhzYVdkb2RFTnZiRzl5TzF4dUlDQWdJQ0FnSUNCMllYSWdjM1JoYm1SaGNtUkdiMjUwTENCbmIyOW5iR1ZHYjI1MExDQmpkWE4wYjIxR2IyNTBPMXh1WEc0Z0lDQWdJQ0FnSUdsbUlDaHBjMFZrYVhSdmNreHZZV1JsWkNBbUppQnBjMUJoY21GdGMweHZZV1JsWkNrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ1F1WldGamFDZ2tLRndpUEdScGRpOCtYQ0lwTG1oMGJXd29jR0Z5WVcxekxtUmhkR0VwTG1acGJtUW9YQ0p6Y0dGdVhDSXBMbUZrWkVKaFkyc29LU3dnWm5WdVkzUnBiMjRvS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0J6ZEdGdVpHRnlaRVp2Ym5RZ1BTQWtLSFJvYVhNcExtRjBkSElvWENKa1lYUmhMWE4wWVc1a1lYSmtMV1p2Ym5SY0lpazdYRzRnSUNBZ0lDQWdJQ0FnSUNCbmIyOW5iR1ZHYjI1MElEMGdKQ2gwYUdsektTNWhkSFJ5S0Z3aVpHRjBZUzFuYjI5bmJHVXRabTl1ZEZ3aUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUdOMWMzUnZiVVp2Ym5RZ1BTQWtLSFJvYVhNcExtRjBkSElvWENKa1lYUmhMV04xYzNSdmJTMW1iMjUwWENJcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZEdWNGRFTnZiRzl5SUQwZ0pDaDBhR2x6S1M1aGRIUnlLRndpWkdGMFlTMTBaWGgwTFdOdmJHOXlYQ0lwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdhR2xuYUd4cFoyaDBRMjlzYjNJZ1BTQWtLSFJvYVhNcExtRjBkSElvWENKa1lYUmhMV2hwWjJoc2FXZG9kQzFqYjJ4dmNsd2lLVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdMeThnUVdSa0lFTlRVeUJtYjNJZ2MzUmhibVJoY21RZ1ptOXVkSE11WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYzNSaGJtUmhjbVJHYjI1MEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lHVmthWFJ2Y2k1amIyMXdiM05sY2k1amIyMXRZVzVrY3k1bGVHVmpLRndpYzNSaGJtUmhjbVJHYjI1MFhDSXNJSE4wWVc1a1lYSmtSbTl1ZEN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa0tIUm9hWE1wTG1GMGRISW9YQ0prWVhSaExYTjBZVzVrWVhKa0xXWnZiblF0Wm1GdGFXeDVYQ0lwS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdMeThnVEc5aFpDQmhibVFnWVdSa0lFTlRVeUJtYjNJZ1IyOXZaMnhsSUdadmJuUnpMbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLR2R2YjJkc1pVWnZiblFwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdadmJuUlFhV05yWlhJdVpHRjBZU2hjSW5Cc2RXZHBibDltYjI1MFVHbGphMlZ5WENJcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xtRmtaRWR2YjJkc1pVWnZiblFvWjI5dloyeGxSbTl1ZEN3Z1ptRnNjMlVwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dklGUm9hWE1nZDI5dUozUWdZV1JrSUdFZ2JtVjNJSE53WVc0Z2RHRm5JR0psWTJGMWMyVWdZU0J5WVc1blpTQjNhV3hzSUc1dmRDQm9ZWFpsWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUdKbFpXNGdjMlZzWldOMFpXUXNJSGRvYVdOb0lHbHpJSGRvWVhRZ2QyVWdkMkZ1ZEM1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnWldScGRHOXlMbU52YlhCdmMyVnlMbU52YlcxaGJtUnpMbVY0WldNb1hDSm5iMjluYkdWR2IyNTBYQ0lzSUdkdmIyZHNaVVp2Ym5RcE8xeHVJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0F2THlCTWIyRmtJR0Z1WkNCaFpHUWdRMU5USUdadmNpQmpkWE4wYjIwZ1ptOXVkSE11WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvWTNWemRHOXRSbTl1ZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNCU2FYTmxWbWx6YVc5dUxrTnZiVzF2Ymk1VmRHbHNhWFJwWlhNdWJHOWhaRU4xYzNSdmJVWnZiblFvWTNWemRHOXRSbTl1ZEN4Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa0tIUm9hWE1wTG1GMGRISW9YQ0prWVhSaExXTjFjM1J2YlMxbWIyNTBMWFZ5YkZ3aUtTeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmxaR2wwYjNJdVkyOXRjRzl6WlhJdWFXWnlZVzFsTG1OdmJuUmxiblJFYjJOMWJXVnVkQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJR1ZrYVhSdmNpNWpiMjF3YjNObGNpNWpiMjF0WVc1a2N5NWxlR1ZqS0Z3aVkzVnpkRzl0Um05dWRGd2lMQ0JqZFhOMGIyMUdiMjUwTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNRb2RHaHBjeWt1WVhSMGNpaGNJbVJoZEdFdFkzVnpkRzl0TFdadmJuUXRkWEpzWENJcEtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUgxY2JseHVJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1FXUmtJRU5UVXlCbWIzSWdZMjlzYjNKekxseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIUmxlSFJEYjJ4dmNpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQXZMeUJWYzJVZ1kyOXNiM0lnY0dsamEyVnlJR0Z6SUdGdUlHbHVkR1Z5YldWa2FXRnllU0IwYnlCblpYUWdkR2hsSUdOdmJHOXlJR0Z6SUdGdVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dklHOWlhbVZqZENCbWIzSWdjR0Z6YzJsdVp5QjBieUIwYUdVZ1pXUnBkRzl5SUdOdmJXMWhibVF1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ1IwWlhoMFEyOXNiM0l1YzNCbFkzUnlkVzBvWENKelpYUmNJaXdnZEdWNGRFTnZiRzl5S1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnWldScGRHOXlMbU52YlhCdmMyVnlMbU52YlcxaGJtUnpMbVY0WldNb1hDSjBaWGgwUTI5c2IzSmNJaXhjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrZEdWNGRFTnZiRzl5TG5Od1pXTjBjblZ0S0Z3aVoyVjBYQ0lwTG5SdlVtZGlLQ2twTzF4dUlDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvYUdsbmFHeHBaMmgwUTI5c2IzSXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdMeThnVlhObElHTnZiRzl5SUhCcFkydGxjaUJoY3lCaGJpQnBiblJsY20xbFpHbGhjbmt1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ1JvYVdkb2JHbG5hSFJEYjJ4dmNpNXpjR1ZqZEhKMWJTaGNJbk5sZEZ3aUxDQm9hV2RvYkdsbmFIUkRiMnh2Y2lrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUdWa2FYUnZjaTVqYjIxd2IzTmxjaTVqYjIxdFlXNWtjeTVsZUdWaktGd2lhR2xuYUd4cFoyaDBRMjlzYjNKY0lpeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWthR2xuYUd4cFoyaDBRMjlzYjNJdWMzQmxZM1J5ZFcwb1hDSm5aWFJjSWlrdWRHOVNaMklvS1NrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ2ZTazdYRzRnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJSDFjYmx4dUlDQWdJQ0FnWm5WdVkzUnBiMjRnWW1sdVpDZ3BJSHRjYmlBZ0lDQWdJQ0FnZG1GeUlHNXZaR1VnUFNCdWRXeHNMQ0J3WVhKbGJuUk9iMlJsSUQwZ2JuVnNiRHRjYmlBZ0lDQWdJQ0FnZG1GeUlHbHpRbTlzWkNBOUlHWmhiSE5sTENCcGMwbDBZV3hwWXlBOUlHWmhiSE5sTENCcGMxVnVaR1Z5YkdsdVpTQTlJR1poYkhObE8xeHVJQ0FnSUNBZ0lDQjJZWElnWm05dWRDQTlJRndpWENJc0lHWnZiblJUYVhwbElEMGdYQ0pjSWl3Z1lXeHBaMjV0Wlc1MElEMGdYQ0pjSWl3Z2JHbHVaVWhsYVdkb2RDQTlJRndpWENJN1hHNGdJQ0FnSUNBZ0lIWmhjaUJqYjJ4dmNpQTlJRndpWENJc0lHaHBaMmhzYVdkb2RFTnZiRzl5SUQwZ1hDSmNJanRjYmlBZ0lDQWdJQ0FnZG1GeUlDUm1iMjUwVTNSNWJHVWdQU0FrS0Z3aUxtVnRjR2hoYzJselhDSXBYRzRnSUNBZ0lDQWdJSFpoY2lBa1ptOXVkRk5wZW1WUWFXTnJaWElnUFNBa0tGd2lMbVp2Ym5RdGMybDZaUzF3YVdOclpYSmNJaWs3WEc0Z0lDQWdJQ0FnSUhaaGNpQWtZV3hwWjI1dFpXNTBJRDBnSkNoY0lpNWhiR2xuYm0xbGJuUmNJaWs3WEc1Y2JpQWdJQ0FnSUNBZ0x5OGdRV1JrSUdWMlpXNTBJR2hoYm1Sc1pYSnpJSFJ2SUhSdmIyeGlZWElnWVc1a0lHVmthWFJ2Y2k1Y2JpQWdJQ0FnSUNBZ0pDaGNJaTVtYjI1MExYQnBZMnRsY2x3aUtTNXZiaWhjSW5Ob2IzY3VZbVpvYzJWc1pXTjBZbTk0WENJc0lHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lDQWdJQ0FnSUdOc2IzTmxSSEp2Y0dSdmQyNXpLQ2s3WEc0Z0lDQWdJQ0FnSUgwcE8xeHVYRzRnSUNBZ0lDQWdJQ1FvWENJdVptOXVkQzF6YVhwbExYQnBZMnRsY2l3Z0xteHBibVV0YUdWcFoyaDBMQ0F1WVd4cFoyNXRaVzUwWENJcExtOXVLRndpYzJodmR5NWljeTVrY205d1pHOTNibHdpTEZ4dUlDQWdJQ0FnSUNBZ0lHWjFibU4wYVc5dUtDa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ1kyeHZjMlZFY205d1pHOTNibk1vS1R0Y2JpQWdJQ0FnSUNBZ0lDQjlYRzRnSUNBZ0lDQWdJQ2s3WEc1Y2JpQWdJQ0FnSUNBZ0pDaGNJaTUwWlhoMExXTnZiRzl5TENBdWFHbG5hR3hwWjJoMExXTnZiRzl5TENBdVltRmphMmR5YjNWdVpDMWpiMnh2Y2x3aUtWeHVJQ0FnSUNBZ0lDQWdJQzV2YmloY0ltSmxabTl5WlZOb2IzZGNJaXdnWm5WdVkzUnBiMjRvS1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0JqYkc5elpVUnliM0JrYjNkdWN5Z3BPMXh1SUNBZ0lDQWdJQ0FnSUgxY2JpQWdJQ0FnSUNBZ0tUdGNibHh1SUNBZ0lDQWdJQ0F2THlCWGFHVnVJSFJvWlNCMWMyVnlJR05zYVdOcmN5QnBiaUIwYUdVZ1pXUnBkRzl5TENCelpYUWdkRzl2YkdKaGNpQjBieUJ0WVhSamFDQjBaWGgwSUhOMGVXeGxjeTVjYmlBZ0lDQWdJQ0FnSkNoY0lpNTNlWE5wYUhSdGJEVXRjMkZ1WkdKdmVGd2lLUzVqYjI1MFpXNTBjeWdwTG1acGJtUW9YQ0ppYjJSNVhDSXBMbTl1S0Z3aVkyeHBZMnRjSWl3Z1puVnVZM1JwYjI0b0tTQjdYRzRnSUNBZ0lDQWdJQ0FnWTJ4dmMyVkVjbTl3Wkc5M2JuTW9LVHRjYmx4dUlDQWdJQ0FnSUNBZ0lHNXZaR1VnUFNCbFpHbDBiM0l1WTI5dGNHOXpaWEl1YzJWc1pXTjBhVzl1TG1kbGRGTmxiR1ZqZEdWa1RtOWtaU2dwTzF4dVhHNGdJQ0FnSUNBZ0lDQWdMeThnVkdobElITmxiR1ZqZEdWa0lHNXZaR1VnYVhNZ1lTQjBaWGgwSUc1dlpHVXVYRzRnSUNBZ0lDQWdJQ0FnYVdZZ0tHNXZaR1VnSmlZZ2JtOWtaUzV1YjJSbFZIbHdaU0E5UFQwZ015a2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ2NHRnlaVzUwVG05a1pTQTlJRzV2WkdVdWNHRnlaVzUwVG05a1pUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0x5OGdWR2hsSUhCaGNtVnVkQ0J1YjJSbElHbHpJR0Z1SUdWc1pXMWxiblF1WEc0Z0lDQWdJQ0FnSUNBZ0lDQnBaaUFvY0dGeVpXNTBUbTlrWlNBbUppQndZWEpsYm5ST2IyUmxMbTV2WkdWVWVYQmxJRDA5UFNBeEtTQjdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJRlJvWlNCd1lYSmxiblFnYm05a1pTQnBjeUJ1YjNRZ2RHaGxJR1ZrYVhSdmNpQmxiR1Z0Wlc1MElHbDBjMlZzWmk1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tIQmhjbVZ1ZEU1dlpHVXVkR0ZuVG1GdFpTNTBiMHh2ZDJWeVEyRnpaU2dwSUNFOVBTQmNJbUp2WkhsY0lpa2dlMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUVadmJuUWdVM1I1YkdWY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGMwSnZiR1FnUFNCM2FXNWtiM2N1WjJWMFEyOXRjSFYwWldSVGRIbHNaU2h3WVhKbGJuUk9iMlJsTENCdWRXeHNLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTG1kbGRGQnliM0JsY25SNVZtRnNkV1VvWENKbWIyNTBMWGRsYVdkb2RGd2lLU0E5UFQwZ1hDSmliMnhrWENJZ1B5QjBjblZsSURvZ1ptRnNjMlU3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVhOSmRHRnNhV01nUFNCM2FXNWtiM2N1WjJWMFEyOXRjSFYwWldSVGRIbHNaU2h3WVhKbGJuUk9iMlJsTENCdWRXeHNLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTG1kbGRGQnliM0JsY25SNVZtRnNkV1VvWENKbWIyNTBMWE4wZVd4bFhDSXBJRDA5UFNCY0ltbDBZV3hwWTF3aUlEOGdkSEoxWlNBNklHWmhiSE5sTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdselZXNWtaWEpzYVc1bElEMGdkMmx1Wkc5M0xtZGxkRU52YlhCMWRHVmtVM1I1YkdVb2NHRnlaVzUwVG05a1pTd2diblZzYkNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNW5aWFJRY205d1pYSjBlVlpoYkhWbEtGd2lkR1Y0ZEMxa1pXTnZjbUYwYVc5dVhDSXBMbWx1WkdWNFQyWW9YQ0oxYm1SbGNteHBibVZjSWlrZ0lUMDlJQzB4SUQ4Z2RISjFaU0E2SUdaaGJITmxPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdadmJuUlRkSGxzWlM1a1lYUmhLRndpY0d4MVoybHVYMlp2Ym5SVGRIbHNaVndpS1M1elpYUlRkSGxzWlhNb2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0ppYjJ4a1hDSTZJR2x6UW05c1pDeGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpYVhSaGJHbGpYQ0k2SUdselNYUmhiR2xqTEZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSjFibVJsY214cGJtVmNJam9nYVhOVmJtUmxjbXhwYm1WY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCOUtUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUVadmJuUmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1iMjUwSUQwZ2QybHVaRzkzTG1kbGRFTnZiWEIxZEdWa1UzUjViR1VvY0dGeVpXNTBUbTlrWlN3Z2JuVnNiQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1blpYUlFjbTl3WlhKMGVWWmhiSFZsS0Z3aVptOXVkQzFtWVcxcGJIbGNJaWs3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9abTl1ZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKR1p2Ym5SUWFXTnJaWEl1WkdGMFlTaGNJbkJzZFdkcGJsOW1iMjUwVUdsamEyVnlYQ0lwTG5ObGRFWnZiblFvWm05dWRDazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTHk4Z1JtOXVkQ0J6YVhwbFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1ptOXVkRk5wZW1VZ1BTQjNhVzVrYjNjdVoyVjBRMjl0Y0hWMFpXUlRkSGxzWlNod1lYSmxiblJPYjJSbExDQnVkV3hzS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xtZGxkRkJ5YjNCbGNuUjVWbUZzZFdVb1hDSm1iMjUwTFhOcGVtVmNJaWs3WEc1Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcFppQW9abTl1ZEZOcGVtVXBJSHRjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSbWIyNTBVMmw2WlZCcFkydGxjaTVrWVhSaEtGd2ljR3gxWjJsdVgyWnZiblJUYVhwbFVHbGphMlZ5WENJcFhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzV6WlhSR2IyNTBVMmw2WlNobWIyNTBVMmw2WlNrN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMeThnUVd4cFoyNXRaVzUwWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVd4cFoyNXRaVzUwSUQwZ2QybHVaRzkzTG1kbGRFTnZiWEIxZEdWa1UzUjViR1VvY0dGeVpXNTBUbTlrWlN3Z2JuVnNiQ2xjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1blpYUlFjbTl3WlhKMGVWWmhiSFZsS0Z3aWRHVjRkQzFoYkdsbmJsd2lLVHRjYmx4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM4dklFTm9aV05ySUdsbUlHRnNhV2R1YldWdWRDQnBjeUJ2Ym1VZ2IyWWdkR2hsSUhOMWNIQnZjblJsWkNCMllXeDFaWE11WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWVd4cFoyNXRaVzUwSUQwZ0pDNXBia0Z5Y21GNUtHRnNhV2R1YldWdWRDd2dXMXdpYkdWbWRGd2lMQ0JjSW1ObGJuUmxjbHdpTENCY0luSnBaMmgwWENJc0lGd2lhblZ6ZEdsbWVWd2lYU2tnUFQwOUlDMHhYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0EvSUZ3aWJHVm1kRndpSURvZ1lXeHBaMjV0Wlc1ME8xeHVYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhV1lnS0dGc2FXZHViV1Z1ZENrZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKR0ZzYVdkdWJXVnVkQzVrWVhSaEtGd2ljR3gxWjJsdVgyRnNhV2R1YldWdWRGd2lLVnh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBdWMyVjBRV3hwWjI1dFpXNTBLR0ZzYVdkdWJXVnVkQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0x5OGdUR2x1WlNCSVpXbG5hSFJjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JzYVc1bFNHVnBaMmgwSUQwZ0pDaHdZWEpsYm5ST2IyUmxLUzVrWVhSaEtGd2liR2x1WlMxb1pXbG5hSFJjSWlrZ1AxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKQ2h3WVhKbGJuUk9iMlJsS1M1a1lYUmhLRndpYkdsdVpTMW9aV2xuYUhSY0lpa2dPaUF4TzF4dVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pDaGNJaTVzYVc1bExXaGxhV2RvZENCaWRYUjBiMjVjSWlrdVpHRjBZU2hjSW5kNWMybG9kRzFzTlMxamIyMXRZVzVrTFhaaGJIVmxYQ0lzWEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCc2FXNWxTR1ZwWjJoMEtUdGNibHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzh2SUVOdmJHOXljMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ykc5eUlEMGdkMmx1Wkc5M0xtZGxkRU52YlhCMWRHVmtVM1I1YkdVb2NHRnlaVzUwVG05a1pTd2diblZzYkNsY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNW5aWFJRY205d1pYSjBlVlpoYkhWbEtGd2lZMjlzYjNKY0lpazdYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdhR2xuYUd4cFoyaDBRMjlzYjNJZ1BTQjNhVzVrYjNjdVoyVjBRMjl0Y0hWMFpXUlRkSGxzWlNod1lYSmxiblJPYjJSbExDQnVkV3hzS1Z4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0xtZGxkRkJ5YjNCbGNuUjVWbUZzZFdVb1hDSmlZV05yWjNKdmRXNWtMV052Ykc5eVhDSXBPMXh1WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHTnZiRzl5S1NCN1hHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWtkR1Y0ZEVOdmJHOXlMbk53WldOMGNuVnRLRndpYzJWMFhDSXNJR052Ykc5eUtUdGNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYRzVjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JwWmlBb2FHbG5hR3hwWjJoMFEyOXNiM0lwSUh0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUm9hV2RvYkdsbmFIUkRiMnh2Y2k1emNHVmpkSEoxYlNoY0luTmxkRndpTENCb2FXZG9iR2xuYUhSRGIyeHZjaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZlZ4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVZ2UxeHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDOHZJRkpsYzJWMElHRnNiQ0IwYjI5c1ltRnlJR2xqYjI1ekxseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUm1iMjUwVUdsamEyVnlMbVJoZEdFb1hDSndiSFZuYVc1ZlptOXVkRkJwWTJ0bGNsd2lLUzV5WlhObGRDZ3BPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1JtYjI1MFUybDZaVkJwWTJ0bGNpNWtZWFJoS0Z3aWNHeDFaMmx1WDJadmJuUlRhWHBsVUdsamEyVnlYQ0lwTG5KbGMyVjBLQ2s3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdadmJuUlRkSGxzWlM1a1lYUmhLRndpY0d4MVoybHVYMlp2Ym5SVGRIbHNaVndpS1M1eVpYTmxkQ2dwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSaGJHbG5ibTFsYm5RdVpHRjBZU2hjSW5Cc2RXZHBibDloYkdsbmJtMWxiblJjSWlrdWNtVnpaWFFvS1R0Y2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa0tGd2lMbXhwYm1VdGFHVnBaMmgwSUdKMWRIUnZibHdpS1M1a1lYUmhLRndpZDNsemFXaDBiV3cxTFdOdmJXMWhibVF0ZG1Gc2RXVmNJaXdnWENJeFhDSXBPMXh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1IwWlhoMFEyOXNiM0l1YzNCbFkzUnlkVzBvWENKelpYUmNJaXdnWENJak1EQXdYQ0lwTzF4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSb2FXZG9iR2xuYUhSRGIyeHZjaTV6Y0dWamRISjFiU2hjSW5ObGRGd2lMQ0JjSWlObVptWmNJaWs3WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSDFjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNiaUFnSUNBZ0lDQWdJQ0I5WEc0Z0lDQWdJQ0FnSUgwcE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQXZMeUJEYkc5elpTQmhiR3dnYjNCbGJpQmtjbTl3Wkc5M2JuTXVYRzRnSUNBZ0lDQm1kVzVqZEdsdmJpQmpiRzl6WlVSeWIzQmtiM2R1Y3lncElIdGNiaUFnSUNBZ0lDQWdKQ2hjSWk1dmNHVnVMbUZzYVdkdWJXVnVkQ3dnTG1admJuUXRjR2xqYTJWeUlDNXZjR1Z1TG1KbWFDMXpaV3hsWTNSaWIzZ3NJRndpSUN0Y2JpQWdJQ0FnSUNBZ0lDQmNJaTVtYjI1MExYTnBlbVV0Y0dsamEyVnlJQzV2Y0dWdUxtSm1hQzFtYjI1MGMybDZaWE1zSUM1dmNHVnVMbXhwYm1VdGFHVnBaMmgwWENJcFhHNGdJQ0FnSUNBZ0lDQWdMbkpsYlc5MlpVTnNZWE56S0Z3aWIzQmxibHdpS1R0Y2JpQWdJQ0FnSUNBZ0pDaGNJaTUwWlhoMExXTnZiRzl5WENJcExuTndaV04wY25WdEtGd2lhR2xrWlZ3aUtUdGNiaUFnSUNBZ0lDQWdKQ2hjSWk1b2FXZG9iR2xuYUhRdFkyOXNiM0pjSWlrdWMzQmxZM1J5ZFcwb1hDSm9hV1JsWENJcE8xeHVJQ0FnSUNBZ0lDQWtLRndpTG1KaFkydG5jbTkxYm1RdFkyOXNiM0pjSWlrdWMzQmxZM1J5ZFcwb1hDSm9hV1JsWENJcE8xeHVJQ0FnSUNBZ2ZWeHVYRzRnSUNBZ0lDQnlaWFIxY200Z2UxeHVJQ0FnSUNBZ0lDQnlaWE4wY21samREb2dYQ0pCWENJc1hHNGdJQ0FnSUNBZ0lITmpiM0JsT2lCN1hHNGdJQ0FnSUNBZ0lDQWdYQ0p6ZEhsc1pYTm9aV1YwYzF3aU9pQmNJajFjSWl4Y2JpQWdJQ0FnSUNBZ0lDQmNJbUpoWTJ0bmNtOTFibVJjSWpvZ1hDSTlYQ0lzWEc0Z0lDQWdJQ0FnSUNBZ1hDSmtZWFJoWENJNklGd2lQVndpWEc0Z0lDQWdJQ0FnSUgwc1hHNGdJQ0FnSUNBZ0lHeHBibXM2SUd4cGJtdGNiaUFnSUNBZ0lIMDdYRzRnSUNBZ2ZTazdYRzU5S0NrcE8xeHVJbDBzSW5OdmRYSmpaVkp2YjNRaU9pSXZjMjkxY21ObEx5SjlcbnZhciBSaXNlVmlzaW9uID0gUmlzZVZpc2lvbiB8fCB7fTtcblxuUmlzZVZpc2lvbi5Db21tb24gPSBSaXNlVmlzaW9uLkNvbW1vbiB8fCB7fTtcblxuUmlzZVZpc2lvbi5Db21tb24uVXRpbGl0aWVzID0gKGZ1bmN0aW9uKCkge1xuXG4gIGZ1bmN0aW9uIGdldEZvbnRDc3NTdHlsZShjbGFzc05hbWUsIGZvbnRPYmopIHtcbiAgICB2YXIgZmFtaWx5ID0gXCJmb250LWZhbWlseTpcIiArIGZvbnRPYmouZm9udC5mYW1pbHkgKyBcIjsgXCI7XG4gICAgdmFyIGNvbG9yID0gXCJjb2xvcjogXCIgKyBmb250T2JqLmNvbG9yICsgXCI7IFwiO1xuICAgIHZhciBzaXplID0gXCJmb250LXNpemU6IFwiICsgZm9udE9iai5zaXplICsgXCJweDsgXCI7XG4gICAgdmFyIHdlaWdodCA9IFwiZm9udC13ZWlnaHQ6IFwiICsgKGZvbnRPYmouYm9sZCA/IFwiYm9sZFwiIDogXCJub3JtYWxcIikgKyBcIjsgXCI7XG4gICAgdmFyIGl0YWxpYyA9IFwiZm9udC1zdHlsZTogXCIgKyAoZm9udE9iai5pdGFsaWMgPyBcIml0YWxpY1wiIDogXCJub3JtYWxcIikgKyBcIjsgXCI7XG4gICAgdmFyIHVuZGVybGluZSA9IFwidGV4dC1kZWNvcmF0aW9uOiBcIiArIChmb250T2JqLnVuZGVybGluZSA/IFwidW5kZXJsaW5lXCIgOiBcIm5vbmVcIikgKyBcIjsgXCI7XG4gICAgdmFyIGhpZ2hsaWdodCA9IFwiYmFja2dyb3VuZC1jb2xvcjogXCIgKyBmb250T2JqLmhpZ2hsaWdodENvbG9yICsgXCI7IFwiO1xuXG4gICAgcmV0dXJuIFwiLlwiICsgY2xhc3NOYW1lICsgXCIge1wiICsgZmFtaWx5ICsgY29sb3IgKyBzaXplICsgd2VpZ2h0ICsgaXRhbGljICsgdW5kZXJsaW5lICsgaGlnaGxpZ2h0ICsgXCJ9XCI7XG4gIH1cblxuICBmdW5jdGlvbiBhZGRDU1NSdWxlcyhydWxlcykge1xuICAgIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcblxuICAgIGZvciAodmFyIGkgPSAwLCBsZW5ndGggPSBydWxlcy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUocnVsZXNbaV0pKTtcbiAgICB9XG5cbiAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIC8qXG4gICAqIExvYWRzIEdvb2dsZSBvciBjdXN0b20gZm9udHMsIGlmIGFwcGxpY2FibGUsIGFuZCBpbmplY3RzIENTUyBzdHlsZXNcbiAgICogaW50byB0aGUgaGVhZCBvZiB0aGUgZG9jdW1lbnQuXG4gICAqXG4gICAqIEBwYXJhbSAgICBhcnJheSAgICBzZXR0aW5ncyAgICBBcnJheSBvZiBvYmplY3RzIHdpdGggdGhlIGZvbGxvd2luZyBmb3JtOlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFt7XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImNsYXNzXCI6IFwiZGF0ZVwiLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJmb250U2V0dGluZ1wiOiB7XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9sZDogdHJ1ZSxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogXCJibGFja1wiLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQ6IHtcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhbWlseTogXCJBa3JvbmltXCIsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250OiBcIkFrcm9uaW1cIixcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVmVyZGFuYVwiLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJnb29nbGVcIixcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVybDogXCJodHRwOi8vY3VzdG9tLWZvbnQtdXJsXCJcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpZ2hsaWdodENvbG9yOiBcInRyYW5zcGFyZW50XCIsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRhbGljOiBmYWxzZSxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplOiBcIjIwXCIsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdW5kZXJsaW5lOiBmYWxzZVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1dXG4gICAqXG4gICAqICAgICAgICAgICBvYmplY3QgICBjb250ZW50RG9jICAgIERvY3VtZW50IG9iamVjdCBpbnRvIHdoaWNoIHRvIGluamVjdCBzdHlsZXNcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kIGxvYWQgZm9udHMgKG9wdGlvbmFsKS5cbiAgICovXG4gIGZ1bmN0aW9uIGxvYWRGb250cyhzZXR0aW5ncywgY29udGVudERvYykge1xuICAgIHNldHRpbmdzLmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xuICAgICAgaWYgKGl0ZW0uY2xhc3MgJiYgaXRlbS5mb250U2V0dGluZykge1xuICAgICAgICBhZGRDU1NSdWxlcyhbIGdldEZvbnRDc3NTdHlsZShpdGVtLmNsYXNzLCBpdGVtLmZvbnRTZXR0aW5nKSBdKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW0uZm9udFNldHRpbmcuZm9udC50eXBlKSB7XG4gICAgICAgIGlmIChpdGVtLmZvbnRTZXR0aW5nLmZvbnQudHlwZSA9PT0gXCJjdXN0b21cIiAmJiBpdGVtLmZvbnRTZXR0aW5nLmZvbnQuZmFtaWx5ICYmXG4gICAgICAgICAgaXRlbS5mb250U2V0dGluZy5mb250LnVybCkge1xuICAgICAgICAgIGxvYWRDdXN0b21Gb250KGl0ZW0uZm9udFNldHRpbmcuZm9udC5mYW1pbHksIGl0ZW0uZm9udFNldHRpbmcuZm9udC51cmwsXG4gICAgICAgICAgICBjb250ZW50RG9jKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpdGVtLmZvbnRTZXR0aW5nLmZvbnQudHlwZSA9PT0gXCJnb29nbGVcIiAmJiBpdGVtLmZvbnRTZXR0aW5nLmZvbnQuZmFtaWx5KSB7XG4gICAgICAgICAgbG9hZEdvb2dsZUZvbnQoaXRlbS5mb250U2V0dGluZy5mb250LmZhbWlseSwgY29udGVudERvYyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxvYWRDdXN0b21Gb250KGZhbWlseSwgdXJsLCBjb250ZW50RG9jKSB7XG4gICAgdmFyIHNoZWV0ID0gbnVsbDtcbiAgICB2YXIgcnVsZSA9IFwiZm9udC1mYW1pbHk6IFwiICsgZmFtaWx5ICsgXCI7IFwiICsgXCJzcmM6IHVybCgnXCIgKyB1cmwgKyBcIicpO1wiO1xuXG4gICAgY29udGVudERvYyA9IGNvbnRlbnREb2MgfHwgZG9jdW1lbnQ7XG5cbiAgICBzaGVldCA9IGNvbnRlbnREb2Muc3R5bGVTaGVldHNbMF07XG5cbiAgICBpZiAoc2hlZXQgIT09IG51bGwpIHtcbiAgICAgIHNoZWV0LmFkZFJ1bGUoXCJAZm9udC1mYWNlXCIsIHJ1bGUpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGxvYWRHb29nbGVGb250KGZhbWlseSwgY29udGVudERvYykge1xuICAgIHZhciBzdHlsZXNoZWV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XG5cbiAgICBjb250ZW50RG9jID0gY29udGVudERvYyB8fCBkb2N1bWVudDtcblxuICAgIHN0eWxlc2hlZXQuc2V0QXR0cmlidXRlKFwicmVsXCIsIFwic3R5bGVzaGVldFwiKTtcbiAgICBzdHlsZXNoZWV0LnNldEF0dHJpYnV0ZShcInR5cGVcIiwgXCJ0ZXh0L2Nzc1wiKTtcbiAgICBzdHlsZXNoZWV0LnNldEF0dHJpYnV0ZShcImhyZWZcIiwgXCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9XCIgK1xuICAgICAgZmFtaWx5KTtcblxuICAgIGlmIChzdHlsZXNoZWV0ICE9PSBudWxsKSB7XG4gICAgICBjb250ZW50RG9jLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXS5hcHBlbmRDaGlsZChzdHlsZXNoZWV0KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwcmVsb2FkSW1hZ2VzKHVybHMpIHtcbiAgICB2YXIgbGVuZ3RoID0gdXJscy5sZW5ndGgsXG4gICAgICBpbWFnZXMgPSBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIGltYWdlc1tpXSA9IG5ldyBJbWFnZSgpO1xuICAgICAgaW1hZ2VzW2ldLnNyYyA9IHVybHNbaV07XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0UXVlcnlQYXJhbWV0ZXIocGFyYW0pIHtcbiAgICB2YXIgcXVlcnkgPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoLnN1YnN0cmluZygxKSxcbiAgICAgIHZhcnMgPSBxdWVyeS5zcGxpdChcIiZcIiksXG4gICAgICBwYWlyO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBwYWlyID0gdmFyc1tpXS5zcGxpdChcIj1cIik7XG5cbiAgICAgIGlmIChwYWlyWzBdID09IHBhcmFtKSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQocGFpclsxXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGdldFF1ZXJ5UGFyYW1ldGVyOiBnZXRRdWVyeVBhcmFtZXRlcixcbiAgICBnZXRGb250Q3NzU3R5bGU6ICBnZXRGb250Q3NzU3R5bGUsXG4gICAgYWRkQ1NTUnVsZXM6ICAgICAgYWRkQ1NTUnVsZXMsXG4gICAgbG9hZEZvbnRzOiAgICAgICAgbG9hZEZvbnRzLFxuICAgIGxvYWRDdXN0b21Gb250OiAgIGxvYWRDdXN0b21Gb250LFxuICAgIGxvYWRHb29nbGVGb250OiAgIGxvYWRHb29nbGVGb250LFxuICAgIHByZWxvYWRJbWFnZXM6ICAgIHByZWxvYWRJbWFnZXNcbiAgfTtcbn0pKCk7XG5cblwidXNlIHN0cmljdFwiO1xuXG5hbmd1bGFyLm1vZHVsZShcInJpc2V2aXNpb24ud2lkZ2V0LnRleHQuY29uZmlnXCIsIFtdKVxuICAuY29uc3RhbnQoXCJzdHlsZXNoZWV0c1wiLCBcIi4uL2Rpc3QvY3NzL2VkaXRvci5taW4uY3NzXCIpO1xuXG5hbmd1bGFyLm1vZHVsZShcInJpc2V2aXNpb24uY29tbW9uLmkxOG4uY29uZmlnXCIsIFtdKVxuICAuY29uc3RhbnQoXCJMT0NBTEVTX1BSRUZJWFwiLCBcImxvY2FsZXMvdHJhbnNsYXRpb25fXCIpXG4gIC5jb25zdGFudChcIkxPQ0FMRVNfU1VGSVhcIiwgXCIuanNvblwiKTtcblxuYW5ndWxhci5tb2R1bGUoXCJyaXNldmlzaW9uLndpZGdldC50ZXh0LnNldHRpbmdzXCIsIFtcbiAgXCJyaXNldmlzaW9uLmNvbW1vbi5pMThuXCIsXG4gIFwicmlzZXZpc2lvbi53aWRnZXQudGV4dC5jb25maWdcIixcbiAgXCJyaXNldmlzaW9uLndpZGdldC5jb21tb25cIixcbiAgXCJyaXNldmlzaW9uLndpZGdldC5jb21tb24uc2Nyb2xsLXNldHRpbmdcIixcbiAgXCJyaXNldmlzaW9uLndpZGdldC5jb21tb24udG9vbHRpcFwiLFxuICBcInJpc2V2aXNpb24ud2lkZ2V0LmNvbW1vbi53aWRnZXQtYnV0dG9uLXRvb2xiYXJcIixcbiAgXCJyaXNldmlzaW9uLndpZGdldC5jb21tb24ud3lzaWh0bWw1XCJcbl0pO1xuXG5hbmd1bGFyLm1vZHVsZShcInJpc2V2aXNpb24ud2lkZ2V0LnRleHQuc2V0dGluZ3NcIilcbiAgLmNvbnRyb2xsZXIoXCJ0ZXh0U2V0dGluZ3NDb250cm9sbGVyXCIsIFtcIiRzY29wZVwiLCBcInN0eWxlc2hlZXRzXCIsXG4gICAgZnVuY3Rpb24gKCRzY29wZSwgc3R5bGVzaGVldHMpIHtcbiAgICAgICRzY29wZS5zdHlsZXNoZWV0cyA9IFtzdHlsZXNoZWV0c107XG4gICAgfVxuICBdKVxuICAudmFsdWUoXCJkZWZhdWx0U2V0dGluZ3NcIiwge1xuICAgIFwicGFyYW1zXCI6IHt9LFxuICAgIFwiYWRkaXRpb25hbFBhcmFtc1wiOiB7XG4gICAgICBcImRhdGFcIjogXCJcIixcbiAgICAgIFwiYmFja2dyb3VuZFwiOiBcIlwiLFxuICAgICAgXCJzY3JvbGxcIjoge31cbiAgICB9XG4gIH0pO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
